"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[336],{8336:(e,t,i)=>{i.d(t,{A:()=>c});var r=i(89379);const o=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://litlfred.github.io/sgex/schemas/dak-action-form.json","title":"DAK Action Selection Form","description":"Schema for the form allowing DAK Authors to choose between editing, forking, or creating a DAK","type":"object","properties":{"action":{"type":"string","enum":["edit","fork","create"],"title":"DAK Action","description":"Choose the action you want to perform with a DAK","enumTitles":["Edit Existing DAK","Fork Existing DAK","Create New DAK"]},"description":{"type":"object","properties":{"edit":{"type":"string","const":"Select and modify an existing DAK that you have permission to edit. Changes will be made directly to the repository."},"fork":{"type":"string","const":"Create a copy of an existing DAK in your own organization or account. You will be able to modify the forked version independently."},"create":{"type":"string","const":"Create a new DAK from the WHO SMART Guidelines template (smart-ig-empty). You\'ll configure basic parameters and start with a clean template."}}}},"required":["action"],"additionalProperties":false,"uiSchema":{"action":{"ui:widget":"radio","ui:options":{"enumOptions":[{"value":"edit","label":"Edit Existing DAK","description":"Select and modify an existing DAK that you have permission to edit. Changes will be made directly to the repository."},{"value":"fork","label":"Fork Existing DAK","description":"Create a copy of an existing DAK in your own organization or account. You will be able to modify the forked version independently."},{"value":"create","label":"Create New DAK","description":"Create a new DAK from the WHO SMART Guidelines template (smart-ig-empty). You\'ll configure basic parameters and start with a clean template."}]}},"description":{"ui:widget":"hidden"}}}'),n=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://litlfred.github.io/sgex/schemas/dak-selection-form.json","title":"DAK Selection Form","description":"Minimal schema for selecting a DAK repository - only repository URL required","type":"object","properties":{"repositoryUrl":{"type":"string","title":"DAK Repository URL","description":"GitHub repository URL or path (e.g., \'user/repo\' or \'https://github.com/user/repo\')","pattern":"^(https://github\\\\.com/)?[a-zA-Z0-9._-]+/[a-zA-Z0-9._-]+/?$","examples":["who/smart-immunizations","https://github.com/who/smart-immunizations","litlfred/anc-dak"]},"selectedProfile":{"type":"object","title":"Selected User/Organization","description":"Optional GitHub user or organization info","properties":{"login":{"type":"string","title":"Username/Organization","description":"GitHub username or organization name","minLength":1},"type":{"type":"string","enum":["User","Organization"],"title":"Profile Type"}},"required":["login","type"],"additionalProperties":false},"locale":{"type":"string","title":"Language/Locale","description":"Optional language/locale preference","enum":["en","fr","es","ar","zh","ru"],"default":"en"}},"required":["repositoryUrl"],"additionalProperties":false,"uiSchema":{"repositoryUrl":{"ui:help":"Enter the GitHub repository URL or path (e.g., \'user/repo\')","ui:placeholder":"user/repository-name"},"selectedProfile":{"ui:field":"ProfileSelectionField","ui:options":{"showAvatar":true,"allowOrganizations":true}},"locale":{"ui:help":"Optional: Select your preferred language"}}}'),s=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://litlfred.github.io/sgex/schemas/dak-config-form.json","title":"DAK Configuration Form","description":"Minimal schema for basic DAK configuration - only essential fields required","type":"object","properties":{"repositoryUrl":{"type":"string","title":"Target Repository","description":"GitHub repository URL or path where DAK will be created/configured","pattern":"^(https://github\\\\.com/)?[a-zA-Z0-9._-]+/[a-zA-Z0-9._-]+/?$","examples":["who/smart-immunizations","https://github.com/who/smart-immunizations","litlfred/my-new-dak"]},"sushiConfig":{"type":"object","title":"Basic FHIR Implementation Guide Configuration","description":"Essential parameters for the sushi-config.yaml file","properties":{"id":{"type":"string","title":"Implementation Guide ID","description":"Unique identifier for the FHIR Implementation Guide (lowercase, no spaces)","pattern":"^[a-z0-9][a-z0-9\\\\-\\\\.]*[a-z0-9]$","minLength":3,"maxLength":64,"examples":["who.smart.maternal-health","my-org.dak.immunization"]},"title":{"type":"string","title":"Implementation Guide Title","description":"Human-readable title for the DAK Implementation Guide","minLength":5,"maxLength":200,"examples":["WHO SMART Guidelines - Maternal Health DAK","Immunization Digital Adaptation Kit"]},"description":{"type":"string","title":"Description","description":"Detailed description of the DAK\'s purpose and scope","minLength":20,"maxLength":1000,"examples":["This implementation guide provides digital adaptation kit components for maternal health guidelines including decision support logic, forms, and indicators."]}},"required":["id","title","description"],"additionalProperties":false},"locale":{"type":"string","title":"Language/Locale","description":"Optional language/locale preference","enum":["en","fr","es","ar","zh","ru"],"default":"en"}},"required":["repositoryUrl","sushiConfig"],"additionalProperties":false,"uiSchema":{"repositoryUrl":{"ui:help":"Enter the GitHub repository URL or path where the DAK will be created/configured","ui:placeholder":"user/repository-name"},"sushiConfig":{"ui:order":["id","title","description"],"id":{"ui:help":"Must be lowercase with dots or hyphens. Example: who.smart.maternal-health"},"title":{"ui:widget":"textarea","ui:options":{"rows":2}},"description":{"ui:widget":"textarea","ui:options":{"rows":4}}},"locale":{"ui:help":"Optional: Select your preferred language"}}}'),a=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://litlfred.github.io/sgex/schemas/organization-selection-form.json","title":"Organization Selection Form","description":"Schema for selecting a GitHub organization as destination for DAK operations","type":"object","properties":{"availableOrganizations":{"type":"array","title":"Available Organizations","description":"GitHub organizations that the user has access to","items":{"type":"object","properties":{"id":{"type":"integer","title":"Organization ID"},"login":{"type":"string","title":"Organization Name","minLength":1},"display_name":{"type":["string","null"],"title":"Display Name"},"description":{"type":["string","null"],"title":"Description"},"avatar_url":{"type":"string","format":"uri","title":"Avatar URL"},"html_url":{"type":"string","format":"uri","title":"Organization URL"},"type":{"type":"string","const":"Organization","title":"Profile Type"},"permissions":{"type":"object","title":"User Permissions","properties":{"can_create_repositories":{"type":"boolean","title":"Can Create Repositories"},"can_create_private_repositories":{"type":"boolean","title":"Can Create Private Repositories"}},"additionalProperties":true},"plan":{"type":"object","title":"Organization Plan","properties":{"name":{"type":"string","title":"Plan Name"},"private_repos":{"type":"integer","title":"Private Repository Limit"}},"additionalProperties":true}},"required":["id","login","html_url","type"],"additionalProperties":true}},"includePersonalAccount":{"type":"boolean","title":"Include Personal Account","description":"Whether to include the user\'s personal GitHub account as an option","default":true},"personalAccount":{"type":"object","title":"Personal Account","description":"User\'s personal GitHub account information","properties":{"id":{"type":"integer"},"login":{"type":"string","minLength":1},"name":{"type":["string","null"]},"avatar_url":{"type":"string","format":"uri"},"html_url":{"type":"string","format":"uri"},"type":{"type":"string","const":"User"}},"required":["id","login","html_url","type"],"additionalProperties":true},"selectedOrganization":{"type":"object","title":"Selected Organization","description":"The organization selected as destination for the DAK operation","properties":{"id":{"type":"integer"},"login":{"type":"string","minLength":1},"type":{"type":"string","enum":["User","Organization"]},"avatar_url":{"type":"string","format":"uri"},"html_url":{"type":"string","format":"uri"}},"required":["id","login","type","html_url"],"additionalProperties":true},"operationType":{"type":"string","enum":["fork","create"],"title":"Operation Type","description":"The type of operation this organization selection is for"}},"required":["availableOrganizations","operationType"],"additionalProperties":false,"if":{"properties":{"includePersonalAccount":{"const":true}}},"then":{"required":["personalAccount"]},"uiSchema":{"availableOrganizations":{"ui:field":"OrganizationListField","ui:options":{"showPermissions":true,"showPlan":true,"allowSelection":true}},"includePersonalAccount":{"ui:widget":"checkbox","ui:title":"Include my personal account as an option"},"personalAccount":{"ui:field":"OrganizationCardField","ui:options":{"showAsPersonal":true,"allowSelection":true}},"selectedOrganization":{"ui:field":"SelectedOrganizationField","ui:options":{"showConfirmation":true}},"operationType":{"ui:widget":"hidden"}}}'),p=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://sgex.org/schemas/sushi-config.json","title":"SUSHI Configuration Schema","description":"JSON Schema for validating sushi-config.yaml files used in FHIR Implementation Guides","type":"object","required":["id","canonical","name","status","publisher","version"],"properties":{"id":{"type":"string","pattern":"^[a-z0-9]+(\\\\.[a-z0-9]+)*$","description":"The unique identifier for the Implementation Guide (IG). Must be lowercase alphanumeric with dots."},"canonical":{"type":"string","format":"uri","description":"The canonical URL for the Implementation Guide"},"name":{"type":"string","minLength":1,"description":"The human-readable name of the Implementation Guide"},"title":{"type":"string","description":"The title of the Implementation Guide (optional, defaults to name)"},"description":{"type":"string","description":"A description of the Implementation Guide"},"status":{"type":"string","enum":["draft","active","retired","unknown"],"description":"The publication status of the Implementation Guide"},"version":{"type":"string","pattern":"^\\\\d+\\\\.\\\\d+\\\\.\\\\d+(-[a-zA-Z0-9]+)?$","description":"The version of the Implementation Guide (semantic versioning)"},"fhirVersion":{"type":"string","enum":["4.0.1","4.3.0","5.0.0"],"default":"4.0.1","description":"The version of FHIR to use"},"copyrightYear":{"type":"integer","minimum":1900,"maximum":3000,"description":"The copyright year"},"releaseLabel":{"type":"string","description":"Label for the release"},"publisher":{"type":"string","minLength":1,"description":"The publisher of the Implementation Guide"},"contact":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"telecom":{"type":"array","items":{"type":"object","properties":{"system":{"type":"string","enum":["phone","fax","email","pager","url","sms","other"]},"value":{"type":"string"},"use":{"type":"string","enum":["home","work","temp","old","mobile"]}}}}}},"description":"Contact information for the Implementation Guide"},"license":{"type":"string","enum":["not-open-source","0BSD","AAL","Abstyles","Adobe-2006","Adobe-Glyph","ADSL","AFL-1.1","CC0-1.0"],"description":"The license under which the Implementation Guide is published"},"jurisdiction":{"type":"array","items":{"type":"object","properties":{"coding":{"type":"array","items":{"type":"object","properties":{"system":{"type":"string","format":"uri"},"code":{"type":"string"},"display":{"type":"string"}}}}}},"description":"Jurisdiction for the Implementation Guide"},"dependencies":{"type":"object","properties":{"smart.who.int.base":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"string"},"version":{"type":"string"}}}],"description":"WHO SMART Guidelines base dependency (required for WHO DAK compliance)"}},"additionalProperties":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"string"},"version":{"type":"string"},"uri":{"type":"string","format":"uri"},"reason":{"type":"string"}}}]},"description":"Dependencies on other Implementation Guides"},"global":{"type":"object","additionalProperties":{"type":"string"},"description":"Global profiles applied across the IG"},"groups":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"resources":{"type":"array","items":{"type":"string"}}}},"description":"Resource groupings for the IG"},"resources":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"exampleBoolean":{"type":"boolean"},"exampleCanonical":{"type":"string","format":"uri"}}},"description":"Resource definitions and metadata"},"pages":{"type":"object","additionalProperties":{"oneOf":[{"type":"string"},{"type":"object","properties":{"nameUrl":{"type":"string"},"title":{"type":"string"},"generation":{"type":"string","enum":["html","markdown","xml","generated"]}}}]},"description":"Page definitions for the IG"},"parameters":{"type":"object","additionalProperties":{"oneOf":[{"type":"string"},{"type":"boolean"},{"type":"number"}]},"description":"Parameters for IG generation"},"copyrightLabel":{"type":"string","description":"Copyright label for the IG"},"packageId":{"type":"string","description":"Package identifier (defaults to id)"},"menu":{"type":"object","additionalProperties":true,"description":"Menu structure for the IG"},"history":{"type":"object","properties":{"package-id":{"type":"string"},"canonical":{"type":"string","format":"uri"},"title":{"type":"string"},"introduction":{"type":"string"}},"description":"History configuration for the IG"},"indexPageContent":{"type":"string","description":"Content for the index page"},"FSHOnly":{"type":"boolean","description":"Flag to indicate if this is a FSH-only project"},"applyExtensionMetadataToRoot":{"type":"boolean","description":"Whether to apply extension metadata to root"},"instanceOptions":{"type":"object","properties":{"setMetaProfile":{"type":"string","enum":["always","never","inline-only","standalone-only"]},"setId":{"type":"string","enum":["always","standalone-only"]},"manualSliceOrdering":{"type":"boolean"}},"description":"Options for instance processing"}},"allOf":[{"if":{"properties":{"dependencies":{"type":"object","not":{"properties":{"smart.who.int.base":true},"required":["smart.who.int.base"]}}}},"then":{"properties":{"_whoSmartGuidelinesNote":{"const":"This IG is not WHO SMART Guidelines compliant. Add smart.who.int.base dependency for DAK compliance."}}}}]}'),l=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","title":"FHIR Persona Actor Definition","description":"Schema for defining actor personas based on FHIR Persona logical model","properties":{"id":{"type":"string","title":"Actor ID","description":"Unique identifier for the actor (will be used in FSH file naming)","pattern":"^[a-zA-Z][a-zA-Z0-9_-]*$","minLength":1,"maxLength":64},"name":{"type":"string","title":"Display Name","description":"Human-readable name for the actor","minLength":1,"maxLength":255},"description":{"type":"string","title":"Description","description":"Detailed description of the actor\'s role and responsibilities","minLength":1,"maxLength":2000},"type":{"type":"string","title":"Actor Type","description":"Type of actor (person, system, organization, etc.)","enum":["person","practitioner","patient","relatedperson","organization","device","system"]},"roles":{"type":"array","title":"Roles","description":"List of roles this actor can perform","items":{"type":"object","properties":{"code":{"type":"string","title":"Role Code","description":"Coded value for the role"},"display":{"type":"string","title":"Role Display Name","description":"Human-readable name for the role"},"system":{"type":"string","title":"Code System","description":"URI of the code system (e.g., SNOMED CT, LOINC)","format":"uri"}},"required":["code","display"],"additionalProperties":false},"minItems":1},"qualifications":{"type":"array","title":"Qualifications","description":"Professional qualifications or certifications","items":{"type":"object","properties":{"code":{"type":"string","title":"Qualification Code"},"display":{"type":"string","title":"Qualification Display Name"},"issuer":{"type":"string","title":"Issuing Organization"}},"required":["code","display"],"additionalProperties":false}},"specialties":{"type":"array","title":"Specialties","description":"Areas of specialty or expertise","items":{"type":"object","properties":{"code":{"type":"string","title":"Specialty Code"},"display":{"type":"string","title":"Specialty Display Name"},"system":{"type":"string","title":"Code System","format":"uri"}},"required":["code","display"],"additionalProperties":false}},"location":{"type":"object","title":"Typical Location","description":"Where this actor typically operates","properties":{"type":{"type":"string","enum":["facility","community","home","mobile","virtual"]},"description":{"type":"string"}},"additionalProperties":false},"accessLevel":{"type":"string","title":"System Access Level","description":"Level of system access this actor requires","enum":["read-only","standard","administrative","system"]},"interactions":{"type":"array","title":"Key Interactions","description":"Key interactions this actor has with the system or other actors","items":{"type":"object","properties":{"type":{"type":"string","enum":["creates","reads","updates","deletes","approves","reviews","monitors"]},"target":{"type":"string","title":"Interaction Target","description":"What the actor interacts with (resource type, other actor, etc.)"},"description":{"type":"string","title":"Interaction Description"}},"required":["type","target"],"additionalProperties":false}},"constraints":{"type":"object","title":"Constraints","description":"Operational constraints for this actor","properties":{"availability":{"type":"string","description":"When this actor is typically available"},"jurisdiction":{"type":"string","description":"Geographic or organizational jurisdiction"},"limitations":{"type":"array","items":{"type":"string"},"description":"Known limitations or restrictions"}},"additionalProperties":false},"metadata":{"type":"object","title":"Metadata","description":"Additional metadata for the actor definition","properties":{"version":{"type":"string","description":"Version of this actor definition"},"status":{"type":"string","enum":["draft","active","retired"],"default":"draft"},"publisher":{"type":"string","description":"Organization or person responsible for this definition"},"contact":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"}}}},"tags":{"type":"array","items":{"type":"string"},"description":"Tags for categorization and search"}},"additionalProperties":false}},"required":["id","name","description","type","roles"],"additionalProperties":false}');const c=new class{constructor(){this.schemas=new Map,this.initializeSchemas()}initializeSchemas(){this.schemas.set("dak-action-form-original",o),this.schemas.set("dak-selection-form-original",n),this.schemas.set("dak-config-form-original",s),this.schemas.set("organization-selection-form-original",a),this.schemas.set("sushi-config-original",p),this.schemas.set("actor-definition-original",l),this.schemas.set("dak-question",this.createMinimalDAKQuestionSchema()),this.schemas.set("dak-action-form",this.createMinimalDAKActionSchema()),this.schemas.set("dak-selection-form",this.createMinimalDAKSelectionSchema()),this.schemas.set("dak-config-form",this.createMinimalDAKConfigSchema())}createMinimalDAKQuestionSchema(){return{$schema:"http://json-schema.org/draft-07/schema#",$id:"https://litlfred.github.io/sgex/schemas/dak-question.json",title:"DAK Question Form",description:"Minimal schema for DAK questions requiring only repository identification",type:"object",properties:{repositoryUrl:{type:"string",title:"DAK Repository URL",description:"GitHub repository URL or path (e.g., 'user/repo' or 'https://github.com/user/repo')",pattern:"^(https://github\\.com/)?[a-zA-Z0-9._-]+/[a-zA-Z0-9._-]+/?$",examples:["who/smart-immunizations","https://github.com/who/smart-immunizations","litlfred/anc-dak"]},locale:{type:"string",title:"Language/Locale",description:"Optional language/locale preference",enum:["en","fr","es","ar","zh","ru"],default:"en"}},required:["repositoryUrl"],additionalProperties:!1,uiSchema:{repositoryUrl:{"ui:help":"Enter the GitHub repository URL or path (e.g., 'user/repo')","ui:placeholder":"user/repository-name"},locale:{"ui:help":"Optional: Select your preferred language"}}}}createMinimalDAKActionSchema(){return(0,r.A)((0,r.A)({},o),{},{description:"Minimal schema for DAK action selection"})}createMinimalDAKSelectionSchema(){return{$schema:"http://json-schema.org/draft-07/schema#",$id:"https://litlfred.github.io/sgex/schemas/dak-selection-form-minimal.json",title:"DAK Selection Form (Minimal)",description:"Minimal schema for DAK repository selection",type:"object",properties:{repositoryUrl:{type:"string",title:"DAK Repository",description:"GitHub repository URL or path",pattern:"^(https://github\\.com/)?[a-zA-Z0-9._-]+/[a-zA-Z0-9._-]+/?$"},selectedProfile:{type:"object",title:"GitHub Profile",properties:{login:{type:"string",minLength:1},type:{type:"string",enum:["User","Organization"]}},required:["login","type"]}},required:["repositoryUrl"],additionalProperties:!1}}createMinimalDAKConfigSchema(){return{$schema:"http://json-schema.org/draft-07/schema#",$id:"https://litlfred.github.io/sgex/schemas/dak-config-form-minimal.json",title:"DAK Configuration Form (Minimal)",description:"Minimal schema for DAK configuration",type:"object",properties:{repositoryUrl:{type:"string",title:"Target Repository",description:"GitHub repository URL or path where DAK will be created/configured"},sushiConfig:{type:"object",title:"Basic FHIR Implementation Guide Configuration",properties:{id:{type:"string",title:"Implementation Guide ID",pattern:"^[a-z0-9][a-z0-9\\-\\.]*[a-z0-9]$",minLength:3},title:{type:"string",title:"Implementation Guide Title",minLength:5},description:{type:"string",title:"Description",minLength:20}},required:["id","title","description"]}},required:["repositoryUrl","sushiConfig"],additionalProperties:!1}}getSchema(e){const t=this.schemas.get(e);return t||(console.warn("Schema '".concat(e,"' not found. Available schemas:"),Array.from(this.schemas.keys())),null)}getAvailableSchemas(){return Array.from(this.schemas.keys())}hasSchema(e){return this.schemas.has(e)}validateData(e,t){const i=this.getSchema(e);if(!i)return{isValid:!1,errors:["Schema '".concat(e,"' not found")]};const r=[],o=i.required||[];for(const n of o)t.hasOwnProperty(n)&&null!==t[n]&&void 0!==t[n]||r.push("Required field '".concat(n,"' is missing"));if(i.properties)for(const[n,s]of Object.entries(i.properties))if(t.hasOwnProperty(n)){const e=t[n];if("string"===s.type&&"string"!==typeof e)r.push("Field '".concat(n,"' must be a string"));else if("object"!==s.type||"object"===typeof e&&!Array.isArray(e)){if(s.pattern&&"string"===typeof e){new RegExp(s.pattern).test(e)||r.push("Field '".concat(n,"' does not match required pattern"))}}else r.push("Field '".concat(n,"' must be an object"))}return{isValid:0===r.length,errors:r}}parseRepositoryUrl(e){if(!e)return null;const t=e.replace(/\/$/,""),i=t.match(/^https:\/\/github\.com\/([^\/]+)\/([^\/]+)$/);if(i)return{user:i[1],repo:i[2]};const r=t.match(/^([^\/]+)\/([^\/]+)$/);return r?{user:r[1],repo:r[2]}:null}createRepositoryUrl(e,t){return e&&t?"full"===(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"path")?"https://github.com/".concat(e,"/").concat(t):"".concat(e,"/").concat(t):null}}}}]);
//# sourceMappingURL=336.bff145bb.chunk.js.map