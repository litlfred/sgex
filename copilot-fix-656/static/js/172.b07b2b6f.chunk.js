"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[172],{86172:(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});var a=s(89379),n=s(65043),r=s(76712),c=s(89191),o=s(19794),i=s(70579);const l=()=>{const[e,t]=(0,n.useState)([]),[s,l]=(0,n.useState)(!0),[d,u]=(0,n.useState)(null),[h,m]=(0,n.useState)(1),[p,x]=(0,n.useState)(""),[g,b]=(0,n.useState)("updated"),[f,j]=(0,n.useState)("desc"),[v,w]=(0,n.useState)({}),[N,y]=(0,n.useState)("open"),[A,k]=(0,n.useState)(!1),[S,C]=(0,n.useState)(null),[P,L]=(0,n.useState)({}),[_]=(0,n.useState)(!1),[D,E]=(0,n.useState)({}),[T,R]=(0,n.useState)({}),[G,M]=(0,n.useState)({}),[F,B]=(0,n.useState)({}),[U,O]=(0,n.useState)(!1),I=10,X=(0,o.A)("sgex-mascot.png"),q=async e=>{try{const t={Accept:"application/vnd.github.v3+json"};S&&(t.Authorization="token ".concat(S));const s=await fetch("https://api.github.com/repos/litlfred/sgex/issues/".concat(e,"/comments"),{headers:t});if(!s.ok)return console.warn("Failed to fetch comments for PR ".concat(e,": ").concat(s.status)),{count:0,lastComment:null,error:!0};const a=await s.json();if(0===a.length)return{count:0,lastComment:null};const n=a[a.length-1];return{count:a.length,lastComment:{author:n.user.login,created_at:new Date(n.created_at),avatar_url:n.user.avatar_url}}}catch(d){return console.warn("Error fetching comment summary for PR ".concat(e,":"),d),{count:0,lastComment:null,error:!0}}},H=async e=>{try{const t={Accept:"application/vnd.github.v3+json"};S&&(t.Authorization="token ".concat(S));const s=await fetch("https://api.github.com/repos/litlfred/sgex/issues/".concat(e,"/comments"),{headers:t});if(!s.ok)return console.warn("Failed to fetch comments for PR ".concat(e,": ").concat(s.status)),[];return(await s.json()).map(e=>({id:e.id,author:e.user.login,body:e.body,created_at:new Date(e.created_at).toLocaleDateString(),avatar_url:e.user.avatar_url}))}catch(d){return console.warn("Error fetching all comments for PR ".concat(e,":"),d),[]}},V=(0,n.useCallback)(async e=>{if(0===e.length)return;O(!0);const t={};for(const s of e)t[s.number]=await q(s.number);B(t),O(!1)},[S]),z=e=>{const t=F[e];if(U)return"Loading discussion...";if(!t)return"No comments yet";if(t.error)return"Unable to load comments";if(0===t.count)return"No comments yet";const{count:s,lastComment:a}=t,n=a?W(a.created_at):"";return"".concat(s," comment").concat(s>1?"s":"",", last by ").concat(a.author," ").concat(n)},W=e=>{const t=new Date-e,s=Math.floor(t/864e5);return 0===s?"today":1===s?"1 day ago":s<7?"".concat(s," days ago"):s<30?"".concat(Math.floor(s/7)," week").concat(Math.floor(s/7)>1?"s":""," ago"):"".concat(Math.floor(s/30)," month").concat(Math.floor(s/30)>1?"s":""," ago")},J=async e=>{try{const t=await fetch("https://api.github.com/repos/litlfred/sgex/actions/workflows/deploy.yml/runs?branch=".concat(e,"&per_page=1"),{headers:S?{Authorization:"token ".concat(S),Accept:"application/vnd.github.v3+json"}:{Accept:"application/vnd.github.v3+json"}});if(!t.ok)throw new Error("Failed to fetch deployment status: ".concat(t.status));const s=await t.json();if(s.workflow_runs&&s.workflow_runs.length>0){const e=s.workflow_runs[0];return{status:e.status,conclusion:e.conclusion,html_url:e.html_url,created_at:e.created_at}}return{status:"unknown",conclusion:null}}catch(d){return console.error("Error checking deployment status for ".concat(e,":"),d),{status:"error",conclusion:"error"}}},Q=(0,n.useCallback)(async e=>{if(0===e.length)return;const t={};for(const s of e)t[s.safeBranchName]=await J(s.safeBranchName);w(e=>(0,a.A)((0,a.A)({},e),t))},[S]),K=e=>{const t=v[e];return t?"completed"===t.status&&"success"===t.conclusion?{text:"\u2705 Deployed",class:"success"}:"completed"===t.status&&"failure"===t.conclusion?{text:"\u274c Failed",class:"failed"}:"in_progress"===t.status?{text:"\ud83d\udd04 Deploying",class:"in-progress"}:"queued"===t.status?{text:"\u23f3 Queued",class:"queued"}:"error"===t.status?{text:"\u26a0\ufe0f Error",class:"error"}:{text:"\u2753 Unknown",class:"unknown"}:{text:"Checking...",class:"unknown"}},Y=function(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"desc";return[...e].sort((e,a)=>{let n=0;switch(t){case"number":n=a.number-e.number;break;case"alphabetical":n=e.title.localeCompare(a.title);break;default:const t=new Date(e.updatedAt);n=new Date(a.updatedAt)-t}return"asc"===s?-n:n})};(0,n.useEffect)(()=>{const e=sessionStorage.getItem("github_token");e&&(C(e),k(!0))},[]),(0,n.useEffect)(()=>{(async()=>{try{l(!0);const e="litlfred",s="sgex",a="all"===N?"all":N,n=await fetch("https://api.github.com/repos/".concat(e,"/").concat(s,"/pulls?state=").concat(a,"&sort=updated&per_page=100"));if(!n.ok)throw new Error("Failed to fetch pull requests: ".concat(n.status));const r=(await n.json()).map(e=>{const t=e.head.ref.replace(/\//g,"-");return{id:e.id,number:e.number,title:e.title,state:e.state,author:e.user.login,branchName:e.head.ref,safeBranchName:t,url:"./".concat(t,"/index.html"),prUrl:e.html_url,updatedAt:new Date(e.updated_at).toLocaleDateString(),createdAt:new Date(e.created_at).toLocaleDateString()}});t(r),await V(r.slice(0,I))}catch(e){if(console.error("Error fetching data:",e),u(e.message),e.message.includes("Failed to fetch")){console.log("Using fallback mock data...");const e=[{id:1,number:460,title:"Improve multi-page selector landing page for GitHub deployment",state:"open",author:"copilot",branchName:"copilot/fix-459",safeBranchName:"copilot-fix-459",url:"./sgex/copilot-fix-459/index.html",prUrl:"https://github.com/litlfred/sgex/pull/460",updatedAt:(new Date).toLocaleDateString(),createdAt:new Date(Date.now()-864e5).toLocaleDateString()},{id:2,number:459,title:"Add enhanced PR preview functionality",state:"open",author:"developer",branchName:"feature/pr-preview",safeBranchName:"feature-pr-preview",url:"./sgex/feature-pr-preview/index.html",prUrl:"https://github.com/litlfred/sgex/pull/459",updatedAt:new Date(Date.now()-1728e5).toLocaleDateString(),createdAt:new Date(Date.now()-3456e5).toLocaleDateString()}];t(e),u(null)}}finally{l(!1)}})()},[N,S,V]),(0,n.useEffect)(()=>{if(0===e.length)return;const t=e.filter(e=>e.title.toLowerCase().includes(p.toLowerCase())||e.author.toLowerCase().includes(p.toLowerCase())||e.branchName.toLowerCase().includes(p.toLowerCase())),s=Y(t,g,f).slice((h-1)*I,h*I);Q(s);const a=setInterval(()=>{Q(s)},7e3);return()=>clearInterval(a)},[e,p,g,f,h,Q]),(0,n.useEffect)(()=>{if(e.length>0){const t=e.filter(e=>e.title.toLowerCase().includes(p.toLowerCase())||e.author.toLowerCase().includes(p.toLowerCase())||e.branchName.toLowerCase().includes(p.toLowerCase())),s=Y(t,g,f).slice((h-1)*I,h*I);V(s)}},[h,p,g,f,e,V]);const Z=e.filter(e=>e.title.toLowerCase().includes(p.toLowerCase())||e.author.toLowerCase().includes(p.toLowerCase())||e.branchName.toLowerCase().includes(p.toLowerCase())),$=Y(Z,g,f),ee=$.slice((h-1)*I,h*I),te=Math.ceil($.length/I);return s?(0,i.jsx)(r.Mx,{pageName:"branch-listing-loading",showBreadcrumbs:!1,children:(0,i.jsx)("div",{className:"branch-listing-content",children:(0,i.jsxs)("div",{className:"branch-listing-header",children:[(0,i.jsxs)("h1",{children:[(0,i.jsx)("img",{src:X,alt:"SGEX Icon",className:"sgex-icon"})," SGEX"]}),(0,i.jsx)("p",{className:"subtitle",children:"a collaborative workbench for WHO SMART Guidelines"}),(0,i.jsx)("div",{className:"loading",children:"Loading previews..."})]})})}):d?(0,i.jsx)(r.Mx,{pageName:"branch-listing-error",showBreadcrumbs:!1,children:(0,i.jsx)("div",{className:"branch-listing-content",children:(0,i.jsxs)("div",{className:"branch-listing-header",children:[(0,i.jsxs)("h1",{children:[(0,i.jsx)("img",{src:X,alt:"SGEX Icon",className:"sgex-icon"})," SGEX"]}),(0,i.jsx)("p",{className:"subtitle",children:"a collaborative workbench for WHO SMART Guidelines"}),(0,i.jsxs)("div",{className:"error",children:[(0,i.jsxs)("p",{children:["Failed to load previews: ",d]}),(0,i.jsx)("p",{children:"Please try refreshing the page or check back later."})]})]})})}):(0,i.jsx)(r.Mx,{pageName:"branch-listing",showBreadcrumbs:!1,children:(0,i.jsxs)("div",{className:"branch-listing-content",children:[(0,i.jsxs)("header",{className:"branch-listing-header",children:[(0,i.jsxs)("h1",{children:[(0,i.jsx)("img",{src:X,alt:"SGEX Icon",className:"sgex-icon"})," SGEX"]}),(0,i.jsx)("p",{className:"subtitle",children:"a collaborative workbench for WHO SMART Guidelines"}),(0,i.jsx)("div",{className:"prominent-info",children:(0,i.jsx)("p",{className:"info-text",children:"\ud83d\udc3e This landing page lists all available previews. Each branch and PR is automatically deployed to its own preview environment."})})]}),(0,i.jsxs)("div",{className:"action-cards",children:[(0,i.jsx)("div",{className:"action-card main-site-card",children:(0,i.jsxs)("a",{href:"https://litlfred.github.io/sgex/main",target:"_blank",rel:"noopener noreferrer",className:"card-link",children:[(0,i.jsx)("img",{src:X,alt:"SGEX Mascot",className:"card-icon"}),(0,i.jsx)("h3",{children:"View Main Site"}),(0,i.jsx)("p",{children:"Access the main SGEX workbench"})]})}),!A&&(0,i.jsx)("div",{className:"action-card login-card",children:(0,i.jsxs)("div",{className:"card-content",children:[(0,i.jsx)("div",{className:"login-icon",children:"\ud83d\udd10"}),(0,i.jsx)("h3",{children:"GitHub Login"}),(0,i.jsx)("p",{children:"Login to view and add comments"}),(0,i.jsx)(c.A,{onAuthSuccess:e=>{C(e),k(!0),sessionStorage.setItem("github_token",e)}})]})})]}),(0,i.jsx)("div",{className:"preview-tabs",children:(0,i.jsxs)("button",{className:"tab-button active",children:["\ud83d\udd04 Pull Request Previews (",$.length,")"]})}),(0,i.jsxs)("div",{className:"pr-section",children:[(0,i.jsxs)("div",{className:"pr-controls",children:[(0,i.jsxs)("div",{className:"pr-filter-section",children:[(0,i.jsx)("label",{htmlFor:"pr-filter",children:"Filter PRs:"}),(0,i.jsxs)("select",{id:"pr-filter",value:N,onChange:e=>{y(e.target.value),m(1)},className:"filter-select",children:[(0,i.jsx)("option",{value:"open",children:"Open PRs Only"}),(0,i.jsx)("option",{value:"closed",children:"Closed PRs Only"}),(0,i.jsx)("option",{value:"all",children:"All PRs"})]})]}),(0,i.jsx)("input",{type:"text",placeholder:"Search pull requests by title, author, or branch name...",value:p,onChange:e=>{x(e.target.value),m(1)},className:"pr-search"}),(0,i.jsxs)("select",{value:g,onChange:e=>{b(e.target.value),m(1)},className:"sort-select",children:[(0,i.jsx)("option",{value:"updated",children:"Sort by Recent Updates"}),(0,i.jsx)("option",{value:"number",children:"Sort by PR Number"}),(0,i.jsx)("option",{value:"alphabetical",children:"Sort Alphabetically"})]}),(0,i.jsxs)("select",{value:f,onChange:e=>{j(e.target.value),m(1)},className:"sort-select",children:[(0,i.jsx)("option",{value:"desc",children:"Descending"}),(0,i.jsx)("option",{value:"asc",children:"Ascending"})]})]}),(0,i.jsx)("div",{className:"pr-cards",children:0===ee.length?(0,i.jsx)("div",{className:"no-items",children:p?(0,i.jsxs)("p",{children:['No pull requests match your search "',p,'".']}):(0,i.jsx)("p",{children:"No pull request previews available at the moment."})}):ee.map(e=>{var t;return(0,i.jsxs)("div",{className:"preview-card pr-card",children:[(0,i.jsxs)("div",{className:"card-header",children:[(0,i.jsxs)("h3",{className:"item-name",children:["#",e.number,": ",e.title]}),(0,i.jsxs)("div",{className:"card-badges",children:[(0,i.jsxs)("span",{className:"state-badge ".concat(e.state),children:["open"===e.state?"\ud83d\udfe2":"\ud83d\udd34"," ",e.state]}),(0,i.jsx)("span",{className:"deployment-status ".concat(K(e.safeBranchName).class),children:K(e.safeBranchName).text})]})]}),(0,i.jsxs)("div",{className:"card-body",children:[(0,i.jsxs)("p",{className:"pr-meta",children:[(0,i.jsx)("strong",{children:"Branch:"})," ",e.branchName," \u2022 ",(0,i.jsx)("strong",{children:"Author:"})," ",e.author]}),(0,i.jsxs)("p",{className:"item-date",children:["Created: ",e.createdAt," \u2022 Updated: ",e.updatedAt]}),(0,i.jsxs)("div",{className:"discussion-summary-bar",onClick:()=>(async e=>{const t=G[e];if(!t){const t=await H(e);L(s=>(0,a.A)((0,a.A)({},s),{},{[e]:t}))}M(s=>(0,a.A)((0,a.A)({},s),{},{[e]:!t}))})(e.number),children:[(0,i.jsxs)("div",{className:"discussion-summary-text",children:[(0,i.jsx)("span",{className:"discussion-summary-icon",children:"\ud83d\udcac"}),z(e.number)]}),(0,i.jsx)("span",{className:"discussion-expand-icon ".concat(G[e.number]?"expanded":""),children:"\u25b6"})]}),G[e.number]&&(0,i.jsxs)("div",{className:"discussion-expanded-section",children:[(0,i.jsxs)("div",{className:"discussion-header",children:[(0,i.jsx)("h4",{className:"discussion-title",children:"Discussion"}),(0,i.jsxs)("div",{className:"discussion-actions",children:[(0,i.jsx)("a",{href:"https://github.com/litlfred/sgex/pull/".concat(e.number,"/files"),target:"_blank",rel:"noopener noreferrer",className:"discussion-action-btn",children:"\ud83d\udcc1 View Files"}),(0,i.jsx)("a",{href:e.prUrl,target:"_blank",rel:"noopener noreferrer",className:"discussion-action-btn secondary",children:"\ud83d\udd17 View PR"})]})]}),A&&(0,i.jsxs)("div",{className:"comment-input-section",children:[(0,i.jsx)("textarea",{value:D[e.number]||"",onChange:t=>E(s=>(0,a.A)((0,a.A)({},s),{},{[e.number]:t.target.value})),placeholder:"Add a comment...",className:"comment-input",rows:3}),(0,i.jsx)("button",{onClick:()=>(async(e,t)=>{if(!S||!t.trim())return!1;R(t=>(0,a.A)((0,a.A)({},t),{},{[e]:!0}));try{const s=await fetch("https://api.github.com/repos/litlfred/sgex/issues/".concat(e,"/comments"),{method:"POST",headers:{Authorization:"token ".concat(S),Accept:"application/vnd.github.v3+json","Content-Type":"application/json"},body:JSON.stringify({body:t})});if(!s.ok)throw new Error("Failed to submit comment: ".concat(s.status));if(E(t=>(0,a.A)((0,a.A)({},t),{},{[e]:""})),G[e]){const t=await H(e);L(s=>(0,a.A)((0,a.A)({},s),{},{[e]:t}))}const n=await q(e);return B(t=>(0,a.A)((0,a.A)({},t),{},{[e]:n})),!0}catch(d){return console.error("Error submitting comment for PR ".concat(e,":"),d),!1}finally{R(t=>(0,a.A)((0,a.A)({},t),{},{[e]:!1}))}})(e.number,D[e.number]),disabled:!(null!==(t=D[e.number])&&void 0!==t&&t.trim())||T[e.number],className:"submit-comment-btn",children:T[e.number]?"Submitting...":"Add Comment"})]}),(0,i.jsx)("div",{className:"discussion-scroll-area",children:_?(0,i.jsx)("div",{className:"comments-loading",children:"Loading full discussion..."}):P[e.number]&&P[e.number].length>0?(0,i.jsx)("div",{className:"comments-list",children:P[e.number].slice(-5).map(e=>(0,i.jsxs)("div",{className:"comment-item",children:[(0,i.jsxs)("div",{className:"comment-header",children:[(0,i.jsx)("img",{src:e.avatar_url,alt:e.author,className:"comment-avatar"}),(0,i.jsx)("span",{className:"comment-author",children:e.author}),(0,i.jsx)("span",{className:"comment-date",children:e.created_at})]}),(0,i.jsx)("div",{className:"comment-body",children:e.body.length>200?"".concat(e.body.substring(0,200),"..."):e.body})]},e.id))}):(0,i.jsx)("div",{className:"no-comments",children:A?"No comments yet. Be the first to comment!":"No comments yet. Login to add the first comment!"})})]}),(0,i.jsxs)("div",{className:"pr-actions",children:[(0,i.jsx)("a",{href:e.url,className:"preview-link",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)("span",{children:"\ud83d\ude80 View Preview"})}),(0,i.jsx)("a",{href:e.prUrl,className:"pr-link",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)("span",{children:"\ud83d\udccb View PR"})})]})]}),(0,i.jsx)("div",{className:"card-footer",children:(0,i.jsxs)("small",{className:"preview-path",children:["Preview URL: ",e.url]})})]},e.id)})}),te>1&&(0,i.jsxs)("div",{className:"pagination",children:[(0,i.jsx)("button",{className:"pagination-btn",onClick:()=>m(Math.max(1,h-1)),disabled:1===h,children:"\u2190 Previous"}),(0,i.jsxs)("span",{className:"pagination-info",children:["Page ",h," of ",te," (",$.length," total)"]}),(0,i.jsx)("button",{className:"pagination-btn",onClick:()=>m(Math.min(te,h+1)),disabled:h===te,children:"Next \u2192"})]})]})]})})}},89191:(e,t,s)=>{s.d(t,{A:()=>o});var a=s(65043),n=s(74117),r=s(5452),c=s(70579);const o=e=>{let{onAuthSuccess:t}=e;const{t:o}=(0,n.Bd)(),[i,l]=(0,a.useState)(""),[d,u]=(0,a.useState)(""),[h,m]=(0,a.useState)(!1),p=r.A.getLogger("PATLogin");a.useEffect(()=>(p.componentMount({hasOnAuthSuccess:!!t}),()=>p.componentUnmount()),[p,t]);return(0,c.jsx)("div",{className:"pat-login",children:(0,c.jsxs)("div",{className:"pat-login-section",children:[(0,c.jsxs)("form",{onSubmit:async e=>{if(e.preventDefault(),p.userAction("PAT login attempt",{tokenProvided:!!i.trim()}),!i.trim()){return u("Please enter a GitHub Personal Access Token"),void p.warn("PAT login failed - no token provided")}m(!0),u("");const a=Date.now();p.auth("Starting PAT authentication");try{const{Octokit:e}=await Promise.resolve().then(s.bind(s,97036)),n=new e({auth:i.trim()});p.debug("Octokit instance created for PAT validation"),p.apiCall("GET","/user",null);const r=await n.rest.users.getAuthenticated(),c=Date.now()-a;p.apiResponse("GET","/user",r.status,c),p.auth("PAT authentication successful",{username:r.data.login,duration:c}),t(i.trim(),n)}catch(n){const e=Date.now()-a;p.apiError("GET","/user",n),p.auth("PAT authentication failed",{status:n.status,message:n.message,duration:e}),console.error("PAT authentication failed:",n),401===n.status?u("Invalid Personal Access Token. Please check your token and try again."):403===n.status?u("Token doesn't have sufficient permissions. Please ensure your token has 'repo' and 'read:org' scopes."):u("Authentication failed. Please check your connection and try again.")}finally{m(!1)}},className:"pat-form",children:[(0,c.jsxs)("div",{className:"form-group",children:[(0,c.jsxs)("label",{htmlFor:"pat-token",children:[o("auth.setupToken"),":"]}),(0,c.jsx)("input",{id:"pat-token",type:"password",value:i,onChange:e=>{l(e.target.value),d&&u("")},placeholder:"ghp_xxxxxxxxxxxxxxxxxxxx",className:"token-input ".concat(d?"error":""),disabled:h,autoComplete:"off"})]}),(0,c.jsx)("button",{type:"submit",className:"github-login-btn",disabled:h||!i.trim(),children:h?(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("span",{className:"spinner small"}),o("common.loading"),"..."]}):(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("span",{className:"github-icon",children:"\ud83d\udd11"}),o("auth.signInWithPAT")]})})]}),d&&(0,c.jsx)("div",{className:"error-message",children:d})]})})}}}]);
//# sourceMappingURL=172.b07b2b6f.chunk.js.map