"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[990],{41990:(e,s,t)=>{t.r(s),t.d(s,{default:()=>c});var a=t(65043),n=t(16786),r=t(74155),o=t(19794),i=t(70579);const c=()=>{const[e,s]=(0,a.useState)([]),[t,c]=(0,a.useState)(!0),[l,d]=(0,a.useState)(null),[u,h]=(0,a.useState)(1),[m,p]=(0,a.useState)(""),[x,g]=(0,a.useState)("updated"),[b,f]=(0,a.useState)("desc"),[j,v]=(0,a.useState)({}),[w,N]=(0,a.useState)("open"),[y,k]=(0,a.useState)(!1),[S,A]=(0,a.useState)(null),[C,P]=(0,a.useState)({}),[$]=(0,a.useState)(!1),[L,_]=(0,a.useState)({}),[D,E]=(0,a.useState)({}),[T,R]=(0,a.useState)({}),[G,M]=(0,a.useState)({}),[F,B]=(0,a.useState)(!1),U=10,O=(0,o.A)("sgex-mascot.png"),I=async e=>{try{const s={Accept:"application/vnd.github.v3+json"};S&&(s.Authorization=`token ${S}`);const t=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${e}/comments`,{headers:s});if(!t.ok)return console.warn(`Failed to fetch comments for PR ${e}: ${t.status}`),{count:0,lastComment:null,error:!0};const a=await t.json();if(0===a.length)return{count:0,lastComment:null};const n=a[a.length-1];return{count:a.length,lastComment:{author:n.user.login,created_at:new Date(n.created_at),avatar_url:n.user.avatar_url}}}catch(l){return console.warn(`Error fetching comment summary for PR ${e}:`,l),{count:0,lastComment:null,error:!0}}},X=async e=>{try{const s={Accept:"application/vnd.github.v3+json"};S&&(s.Authorization=`token ${S}`);const t=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${e}/comments`,{headers:s});if(!t.ok)return console.warn(`Failed to fetch comments for PR ${e}: ${t.status}`),[];return(await t.json()).map(e=>({id:e.id,author:e.user.login,body:e.body,created_at:new Date(e.created_at).toLocaleDateString(),avatar_url:e.user.avatar_url}))}catch(l){return console.warn(`Error fetching all comments for PR ${e}:`,l),[]}},q=(0,a.useCallback)(async e=>{if(0===e.length)return;B(!0);const s={};for(const t of e)s[t.number]=await I(t.number);M(s),B(!1)},[S]),H=e=>{const s=G[e];if(F)return"Loading discussion...";if(!s)return"No comments yet";if(s.error)return"Unable to load comments";if(0===s.count)return"No comments yet";const{count:t,lastComment:a}=s,n=a?V(a.created_at):"";return`${t} comment${t>1?"s":""}, last by ${a.author} ${n}`},V=e=>{const s=new Date-e,t=Math.floor(s/864e5);return 0===t?"today":1===t?"1 day ago":t<7?`${t} days ago`:t<30?`${Math.floor(t/7)} week${Math.floor(t/7)>1?"s":""} ago`:`${Math.floor(t/30)} month${Math.floor(t/30)>1?"s":""} ago`},z=async e=>{try{const s=await fetch(`https://api.github.com/repos/litlfred/sgex/actions/workflows/deploy.yml/runs?branch=${e}&per_page=1`,{headers:S?{Authorization:`token ${S}`,Accept:"application/vnd.github.v3+json"}:{Accept:"application/vnd.github.v3+json"}});if(!s.ok)throw new Error(`Failed to fetch deployment status: ${s.status}`);const t=await s.json();if(t.workflow_runs&&t.workflow_runs.length>0){const e=t.workflow_runs[0];return{status:e.status,conclusion:e.conclusion,html_url:e.html_url,created_at:e.created_at}}return{status:"unknown",conclusion:null}}catch(l){return console.error(`Error checking deployment status for ${e}:`,l),{status:"error",conclusion:"error"}}},W=(0,a.useCallback)(async e=>{if(0===e.length)return;const s={};for(const t of e)s[t.safeBranchName]=await z(t.safeBranchName);v(e=>({...e,...s}))},[S]),J=e=>{const s=j[e];return s?"completed"===s.status&&"success"===s.conclusion?{text:"\u2705 Deployed",class:"success"}:"completed"===s.status&&"failure"===s.conclusion?{text:"\u274c Failed",class:"failed"}:"in_progress"===s.status?{text:"\ud83d\udd04 Deploying",class:"in-progress"}:"queued"===s.status?{text:"\u23f3 Queued",class:"queued"}:"error"===s.status?{text:"\u26a0\ufe0f Error",class:"error"}:{text:"\u2753 Unknown",class:"unknown"}:{text:"Checking...",class:"unknown"}},Q=function(e,s){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"desc";return[...e].sort((e,a)=>{let n=0;switch(s){case"number":n=a.number-e.number;break;case"alphabetical":n=e.title.localeCompare(a.title);break;default:const s=new Date(e.updatedAt);n=new Date(a.updatedAt)-s}return"asc"===t?-n:n})};(0,a.useEffect)(()=>{const e=sessionStorage.getItem("github_token");e&&(A(e),k(!0))},[]),(0,a.useEffect)(()=>{(async()=>{try{c(!0);const e="litlfred",t="sgex",a="all"===w?"all":w,n=await fetch(`https://api.github.com/repos/${e}/${t}/pulls?state=${a}&sort=updated&per_page=100`);if(!n.ok)throw new Error(`Failed to fetch pull requests: ${n.status}`);const r=(await n.json()).map(e=>{const s=e.head.ref.replace(/\//g,"-");return{id:e.id,number:e.number,title:e.title,state:e.state,author:e.user.login,branchName:e.head.ref,safeBranchName:s,url:`./${s}/index.html`,prUrl:e.html_url,updatedAt:new Date(e.updated_at).toLocaleDateString(),createdAt:new Date(e.created_at).toLocaleDateString()}});s(r),await q(r.slice(0,U))}catch(e){if(console.error("Error fetching data:",e),d(e.message),e.message.includes("Failed to fetch")){console.log("Using fallback mock data...");const e=[{id:1,number:460,title:"Improve multi-page selector landing page for GitHub deployment",state:"open",author:"copilot",branchName:"copilot/fix-459",safeBranchName:"copilot-fix-459",url:"./sgex/copilot-fix-459/index.html",prUrl:"https://github.com/litlfred/sgex/pull/460",updatedAt:(new Date).toLocaleDateString(),createdAt:new Date(Date.now()-864e5).toLocaleDateString()},{id:2,number:459,title:"Add enhanced PR preview functionality",state:"open",author:"developer",branchName:"feature/pr-preview",safeBranchName:"feature-pr-preview",url:"./sgex/feature-pr-preview/index.html",prUrl:"https://github.com/litlfred/sgex/pull/459",updatedAt:new Date(Date.now()-1728e5).toLocaleDateString(),createdAt:new Date(Date.now()-3456e5).toLocaleDateString()}];s(e),d(null)}}finally{c(!1)}})()},[w,S,q]),(0,a.useEffect)(()=>{if(0===e.length)return;const s=e.filter(e=>e.title.toLowerCase().includes(m.toLowerCase())||e.author.toLowerCase().includes(m.toLowerCase())||e.branchName.toLowerCase().includes(m.toLowerCase())),t=Q(s,x,b).slice((u-1)*U,u*U);W(t);const a=setInterval(()=>{W(t)},7e3);return()=>clearInterval(a)},[e,m,x,b,u,W]),(0,a.useEffect)(()=>{if(e.length>0){const s=e.filter(e=>e.title.toLowerCase().includes(m.toLowerCase())||e.author.toLowerCase().includes(m.toLowerCase())||e.branchName.toLowerCase().includes(m.toLowerCase())),t=Q(s,x,b).slice((u-1)*U,u*U);q(t)}},[u,m,x,b,e,q]);const K=e.filter(e=>e.title.toLowerCase().includes(m.toLowerCase())||e.author.toLowerCase().includes(m.toLowerCase())||e.branchName.toLowerCase().includes(m.toLowerCase())),Y=Q(K,x,b),Z=Y.slice((u-1)*U,u*U),ee=Math.ceil(Y.length/U);return t?(0,i.jsx)(n.Mx,{pageName:"branch-listing-loading",showBreadcrumbs:!1,children:(0,i.jsx)("div",{className:"branch-listing-content",children:(0,i.jsxs)("div",{className:"branch-listing-header",children:[(0,i.jsxs)("h1",{children:[(0,i.jsx)("img",{src:O,alt:"SGEX Icon",className:"sgex-icon"})," SGEX"]}),(0,i.jsx)("p",{className:"subtitle",children:"a collaborative workbench for WHO SMART Guidelines"}),(0,i.jsx)("div",{className:"loading",children:"Loading previews..."})]})})}):l?(0,i.jsx)(n.Mx,{pageName:"branch-listing-error",showBreadcrumbs:!1,children:(0,i.jsx)("div",{className:"branch-listing-content",children:(0,i.jsxs)("div",{className:"branch-listing-header",children:[(0,i.jsxs)("h1",{children:[(0,i.jsx)("img",{src:O,alt:"SGEX Icon",className:"sgex-icon"})," SGEX"]}),(0,i.jsx)("p",{className:"subtitle",children:"a collaborative workbench for WHO SMART Guidelines"}),(0,i.jsxs)("div",{className:"error",children:[(0,i.jsxs)("p",{children:["Failed to load previews: ",l]}),(0,i.jsx)("p",{children:"Please try refreshing the page or check back later."})]})]})})}):(0,i.jsx)(n.Mx,{pageName:"branch-listing",showBreadcrumbs:!1,children:(0,i.jsxs)("div",{className:"branch-listing-content",children:[(0,i.jsxs)("header",{className:"branch-listing-header",children:[(0,i.jsxs)("h1",{children:[(0,i.jsx)("img",{src:O,alt:"SGEX Icon",className:"sgex-icon"})," SGEX"]}),(0,i.jsx)("p",{className:"subtitle",children:"a collaborative workbench for WHO SMART Guidelines"}),(0,i.jsx)("div",{className:"prominent-info",children:(0,i.jsx)("p",{className:"info-text",children:"\ud83d\udc3e This landing page lists all available previews. Each branch and PR is automatically deployed to its own preview environment."})})]}),(0,i.jsxs)("div",{className:"action-cards",children:[(0,i.jsx)("div",{className:"action-card main-site-card",children:(0,i.jsxs)("a",{href:"https://litlfred.github.io/sgex/main",target:"_blank",rel:"noopener noreferrer",className:"card-link",children:[(0,i.jsx)("img",{src:O,alt:"SGEX Mascot",className:"card-icon"}),(0,i.jsx)("h3",{children:"View Main Site"}),(0,i.jsx)("p",{children:"Access the main SGEX workbench"})]})}),!y&&(0,i.jsx)("div",{className:"action-card login-card",children:(0,i.jsxs)("div",{className:"card-content",children:[(0,i.jsx)("div",{className:"login-icon",children:"\ud83d\udd10"}),(0,i.jsx)("h3",{children:"GitHub Login"}),(0,i.jsx)("p",{children:"Login to view and add comments"}),(0,i.jsx)(r.A,{onAuthSuccess:e=>{A(e),k(!0),sessionStorage.setItem("github_token",e)}})]})})]}),(0,i.jsx)("div",{className:"preview-tabs",children:(0,i.jsxs)("button",{className:"tab-button active",children:["\ud83d\udd04 Pull Request Previews (",Y.length,")"]})}),(0,i.jsxs)("div",{className:"pr-section",children:[(0,i.jsxs)("div",{className:"pr-controls",children:[(0,i.jsxs)("div",{className:"pr-filter-section",children:[(0,i.jsx)("label",{htmlFor:"pr-filter",children:"Filter PRs:"}),(0,i.jsxs)("select",{id:"pr-filter",value:w,onChange:e=>{N(e.target.value),h(1)},className:"filter-select",children:[(0,i.jsx)("option",{value:"open",children:"Open PRs Only"}),(0,i.jsx)("option",{value:"closed",children:"Closed PRs Only"}),(0,i.jsx)("option",{value:"all",children:"All PRs"})]})]}),(0,i.jsx)("input",{type:"text",placeholder:"Search pull requests by title, author, or branch name...",value:m,onChange:e=>{p(e.target.value),h(1)},className:"pr-search"}),(0,i.jsxs)("select",{value:x,onChange:e=>{g(e.target.value),h(1)},className:"sort-select",children:[(0,i.jsx)("option",{value:"updated",children:"Sort by Recent Updates"}),(0,i.jsx)("option",{value:"number",children:"Sort by PR Number"}),(0,i.jsx)("option",{value:"alphabetical",children:"Sort Alphabetically"})]}),(0,i.jsxs)("select",{value:b,onChange:e=>{f(e.target.value),h(1)},className:"sort-select",children:[(0,i.jsx)("option",{value:"desc",children:"Descending"}),(0,i.jsx)("option",{value:"asc",children:"Ascending"})]})]}),(0,i.jsx)("div",{className:"pr-cards",children:0===Z.length?(0,i.jsx)("div",{className:"no-items",children:m?(0,i.jsxs)("p",{children:['No pull requests match your search "',m,'".']}):(0,i.jsx)("p",{children:"No pull request previews available at the moment."})}):Z.map(e=>{var s;return(0,i.jsxs)("div",{className:"preview-card pr-card",children:[(0,i.jsxs)("div",{className:"card-header",children:[(0,i.jsxs)("h3",{className:"item-name",children:["#",e.number,": ",e.title]}),(0,i.jsxs)("div",{className:"card-badges",children:[(0,i.jsxs)("span",{className:`state-badge ${e.state}`,children:["open"===e.state?"\ud83d\udfe2":"\ud83d\udd34"," ",e.state]}),(0,i.jsx)("span",{className:`deployment-status ${J(e.safeBranchName).class}`,children:J(e.safeBranchName).text})]})]}),(0,i.jsxs)("div",{className:"card-body",children:[(0,i.jsxs)("p",{className:"pr-meta",children:[(0,i.jsx)("strong",{children:"Branch:"})," ",e.branchName," \u2022 ",(0,i.jsx)("strong",{children:"Author:"})," ",e.author]}),(0,i.jsxs)("p",{className:"item-date",children:["Created: ",e.createdAt," \u2022 Updated: ",e.updatedAt]}),(0,i.jsxs)("div",{className:"discussion-summary-bar",onClick:()=>(async e=>{const s=T[e];if(!s){const s=await X(e);P(t=>({...t,[e]:s}))}R(t=>({...t,[e]:!s}))})(e.number),children:[(0,i.jsxs)("div",{className:"discussion-summary-text",children:[(0,i.jsx)("span",{className:"discussion-summary-icon",children:"\ud83d\udcac"}),H(e.number)]}),(0,i.jsx)("span",{className:"discussion-expand-icon "+(T[e.number]?"expanded":""),children:"\u25b6"})]}),T[e.number]&&(0,i.jsxs)("div",{className:"discussion-expanded-section",children:[(0,i.jsxs)("div",{className:"discussion-header",children:[(0,i.jsx)("h4",{className:"discussion-title",children:"Discussion"}),(0,i.jsxs)("div",{className:"discussion-actions",children:[(0,i.jsx)("a",{href:`https://github.com/litlfred/sgex/pull/${e.number}/files`,target:"_blank",rel:"noopener noreferrer",className:"discussion-action-btn",children:"\ud83d\udcc1 View Files"}),(0,i.jsx)("a",{href:e.prUrl,target:"_blank",rel:"noopener noreferrer",className:"discussion-action-btn secondary",children:"\ud83d\udd17 View PR"})]})]}),y&&(0,i.jsxs)("div",{className:"comment-input-section",children:[(0,i.jsx)("textarea",{value:L[e.number]||"",onChange:s=>_(t=>({...t,[e.number]:s.target.value})),placeholder:"Add a comment...",className:"comment-input",rows:3}),(0,i.jsx)("button",{onClick:()=>(async(e,s)=>{if(!S||!s.trim())return!1;E(s=>({...s,[e]:!0}));try{const t=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${e}/comments`,{method:"POST",headers:{Authorization:`token ${S}`,Accept:"application/vnd.github.v3+json","Content-Type":"application/json"},body:JSON.stringify({body:s})});if(!t.ok)throw new Error(`Failed to submit comment: ${t.status}`);if(_(s=>({...s,[e]:""})),T[e]){const s=await X(e);P(t=>({...t,[e]:s}))}const a=await I(e);return M(s=>({...s,[e]:a})),!0}catch(l){return console.error(`Error submitting comment for PR ${e}:`,l),!1}finally{E(s=>({...s,[e]:!1}))}})(e.number,L[e.number]),disabled:!(null!==(s=L[e.number])&&void 0!==s&&s.trim())||D[e.number],className:"submit-comment-btn",children:D[e.number]?"Submitting...":"Add Comment"})]}),(0,i.jsx)("div",{className:"discussion-scroll-area",children:$?(0,i.jsx)("div",{className:"comments-loading",children:"Loading full discussion..."}):C[e.number]&&C[e.number].length>0?(0,i.jsx)("div",{className:"comments-list",children:C[e.number].slice(-5).map(e=>(0,i.jsxs)("div",{className:"comment-item",children:[(0,i.jsxs)("div",{className:"comment-header",children:[(0,i.jsx)("img",{src:e.avatar_url,alt:e.author,className:"comment-avatar"}),(0,i.jsx)("span",{className:"comment-author",children:e.author}),(0,i.jsx)("span",{className:"comment-date",children:e.created_at})]}),(0,i.jsx)("div",{className:"comment-body",children:e.body.length>200?`${e.body.substring(0,200)}...`:e.body})]},e.id))}):(0,i.jsx)("div",{className:"no-comments",children:y?"No comments yet. Be the first to comment!":"No comments yet. Login to add the first comment!"})})]}),(0,i.jsxs)("div",{className:"pr-actions",children:[(0,i.jsx)("a",{href:e.url,className:"preview-link",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)("span",{children:"\ud83d\ude80 View Preview"})}),(0,i.jsx)("a",{href:e.prUrl,className:"pr-link",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)("span",{children:"\ud83d\udccb View PR"})})]})]}),(0,i.jsx)("div",{className:"card-footer",children:(0,i.jsxs)("small",{className:"preview-path",children:["Preview URL: ",e.url]})})]},e.id)})}),ee>1&&(0,i.jsxs)("div",{className:"pagination",children:[(0,i.jsx)("button",{className:"pagination-btn",onClick:()=>h(Math.max(1,u-1)),disabled:1===u,children:"\u2190 Previous"}),(0,i.jsxs)("span",{className:"pagination-info",children:["Page ",u," of ",ee," (",Y.length," total)"]}),(0,i.jsx)("button",{className:"pagination-btn",onClick:()=>h(Math.min(ee,u+1)),disabled:u===ee,children:"Next \u2192"})]})]})]})})}},74155:(e,s,t)=>{t.d(s,{A:()=>i});var a=t(65043),n=t(74117),r=t(5452),o=t(70579);const i=e=>{let{onAuthSuccess:s}=e;const{t:i}=(0,n.Bd)(),[c,l]=(0,a.useState)(""),[d,u]=(0,a.useState)(""),[h,m]=(0,a.useState)(!1),p=r.A.getLogger("PATLogin");a.useEffect(()=>(p.componentMount({hasOnAuthSuccess:!!s}),()=>p.componentUnmount()),[p,s]);return(0,o.jsx)("div",{className:"pat-login",children:(0,o.jsxs)("div",{className:"pat-login-section",children:[(0,o.jsxs)("form",{onSubmit:async e=>{if(e.preventDefault(),p.userAction("PAT login attempt",{tokenProvided:!!c.trim()}),!c.trim()){return u("Please enter a GitHub Personal Access Token"),void p.warn("PAT login failed - no token provided")}m(!0),u("");const a=Date.now();p.auth("Starting PAT authentication");try{const{Octokit:e}=await Promise.resolve().then(t.bind(t,97036)),n=new e({auth:c.trim()});p.debug("Octokit instance created for PAT validation"),p.apiCall("GET","/user",null);const r=await n.rest.users.getAuthenticated(),o=Date.now()-a;p.apiResponse("GET","/user",r.status,o),p.auth("PAT authentication successful",{username:r.data.login,duration:o}),s(c.trim(),n)}catch(n){const e=Date.now()-a;p.apiError("GET","/user",n),p.auth("PAT authentication failed",{status:n.status,message:n.message,duration:e}),console.error("PAT authentication failed:",n),401===n.status?u("Invalid Personal Access Token. Please check your token and try again."):403===n.status?u("Token doesn't have sufficient permissions. Please ensure your token has 'repo' and 'read:org' scopes."):u("Authentication failed. Please check your connection and try again.")}finally{m(!1)}},className:"pat-form",children:[(0,o.jsxs)("div",{className:"form-group",children:[(0,o.jsxs)("label",{htmlFor:"pat-token",children:[i("auth.setupToken"),":"]}),(0,o.jsx)("input",{id:"pat-token",type:"password",value:c,onChange:e=>{l(e.target.value),d&&u("")},placeholder:"ghp_xxxxxxxxxxxxxxxxxxxx",className:"token-input "+(d?"error":""),disabled:h,autoComplete:"off"})]}),(0,o.jsx)("button",{type:"submit",className:"github-login-btn",disabled:h||!c.trim(),children:h?(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("span",{className:"spinner small"}),i("common.loading"),"..."]}):(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("span",{className:"github-icon",children:"\ud83d\udd11"}),i("auth.signInWithPAT")]})})]}),d&&(0,o.jsx)("div",{className:"error-message",children:d})]})})}}}]);
//# sourceMappingURL=990.02e46059.chunk.js.map