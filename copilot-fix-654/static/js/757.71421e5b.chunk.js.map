{"version":3,"file":"static/js/757.71421e5b.chunk.js","mappings":"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","sources":["components/CommitsSlider.js","components/CommitDiffModal.js","components/GitHubActionsIntegration.js","components/DAKStatusBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport githubService from '../services/githubService';\n\nconst CommitsSlider = ({ repository, selectedBranch }) => {\n  const [commits, setCommits] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasMore, setHasMore] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const sliderRef = useRef(null);\n\n  const owner = repository.owner?.login || repository.full_name.split('/')[0];\n  const repoName = repository.name;\n  const branch = selectedBranch || repository.default_branch || 'main';\n\n  // Load commits\n  const loadCommits = async (page = 1, append = false) => {\n    if (loading) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const options = {\n        sha: branch,\n        per_page: 10,\n        page: page\n      };\n\n      const newCommits = await githubService.getCommits(owner, repoName, options);\n      \n      if (append) {\n        setCommits(prev => [...prev, ...newCommits]);\n      } else {\n        setCommits(newCommits);\n      }\n\n      // Check if there are more commits\n      setHasMore(newCommits.length === 10);\n      setCurrentPage(page);\n    } catch (err) {\n      console.error('Error loading commits:', err);\n      setError('Failed to load commits');\n      setCommits([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initialize commits on mount or branch change\n  useEffect(() => {\n    loadCommits(1, false);\n  }, [repository, selectedBranch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Load more commits\n  const loadMoreCommits = () => {\n    if (hasMore && !loading) {\n      loadCommits(currentPage + 1, true);\n    }\n  };\n\n  // Scroll handlers\n  const scrollLeft = () => {\n    if (sliderRef.current) {\n      sliderRef.current.scrollBy({ left: -300, behavior: 'smooth' });\n    }\n  };\n\n  const scrollRight = () => {\n    if (sliderRef.current) {\n      sliderRef.current.scrollBy({ left: 300, behavior: 'smooth' });\n    }\n  };\n\n  // Format commit date\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now - date);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 1) {\n      return 'Yesterday';\n    } else if (diffDays < 7) {\n      return `${diffDays} days ago`;\n    } else {\n      return date.toLocaleDateString();\n    }\n  };\n\n  // Truncate commit message\n  const truncateMessage = (message, maxLength = 60) => {\n    if (message.length <= maxLength) return message;\n    return message.substring(0, maxLength) + '...';\n  };\n\n  if (error) {\n    return (\n      <div className=\"commits-slider-error\">\n        <span className=\"error-icon\">⚠️</span>\n        <span>{error}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"commits-slider-container\">\n      <div className=\"slider-header\">\n        <div className=\"slider-controls\">\n          <button \n            className=\"slider-control left\" \n            onClick={scrollLeft}\n            disabled={loading}\n          >\n            ←\n          </button>\n          <button \n            className=\"slider-control right\" \n            onClick={scrollRight}\n            disabled={loading}\n          >\n            →\n          </button>\n        </div>\n      </div>\n\n      <div className=\"commits-slider\" ref={sliderRef}>\n        {commits.map((commit, index) => (\n          <div key={commit.sha} className=\"commit-card\">\n            <div className=\"commit-header\">\n              <img \n                src={commit.author?.avatar_url || commit.committer?.avatar_url || `https://github.com/ghost.png`}\n                alt={commit.author?.login || commit.commit.author.name}\n                className=\"commit-avatar\"\n              />\n              <div className=\"commit-info\">\n                <div className=\"commit-author\">\n                  {commit.author?.login || commit.commit.author.name}\n                </div>\n                <div className=\"commit-date\">\n                  {formatDate(commit.commit.author.date)}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"commit-message\">\n              {truncateMessage(commit.commit.message)}\n            </div>\n            \n            <div className=\"commit-meta\">\n              <div className=\"commit-sha\">\n                <code>{commit.sha.substring(0, 7)}</code>\n              </div>\n              <a \n                href={commit.html_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"commit-link\"\n                title=\"View commit on GitHub\"\n              >\n                ↗️\n              </a>\n            </div>\n          </div>\n        ))}\n\n        {/* Load more button */}\n        {hasMore && (\n          <div className=\"load-more-container\">\n            <button \n              className=\"load-more-btn\"\n              onClick={loadMoreCommits}\n              disabled={loading}\n            >\n              {loading ? (\n                <>\n                  <span className=\"loading-spinner\">⏳</span>\n                  Loading...\n                </>\n              ) : (\n                'Load More'\n              )}\n            </button>\n          </div>\n        )}\n\n        {/* Loading state for initial load */}\n        {loading && commits.length === 0 && (\n          <div className=\"commits-loading\">\n            <span className=\"loading-spinner\">⏳</span>\n            Loading commits...\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CommitsSlider;","import React, { useState, useEffect, useCallback } from 'react';\nimport githubService from '../services/githubService';\n\nconst CommitDiffModal = ({ isOpen, onClose, owner, repo, commitSha, commitMessage }) => {\n  const [commitData, setCommitData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const loadCommitData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const data = await githubService.getCommit(owner, repo, commitSha);\n      setCommitData(data);\n    } catch (err) {\n      console.error('Error loading commit data:', err);\n      setError('Failed to load commit changes');\n    } finally {\n      setLoading(false);\n    }\n  }, [owner, repo, commitSha]);\n\n  useEffect(() => {\n    if (isOpen && commitSha) {\n      loadCommitData();\n    }\n  }, [isOpen, commitSha, loadCommitData]);\n\n  const getFileChangeIcon = (status) => {\n    switch (status) {\n      case 'added':\n        return '✅';\n      case 'removed':\n        return '❌';\n      case 'modified':\n        return '📝';\n      case 'renamed':\n        return '🔄';\n      default:\n        return '📄';\n    }\n  };\n\n  const getFileChangeClass = (status) => {\n    switch (status) {\n      case 'added':\n        return 'file-added';\n      case 'removed':\n        return 'file-removed';\n      case 'modified':\n        return 'file-modified';\n      case 'renamed':\n        return 'file-renamed';\n      default:\n        return 'file-default';\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"commit-diff-modal-overlay\" onClick={onClose}>\n      <div className=\"commit-diff-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"commit-diff-header\">\n          <h3>📋 Commit Changes</h3>\n          <button className=\"close-button\" onClick={onClose}>✕</button>\n        </div>\n        \n        <div className=\"commit-diff-content\">\n          {loading ? (\n            <div className=\"loading-state\">\n              <span className=\"loading-spinner\">⏳</span>\n              Loading commit changes...\n            </div>\n          ) : error ? (\n            <div className=\"error-state\">\n              <span className=\"error-icon\">⚠️</span>\n              {error}\n            </div>\n          ) : commitData ? (\n            <>\n              <div className=\"commit-info\">\n                <div className=\"commit-message\">\n                  <strong>Message:</strong> {commitData.commit.message}\n                </div>\n                <div className=\"commit-author\">\n                  <strong>Author:</strong> {commitData.commit.author.name} ({commitData.commit.author.email})\n                </div>\n                <div className=\"commit-date\">\n                  <strong>Date:</strong> {new Date(commitData.commit.author.date).toLocaleString()}\n                </div>\n                <div className=\"commit-sha\">\n                  <strong>SHA:</strong> \n                  <a \n                    href={commitData.html_url} \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"commit-link\"\n                  >\n                    {commitData.sha.substring(0, 7)}\n                  </a>\n                </div>\n              </div>\n\n              <div className=\"commit-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-icon\">📁</span>\n                  <span className=\"stat-value\">{commitData.files?.length || 0}</span>\n                  <span className=\"stat-label\">files changed</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-icon\">➕</span>\n                  <span className=\"stat-value\">{commitData.stats?.additions || 0}</span>\n                  <span className=\"stat-label\">additions</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-icon\">➖</span>\n                  <span className=\"stat-value\">{commitData.stats?.deletions || 0}</span>\n                  <span className=\"stat-label\">deletions</span>\n                </div>\n              </div>\n\n              <div className=\"files-changed\">\n                <h4>Files Changed</h4>\n                {commitData.files && commitData.files.length > 0 ? (\n                  <div className=\"files-list\">\n                    {commitData.files.map((file, index) => (\n                      <div key={index} className={`file-item ${getFileChangeClass(file.status)}`}>\n                        <div className=\"file-header\">\n                          <span className=\"file-icon\">{getFileChangeIcon(file.status)}</span>\n                          <span className=\"file-name\">{file.filename}</span>\n                          <span className=\"file-changes\">\n                            {file.additions > 0 && <span className=\"additions\">+{file.additions}</span>}\n                            {file.deletions > 0 && <span className=\"deletions\">-{file.deletions}</span>}\n                          </span>\n                        </div>\n                        {file.status === 'renamed' && file.previous_filename && (\n                          <div className=\"file-rename-info\">\n                            Renamed from: {file.previous_filename}\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"no-files\">No files changed in this commit</div>\n                )}\n              </div>\n\n              <div className=\"commit-actions\">\n                <a \n                  href={commitData.html_url} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"view-on-github-btn\"\n                >\n                  View Full Diff on GitHub ↗️\n                </a>\n              </div>\n            </>\n          ) : (\n            <div className=\"no-data\">No commit data available</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommitDiffModal;","import React, { useState, useEffect } from 'react';\nimport githubService from '../services/githubService';\nimport CommitDiffModal from './CommitDiffModal';\n\nconst GitHubActionsIntegration = ({ repository, selectedBranch, hasWriteAccess, profile }) => {\n  const [workflows, setWorkflows] = useState([]);\n  const [workflowRuns, setWorkflowRuns] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [triggeringWorkflow, setTriggeringWorkflow] = useState(null);\n  const [approvingRun, setApprovingRun] = useState(null);\n  const [showCommitDiff, setShowCommitDiff] = useState(false);\n  const [selectedCommit, setSelectedCommit] = useState(null);\n\n  const owner = repository.owner?.login || repository.full_name.split('/')[0];\n  const repoName = repository.name;\n  const branch = selectedBranch || repository.default_branch || 'main';\n\n  // Load workflows and recent runs\n  const loadWorkflowData = async () => {\n    if (!githubService.isAuth()) {\n      // In demo mode or without auth, show placeholder data\n      if (profile?.isDemo || repository?.owner?.login === 'demo-user') {\n        setWorkflows([\n          { \n            id: 'pages-build', \n            name: 'Deploy to GitHub Pages', \n            triggers: ['push', 'manual'],\n            filename: 'pages.yml',\n            url: `https://github.com/${owner}/${repoName}/blob/main/.github/workflows/pages.yml`\n          }\n        ]);\n        setWorkflowRuns([\n          {\n            id: 123456,\n            name: 'Deploy to GitHub Pages',\n            status: 'completed',\n            conclusion: 'success',\n            html_url: `https://github.com/${owner}/${repoName}/actions/runs/123456`,\n            created_at: new Date(Date.now() - 3600000).toISOString(), // 1 hour ago\n            updated_at: new Date(Date.now() - 3500000).toISOString(),\n            run_number: 42,\n            actor: { login: 'demo-user' },\n            head_sha: 'abc123def456',\n            display_title: 'Add new feature documentation'\n          },\n          {\n            id: 123457,\n            name: 'Deploy to GitHub Pages',\n            status: 'completed',\n            conclusion: 'action_required',\n            html_url: `https://github.com/${owner}/${repoName}/actions/runs/123457`,\n            created_at: new Date(Date.now() - 7200000).toISOString(), // 2 hours ago\n            updated_at: new Date(Date.now() - 7100000).toISOString(),\n            run_number: 41,\n            actor: { login: 'demo-user' },\n            head_sha: 'def456ghi789',\n            display_title: 'Update CI configuration for security'\n          },\n          {\n            id: 123458,\n            name: 'Deploy to GitHub Pages',\n            status: 'completed',\n            conclusion: 'failure',\n            html_url: `https://github.com/${owner}/${repoName}/actions/runs/123458`,\n            created_at: new Date(Date.now() - 10800000).toISOString(), // 3 hours ago\n            updated_at: new Date(Date.now() - 10700000).toISOString(),\n            run_number: 40,\n            actor: { login: 'demo-user' },\n            head_sha: 'ghi789jkl012',\n            display_title: 'Fix broken test suite'\n          }\n        ]);\n      } else {\n        setWorkflows([]);\n        setWorkflowRuns([]);\n      }\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Load workflows\n      const workflowsData = await githubService.getWorkflows(owner, repoName);\n      setWorkflows(workflowsData);\n\n      // Load recent workflow runs\n      const runsData = await githubService.getWorkflowRuns(owner, repoName, {\n        branch: branch,\n        per_page: 5\n      });\n      setWorkflowRuns(runsData.workflow_runs || []);\n    } catch (err) {\n      console.error('Error loading workflow data:', err);\n      \n      // Check if this is a permissions error\n      if (err.status === 403 || err.message.includes('permission') || err.message.includes('403')) {\n        setError('PAT does not grant permission to view GitHub Actions. Please update your token with Actions read permissions.');\n      } else {\n        setError('Failed to load GitHub Actions data');\n      }\n      \n      setWorkflows([]);\n      setWorkflowRuns([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initialize data on mount or branch change\n  useEffect(() => {\n    loadWorkflowData();\n  }, [repository, selectedBranch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Trigger workflow\n  const handleTriggerWorkflow = async (workflowId) => {\n    if (!hasWriteAccess || triggeringWorkflow) return;\n\n    setTriggeringWorkflow(workflowId);\n\n    try {\n      await githubService.triggerWorkflow(owner, repoName, workflowId, branch);\n      \n      // Refresh workflow runs after triggering\n      setTimeout(() => {\n        loadWorkflowData();\n      }, 2000);\n\n      // Show success message\n      alert('Workflow triggered successfully! It may take a few moments to appear in the runs list.');\n    } catch (err) {\n      console.error('Error triggering workflow:', err);\n      alert('Failed to trigger workflow. Please check your permissions and try again.');\n    } finally {\n      setTriggeringWorkflow(null);\n    }\n  };\n\n  // Approve workflow run\n  const handleApproveWorkflow = async (runId) => {\n    if (!hasWriteAccess) return;\n\n    setApprovingRun(runId);\n\n    try {\n      await githubService.approveWorkflowRun(owner, repoName, runId);\n      \n      // Refresh workflow runs after approval\n      setTimeout(() => {\n        loadWorkflowData();\n      }, 2000);\n\n      alert('Workflow approved successfully!');\n    } catch (err) {\n      console.error('Error approving workflow:', err);\n      alert('Failed to approve workflow. Please check your permissions and try again.');\n    } finally {\n      setApprovingRun(null);\n    }\n  };\n\n  // Show commit diff modal\n  const handleViewChanges = (run) => {\n    setSelectedCommit({\n      sha: run.head_sha,\n      message: run.display_title || run.name\n    });\n    setShowCommitDiff(true);\n  };\n\n  // Rerun workflow\n  const handleRerunWorkflow = async (runId) => {\n    if (!hasWriteAccess) return;\n\n    try {\n      await githubService.rerunWorkflow(owner, repoName, runId);\n      \n      // Refresh workflow runs after rerunning\n      setTimeout(() => {\n        loadWorkflowData();\n      }, 1000);\n\n      alert('Workflow rerun initiated successfully!');\n    } catch (err) {\n      console.error('Error rerunning workflow:', err);\n      alert('Failed to rerun workflow. Please check your permissions and try again.');\n    }\n  };\n\n  // Get status icon for workflow run\n  const getStatusIcon = (status, conclusion) => {\n    if (status === 'in_progress' || status === 'queued') {\n      return '🔄';\n    }\n    \n    switch (conclusion) {\n      case 'success':\n        return '✅';\n      case 'failure':\n        return '❌';\n      case 'cancelled':\n        return '⏹️';\n      case 'skipped':\n        return '⏭️';\n      case 'timed_out':\n        return '⏰';\n      case 'action_required':\n        return '⏳';\n      default:\n        return '⚪';\n    }\n  };\n\n  // Get status color for workflow run\n  const getStatusColor = (status, conclusion) => {\n    if (status === 'in_progress' || status === 'queued') {\n      return '#ffa500';\n    }\n    \n    switch (conclusion) {\n      case 'success':\n        return '#28a745';\n      case 'failure':\n        return '#dc3545';\n      case 'cancelled':\n        return '#6c757d';\n      case 'timed_out':\n        return '#fd7e14';\n      case 'action_required':\n        return '#6f42c1';\n      default:\n        return '#6c757d';\n    }\n  };\n\n  // Format duration\n  const formatDuration = (startTime, endTime) => {\n    if (!startTime) return 'Unknown';\n    \n    const start = new Date(startTime);\n    const end = endTime ? new Date(endTime) : new Date();\n    const diffMs = end - start;\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffSecs = Math.floor((diffMs % 60000) / 1000);\n    \n    if (diffMins > 0) {\n      return `${diffMins}m ${diffSecs}s`;\n    }\n    return `${diffSecs}s`;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"github-actions-loading\">\n        <span className=\"loading-spinner\">⏳</span>\n        Loading GitHub Actions...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"github-actions-error\">\n        <span className=\"error-icon\">⚠️</span>\n        <span>{error}</span>\n      </div>\n    );\n  }\n\n  if (!githubService.isAuth() && !(profile?.isDemo || repository?.owner?.login === 'demo-user')) {\n    return (\n      <div className=\"github-actions-placeholder\">\n        <div className=\"placeholder-content\">\n          <span className=\"placeholder-icon\">⚡</span>\n          <h4>GitHub Actions Integration</h4>\n          <p>Sign in to GitHub to view and manage workflow runs</p>\n          <a \n            href={`https://github.com/${owner}/${repoName}/actions`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"external-link\"\n          >\n            View Actions on GitHub ↗️\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"github-actions-integration\">\n      <div className=\"actions-header\">\n        <a \n          href={`https://github.com/${owner}/${repoName}/actions`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"external-link\"\n        >\n          View All ↗️\n        </a>\n      </div>\n\n      {/* Workflows Section */}\n      {workflows.length > 0 && (\n        <div className=\"workflows-section\">\n          <h5>Available Workflows</h5>\n          <div className=\"workflows-list\">\n            {workflows.map((workflow) => (\n              <div key={workflow.filename} className=\"workflow-item\">\n                <div className=\"workflow-info\">\n                  <div className=\"workflow-name\">{workflow.name}</div>\n                  <div className=\"workflow-triggers\">\n                    {workflow.triggers.map((trigger) => (\n                      <span key={trigger} className=\"trigger-tag\">\n                        {trigger}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n                <div className=\"workflow-actions\">\n                  {hasWriteAccess && workflow.triggers.includes('manual') && (\n                    <button\n                      className=\"trigger-btn\"\n                      onClick={() => handleTriggerWorkflow(workflow.filename)}\n                      disabled={triggeringWorkflow === workflow.filename}\n                      title=\"Trigger workflow manually\"\n                    >\n                      {triggeringWorkflow === workflow.filename ? (\n                        <>\n                          <span className=\"loading-spinner\">⏳</span>\n                          Triggering...\n                        </>\n                      ) : (\n                        '▶️ Run'\n                      )}\n                    </button>\n                  )}\n                  <a\n                    href={workflow.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"view-workflow-btn\"\n                    title=\"View workflow file\"\n                  >\n                    📄\n                  </a>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Recent Workflow Runs */}\n      <div className=\"workflow-runs-section\">\n        <h5>Recent Workflow Runs</h5>\n        {workflowRuns.length > 0 ? (\n          <div className=\"workflow-runs-list\">\n            {workflowRuns.map((run) => (\n              <div key={run.id} className=\"workflow-run-item\">\n                <div className=\"run-status\">\n                  <span \n                    className=\"status-icon\"\n                    style={{ color: getStatusColor(run.status, run.conclusion) }}\n                  >\n                    {getStatusIcon(run.status, run.conclusion)}\n                  </span>\n                </div>\n                <div className=\"run-info\">\n                  <div className=\"run-name\">{run.name}</div>\n                  <div className=\"run-details\">\n                    <span className=\"run-branch\">#{run.run_number}</span>\n                    <span className=\"run-separator\">•</span>\n                    <span className=\"run-actor\">{run.actor?.login}</span>\n                    <span className=\"run-separator\">•</span>\n                    <span className=\"run-duration\">\n                      {formatDuration(run.created_at, run.updated_at)}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"run-actions\">\n                  {hasWriteAccess && run.conclusion === 'action_required' && (\n                    <button\n                      className=\"approve-btn\"\n                      onClick={() => handleApproveWorkflow(run.id)}\n                      disabled={approvingRun === run.id}\n                      title=\"Approve workflow run\"\n                    >\n                      {approvingRun === run.id ? '⏳' : '👍'}\n                    </button>\n                  )}\n                  {hasWriteAccess && run.conclusion === 'failure' && (\n                    <button\n                      className=\"rerun-btn\"\n                      onClick={() => handleRerunWorkflow(run.id)}\n                      title=\"Re-run workflow\"\n                    >\n                      🔄\n                    </button>\n                  )}\n                  <button\n                    className=\"view-changes-btn\"\n                    onClick={() => handleViewChanges(run)}\n                    title=\"View commit changes\"\n                  >\n                    📋\n                  </button>\n                  <a\n                    href={run.html_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"view-run-btn\"\n                    title=\"View workflow run details\"\n                  >\n                    ↗️\n                  </a>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"no-runs\">\n            <p>No recent workflow runs found</p>\n            <p className=\"help-text\">\n              Workflow runs will appear here when actions are triggered in your repository.\n            </p>\n          </div>\n        )}\n      </div>\n      \n      {/* Commit Diff Modal */}\n      <CommitDiffModal\n        isOpen={showCommitDiff}\n        onClose={() => setShowCommitDiff(false)}\n        owner={owner}\n        repo={repoName}\n        commitSha={selectedCommit?.sha}\n        commitMessage={selectedCommit?.message}\n      />\n    </div>\n  );\n};\n\nexport default GitHubActionsIntegration;","import React, { useState, useEffect, useCallback } from 'react';\nimport githubService from '../services/githubService';\nimport CommitsSlider from './CommitsSlider';\nimport GitHubActionsIntegration from './GitHubActionsIntegration';\n\nconst DAKStatusBox = ({ repository, selectedBranch, hasWriteAccess, profile }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [repositoryStats, setRepositoryStats] = useState({\n    recentCommits: [],\n    openPullRequestsCount: 0,\n    openIssuesCount: 0,\n    statsLoading: false,\n    statsError: null\n  });\n\n  const owner = repository.owner?.login || repository.full_name.split('/')[0];\n  const repoName = repository.name;\n  const branch = selectedBranch || repository.default_branch || 'main';\n\n  // Load repository statistics\n  const loadRepositoryStats = useCallback(async () => {\n    if (!githubService.isAuth()) {\n      return;\n    }\n\n    setRepositoryStats(prev => ({ ...prev, statsLoading: true, statsError: null }));\n\n    try {\n      const stats = await githubService.getRepositoryStats(owner, repoName, branch);\n      setRepositoryStats({\n        recentCommits: stats.recentCommits,\n        openPullRequestsCount: stats.openPullRequestsCount,\n        openIssuesCount: stats.openIssuesCount,\n        statsLoading: false,\n        statsError: null\n      });\n    } catch (err) {\n      console.error('Error loading repository stats:', err);\n      setRepositoryStats(prev => ({\n        ...prev,\n        statsLoading: false,\n        statsError: 'Failed to load repository statistics'\n      }));\n    }\n  }, [owner, repoName, branch]);\n\n  // Initialize component\n  useEffect(() => {\n    if (repository && selectedBranch) {\n      loadRepositoryStats();\n    }\n  }, [repository, selectedBranch, loadRepositoryStats]);\n\n  // Handle toggle expansion\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // Format the last commit for display\n  const formatLastCommit = () => {\n    if (!repositoryStats.recentCommits || repositoryStats.recentCommits.length === 0) {\n      return null;\n    }\n    \n    const lastCommit = repositoryStats.recentCommits[0];\n    const commitDate = new Date(lastCommit.author.date);\n    const shortSha = lastCommit.sha.substring(0, 7);\n    \n    return {\n      message: lastCommit.message,\n      author: lastCommit.author.name,\n      sha: shortSha,\n      date: commitDate.toLocaleDateString(),\n      time: commitDate.toLocaleTimeString(),\n      url: lastCommit.html_url\n    };\n  };\n\n  const lastCommit = formatLastCommit();\n\n  return (\n    <div className=\"dak-status-box\">\n      <div className=\"status-header\" onClick={handleToggle}>\n        <div className=\"status-title\">\n          <span className=\"status-icon\">📊</span>\n          <h3>Repository Status</h3>\n          <span className=\"branch-indicator\">\n            {branch && <code>{branch}</code>}\n          </span>\n        </div>\n        <div className=\"status-indicators\">\n          {/* Repository stats summary */}\n          <div className=\"repo-stats-summary\">\n            <div className=\"stat-item\">\n              <span className=\"stat-icon\">🔄</span>\n              <span className=\"stat-count\">{repositoryStats.recentCommits.length}</span>\n              <span className=\"stat-label\">commits</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-icon\">🔀</span>\n              <span className=\"stat-count\">{repositoryStats.openPullRequestsCount}</span>\n              <span className=\"stat-label\">PRs</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-icon\">🐛</span>\n              <span className=\"stat-count\">{repositoryStats.openIssuesCount}</span>\n              <span className=\"stat-label\">issues</span>\n            </div>\n          </div>\n        </div>\n        \n        <span className={`expand-icon ${isExpanded ? 'expanded' : ''}`}>\n          ▼\n        </span>\n      </div>\n\n      {isExpanded && (\n        <div className=\"status-content\">\n          {repositoryStats.statsLoading ? (\n            <div className=\"loading-indicator\">\n              <span className=\"loading-spinner\">⏳</span>\n              Loading repository stats...\n            </div>\n          ) : repositoryStats.statsError ? (\n            <div className=\"error-message\">\n              <span className=\"error-icon\">⚠️</span>\n              {repositoryStats.statsError}\n            </div>\n          ) : (\n            <>\n              {/* Last Commit Section */}\n              {lastCommit && (\n                <div className=\"status-section\">\n                  <h4>📝 Latest Commit</h4>\n                  <div className=\"last-commit\">\n                    <div className=\"commit-message\">\n                      {lastCommit.message}\n                    </div>\n                    <div className=\"commit-meta\">\n                      <span className=\"commit-author\">by {lastCommit.author}</span>\n                      <span className=\"commit-sha\">\n                        <a href={lastCommit.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                          {lastCommit.sha}\n                        </a>\n                      </span>\n                      <span className=\"commit-date\">{lastCommit.date} at {lastCommit.time}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Repository Summary */}\n              <div className=\"status-section\">\n                <h4>📊 Repository Summary</h4>\n                <div className=\"repo-summary\">\n                  <div className=\"summary-item\">\n                    <span className=\"summary-icon\">🔀</span>\n                    <span className=\"summary-label\">Open Pull Requests:</span>\n                    <span className=\"summary-value\">{repositoryStats.openPullRequestsCount}</span>\n                  </div>\n                  <div className=\"summary-item\">\n                    <span className=\"summary-icon\">🐛</span>\n                    <span className=\"summary-label\">Open Issues:</span>\n                    <span className=\"summary-value\">{repositoryStats.openIssuesCount}</span>\n                  </div>\n                  <div className=\"summary-item\">\n                    <span className=\"summary-icon\">🌿</span>\n                    <span className=\"summary-label\">Current Branch:</span>\n                    <span className=\"summary-value\">{branch}</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Commits Section */}\n              <div className=\"status-section\">\n                <h4>🔄 Recent Commits</h4>\n                <CommitsSlider \n                  commits={repositoryStats.recentCommits}\n                  repository={repository}\n                  branch={branch}\n                />\n              </div>\n\n              {/* GitHub Actions Section */}\n              <div className=\"status-section\">\n                <h4>⚙️ GitHub Actions</h4>\n                <GitHubActionsIntegration\n                  repository={repository}\n                  selectedBranch={branch}\n                  hasWriteAccess={hasWriteAccess}\n                  profile={profile}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DAKStatusBox;"],"names":["_ref","_repository$owner","repository","selectedBranch","commits","setCommits","useState","loading","setLoading","error","setError","hasMore","setHasMore","currentPage","setCurrentPage","sliderRef","useRef","owner","login","full_name","split","repoName","name","branch","default_branch","loadCommits","async","page","arguments","length","undefined","append","options","sha","per_page","newCommits","githubService","getCommits","prev","err","console","useEffect","formatDate","dateString","date","Date","now","diffTime","Math","abs","diffDays","ceil","toLocaleDateString","truncateMessage","message","maxLength","substring","_jsxs","className","children","_jsx","onClick","scrollLeft","current","scrollBy","left","behavior","disabled","scrollRight","ref","map","commit","index","_commit$author","_commit$committer","_commit$author2","_commit$author3","src","author","avatar_url","committer","alt","href","html_url","target","rel","title","loadMoreCommits","_Fragment","_commitData$files","_commitData$stats","_commitData$stats2","isOpen","onClose","repo","commitSha","commitMessage","commitData","setCommitData","loadCommitData","useCallback","data","getCommit","getFileChangeIcon","status","getFileChangeClass","e","stopPropagation","email","toLocaleString","files","stats","additions","deletions","file","filename","previous_filename","_repository$owner3","hasWriteAccess","profile","workflows","setWorkflows","workflowRuns","setWorkflowRuns","triggeringWorkflow","setTriggeringWorkflow","approvingRun","setApprovingRun","showCommitDiff","setShowCommitDiff","selectedCommit","setSelectedCommit","loadWorkflowData","isAuth","workflowsData","getWorkflows","runsData","getWorkflowRuns","workflow_runs","includes","_repository$owner2","isDemo","id","triggers","url","conclusion","created_at","toISOString","updated_at","run_number","actor","head_sha","display_title","getStatusIcon","getStatusColor","formatDuration","startTime","endTime","start","diffMs","diffMins","floor","diffSecs","workflow","trigger","workflowId","triggerWorkflow","setTimeout","alert","handleTriggerWorkflow","run","_run$actor","style","color","runId","approveWorkflowRun","handleApproveWorkflow","rerunWorkflow","handleRerunWorkflow","handleViewChanges","CommitDiffModal","isExpanded","setIsExpanded","repositoryStats","setRepositoryStats","recentCommits","openPullRequestsCount","openIssuesCount","statsLoading","statsError","loadRepositoryStats","getRepositoryStats","lastCommit","formatLastCommit","commitDate","shortSha","time","toLocaleTimeString","handleToggle","CommitsSlider","GitHubActionsIntegration"],"sourceRoot":""}