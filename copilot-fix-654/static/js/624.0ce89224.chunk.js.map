{"version":3,"file":"static/js/624.0ce89224.chunk.js","mappings":"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","sources":["components/CoreDataDictionaryViewer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport { PageLayout, useDAKParams } from './framework';\n\nconst CoreDataDictionaryViewer = () => {\n  return (\n    <PageLayout pageName=\"core-data-dictionary-viewer\">\n      <CoreDataDictionaryViewerContent />\n    </PageLayout>\n  );\n};\n\nconst CoreDataDictionaryViewerContent = () => {\n  const navigate = useNavigate();\n  const { profile, repository, branch } = useDAKParams();\n  \n  // Get data from URL params\n  const user = profile?.login;\n  const repo = repository?.name;\n  \n  const [fshFiles, setFshFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [branches, setBranches] = useState([]);\n  const [hasGhPages, setHasGhPages] = useState(false);\n  const [dakFshFile, setDakFshFile] = useState(null);\n  const [dakConcepts, setDakConcepts] = useState([]);\n  const [dakTableSearch, setDakTableSearch] = useState('');\n  const [hasPublishedDak, setHasPublishedDak] = useState(false);\n  const [checkingPublishedDak, setCheckingPublishedDak] = useState(false);\n\n  // Generate base URL for IG Publisher artifacts\n  const getBaseUrl = useCallback((branchName) => {\n    const owner = user || repository?.owner?.login || repository?.full_name.split('/')[0];\n    const repoName = repo || repository?.name;\n    \n    if (branchName === (repository?.default_branch || 'main')) {\n      return `https://${owner}.github.io/${repoName}`;\n    } else {\n      return `https://${owner}.github.io/${repoName}/branches/${branchName}`;\n    }\n  }, [user, repository, repo]);\n\n  // Parse DAK.fsh file to extract concepts\n  const parseDakFshConcepts = useCallback((content) => {\n    const concepts = [];\n    \n    // Split by lines and find concept definitions\n    const lines = content.split('\\n');\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      \n      // Look for concept definitions: * #code \"display\" \"definition\"\n      const conceptMatch = line.match(/^\\*\\s*#([^\\s\"]+)\\s*\"([^\"]+)\"\\s*\"([^\"]+)\"/);\n      if (conceptMatch) {\n        const [, code, display, definition] = conceptMatch;\n        concepts.push({\n          code: code.trim(),\n          display: display.trim(),\n          definition: definition.trim()\n        });\n      }\n    }\n    \n    return concepts;\n  }, []);\n\n  const handleHomeNavigation = () => {\n    navigate('/');\n  };\n\n  const handleBackToDashboard = () => {\n    if (user && repo) {\n      // Use URL parameters for navigation\n      const dashboardPath = branch ? \n        `/dashboard/${user}/${repo}/${branch}` : \n        `/dashboard/${user}/${repo}`;\n      navigate(dashboardPath);\n    } else {\n      // Fallback to state-based navigation\n      navigate('/dashboard', { \n        state: { \n          profile, \n          repository, \n          branch \n        } \n      });\n    }\n  };\n\n  // Fetch FSH files from input/fsh directory\n  useEffect(() => {\n    const fetchFshFiles = async () => {\n      // Support both URL params and state-based data\n      const currentRepository = repository;\n      const currentBranch = branch;\n      const currentUser = user || repository?.owner?.login || repository?.full_name.split('/')[0];\n      const currentRepo = repo || repository?.name;\n      \n      if ((!currentRepository && (!currentUser || !currentRepo)) || !currentBranch) {\n        setLoading(false);\n        return;\n      }\n\n      // Check if published DAK CodeSystem exists\n      const checkPublishedDakExists = async (baseUrl) => {\n        try {\n          setCheckingPublishedDak(true);\n          const dakUrl = `${baseUrl}/CodeSystem-DAK.html`;\n          \n          // Use fetch to check if the URL exists (HEAD request would be better but may have CORS issues)\n          const response = await fetch(dakUrl, { method: 'HEAD' });\n          return response.ok;\n        } catch (error) {\n          console.warn('Error checking published DAK:', error);\n          return false;\n        } finally {\n          setCheckingPublishedDak(false);\n        }\n      };\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Try to fetch the input/fsh directory\n        try {\n          const fshDirContents = await githubService.getDirectoryContents(\n            currentUser, \n            currentRepo, \n            'input/fsh', \n            currentBranch\n          );\n\n          // Filter for .fsh files\n          const fshFilesList = fshDirContents\n            .filter(file => file.name.endsWith('.fsh') && file.type === 'file')\n            .map(file => ({\n              name: file.name,\n              path: file.path,\n              download_url: file.download_url,\n              html_url: file.html_url\n            }));\n\n          setFshFiles(fshFilesList);\n        } catch (err) {\n          if (err.status === 404) {\n            // input/fsh directory doesn't exist\n            setFshFiles([]);\n          } else {\n            throw err;\n          }\n        }\n\n        // Try to fetch the DAK.fsh file specifically from input/fsh/codesystems/\n        try {\n          const dakFile = await githubService.getDirectoryContents(\n            currentUser,\n            currentRepo,\n            'input/fsh/codesystems',\n            currentBranch\n          );\n          \n          // Look for DAK.fsh file\n          const dakFsh = dakFile.find(file => file.name === 'DAK.fsh' && file.type === 'file');\n          if (dakFsh) {\n            setDakFshFile({\n              name: dakFsh.name,\n              path: dakFsh.path,\n              download_url: dakFsh.download_url,\n              html_url: dakFsh.html_url\n            });\n\n            // Fetch and parse DAK.fsh content for table display\n            try {\n              const dakContent = await githubService.getFileContent(\n                currentUser,\n                currentRepo,\n                dakFsh.path,\n                currentBranch\n              );\n              const concepts = parseDakFshConcepts(dakContent);\n              setDakConcepts(concepts);\n            } catch (contentErr) {\n              console.warn('Could not parse DAK.fsh content:', contentErr);\n              setDakConcepts([]);\n            }\n          } else {\n            setDakFshFile(null);\n            setDakConcepts([]);\n          }\n        } catch (err) {\n          if (err.status === 404) {\n            // input/fsh/codesystems directory doesn't exist or no DAK.fsh\n            setDakFshFile(null);\n            setDakConcepts([]);\n          } else {\n            console.warn('Error fetching DAK.fsh:', err);\n            setDakFshFile(null);\n            setDakConcepts([]);\n          }\n        }\n\n        // Fetch branches to check for gh-pages\n        const allBranches = await githubService.getBranches(currentUser, currentRepo);\n        const branchNames = allBranches.map(b => b.name);\n        setBranches(branchNames.filter(name => name !== 'gh-pages'));\n        const hasGhPagesVar = branchNames.includes('gh-pages');\n        setHasGhPages(hasGhPagesVar);\n\n        // Check if published DAK exists if we have gh-pages\n        if (hasGhPagesVar) {\n          const baseUrl = getBaseUrl(currentBranch);\n          const dakExists = await checkPublishedDakExists(baseUrl);\n          setHasPublishedDak(dakExists);\n        } else {\n          setHasPublishedDak(false);\n        }\n\n      } catch (err) {\n        console.error('Error fetching FSH files:', err);\n        setError('Failed to load Core Data Dictionary files. Please check repository access.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFshFiles();\n  }, [repository, branch, user, repo, getBaseUrl, parseDakFshConcepts]);\n\n  // Fetch file content for modal display\n  const handleViewSource = async (file) => {\n    try {\n      setSelectedFile(file);\n      setFileContent('Loading...');\n      setShowModal(true);\n\n      const currentUser = user || repository?.owner?.login || repository?.full_name.split('/')[0];\n      const currentRepo = repo || repository?.name;\n      const currentBranch = branch;\n      \n      const content = await githubService.getFileContent(\n        currentUser,\n        currentRepo,\n        file.path,\n        currentBranch\n      );\n\n      setFileContent(content);\n    } catch (err) {\n      console.error('Error fetching file content:', err);\n      setFileContent('Error loading file content.');\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedFile(null);\n    setFileContent('');\n  };\n\n  if (!profile || !repository) {\n    navigate('/');\n    return <div>Redirecting...</div>;\n  }\n\n  if (loading) {\n    return (\n      <div className=\"core-data-dictionary-viewer loading-state\">\n        <div className=\"loading-content\">\n          <h2>Loading Core Data Dictionary...</h2>\n          <p>Fetching FHIR FSH files and repository data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"core-data-dictionary-viewer\">\n      <div className=\"viewer-header\">\n        <div className=\"who-branding\">\n          <h1 onClick={handleHomeNavigation} className=\"clickable-title\">SGEX Workbench</h1>\n          <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n        </div>\n        <div className=\"context-info\">\n          <img \n            src={profile?.avatar_url || `https://github.com/${user || profile?.login}.png`} \n            alt=\"Profile\" \n            className=\"context-avatar\" \n          />\n          <div className=\"context-details\">\n            <span className=\"context-repo\">{repo || repository?.name}</span>\n            <span className=\"context-component\">Core Data Dictionary</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"viewer-content\">\n        <div className=\"breadcrumb\">\n          <button onClick={() => navigate('/')} className=\"breadcrumb-link\">\n            Select Profile\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate(`/dak-selection/${profile.login}`, { state: { profile } })} className=\"breadcrumb-link\">\n            Select Repository\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={handleBackToDashboard} className=\"breadcrumb-link\">\n            DAK Components\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <span className=\"breadcrumb-current\">Core Data Dictionary</span>\n        </div>\n\n        <div className=\"viewer-main\">\n          <div className=\"component-intro\">\n            <div className=\"component-icon\" style={{ color: '#0078d4' }}>\n              📊\n            </div>\n            <div className=\"intro-content\">\n              <h2>Core Data Dictionary Viewer</h2>\n              <p>\n                View canonical representations of Component 2 Core Data Dictionary including FHIR CodeSystems, \n                ValueSets, and ConceptMaps stored in FSH format.\n              </p>\n              {branch && (\n                <div className=\"branch-info\">\n                  <strong>Branch:</strong> <code>{branch}</code>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              <h3>⚠️ Error</h3>\n              <p>{error}</p>\n            </div>\n          )}\n\n          {/* Documentation Link */}\n          <div className=\"documentation-section\">\n            <p>\n              <a \n                href=\"https://smart.who.int/ig-starter-kit/v1.0.0/\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"documentation-link\"\n              >\n                📚 WHO IG Starter Kit Documentation ↗\n              </a>\n            </p>\n          </div>\n\n          {/* Main content layout with two columns */}\n          <div className=\"two-column-layout\">\n            {/* Standard Dictionaries Section - Left Column */}\n            <div className=\"section standard-dictionaries-section left-column\">\n              <h3>Standard Dictionaries</h3>\n              \n              <div className=\"subsection\">\n                <h4>Code Systems</h4>\n                \n                {/* DAK Source File Links */}\n                {dakFshFile && (\n                  <div className=\"dak-source-section\">\n                    <h5>DAK Source File (FSH)</h5>\n                    <div className=\"dak-source-links\">\n                      <button \n                        className=\"action-btn primary\"\n                        onClick={() => handleViewSource(dakFshFile)}\n                        title=\"View DAK.fsh source code with syntax highlighting\"\n                      >\n                        📄 View Source\n                      </button>\n                      <a \n                        href={dakFshFile.html_url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"action-btn secondary\"\n                        title=\"View DAK.fsh source on GitHub\"\n                      >\n                        🔗 GitHub Source ↗\n                      </a>\n                    </div>\n                  </div>\n                )}\n\n                {/* Published DAK CodeSystem */}\n                {hasGhPages ? (\n                  <div className=\"dak-published-section\">\n                    <h5>Published CodeSystem</h5>\n                    {checkingPublishedDak ? (\n                      <p className=\"checking-published\">Checking published version...</p>\n                    ) : hasPublishedDak ? (\n                      <div className=\"dictionary-links\">\n                        <a \n                          href={`${getBaseUrl(branch)}/CodeSystem-DAK.html`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"dictionary-link primary\"\n                        >\n                          📊 View Published Core Data Dictionary (DAK) ↗\n                        </a>\n                      </div>\n                    ) : (\n                      <div className=\"unpublished-dak\">\n                        <span className=\"disabled-link\">Core Data Dictionary (DAK)</span>\n                        <p className=\"unpublished-note\">\n                          ⚠️ The published version is not yet available. The CodeSystem-DAK.html file has not been published to GitHub Pages.\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <p className=\"no-publication-note\">\n                    Published CodeSystems will be available once GitHub Pages is configured.\n                  </p>\n                )}\n              </div>\n\n              {/* DAK Concepts Table */}\n              {dakConcepts.length > 0 && (\n                <div className=\"subsection\">\n                  <h4>DAK Concepts ({dakConcepts.length} total)</h4>\n                  <div className=\"dak-table-controls\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search concepts...\"\n                      value={dakTableSearch}\n                      onChange={(e) => setDakTableSearch(e.target.value)}\n                      className=\"search-input\"\n                    />\n                  </div>\n                  <div className=\"dak-concepts-table\">\n                    <table>\n                      <thead>\n                        <tr>\n                          <th>Code</th>\n                          <th>Display</th>\n                          <th>Definition</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {dakConcepts\n                          .filter(concept => \n                            !dakTableSearch || \n                            concept.code.toLowerCase().includes(dakTableSearch.toLowerCase()) ||\n                            concept.display.toLowerCase().includes(dakTableSearch.toLowerCase()) ||\n                            concept.definition.toLowerCase().includes(dakTableSearch.toLowerCase())\n                          )\n                          .map((concept, index) => (\n                            <tr key={index}>\n                              <td className=\"concept-code\">{concept.code}</td>\n                              <td className=\"concept-display\">{concept.display}</td>\n                              <td className=\"concept-definition\">{concept.definition}</td>\n                            </tr>\n                          ))\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"subsection\">\n                <h4>Value Sets</h4>\n                <div className=\"placeholder-links\">\n                  <span className=\"placeholder-link\">Actors (Coming Soon)</span>\n                  <span className=\"placeholder-link\">Workflows (Coming Soon)</span>\n                  <span className=\"placeholder-link\">Decision Tables (Coming Soon)</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Publications Section - Right Column */}\n            {hasGhPages ? (\n              <div className=\"section publications-section right-column\">\n                <h3>Publications</h3>\n                <p>Published FHIR Implementation Guide artifacts generated by the IG Publisher</p>\n                \n                {branches.sort().map((branchName) => (\n                  <div key={branchName} className=\"branch-publication\">\n                    <h4>Branch: <code>{branchName}</code></h4>\n                    <div className=\"artifact-links\">\n                      <a \n                        href={`${getBaseUrl(branchName)}/artifacts.html#terminology-code-systems`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"artifact-link\"\n                      >\n                        Code Systems ↗\n                      </a>\n                      <a \n                        href={`${getBaseUrl(branchName)}/artifacts.html#terminology-value-sets`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"artifact-link\"\n                      >\n                        Value Sets ↗\n                      </a>\n                      <a \n                        href={`${getBaseUrl(branchName)}/artifacts.html#structures-logical-models`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"artifact-link\"\n                      >\n                        Logical Models ↗\n                      </a>\n                      <a \n                        href={`${getBaseUrl(branchName)}/artifacts.html#terminology-concept-maps`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"artifact-link\"\n                      >\n                        Concept Maps ↗\n                      </a>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"section no-publications-section right-column\">\n                <h3>Publications</h3>\n                <div className=\"no-gh-pages-message\">\n                  <p>📋 No published artifacts available</p>\n                  <p>This repository does not have a <code>gh-pages</code> branch for publishing FHIR Implementation Guide artifacts.</p>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* FHIR FSH Files Section */}\n          <div className=\"section fsh-files-section\">\n            <h3>FHIR FSH Source Files</h3>\n            <p>FHIR Shorthand (FSH) files containing CodeSystems, ValueSets, and ConceptMaps</p>\n            \n            {fshFiles.length === 0 ? (\n              <div className=\"no-files-message\">\n                <p>No FHIR FSH files found in <code>input/fsh/</code> directory.</p>\n                <p>Core Data Dictionary files should be stored in FSH format in this location.</p>\n              </div>\n            ) : (\n              <div className=\"fsh-files-grid\">\n                {fshFiles.map((file) => (\n                  <div key={file.path} className=\"fsh-file-card\">\n                    <div className=\"file-header\">\n                      <div className=\"file-icon\">📄</div>\n                      <div className=\"file-name\">{file.name}</div>\n                    </div>\n                    <div className=\"file-actions\">\n                      <button \n                        className=\"action-btn primary\"\n                        onClick={() => handleViewSource(file)}\n                        title=\"View source code with syntax highlighting\"\n                      >\n                        View Source\n                      </button>\n                      <a \n                        href={file.html_url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"action-btn secondary\"\n                        title=\"View source on GitHub\"\n                      >\n                        GitHub ↗\n                      </a>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Source Code Modal */}\n      {showModal && selectedFile && (\n        <div className=\"modal-overlay\" onClick={closeModal}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>{selectedFile.name}</h3>\n              <button className=\"modal-close\" onClick={closeModal}>×</button>\n            </div>\n            <div className=\"modal-body\">\n              <pre className=\"fsh-code\">\n                <code>{fileContent}</code>\n              </pre>\n            </div>\n            <div className=\"modal-footer\">\n              <a \n                href={selectedFile.html_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn-secondary\"\n              >\n                View on GitHub ↗\n              </a>\n              <button className=\"btn-primary\" onClick={closeModal}>\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      </div>\n  );\n};\n\nexport default CoreDataDictionaryViewer;"],"names":["CoreDataDictionaryViewerContent","navigate","useNavigate","profile","repository","branch","useDAKParams","user","login","repo","name","fshFiles","setFshFiles","useState","loading","setLoading","error","setError","selectedFile","setSelectedFile","fileContent","setFileContent","showModal","setShowModal","branches","setBranches","hasGhPages","setHasGhPages","dakFshFile","setDakFshFile","dakConcepts","setDakConcepts","dakTableSearch","setDakTableSearch","hasPublishedDak","setHasPublishedDak","checkingPublishedDak","setCheckingPublishedDak","getBaseUrl","useCallback","branchName","_repository$owner","owner","full_name","split","repoName","default_branch","parseDakFshConcepts","content","concepts","lines","i","length","conceptMatch","trim","match","code","display","definition","push","useEffect","async","_repository$owner2","currentRepository","currentBranch","currentUser","currentRepo","fshFilesList","githubService","getDirectoryContents","filter","file","endsWith","type","map","path","download_url","html_url","err","status","dakFsh","find","dakContent","getFileContent","contentErr","console","warn","branchNames","getBranches","b","hasGhPagesVar","includes","baseUrl","dakExists","dakUrl","fetch","method","ok","checkPublishedDakExists","fetchFshFiles","handleViewSource","_repository$owner3","closeModal","_jsx","className","children","_jsxs","onClick","handleHomeNavigation","src","avatar_url","alt","state","handleBackToDashboard","style","color","href","target","rel","title","placeholder","value","onChange","e","concept","toLowerCase","index","sort","stopPropagation","CoreDataDictionaryViewer","PageLayout","pageName"],"sourceRoot":""}