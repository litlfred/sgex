{"version":3,"file":"static/js/773.80130e97.chunk.js","mappings":"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","sources":["components/LandingPageWithFramework.js","components/PATLogin.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport repositoryCacheService from '../services/repositoryCacheService';\nimport PATLogin from './PATLogin';\nimport { PageLayout } from './framework';\n\nconst LandingPageWithFramework = () => {\n  const [user, setUser] = useState(null);\n  const [organizations, setOrganizations] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dakCounts, setDakCounts] = useState({});\n  const [warningMessage, setWarningMessage] = useState(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Load cached DAK counts without initiating any scanning\n  const loadCachedDakCounts = useCallback((userData, orgsData) => {\n    if (!githubService.isAuth()) {\n      return;\n    }\n\n    const counts = {};\n    \n    // Check cache for user's personal repositories\n    if (userData) {\n      const userCache = repositoryCacheService.getCachedRepositories(userData.login, 'user');\n      if (userCache && userCache.repositories) {\n        counts[`user-${userData.login}`] = userCache.repositories.length;\n      }\n    }\n    \n    // Check cache for organization repositories\n    orgsData.forEach(org => {\n      const orgCache = repositoryCacheService.getCachedRepositories(org.login, 'org');\n      if (orgCache && orgCache.repositories) {\n        counts[`org-${org.login}`] = orgCache.repositories.length;\n      }\n    });\n    \n    setDakCounts(counts);\n  }, []);\n\n  const fetchUserData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Check token permissions first\n      await githubService.checkTokenPermissions();\n      \n      // Fetch user data using GitHub service\n      const userData = await githubService.getCurrentUser();\n      setUser(userData);\n      \n      // Fetch organizations inline\n      let orgsData = [];\n      \n      if (githubService.isAuth()) {\n        try {\n          orgsData = await githubService.getUserOrganizations();\n        } catch (error) {\n          console.error('Error fetching organizations:', error);\n          orgsData = [];\n        }\n      }\n      \n      // Always ensure WHO organization is included\n      try {\n        const whoOrganization = await githubService.getWHOOrganization();\n        \n        // Check if WHO organization is already in the list\n        const whoIndex = orgsData.findIndex(org => org.login === 'WorldHealthOrganization');\n        \n        if (whoIndex >= 0) {\n          // Replace existing WHO org with fresh data and ensure isWHO flag\n          orgsData[whoIndex] = { ...orgsData[whoIndex], ...whoOrganization, isWHO: true };\n        } else {\n          // Add WHO organization at the beginning of the list\n          orgsData.unshift(whoOrganization);\n        }\n      } catch (whoError) {\n        console.warn('Could not fetch WHO organization data, using fallback:', whoError);\n        \n        // Fallback to hardcoded WHO organization\n        const whoOrganization = {\n          id: 'who-organization',\n          login: 'WorldHealthOrganization',\n          name: 'World Health Organization',\n          description: 'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',\n          avatar_url: 'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',\n          html_url: 'https://github.com/WorldHealthOrganization',\n          type: 'Organization',\n          isWHO: true\n        };\n        \n        // Check if WHO organization is already in the list\n        const hasWHO = orgsData.some(org => org.login === 'WorldHealthOrganization');\n        \n        if (!hasWHO) {\n          // Add WHO organization at the beginning of the list\n          orgsData.unshift(whoOrganization);\n        } else {\n          // Ensure existing WHO organization has the isWHO flag\n          orgsData = orgsData.map(org => \n            org.login === 'WorldHealthOrganization' \n              ? { ...org, isWHO: true }\n              : org\n          );\n        }\n      }\n      \n      setOrganizations(orgsData);\n      \n      // Load cached DAK counts (if available)\n      loadCachedDakCounts(userData, orgsData);\n      \n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      setError('Failed to fetch user data. Please check your connection and try again.');\n      setIsAuthenticated(false);\n      sessionStorage.removeItem('github_token');\n      localStorage.removeItem('github_token');\n    } finally {\n      setLoading(false);\n    }\n  }, [loadCachedDakCounts]);\n\n  // Initial authentication check - runs once on mount\n  useEffect(() => {\n    const initializeAuth = () => {\n      // Check if user is already authenticated from previous session\n      const token = sessionStorage.getItem('github_token') || localStorage.getItem('github_token');\n      if (token) {\n        const success = githubService.authenticate(token);\n        if (success) {\n          setIsAuthenticated(true);\n        } else {\n          sessionStorage.removeItem('github_token');\n          localStorage.removeItem('github_token');\n        }\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // Handle warning message from navigation state\n  useEffect(() => {\n    if (location.state?.warningMessage) {\n      setWarningMessage(location.state.warningMessage);\n      // Clear the warning message from navigation state to prevent it from persisting\n      navigate(location.pathname, { replace: true, state: {} });\n    }\n  }, [location.state, navigate, location.pathname]);\n\n  // Fetch user data when authentication state changes\n  useEffect(() => {\n    if (isAuthenticated && !user) {\n      fetchUserData();\n    }\n  }, [isAuthenticated, user, fetchUserData]);\n\n  const handleAuthSuccess = (token, octokitInstance) => {\n    // Store token in session storage for this session\n    sessionStorage.setItem('github_token', token);\n    \n    // Use the provided Octokit instance directly\n    githubService.authenticateWithOctokit(octokitInstance);\n    \n    setIsAuthenticated(true);\n    setError(null);\n    fetchUserData();\n  };\n\n  const handleLogout = () => {\n    githubService.logout();\n    setIsAuthenticated(false);\n    setUser(null);\n    setOrganizations([]);\n    setError(null);\n  };\n\n  const handleProfileSelect = (profile) => {\n    navigate(`/dak-action/${profile.login}`, { state: { profile } });\n  };\n\n  const handleDemoMode = () => {\n    // Create a mock profile for demonstration purposes\n    const demoProfile = {\n      login: 'demo-user',\n      name: 'Demo User',\n      avatar_url: 'https://github.com/github.png',\n      type: 'User',\n      isDemo: true\n    };\n    \n    // Navigate directly to DAK selection with edit action to show enhanced scanning\n    navigate(`/dak-selection/${demoProfile.login}`, {\n      state: {\n        profile: demoProfile,\n        action: 'edit'\n      }\n    });\n  };\n\n  const handleDismissWarning = () => {\n    setWarningMessage(null);\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <PageLayout pageName=\"landing\" showHeader={false}>\n        <div className=\"landing-page\">\n          <div className=\"landing-header\">\n            <div className=\"who-branding\">\n              <h1 className=\"clickable-title\">SGEX Workbench</h1>\n              <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n            </div>\n            <div className=\"header-nav\">\n              <a href=\"/sgex/docs/overview\" className=\"nav-link\">📖 Documentation</a>\n            </div>\n          </div>\n          \n          <div className=\"landing-content\">\n            {warningMessage && (\n              <div className=\"warning-message\">\n                <div className=\"warning-content\">\n                  <span className=\"warning-icon\">⚠️</span>\n                  <span className=\"warning-text\">{warningMessage}</span>\n                  <button \n                    className=\"warning-dismiss\" \n                    onClick={handleDismissWarning}\n                    aria-label=\"Dismiss warning\"\n                  >\n                    ×\n                  </button>\n                </div>\n              </div>\n            )}\n            <div className=\"welcome-section\">\n              <h2>Welcome to SGEX Workbench</h2>\n              <p>\n                A browser-based, standards-compliant collaborative editor for \n                WHO SMART Guidelines Digital Adaptation Kits (DAKs).\n              </p>\n              \n              <div className=\"auth-section\">\n                <p>Connect your GitHub account to get started:</p>\n                <PATLogin \n                  onAuthSuccess={handleAuthSuccess}\n                />\n                \n                {error && (\n                  <div className=\"error-message\">\n                    {error}\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"demo-section\">\n                <p>Want to try without authentication?</p>\n                <button \n                  onClick={handleDemoMode}\n                  className=\"demo-mode-btn\"\n                >\n                  🎭 Try Demo Mode\n                </button>\n                <p className=\"demo-note\">\n                  Demo mode showcases the enhanced DAK scanning display with mock data.\n                </p>\n              </div>\n              \n              <div className=\"info-section\">\n                <p>\n                  Need help getting started? Check out our comprehensive{' '}\n                  <a href=\"/sgex/docs/overview\" className=\"doc-link\">\n                    documentation\n                  </a>{' '}\n                  to learn more about SGEX Workbench and DAK components.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout pageName=\"landing\" showHeader={false}>\n      <div className=\"landing-page\">\n        <div className=\"landing-header\">\n          <div className=\"who-branding\">\n            <h1 className=\"clickable-title\">SGEX Workbench</h1>\n            <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n          </div>\n          <div className=\"user-info\">\n            <img src={user?.avatar_url} alt=\"User avatar\" className=\"user-avatar\" />\n            <span>{user?.name || user?.login}</span>\n            <a href=\"/sgex/docs/overview\" className=\"nav-link\">📖 Documentation</a>\n            <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\n          </div>\n        </div>\n        \n        <div className=\"landing-content\">\n          {warningMessage && (\n            <div className=\"warning-message\">\n              <div className=\"warning-content\">\n                <span className=\"warning-icon\">⚠️</span>\n                <span className=\"warning-text\">{warningMessage}</span>\n                <button \n                  className=\"warning-dismiss\" \n                  onClick={handleDismissWarning}\n                  aria-label=\"Dismiss warning\"\n                >\n                  ×\n                </button>\n              </div>\n            </div>\n          )}\n          {loading ? (\n            <div className=\"loading-section\">\n              <div className=\"spinner\"></div>\n              <p>Loading profile data...</p>\n            </div>\n          ) : (\n            <div className=\"profile-selection\">\n              <h2>Select Profile or Organization</h2>\n              <p>Choose the GitHub profile or organization containing your DAK repositories:</p>\n              \n              {error && <div className=\"error-message\">{error}</div>}\n              \n              <div className=\"profile-grid\">\n                {/* Personal Profile */}\n                <div \n                  className=\"profile-card\"\n                  onClick={() => handleProfileSelect({ type: 'user', ...user })}\n                >\n                  <div className=\"profile-card-header\">\n                    <img src={user?.avatar_url} alt=\"Personal profile\" />\n                    {dakCounts[`user-${user?.login}`] > 0 && (\n                      <div className=\"dak-count-badge\">\n                        {dakCounts[`user-${user?.login}`]}\n                      </div>\n                    )}\n                  </div>\n                  <h3>{user?.name || user?.login}</h3>\n                  <p>Personal repositories</p>\n                  <div className=\"profile-badges\">\n                    <span className=\"profile-type\">Personal</span>\n                  </div>\n                </div>\n                \n                {/* Organization Profiles */}\n                {organizations.map((org) => (\n                  <div \n                    key={org.login}\n                    className={`profile-card ${org.isWHO ? 'who-org' : ''}`}\n                    onClick={() => handleProfileSelect({ type: 'org', ...org })}\n                  >\n                    <div className=\"profile-card-header\">\n                      <img \n                        src={org.avatar_url || `https://github.com/${org.login}.png`} \n                        alt={`${org.name || org.login} organization`} \n                      />\n                      {dakCounts[`org-${org.login}`] > 0 && (\n                        <div className=\"dak-count-badge\">\n                          {dakCounts[`org-${org.login}`]}\n                        </div>\n                      )}\n                    </div>\n                    <h3>{org.name || org.login}</h3>\n                    <p>@{org.login}</p>\n                    <div className=\"profile-badges\">\n                      <span className=\"profile-type\">Organization</span>\n                      {org.isWHO && <span className=\"who-badge\">WHO Official</span>}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default LandingPageWithFramework;","import React, { useState } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport logger from \"../utils/logger\";\n\nconst PATLogin = ({ onAuthSuccess }) => {\n  const { t } = useTranslation();\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const componentLogger = logger.getLogger('PATLogin');\n\n  React.useEffect(() => {\n    componentLogger.componentMount({ hasOnAuthSuccess: !!onAuthSuccess });\n    return () => componentLogger.componentUnmount();\n  }, [componentLogger, onAuthSuccess]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    componentLogger.userAction('PAT login attempt', { tokenProvided: !!token.trim() });\n    \n    if (!token.trim()) {\n      const errorMsg = \"Please enter a GitHub Personal Access Token\";\n      setError(errorMsg);\n      componentLogger.warn('PAT login failed - no token provided');\n      return;\n    }\n\n    setLoading(true);\n    setError(\"\");\n    const startTime = Date.now();\n    componentLogger.auth('Starting PAT authentication');\n    \n    try {\n      // Test the token by creating an Octokit instance and making a test request\n      const { Octokit } = await import('@octokit/rest');\n      const octokit = new Octokit({ auth: token.trim() });\n      componentLogger.debug('Octokit instance created for PAT validation');\n      \n      // Test the token by fetching user info\n      componentLogger.apiCall('GET', '/user', null);\n      const userResponse = await octokit.rest.users.getAuthenticated();\n      const duration = Date.now() - startTime;\n      componentLogger.apiResponse('GET', '/user', userResponse.status, duration);\n      \n      componentLogger.auth('PAT authentication successful', { \n        username: userResponse.data.login,\n        duration \n      });\n      \n      // Call success callback with token and octokit instance\n      onAuthSuccess(token.trim(), octokit);\n    } catch (err) {\n      const duration = Date.now() - startTime;\n      componentLogger.apiError('GET', '/user', err);\n      componentLogger.auth('PAT authentication failed', { \n        status: err.status, \n        message: err.message,\n        duration \n      });\n      console.error('PAT authentication failed:', err);\n      \n      if (err.status === 401) {\n        setError(\"Invalid Personal Access Token. Please check your token and try again.\");\n      } else if (err.status === 403) {\n        setError(\"Token doesn't have sufficient permissions. Please ensure your token has 'repo' and 'read:org' scopes.\");\n      } else {\n        setError(\"Authentication failed. Please check your connection and try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTokenChange = (e) => {\n    setToken(e.target.value);\n    if (error) setError(\"\"); // Clear error when user starts typing\n  };\n\n  return (\n    <div className=\"pat-login\">\n      <div className=\"pat-login-section\">\n        <form onSubmit={handleSubmit} className=\"pat-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"pat-token\">{t('auth.setupToken')}:</label>\n            <input\n              id=\"pat-token\"\n              type=\"password\"\n              value={token}\n              onChange={handleTokenChange}\n              placeholder=\"ghp_xxxxxxxxxxxxxxxxxxxx\"\n              className={`token-input ${error ? 'error' : ''}`}\n              disabled={loading}\n              autoComplete=\"off\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"github-login-btn\" \n            disabled={loading || !token.trim()}\n          >\n            {loading ? (\n              <>\n                <span className=\"spinner small\"></span>\n                {t('common.loading')}...\n              </>\n            ) : (\n              <>\n                <span className=\"github-icon\">🔑</span>\n                {t('auth.signInWithPAT')}\n              </>\n            )}\n          </button>\n        </form>\n        \n        {error && <div className=\"error-message\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default PATLogin;"],"names":["LandingPageWithFramework","user","setUser","useState","organizations","setOrganizations","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","dakCounts","setDakCounts","warningMessage","setWarningMessage","navigate","useNavigate","location","useLocation","loadCachedDakCounts","useCallback","userData","orgsData","githubService","isAuth","counts","userCache","repositoryCacheService","getCachedRepositories","login","repositories","length","forEach","org","orgCache","fetchUserData","async","checkTokenPermissions","getCurrentUser","getUserOrganizations","console","whoOrganization","getWHOOrganization","whoIndex","findIndex","isWHO","unshift","whoError","warn","id","name","description","avatar_url","html_url","type","some","map","sessionStorage","removeItem","localStorage","useEffect","initializeAuth","token","getItem","authenticate","_location$state","state","pathname","replace","handleAuthSuccess","octokitInstance","setItem","authenticateWithOctokit","handleProfileSelect","profile","handleDemoMode","demoProfile","isDemo","action","handleDismissWarning","_jsx","PageLayout","pageName","showHeader","children","_jsxs","className","src","alt","href","onClick","handleLogout","logout","PATLogin","onAuthSuccess","_ref","t","useTranslation","setToken","componentLogger","logger","getLogger","React","componentMount","hasOnAuthSuccess","componentUnmount","onSubmit","e","preventDefault","userAction","tokenProvided","trim","startTime","Date","now","auth","Octokit","octokit","debug","apiCall","userResponse","rest","users","getAuthenticated","duration","apiResponse","status","username","data","err","apiError","message","htmlFor","value","onChange","target","placeholder","disabled","autoComplete","_Fragment"],"sourceRoot":""}