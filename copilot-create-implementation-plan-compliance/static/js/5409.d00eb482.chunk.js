"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[5409],{35409:(e,s,n)=>{n.r(s),n.d(s,{default:()=>o});var i=n(9950),r=n(46901),c=n(53782),t=n(44414);const a=()=>{const e=(0,c.N5)(),[s,n]=(0,i.useState)([]),[a,o]=(0,i.useState)(!0),[l,d]=(0,i.useState)(null),[h,u]=(0,i.useState)(""),p=null===e||void 0===e?void 0:e.profile,f=null===e||void 0===e?void 0:e.repository,m=null===e||void 0===e?void 0:e.branch,j=null===p||void 0===p?void 0:p.login,x=null===f||void 0===f?void 0:f.name,v=m||(null===f||void 0===f?void 0:f.default_branch)||"main",N=(0,i.useCallback)((e,s)=>{const n=[],i=s.split("\n");let r=null,c=!1;for(let h=0;h<i.length;h++){const s=i[h].trim();if(s.startsWith("Profile:")||s.startsWith("Instance:")){var t;const n=null===(t=s.split(":")[1])||void 0===t?void 0:t.trim();n&&(r={id:n,name:n,description:"",type:"FSH Profile/Instance",source:{type:"fsh",path:e,lineNumber:h+1}},c=!0)}if((s.includes("ActorDefinition")||s.includes("Actor")||s.toLowerCase().includes("persona")||s.toLowerCase().includes("role"))&&!r&&s.includes(":")){var a;const n=s.split(":"),i=null===(a=n[n.length-1])||void 0===a?void 0:a.trim();i&&(r={id:i,name:i,description:"Actor definition found",type:"FSH Actor",source:{type:"fsh",path:e,lineNumber:h+1}},c=!0)}if(r&&c){var o;if(s.startsWith("Title:"))r.name=(null===(o=s.split(":")[1])||void 0===o?void 0:o.trim().replace(/"/g,""))||r.id;else if(s.startsWith("Description:")){var l;r.description=(null===(l=s.split(":")[1])||void 0===l?void 0:l.trim().replace(/"/g,""))||""}else if(s.startsWith("Id:")){var d;r.id=(null===(d=s.split(":")[1])||void 0===d?void 0:d.trim())||r.id}(""===s||s.startsWith("Profile:")||s.startsWith("Instance:"))&&r.id&&h>0&&(n.push(r),r=null,c=!1)}}return r&&r.id&&n.push(r),n},[]),g=(0,i.useCallback)((e,s)=>{const n=[];try{const i=JSON.parse(s),r=function(s){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if("object"!==typeof s||null===s)return;if(Array.isArray(s))return void s.forEach((e,s)=>r(e,"".concat(i,"[").concat(s,"]")));const c=s.resourceType,t=s.id;c&&t&&("ActorDefinition"===c||"SGActorDefinition"===c||"Persona"===c||"SGPersona"===c||c.toLowerCase().includes("actor")||c.toLowerCase().includes("persona"))&&n.push({id:t,name:s.name||s.title||t,description:s.description||"".concat(c," resource"),type:"JSON ".concat(c),source:{type:"json",path:e,resourceType:c,fullPath:i}}),Object.keys(s).forEach(e=>{r(s[e],i?"".concat(i,".").concat(e):e)})};r(i)}catch(i){console.warn("Failed to parse JSON file ".concat(e,":"),i)}return n},[]),y=(0,i.useCallback)(async()=>{if(!r.A.isAuth()||!j||!x)return d("GitHub authentication required and repository information needed"),void o(!1);u("Starting scan..."),n([]);try{const i=[];u("Scanning FSH files in input/fsh/actors...");try{const s=await r.A.getDirectoryContents(j,x,"input/fsh/actors",v);for(const n of s)if("file"===n.type&&n.name.endsWith(".fsh")){u("Scanning FSH file: ".concat(n.name));try{const e=await r.A.getFileContent(j,x,n.path,v),s=N(n.path,e);i.push(...s)}catch(e){console.warn("Failed to read FSH file ".concat(n.path,":"),e)}}}catch(s){console.warn("No input/fsh/actors directory found or access denied:",s)}u("Scanning JSON files in inputs/resources...");try{const s=await r.A.getDirectoryContents(j,x,"inputs/resources",v);for(const n of s)if("file"===n.type&&n.name.endsWith(".json")){u("Scanning JSON file: ".concat(n.name));try{const e=await r.A.getFileContent(j,x,n.path,v),s=g(n.path,e);i.push(...s)}catch(e){console.warn("Failed to read JSON file ".concat(n.path,":"),e)}}}catch(s){console.warn("No inputs/resources directory found or access denied:",s)}u("Scan complete. Found ".concat(i.length," actors.")),n(i),d(null)}catch(l){console.error("Error scanning for actors:",l),d("Failed to scan repository: ".concat(l.message)),u("Scan failed")}finally{o(!1)}},[j,x,v,N,g]);(0,i.useEffect)(()=>{j&&x?y():(o(!1),d("Repository information not available"))},[j,x,v,y]);const b=(0,i.useCallback)(e=>{if(!j||!x||!e.source)return"#";const s="https://github.com/".concat(j,"/").concat(x,"/blob/").concat(v,"/").concat(e.source.path);return e.source.lineNumber?"".concat(s,"#L").concat(e.source.lineNumber):s},[j,x,v]);return e?a?(0,t.jsx)("div",{className:"persona-viewer",children:(0,t.jsxs)("div",{className:"loading-state",children:[(0,t.jsx)("div",{className:"loading-spinner"}),(0,t.jsx)("p",{children:"Loading user scenarios and personas..."}),h&&(0,t.jsx)("p",{className:"scan-status",children:h})]})}):l?(0,t.jsx)("div",{className:"persona-viewer",children:(0,t.jsxs)("div",{className:"error-state",children:[(0,t.jsx)("h2",{children:"Error"}),(0,t.jsx)("p",{children:l}),j&&x&&(0,t.jsx)("button",{onClick:y,className:"retry-button",children:"Retry Scan"})]})}):(0,t.jsxs)("div",{className:"persona-viewer",children:[(0,t.jsxs)("div",{className:"page-header",children:[(0,t.jsx)("h1",{children:"Generic Personas & Actor Definitions"}),(0,t.jsx)("p",{className:"page-description",children:"Actor definitions and personas found in this DAK repository for healthcare workflows."}),j&&x&&(0,t.jsxs)("div",{className:"repository-info",children:[(0,t.jsx)("strong",{children:"Repository:"})," ",j,"/",x,(0,t.jsxs)("span",{className:"branch-info",children:["(branch: ",v,")"]})]})]}),(0,t.jsxs)("div",{className:"scan-controls",children:[(0,t.jsx)("button",{onClick:y,className:"rescan-button",disabled:a,children:a?"Scanning...":"Rescan Repository"}),h&&(0,t.jsx)("p",{className:"scan-status",children:h})]}),(0,t.jsxs)("div",{className:"actors-summary",children:[(0,t.jsxs)("h2",{children:["Found Personas & Actors (",s.length,")"]}),0===s.length?(0,t.jsxs)("div",{className:"no-actors",children:[(0,t.jsx)("p",{children:"No actor definitions or personas found in this repository."}),(0,t.jsxs)("div",{className:"search-info",children:[(0,t.jsx)("h3",{children:"Searched in:"}),(0,t.jsxs)("ul",{children:[(0,t.jsxs)("li",{children:[(0,t.jsx)("code",{children:"input/fsh/actors/*.fsh"})," - FSH actor definitions (generous matching)"]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("code",{children:"inputs/resources/*.json"})," - JSON ActorDefinition resources (strict matching)"]})]})]})]}):(0,t.jsx)("div",{className:"actors-list",children:s.map((e,s)=>(0,t.jsxs)("div",{className:"actor-card",children:[(0,t.jsxs)("div",{className:"actor-header",children:[(0,t.jsx)("h3",{className:"actor-name",children:e.name}),(0,t.jsx)("span",{className:"actor-type ".concat(e.source.type),children:e.type})]}),(0,t.jsxs)("div",{className:"actor-details",children:[(0,t.jsxs)("p",{className:"actor-id",children:[(0,t.jsx)("strong",{children:"ID:"})," ",e.id]}),e.description&&(0,t.jsx)("p",{className:"actor-description",children:e.description})]}),(0,t.jsxs)("div",{className:"actor-source",children:[(0,t.jsxs)("p",{className:"source-path",children:[(0,t.jsx)("strong",{children:"Source:"}),(0,t.jsxs)("a",{href:b(e),target:"_blank",rel:"noopener noreferrer",className:"source-link",children:[e.source.path,e.source.lineNumber&&" (line ".concat(e.source.lineNumber,")")]})]}),e.source.resourceType&&(0,t.jsxs)("p",{className:"resource-type",children:[(0,t.jsx)("strong",{children:"Resource Type:"})," ",e.source.resourceType]})]})]},s))})]})]}):(0,t.jsxs)("div",{className:"persona-viewer",children:[(0,t.jsxs)("div",{className:"page-header",children:[(0,t.jsx)("h1",{children:"Generic Personas & Actor Definitions"}),(0,t.jsx)("p",{className:"page-description",children:"Initializing page context..."})]}),(0,t.jsx)("div",{className:"main-content",children:(0,t.jsxs)("div",{className:"error-message",children:[(0,t.jsx)("h2",{children:"Loading"}),(0,t.jsx)("p",{children:"Page framework is initializing. Please wait..."})]})})]})},o=()=>(0,t.jsx)(c.Mx,{pageName:"persona-viewer",children:(0,t.jsx)(a,{})})}}]);