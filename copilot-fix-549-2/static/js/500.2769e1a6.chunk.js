"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[500],{14832:(e,s,t)=>{t.d(s,{A:()=>l});var i=t(89379),n=t(93071),o=t(22392),a=t(55661);const l=new class{constructor(){this.initialized=!0,this.compilationResults=null,this.logs=[],this.listeners=new Set}async loadFSHFiles(e,s,t){this.log("info","Loading FSH files from ".concat(e.full_name,"/").concat(s));try{const i=await this.loadGitHubFSHFiles(e,s,t);this.log("info","Loaded ".concat(i.length," FSH files from GitHub"));const n=await this.loadStagingGroundFSHFiles();this.log("info","Loaded ".concat(n.length," FSH files from staging ground"));const o=this.mergeFSHFiles(i,n);return this.log("info","Total FSH files after merge: ".concat(o.length)),o}catch(i){throw this.log("error","Failed to load FSH files: ".concat(i.message)),i}}async loadGitHubFSHFiles(e,s,t){const i=[];try{const a=["input/fsh","fsh","input/fsh/profiles","input/fsh/extensions","input/fsh/valuesets","input/fsh/codesystems","input/fsh/examples","input/fsh/rules","input/fsh/aliases"];for(const l of a)try{const o=await n.A.getRepositoryContents(e.owner.login,e.name,l,s,t.token);if(Array.isArray(o))for(const a of o)if("file"===a.type&&a.name.endsWith(".fsh")){const o=await n.A.getFileContent(e.owner.login,e.name,a.path,s,t.token);i.push({path:a.path,name:a.name,content:o,source:"github",size:a.size})}}catch(o){this.log("debug","Directory ".concat(l," not found or inaccessible"))}try{const o=await n.A.getRepositoryContents(e.owner.login,e.name,"",s,t.token);if(Array.isArray(o))for(const a of o)if("file"===a.type&&a.name.endsWith(".fsh")){const o=await n.A.getFileContent(e.owner.login,e.name,a.path,s,t.token);i.push({path:a.path,name:a.name,content:o,source:"github",size:a.size})}}catch(o){this.log("debug","Root directory check failed: ".concat(o.message))}}catch(o){throw this.log("error","Failed to load GitHub FSH files: ".concat(o.message)),o}return i}async loadStagingGroundFSHFiles(){const e=[];try{const s=o.A.getStagingGround();if(s&&s.files)for(const t of s.files)t.path.endsWith(".fsh")&&e.push({path:t.path,name:t.path.split("/").pop(),content:t.content,source:"staging",metadata:t.metadata,timestamp:t.timestamp})}catch(s){throw this.log("error","Failed to load staging ground FSH files: ".concat(s.message)),s}return e}mergeFSHFiles(e,s){const t=[...e];for(const i of s){const e=t.findIndex(e=>e.path===i.path);e>=0?(t[e]=i,this.log("debug","Overriding ".concat(i.path," with staging ground version"))):(t.push(i),this.log("debug","Adding new file ".concat(i.path," from staging ground")))}return t}async loadSushiConfig(e,s,t){try{let l=null,r=null;try{const i=await n.A.getFileContent(e.owner.login,e.name,"sushi-config.yaml",s,t.token);l=a.default.load(i),this.log("info","Loaded SUSHI configuration from GitHub: ".concat(l.id||"unnamed"))}catch(i){this.log("warn","Could not load sushi-config.yaml from GitHub: ".concat(i.message))}try{const e=o.A.getStagingFiles().find(e=>"sushi-config.yaml"===e.path);e&&(r=a.default.load(e.content),this.log("info","Loaded SUSHI configuration from staging: ".concat(r.id||"unnamed")))}catch(i){this.log("warn","Could not load sushi-config.yaml from staging: ".concat(i.message))}const c=r||l;if(!c)throw new Error("No sushi-config.yaml found in repository or staging");return{config:c,hasGithubVersion:!!l,hasStagingVersion:!!r,isUsingStaging:!!r}}catch(i){throw this.log("error","Failed to load sushi-config.yaml: ".concat(i.message)),i}}async saveSushiConfigToStaging(e){try{const s=a.default.dump(e,{indent:2,lineWidth:120,quotingType:'"'});return o.A.saveFile("sushi-config.yaml",s),this.log("info","Saved SUSHI configuration to staging ground"),!0}catch(s){throw this.log("error","Failed to save sushi-config.yaml to staging: ".concat(s.message)),s}}validateSushiConfig(e){const s=[],t=[];return e.id?/^[a-z0-9]+(\.[a-z0-9]+)*$/.test(e.id)||s.push("id must be lowercase alphanumeric with dots only (e.g., who.fhir.anc)"):s.push("id field is required"),e.name?/\s/.test(e.name)&&s.push("name should not contain spaces (use PascalCase, e.g., WHOANCGuidelines)"):s.push("name field is required"),e.version?/^\d+\.\d+\.\d+(-[a-zA-Z0-9]+)?$/.test(e.version)||s.push("version must follow semantic versioning (e.g., 1.0.0)"):s.push("version field is required"),e.fhirVersion?["4.0.1","4.3.0","5.0.0"].includes(e.fhirVersion)||t.push("fhirVersion should be one of: 4.0.1, 4.3.0, 5.0.0"):t.push("fhirVersion not specified, defaulting to 4.0.1"),e.publisher?"object"===typeof e.publisher&&(e.publisher.name||t.push("publisher.name is recommended"),e.publisher.url&&!/^https?:\/\//.test(e.publisher.url)&&s.push("publisher.url must be a valid URL starting with http:// or https://"),e.publisher.email&&!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.publisher.email)&&s.push("publisher.email must be a valid email address")):t.push("publisher information is recommended"),e.dependencies?e.dependencies["hl7.fhir.uv.sdc"]||e.dependencies["smart.who.int.base"]||t.push("WHO SMART Guidelines DAKs should include smart.who.int.base dependency"):t.push("dependencies section is recommended for WHO SMART Guidelines DAKs"),{valid:0===s.length,errors:s,warnings:t}}async loadPagesWithSources(e,s,t,a){const l=[];if(a.pages)for(const[c,h]of Object.entries(a.pages)){const a=(0,i.A)((0,i.A)({key:c},h),{},{sources:{github:null,staging:null}}),d="input/pagecontent/".concat(c,".md");try{const i=await n.A.getFileContent(e.owner.login,e.name,d,s,t.token);a.sources.github={path:d,url:"https://github.com/".concat(e.owner.login,"/").concat(e.name,"/blob/").concat(s,"/").concat(d),size:i.length}}catch(r){}try{const e=o.A.getStagingFiles().find(e=>e.path===d);e&&(a.sources.staging={path:d,size:e.content.length})}catch(r){}l.push(a)}return l}async runSUSHI(e,s,t){this.log("info","Starting FSH file loading and analysis..."),this.clearLogs();try{const i=await this.loadFSHFiles(e,s,t),n=await this.loadSushiConfig(e,s,t);if(0===i.length)return this.log("warn","No FSH files found to process"),{success:!1,message:"No FSH files found to process",files:[],logs:this.logs};const o=this.analyzeFSHFiles(i);return this.compilationResults={files:i,config:n.config,analysis:o,configSources:{hasGithubVersion:n.hasGithubVersion,hasStagingVersion:n.hasStagingVersion,isUsingStaging:n.isUsingStaging}},this.log("info","FSH file loading and analysis completed"),this.notifyListeners(),{success:!0,result:{files:i,config:n.config,configSources:n,analysis:o,message:"FSH files loaded successfully. Full SUSHI compilation will be available in future releases."},files:i,logs:this.logs,stats:this.getAnalysisStats(o)}}catch(i){return this.log("error","FSH processing failed: ".concat(i.message)),this.notifyListeners(),{success:!1,error:i.message,logs:this.logs}}}analyzeFSHFiles(e){const s={totalFiles:e.length,githubFiles:e.filter(e=>"github"===e.source).length,stagingFiles:e.filter(e=>"staging"===e.source).length,overrides:[],fileTypes:{},totalLines:0,profiles:0,extensions:0,valueSets:0,codeSystems:0,instances:0};return e.forEach(e=>{const t=e.content;s.totalLines+=t.split("\n").length,t.includes("Profile:")&&s.profiles++,t.includes("Extension:")&&s.extensions++,t.includes("ValueSet:")&&s.valueSets++,t.includes("CodeSystem:")&&s.codeSystems++,t.includes("Instance:")&&s.instances++,"staging"===e.source&&s.overrides.push(e.path);const i=e.path.split(".").pop();s.fileTypes[i]=(s.fileTypes[i]||0)+1}),s}getAnalysisStats(e){return{files:e.totalFiles,lines:e.totalLines,sources:{github:e.githubFiles,staging:e.stagingFiles},constructs:{profiles:e.profiles,extensions:e.extensions,valueSets:e.valueSets,codeSystems:e.codeSystems,instances:e.instances},overrides:e.overrides.length}}clearLogs(){this.logs=[]}log(e,s){const t={level:e,message:s,location:arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,timestamp:(new Date).toISOString()};this.logs.push(t),console[e]&&console[e]("[SUSHI] ".concat(s))}getLogs(){return this.logs}getLogsByLevel(e){return this.logs.filter(s=>s.level===e)}searchLogs(e){return this.logs.filter(s=>s.message.toLowerCase().includes(e.toLowerCase()))}exportLogsAsText(){return this.logs.map(e=>"[".concat(e.timestamp,"] [").concat(e.level.toUpperCase(),"] ").concat(e.message).concat(e.location?" (".concat(e.location,")"):"")).join("\n")}getCompilationResults(){return this.compilationResults}addListener(e){return this.listeners.add(e),()=>this.listeners.delete(e)}notifyListeners(){this.listeners.forEach(e=>{try{e({logs:this.logs,results:this.compilationResults,stats:this.compilationResults?this.getAnalysisStats(this.compilationResults.analysis):null})}catch(s){console.error("Error notifying SUSHI service listener:",s)}})}isInitialized(){return this.initialized}async validateFSH(e){try{const s=[],t=[],i=e.split("\n");for(let e=0;e<i.length;e++){const s=i[e].trim();s.includes("Profile:")&&!s.includes("=")&&t.push("Line ".concat(e+1,": Profile declaration might be missing metadata")),!s.includes("*")||s.includes("=")||s.includes("//")||t.push("Line ".concat(e+1,": Rule might be missing assignment"))}return{valid:0===s.length,errors:s,warnings:t}}catch(s){return{valid:!1,errors:[s.message],warnings:[]}}}}},58500:(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});var i=t(65043),n=t(73537),o=t(14832),a=t(93071),l=t(70579);const r=()=>{const{user:e,repo:s,branch:t}=(0,n.g)(),r=(0,n.zy)(),c=(0,n.Zp)(),[h,d]=(0,i.useState)(null),[u,g]=(0,i.useState)(t||"main"),[p,f]=(0,i.useState)(null),[m,S]=(0,i.useState)(!0),[y,v]=(0,i.useState)(null),[x,b]=(0,i.useState)(!1),[F,j]=(0,i.useState)(null),[w,H]=(0,i.useState)([]),[N,A]=(0,i.useState)("all"),[L,C]=(0,i.useState)(""),[k,z]=(0,i.useState)(new Set);(0,i.useEffect)(()=>{(async()=>{S(!0),v(null);try{var i;const n=localStorage.getItem("sgex-profile");if(!n)return void c("/select_profile");const o=JSON.parse(n);if(f(o),e&&s){const i=await a.A.getRepository(e,s,o.token);d(i),g(t||i.default_branch||"main")}else null!==(i=r.state)&&void 0!==i&&i.repository?(d(r.state.repository),g(r.state.selectedBranch||r.state.repository.default_branch||"main")):v("No repository context available. Please navigate from a DAK dashboard.")}catch(n){console.error("Error initializing SUSHI runner context:",n),v("Failed to load repository: ".concat(n.message))}finally{S(!1)}})()},[e,s,t,r.state,c]),(0,i.useEffect)(()=>o.A.addListener(e=>{H(e.logs||[]),j(e.results)}),[]);const U=w.filter(e=>{const s="all"===N||e.level===N,t=""===L||e.message.toLowerCase().includes(L.toLowerCase());return s&&t}),I=(0,i.useCallback)(async()=>{if(h&&u&&p){b(!0),j(null),H([]);try{const e=await o.A.runSUSHI(h,u,p,{logLevel:"info"});j(e)}catch(y){console.error("SUSHI compilation error:",y),j({success:!1,error:y.message,logs:o.A.getLogs()})}finally{b(!1)}}else alert("Missing required parameters for SUSHI compilation")},[h,u,p]),R=()=>{c(e&&s&&u?"/dashboard/".concat(e,"/").concat(s,"/").concat(u):"/dashboard")},G={error:w.filter(e=>"error"===e.level).length,warn:w.filter(e=>"warn"===e.level).length,info:w.filter(e=>"info"===e.level).length,debug:w.filter(e=>"debug"===e.level).length};return m?(0,l.jsxs)("div",{className:"sushi-runner",children:[(0,l.jsx)("div",{className:"sushi-runner-header",children:(0,l.jsx)("h2",{children:"FSH File Manager & Analyzer"})}),(0,l.jsxs)("div",{className:"loading-container",children:[(0,l.jsx)("div",{className:"loading-spinner"}),(0,l.jsx)("p",{children:"Loading repository context..."})]})]}):y?(0,l.jsxs)("div",{className:"sushi-runner",children:[(0,l.jsxs)("div",{className:"sushi-runner-header",children:[(0,l.jsx)("h2",{children:"FSH File Manager & Analyzer"}),(0,l.jsx)("button",{onClick:R,className:"close-button",children:"Back to Dashboard"})]}),(0,l.jsxs)("div",{className:"error-container",children:[(0,l.jsx)("h3",{children:"Error"}),(0,l.jsx)("p",{children:y}),(0,l.jsx)("button",{onClick:R,className:"back-button",children:"Go to Dashboard"})]})]}):(0,l.jsxs)("div",{className:"sushi-runner",children:[(0,l.jsxs)("div",{className:"sushi-runner-header",children:[(0,l.jsx)("h2",{children:"FSH File Manager & Analyzer"}),(0,l.jsxs)("div",{className:"sushi-runner-controls",children:[(0,l.jsx)("button",{onClick:I,disabled:x,className:"run-button",children:x?"Loading...":"Load & Analyze FSH Files"}),(0,l.jsx)("button",{onClick:R,className:"close-button",children:"Back to Dashboard"})]})]}),(0,l.jsxs)("div",{className:"sushi-runner-content",children:[(0,l.jsxs)("div",{className:"repository-info",children:[(0,l.jsxs)("h3",{children:["Repository: ",null===h||void 0===h?void 0:h.full_name," (",u,")"]}),(0,l.jsx)("p",{children:"This will load and analyze all FSH files from the repository and staging ground. Staging ground files will override repository files with the same path. Full SUSHI compilation will be available in future releases."})]}),F&&(0,l.jsxs)("div",{className:"results-summary ".concat(F.success?"success":"error"),children:[(0,l.jsx)("h3",{children:"Analysis Results"}),(0,l.jsxs)("p",{children:["Status: ",(0,l.jsx)("strong",{children:F.success?"Success":"Failed"})]}),F.files&&(0,l.jsxs)("p",{children:["FSH Files Processed: ",F.files.length]}),F.error&&(0,l.jsxs)("p",{className:"error-message",children:["Error: ",F.error]}),F.stats&&(0,l.jsxs)("div",{className:"compilation-stats",children:[(0,l.jsx)("p",{children:"Analysis Statistics:"}),(0,l.jsx)("pre",{children:JSON.stringify(F.stats,null,2)})]})]}),(0,l.jsxs)("div",{className:"logs-section",children:[(0,l.jsxs)("div",{className:"logs-header",children:[(0,l.jsx)("h3",{children:"Processing Logs"}),(0,l.jsxs)("div",{className:"logs-controls",children:[(0,l.jsxs)("select",{value:N,onChange:e=>A(e.target.value),className:"log-filter",children:[(0,l.jsxs)("option",{value:"all",children:["All Logs (",w.length,")"]}),(0,l.jsxs)("option",{value:"error",children:["Errors (",G.error,")"]}),(0,l.jsxs)("option",{value:"warn",children:["Warnings (",G.warn,")"]}),(0,l.jsxs)("option",{value:"info",children:["Info (",G.info,")"]}),(0,l.jsxs)("option",{value:"debug",children:["Debug (",G.debug,")"]})]}),(0,l.jsx)("input",{type:"text",placeholder:"Search logs...",value:L,onChange:e=>C(e.target.value),className:"log-search"}),(0,l.jsx)("button",{onClick:()=>{const e=o.A.exportLogsAsText();navigator.clipboard.writeText(e).then(()=>{alert("Logs copied to clipboard")}).catch(e=>{console.error("Failed to copy logs:",e)})},className:"copy-logs-button",children:"Copy All Logs"})]})]}),(0,l.jsx)("div",{className:"logs-container",children:0===U.length?(0,l.jsx)("p",{className:"no-logs",children:"No logs to display"}):U.map((e,s)=>(0,l.jsxs)("div",{className:"log-entry log-".concat(e.level),onClick:()=>(e=>{const s="[".concat(e.timestamp,"] [").concat(e.level.toUpperCase(),"] ").concat(e.message).concat(e.location?" (".concat(e.location,")"):"");navigator.clipboard.writeText(s).then(()=>{}).catch(e=>{console.error("Failed to copy log entry:",e)})})(e),title:"Click to copy to clipboard",children:[(0,l.jsx)("span",{className:"log-timestamp",children:new Date(e.timestamp).toLocaleTimeString()}),(0,l.jsx)("span",{className:"log-level level-".concat(e.level),children:e.level.toUpperCase()}),(0,l.jsx)("span",{className:"log-message",children:e.message}),e.location&&(0,l.jsxs)("span",{className:"log-location",children:["(",e.location,")"]})]},s))})]}),F&&F.files&&(0,l.jsxs)("div",{className:"processed-files",children:[(0,l.jsxs)("h3",{children:["Processed FSH Files (",F.files.length,")"]}),(0,l.jsx)("div",{className:"files-list",children:F.files.map((e,s)=>(0,l.jsxs)("div",{className:"file-item",children:[(0,l.jsxs)("div",{className:"file-header",onClick:()=>(e=>{const s=new Set(k);s.has(e)?s.delete(e):s.add(e),z(s)})(e.path),children:[(0,l.jsx)("span",{className:"file-path",children:e.path}),(0,l.jsx)("span",{className:"file-source source-".concat(e.source),children:e.source}),(0,l.jsx)("span",{className:"expand-icon",children:k.has(e.path)?"\u25bc":"\u25b6"})]}),k.has(e.path)&&(0,l.jsx)("div",{className:"file-content",children:(0,l.jsx)("pre",{children:e.content})})]},s))})]}),F&&F.result&&(0,l.jsxs)("div",{className:"fhir-output",children:[(0,l.jsx)("h3",{children:"FSH Analysis Results"}),(0,l.jsx)("div",{className:"fhir-resources",children:(0,l.jsx)("pre",{children:JSON.stringify(F.result,null,2)})})]})]})]})}}}]);
//# sourceMappingURL=500.2769e1a6.chunk.js.map