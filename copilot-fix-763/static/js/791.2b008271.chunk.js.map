{"version":3,"file":"static/js/791.2b008271.chunk.js","mappings":"4UAoHA,MAAMA,EACJ,oEAGIC,EAAe,GAEfC,EAA2B,CAACC,oBAAoB,GAChDC,EAAe,gCAIfC,EAAe,CACnB,CAACC,KAAM,aAAcC,GAAI,wCACzB,CAACD,KAAM,qBAAsBC,GAAI,wCACjC,CACED,KAAM,YACNC,GAAI,qDACJC,GAAI,gBAEN,CACEF,KAAM,eACNC,GAAI,qDACJC,GAAI,mBAEN,CAACF,KAAM,YAAaC,GAAI,oBACxB,CACED,KAAM,kBACNC,GAAI,qDACJC,GAAI,sBAEN,CAACF,KAAM,aAAcC,GAAI,wCACzB,CAACD,KAAM,sBAAuBC,GAAI,+BAClC,CACED,KAAM,mBACNC,GAAI,kDAEN,CAACD,KAAM,aAAcC,GAAI,qBACzB,CAACD,KAAM,UAAWC,GAAI,kCAAmCC,GAAI,iBAC7D,CAACF,KAAM,eAAgBC,GAAI,wBAC3B,CAACD,KAAM,YAAaC,GAAI,iCAAkCC,GAAI,cAC9D,CAACF,KAAM,SAAUC,GAAI,4BAA6BC,GAAI,YACtD,CAACF,KAAM,YAAaC,GAAI,qBACxB,CAACD,KAAM,oBAAqBC,GAAI,oBAAqBC,GAAI,gBACzD,CAACF,KAAM,mBAAoBC,GAAI,oBAAqBC,GAAI,iBAenD,SAASC,EAASC,GACvB,MAAMC,EAAYC,EAAgBF,GAC5BG,EAAOC,EAAWJ,GACxB,OAAOK,EAAKJ,EAAUK,QAAQL,EAAUM,MAAMJ,GAAOA,GAAOH,EAC9D,CAeOQ,eAAeC,EAAcT,GAClC,MAAMC,EAAYC,EAAgBF,GAC5BG,EAAOC,EAAWJ,GAExB,OAAOK,QADYJ,EAAUS,IAAIT,EAAUM,MAAMJ,GAAOA,GACtCH,EACpB,CAeO,SAASW,EAAcX,GAC5B,MAAMC,EAAYC,EAAgBF,IAC3BY,EAAOC,IAAYC,EAAAA,EAAAA,eACUC,IAE7BC,EAAMC,IAAWH,EAAAA,EAAAA,eAA0CC,GA8BlE,IA5BAG,EAAAA,EAAAA,WACE,WACE,IAAIC,GAAY,EAChB,MAAMhB,EAAOC,EAAWJ,GAaxB,OAXAC,EAAUS,IAAIT,EAAUM,MAAMJ,GAAOA,EAAM,SAAUS,EAAOI,GACrDG,IACHN,EAASD,GACTK,EAAQD,GAEZ,GAMO,WACLG,GAAY,CACd,CACF,EACA,CACEnB,EAAQoB,SACRpB,EAAQqB,cACRrB,EAAQsB,cACRtB,EAAQuB,sBAIRX,EAAO,MAAMA,EAEjB,OAAOI,EAAOX,EAAKW,EAAMhB,GAAWA,EAAQwB,QAC9C,CAUA,SAAStB,EAAgBF,GACvB,MAAMqB,EAAgBrB,EAAQqB,eAAiB9B,EACzC+B,EAAgBtB,EAAQsB,eAAiB/B,EACzCgC,EAAsBvB,EAAQuB,qBAAmBE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC/CzB,EAAQuB,qBAAwB/B,GACpCA,EAQJ,OANkBkC,EAAAA,EAAAA,KACfC,IAAIC,EAAAA,GACJD,IAAIL,GACJK,IAAIE,EAAAA,EAAcN,GAClBI,IAAIN,EAGT,CAUA,SAASjB,EAAWJ,GAClB,MAAMoB,EAAWpB,EAAQoB,UAAY,GAC/BjB,EAAO,IAAI2B,EAAAA,EAYjB,MAVwB,kBAAbV,EACTjB,EAAK4B,MAAQX,GAEbY,EAAAA,EAAAA,IACE,qBACEZ,EACA,4CAICjB,CACT,CAYA,SAASE,EAAKW,EAAMhB,GAClB,MAAMiC,EAAkBjC,EAAQiC,gBAC1BC,EAAelC,EAAQkC,aACvBC,EAAanC,EAAQmC,WACrBC,EAAqBpC,EAAQoC,mBAC7BC,EAAWrC,EAAQqC,SACnBC,EAAmBtC,EAAQsC,iBAC3BC,EAAevC,EAAQuC,cAAgBC,EAE7C,IAAK,MAAMC,KAAe9C,EACpB+C,OAAOC,OAAO3C,EAASyC,EAAY7C,QACrCoC,EAAAA,EAAAA,IACE,eACES,EAAY7C,KACZ,YACC6C,EAAY3C,GACT,QAAU2C,EAAY3C,GAAK,YAC3B,aACJ,UACAR,EACA,IACAmD,EAAY5C,GACZ,oBAaR,OARIoC,GAAmBG,IACrBJ,EAAAA,EAAAA,IACE,8FAIJY,EAAAA,EAAAA,IAAM5B,EAaN,SAAmB6B,EAAMC,EAAOC,GAC9B,GAAkB,QAAdF,EAAKG,MAAkBD,GAA2B,kBAAVD,EAO1C,OANIT,EACFU,EAAO3B,SAAS6B,OAAOH,EAAO,GAE9BC,EAAO3B,SAAS0B,GAAS,CAACE,KAAM,OAAQjB,MAAOc,EAAKd,OAG/Ce,EAGT,GAAkB,YAAdD,EAAKG,KAAoB,CAE3B,IAAIE,EAEJ,IAAKA,KAAOC,EAAAA,EACV,GACET,OAAOC,OAAOQ,EAAAA,EAAeD,IAC7BR,OAAOC,OAAOE,EAAKO,WAAYF,GAC/B,CACA,MAAMnB,EAAQc,EAAKO,WAAWF,GACxBG,EAAOF,EAAAA,EAAcD,IACd,OAATG,GAAiBA,EAAKC,SAAST,EAAKU,YACtCV,EAAKO,WAAWF,GAAOX,EAAaiB,OAAOzB,GAAS,IAAKmB,EAAKL,GAElE,CAEJ,CAEA,GAAkB,YAAdA,EAAKG,KAAoB,CAC3B,IAAIS,EAASxB,GACRA,EAAgBqB,SAAST,EAAKU,WAC/BnB,GACEA,EAAmBkB,SAAST,EAAKU,SAOvC,IAJKE,GAAUvB,GAAiC,kBAAVY,IACpCW,GAAUvB,EAAaW,EAAMC,EAAOC,IAGlCU,GAAUV,GAA2B,kBAAVD,EAO7B,OANIR,GAAoBO,EAAKzB,SAC3B2B,EAAO3B,SAAS6B,OAAOH,EAAO,KAAMD,EAAKzB,UAEzC2B,EAAO3B,SAAS6B,OAAOH,EAAO,GAGzBA,CAEX,CACF,IA7DOY,EAAAA,EAAAA,GAAa1C,EAAM,CACxB2C,SAAQ,WACRxB,aACAyB,oBAAoB,EACpBC,IAAG,MACHC,KAAI,OACJC,UAAU,EACVC,UAAU,GAuDd,CAWO,SAASxB,EAAoBT,GAIlC,MAAMkC,EAAQlC,EAAMmC,QAAQ,KACtBC,EAAepC,EAAMmC,QAAQ,KAC7BE,EAAarC,EAAMmC,QAAQ,KAC3BG,EAAQtC,EAAMmC,QAAQ,KAE5B,OAEa,IAAXD,IAEY,IAAXI,GAAgBJ,EAAQI,IACN,IAAlBF,GAAuBF,EAAQE,IACf,IAAhBC,GAAqBH,EAAQG,GAE9B1E,EAAa2D,KAAKtB,EAAMuC,MAAM,EAAGL,IAE1BlC,EAGF,EACT,C","sources":["../node_modules/react-markdown/lib/index.js"],"sourcesContent":["/**\n * @import {Element, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentType, JSX, ReactElement, ReactNode} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in keyof JSX.IntrinsicElements]?: ComponentType<JSX.IntrinsicElements[Key] & ExtraProps> | keyof JSX.IntrinsicElements\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @typedef HooksOptionsOnly\n *   Configuration specifically for {@linkcode MarkdownHooks}.\n * @property {ReactNode | null | undefined} [fallback]\n *   Content to render while the processor processing the markdown (optional).\n */\n\n/**\n * @typedef {Options & HooksOptionsOnly} HooksOptions\n *   Configuration for {@linkcode MarkdownHooks};\n *   extends the regular {@linkcode Options} with a `fallback` prop.\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {from: 'className', id: 'remove-classname'},\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<HooksOptions>} options\n *   Props.\n * @returns {ReactNode}\n *   React node.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    function () {\n      let cancelled = false\n      const file = createFile(options)\n\n      processor.run(processor.parse(file), file, function (error, tree) {\n        if (!cancelled) {\n          setError(error)\n          setTree(tree)\n        }\n      })\n\n      /**\n       * @returns {undefined}\n       *   Nothing.\n       */\n      return function () {\n        cancelled = true\n      }\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  if (error) throw error\n\n  return tree ? post(tree, options) : options.fallback\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n"],"names":["changelog","emptyPlugins","emptyRemarkRehypeOptions","allowDangerousHtml","safeProtocol","deprecations","from","id","to","Markdown","options","processor","createProcessor","file","createFile","post","runSync","parse","async","MarkdownAsync","run","MarkdownHooks","error","setError","useState","undefined","tree","setTree","useEffect","cancelled","children","rehypePlugins","remarkPlugins","remarkRehypeOptions","fallback","_objectSpread","unified","use","remarkParse","remarkRehype","VFile","value","unreachable","allowedElements","allowElement","components","disallowedElements","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","deprecation","Object","hasOwn","visit","node","index","parent","type","splice","key","urlAttributes","properties","test","includes","tagName","String","remove","toJsxRuntime","Fragment","ignoreInvalidStyle","jsx","jsxs","passKeys","passNode","colon","indexOf","questionMark","numberSign","slash","slice"],"sourceRoot":""}