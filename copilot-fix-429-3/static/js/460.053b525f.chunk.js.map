{"version":3,"file":"static/js/460.053b525f.chunk.js","mappings":"8LA0mBA,MAEA,EAFiC,IAnmBjC,MACEA,WAAAA,GAEEC,KAAKC,eAAgBC,EACrBF,KAAKG,QAAUH,KAAKC,cAAgB,WAAa,uBACjDD,KAAKI,QAAO,GAAAC,OAAML,KAAKG,QAAO,SAC9BH,KAAKM,eAAc,GAAAD,OAAML,KAAKI,QAAO,4BACrCJ,KAAKO,gBAAkB,sBACzB,CAWA,YAAMC,CAAOC,GAA+D,IAAxDC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAIJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,WAAYK,EAAKL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAClE,IACE,MAAMM,EAAS,IAAIC,gBAAgB,CACjCT,MAAOA,EACPC,KAAMA,EAAKS,WACXL,KAAMA,EAAKK,WACXJ,KAAK,GAADV,OAAKU,EAAI,KAAAV,OAAIW,KAGbI,EAAG,GAAAf,OAAML,KAAKM,eAAc,KAAAD,OAAIY,GAEhCI,QAAiBC,MAAMF,EAAK,CAChCG,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,aAAc,uDACd,gBAAiB,cAIrB,IAAKH,EAASI,GAAI,CAEhB,GAAwB,MAApBJ,EAASK,OAGX,OADAC,QAAQC,KAAK,mEACN5B,KAAK6B,qBAAqBpB,EAAOC,EAAMI,GACzC,GAAwB,MAApBO,EAASK,OAGlB,OADAC,QAAQC,KAAK,mEACN5B,KAAK6B,qBAAqBpB,EAAOC,EAAMI,GACzC,MAAwB,MAApBO,EAASK,OACZ,IAAII,MAAM,kIACa,MAApBT,EAASK,OACZ,IAAII,MAAM,kHAEV,IAAIA,MAAM,uBAADzB,OAAwBgB,EAASK,OAAM,+CAE1D,CAEA,MAAMK,QAAaV,EAASW,OAC5B,OAAOhC,KAAKiC,qBAAqBF,EACnC,CAAE,MAAOG,GAIP,GAHAP,QAAQO,MAAM,uCAAwCA,GAGhC,oBAAlBA,EAAMC,SAAgD,cAAfD,EAAME,KAAsB,CACrE,GAAIpC,KAAKC,cAGP,OADA0B,QAAQC,KAAK,iEACN5B,KAAK6B,qBAAqBpB,EAAOC,EAAMI,GAE9C,MAAM,IAAIgB,MAAM,8HAEpB,CAGA,GAAII,EAAMC,QAAQE,SAAS,6BACvBH,EAAMC,QAAQE,SAAS,4BACvBH,EAAMC,QAAQE,SAAS,sBACzB,OAAOrC,KAAK6B,qBAAqBpB,EAAOC,EAAMI,GAGhD,MAAM,IAAIgB,MAAM,yCAADzB,OAA0C6B,EAAMC,SACjE,CACF,CAOA,qBAAMG,CAAgBC,GACpB,IACE,MAAMnB,EAAG,GAAAf,OAAML,KAAKI,QAAO,gBAAAC,OAAekC,GAEpClB,QAAiBC,MAAMF,EAAK,CAChCG,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,aAAc,uDACd,gBAAiB,cAIrB,IAAKH,EAASI,GAEZ,MAAwB,MAApBJ,EAASK,OACL,IAAII,MAAM,2FACa,MAApBT,EAASK,OACZ,IAAII,MAAM,qGAEV,IAAIA,MAAM,uBAADzB,OAAwBgB,EAASK,SAIpD,MAAMK,QAAaV,EAASW,OAC5B,OAAOhC,KAAKwC,0BAA0BT,EACxC,CAAE,MAAOG,GAEP,MADAP,QAAQO,MAAM,gCAAiCA,GACzC,IAAIJ,MAAM,kCAADzB,OAAmC6B,EAAMC,SAC1D,CACF,CAOAF,oBAAAA,CAAqBQ,GAAU,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAC5B,IAAKL,IAAYA,EAAQM,YAAcN,EAAQM,UAAUC,aACvD,MAAO,CACLC,MAAO,GACPC,cAAe,EACfC,WAAY,EACZC,YAAa,EACbtC,KAAM,GAIV,MAAMkC,EAAeP,EAAQM,UAAUC,aAKvC,MAAO,CACLC,QALmC,QAAtBP,EAAAM,EAAaD,iBAAS,IAAAL,OAAA,EAAtBA,EAAwBW,UAAW,IAAIC,IAAIC,IAAS,IAADC,EAChE,OAAOxD,KAAKwC,2BAAwC,QAAdgB,EAAAD,EAAKR,iBAAS,IAAAS,OAAA,EAAdA,EAAgBC,kBAAmBF,KAKzEL,eAAgC,QAAjBP,EAAAK,EAAatC,YAAI,IAAAiC,OAAA,EAAjBA,EAAmBO,gBAAiB,EACnDC,YAA6B,QAAjBP,EAAAI,EAAatC,YAAI,IAAAkC,OAAA,EAAjBA,EAAmBO,aAAc,EAC7CC,aAA8B,QAAjBP,EAAAG,EAAatC,YAAI,IAAAmC,OAAA,EAAjBA,EAAmBa,SAAU,EAC1C5C,MAAuB,QAAjBgC,EAAAE,EAAatC,YAAI,IAAAoC,OAAA,EAAjBA,EAAmBhC,OAAQ,EAErC,CAOA0B,yBAAAA,CAA0Be,GACxB,IAAKA,IAASA,EAAKI,SACjB,OAAO,KAGT,MAAMA,EAAWJ,EAAKI,SAGhBC,EAAoBC,IACxB,MAAMC,EAAYH,EAASE,GAC3B,OAAKC,GAAcC,MAAMC,QAAQF,GACR,IAArBA,EAAUlD,OAAqB,KACV,IAArBkD,EAAUlD,OAAqBkD,EAAU,GAAGG,MACzCH,EAAUR,IAAIC,GAAQA,EAAKU,OAHkB,MA0EtD,MAnEkB,CAChBC,GAAIX,EAAKhB,MAAQgB,EAAKW,GACtBC,OAAQZ,EAAKY,OAGbC,MAAOR,EAAiB,aAAe,WAGvCS,QAAST,EAAiB,cAC1BU,OAAQV,EAAiB,yBAGzBW,QAASX,EAAiB,cAC1BY,SAAUZ,EAAiB,sBAG3Ba,YAAab,EAAiB,kBAC9Bc,SAAUd,EAAiB,2BAG3Be,UAAWf,EAAiB,iBAAmB,4BAG/CgB,KAAMhB,EAAiB,WACvBiB,WAAYjB,EAAiB,kBAC7BkB,YAAalB,EAAiB,mBAG9BmB,KAAMnB,EAAiB,WAGvBoB,OAAQpB,EAAiB,aAGzBqB,WAAYrB,EAAiB,iBAC7BsB,IAAKtB,EAAiB,qBACtBuB,KAAMvB,EAAiB,sBACvBwB,IAAKxB,EAAiB,qBAGtByB,OAAQzB,EAAiB,aAGzB0B,SAAU1B,EAAiB,gBAAkBA,EAAiB,mBAG9D2B,SAAU3B,EAAiB,eAG3B4B,SAAU5B,EAAiB,eAG3B6B,OAAQ7B,EAAiB,aAGzB8B,UAAW9B,EAAiB,cAC5B+B,SAAU/B,EAAiB,aAC3BgC,gBAAiBhC,EAAiB,qBAGlCxC,IAAKpB,KAAK6F,iBAAiBtC,EAAKY,QAChC2B,YAAa9F,KAAK+F,qBAAqBxC,EAAKhB,MAG5CyD,YAAarC,EAIjB,CAOAkC,gBAAAA,CAAiB1B,GACf,OAAKA,EAEC,GAAN9D,OAAUL,KAAKO,gBAAe,YAAAF,OAAW8D,GAFrB,IAGtB,CAOA4B,oBAAAA,CAAqBxD,GACnB,OAAKA,EACC,GAANlC,OAAUL,KAAKI,QAAO,4CAAAC,OAA2CkC,GAD/C,IAEpB,CAOA,oBAAM0D,CAAexF,GACnB,IAAKA,GAASA,EAAMG,OAAS,EAC3B,MAAO,GAGT,IAEE,MAAMsF,QAAgBlG,KAAKQ,OAAOC,EAAO,EAAG,IAGtC0F,EAAc,IAAIC,IAexB,OAbAF,EAAQjD,MAAMoD,QAAQ9C,IAChBA,EAAKa,OACP+B,EAAYG,IAAI/C,EAAKa,OAEnBb,EAAKgB,UACHR,MAAMC,QAAQT,EAAKgB,SACrBhB,EAAKgB,QAAQ8B,QAAQE,GAAKJ,EAAYG,IAAIC,IAE1CJ,EAAYG,IAAI/C,EAAKgB,YAKpBR,MAAMyC,KAAKL,GAAaM,MAAM,EAAG,GAC1C,CAAE,MAAOvE,GAEP,OADAP,QAAQO,MAAM,6BAA8BA,GACrC,EACT,CACF,CAOA,sBAAMwE,GAA8B,IAAbC,EAAKhG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC7B,IAIE,aADsBX,KAAKQ,OAAO,IAAK,EAAGmG,EAAO,iBAAkB,SACpD1D,KACjB,CAAE,MAAOf,GAIP,OAHAP,QAAQO,MAAM,iCAAkCA,GAG5CA,EAAMC,QAAQE,SAAS,gBACvBH,EAAMC,QAAQE,SAAS,oBACvBH,EAAMC,QAAQE,SAAS,4BACvBH,EAAMC,QAAQE,SAAS,6BACzBV,QAAQC,KAAK,sDACN5B,KAAK4G,wBAGP,EACT,CACF,CAMAA,oBAAAA,GACE,MAAO,CACL,CACE1C,GAAI,kBACJE,MAAO,+DACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,gBACNL,SAAU,sKACVH,QAAS,CAAC,iBAAkB,SAAU,6BACtCnD,IAAK,8BACL4E,YAAa,CAAC,GAEhB,CACE9B,GAAI,kBACJE,MAAO,qDACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,qBACNL,SAAU,8IACVH,QAAS,CAAC,OAAQ,gBAAiB,aAAc,cACjDnD,IAAK,8BACL4E,YAAa,CAAC,GAEhB,CACE9B,GAAI,kBACJE,MAAO,6DACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,oBACNL,SAAU,wJACVH,QAAS,CAAC,cAAe,uBAAwB,cACjDnD,IAAK,8BACL4E,YAAa,CAAC,GAEhB,CACE9B,GAAI,kBACJE,MAAO,2BACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,QACNL,SAAU,wJACVH,QAAS,CAAC,gBAAiB,iBAAkB,gBAC7CnD,IAAK,8BACL4E,YAAa,CAAC,GAEhB,CACE9B,GAAI,kBACJE,MAAO,8CACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,oBACNL,SAAU,gKACVH,QAAS,CAAC,eAAgB,cAAe,mBACzCnD,IAAK,8BACL4E,YAAa,CAAC,GAGpB,CASAnE,oBAAAA,CAAqBpB,GAA6B,IAAtBC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAE3C,MAAMkG,EAAc7G,KAAK8G,4BAA4BrG,GAErD,MAAO,CACLwC,MAAO4D,EAAYJ,MAAM/F,EAAOI,GAAOJ,EAAO,GAAKI,GACnDoC,cAAe2D,EAAYjG,OAC3BuC,WAAY4D,KAAKC,KAAKH,EAAYjG,OAASE,GAC3CsC,YAAa1C,EACbI,KAAMA,EACNmG,QAAQ,EAEZ,CAOAH,2BAAAA,CAA4BrG,GAC1B,MAAMyG,EAAazG,EAAM0G,cAGnBC,EAAe,CACnB,IAAO,CACL,CACElD,GAAI,aACJE,MAAO,oGACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,aACNL,SAAU,qKACVH,QAAS,CAAC,MAAO,aAAc,YAAa,cAC5CnD,IAAK,2EACL4E,YAAa,CAAC,GAEhB,CACE9B,GAAI,aACJE,MAAO,gEACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,mBACNL,SAAU,sHACVH,QAAS,CAAC,MAAO,gBAAiB,sBAClCnD,IAAK,2CACL4E,YAAa,CAAC,IAGlB,MAAS,CACP,CACE9B,GAAI,eACJE,MAAO,gDACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,sBACNL,SAAU,4IACVH,QAAS,CAAC,WAAY,sBAAuB,aAC7CnD,IAAK,2CACL4E,YAAa,CAAC,GAEhB,CACE9B,GAAI,eACJE,MAAO,uCACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,gBACNL,SAAU,+HACVH,QAAS,CAAC,WAAY,eAAgB,gBACtCnD,IAAK,2CACL4E,YAAa,CAAC,IAGlB,QAAW,CACT,CACE9B,GAAI,iBACJE,MAAO,4BACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,gBACNL,SAAU,sHACVH,QAAS,CAAC,UAAW,gBAAiB,eACtCnD,IAAK,2CACL4E,YAAa,CAAC,IAGlB,aAAgB,CACd,CACE9B,GAAI,YACJE,MAAO,mEACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,uBACNL,SAAU,wHACVH,QAAS,CAAC,eAAgB,YAAa,mBACvCnD,IAAK,2CACL4E,YAAa,CAAC,IAGlB,OAAU,CACR,CACE9B,GAAI,gBACJE,MAAO,iDACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,eACNL,SAAU,0HACVH,QAAS,CAAC,gBAAiB,iBAAkB,iBAC7CnD,IAAK,2CACL4E,YAAa,CAAC,IAGlB,UAAa,CACX,CACE9B,GAAI,mBACJE,MAAO,mDACPC,QAAS,4BACTQ,WAAY,OACZE,KAAM,sBACNL,SAAU,gHACVH,QAAS,CAAC,YAAa,QAAS,OAAQ,cACxCnD,IAAK,2CACL4E,YAAa,CAAC,KAMpB,IAAIE,EAAU,GAGd,IAAK,MAAOmB,EAAOpE,KAAUqE,OAAOC,QAAQH,IACtCF,EAAW7E,SAASgF,IAAUH,EAAW7E,SAASgF,EAAMZ,MAAM,GAAI,MACpEP,EAAQsB,QAAQvE,GA2CpB,OAtCuB,IAAnBiD,EAAQtF,SACVsF,EAAU,CACR,CACEhC,GAAI,iBACJE,MAAM,qCAAD/D,OAAuCI,GAC5C4D,QAAS,4BACTQ,WAAY,OACZE,KAAM,kBACNL,SAAS,gDAADrE,OAAkDI,EAAK,0FAC/D8D,QAAS,CAAC9D,EAAO,gBAAiB,cAClCW,IAAK,8BACL4E,YAAa,CAAC,GAEhB,CACE9B,GAAI,iBACJE,MAAM,yBAAD/D,OAA2BI,EAAK,aACrC4D,QAAS,4BACTQ,WAAY,OACZE,KAAM,mBACNL,SAAS,qDAADrE,OAAuDI,EAAK,gFACpE8D,QAAS,CAAC9D,EAAO,qBAAsB,oBACvCW,IAAK,8BACL4E,YAAa,CAAC,GAEhB,CACE9B,GAAI,iBACJE,MAAM,iBAAD/D,OAAmBI,EAAK,sBAC7B4D,QAAS,4BACTQ,WAAY,OACZE,KAAM,eACNL,SAAS,0CAADrE,OAA4CI,EAAK,yCACzD8D,QAAS,CAAC9D,EAAO,SAAU,kBAC3BW,IAAK,8BACL4E,YAAa,CAAC,KAKbE,CACT,CAQAuB,cAAAA,CAAelE,GAAsB,IAAhBmE,EAAK/G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAC3B,IAAK4C,EAAM,MAAO,GAElB,MAAMa,EAAQb,EAAKa,OAAS,WACtBE,EAASf,EAAKc,SAAWd,EAAKe,QAAU,4BACxCM,EAAOrB,EAAKsB,YAActB,EAAKqB,MAAQ,OACvCD,EAAYpB,EAAKoB,WAAa,4BAC9BvD,EAAMmC,EAAKnC,IAEjB,OAAQsG,EAAMP,eACZ,IAAK,MACH,MAAM,GAAN9G,OAAUiE,EAAM,OAAAjE,OAAMuE,EAAI,OAAAvE,OAAM+D,EAAK,MAAA/D,OAAKsE,EAAS,MAAAtE,OAAKe,GAE1D,IAAK,UACH,MAAM,GAANf,OAAUiE,EAAM,OAAAjE,OAAM+D,EAAK,OAAA/D,OAAMsE,EAAS,MAAAtE,OAAKuE,EAAI,MAAAvE,OAAKe,EAAG,KAE7D,IAAK,YACH,MAAM,GAANf,OAAUiE,EAAM,MAAAjE,OAAK+D,EAAK,MAAA/D,OAAKsE,EAAS,MAAAtE,OAAKuE,EAAI,sBAAAvE,OAAqBe,GAExE,QACE,MAAM,GAANf,OAAUiE,EAAM,MAAAjE,OAAK+D,EAAK,MAAA/D,OAAKsE,EAAS,MAAAtE,OAAKuE,EAAI,sBAAAvE,OAAqBe,GAE5E,G,eCnmBF,MAgeA,EAhe0BuG,IAA6B,IAA5B,mBAAEC,GAAoBD,EAC/C,MAAOE,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAoBC,IAAyBJ,EAAAA,EAAAA,UAAS,KACtDK,EAAaC,IAAkBN,EAAAA,EAAAA,WAAS,IACxC3E,EAAakF,IAAkBP,EAAAA,EAAAA,UAAS,IACxC5E,EAAYoF,IAAiBR,EAAAA,EAAAA,UAAS,IACtCS,EAAcC,IAAmBV,EAAAA,EAAAA,UAAS,IAC1C7F,EAAOwG,IAAYX,EAAAA,EAAAA,UAAS,OAC5B5B,EAAawC,IAAkBZ,EAAAA,EAAAA,UAAS,KACxCa,EAAiBC,IAAsBd,EAAAA,EAAAA,WAAS,IAChDe,EAAeC,IAAoBhB,EAAAA,EAAAA,UAAS,IAC7CiB,GAAiBC,EAAAA,EAAAA,QAAO,OAG9BC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAkBC,aAAaC,QAAQ,+BAC7C,GAAIF,EACF,IACE,MAAMG,EAAaC,KAAKC,MAAML,GAC9BhB,EAAsBmB,GAClB1B,GACFA,EAAmB0B,EAEvB,CAAE,MAAOpH,GACPP,QAAQO,MAAM,kCAAmCA,EACnD,CAEFuH,KACC,CAAC7B,KAGJsB,EAAAA,EAAAA,WAAU,KACRE,aAAaM,QAAQ,8BAA+BH,KAAKI,UAAUzB,IAC/DN,GACFA,EAAmBM,IAEpB,CAACA,EAAoBN,IAExB,MAAM6B,EAAoBG,UACxB,IACE,MAAM3G,QAAc4G,EAAyBnD,iBAAiB,GAC9DqC,EAAiB9F,EACnB,CAAE,MAAOf,GACPP,QAAQO,MAAM,gCAAiCA,EACjD,GAGI4H,EAAeF,iBAA0C,IAAnCnJ,EAAKE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGkH,EAAanH,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACtD,IAAKF,EAAMsJ,OAIT,OAHA9B,EAAiB,IACjBM,EAAc,QACdE,EAAgB,GAIlBJ,GAAe,GACfK,EAAS,MAET,IACE,MAAMxC,QAAgB2D,EAAyBrJ,OAAOC,EAAOC,EAAM,IACnEuH,EAAiB/B,EAAQjD,OACzBsF,EAAcrC,EAAQ/C,YACtBsF,EAAgBvC,EAAQhD,eACxBoF,EAAe5H,GAGXwF,EAAQe,QACVyB,EAAS,eAEb,CAAE,MAAOxG,GACPwG,EAASxG,EAAMC,SACf8F,EAAiB,GACnB,CAAC,QACCI,GAAe,EACjB,CACF,EAkCM2B,EAAoBC,IACpBA,GAAW,GAAKA,EAAU9G,GAC5B2G,EAAajC,EAAaoC,IAmBxBC,EAAcC,IAClB,IAAKA,EAAS,MAAO,qBACjBpG,MAAMC,QAAQmG,KAChBA,EAAUA,EAAQ,IAEpB,IAEE,OADa,IAAIC,KAAKD,GACVE,aACd,CAAE,MAAAC,GACA,OAAOH,CACT,GAGII,EAAiBC,GAChBA,EACDzG,MAAMC,QAAQwG,GACTA,EAAS/D,MAAM,EAAG,GAAGgE,KAAK,OAASD,EAAS5J,OAAS,EAAI,WAAa,IAExE4J,EAJe,uBAOlBE,EAAsBnH,IAC1BoH,EAAAA,EAAAA,MAAA,OAAmBC,UAAU,qBAAoBC,SAAA,EAC/CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAEtH,EAAKa,SACnCuG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,iBAAgBC,SAAEN,EAAchH,EAAKc,YACrDsG,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaC,SAAA,CAAC,IAAEX,EAAW3G,EAAKsB,YAAY,OAC3DtB,EAAKwB,OAAQ+F,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAEtH,EAAKwB,UAEnDxB,EAAKmB,WACJoG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kBAAiBC,SAC3BtH,EAAKmB,SAAS9D,OAAS,IAAG,GAAAP,OACpBkD,EAAKmB,SAASqG,UAAU,EAAG,KAAI,OAClCxH,EAAKmB,WAGZnB,EAAKgB,UACJuG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC5B9G,MAAMC,QAAQT,EAAKgB,SAAWhB,EAAKgB,QAAU,CAAChB,EAAKgB,UAClDkC,MAAM,EAAG,GACTnD,IAAI,CAACiB,EAASyG,KACbF,EAAAA,EAAAA,KAAA,QAAkBF,UAAU,cAAaC,SAAEtG,GAAhCyG,UAKrBL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,KACEG,KAAM1H,EAAKnC,IACX8J,OAAO,SACPC,IAAI,sBACJP,UAAU,sBACVxG,MAAM,8BAA6ByG,SACpC,UAGDC,EAAAA,EAAAA,KAAA,UACEM,QAASA,IAzEK7H,KACM2E,EAAmBmD,KAAKC,GAAOA,EAAIpH,KAAOX,EAAKW,KAEvEiE,EAAsBoD,GAAQ,IAAIA,EAAMhI,KAsErBiI,CAAajI,GAC5BqH,UAAU,oBACVa,SAAUvD,EAAmBmD,KAAKC,GAAOA,EAAIpH,KAAOX,EAAKW,IAAI2G,SAE5D3C,EAAmBmD,KAAKC,GAAOA,EAAIpH,KAAOX,EAAKW,IAAM,QAAU,aAxC5DX,EAAKW,IA8CXwH,EAA2BnI,IAC/BoH,EAAAA,EAAAA,MAAA,OAAmBC,UAAU,0BAAyBC,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAAEtH,EAAKa,SACtCuG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oBAAmBC,SAAEN,EAAchH,EAAKc,YACxDsG,EAAAA,EAAAA,MAAA,QAAMC,UAAU,iBAAgBC,SAAA,CAAC,IAAEX,EAAW3G,EAAKsB,YAAY,WAEjEiG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAChChB,EAAyBpC,eAAelE,EAAM,aAGnDoH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,KACEG,KAAM1H,EAAKnC,IACX8J,OAAO,SACPC,IAAI,sBACJP,UAAU,iBACVxG,MAAM,8BAA6ByG,SACpC,UAGDC,EAAAA,EAAAA,KAAA,UACEM,QAASA,KAAMO,OAnGEC,EAmGcrI,EAAKW,QAlG1CiE,EAAsBoD,GAAQA,EAAKM,OAAOP,GAAOA,EAAIpH,KAAO0H,IADrCA,OAoGjBhB,UAAU,mBACVxG,MAAM,mBAAkByG,SACzB,gBAzBKtH,EAAKW,IAgCjB,OACEyG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAC,sGAGnCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAAA,KACEG,KAAK,4BACLC,OAAO,SACPC,IAAI,sBACJP,UAAU,YACVxG,MAAM,2CAA0CyG,SACjD,mDAKLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAE3C,EAAmBtH,UAClDkK,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,gBAE9BrC,EAAe,IACdmC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAErC,EAAasD,oBAC5ChB,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,sBAMrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMiB,SAzKgBC,IAC1BA,EAAEC,iBACFpD,GAAmB,GACnBiB,KAsKwCc,UAAU,cAAaC,UACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SACEQ,IAAKtC,EACLjE,KAAK,OACLd,MAAO4D,EACPqE,SAnMoBtC,UAC9B,MAAM3F,EAAQ+H,EAAEd,OAAOjH,MAIvB,GAHA6D,EAAe7D,GAGXA,EAAMrD,QAAU,EAClB,IACE,MAAMuF,QAAoB0D,EAAyB5D,eAAehC,GAClE0E,EAAexC,GACf0C,GAAmB,EACrB,CAAE,MAAO3G,GACPP,QAAQO,MAAM,6BAA8BA,GAC5CyG,EAAe,GACjB,MAEAA,EAAe,IACfE,GAAmB,IAoLXsD,YAAY,gCACZvB,UAAU,eACVwB,OAAQA,IAAMC,WAAW,IAAMxD,GAAmB,GAAQ,KAC1DyD,QAASA,IAAMnG,EAAYvF,OAAS,GAAKiI,GAAmB,MAE9DiC,EAAAA,EAAAA,KAAA,UACE/F,KAAK,SACL6F,UAAU,gBACVa,SAAUrD,EAAYyC,SAErBzC,EAAc,eAAiB,WAGjCQ,GAAmBzC,EAAYvF,OAAS,IACvCkK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAClC1E,EAAY7C,IAAI,CAACiJ,EAAYvB,KAC5BF,EAAAA,EAAAA,KAAA,OAEEF,UAAU,kBACVQ,QAASA,IA7LImB,KAC7BzE,EAAeyE,GACf1D,GAAmB,GACnBiB,EAAayC,IA0LkBC,CAAsBD,GAAY1B,SAEhD0B,GAJIvB,WAYhB9I,GAAmB,iBAAVA,IACRyI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAAsB,IAAE3I,GAC9BA,EAAMG,SAAS,gBAAkBH,EAAMG,SAAS,qCAChDsI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,sBAA0B,IAAE3I,EAAMG,SAAS,WACpD,4HACA,kFACFsI,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,oDACiD,KAClDC,EAAAA,EAAAA,KAAA,KACEG,KAAK,4BACLC,OAAO,SACPC,IAAI,sBACJP,UAAU,YAAWC,SACtB,4BAMN3I,EAAMG,SAAS,cACdsI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,sBAA0B,kFACrCC,EAAAA,EAAAA,KAAA,KAAAD,UAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,2BACXF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gDACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,6CAAyCC,EAAAA,EAAAA,KAAA,KAAGG,KAAK,uBAAuBC,OAAO,SAASC,IAAI,sBAAqBN,SAAC,qBACtHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,sCAAkCC,EAAAA,EAAAA,KAAA,KAAGG,KAAK,4BAA4BC,OAAO,SAASC,IAAI,sBAAqBN,SAAC,6BAEtHC,EAAAA,EAAAA,KAAA,KAAAD,UAAGC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qIAGT3I,EAAMG,SAAS,aAAeH,EAAMG,SAAS,iBAC7CsI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAAoB,wEAC/BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iHAMA,iBAAV3I,IACCyI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,YAAWC,SAAC,kBAC5BC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,2BAEVC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kKAIHF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qCAAyC,SAAO,KACxDC,EAAAA,EAAAA,KAAA,KACEG,KAAK,uBACLC,OAAO,SACPC,IAAI,sBACJP,UAAU,gBAAeC,SAC1B,iBAEI,IAAI,gBAGXC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAClCC,EAAAA,EAAAA,KAAA,KACEG,KAAK,4BACLC,OAAO,SACPC,IAAI,sBACJP,UAAU,YAAWC,SACtB,wDAQTF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACHrC,EAAe,IACdmC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAeC,SAAA,CAC5BrC,EAAasD,iBAAiB,uBAKX,IAAzB9D,EAAcpH,SAAiBwH,GAA+B,KAAhBP,IAC7C8C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sDACF/B,EAAclI,OAAS,GACtBkK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SACjC/B,EAAcxF,IAAIC,GAAQmH,EAAmBnH,OAGhDuH,EAAAA,EAAAA,KAAA,KAAGF,UAAU,aAAYC,SAAC,iCAKN,IAAzB7C,EAAcpH,SAAiBwH,GAA+B,KAAhBP,IAC7C8C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,yBAAuBhD,EAAY,QACtCiD,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8DAINzC,IACCuC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBACfE,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wCAIN7C,EAAcpH,OAAS,IACtB+J,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC5B7C,EAAc1E,IAAIC,GAAQmH,EAAmBnH,IAE7CJ,EAAa,IACZwH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UACEM,QAASA,IAAMpB,EAAiB5G,EAAc,GAC9CqI,SAA0B,IAAhBrI,EACVwH,UAAU,gBAAeC,SAC1B,cAGDF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWC,SAAA,CAAC,QACpBzH,EAAc,EAAE,OAAKD,MAE7B2H,EAAAA,EAAAA,KAAA,UACEM,QAASA,IAAMpB,EAAiB5G,EAAc,GAC9CqI,SAAUrI,GAAeD,EAAa,EACtCyH,UAAU,gBAAeC,SAC1B,mBASXF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACH3C,EAAmBtH,OAAS,IAC3BkK,EAAAA,EAAAA,KAAA,UACEM,QAxUaqB,KACzBtE,EAAsB,KAwUVyC,UAAU,mBACVxG,MAAM,uBAAsByG,SAC7B,iBAM0B,IAA9B3C,EAAmBtH,QAClB+J,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iCACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6FAGLC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SACjC3C,EAAmB5E,IAAIC,GAAQmI,EAAwBnI,gB,eCndtE,MAgBMmJ,EAA4BA,KAChC,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,OAAE7L,IAAW8L,EAAAA,EAAAA,OACZ7E,EAAoBC,IAAyBJ,EAAAA,EAAAA,UAAS,IAGvDiF,GAAcC,EAAAA,EAAAA,GAAc,oBAG5B,QAAEC,EAAO,WAAEC,GAAeR,EAASS,OAAS,CAAC,EAC7CC,EAAa,OAANpM,QAAM,IAANA,OAAM,EAANA,EAAQoM,KACfC,EAAa,OAANrM,QAAM,IAANA,OAAM,EAANA,EAAQqM,KAEfC,EAAmB,CAAErJ,GAAI,uBAAwB9B,KAAM,wBAEvDoL,GAAyBC,EAAAA,EAAAA,aAAanE,IAC1CnB,EAAsBmB,IACrB,IAOH,OACEqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIM,QATiBsC,KAC3Bb,EAAS,MAQgCjC,UAAU,kBAAiBC,SAAC,oBAC/DC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,sCAE1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OACE6C,IAAY,OAAPT,QAAO,IAAPA,GAAAA,EAASU,YAAcP,EAAI,sBAAAhN,OAAyBgN,EAAI,QAASL,EACtEa,IAAI,UACJjD,UAAU,oBAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,UAAY,OAAVsC,QAAU,IAAVA,OAAU,EAAVA,EAAY/K,OAAQkL,GAAQ,gBAC5DxC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oBAAmBC,SAAE0C,EAAiBnL,WAExD0I,EAAAA,EAAAA,KAAA,KAAGG,KAAK,sBAAsBL,UAAU,WAAUC,SAAC,sCAIvDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,KAACgD,EAAiB,CAChBlG,mBAAoB4F,EACpBtF,mBAAoBA,OAIxB4C,EAAAA,EAAAA,KAACiD,EAAAA,EAAoB,CACnBC,OAAO,8BACPC,YAAa,CACXf,QAASA,GAAW,CAAEgB,MAAOb,GAC7BF,WAAYA,GAAc,CAAE/K,KAAMkL,GAClCa,UAAWZ,EACXa,wBAAyBlG,EAAmBtH,cAOhDyN,EAAyBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EACnC,MAAM9B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,OAAE7L,IAAW8L,EAAAA,EAAAA,OACZ7E,EAAoBC,IAAyBJ,EAAAA,EAAAA,UAAS,IAGvDiF,GAAcC,EAAAA,EAAAA,GAAc,oBAE5B,QAAEC,EAAO,WAAEC,EAAU,UAAEgB,GAAcxB,EAASS,OAAS,CAAC,EAG9D,IAAIG,EAAmBY,EAGG,sCAAtBxB,EAAS+B,UAAqDP,EAEvDlN,EAAO0N,cAAgBR,IAChCZ,EAAmB,CAAErJ,GAAIjD,EAAO0N,YAAavM,KAAMnB,EAAO0N,cAF1DpB,EAAmB,CAAErJ,GAAI,uBAAwB9B,KAAM,wBAKzD,MAAMoL,GAAyBC,EAAAA,EAAAA,aAAanE,IAC1CnB,EAAsBmB,IACrB,IAEGoE,EAAuBA,KAC3Bb,EAAS,MAIX,IAAKK,IAAYC,EAAY,CAAC,IAADyB,EAC3B,GAA6B,0BAAT,QAAhBA,EAAArB,SAAgB,IAAAqB,OAAA,EAAhBA,EAAkB1K,IAA+B,CAGnD,MAAM2K,EAAqB,CAAEX,MAAO,YAAaN,WAAYZ,EAAa5K,KAAM,aAC1E0M,EAAkB,CAAE1M,KAAM,mBAEhC,OACEuI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIM,QAASsC,EAAsB9C,UAAU,kBAAiBC,SAAC,oBAC/DC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,sCAE1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OACE6C,IAAKkB,EAAmBjB,WACxBC,IAAI,UACJjD,UAAU,oBAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAEiE,EAAgB1M,QAChD0I,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oBAAmBC,SAAE0C,EAAiBnL,WAExD0I,EAAAA,EAAAA,KAAA,KAAGG,KAAK,sBAAsBL,UAAU,WAAUC,SAAC,sCAIvDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,KAACgD,EAAiB,CAChBlG,mBAAoB4F,EACpBtF,mBAAoBA,OAIxB4C,EAAAA,EAAAA,KAACiD,EAAAA,EAAoB,CACnBC,OAAO,mBACPC,YAAa,CAAEE,UAAWZ,OAIlC,CAEE,OADAV,EAAS,MACF/B,EAAAA,EAAAA,KAAA,OAAAD,SAAK,kBAEhB,CAEA,OACEC,EAAAA,EAAAA,KAACiE,EAAAA,GAAU,CAACC,SAAS,mBAAkBnE,UACrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAE7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAiBlD,MAAO,CAAEuH,MAAO1B,EAAiB0B,OAAQpE,SACtE0C,EAAiB2B,QAEpBvE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAK0C,EAAiBnL,KAAK,cAC3BuI,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,qBACuC,QAAtByD,EAACf,EAAiBnL,YAAI,IAAAkM,OAAA,EAArBA,EAAuBnH,cAAc,yDACL,QAA1BoH,EAAAhB,EAAiB4B,iBAAS,IAAAZ,OAAA,EAA1BA,EAA4B9D,KAAK,QAAS,UAAU,6CAC1B,QAA5B+D,EAAAjB,EAAiB9I,mBAAW,IAAA+J,OAAA,EAA5BA,EAA8BrH,gBAAiB,oBAAoB,QAG5FwD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAAwB,IAAE0C,EAAiBxI,MAAQ,aAE7D4F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAAoB,KAA4B,QAA1B4D,EAAAlB,EAAiB4B,iBAAS,IAAAV,OAAA,EAA1BA,EAA4BhE,KAAK,QAAS,sBAE1EE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAAoB,IAAEsC,EAAW/K,YAI7CuI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UACEF,UAAU,qBACVQ,QAASA,IAAMgE,MAAM,2CAA2CvE,SACjE,kBAGDC,EAAAA,EAAAA,KAAA,UACEF,UAAU,uBACVQ,QAASA,IAAMgE,MAAM,8CAA8CvE,SACpE,mCAYf,EAlNwBwE,KACLzC,EAAAA,EAAAA,MAGJ8B,SAASrM,SAAS,2BAE3ByI,EAAAA,EAAAA,KAACiE,EAAAA,GAAU,CAACC,SAAS,uBAAsBnE,UACzCC,EAAAA,EAAAA,KAAC4B,EAAyB,OAMzB5B,EAAAA,EAAAA,KAACuD,EAAsB,G","sources":["services/whoDigitalLibraryService.js","components/WHODigitalLibrary.js","components/ComponentEditor.js"],"sourcesContent":["/**\n * WHO Digital Library Service\n * \n * Service for interacting with the WHO digital library (iris.who.int)\n * which uses DSpace software with Dublin Core metadata standards.\n */\n\nclass WHODigitalLibraryService {\n  constructor() {\n    // Use proxy in development, direct API in production\n    this.isDevelopment = process.env.NODE_ENV === 'development';\n    this.baseUrl = this.isDevelopment ? '/api/who' : 'https://iris.who.int';\n    this.restApi = `${this.baseUrl}/rest`;\n    this.searchEndpoint = `${this.restApi}/discover/search/objects`;\n    this.originalBaseUrl = 'https://iris.who.int'; // For constructing public URLs\n  }\n\n  /**\n   * Search the WHO digital library\n   * @param {string} query - Search query string\n   * @param {number} page - Page number (default: 0)\n   * @param {number} size - Number of results per page (default: 20)\n   * @param {string} sort - Sort field (default: 'dc.title')\n   * @param {string} order - Sort order 'asc' or 'desc' (default: 'asc')\n   * @returns {Promise<Object>} Search results with metadata\n   */\n  async search(query, page = 0, size = 20, sort = 'dc.title', order = 'asc') {\n    try {\n      const params = new URLSearchParams({\n        query: query,\n        page: page.toString(),\n        size: size.toString(),\n        sort: `${sort},${order}`\n      });\n\n      const url = `${this.searchEndpoint}?${params}`;\n      \n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'User-Agent': 'SGEX-Workbench/1.0 (WHO Digital Library Integration)',\n          'Cache-Control': 'no-cache'\n        }\n      });\n\n      if (!response.ok) {\n        // Handle specific HTTP status codes\n        if (response.status === 403) {\n          // WHO Digital Library API access is restricted - provide fallback with clear explanation\n          console.warn('WHO Digital Library API returned 403 - using demonstration data');\n          return this.getMockSearchResults(query, page, size);\n        } else if (response.status === 500) {\n          // WHO Digital Library API server error - provide fallback with clear explanation\n          console.warn('WHO Digital Library API returned 500 - using demonstration data');\n          return this.getMockSearchResults(query, page, size);\n        } else if (response.status === 429) {\n          throw new Error(`Rate limit exceeded (HTTP 429): Too many requests to the WHO Digital Library API. Please wait a moment before searching again.`);\n        } else if (response.status === 404) {\n          throw new Error(`Service not found (HTTP 404): The WHO Digital Library API endpoint may have changed. Please check for updates.`);\n        } else {\n          throw new Error(`HTTP error! status: ${response.status} - Unable to access WHO Digital Library API`);\n        }\n      }\n\n      const data = await response.json();\n      return this.processSearchResults(data);\n    } catch (error) {\n      console.error('Error searching WHO digital library:', error);\n      \n      // Check if this is a CORS-related error\n      if (error.message === 'Failed to fetch' || error.name === 'TypeError') {\n        if (this.isDevelopment) {\n          // In development, provide mock data with explanation\n          console.warn('Network error accessing WHO API, providing demonstration data');\n          return this.getMockSearchResults(query, page, size);\n        } else {\n          throw new Error('Unable to access WHO Digital Library. This may be due to network restrictions or the service being temporarily unavailable.');\n        }\n      }\n      \n      // If we caught a 403 or 500 error and returned mock data, don't throw here\n      if (error.message.includes('Access denied (HTTP 403)') || \n          error.message.includes('Server error (HTTP 500)') ||\n          error.message.includes('demonstration data')) {\n        return this.getMockSearchResults(query, page, size);\n      }\n      \n      throw new Error(`Failed to search WHO digital library: ${error.message}`);\n    }\n  }\n\n  /**\n   * Get detailed metadata for a specific item\n   * @param {string} uuid - Item UUID\n   * @returns {Promise<Object>} Item metadata\n   */\n  async getItemMetadata(uuid) {\n    try {\n      const url = `${this.restApi}/core/items/${uuid}`;\n      \n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'User-Agent': 'SGEX-Workbench/1.0 (WHO Digital Library Integration)',\n          'Cache-Control': 'no-cache'\n        }\n      });\n\n      if (!response.ok) {\n        // Handle specific HTTP status codes  \n        if (response.status === 403) {\n          throw new Error(`Access denied (HTTP 403): Unable to fetch item metadata due to API access restrictions.`);\n        } else if (response.status === 404) {\n          throw new Error(`Item not found (HTTP 404): The requested item may have been removed or the identifier is invalid.`);\n        } else {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n      }\n\n      const data = await response.json();\n      return this.processDublinCoreMetadata(data);\n    } catch (error) {\n      console.error('Error fetching item metadata:', error);\n      throw new Error(`Failed to fetch item metadata: ${error.message}`);\n    }\n  }\n\n  /**\n   * Process search results and extract relevant information\n   * @param {Object} rawData - Raw API response\n   * @returns {Object} Processed search results\n   */\n  processSearchResults(rawData) {\n    if (!rawData || !rawData._embedded || !rawData._embedded.searchResult) {\n      return {\n        items: [],\n        totalElements: 0,\n        totalPages: 0,\n        currentPage: 0,\n        size: 0\n      };\n    }\n\n    const searchResult = rawData._embedded.searchResult;\n    const items = (searchResult._embedded?.objects || []).map(item => {\n      return this.processDublinCoreMetadata(item._embedded?.indexableObject || item);\n    });\n\n    return {\n      items,\n      totalElements: searchResult.page?.totalElements || 0,\n      totalPages: searchResult.page?.totalPages || 0,\n      currentPage: searchResult.page?.number || 0,\n      size: searchResult.page?.size || 0\n    };\n  }\n\n  /**\n   * Process Dublin Core metadata into a standardized format\n   * @param {Object} item - Raw item data\n   * @returns {Object} Processed item with Dublin Core metadata\n   */\n  processDublinCoreMetadata(item) {\n    if (!item || !item.metadata) {\n      return null;\n    }\n\n    const metadata = item.metadata;\n    \n    // Helper function to extract metadata values\n    const getMetadataValue = (field) => {\n      const fieldData = metadata[field];\n      if (!fieldData || !Array.isArray(fieldData)) return null;\n      if (fieldData.length === 0) return null;\n      if (fieldData.length === 1) return fieldData[0].value;\n      return fieldData.map(item => item.value);\n    };\n\n    // Extract Dublin Core fields\n    const processed = {\n      id: item.uuid || item.id,\n      handle: item.handle,\n      \n      // Dublin Core Title\n      title: getMetadataValue('dc.title') || 'Untitled',\n      \n      // Dublin Core Creator (Author)\n      creator: getMetadataValue('dc.creator'),\n      author: getMetadataValue('dc.contributor.author'),\n      \n      // Dublin Core Subject\n      subject: getMetadataValue('dc.subject'),\n      keywords: getMetadataValue('dc.subject.keyword'),\n      \n      // Dublin Core Description\n      description: getMetadataValue('dc.description'),\n      abstract: getMetadataValue('dc.description.abstract'),\n      \n      // Dublin Core Publisher\n      publisher: getMetadataValue('dc.publisher') || 'World Health Organization',\n      \n      // Dublin Core Date\n      date: getMetadataValue('dc.date'),\n      dateIssued: getMetadataValue('dc.date.issued'),\n      dateCreated: getMetadataValue('dc.date.created'),\n      \n      // Dublin Core Type\n      type: getMetadataValue('dc.type'),\n      \n      // Dublin Core Format\n      format: getMetadataValue('dc.format'),\n      \n      // Dublin Core Identifier\n      identifier: getMetadataValue('dc.identifier'),\n      doi: getMetadataValue('dc.identifier.doi'),\n      isbn: getMetadataValue('dc.identifier.isbn'),\n      uri: getMetadataValue('dc.identifier.uri'),\n      \n      // Dublin Core Source\n      source: getMetadataValue('dc.source'),\n      \n      // Dublin Core Language\n      language: getMetadataValue('dc.language') || getMetadataValue('dc.language.iso'),\n      \n      // Dublin Core Relation\n      relation: getMetadataValue('dc.relation'),\n      \n      // Dublin Core Coverage\n      coverage: getMetadataValue('dc.coverage'),\n      \n      // Dublin Core Rights\n      rights: getMetadataValue('dc.rights'),\n      \n      // Additional WHO-specific fields\n      whoRegion: getMetadataValue('who.region'),\n      whoTopic: getMetadataValue('who.topic'),\n      whoDocumentType: getMetadataValue('who.document.type'),\n      \n      // URLs\n      url: this.constructItemUrl(item.handle),\n      downloadUrl: this.constructDownloadUrl(item.uuid),\n      \n      // Raw metadata for advanced use cases\n      rawMetadata: metadata\n    };\n\n    return processed;\n  }\n\n  /**\n   * Construct URL for viewing item in WHO digital library\n   * @param {string} handle - Item handle\n   * @returns {string} Item URL\n   */\n  constructItemUrl(handle) {\n    if (!handle) return null;\n    // Always use the original WHO URL for public links, not the proxy\n    return `${this.originalBaseUrl}/handle/${handle}`;\n  }\n\n  /**\n   * Construct download URL for item\n   * @param {string} uuid - Item UUID\n   * @returns {string} Download URL\n   */\n  constructDownloadUrl(uuid) {\n    if (!uuid) return null;\n    return `${this.restApi}/core/bitstreams/search/findByItem?uuid=${uuid}`;\n  }\n\n  /**\n   * Search suggestions for autocomplete\n   * @param {string} query - Partial query string\n   * @returns {Promise<Array>} Array of suggestion strings\n   */\n  async getSuggestions(query) {\n    if (!query || query.length < 2) {\n      return [];\n    }\n\n    try {\n      // Use a smaller search to get suggestions\n      const results = await this.search(query, 0, 10);\n      \n      // Extract unique titles and subjects for suggestions\n      const suggestions = new Set();\n      \n      results.items.forEach(item => {\n        if (item.title) {\n          suggestions.add(item.title);\n        }\n        if (item.subject) {\n          if (Array.isArray(item.subject)) {\n            item.subject.forEach(s => suggestions.add(s));\n          } else {\n            suggestions.add(item.subject);\n          }\n        }\n      });\n\n      return Array.from(suggestions).slice(0, 10);\n    } catch (error) {\n      console.error('Error getting suggestions:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Get popular/featured items from WHO digital library\n   * @param {number} limit - Number of items to return\n   * @returns {Promise<Array>} Array of popular items\n   */\n  async getFeaturedItems(limit = 10) {\n    try {\n      // Search for recent or popular items\n      // This could be enhanced based on WHO's specific API capabilities\n      const results = await this.search('*', 0, limit, 'dc.date.issued', 'desc');\n      return results.items;\n    } catch (error) {\n      console.error('Error fetching featured items:', error);\n      \n      // Return sample/mock data for API errors that prevent access\n      if (error.message.includes('CORS policy') || \n          error.message.includes('Failed to fetch') ||\n          error.message.includes('Server error (HTTP 500)') ||\n          error.message.includes('Access denied (HTTP 403)')) {\n        console.warn('Using mock featured items due to API access issues');\n        return this.getMockFeaturedItems();\n      }\n      \n      return [];\n    }\n  }\n\n  /**\n   * Get mock featured items as fallback when API is not accessible\n   * @returns {Array} Array of mock items with proper structure\n   */\n  getMockFeaturedItems() {\n    return [\n      {\n        id: 'featured-demo-1',\n        title: 'World Health Report 2023: Building Health Systems for Equity',\n        creator: 'World Health Organization',\n        dateIssued: '2023',\n        type: 'Annual Report',\n        abstract: 'The World Health Report 2023 examines health equity and sustainable development, with a focus on strengthening health systems to achieve universal health coverage.',\n        subject: ['Health Systems', 'Equity', 'Universal Health Coverage'],\n        url: 'https://iris.who.int/browse',\n        rawMetadata: {}\n      },\n      {\n        id: 'featured-demo-2', \n        title: 'Global Health Observatory: Health SDG Monitor 2023',\n        creator: 'World Health Organization',\n        dateIssued: '2023',\n        type: 'Statistical Report',\n        abstract: 'Comprehensive monitoring of health-related Sustainable Development Goals (SDGs) with global, regional, and country-level data and analysis.',\n        subject: ['SDGs', 'Global Health', 'Statistics', 'Monitoring'],\n        url: 'https://iris.who.int/browse',\n        rawMetadata: {}\n      },\n      {\n        id: 'featured-demo-3',\n        title: 'WHO Guidelines for Indoor Air Quality: Selected Pollutants',\n        creator: 'World Health Organization',\n        dateIssued: '2023',\n        type: 'Health Guidelines',\n        abstract: 'Evidence-based guidelines for indoor air quality standards, covering key pollutants and their health impacts, with recommendations for policy makers.',\n        subject: ['Air Quality', 'Environmental Health', 'Guidelines'],\n        url: 'https://iris.who.int/browse',\n        rawMetadata: {}\n      },\n      {\n        id: 'featured-demo-4',\n        title: 'Mental Health Atlas 2023',\n        creator: 'World Health Organization',\n        dateIssued: '2023',\n        type: 'Atlas',\n        abstract: 'Global overview of mental health resources, services, and policies across WHO Member States, highlighting progress and gaps in mental health systems.',\n        subject: ['Mental Health', 'Health Systems', 'Global Atlas'],\n        url: 'https://iris.who.int/browse',\n        rawMetadata: {}\n      },\n      {\n        id: 'featured-demo-5',\n        title: 'Immunization Agenda 2030: A Global Strategy',\n        creator: 'World Health Organization',\n        dateIssued: '2023',\n        type: 'Strategy Document',\n        abstract: 'Comprehensive strategy for achieving immunization goals by 2030, including approaches for reaching zero-dose children and strengthening immunization systems.',\n        subject: ['Immunization', 'Vaccination', 'Global Strategy'],\n        url: 'https://iris.who.int/browse',\n        rawMetadata: {}\n      }\n    ];\n  }\n\n  /**\n   * Get mock search results as fallback when API returns 403 or other errors\n   * @param {string} query - Search query\n   * @param {number} page - Page number  \n   * @param {number} size - Page size\n   * @returns {Object} Mock search results structure\n   */\n  getMockSearchResults(query, page = 0, size = 10) {\n    // Generate more realistic mock results based on the search query\n    const baseResults = this.generateRelevantMockResults(query);\n    \n    return {\n      items: baseResults.slice(page * size, (page + 1) * size),\n      totalElements: baseResults.length,\n      totalPages: Math.ceil(baseResults.length / size),\n      currentPage: page,\n      size: size,\n      isDemo: true // Flag to indicate this is demonstration data\n    };\n  }\n\n  /**\n   * Generate relevant mock results based on search query\n   * @param {string} query - Search query\n   * @returns {Array} Array of mock items\n   */\n  generateRelevantMockResults(query) {\n    const lowerQuery = query.toLowerCase();\n    \n    // Health-related mock results database\n    const healthTopics = {\n      'hiv': [\n        {\n          id: 'demo-hiv-1',\n          title: 'Consolidated Guidelines on HIV Prevention, Testing and Treatment, Service Delivery and Monitoring',\n          creator: 'World Health Organization',\n          dateIssued: '2023',\n          type: 'Guidelines',\n          abstract: 'These consolidated guidelines provide updated recommendations on HIV prevention, testing, treatment, service delivery and monitoring for a public health approach.',\n          subject: ['HIV', 'Prevention', 'Treatment', 'Guidelines'],\n          url: 'https://iris.who.int/bitstream/handle/10665/375121/9789240073097-eng.pdf',\n          rawMetadata: {}\n        },\n        {\n          id: 'demo-hiv-2', \n          title: 'HIV Strategic Information for Impact: Cascade Data Use Manual',\n          creator: 'World Health Organization',\n          dateIssued: '2022',\n          type: 'Technical Manual',\n          abstract: 'This manual provides guidance on using HIV cascade data to inform program planning, implementation, and monitoring.',\n          subject: ['HIV', 'Data Analysis', 'Program Management'],\n          url: 'https://iris.who.int/handle/10665/354462',\n          rawMetadata: {}\n        }\n      ],\n      'covid': [\n        {\n          id: 'demo-covid-1',\n          title: 'COVID-19 Clinical Management: Living Guidance',\n          creator: 'World Health Organization',\n          dateIssued: '2023',\n          type: 'Clinical Guidelines',\n          abstract: 'This living guidance provides evidence-based recommendations for the clinical management of COVID-19 in adults, children and adolescents.',\n          subject: ['COVID-19', 'Clinical Management', 'Treatment'],\n          url: 'https://iris.who.int/handle/10665/368745',\n          rawMetadata: {}\n        },\n        {\n          id: 'demo-covid-2',\n          title: 'WHO Coronavirus (COVID-19) Dashboard',\n          creator: 'World Health Organization',\n          dateIssued: '2023',\n          type: 'Data Resource',\n          abstract: 'Real-time data and insights on the COVID-19 pandemic, including case numbers, vaccination rates, and epidemiological trends.',\n          subject: ['COVID-19', 'Epidemiology', 'Surveillance'],\n          url: 'https://iris.who.int/handle/10665/361234',\n          rawMetadata: {}\n        }\n      ],\n      'malaria': [\n        {\n          id: 'demo-malaria-1',\n          title: 'World Malaria Report 2023',\n          creator: 'World Health Organization',\n          dateIssued: '2023',\n          type: 'Annual Report',\n          abstract: 'The World Malaria Report 2023 provides a comprehensive update on global progress towards malaria elimination goals.',\n          subject: ['Malaria', 'Global Health', 'Elimination'],\n          url: 'https://iris.who.int/handle/10665/374472',\n          rawMetadata: {}\n        }\n      ],\n      'tuberculosis': [\n        {\n          id: 'demo-tb-1',\n          title: 'WHO Consolidated Guidelines on Tuberculosis: Module 4: Treatment',\n          creator: 'World Health Organization',\n          dateIssued: '2022',\n          type: 'Treatment Guidelines',\n          abstract: 'Updated recommendations for the treatment of drug-susceptible and drug-resistant tuberculosis in adults and children.',\n          subject: ['Tuberculosis', 'Treatment', 'Drug Resistance'],\n          url: 'https://iris.who.int/handle/10665/352984',\n          rawMetadata: {}\n        }\n      ],\n      'mental': [\n        {\n          id: 'demo-mental-1',\n          title: 'Mental Health and Climate Change: Policy Brief',\n          creator: 'World Health Organization',\n          dateIssued: '2023',\n          type: 'Policy Brief',\n          abstract: 'This policy brief outlines the mental health impacts of climate change and provides recommendations for health systems.',\n          subject: ['Mental Health', 'Climate Change', 'Health Policy'],\n          url: 'https://iris.who.int/handle/10665/366756',\n          rawMetadata: {}\n        }\n      ],\n      'nutrition': [\n        {\n          id: 'demo-nutrition-1',\n          title: 'Guideline: Sugars Intake for Adults and Children',\n          creator: 'World Health Organization',\n          dateIssued: '2023',\n          type: 'Nutrition Guideline',\n          abstract: 'WHO recommendations on free sugars intake for adults and children to reduce risk of noncommunicable diseases.',\n          subject: ['Nutrition', 'Sugar', 'NCDs', 'Prevention'],\n          url: 'https://iris.who.int/handle/10665/149782',\n          rawMetadata: {}\n        }\n      ]\n    };\n\n    // Find relevant results based on query\n    let results = [];\n    \n    // Check for specific health topics\n    for (const [topic, items] of Object.entries(healthTopics)) {\n      if (lowerQuery.includes(topic) || lowerQuery.includes(topic.slice(0, -1))) {\n        results.push(...items);\n      }\n    }\n    \n    // If no specific matches, provide general WHO publications\n    if (results.length === 0) {\n      results = [\n        {\n          id: 'demo-general-1',\n          title: `Global Health Observatory Data on ${query}`,\n          creator: 'World Health Organization',\n          dateIssued: '2023',\n          type: 'Data Repository',\n          abstract: `Global health statistics and data related to ${query}. This demonstration result shows how WHO publications would appear in search results.`,\n          subject: [query, 'Global Health', 'Statistics'],\n          url: 'https://iris.who.int/browse',\n          rawMetadata: {}\n        },\n        {\n          id: 'demo-general-2',\n          title: `WHO Technical Report: ${query} Analysis`,\n          creator: 'World Health Organization',\n          dateIssued: '2022',\n          type: 'Technical Report',\n          abstract: `Technical analysis and recommendations related to ${query}. This is demonstration content showing the WHO Digital Library integration.`,\n          subject: [query, 'Technical Analysis', 'WHO Publications'],\n          url: 'https://iris.who.int/browse',\n          rawMetadata: {}\n        },\n        {\n          id: 'demo-general-3',\n          title: `Policy Brief: ${query} and Global Health`,\n          creator: 'World Health Organization',\n          dateIssued: '2023',\n          type: 'Policy Brief',\n          abstract: `Policy recommendations and guidance on ${query} for health systems and policymakers.`,\n          subject: [query, 'Policy', 'Health Systems'],\n          url: 'https://iris.who.int/browse',\n          rawMetadata: {}\n        }\n      ];\n    }\n    \n    return results;\n  }\n\n  /**\n   * Format citation for a reference item\n   * @param {Object} item - Processed item metadata\n   * @param {string} style - Citation style ('apa', 'chicago', 'vancouver')\n   * @returns {string} Formatted citation\n   */\n  formatCitation(item, style = 'apa') {\n    if (!item) return '';\n\n    const title = item.title || 'Untitled';\n    const author = item.creator || item.author || 'World Health Organization';\n    const date = item.dateIssued || item.date || 'n.d.';\n    const publisher = item.publisher || 'World Health Organization';\n    const url = item.url;\n\n    switch (style.toLowerCase()) {\n      case 'apa':\n        return `${author}. (${date}). ${title}. ${publisher}. ${url}`;\n      \n      case 'chicago':\n        return `${author}. \"${title}.\" ${publisher}, ${date}. ${url}.`;\n      \n      case 'vancouver':\n        return `${author}. ${title}. ${publisher}; ${date}. Available from: ${url}`;\n      \n      default:\n        return `${author}. ${title}. ${publisher}, ${date}. Available from: ${url}`;\n    }\n  }\n}\n\n// Create singleton instance\nconst whoDigitalLibraryService = new WHODigitalLibraryService();\n\nexport default whoDigitalLibraryService;","import React, { useState, useEffect, useRef } from 'react';\nimport whoDigitalLibraryService from '../services/whoDigitalLibraryService';\n\nconst WHODigitalLibrary = ({ onReferencesChange }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedReferences, setSelectedReferences] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalResults, setTotalResults] = useState(0);\n  const [error, setError] = useState(null);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [featuredItems, setFeaturedItems] = useState([]);\n  const searchInputRef = useRef(null);\n\n  // Load featured items on component mount and load references from localStorage\n  useEffect(() => {\n    const savedReferences = localStorage.getItem('whoDigitalLibraryReferences');\n    if (savedReferences) {\n      try {\n        const references = JSON.parse(savedReferences);\n        setSelectedReferences(references);\n        if (onReferencesChange) {\n          onReferencesChange(references);\n        }\n      } catch (error) {\n        console.error('Error loading saved references:', error);\n      }\n    }\n    loadFeaturedItems();\n  }, [onReferencesChange]);\n\n  // Save references to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('whoDigitalLibraryReferences', JSON.stringify(selectedReferences));\n    if (onReferencesChange) {\n      onReferencesChange(selectedReferences);\n    }\n  }, [selectedReferences, onReferencesChange]);\n\n  const loadFeaturedItems = async () => {\n    try {\n      const items = await whoDigitalLibraryService.getFeaturedItems(5);\n      setFeaturedItems(items);\n    } catch (error) {\n      console.error('Error loading featured items:', error);\n    }\n  };\n\n  const handleSearch = async (query = searchQuery, page = 0) => {\n    if (!query.trim()) {\n      setSearchResults([]);\n      setTotalPages(0);\n      setTotalResults(0);\n      return;\n    }\n\n    setIsSearching(true);\n    setError(null);\n\n    try {\n      const results = await whoDigitalLibraryService.search(query, page, 10);\n      setSearchResults(results.items);\n      setTotalPages(results.totalPages);\n      setTotalResults(results.totalElements);\n      setCurrentPage(page);\n      \n      // Check if this is demonstration data\n      if (results.isDemo) {\n        setError('WHO_API_DEMO'); // Special error code for demo mode\n      }\n    } catch (error) {\n      setError(error.message);\n      setSearchResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleSearchInputChange = async (e) => {\n    const value = e.target.value;\n    setSearchQuery(value);\n\n    // Get suggestions for autocomplete\n    if (value.length >= 2) {\n      try {\n        const suggestions = await whoDigitalLibraryService.getSuggestions(value);\n        setSuggestions(suggestions);\n        setShowSuggestions(true);\n      } catch (error) {\n        console.error('Error getting suggestions:', error);\n        setSuggestions([]);\n      }\n    } else {\n      setSuggestions([]);\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    setShowSuggestions(false);\n    handleSearch();\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    setSearchQuery(suggestion);\n    setShowSuggestions(false);\n    handleSearch(suggestion);\n  };\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 0 && newPage < totalPages) {\n      handleSearch(searchQuery, newPage);\n    }\n  };\n\n  const addReference = (item) => {\n    const isAlreadySelected = selectedReferences.some(ref => ref.id === item.id);\n    if (!isAlreadySelected) {\n      setSelectedReferences(prev => [...prev, item]);\n    }\n  };\n\n  const removeReference = (itemId) => {\n    setSelectedReferences(prev => prev.filter(ref => ref.id !== itemId));\n  };\n\n  const clearAllReferences = () => {\n    setSelectedReferences([]);\n  };\n\n  const formatDate = (dateStr) => {\n    if (!dateStr) return 'Date not available';\n    if (Array.isArray(dateStr)) {\n      dateStr = dateStr[0];\n    }\n    try {\n      const date = new Date(dateStr);\n      return date.getFullYear();\n    } catch {\n      return dateStr;\n    }\n  };\n\n  const formatAuthors = (creators) => {\n    if (!creators) return 'Author not available';\n    if (Array.isArray(creators)) {\n      return creators.slice(0, 3).join(', ') + (creators.length > 3 ? ', et al.' : '');\n    }\n    return creators;\n  };\n\n  const renderSearchResult = (item) => (\n    <div key={item.id} className=\"search-result-item\">\n      <div className=\"result-content\">\n        <h4 className=\"result-title\">{item.title}</h4>\n        <div className=\"result-meta\">\n          <span className=\"result-authors\">{formatAuthors(item.creator)}</span>\n          <span className=\"result-date\">({formatDate(item.dateIssued)})</span>\n          {item.type && <span className=\"result-type\">{item.type}</span>}\n        </div>\n        {item.abstract && (\n          <p className=\"result-abstract\">\n            {item.abstract.length > 200 \n              ? `${item.abstract.substring(0, 200)}...` \n              : item.abstract}\n          </p>\n        )}\n        {item.subject && (\n          <div className=\"result-subjects\">\n            {(Array.isArray(item.subject) ? item.subject : [item.subject])\n              .slice(0, 3)\n              .map((subject, index) => (\n                <span key={index} className=\"subject-tag\">{subject}</span>\n              ))}\n          </div>\n        )}\n      </div>\n      <div className=\"result-actions\">\n        <a \n          href={item.url} \n          target=\"_blank\" \n          rel=\"noopener noreferrer\" \n          className=\"btn-secondary small\"\n          title=\"View in WHO Digital Library\"\n        >\n          View\n        </a>\n        <button \n          onClick={() => addReference(item)}\n          className=\"btn-primary small\"\n          disabled={selectedReferences.some(ref => ref.id === item.id)}\n        >\n          {selectedReferences.some(ref => ref.id === item.id) ? 'Added' : 'Add'}\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderSelectedReference = (item) => (\n    <div key={item.id} className=\"selected-reference-item\">\n      <div className=\"reference-content\">\n        <h5 className=\"reference-title\">{item.title}</h5>\n        <div className=\"reference-meta\">\n          <span className=\"reference-authors\">{formatAuthors(item.creator)}</span>\n          <span className=\"reference-date\">({formatDate(item.dateIssued)})</span>\n        </div>\n        <div className=\"reference-citation\">\n          {whoDigitalLibraryService.formatCitation(item, 'apa')}\n        </div>\n      </div>\n      <div className=\"reference-actions\">\n        <a \n          href={item.url} \n          target=\"_blank\" \n          rel=\"noopener noreferrer\" \n          className=\"btn-link small\"\n          title=\"View in WHO Digital Library\"\n        >\n          View\n        </a>\n        <button \n          onClick={() => removeReference(item.id)}\n          className=\"btn-danger small\"\n          title=\"Remove reference\"\n        >\n          Remove\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"who-digital-library\">\n      <div className=\"library-header\">\n        <div className=\"header-content\">\n          <h3>WHO Digital Library</h3>\n          <p className=\"library-description\">\n            Search and select references from the WHO Institutional Repository for Health Information (IRIS)\n          </p>\n          <div className=\"library-help\">\n            <a \n              href=\"https://iris.who.int/help\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\" \n              className=\"help-link\"\n              title=\"Get help with WHO Digital Library search\"\n            >\n              📖 Search Help & Documentation\n            </a>\n          </div>\n        </div>\n        <div className=\"library-stats\">\n          <div className=\"stat\">\n            <span className=\"stat-number\">{selectedReferences.length}</span>\n            <span className=\"stat-label\">Selected</span>\n          </div>\n          {totalResults > 0 && (\n            <div className=\"stat\">\n              <span className=\"stat-number\">{totalResults.toLocaleString()}</span>\n              <span className=\"stat-label\">Results</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"search-section\">\n        <form onSubmit={handleSearchSubmit} className=\"search-form\">\n          <div className=\"search-input-container\">\n            <input\n              ref={searchInputRef}\n              type=\"text\"\n              value={searchQuery}\n              onChange={handleSearchInputChange}\n              placeholder=\"Search WHO digital library...\"\n              className=\"search-input\"\n              onBlur={() => setTimeout(() => setShowSuggestions(false), 200)}\n              onFocus={() => suggestions.length > 0 && setShowSuggestions(true)}\n            />\n            <button \n              type=\"submit\" \n              className=\"search-button\"\n              disabled={isSearching}\n            >\n              {isSearching ? 'Searching...' : 'Search'}\n            </button>\n            \n            {showSuggestions && suggestions.length > 0 && (\n              <div className=\"suggestions-dropdown\">\n                {suggestions.map((suggestion, index) => (\n                  <div\n                    key={index}\n                    className=\"suggestion-item\"\n                    onClick={() => handleSuggestionClick(suggestion)}\n                  >\n                    {suggestion}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </form>\n\n        {error && error !== 'WHO_API_DEMO' && (\n          <div className=\"error-message\">\n            <strong>Search Error:</strong> {error}\n            {(error.includes('CORS policy') || error.includes('restart the development server')) && (\n              <div className=\"error-help\">\n                <p><strong>Development Mode:</strong> {error.includes('restart') ? \n                  'The WHO Digital Library proxy is now configured. Please restart your development server (npm start) to enable API access.' : \n                  'This error occurs in development mode due to browser security restrictions.'}</p>\n                <p>\n                  For help with WHO Digital Library search, visit: {' '}\n                  <a \n                    href=\"https://iris.who.int/help\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"help-link\"\n                  >\n                    iris.who.int/help\n                  </a>\n                </p>\n              </div>\n            )}\n            {error.includes('HTTP 403') && (\n              <div className=\"error-help\">\n                <p><strong>API Access Issue:</strong> The WHO Digital Library is currently restricting access to its search API.</p>\n                <p><strong>Possible solutions:</strong></p>\n                <ul>\n                  <li>Wait a few minutes and try again (may be temporary rate limiting)</li>\n                  <li>Try a different, more specific search term</li>\n                  <li>Browse the WHO Digital Library directly: <a href=\"https://iris.who.int\" target=\"_blank\" rel=\"noopener noreferrer\">iris.who.int</a></li>\n                  <li>For API access guidelines, visit: <a href=\"https://iris.who.int/help\" target=\"_blank\" rel=\"noopener noreferrer\">iris.who.int/help</a></li>\n                </ul>\n                <p><em>Note: This integration provides direct access to WHO's public API. Access policies and availability are controlled by WHO.</em></p>\n              </div>\n            )}\n            {(error.includes('HTTP 429') || error.includes('rate limit')) && (\n              <div className=\"error-help\">\n                <p><strong>Rate Limit:</strong> Too many requests have been made to the WHO Digital Library API.</p>\n                <p>Please wait a few minutes before searching again. You can browse featured items below in the meantime.</p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {error === 'WHO_API_DEMO' && (\n          <div className=\"demo-notice\">\n            <div className=\"demo-notice-header\">\n              <span className=\"demo-icon\">🔧</span>\n              <strong>Demonstration Mode</strong>\n            </div>\n            <p>\n              The WHO Digital Library API is currently not accessible for direct integration. \n              The results below are demonstration data showing how the feature would work.\n            </p>\n            <p>\n              <strong>To search real WHO publications:</strong> Visit{' '}\n              <a \n                href=\"https://iris.who.int\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"external-link\"\n              >\n                iris.who.int\n              </a>{' '}\n              directly.\n            </p>\n            <div className=\"demo-notice-actions\">\n              <a \n                href=\"https://iris.who.int/help\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"help-link\"\n              >\n                📖 WHO IRIS Help & Documentation\n              </a>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"library-content\">\n        <div className=\"search-results-section\">\n          <div className=\"section-header\">\n            <h4>Search Results</h4>\n            {totalResults > 0 && (\n              <span className=\"results-count\">\n                {totalResults.toLocaleString()} results found\n              </span>\n            )}\n          </div>\n\n          {searchResults.length === 0 && !isSearching && searchQuery === '' && (\n            <div className=\"featured-items\">\n              <h5>Featured Items</h5>\n              <p>Recent publications from the WHO Digital Library:</p>\n              {featuredItems.length > 0 ? (\n                <div className=\"featured-items-grid\">\n                  {featuredItems.map(item => renderSearchResult(item))}\n                </div>\n              ) : (\n                <p className=\"no-results\">Loading featured items...</p>\n              )}\n            </div>\n          )}\n\n          {searchResults.length === 0 && !isSearching && searchQuery !== '' && (\n            <div className=\"no-results\">\n              <p>No results found for \"{searchQuery}\"</p>\n              <p>Try different keywords or browse featured items above.</p>\n            </div>\n          )}\n\n          {isSearching && (\n            <div className=\"loading-results\">\n              <div className=\"loading-spinner\"></div>\n              <p>Searching WHO Digital Library...</p>\n            </div>\n          )}\n\n          {searchResults.length > 0 && (\n            <div className=\"search-results\">\n              {searchResults.map(item => renderSearchResult(item))}\n              \n              {totalPages > 1 && (\n                <div className=\"pagination\">\n                  <button \n                    onClick={() => handlePageChange(currentPage - 1)}\n                    disabled={currentPage === 0}\n                    className=\"btn-secondary\"\n                  >\n                    Previous\n                  </button>\n                  <span className=\"page-info\">\n                    Page {currentPage + 1} of {totalPages}\n                  </span>\n                  <button \n                    onClick={() => handlePageChange(currentPage + 1)}\n                    disabled={currentPage >= totalPages - 1}\n                    className=\"btn-secondary\"\n                  >\n                    Next\n                  </button>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        <div className=\"selected-references-section\">\n          <div className=\"section-header\">\n            <h4>Selected References</h4>\n            {selectedReferences.length > 0 && (\n              <button \n                onClick={clearAllReferences}\n                className=\"btn-danger small\"\n                title=\"Clear all references\"\n              >\n                Clear All\n              </button>\n            )}\n          </div>\n\n          {selectedReferences.length === 0 ? (\n            <div className=\"no-references\">\n              <p>No references selected yet.</p>\n              <p>Search and add references from the WHO Digital Library to build your reference list.</p>\n            </div>\n          ) : (\n            <div className=\"selected-references\">\n              {selectedReferences.map(item => renderSelectedReference(item))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WHODigitalLibrary;","import React, { useState, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { PageLayout, usePageParams } from './framework';\nimport ContextualHelpMascot from './ContextualHelpMascot';\nimport WHODigitalLibrary from './WHODigitalLibrary';\nimport useThemeImage from '../hooks/useThemeImage';\n\nconst ComponentEditor = () => {\n  const location = useLocation();\n  \n  // Handle health-interventions routes with PageLayout framework\n  if (location.pathname.includes('/health-interventions/')) {\n    return (\n      <PageLayout pageName=\"health-interventions\">\n        <HealthInterventionsEditor />\n      </PageLayout>\n    );\n  }\n  \n  // For other routes, use existing logic\n  return <ComponentEditorContent />;\n};\n\nconst HealthInterventionsEditor = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { params } = usePageParams();\n  const [selectedReferences, setSelectedReferences] = useState([]);\n  \n  // Theme-aware mascot image for fallback avatar\n  const mascotImage = useThemeImage('sgex-mascot.png');\n  \n  // Get data from URL params or location state\n  const { profile, repository } = location.state || {};\n  const user = params?.user;\n  const repo = params?.repo;\n  \n  const currentComponent = { id: 'health-interventions', name: 'Health Interventions' };\n\n  const handleReferencesChange = useCallback((references) => {\n    setSelectedReferences(references);\n  }, []);\n\n  const handleHomeNavigation = () => {\n    navigate('/');\n  };\n\n  // Render WHO Digital Library for health-interventions component\n  return (\n    <div className=\"component-editor\">\n      <div className=\"editor-header\">\n        <div className=\"who-branding\">\n          <h1 onClick={handleHomeNavigation} className=\"clickable-title\">SGEX Workbench</h1>\n          <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n        </div>\n        <div className=\"context-info\">\n          <img \n            src={profile?.avatar_url || user ? `https://github.com/${user}.png` : mascotImage} \n            alt=\"Profile\" \n            className=\"context-avatar\" \n          />\n          <div className=\"context-details\">\n            <span className=\"context-repo\">{repository?.name || repo || 'Repository'}</span>\n            <span className=\"context-component\">{currentComponent.name}</span>\n          </div>\n          <a href=\"/sgex/docs/overview\" className=\"nav-link\">📖 Documentation</a>\n        </div>\n      </div>\n\n      <div className=\"editor-content\">\n        <WHODigitalLibrary \n          onReferencesChange={handleReferencesChange}\n          selectedReferences={selectedReferences}\n        />\n      </div>\n      \n      <ContextualHelpMascot \n        pageId=\"health-interventions-editor\"\n        contextData={{ \n          profile: profile || { login: user }, \n          repository: repository || { name: repo }, \n          component: currentComponent,\n          selectedReferencesCount: selectedReferences.length \n        }}\n      />\n    </div>\n  );\n};\n\nconst ComponentEditorContent = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { params } = usePageParams();\n  const [selectedReferences, setSelectedReferences] = useState([]);\n  \n  // Theme-aware mascot image for fallback avatar\n  const mascotImage = useThemeImage('sgex-mascot.png');\n  \n  const { profile, repository, component } = location.state || {};\n\n  // Determine component from route or state\n  let currentComponent = component;\n  \n  // Handle direct access to editor-health-interventions route (legacy)\n  if (location.pathname === '/sgex/editor-health-interventions' && !component) {\n    currentComponent = { id: 'health-interventions', name: 'Health Interventions' };\n  } else if (params.componentId && !component) {\n    currentComponent = { id: params.componentId, name: params.componentId };\n  }\n\n  const handleReferencesChange = useCallback((references) => {\n    setSelectedReferences(references);\n  }, []);\n\n  const handleHomeNavigation = () => {\n    navigate('/');\n  };\n\n  // For legacy editor-health-interventions route, allow access without full context\n  if (!profile || !repository) {\n    if (currentComponent?.id === 'health-interventions') {\n      // Allow access to health-interventions editor without full context\n      // Use placeholder data for now\n      const placeholderProfile = { login: 'demo-user', avatar_url: mascotImage, name: 'Demo User' };\n      const placeholderRepo = { name: 'demo-repository' };\n      \n      return (\n        <div className=\"component-editor\">\n          <div className=\"editor-header\">\n            <div className=\"who-branding\">\n              <h1 onClick={handleHomeNavigation} className=\"clickable-title\">SGEX Workbench</h1>\n              <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n            </div>\n            <div className=\"context-info\">\n              <img \n                src={placeholderProfile.avatar_url} \n                alt=\"Profile\" \n                className=\"context-avatar\" \n              />\n              <div className=\"context-details\">\n                <span className=\"context-repo\">{placeholderRepo.name}</span>\n                <span className=\"context-component\">{currentComponent.name}</span>\n              </div>\n              <a href=\"/sgex/docs/overview\" className=\"nav-link\">📖 Documentation</a>\n            </div>\n          </div>\n\n          <div className=\"editor-content\">\n            <WHODigitalLibrary \n              onReferencesChange={handleReferencesChange}\n              selectedReferences={selectedReferences}\n            />\n          </div>\n          \n          <ContextualHelpMascot \n            pageId=\"component-editor\"\n            contextData={{ component: currentComponent }}\n          />\n        </div>\n      );\n    } else {\n      navigate('/');\n      return <div>Redirecting...</div>;\n    }\n  }\n\n  return (\n    <PageLayout pageName=\"component-editor\">\n      <div className=\"component-editor\">\n      <div className=\"editor-content\">\n\n        <div className=\"editor-main\">\n          <div className=\"editor-placeholder\">\n            <div className=\"component-icon\" style={{ color: currentComponent.color }}>\n              {currentComponent.icon}\n            </div>\n            <h2>{currentComponent.name} Editor</h2>\n            <p>\n              This is where the {currentComponent.name?.toLowerCase()} editor will be implemented. \n              The editor will support {currentComponent.fileTypes?.join(', ') || 'various'} files and provide \n              specialized tools for {currentComponent.description?.toLowerCase() || 'component editing'}.\n            </p>\n            \n            <div className=\"component-info\">\n              <div className=\"info-item\">\n                <strong>Component Type:</strong> {currentComponent.type || 'Editor'}\n              </div>\n              <div className=\"info-item\">\n                <strong>File Types:</strong> {currentComponent.fileTypes?.join(', ') || 'Various formats'}\n              </div>\n              <div className=\"info-item\">\n                <strong>Repository:</strong> {repository.name}\n              </div>\n            </div>\n\n            <div className=\"placeholder-actions\">\n              <button \n                className=\"action-btn primary\"\n                onClick={() => alert('File browser functionality coming soon!')}\n              >\n                Browse Files\n              </button>\n              <button \n                className=\"action-btn secondary\"\n                onClick={() => alert('Create new file functionality coming soon!')}\n              >\n                Create New File\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default ComponentEditor;"],"names":["constructor","this","isDevelopment","process","baseUrl","restApi","concat","searchEndpoint","originalBaseUrl","search","query","page","arguments","length","undefined","size","sort","order","params","URLSearchParams","toString","url","response","fetch","method","headers","ok","status","console","warn","getMockSearchResults","Error","data","json","processSearchResults","error","message","name","includes","getItemMetadata","uuid","processDublinCoreMetadata","rawData","_searchResult$_embedd","_searchResult$page","_searchResult$page2","_searchResult$page3","_searchResult$page4","_embedded","searchResult","items","totalElements","totalPages","currentPage","objects","map","item","_item$_embedded","indexableObject","number","metadata","getMetadataValue","field","fieldData","Array","isArray","value","id","handle","title","creator","author","subject","keywords","description","abstract","publisher","date","dateIssued","dateCreated","type","format","identifier","doi","isbn","uri","source","language","relation","coverage","rights","whoRegion","whoTopic","whoDocumentType","constructItemUrl","downloadUrl","constructDownloadUrl","rawMetadata","getSuggestions","results","suggestions","Set","forEach","add","s","from","slice","getFeaturedItems","limit","getMockFeaturedItems","baseResults","generateRelevantMockResults","Math","ceil","isDemo","lowerQuery","toLowerCase","healthTopics","topic","Object","entries","push","formatCitation","style","_ref","onReferencesChange","searchQuery","setSearchQuery","useState","searchResults","setSearchResults","selectedReferences","setSelectedReferences","isSearching","setIsSearching","setCurrentPage","setTotalPages","totalResults","setTotalResults","setError","setSuggestions","showSuggestions","setShowSuggestions","featuredItems","setFeaturedItems","searchInputRef","useRef","useEffect","savedReferences","localStorage","getItem","references","JSON","parse","loadFeaturedItems","setItem","stringify","async","whoDigitalLibraryService","handleSearch","trim","handlePageChange","newPage","formatDate","dateStr","Date","getFullYear","_unused","formatAuthors","creators","join","renderSearchResult","_jsxs","className","children","_jsx","substring","index","href","target","rel","onClick","some","ref","prev","addReference","disabled","renderSelectedReference","removeReference","itemId","filter","toLocaleString","onSubmit","e","preventDefault","onChange","placeholder","onBlur","setTimeout","onFocus","suggestion","handleSuggestionClick","clearAllReferences","HealthInterventionsEditor","location","useLocation","navigate","useNavigate","usePageParams","mascotImage","useThemeImage","profile","repository","state","user","repo","currentComponent","handleReferencesChange","useCallback","handleHomeNavigation","src","avatar_url","alt","WHODigitalLibrary","ContextualHelpMascot","pageId","contextData","login","component","selectedReferencesCount","ComponentEditorContent","_currentComponent$nam","_currentComponent$fil","_currentComponent$des","_currentComponent$fil2","pathname","componentId","_currentComponent","placeholderProfile","placeholderRepo","PageLayout","pageName","color","icon","fileTypes","alert","ComponentEditor"],"sourceRoot":""}