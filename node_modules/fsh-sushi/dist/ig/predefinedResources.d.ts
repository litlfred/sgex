import { LoadStatus } from 'fhir-package-loader';
import { ImplementationGuideDefinitionParameter } from '../fhirtypes';
import { FHIRDefinitions } from '../fhirdefs';
export declare const PREDEFINED_PACKAGE_NAME = "sushi-local";
export declare const PREDEFINED_PACKAGE_VERSION = "LOCAL";
/**
 * Gets the local resource directory paths corresponding to the typical locations in an IG
 * as well as those configured in the IG parameter path-resource. Only those directories
 * that exist will be returned.
 * @param {string} resourceDir - The path to the directory containing the resource subdirs
 * @param {string} projectDir - User's specified project directory
 * @param {ImplementationGuideDefinitionParameter[]} configParameters - optional, an array of
 *    config parameters in which to  determine if there are additional resource paths for
 *    predefined resource
 * @returns string[] list of paths to search for predefined resources
 */
export declare function getPredefinedResourcePaths(resourceDir: string, projectDir?: string, configParameters?: ImplementationGuideDefinitionParameter[]): string[];
/**
 * Loads predefined resources from the typical locations in an IG as well as those configured
 * in the IG parameter path-resource.
 * @param {string} resourceDir - The path to the directory containing the resource subdirs
 * @param {string} projectDir - User's specified project directory
 * @param {ImplementationGuideDefinitionParameter[]} configParameters - optional, an array of
 *    config parameters in which to  determine if there are additional resource paths for
 *    predefined resource
 * @returns Promise<LoadStatus> the load status ('LOADED' or 'FAILED')
 */
export declare function loadPredefinedResources(defs: FHIRDefinitions, resourceDir: string, projectDir?: string, configParameters?: ImplementationGuideDefinitionParameter[]): Promise<LoadStatus>;
