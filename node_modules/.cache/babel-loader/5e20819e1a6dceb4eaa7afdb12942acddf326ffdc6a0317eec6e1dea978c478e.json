{"ast":null,"code":"import { forEach } from 'min-dash';\nimport { closest as domClosest } from 'min-dom';\n\n/**\n * @typedef {import('../../core/EventBus').default} EventBus\n *\n * @typedef {import('../../core/EventBus').Event} Event\n */\n\nvar LOW_PRIORITY = 250;\n\n/**\n * The tool manager acts as middle-man between the available tool's and the Palette,\n * it takes care of making sure that the correct active state is set.\n *\n * @param {EventBus} eventBus\n */\nexport default function ToolManager(eventBus) {\n  this._eventBus = eventBus;\n  this._tools = [];\n  this._active = null;\n}\nToolManager.$inject = ['eventBus'];\n\n/**\n * Register a tool.\n *\n * @param {string} name\n * @param { {\n *   tool: string;\n * } } events\n */\nToolManager.prototype.registerTool = function (name, events) {\n  var tools = this._tools;\n  if (!events) {\n    throw new Error('A tool has to be registered with it\\'s \"events\"');\n  }\n  tools.push(name);\n  this.bindEvents(name, events);\n};\nToolManager.prototype.isActive = function (tool) {\n  return tool && this._active === tool;\n};\nToolManager.prototype.length = function (tool) {\n  return this._tools.length;\n};\nToolManager.prototype.setActive = function (tool) {\n  var eventBus = this._eventBus;\n  if (this._active !== tool) {\n    this._active = tool;\n    eventBus.fire('tool-manager.update', {\n      tool: tool\n    });\n  }\n};\nToolManager.prototype.bindEvents = function (name, events) {\n  var eventBus = this._eventBus;\n  var eventsToRegister = [];\n  eventBus.on(events.tool + '.init', function (event) {\n    var context = event.context;\n\n    // Active tools that want to reactivate themselves must do this explicitly\n    if (!context.reactivate && this.isActive(name)) {\n      this.setActive(null);\n      return;\n    }\n    this.setActive(name);\n  }, this);\n\n  // TODO: add test cases\n  forEach(events, function (event) {\n    eventsToRegister.push(event + '.ended');\n    eventsToRegister.push(event + '.canceled');\n  });\n  eventBus.on(eventsToRegister, LOW_PRIORITY, function (event) {\n    // We defer the de-activation of the tool to the .activate phase,\n    // so we're able to check if we want to toggle off the current\n    // active tool or switch to a new one\n    if (!this._active) {\n      return;\n    }\n    if (isPaletteClick(event)) {\n      return;\n    }\n    this.setActive(null);\n  }, this);\n};\n\n// helpers ///////////////\n\n/**\n * Check if a given event is a palette click event.\n *\n * @param {Event} event\n *\n * @return {boolean}\n */\nfunction isPaletteClick(event) {\n  var target = event.originalEvent && event.originalEvent.target;\n  return target && domClosest(target, '.group[data-group=\"tools\"]');\n}","map":{"version":3,"names":["forEach","closest","domClosest","LOW_PRIORITY","ToolManager","eventBus","_eventBus","_tools","_active","$inject","prototype","registerTool","name","events","tools","Error","push","bindEvents","isActive","tool","length","setActive","fire","eventsToRegister","on","event","context","reactivate","isPaletteClick","target","originalEvent"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/tool-manager/ToolManager.js"],"sourcesContent":["import {\n  forEach\n} from 'min-dash';\n\nimport {\n  closest as domClosest\n} from 'min-dom';\n\n/**\n * @typedef {import('../../core/EventBus').default} EventBus\n *\n * @typedef {import('../../core/EventBus').Event} Event\n */\n\nvar LOW_PRIORITY = 250;\n\n/**\n * The tool manager acts as middle-man between the available tool's and the Palette,\n * it takes care of making sure that the correct active state is set.\n *\n * @param {EventBus} eventBus\n */\nexport default function ToolManager(eventBus) {\n  this._eventBus = eventBus;\n\n  this._tools = [];\n  this._active = null;\n}\n\nToolManager.$inject = [ 'eventBus' ];\n\n/**\n * Register a tool.\n *\n * @param {string} name\n * @param { {\n *   tool: string;\n * } } events\n */\nToolManager.prototype.registerTool = function(name, events) {\n  var tools = this._tools;\n\n  if (!events) {\n    throw new Error('A tool has to be registered with it\\'s \"events\"');\n  }\n\n  tools.push(name);\n  this.bindEvents(name, events);\n};\n\nToolManager.prototype.isActive = function(tool) {\n  return tool && this._active === tool;\n};\n\nToolManager.prototype.length = function(tool) {\n  return this._tools.length;\n};\n\nToolManager.prototype.setActive = function(tool) {\n  var eventBus = this._eventBus;\n\n  if (this._active !== tool) {\n    this._active = tool;\n\n    eventBus.fire('tool-manager.update', { tool: tool });\n  }\n};\n\nToolManager.prototype.bindEvents = function(name, events) {\n  var eventBus = this._eventBus;\n\n  var eventsToRegister = [];\n\n  eventBus.on(events.tool + '.init', function(event) {\n    var context = event.context;\n\n    // Active tools that want to reactivate themselves must do this explicitly\n    if (!context.reactivate && this.isActive(name)) {\n      this.setActive(null);\n\n      return;\n    }\n\n    this.setActive(name);\n\n  }, this);\n\n  // TODO: add test cases\n  forEach(events, function(event) {\n    eventsToRegister.push(event + '.ended');\n    eventsToRegister.push(event + '.canceled');\n  });\n\n  eventBus.on(eventsToRegister, LOW_PRIORITY, function(event) {\n\n    // We defer the de-activation of the tool to the .activate phase,\n    // so we're able to check if we want to toggle off the current\n    // active tool or switch to a new one\n    if (!this._active) {\n      return;\n    }\n\n    if (isPaletteClick(event)) {\n      return;\n    }\n\n    this.setActive(null);\n  }, this);\n\n};\n\n\n// helpers ///////////////\n\n/**\n * Check if a given event is a palette click event.\n *\n * @param {Event} event\n *\n * @return {boolean}\n */\nfunction isPaletteClick(event) {\n  var target = event.originalEvent && event.originalEvent.target;\n\n  return target && domClosest(target, '.group[data-group=\"tools\"]');\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}