{"ast":null,"code":"import SnapContext from './SnapContext';\nimport { getChildren, isSnapped, mid } from './SnapUtil';\nimport { isCmd } from '../keyboard/KeyboardUtil';\nimport { forEach, isNumber } from 'min-dash';\nimport { isConnection, isLabel } from '../../util/ModelUtil';\n\n/**\r\n * @typedef {import('../../core/ElementRegistry').default} ElementRegistry\r\n * @typedef {import('../../core/EventBus').default} EventBus\r\n * @typedef {import('./Snapping').default} Snapping\r\n */\n\nvar HIGHER_PRIORITY = 1250;\n\n/**\r\n * Snap during create and move.\r\n *\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {EventBus} eventBus\r\n * @param {Snapping} snapping\r\n */\nexport default function CreateMoveSnapping(elementRegistry, eventBus, snapping) {\n  var self = this;\n  this._elementRegistry = elementRegistry;\n  eventBus.on(['create.start', 'shape.move.start'], function (event) {\n    self.initSnap(event);\n  });\n  eventBus.on(['create.move', 'create.end', 'shape.move.move', 'shape.move.end'], HIGHER_PRIORITY, function (event) {\n    var context = event.context,\n      shape = context.shape,\n      snapContext = context.snapContext,\n      target = context.target;\n    if (event.originalEvent && isCmd(event.originalEvent)) {\n      return;\n    }\n    if (isSnapped(event) || !target) {\n      return;\n    }\n    var snapPoints = snapContext.pointsForTarget(target);\n    if (!snapPoints.initialized) {\n      snapPoints = self.addSnapTargetPoints(snapPoints, shape, target);\n      snapPoints.initialized = true;\n    }\n    snapping.snap(event, snapPoints);\n  });\n  eventBus.on(['create.cleanup', 'shape.move.cleanup'], function () {\n    snapping.hide();\n  });\n}\nCreateMoveSnapping.$inject = ['elementRegistry', 'eventBus', 'snapping'];\nCreateMoveSnapping.prototype.initSnap = function (event) {\n  var elementRegistry = this._elementRegistry;\n  var context = event.context,\n    shape = context.shape,\n    snapContext = context.snapContext;\n  if (!snapContext) {\n    snapContext = context.snapContext = new SnapContext();\n  }\n  var shapeMid;\n  if (elementRegistry.get(shape.id)) {\n    // move\n    shapeMid = mid(shape, event);\n  } else {\n    // create\n    shapeMid = {\n      x: event.x + mid(shape).x,\n      y: event.y + mid(shape).y\n    };\n  }\n  var shapeTopLeft = {\n      x: shapeMid.x - shape.width / 2,\n      y: shapeMid.y - shape.height / 2\n    },\n    shapeBottomRight = {\n      x: shapeMid.x + shape.width / 2,\n      y: shapeMid.y + shape.height / 2\n    };\n  snapContext.setSnapOrigin('mid', {\n    x: shapeMid.x - event.x,\n    y: shapeMid.y - event.y\n  });\n\n  // snap labels to mid only\n  if (isLabel(shape)) {\n    return snapContext;\n  }\n  snapContext.setSnapOrigin('top-left', {\n    x: shapeTopLeft.x - event.x,\n    y: shapeTopLeft.y - event.y\n  });\n  snapContext.setSnapOrigin('bottom-right', {\n    x: shapeBottomRight.x - event.x,\n    y: shapeBottomRight.y - event.y\n  });\n  return snapContext;\n};\nCreateMoveSnapping.prototype.addSnapTargetPoints = function (snapPoints, shape, target) {\n  var snapTargets = this.getSnapTargets(shape, target);\n  forEach(snapTargets, function (snapTarget) {\n    // handle labels\n    if (isLabel(snapTarget)) {\n      if (isLabel(shape)) {\n        snapPoints.add('mid', mid(snapTarget));\n      }\n      return;\n    }\n\n    // handle connections\n    if (isConnection(snapTarget)) {\n      // ignore single segment connections\n      if (snapTarget.waypoints.length < 3) {\n        return;\n      }\n\n      // ignore first and last waypoint\n      var waypoints = snapTarget.waypoints.slice(1, -1);\n      forEach(waypoints, function (waypoint) {\n        snapPoints.add('mid', waypoint);\n      });\n      return;\n    }\n\n    // handle shapes\n    snapPoints.add('mid', mid(snapTarget));\n  });\n  if (!isNumber(shape.x) || !isNumber(shape.y)) {\n    return snapPoints;\n  }\n\n  // snap to original position when moving\n  if (this._elementRegistry.get(shape.id)) {\n    snapPoints.add('mid', mid(shape));\n  }\n  return snapPoints;\n};\nCreateMoveSnapping.prototype.getSnapTargets = function (shape, target) {\n  return getChildren(target).filter(function (child) {\n    return !isHidden(child);\n  });\n};\n\n// helpers //////////\n\nfunction isHidden(element) {\n  return !!element.hidden;\n}","map":{"version":3,"names":["SnapContext","getChildren","isSnapped","mid","isCmd","forEach","isNumber","isConnection","isLabel","HIGHER_PRIORITY","CreateMoveSnapping","elementRegistry","eventBus","snapping","self","_elementRegistry","on","event","initSnap","context","shape","snapContext","target","originalEvent","snapPoints","pointsForTarget","initialized","addSnapTargetPoints","snap","hide","$inject","prototype","shapeMid","get","id","x","y","shapeTopLeft","width","height","shapeBottomRight","setSnapOrigin","snapTargets","getSnapTargets","snapTarget","add","waypoints","length","slice","waypoint","filter","child","isHidden","element","hidden"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/snapping/CreateMoveSnapping.js"],"sourcesContent":["import SnapContext from './SnapContext';\r\n\r\nimport {\r\n  getChildren,\r\n  isSnapped,\r\n  mid\r\n} from './SnapUtil';\r\n\r\nimport { isCmd } from '../keyboard/KeyboardUtil';\r\n\r\nimport {\r\n  forEach,\r\n  isNumber\r\n} from 'min-dash';\r\n\r\nimport {\r\n  isConnection,\r\n  isLabel\r\n} from '../../util/ModelUtil';\r\n\r\n/**\r\n * @typedef {import('../../core/ElementRegistry').default} ElementRegistry\r\n * @typedef {import('../../core/EventBus').default} EventBus\r\n * @typedef {import('./Snapping').default} Snapping\r\n */\r\n\r\nvar HIGHER_PRIORITY = 1250;\r\n\r\n\r\n/**\r\n * Snap during create and move.\r\n *\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {EventBus} eventBus\r\n * @param {Snapping} snapping\r\n */\r\nexport default function CreateMoveSnapping(elementRegistry, eventBus, snapping) {\r\n  var self = this;\r\n\r\n  this._elementRegistry = elementRegistry;\r\n\r\n  eventBus.on([\r\n    'create.start',\r\n    'shape.move.start'\r\n  ], function(event) {\r\n    self.initSnap(event);\r\n  });\r\n\r\n  eventBus.on([\r\n    'create.move',\r\n    'create.end',\r\n    'shape.move.move',\r\n    'shape.move.end'\r\n  ], HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        snapContext = context.snapContext,\r\n        target = context.target;\r\n\r\n    if (event.originalEvent && isCmd(event.originalEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (isSnapped(event) || !target) {\r\n      return;\r\n    }\r\n\r\n    var snapPoints = snapContext.pointsForTarget(target);\r\n\r\n    if (!snapPoints.initialized) {\r\n      snapPoints = self.addSnapTargetPoints(snapPoints, shape, target);\r\n\r\n      snapPoints.initialized = true;\r\n    }\r\n\r\n    snapping.snap(event, snapPoints);\r\n  });\r\n\r\n  eventBus.on([\r\n    'create.cleanup',\r\n    'shape.move.cleanup'\r\n  ], function() {\r\n    snapping.hide();\r\n  });\r\n}\r\n\r\nCreateMoveSnapping.$inject = [\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'snapping'\r\n];\r\n\r\nCreateMoveSnapping.prototype.initSnap = function(event) {\r\n  var elementRegistry = this._elementRegistry;\r\n\r\n  var context = event.context,\r\n      shape = context.shape,\r\n      snapContext = context.snapContext;\r\n\r\n  if (!snapContext) {\r\n    snapContext = context.snapContext = new SnapContext();\r\n  }\r\n\r\n  var shapeMid;\r\n\r\n  if (elementRegistry.get(shape.id)) {\r\n\r\n    // move\r\n    shapeMid = mid(shape, event);\r\n  } else {\r\n\r\n    // create\r\n    shapeMid = {\r\n      x: event.x + mid(shape).x,\r\n      y: event.y + mid(shape).y\r\n    };\r\n  }\r\n\r\n  var shapeTopLeft = {\r\n        x: shapeMid.x - shape.width / 2,\r\n        y: shapeMid.y - shape.height / 2\r\n      },\r\n      shapeBottomRight = {\r\n        x: shapeMid.x + shape.width / 2,\r\n        y: shapeMid.y + shape.height / 2\r\n      };\r\n\r\n  snapContext.setSnapOrigin('mid', {\r\n    x: shapeMid.x - event.x,\r\n    y: shapeMid.y - event.y\r\n  });\r\n\r\n  // snap labels to mid only\r\n  if (isLabel(shape)) {\r\n    return snapContext;\r\n  }\r\n\r\n  snapContext.setSnapOrigin('top-left', {\r\n    x: shapeTopLeft.x - event.x,\r\n    y: shapeTopLeft.y - event.y\r\n  });\r\n\r\n  snapContext.setSnapOrigin('bottom-right', {\r\n    x: shapeBottomRight.x - event.x,\r\n    y: shapeBottomRight.y - event.y\r\n  });\r\n\r\n  return snapContext;\r\n};\r\n\r\nCreateMoveSnapping.prototype.addSnapTargetPoints = function(snapPoints, shape, target) {\r\n  var snapTargets = this.getSnapTargets(shape, target);\r\n\r\n  forEach(snapTargets, function(snapTarget) {\r\n\r\n    // handle labels\r\n    if (isLabel(snapTarget)) {\r\n\r\n      if (isLabel(shape)) {\r\n        snapPoints.add('mid', mid(snapTarget));\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // handle connections\r\n    if (isConnection(snapTarget)) {\r\n\r\n      // ignore single segment connections\r\n      if (snapTarget.waypoints.length < 3) {\r\n        return;\r\n      }\r\n\r\n      // ignore first and last waypoint\r\n      var waypoints = snapTarget.waypoints.slice(1, -1);\r\n\r\n      forEach(waypoints, function(waypoint) {\r\n        snapPoints.add('mid', waypoint);\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    // handle shapes\r\n    snapPoints.add('mid', mid(snapTarget));\r\n  });\r\n\r\n  if (!isNumber(shape.x) || !isNumber(shape.y)) {\r\n    return snapPoints;\r\n  }\r\n\r\n  // snap to original position when moving\r\n  if (this._elementRegistry.get(shape.id)) {\r\n    snapPoints.add('mid', mid(shape));\r\n  }\r\n\r\n  return snapPoints;\r\n};\r\n\r\nCreateMoveSnapping.prototype.getSnapTargets = function(shape, target) {\r\n  return getChildren(target).filter(function(child) {\r\n    return !isHidden(child);\r\n  });\r\n};\r\n\r\n// helpers //////////\r\n\r\nfunction isHidden(element) {\r\n  return !!element.hidden;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}