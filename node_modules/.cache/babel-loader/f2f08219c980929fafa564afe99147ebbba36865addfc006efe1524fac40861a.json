{"ast":null,"code":"import { bind, find } from 'min-dash';\nimport TextBox from './TextBox.js';\n\n/**\n * A direct editing component that allows users\n * to edit an elements text directly in the diagram\n *\n * @param {EventBus} eventBus the event bus\n * @param {Canvas} canvas the canvas\n */\nexport default function DirectEditing(eventBus, canvas) {\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._providers = [];\n  this._textbox = new TextBox({\n    container: canvas.getContainer(),\n    keyHandler: bind(this._handleKey, this),\n    resizeHandler: bind(this._handleResize, this)\n  });\n}\nDirectEditing.$inject = ['eventBus', 'canvas'];\n\n/**\n * Register a direct editing provider\n\n * @param {Object} provider the provider, must expose an #activate(element) method that returns\n *                          an activation context ({ bounds: {x, y, width, height }, text }) if\n *                          direct editing is available for the given element.\n *                          Additionally the provider must expose a #update(element, value) method\n *                          to receive direct editing updates.\n */\nDirectEditing.prototype.registerProvider = function (provider) {\n  this._providers.push(provider);\n};\n\n/**\n * Returns true if direct editing is currently active\n *\n * @param {djs.model.Base} [element]\n *\n * @return {boolean}\n */\nDirectEditing.prototype.isActive = function (element) {\n  return !!(this._active && (!element || this._active.element === element));\n};\n\n/**\n * Cancel direct editing, if it is currently active\n */\nDirectEditing.prototype.cancel = function () {\n  if (!this._active) {\n    return;\n  }\n  this._fire('cancel');\n  this.close();\n};\nDirectEditing.prototype._fire = function (event, context) {\n  this._eventBus.fire('directEditing.' + event, context || {\n    active: this._active\n  });\n};\nDirectEditing.prototype.close = function () {\n  this._textbox.destroy();\n  this._fire('deactivate');\n  this._active = null;\n  this.resizable = undefined;\n\n  // restoreFocus API is available from diagram-js@15.0.0\n  this._canvas.restoreFocus && this._canvas.restoreFocus();\n};\nDirectEditing.prototype.complete = function () {\n  var active = this._active;\n  if (!active) {\n    return;\n  }\n  var containerBounds,\n    previousBounds = active.context.bounds,\n    newBounds = this.$textbox.getBoundingClientRect(),\n    newText = this.getValue(),\n    previousText = active.context.text;\n  if (newText !== previousText || newBounds.height !== previousBounds.height || newBounds.width !== previousBounds.width) {\n    containerBounds = this._textbox.container.getBoundingClientRect();\n    active.provider.update(active.element, newText, active.context.text, {\n      x: newBounds.left - containerBounds.left,\n      y: newBounds.top - containerBounds.top,\n      width: newBounds.width,\n      height: newBounds.height\n    });\n  }\n  this._fire('complete');\n  this.close();\n};\nDirectEditing.prototype.getValue = function () {\n  return this._textbox.getValue();\n};\nDirectEditing.prototype._handleKey = function (e) {\n  // stop bubble\n  e.stopPropagation();\n  var key = e.keyCode || e.charCode;\n\n  // ESC\n  if (key === 27) {\n    e.preventDefault();\n    return this.cancel();\n  }\n\n  // Enter\n  if (key === 13 && !e.shiftKey) {\n    e.preventDefault();\n    return this.complete();\n  }\n};\nDirectEditing.prototype._handleResize = function (event) {\n  this._fire('resize', event);\n};\n\n/**\n * Activate direct editing on the given element\n *\n * @param {Object} ElementDescriptor the descriptor for a shape or connection\n * @return {Boolean} true if the activation was possible\n */\nDirectEditing.prototype.activate = function (element) {\n  if (this.isActive()) {\n    this.cancel();\n  }\n\n  // the direct editing context\n  var context;\n  var provider = find(this._providers, function (p) {\n    return (context = p.activate(element)) ? p : null;\n  });\n\n  // check if activation took place\n  if (context) {\n    this.$textbox = this._textbox.create(context.bounds, context.style, context.text, context.options);\n    this._active = {\n      element: element,\n      context: context,\n      provider: provider\n    };\n    if (context.options && context.options.resizable) {\n      this.resizable = true;\n    }\n    this._fire('activate');\n  }\n  return !!context;\n};","map":{"version":3,"names":["bind","find","TextBox","DirectEditing","eventBus","canvas","_eventBus","_canvas","_providers","_textbox","container","getContainer","keyHandler","_handleKey","resizeHandler","_handleResize","$inject","prototype","registerProvider","provider","push","isActive","element","_active","cancel","_fire","close","event","context","fire","active","destroy","resizable","undefined","restoreFocus","complete","containerBounds","previousBounds","bounds","newBounds","$textbox","getBoundingClientRect","newText","getValue","previousText","text","height","width","update","x","left","y","top","e","stopPropagation","key","keyCode","charCode","preventDefault","shiftKey","activate","p","create","style","options"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js-direct-editing/lib/DirectEditing.js"],"sourcesContent":["import {\n  bind,\n  find\n} from 'min-dash';\n\nimport TextBox from './TextBox.js';\n\n\n/**\n * A direct editing component that allows users\n * to edit an elements text directly in the diagram\n *\n * @param {EventBus} eventBus the event bus\n * @param {Canvas} canvas the canvas\n */\nexport default function DirectEditing(eventBus, canvas) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n\n  this._providers = [];\n  this._textbox = new TextBox({\n    container: canvas.getContainer(),\n    keyHandler: bind(this._handleKey, this),\n    resizeHandler: bind(this._handleResize, this)\n  });\n}\n\nDirectEditing.$inject = [ 'eventBus', 'canvas' ];\n\n\n/**\n * Register a direct editing provider\n\n * @param {Object} provider the provider, must expose an #activate(element) method that returns\n *                          an activation context ({ bounds: {x, y, width, height }, text }) if\n *                          direct editing is available for the given element.\n *                          Additionally the provider must expose a #update(element, value) method\n *                          to receive direct editing updates.\n */\nDirectEditing.prototype.registerProvider = function(provider) {\n  this._providers.push(provider);\n};\n\n\n/**\n * Returns true if direct editing is currently active\n *\n * @param {djs.model.Base} [element]\n *\n * @return {boolean}\n */\nDirectEditing.prototype.isActive = function(element) {\n  return !!(this._active && (!element || this._active.element === element));\n};\n\n\n/**\n * Cancel direct editing, if it is currently active\n */\nDirectEditing.prototype.cancel = function() {\n  if (!this._active) {\n    return;\n  }\n\n  this._fire('cancel');\n  this.close();\n};\n\n\nDirectEditing.prototype._fire = function(event, context) {\n  this._eventBus.fire('directEditing.' + event, context || { active: this._active });\n};\n\nDirectEditing.prototype.close = function() {\n  this._textbox.destroy();\n\n  this._fire('deactivate');\n\n  this._active = null;\n\n  this.resizable = undefined;\n\n  // restoreFocus API is available from diagram-js@15.0.0\n  this._canvas.restoreFocus && this._canvas.restoreFocus();\n};\n\n\nDirectEditing.prototype.complete = function() {\n\n  var active = this._active;\n\n  if (!active) {\n    return;\n  }\n\n  var containerBounds,\n      previousBounds = active.context.bounds,\n      newBounds = this.$textbox.getBoundingClientRect(),\n      newText = this.getValue(),\n      previousText = active.context.text;\n\n  if (\n    newText !== previousText ||\n    newBounds.height !== previousBounds.height ||\n    newBounds.width !== previousBounds.width\n  ) {\n    containerBounds = this._textbox.container.getBoundingClientRect();\n\n    active.provider.update(active.element, newText, active.context.text, {\n      x: newBounds.left - containerBounds.left,\n      y: newBounds.top - containerBounds.top,\n      width: newBounds.width,\n      height: newBounds.height\n    });\n  }\n\n  this._fire('complete');\n\n  this.close();\n};\n\n\nDirectEditing.prototype.getValue = function() {\n  return this._textbox.getValue();\n};\n\n\nDirectEditing.prototype._handleKey = function(e) {\n\n  // stop bubble\n  e.stopPropagation();\n\n  var key = e.keyCode || e.charCode;\n\n  // ESC\n  if (key === 27) {\n    e.preventDefault();\n    return this.cancel();\n  }\n\n  // Enter\n  if (key === 13 && !e.shiftKey) {\n    e.preventDefault();\n    return this.complete();\n  }\n};\n\n\nDirectEditing.prototype._handleResize = function(event) {\n  this._fire('resize', event);\n};\n\n\n/**\n * Activate direct editing on the given element\n *\n * @param {Object} ElementDescriptor the descriptor for a shape or connection\n * @return {Boolean} true if the activation was possible\n */\nDirectEditing.prototype.activate = function(element) {\n  if (this.isActive()) {\n    this.cancel();\n  }\n\n  // the direct editing context\n  var context;\n\n  var provider = find(this._providers, function(p) {\n    return ((context = p.activate(element))) ? p : null;\n  });\n\n  // check if activation took place\n  if (context) {\n    this.$textbox = this._textbox.create(\n      context.bounds,\n      context.style,\n      context.text,\n      context.options\n    );\n\n    this._active = {\n      element: element,\n      context: context,\n      provider: provider\n    };\n\n    if (context.options && context.options.resizable) {\n      this.resizable = true;\n    }\n\n    this._fire('activate');\n  }\n\n  return !!context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}