{"ast":null,"code":"import RuleProvider from '../rules/RuleProvider';\nimport inherits from 'inherits-browser';\n\n/**\n * @typedef {import('../../model/Types').Shape} Shape\n *\n * @typedef {import('../../core/EventBus').default} EventBus\n */\n\n/**\n * This is a base rule provider for the element.autoResize rule.\n *\n * @param {EventBus} eventBus\n */\nexport default function AutoResizeProvider(eventBus) {\n  RuleProvider.call(this, eventBus);\n  var self = this;\n  this.addRule('element.autoResize', function (context) {\n    return self.canResize(context.elements, context.target);\n  });\n}\nAutoResizeProvider.$inject = ['eventBus'];\ninherits(AutoResizeProvider, RuleProvider);\n\n/**\n * Needs to be implemented by sub classes to allow actual auto resize\n *\n * @param {Shape[]} elements\n * @param {Shape} target\n *\n * @return {boolean}\n */\nAutoResizeProvider.prototype.canResize = function (elements, target) {\n  return false;\n};","map":{"version":3,"names":["RuleProvider","inherits","AutoResizeProvider","eventBus","call","self","addRule","context","canResize","elements","target","$inject","prototype"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/auto-resize/AutoResizeProvider.js"],"sourcesContent":["import RuleProvider from '../rules/RuleProvider';\n\nimport inherits from 'inherits-browser';\n\n/**\n * @typedef {import('../../model/Types').Shape} Shape\n *\n * @typedef {import('../../core/EventBus').default} EventBus\n */\n\n/**\n * This is a base rule provider for the element.autoResize rule.\n *\n * @param {EventBus} eventBus\n */\nexport default function AutoResizeProvider(eventBus) {\n\n  RuleProvider.call(this, eventBus);\n\n  var self = this;\n\n  this.addRule('element.autoResize', function(context) {\n    return self.canResize(context.elements, context.target);\n  });\n}\n\nAutoResizeProvider.$inject = [ 'eventBus' ];\n\ninherits(AutoResizeProvider, RuleProvider);\n\n/**\n * Needs to be implemented by sub classes to allow actual auto resize\n *\n * @param {Shape[]} elements\n * @param {Shape} target\n *\n * @return {boolean}\n */\nAutoResizeProvider.prototype.canResize = function(elements, target) {\n  return false;\n};"],"mappings":"AAAA,OAAOA,YAAY,MAAM,uBAAuB;AAEhD,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,kBAAkBA,CAACC,QAAQ,EAAE;EAEnDH,YAAY,CAACI,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC;EAEjC,IAAIE,IAAI,GAAG,IAAI;EAEf,IAAI,CAACC,OAAO,CAAC,oBAAoB,EAAE,UAASC,OAAO,EAAE;IACnD,OAAOF,IAAI,CAACG,SAAS,CAACD,OAAO,CAACE,QAAQ,EAAEF,OAAO,CAACG,MAAM,CAAC;EACzD,CAAC,CAAC;AACJ;AAEAR,kBAAkB,CAACS,OAAO,GAAG,CAAE,UAAU,CAAE;AAE3CV,QAAQ,CAACC,kBAAkB,EAAEF,YAAY,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,kBAAkB,CAACU,SAAS,CAACJ,SAAS,GAAG,UAASC,QAAQ,EAAEC,MAAM,EAAE;EAClE,OAAO,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}