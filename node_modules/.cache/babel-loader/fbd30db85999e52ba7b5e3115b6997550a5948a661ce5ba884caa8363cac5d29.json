{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useLocation,useNavigate}from'react-router-dom';import BpmnModeler from'bpmn-js/lib/Modeler';import{Octokit}from'@octokit/rest';import ContextualHelpMascot from'./ContextualHelpMascot';import'./BPMNEditor.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BPMNEditor=()=>{const location=useLocation();const navigate=useNavigate();const modelerRef=useRef(null);const containerRef=useRef(null);const{profile,repository,component}=location.state||{};const handleHomeNavigation=()=>{navigate('/');};const[bpmnFiles,setBpmnFiles]=useState([]);const[selectedFile,setSelectedFile]=useState(null);const[loading,setLoading]=useState(true);const[saving,setSaving]=useState(false);const[error,setError]=useState(null);const[commitMessage,setCommitMessage]=useState('');const[showSaveDialog,setShowSaveDialog]=useState(false);// Initialize BPMN modeler\nuseEffect(()=>{// Initialize modeler when container is available and file is selected\nconst initializeModeler=()=>{if(containerRef.current&&!modelerRef.current&&selectedFile){try{modelerRef.current=new BpmnModeler({container:containerRef.current,keyboard:{bindTo:window}});console.log('BPMN modeler initialized successfully');}catch(error){console.error('Failed to initialize BPMN modeler:',error);}}};// Try to initialize immediately if we have a selected file\nif(selectedFile){initializeModeler();// If container is not ready, wait a bit and try again\nconst timer=setTimeout(initializeModeler,100);return()=>clearTimeout(timer);}return()=>{if(modelerRef.current){try{modelerRef.current.destroy();}catch(error){console.error('Error destroying BPMN modeler:',error);}modelerRef.current=null;}};},[selectedFile]);// Load BPMN files from repository\nuseEffect(()=>{const loadBpmnFiles=async()=>{if(!profile||!repository){navigate('/');return;}try{setLoading(true);setError(null);// Use GitHub API if profile has token, otherwise use mock data\nif(profile.token){try{var _repository$owner;const octokit=new Octokit({auth:profile.token});const{data}=await octokit.rest.repos.getContent({owner:((_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login)||repository.full_name.split('/')[0],repo:repository.name,path:'input/business-processes'});// Filter for .bpmn files\nconst bpmnFiles=Array.isArray(data)?data.filter(file=>file.name.endsWith('.bpmn')):data.name.endsWith('.bpmn')?[data]:[];setBpmnFiles(bpmnFiles);setLoading(false);return;}catch(apiError){console.warn('GitHub API error, falling back to mock data:',apiError);// Fall through to mock data\n}}// Mock BPMN files for demonstration\nconst mockFiles=[{name:'patient-registration.bpmn',path:'input/business-processes/patient-registration.bpmn',sha:'abc123',size:2048,download_url:'https://raw.githubusercontent.com/...'},{name:'vaccination-workflow.bpmn',path:'input/business-processes/vaccination-workflow.bpmn',sha:'def456',size:3072,download_url:'https://raw.githubusercontent.com/...'},{name:'appointment-scheduling.bpmn',path:'input/business-processes/appointment-scheduling.bpmn',sha:'ghi789',size:1536,download_url:'https://raw.githubusercontent.com/...'}];setBpmnFiles(mockFiles);setLoading(false);}catch(err){console.error('Error loading BPMN files:',err);setError('Failed to load BPMN files from repository');setLoading(false);}};loadBpmnFiles();},[profile,repository,navigate]);// Load selected BPMN file content\nconst loadBpmnFile=async file=>{try{setLoading(true);setError(null);setSelectedFile(file);// Wait for the next render cycle to ensure container is visible\nsetTimeout(async()=>{try{// Initialize modeler if not already done\nif(!modelerRef.current&&containerRef.current){modelerRef.current=new BpmnModeler({container:containerRef.current,keyboard:{bindTo:window}});console.log('BPMN modeler initialized for file loading');}// Ensure modeler is initialized\nif(!modelerRef.current){console.error('BPMN modeler not available');setError('BPMN editor not ready. Please try again.');setLoading(false);return;}// Load actual BPMN content from GitHub if available\nlet bpmnXml=null;if(profile.token&&file.download_url){try{const response=await fetch(file.download_url);if(response.ok){bpmnXml=await response.text();console.log('Loaded BPMN content from GitHub');}}catch(fetchError){console.warn('Could not fetch BPMN content from GitHub:',fetchError);}}// Use mock content if we couldn't load from GitHub\nif(!bpmnXml){bpmnXml=`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\" exporter=\"bpmn-js (https://demo.bpmn.io)\" exporterVersion=\"17.11.1\">\n  <bpmn:process id=\"Process_${file.name.replace('.bpmn','')}\" isExecutable=\"true\">\n    <bpmn:startEvent id=\"StartEvent_1\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${file.name.replace('.bpmn','').replace('-',' ').toUpperCase()}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace('.bpmn','')}\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"179\" y=\"99\" width=\"36\" height=\"36\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Activity_1\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"270\" y=\"77\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Event_1\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"432\" y=\"99\" width=\"36\" height=\"36\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"215\" y=\"117\" />\n        <di:waypoint x=\"270\" y=\"117\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"370\" y=\"117\" />\n        <di:waypoint x=\"432\" y=\"117\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;}// Load the BPMN diagram\nawait modelerRef.current.importXML(bpmnXml);setLoading(false);}catch(err){console.error('Error loading BPMN file:',err);setError('Failed to load BPMN diagram');setLoading(false);}},100);}catch(err){console.error('Error initializing BPMN file load:',err);setError('Failed to initialize BPMN editor');setLoading(false);}};// Save BPMN diagram\nconst saveBpmnDiagram=async()=>{if(!commitMessage.trim()){alert('Please enter a commit message');return;}try{setSaving(true);setError(null);// Export BPMN XML\nconst{xml}=await modelerRef.current.saveXML({format:true});// Use GitHub API if profile has token\nif(profile.token&&repository){try{var _repository$owner3;const octokit=new Octokit({auth:profile.token});// Get current file to get SHA for update\nlet currentSha=selectedFile.sha;try{var _repository$owner2;const{data:currentFile}=await octokit.rest.repos.getContent({owner:((_repository$owner2=repository.owner)===null||_repository$owner2===void 0?void 0:_repository$owner2.login)||repository.full_name.split('/')[0],repo:repository.name,path:selectedFile.path});currentSha=currentFile.sha;}catch(getError){console.warn('Could not get current file SHA, using provided SHA:',getError);}// Commit the updated BPMN file\nawait octokit.rest.repos.createOrUpdateFileContents({owner:((_repository$owner3=repository.owner)===null||_repository$owner3===void 0?void 0:_repository$owner3.login)||repository.full_name.split('/')[0],repo:repository.name,path:selectedFile.path,message:commitMessage,content:btoa(xml),// Base64 encode the XML content\nsha:currentSha,committer:{name:profile.name||profile.login,email:profile.email||`${profile.login}@users.noreply.github.com`}});console.log('BPMN file committed to GitHub successfully');setSaving(false);setShowSaveDialog(false);setCommitMessage('');alert('BPMN diagram saved to GitHub successfully!');return;}catch(apiError){console.error('GitHub API error:',apiError);setError('Failed to save to GitHub: '+apiError.message);setSaving(false);return;}}// Fallback: simulate save for demo purposes\nconsole.log('BPMN saved with message:',commitMessage);console.log('BPMN XML:',xml);// Simulate save success\nsetTimeout(()=>{setSaving(false);setShowSaveDialog(false);setCommitMessage('');alert('BPMN diagram saved successfully!');},1000);}catch(err){console.error('Error saving BPMN file:',err);setError('Failed to save BPMN diagram');setSaving(false);}};if(!profile||!repository||!component){navigate('/');return/*#__PURE__*/_jsx(\"div\",{children:\"Redirecting...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bpmn-editor\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"who-branding\",children:[/*#__PURE__*/_jsx(\"h1\",{onClick:handleHomeNavigation,className:\"clickable-title\",children:\"SGEX Workbench\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"WHO SMART Guidelines Exchange\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:profile.avatar_url||`https://github.com/${profile.login}.png`,alt:\"Profile\",className:\"context-avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"context-repo\",children:repository.name}),/*#__PURE__*/_jsx(\"span\",{className:\"context-component\",children:\"Business Processes\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"breadcrumb-link\",children:\"Select Profile\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/repositories',{state:{profile}}),className:\"breadcrumb-link\",children:\"Select Repository\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/dashboard',{state:{profile,repository}}),className:\"breadcrumb-link\",children:\"DAK Components\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:\"Business Processes\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bpmn-workspace\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-browser\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-browser-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"BPMN Files\"}),/*#__PURE__*/_jsx(\"span\",{className:\"file-path\",children:\"input/business-processes/\"})]}),loading&&!selectedFile?/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading BPMN files...\"})]}):error?/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u274C \",error]})}):/*#__PURE__*/_jsx(\"div\",{className:\"file-list\",children:bpmnFiles.map(file=>/*#__PURE__*/_jsxs(\"div\",{className:`file-item ${(selectedFile===null||selectedFile===void 0?void 0:selectedFile.sha)===file.sha?'selected':''}`,onClick:()=>loadBpmnFile(file),children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-icon\",children:\"\\uD83D\\uDCCB\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-name\",children:file.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-size\",children:[(file.size/1024).toFixed(1),\" KB\"]})]})]},file.sha))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"diagram-editor\",children:selectedFile?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-toolbar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"toolbar-left\",children:/*#__PURE__*/_jsx(\"h4\",{children:selectedFile.name})}),/*#__PURE__*/_jsx(\"div\",{className:\"toolbar-right\",children:/*#__PURE__*/_jsx(\"button\",{className:\"action-btn primary\",onClick:()=>setShowSaveDialog(true),disabled:saving,children:saving?'Saving...':'Save'})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bpmn-container\",ref:containerRef})]}):/*#__PURE__*/_jsx(\"div\",{className:\"diagram-placeholder\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"placeholder-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"placeholder-icon\",children:\"\\uD83D\\uDD04\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Select a BPMN File\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Choose a .bpmn file from the list to start editing business processes.\"})]})})})]})]}),showSaveDialog&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"save-dialog\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Save BPMN Diagram\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Describe the changes you made to this business process:\"}),/*#__PURE__*/_jsx(\"textarea\",{value:commitMessage,onChange:e=>setCommitMessage(e.target.value),placeholder:\"Enter commit message...\",rows:4,className:\"commit-message-input\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dialog-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn secondary\",onClick:()=>{setShowSaveDialog(false);setCommitMessage('');},disabled:saving,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn primary\",onClick:saveBpmnDiagram,disabled:saving||!commitMessage.trim(),children:saving?'Saving...':'Save Changes'})]})]})}),/*#__PURE__*/_jsx(ContextualHelpMascot,{pageId:\"bpmn-editor\",contextData:{profile,repository,component,selectedFile}})]});};export default BPMNEditor;","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","useNavigate","BpmnModeler","Octokit","ContextualHelpMascot","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BPMNEditor","location","navigate","modelerRef","containerRef","profile","repository","component","state","handleHomeNavigation","bpmnFiles","setBpmnFiles","selectedFile","setSelectedFile","loading","setLoading","saving","setSaving","error","setError","commitMessage","setCommitMessage","showSaveDialog","setShowSaveDialog","initializeModeler","current","container","keyboard","bindTo","window","console","log","timer","setTimeout","clearTimeout","destroy","loadBpmnFiles","token","_repository$owner","octokit","auth","data","rest","repos","getContent","owner","login","full_name","split","repo","name","path","Array","isArray","filter","file","endsWith","apiError","warn","mockFiles","sha","size","download_url","err","loadBpmnFile","bpmnXml","response","fetch","ok","text","fetchError","replace","toUpperCase","importXML","saveBpmnDiagram","trim","alert","xml","saveXML","format","_repository$owner3","currentSha","_repository$owner2","currentFile","getError","createOrUpdateFileContents","message","content","btoa","committer","email","children","className","onClick","src","avatar_url","alt","map","toFixed","disabled","ref","value","onChange","e","target","placeholder","rows","pageId","contextData"],"sources":["/home/runner/work/sgex/sgex/src/components/BPMNEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\nimport { Octokit } from '@octokit/rest';\nimport ContextualHelpMascot from './ContextualHelpMascot';\nimport './BPMNEditor.css';\n\nconst BPMNEditor = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const modelerRef = useRef(null);\n  const containerRef = useRef(null);\n  \n  const { profile, repository, component } = location.state || {};\n  \n  const handleHomeNavigation = () => {\n    navigate('/');\n  };\n\n  const [bpmnFiles, setBpmnFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [commitMessage, setCommitMessage] = useState('');\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n\n  // Initialize BPMN modeler\n  useEffect(() => {\n    // Initialize modeler when container is available and file is selected\n    const initializeModeler = () => {\n      if (containerRef.current && !modelerRef.current && selectedFile) {\n        try {\n          modelerRef.current = new BpmnModeler({\n            container: containerRef.current,\n            keyboard: {\n              bindTo: window\n            }\n          });\n          console.log('BPMN modeler initialized successfully');\n        } catch (error) {\n          console.error('Failed to initialize BPMN modeler:', error);\n        }\n      }\n    };\n\n    // Try to initialize immediately if we have a selected file\n    if (selectedFile) {\n      initializeModeler();\n      \n      // If container is not ready, wait a bit and try again\n      const timer = setTimeout(initializeModeler, 100);\n      return () => clearTimeout(timer);\n    }\n\n    return () => {\n      if (modelerRef.current) {\n        try {\n          modelerRef.current.destroy();\n        } catch (error) {\n          console.error('Error destroying BPMN modeler:', error);\n        }\n        modelerRef.current = null;\n      }\n    };\n  }, [selectedFile]);\n\n  // Load BPMN files from repository\n  useEffect(() => {\n    const loadBpmnFiles = async () => {\n      if (!profile || !repository) {\n        navigate('/');\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Use GitHub API if profile has token, otherwise use mock data\n        if (profile.token) {\n          try {\n            const octokit = new Octokit({ auth: profile.token });\n            const { data } = await octokit.rest.repos.getContent({\n              owner: repository.owner?.login || repository.full_name.split('/')[0],\n              repo: repository.name,\n              path: 'input/business-processes'\n            });\n\n            // Filter for .bpmn files\n            const bpmnFiles = Array.isArray(data) \n              ? data.filter(file => file.name.endsWith('.bpmn'))\n              : data.name.endsWith('.bpmn') ? [data] : [];\n\n            setBpmnFiles(bpmnFiles);\n            setLoading(false);\n            return;\n          } catch (apiError) {\n            console.warn('GitHub API error, falling back to mock data:', apiError);\n            // Fall through to mock data\n          }\n        }\n\n        // Mock BPMN files for demonstration\n        const mockFiles = [\n          {\n            name: 'patient-registration.bpmn',\n            path: 'input/business-processes/patient-registration.bpmn',\n            sha: 'abc123',\n            size: 2048,\n            download_url: 'https://raw.githubusercontent.com/...'\n          },\n          {\n            name: 'vaccination-workflow.bpmn',\n            path: 'input/business-processes/vaccination-workflow.bpmn',\n            sha: 'def456',\n            size: 3072,\n            download_url: 'https://raw.githubusercontent.com/...'\n          },\n          {\n            name: 'appointment-scheduling.bpmn',\n            path: 'input/business-processes/appointment-scheduling.bpmn',\n            sha: 'ghi789',\n            size: 1536,\n            download_url: 'https://raw.githubusercontent.com/...'\n          }\n        ];\n\n        setBpmnFiles(mockFiles);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error loading BPMN files:', err);\n        setError('Failed to load BPMN files from repository');\n        setLoading(false);\n      }\n    };\n\n    loadBpmnFiles();\n  }, [profile, repository, navigate]);\n\n  // Load selected BPMN file content\n  const loadBpmnFile = async (file) => {\n    try {\n      setLoading(true);\n      setError(null);\n      setSelectedFile(file);\n\n      // Wait for the next render cycle to ensure container is visible\n      setTimeout(async () => {\n        try {\n          // Initialize modeler if not already done\n          if (!modelerRef.current && containerRef.current) {\n            modelerRef.current = new BpmnModeler({\n              container: containerRef.current,\n              keyboard: {\n                bindTo: window\n              }\n            });\n            console.log('BPMN modeler initialized for file loading');\n          }\n\n          // Ensure modeler is initialized\n          if (!modelerRef.current) {\n            console.error('BPMN modeler not available');\n            setError('BPMN editor not ready. Please try again.');\n            setLoading(false);\n            return;\n          }\n\n          // Load actual BPMN content from GitHub if available\n          let bpmnXml = null;\n          if (profile.token && file.download_url) {\n            try {\n              const response = await fetch(file.download_url);\n              if (response.ok) {\n                bpmnXml = await response.text();\n                console.log('Loaded BPMN content from GitHub');\n              }\n            } catch (fetchError) {\n              console.warn('Could not fetch BPMN content from GitHub:', fetchError);\n            }\n          }\n\n          // Use mock content if we couldn't load from GitHub\n          if (!bpmnXml) {\n            bpmnXml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\" exporter=\"bpmn-js (https://demo.bpmn.io)\" exporterVersion=\"17.11.1\">\n  <bpmn:process id=\"Process_${file.name.replace('.bpmn', '')}\" isExecutable=\"true\">\n    <bpmn:startEvent id=\"StartEvent_1\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${file.name.replace('.bpmn', '').replace('-', ' ').toUpperCase()}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace('.bpmn', '')}\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"179\" y=\"99\" width=\"36\" height=\"36\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Activity_1\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"270\" y=\"77\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Event_1\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"432\" y=\"99\" width=\"36\" height=\"36\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"215\" y=\"117\" />\n        <di:waypoint x=\"270\" y=\"117\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"370\" y=\"117\" />\n        <di:waypoint x=\"432\" y=\"117\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;\n          }\n\n          // Load the BPMN diagram\n          await modelerRef.current.importXML(bpmnXml);\n          setLoading(false);\n        } catch (err) {\n          console.error('Error loading BPMN file:', err);\n          setError('Failed to load BPMN diagram');\n          setLoading(false);\n        }\n      }, 100);\n\n    } catch (err) {\n      console.error('Error initializing BPMN file load:', err);\n      setError('Failed to initialize BPMN editor');\n      setLoading(false);\n    }\n  };\n\n  // Save BPMN diagram\n  const saveBpmnDiagram = async () => {\n    if (!commitMessage.trim()) {\n      alert('Please enter a commit message');\n      return;\n    }\n\n    try {\n      setSaving(true);\n      setError(null);\n\n      // Export BPMN XML\n      const { xml } = await modelerRef.current.saveXML({ format: true });\n\n      // Use GitHub API if profile has token\n      if (profile.token && repository) {\n        try {\n          const octokit = new Octokit({ auth: profile.token });\n          \n          // Get current file to get SHA for update\n          let currentSha = selectedFile.sha;\n          try {\n            const { data: currentFile } = await octokit.rest.repos.getContent({\n              owner: repository.owner?.login || repository.full_name.split('/')[0],\n              repo: repository.name,\n              path: selectedFile.path\n            });\n            currentSha = currentFile.sha;\n          } catch (getError) {\n            console.warn('Could not get current file SHA, using provided SHA:', getError);\n          }\n\n          // Commit the updated BPMN file\n          await octokit.rest.repos.createOrUpdateFileContents({\n            owner: repository.owner?.login || repository.full_name.split('/')[0],\n            repo: repository.name,\n            path: selectedFile.path,\n            message: commitMessage,\n            content: btoa(xml), // Base64 encode the XML content\n            sha: currentSha,\n            committer: {\n              name: profile.name || profile.login,\n              email: profile.email || `${profile.login}@users.noreply.github.com`\n            }\n          });\n\n          console.log('BPMN file committed to GitHub successfully');\n          setSaving(false);\n          setShowSaveDialog(false);\n          setCommitMessage('');\n          alert('BPMN diagram saved to GitHub successfully!');\n          return;\n        } catch (apiError) {\n          console.error('GitHub API error:', apiError);\n          setError('Failed to save to GitHub: ' + apiError.message);\n          setSaving(false);\n          return;\n        }\n      }\n\n      // Fallback: simulate save for demo purposes\n      console.log('BPMN saved with message:', commitMessage);\n      console.log('BPMN XML:', xml);\n\n      // Simulate save success\n      setTimeout(() => {\n        setSaving(false);\n        setShowSaveDialog(false);\n        setCommitMessage('');\n        alert('BPMN diagram saved successfully!');\n      }, 1000);\n\n    } catch (err) {\n      console.error('Error saving BPMN file:', err);\n      setError('Failed to save BPMN diagram');\n      setSaving(false);\n    }\n  };\n\n  if (!profile || !repository || !component) {\n    navigate('/');\n    return <div>Redirecting...</div>;\n  }\n\n  return (\n    <div className=\"bpmn-editor\">\n      <div className=\"editor-header\">\n        <div className=\"who-branding\">\n          <h1 onClick={handleHomeNavigation} className=\"clickable-title\">SGEX Workbench</h1>\n          <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n        </div>\n        <div className=\"context-info\">\n          <img \n            src={profile.avatar_url || `https://github.com/${profile.login}.png`} \n            alt=\"Profile\" \n            className=\"context-avatar\" \n          />\n          <div className=\"context-details\">\n            <span className=\"context-repo\">{repository.name}</span>\n            <span className=\"context-component\">Business Processes</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"editor-content\">\n        <div className=\"breadcrumb\">\n          <button onClick={() => navigate('/')} className=\"breadcrumb-link\">\n            Select Profile\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate('/repositories', { state: { profile } })} className=\"breadcrumb-link\">\n            Select Repository\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate('/dashboard', { state: { profile, repository } })} className=\"breadcrumb-link\">\n            DAK Components\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <span className=\"breadcrumb-current\">Business Processes</span>\n        </div>\n\n        <div className=\"bpmn-workspace\">\n          <div className=\"file-browser\">\n            <div className=\"file-browser-header\">\n              <h3>BPMN Files</h3>\n              <span className=\"file-path\">input/business-processes/</span>\n            </div>\n            \n            {loading && !selectedFile ? (\n              <div className=\"loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading BPMN files...</p>\n              </div>\n            ) : error ? (\n              <div className=\"error\">\n                <p>❌ {error}</p>\n              </div>\n            ) : (\n              <div className=\"file-list\">\n                {bpmnFiles.map((file) => (\n                  <div \n                    key={file.sha}\n                    className={`file-item ${selectedFile?.sha === file.sha ? 'selected' : ''}`}\n                    onClick={() => loadBpmnFile(file)}\n                  >\n                    <div className=\"file-icon\">📋</div>\n                    <div className=\"file-details\">\n                      <div className=\"file-name\">{file.name}</div>\n                      <div className=\"file-size\">{(file.size / 1024).toFixed(1)} KB</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"diagram-editor\">\n            {selectedFile ? (\n              <>\n                <div className=\"editor-toolbar\">\n                  <div className=\"toolbar-left\">\n                    <h4>{selectedFile.name}</h4>\n                  </div>\n                  <div className=\"toolbar-right\">\n                    <button \n                      className=\"action-btn primary\"\n                      onClick={() => setShowSaveDialog(true)}\n                      disabled={saving}\n                    >\n                      {saving ? 'Saving...' : 'Save'}\n                    </button>\n                  </div>\n                </div>\n                <div className=\"bpmn-container\" ref={containerRef}></div>\n              </>\n            ) : (\n              <div className=\"diagram-placeholder\">\n                <div className=\"placeholder-content\">\n                  <div className=\"placeholder-icon\">🔄</div>\n                  <h3>Select a BPMN File</h3>\n                  <p>Choose a .bpmn file from the list to start editing business processes.</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Save Dialog */}\n      {showSaveDialog && (\n        <div className=\"modal-overlay\">\n          <div className=\"save-dialog\">\n            <h3>Save BPMN Diagram</h3>\n            <p>Describe the changes you made to this business process:</p>\n            <textarea\n              value={commitMessage}\n              onChange={(e) => setCommitMessage(e.target.value)}\n              placeholder=\"Enter commit message...\"\n              rows={4}\n              className=\"commit-message-input\"\n            />\n            <div className=\"dialog-actions\">\n              <button \n                className=\"action-btn secondary\"\n                onClick={() => {\n                  setShowSaveDialog(false);\n                  setCommitMessage('');\n                }}\n                disabled={saving}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"action-btn primary\"\n                onClick={saveBpmnDiagram}\n                disabled={saving || !commitMessage.trim()}\n              >\n                {saving ? 'Saving...' : 'Save Changes'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <ContextualHelpMascot \n        pageId=\"bpmn-editor\"\n        contextData={{ profile, repository, component, selectedFile }}\n      />\n    </div>\n  );\n};\n\nexport default BPMNEditor;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,MAAO,CAAAC,WAAW,KAAM,qBAAqB,CAC7C,OAASC,OAAO,KAAQ,eAAe,CACvC,MAAO,CAAAC,oBAAoB,KAAM,wBAAwB,CACzD,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1B,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAa,UAAU,CAAGf,MAAM,CAAC,IAAI,CAAC,CAC/B,KAAM,CAAAgB,YAAY,CAAGhB,MAAM,CAAC,IAAI,CAAC,CAEjC,KAAM,CAAEiB,OAAO,CAAEC,UAAU,CAAEC,SAAU,CAAC,CAAGN,QAAQ,CAACO,KAAK,EAAI,CAAC,CAAC,CAE/D,KAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CACjCP,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,CAED,KAAM,CAACQ,SAAS,CAAEC,YAAY,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC0B,YAAY,CAAEC,eAAe,CAAC,CAAG3B,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAAC4B,OAAO,CAAEC,UAAU,CAAC,CAAG7B,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC8B,MAAM,CAAEC,SAAS,CAAC,CAAG/B,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACgC,KAAK,CAAEC,QAAQ,CAAC,CAAGjC,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACkC,aAAa,CAAEC,gBAAgB,CAAC,CAAGnC,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACoC,cAAc,CAAEC,iBAAiB,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CAE3D;AACAC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAqC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAIpB,YAAY,CAACqB,OAAO,EAAI,CAACtB,UAAU,CAACsB,OAAO,EAAIb,YAAY,CAAE,CAC/D,GAAI,CACFT,UAAU,CAACsB,OAAO,CAAG,GAAI,CAAAlC,WAAW,CAAC,CACnCmC,SAAS,CAAEtB,YAAY,CAACqB,OAAO,CAC/BE,QAAQ,CAAE,CACRC,MAAM,CAAEC,MACV,CACF,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACtD,CAAE,MAAOb,KAAK,CAAE,CACdY,OAAO,CAACZ,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC5D,CACF,CACF,CAAC,CAED;AACA,GAAIN,YAAY,CAAE,CAChBY,iBAAiB,CAAC,CAAC,CAEnB;AACA,KAAM,CAAAQ,KAAK,CAAGC,UAAU,CAACT,iBAAiB,CAAE,GAAG,CAAC,CAChD,MAAO,IAAMU,YAAY,CAACF,KAAK,CAAC,CAClC,CAEA,MAAO,IAAM,CACX,GAAI7B,UAAU,CAACsB,OAAO,CAAE,CACtB,GAAI,CACFtB,UAAU,CAACsB,OAAO,CAACU,OAAO,CAAC,CAAC,CAC9B,CAAE,MAAOjB,KAAK,CAAE,CACdY,OAAO,CAACZ,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CACAf,UAAU,CAACsB,OAAO,CAAG,IAAI,CAC3B,CACF,CAAC,CACH,CAAC,CAAE,CAACb,YAAY,CAAC,CAAC,CAElB;AACAzB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiD,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAAC/B,OAAO,EAAI,CAACC,UAAU,CAAE,CAC3BJ,QAAQ,CAAC,GAAG,CAAC,CACb,OACF,CAEA,GAAI,CACFa,UAAU,CAAC,IAAI,CAAC,CAChBI,QAAQ,CAAC,IAAI,CAAC,CAEd;AACA,GAAId,OAAO,CAACgC,KAAK,CAAE,CACjB,GAAI,KAAAC,iBAAA,CACF,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAA/C,OAAO,CAAC,CAAEgD,IAAI,CAAEnC,OAAO,CAACgC,KAAM,CAAC,CAAC,CACpD,KAAM,CAAEI,IAAK,CAAC,CAAG,KAAM,CAAAF,OAAO,CAACG,IAAI,CAACC,KAAK,CAACC,UAAU,CAAC,CACnDC,KAAK,CAAE,EAAAP,iBAAA,CAAAhC,UAAU,CAACuC,KAAK,UAAAP,iBAAA,iBAAhBA,iBAAA,CAAkBQ,KAAK,GAAIxC,UAAU,CAACyC,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACpEC,IAAI,CAAE3C,UAAU,CAAC4C,IAAI,CACrBC,IAAI,CAAE,0BACR,CAAC,CAAC,CAEF;AACA,KAAM,CAAAzC,SAAS,CAAG0C,KAAK,CAACC,OAAO,CAACZ,IAAI,CAAC,CACjCA,IAAI,CAACa,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACL,IAAI,CAACM,QAAQ,CAAC,OAAO,CAAC,CAAC,CAChDf,IAAI,CAACS,IAAI,CAACM,QAAQ,CAAC,OAAO,CAAC,CAAG,CAACf,IAAI,CAAC,CAAG,EAAE,CAE7C9B,YAAY,CAACD,SAAS,CAAC,CACvBK,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAAE,MAAO0C,QAAQ,CAAE,CACjB3B,OAAO,CAAC4B,IAAI,CAAC,8CAA8C,CAAED,QAAQ,CAAC,CACtE;AACF,CACF,CAEA;AACA,KAAM,CAAAE,SAAS,CAAG,CAChB,CACET,IAAI,CAAE,2BAA2B,CACjCC,IAAI,CAAE,oDAAoD,CAC1DS,GAAG,CAAE,QAAQ,CACbC,IAAI,CAAE,IAAI,CACVC,YAAY,CAAE,uCAChB,CAAC,CACD,CACEZ,IAAI,CAAE,2BAA2B,CACjCC,IAAI,CAAE,oDAAoD,CAC1DS,GAAG,CAAE,QAAQ,CACbC,IAAI,CAAE,IAAI,CACVC,YAAY,CAAE,uCAChB,CAAC,CACD,CACEZ,IAAI,CAAE,6BAA6B,CACnCC,IAAI,CAAE,sDAAsD,CAC5DS,GAAG,CAAE,QAAQ,CACbC,IAAI,CAAE,IAAI,CACVC,YAAY,CAAE,uCAChB,CAAC,CACF,CAEDnD,YAAY,CAACgD,SAAS,CAAC,CACvB5C,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOgD,GAAG,CAAE,CACZjC,OAAO,CAACZ,KAAK,CAAC,2BAA2B,CAAE6C,GAAG,CAAC,CAC/C5C,QAAQ,CAAC,2CAA2C,CAAC,CACrDJ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDqB,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,CAAC/B,OAAO,CAAEC,UAAU,CAAEJ,QAAQ,CAAC,CAAC,CAEnC;AACA,KAAM,CAAA8D,YAAY,CAAG,KAAO,CAAAT,IAAI,EAAK,CACnC,GAAI,CACFxC,UAAU,CAAC,IAAI,CAAC,CAChBI,QAAQ,CAAC,IAAI,CAAC,CACdN,eAAe,CAAC0C,IAAI,CAAC,CAErB;AACAtB,UAAU,CAAC,SAAY,CACrB,GAAI,CACF;AACA,GAAI,CAAC9B,UAAU,CAACsB,OAAO,EAAIrB,YAAY,CAACqB,OAAO,CAAE,CAC/CtB,UAAU,CAACsB,OAAO,CAAG,GAAI,CAAAlC,WAAW,CAAC,CACnCmC,SAAS,CAAEtB,YAAY,CAACqB,OAAO,CAC/BE,QAAQ,CAAE,CACRC,MAAM,CAAEC,MACV,CACF,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC,CAC1D,CAEA;AACA,GAAI,CAAC5B,UAAU,CAACsB,OAAO,CAAE,CACvBK,OAAO,CAACZ,KAAK,CAAC,4BAA4B,CAAC,CAC3CC,QAAQ,CAAC,0CAA0C,CAAC,CACpDJ,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA;AACA,GAAI,CAAAkD,OAAO,CAAG,IAAI,CAClB,GAAI5D,OAAO,CAACgC,KAAK,EAAIkB,IAAI,CAACO,YAAY,CAAE,CACtC,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACZ,IAAI,CAACO,YAAY,CAAC,CAC/C,GAAII,QAAQ,CAACE,EAAE,CAAE,CACfH,OAAO,CAAG,KAAM,CAAAC,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC/BvC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAChD,CACF,CAAE,MAAOuC,UAAU,CAAE,CACnBxC,OAAO,CAAC4B,IAAI,CAAC,2CAA2C,CAAEY,UAAU,CAAC,CACvE,CACF,CAEA;AACA,GAAI,CAACL,OAAO,CAAE,CACZA,OAAO,CAAG;AACtB;AACA,8BAA8BV,IAAI,CAACL,IAAI,CAACqB,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC;AAC5D;AACA;AACA;AACA,mCAAmChB,IAAI,CAACL,IAAI,CAACqB,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8DjB,IAAI,CAACL,IAAI,CAACqB,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,CACV,CAEA;AACA,KAAM,CAAApE,UAAU,CAACsB,OAAO,CAACgD,SAAS,CAACR,OAAO,CAAC,CAC3ClD,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOgD,GAAG,CAAE,CACZjC,OAAO,CAACZ,KAAK,CAAC,0BAA0B,CAAE6C,GAAG,CAAC,CAC9C5C,QAAQ,CAAC,6BAA6B,CAAC,CACvCJ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,GAAG,CAAC,CAET,CAAE,MAAOgD,GAAG,CAAE,CACZjC,OAAO,CAACZ,KAAK,CAAC,oCAAoC,CAAE6C,GAAG,CAAC,CACxD5C,QAAQ,CAAC,kCAAkC,CAAC,CAC5CJ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAA2D,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CAACtD,aAAa,CAACuD,IAAI,CAAC,CAAC,CAAE,CACzBC,KAAK,CAAC,+BAA+B,CAAC,CACtC,OACF,CAEA,GAAI,CACF3D,SAAS,CAAC,IAAI,CAAC,CACfE,QAAQ,CAAC,IAAI,CAAC,CAEd;AACA,KAAM,CAAE0D,GAAI,CAAC,CAAG,KAAM,CAAA1E,UAAU,CAACsB,OAAO,CAACqD,OAAO,CAAC,CAAEC,MAAM,CAAE,IAAK,CAAC,CAAC,CAElE;AACA,GAAI1E,OAAO,CAACgC,KAAK,EAAI/B,UAAU,CAAE,CAC/B,GAAI,KAAA0E,kBAAA,CACF,KAAM,CAAAzC,OAAO,CAAG,GAAI,CAAA/C,OAAO,CAAC,CAAEgD,IAAI,CAAEnC,OAAO,CAACgC,KAAM,CAAC,CAAC,CAEpD;AACA,GAAI,CAAA4C,UAAU,CAAGrE,YAAY,CAACgD,GAAG,CACjC,GAAI,KAAAsB,kBAAA,CACF,KAAM,CAAEzC,IAAI,CAAE0C,WAAY,CAAC,CAAG,KAAM,CAAA5C,OAAO,CAACG,IAAI,CAACC,KAAK,CAACC,UAAU,CAAC,CAChEC,KAAK,CAAE,EAAAqC,kBAAA,CAAA5E,UAAU,CAACuC,KAAK,UAAAqC,kBAAA,iBAAhBA,kBAAA,CAAkBpC,KAAK,GAAIxC,UAAU,CAACyC,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACpEC,IAAI,CAAE3C,UAAU,CAAC4C,IAAI,CACrBC,IAAI,CAAEvC,YAAY,CAACuC,IACrB,CAAC,CAAC,CACF8B,UAAU,CAAGE,WAAW,CAACvB,GAAG,CAC9B,CAAE,MAAOwB,QAAQ,CAAE,CACjBtD,OAAO,CAAC4B,IAAI,CAAC,qDAAqD,CAAE0B,QAAQ,CAAC,CAC/E,CAEA;AACA,KAAM,CAAA7C,OAAO,CAACG,IAAI,CAACC,KAAK,CAAC0C,0BAA0B,CAAC,CAClDxC,KAAK,CAAE,EAAAmC,kBAAA,CAAA1E,UAAU,CAACuC,KAAK,UAAAmC,kBAAA,iBAAhBA,kBAAA,CAAkBlC,KAAK,GAAIxC,UAAU,CAACyC,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACpEC,IAAI,CAAE3C,UAAU,CAAC4C,IAAI,CACrBC,IAAI,CAAEvC,YAAY,CAACuC,IAAI,CACvBmC,OAAO,CAAElE,aAAa,CACtBmE,OAAO,CAAEC,IAAI,CAACX,GAAG,CAAC,CAAE;AACpBjB,GAAG,CAAEqB,UAAU,CACfQ,SAAS,CAAE,CACTvC,IAAI,CAAE7C,OAAO,CAAC6C,IAAI,EAAI7C,OAAO,CAACyC,KAAK,CACnC4C,KAAK,CAAErF,OAAO,CAACqF,KAAK,EAAI,GAAGrF,OAAO,CAACyC,KAAK,2BAC1C,CACF,CAAC,CAAC,CAEFhB,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC,CACzDd,SAAS,CAAC,KAAK,CAAC,CAChBM,iBAAiB,CAAC,KAAK,CAAC,CACxBF,gBAAgB,CAAC,EAAE,CAAC,CACpBuD,KAAK,CAAC,4CAA4C,CAAC,CACnD,OACF,CAAE,MAAOnB,QAAQ,CAAE,CACjB3B,OAAO,CAACZ,KAAK,CAAC,mBAAmB,CAAEuC,QAAQ,CAAC,CAC5CtC,QAAQ,CAAC,4BAA4B,CAAGsC,QAAQ,CAAC6B,OAAO,CAAC,CACzDrE,SAAS,CAAC,KAAK,CAAC,CAChB,OACF,CACF,CAEA;AACAa,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEX,aAAa,CAAC,CACtDU,OAAO,CAACC,GAAG,CAAC,WAAW,CAAE8C,GAAG,CAAC,CAE7B;AACA5C,UAAU,CAAC,IAAM,CACfhB,SAAS,CAAC,KAAK,CAAC,CAChBM,iBAAiB,CAAC,KAAK,CAAC,CACxBF,gBAAgB,CAAC,EAAE,CAAC,CACpBuD,KAAK,CAAC,kCAAkC,CAAC,CAC3C,CAAC,CAAE,IAAI,CAAC,CAEV,CAAE,MAAOb,GAAG,CAAE,CACZjC,OAAO,CAACZ,KAAK,CAAC,yBAAyB,CAAE6C,GAAG,CAAC,CAC7C5C,QAAQ,CAAC,6BAA6B,CAAC,CACvCF,SAAS,CAAC,KAAK,CAAC,CAClB,CACF,CAAC,CAED,GAAI,CAACZ,OAAO,EAAI,CAACC,UAAU,EAAI,CAACC,SAAS,CAAE,CACzCL,QAAQ,CAAC,GAAG,CAAC,CACb,mBAAOP,IAAA,QAAAgG,QAAA,CAAK,gBAAc,CAAK,CAAC,CAClC,CAEA,mBACE9F,KAAA,QAAK+F,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC1B9F,KAAA,QAAK+F,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5B9F,KAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3BhG,IAAA,OAAIkG,OAAO,CAAEpF,oBAAqB,CAACmF,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAAC,gBAAc,CAAI,CAAC,cAClFhG,IAAA,MAAGiG,SAAS,CAAC,UAAU,CAAAD,QAAA,CAAC,+BAA6B,CAAG,CAAC,EACtD,CAAC,cACN9F,KAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3BhG,IAAA,QACEmG,GAAG,CAAEzF,OAAO,CAAC0F,UAAU,EAAI,sBAAsB1F,OAAO,CAACyC,KAAK,MAAO,CACrEkD,GAAG,CAAC,SAAS,CACbJ,SAAS,CAAC,gBAAgB,CAC3B,CAAC,cACF/F,KAAA,QAAK+F,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BhG,IAAA,SAAMiG,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAErF,UAAU,CAAC4C,IAAI,CAAO,CAAC,cACvDvD,IAAA,SAAMiG,SAAS,CAAC,mBAAmB,CAAAD,QAAA,CAAC,oBAAkB,CAAM,CAAC,EAC1D,CAAC,EACH,CAAC,EACH,CAAC,cAEN9F,KAAA,QAAK+F,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7B9F,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzBhG,IAAA,WAAQkG,OAAO,CAAEA,CAAA,GAAM3F,QAAQ,CAAC,GAAG,CAAE,CAAC0F,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAAC,gBAElE,CAAQ,CAAC,cACThG,IAAA,SAAMiG,SAAS,CAAC,sBAAsB,CAAAD,QAAA,CAAC,QAAC,CAAM,CAAC,cAC/ChG,IAAA,WAAQkG,OAAO,CAAEA,CAAA,GAAM3F,QAAQ,CAAC,eAAe,CAAE,CAAEM,KAAK,CAAE,CAAEH,OAAQ,CAAE,CAAC,CAAE,CAACuF,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAAC,mBAEtG,CAAQ,CAAC,cACThG,IAAA,SAAMiG,SAAS,CAAC,sBAAsB,CAAAD,QAAA,CAAC,QAAC,CAAM,CAAC,cAC/ChG,IAAA,WAAQkG,OAAO,CAAEA,CAAA,GAAM3F,QAAQ,CAAC,YAAY,CAAE,CAAEM,KAAK,CAAE,CAAEH,OAAO,CAAEC,UAAW,CAAE,CAAC,CAAE,CAACsF,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAAC,gBAE/G,CAAQ,CAAC,cACThG,IAAA,SAAMiG,SAAS,CAAC,sBAAsB,CAAAD,QAAA,CAAC,QAAC,CAAM,CAAC,cAC/ChG,IAAA,SAAMiG,SAAS,CAAC,oBAAoB,CAAAD,QAAA,CAAC,oBAAkB,CAAM,CAAC,EAC3D,CAAC,cAEN9F,KAAA,QAAK+F,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7B9F,KAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3B9F,KAAA,QAAK+F,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAClChG,IAAA,OAAAgG,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBhG,IAAA,SAAMiG,SAAS,CAAC,WAAW,CAAAD,QAAA,CAAC,2BAAyB,CAAM,CAAC,EACzD,CAAC,CAEL7E,OAAO,EAAI,CAACF,YAAY,cACvBf,KAAA,QAAK+F,SAAS,CAAC,SAAS,CAAAD,QAAA,eACtBhG,IAAA,QAAKiG,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/BjG,IAAA,MAAAgG,QAAA,CAAG,uBAAqB,CAAG,CAAC,EACzB,CAAC,CACJzE,KAAK,cACPvB,IAAA,QAAKiG,SAAS,CAAC,OAAO,CAAAD,QAAA,cACpB9F,KAAA,MAAA8F,QAAA,EAAG,SAAE,CAACzE,KAAK,EAAI,CAAC,CACb,CAAC,cAENvB,IAAA,QAAKiG,SAAS,CAAC,WAAW,CAAAD,QAAA,CACvBjF,SAAS,CAACuF,GAAG,CAAE1C,IAAI,eAClB1D,KAAA,QAEE+F,SAAS,CAAE,aAAa,CAAAhF,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEgD,GAAG,IAAKL,IAAI,CAACK,GAAG,CAAG,UAAU,CAAG,EAAE,EAAG,CAC3EiC,OAAO,CAAEA,CAAA,GAAM7B,YAAY,CAACT,IAAI,CAAE,CAAAoC,QAAA,eAElChG,IAAA,QAAKiG,SAAS,CAAC,WAAW,CAAAD,QAAA,CAAC,cAAE,CAAK,CAAC,cACnC9F,KAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3BhG,IAAA,QAAKiG,SAAS,CAAC,WAAW,CAAAD,QAAA,CAAEpC,IAAI,CAACL,IAAI,CAAM,CAAC,cAC5CrD,KAAA,QAAK+F,SAAS,CAAC,WAAW,CAAAD,QAAA,EAAE,CAACpC,IAAI,CAACM,IAAI,CAAG,IAAI,EAAEqC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAG,EAAK,CAAC,EAChE,CAAC,GARD3C,IAAI,CAACK,GASP,CACN,CAAC,CACC,CACN,EACE,CAAC,cAENjE,IAAA,QAAKiG,SAAS,CAAC,gBAAgB,CAAAD,QAAA,CAC5B/E,YAAY,cACXf,KAAA,CAAAE,SAAA,EAAA4F,QAAA,eACE9F,KAAA,QAAK+F,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BhG,IAAA,QAAKiG,SAAS,CAAC,cAAc,CAAAD,QAAA,cAC3BhG,IAAA,OAAAgG,QAAA,CAAK/E,YAAY,CAACsC,IAAI,CAAK,CAAC,CACzB,CAAC,cACNvD,IAAA,QAAKiG,SAAS,CAAC,eAAe,CAAAD,QAAA,cAC5BhG,IAAA,WACEiG,SAAS,CAAC,oBAAoB,CAC9BC,OAAO,CAAEA,CAAA,GAAMtE,iBAAiB,CAAC,IAAI,CAAE,CACvC4E,QAAQ,CAAEnF,MAAO,CAAA2E,QAAA,CAEhB3E,MAAM,CAAG,WAAW,CAAG,MAAM,CACxB,CAAC,CACN,CAAC,EACH,CAAC,cACNrB,IAAA,QAAKiG,SAAS,CAAC,gBAAgB,CAACQ,GAAG,CAAEhG,YAAa,CAAM,CAAC,EACzD,CAAC,cAEHT,IAAA,QAAKiG,SAAS,CAAC,qBAAqB,CAAAD,QAAA,cAClC9F,KAAA,QAAK+F,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAClChG,IAAA,QAAKiG,SAAS,CAAC,kBAAkB,CAAAD,QAAA,CAAC,cAAE,CAAK,CAAC,cAC1ChG,IAAA,OAAAgG,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BhG,IAAA,MAAAgG,QAAA,CAAG,wEAAsE,CAAG,CAAC,EAC1E,CAAC,CACH,CACN,CACE,CAAC,EACH,CAAC,EACH,CAAC,CAGLrE,cAAc,eACb3B,IAAA,QAAKiG,SAAS,CAAC,eAAe,CAAAD,QAAA,cAC5B9F,KAAA,QAAK+F,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC1BhG,IAAA,OAAAgG,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BhG,IAAA,MAAAgG,QAAA,CAAG,yDAAuD,CAAG,CAAC,cAC9DhG,IAAA,aACE0G,KAAK,CAAEjF,aAAc,CACrBkF,QAAQ,CAAGC,CAAC,EAAKlF,gBAAgB,CAACkF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAClDI,WAAW,CAAC,yBAAyB,CACrCC,IAAI,CAAE,CAAE,CACRd,SAAS,CAAC,sBAAsB,CACjC,CAAC,cACF/F,KAAA,QAAK+F,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BhG,IAAA,WACEiG,SAAS,CAAC,sBAAsB,CAChCC,OAAO,CAAEA,CAAA,GAAM,CACbtE,iBAAiB,CAAC,KAAK,CAAC,CACxBF,gBAAgB,CAAC,EAAE,CAAC,CACtB,CAAE,CACF8E,QAAQ,CAAEnF,MAAO,CAAA2E,QAAA,CAClB,QAED,CAAQ,CAAC,cACThG,IAAA,WACEiG,SAAS,CAAC,oBAAoB,CAC9BC,OAAO,CAAEnB,eAAgB,CACzByB,QAAQ,CAAEnF,MAAM,EAAI,CAACI,aAAa,CAACuD,IAAI,CAAC,CAAE,CAAAgB,QAAA,CAEzC3E,MAAM,CAAG,WAAW,CAAG,cAAc,CAChC,CAAC,EACN,CAAC,EACH,CAAC,CACH,CACN,cAEDrB,IAAA,CAACF,oBAAoB,EACnBkH,MAAM,CAAC,aAAa,CACpBC,WAAW,CAAE,CAAEvG,OAAO,CAAEC,UAAU,CAAEC,SAAS,CAAEK,YAAa,CAAE,CAC/D,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAZ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}