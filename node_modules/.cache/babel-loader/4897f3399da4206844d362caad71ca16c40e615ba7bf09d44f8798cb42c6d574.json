{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation,useNavigate}from'react-router-dom';import githubService from'../services/githubService';import useDAKUrlParams from'../hooks/useDAKUrlParams';import ContextualHelpMascot from'./ContextualHelpMascot';import{handleNavigationClick}from'../utils/navigationUtils';import'./BusinessProcessSelection.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BusinessProcessSelection=()=>{var _repository$owner;const location=useLocation();const navigate=useNavigate();// Use the DAK URL params hook to get profile, repository, and branch\nconst{profile,repository,selectedBranch,loading:dakLoading,error:dakError}=useDAKUrlParams();// Debug logging for repository data flow\nconsole.log('🚀 BusinessProcessSelection: Hook data received:',{hasProfile:!!profile,hasRepository:!!repository,profileLogin:profile===null||profile===void 0?void 0:profile.login,repositoryName:repository===null||repository===void 0?void 0:repository.name,repositoryFullName:repository===null||repository===void 0?void 0:repository.full_name,repositoryOwner:repository===null||repository===void 0?void 0:(_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login,selectedBranch,dakLoading,dakError});// Get component from location.state if available (when navigating from dashboard)\nconst{component}=location.state||{};const[bpmnFiles,setBpmnFiles]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[hasWriteAccess,setHasWriteAccess]=useState(false);const[checkingPermissions,setCheckingPermissions]=useState(true);// Check write permissions\nuseEffect(()=>{const checkPermissions=async()=>{if(repository&&profile){try{var _repository$permissio;// Simple permission check - in real app, this would use githubService\nconst writeAccess=profile.token&&((_repository$permissio=repository.permissions)===null||_repository$permissio===void 0?void 0:_repository$permissio.push);setHasWriteAccess(writeAccess||false);}catch(error){console.warn('Could not check write permissions:',error);setHasWriteAccess(false);}}setCheckingPermissions(false);};checkPermissions();},[repository,profile]);// Load BPMN files from repository\nuseEffect(()=>{const loadBpmnFiles=async()=>{if(!repository){navigate('/');return;}try{var _repository$owner2,_repository$owner3,_repository$owner4,_repository$owner5;setLoading(true);setError(null);// Debug logging to understand repository data flow\nconsole.log('📂 BusinessProcessSelection - Repository object analysis:',{name:repository.name,full_name:repository.full_name,owner:repository.owner,ownerLogin:(_repository$owner2=repository.owner)===null||_repository$owner2===void 0?void 0:_repository$owner2.login,isDemo:repository.isDemo,html_url:repository.html_url,default_branch:repository.default_branch});console.log('👤 BusinessProcessSelection - Profile object analysis:',{login:profile===null||profile===void 0?void 0:profile.login,name:profile===null||profile===void 0?void 0:profile.name,isDemo:profile===null||profile===void 0?void 0:profile.isDemo,type:profile===null||profile===void 0?void 0:profile.type});const owner=((_repository$owner3=repository.owner)===null||_repository$owner3===void 0?void 0:_repository$owner3.login)||repository.full_name.split('/')[0];const repoName=repository.name;const ref=selectedBranch||'main';console.log(`📋 BusinessProcessSelection: Derived repository info:`,{original_owner_login:(_repository$owner4=repository.owner)===null||_repository$owner4===void 0?void 0:_repository$owner4.login,original_full_name:repository.full_name,derived_owner:owner,derived_repoName:repoName,selected_ref:ref,derivation_method:(_repository$owner5=repository.owner)!==null&&_repository$owner5!==void 0&&_repository$owner5.login?'owner.login':'full_name.split'});console.log(`🔍 BusinessProcessSelection: About to fetch BPMN files from ${owner}/${repoName} (branch: ${ref})`);console.log('BusinessProcessSelection: Final repository access details:',{derivedOwner:owner,repositoryName:repoName,ref:ref,fullRepositoryData:{name:repository.name,full_name:repository.full_name,owner:repository.owner,default_branch:repository.default_branch}});const bpmnFiles=await githubService.getBpmnFiles(owner,repoName,ref);console.log(`Found ${bpmnFiles.length} BPMN files:`,bpmnFiles.map(f=>f.path));setBpmnFiles(bpmnFiles);setLoading(false);}catch(apiError){console.error('Failed to fetch BPMN files from repository:',apiError);// Check if this is an authentication error for a private repository\nif(apiError.status===401||apiError.status===403){setError('Authentication required to access this repository. Please ensure you have a valid GitHub token with appropriate permissions.');}else if(apiError.status===404){setError('Repository or branch not found. Please check the repository name and branch.');}else{setError(`Failed to load BPMN files from repository: ${apiError.message}`);}setBpmnFiles([]);setLoading(false);}};loadBpmnFiles();},[profile,repository,navigate,selectedBranch]);const handleEdit=(event,file)=>{if(!hasWriteAccess){// Show permission help message\nalert('You need write permissions to edit BPMN files. Please check your GitHub token permissions.');return;}const navigationState={profile,repository,component,selectedFile:file,selectedBranch,mode:'edit'};handleNavigationClick(event,'/bpmn-editor',navigate,navigationState);};const handleView=(event,file)=>{const navigationState={profile,repository,component,selectedFile:file,selectedBranch,mode:'view'};handleNavigationClick(event,'/bpmn-viewer',navigate,navigationState);};const handleViewSource=(event,file)=>{const navigationState={profile,repository,component,selectedFile:file,selectedBranch};handleNavigationClick(event,'/bpmn-source',navigate,navigationState);};if(dakLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"business-process-selection loading-state\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Loading DAK Data...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Fetching repository and user data...\"})]})});}if(dakError){return/*#__PURE__*/_jsx(\"div\",{className:\"business-process-selection error-state\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Error Loading DAK Data\"}),/*#__PURE__*/_jsx(\"p\",{children:dakError}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"action-btn primary\",children:\"Return to Home\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),className:\"action-btn secondary\",children:\"Retry\"})]})]})});}if(!profile||!repository){navigate('/');return/*#__PURE__*/_jsx(\"div\",{children:\"Redirecting...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"business-process-selection\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selection-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"who-branding\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"SGEX Workbench\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"WHO SMART Guidelines Exchange\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:profile.avatar_url||`https://github.com/${profile.login}.png`,alt:\"Profile\",className:\"context-avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"context-repo\",children:repository.name}),/*#__PURE__*/_jsx(\"span\",{className:\"context-component\",children:\"Business Processes\"}),!checkingPermissions&&/*#__PURE__*/_jsx(\"span\",{className:`access-level ${hasWriteAccess?'write':'read'}`,children:hasWriteAccess?'✏️ Edit Access':'👁️ Read-Only Access'})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"selection-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"breadcrumb-link\",children:\"Select Profile\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/repositories',{state:{profile}}),className:\"breadcrumb-link\",children:\"Select Repository\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{var _repository$owner6;return navigate(`/dashboard/${((_repository$owner6=repository.owner)===null||_repository$owner6===void 0?void 0:_repository$owner6.login)||repository.full_name.split('/')[0]}/${repository.name}${selectedBranch?`/${selectedBranch}`:''}`,{state:{profile,repository,selectedBranch}});},className:\"breadcrumb-link\",children:\"DAK Components\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:\"Business Processes\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"selection-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selection-intro\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Business Process Files\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Select a BPMN business process file to view, edit, or examine the source code. Files are loaded from \",/*#__PURE__*/_jsx(\"code\",{children:\"input/business-processes/\"}),\" or \",/*#__PURE__*/_jsx(\"code\",{children:\"input/business-process/\"}),\" directories and subdirectories.\"]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading business process files...\"})]}):error?/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u274C \",error]})}):bpmnFiles.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDCCB\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"No BPMN Files Found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No .bpmn files were found in the input/business-processes/ or input/business-process/ directories.\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"files-grid\",children:bpmnFiles.map(file=>/*#__PURE__*/_jsxs(\"div\",{className:\"file-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-icon\",children:\"\\uD83D\\uDD04\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-details\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"file-name\",children:file.name}),/*#__PURE__*/_jsx(\"p\",{className:\"file-path\",children:file.path}),/*#__PURE__*/_jsxs(\"p\",{className:\"file-size\",children:[(file.size/1024).toFixed(1),\" KB\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn view-btn\",onClick:event=>handleView(event,file),title:\"View BPMN diagram (read-only)\",children:\"\\uD83D\\uDC41\\uFE0F View\"}),/*#__PURE__*/_jsx(\"button\",{className:`action-btn edit-btn ${!hasWriteAccess?'disabled':''}`,onClick:event=>handleEdit(event,file),title:hasWriteAccess?\"Edit BPMN diagram\":\"Edit access required\",disabled:!hasWriteAccess,children:\"\\u270F\\uFE0F Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn source-btn\",onClick:event=>handleViewSource(event,file),title:\"View XML source code\",children:\"\\uD83D\\uDCC4 Source\"})]}),!hasWriteAccess&&/*#__PURE__*/_jsx(\"div\",{className:\"permission-notice\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDD12 Read-only access - editing requires write permissions\"})})]},file.sha))})]})]}),/*#__PURE__*/_jsx(ContextualHelpMascot,{pageId:\"business-process-selection\",contextData:{profile,repository,component}})]});};export default BusinessProcessSelection;","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","githubService","useDAKUrlParams","ContextualHelpMascot","handleNavigationClick","jsx","_jsx","jsxs","_jsxs","BusinessProcessSelection","_repository$owner","location","navigate","profile","repository","selectedBranch","loading","dakLoading","error","dakError","console","log","hasProfile","hasRepository","profileLogin","login","repositoryName","name","repositoryFullName","full_name","repositoryOwner","owner","component","state","bpmnFiles","setBpmnFiles","setLoading","setError","hasWriteAccess","setHasWriteAccess","checkingPermissions","setCheckingPermissions","checkPermissions","_repository$permissio","writeAccess","token","permissions","push","warn","loadBpmnFiles","_repository$owner2","_repository$owner3","_repository$owner4","_repository$owner5","ownerLogin","isDemo","html_url","default_branch","type","split","repoName","ref","original_owner_login","original_full_name","derived_owner","derived_repoName","selected_ref","derivation_method","derivedOwner","fullRepositoryData","getBpmnFiles","length","map","f","path","apiError","status","message","handleEdit","event","file","alert","navigationState","selectedFile","mode","handleView","handleViewSource","className","children","onClick","window","reload","src","avatar_url","alt","_repository$owner6","size","toFixed","title","disabled","sha","pageId","contextData"],"sources":["/home/runner/work/sgex/sgex/src/components/BusinessProcessSelection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport useDAKUrlParams from '../hooks/useDAKUrlParams';\nimport ContextualHelpMascot from './ContextualHelpMascot';\nimport { handleNavigationClick } from '../utils/navigationUtils';\nimport './BusinessProcessSelection.css';\n\nconst BusinessProcessSelection = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  // Use the DAK URL params hook to get profile, repository, and branch\n  const { \n    profile, \n    repository, \n    selectedBranch, \n    loading: dakLoading, \n    error: dakError \n  } = useDAKUrlParams();\n\n  // Debug logging for repository data flow\n  console.log('🚀 BusinessProcessSelection: Hook data received:', {\n    hasProfile: !!profile,\n    hasRepository: !!repository,\n    profileLogin: profile?.login,\n    repositoryName: repository?.name,\n    repositoryFullName: repository?.full_name,\n    repositoryOwner: repository?.owner?.login,\n    selectedBranch,\n    dakLoading,\n    dakError\n  });\n  \n  // Get component from location.state if available (when navigating from dashboard)\n  const { component } = location.state || {};\n  \n  const [bpmnFiles, setBpmnFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hasWriteAccess, setHasWriteAccess] = useState(false);\n  const [checkingPermissions, setCheckingPermissions] = useState(true);\n\n  // Check write permissions\n  useEffect(() => {\n    const checkPermissions = async () => {\n      if (repository && profile) {\n        try {\n          // Simple permission check - in real app, this would use githubService\n          const writeAccess = profile.token && repository.permissions?.push;\n          setHasWriteAccess(writeAccess || false);\n        } catch (error) {\n          console.warn('Could not check write permissions:', error);\n          setHasWriteAccess(false);\n        }\n      }\n      setCheckingPermissions(false);\n    };\n\n    checkPermissions();\n  }, [repository, profile]);\n\n  // Load BPMN files from repository\n  useEffect(() => {\n    const loadBpmnFiles = async () => {\n      if (!repository) {\n        navigate('/');\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Debug logging to understand repository data flow\n        console.log('📂 BusinessProcessSelection - Repository object analysis:', {\n          name: repository.name,\n          full_name: repository.full_name,\n          owner: repository.owner,\n          ownerLogin: repository.owner?.login,\n          isDemo: repository.isDemo,\n          html_url: repository.html_url,\n          default_branch: repository.default_branch\n        });\n        console.log('👤 BusinessProcessSelection - Profile object analysis:', {\n          login: profile?.login,\n          name: profile?.name,\n          isDemo: profile?.isDemo,\n          type: profile?.type\n        });\n\n        const owner = repository.owner?.login || repository.full_name.split('/')[0];\n        const repoName = repository.name;\n        const ref = selectedBranch || 'main';\n\n        console.log(`📋 BusinessProcessSelection: Derived repository info:`, {\n          original_owner_login: repository.owner?.login,\n          original_full_name: repository.full_name,\n          derived_owner: owner,\n          derived_repoName: repoName,\n          selected_ref: ref,\n          derivation_method: repository.owner?.login ? 'owner.login' : 'full_name.split'\n        });\n\n        console.log(`🔍 BusinessProcessSelection: About to fetch BPMN files from ${owner}/${repoName} (branch: ${ref})`);\n        console.log('BusinessProcessSelection: Final repository access details:', {\n          derivedOwner: owner,\n          repositoryName: repoName,\n          ref: ref,\n          fullRepositoryData: {\n            name: repository.name,\n            full_name: repository.full_name,\n            owner: repository.owner,\n            default_branch: repository.default_branch\n          }\n        });\n        \n        const bpmnFiles = await githubService.getBpmnFiles(owner, repoName, ref);\n        \n        console.log(`Found ${bpmnFiles.length} BPMN files:`, bpmnFiles.map(f => f.path));\n        \n        setBpmnFiles(bpmnFiles);\n        setLoading(false);\n      } catch (apiError) {\n        console.error('Failed to fetch BPMN files from repository:', apiError);\n        \n        // Check if this is an authentication error for a private repository\n        if (apiError.status === 401 || apiError.status === 403) {\n          setError('Authentication required to access this repository. Please ensure you have a valid GitHub token with appropriate permissions.');\n        } else if (apiError.status === 404) {\n          setError('Repository or branch not found. Please check the repository name and branch.');\n        } else {\n          setError(`Failed to load BPMN files from repository: ${apiError.message}`);\n        }\n        \n        setBpmnFiles([]);\n        setLoading(false);\n      }\n    };\n\n    loadBpmnFiles();\n  }, [profile, repository, navigate, selectedBranch]);\n\n  const handleEdit = (event, file) => {\n    if (!hasWriteAccess) {\n      // Show permission help message\n      alert('You need write permissions to edit BPMN files. Please check your GitHub token permissions.');\n      return;\n    }\n\n    const navigationState = {\n      profile,\n      repository,\n      component,\n      selectedFile: file,\n      selectedBranch,\n      mode: 'edit'\n    };\n    \n    handleNavigationClick(event, '/bpmn-editor', navigate, navigationState);\n  };\n\n  const handleView = (event, file) => {\n    const navigationState = {\n      profile,\n      repository,\n      component,\n      selectedFile: file,\n      selectedBranch,\n      mode: 'view'\n    };\n    \n    handleNavigationClick(event, '/bpmn-viewer', navigate, navigationState);\n  };\n\n  const handleViewSource = (event, file) => {\n    const navigationState = {\n      profile,\n      repository,\n      component,\n      selectedFile: file,\n      selectedBranch\n    };\n    \n    handleNavigationClick(event, '/bpmn-source', navigate, navigationState);\n  };\n\n  if (dakLoading) {\n    return (\n      <div className=\"business-process-selection loading-state\">\n        <div className=\"loading-content\">\n          <h2>Loading DAK Data...</h2>\n          <p>Fetching repository and user data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (dakError) {\n    return (\n      <div className=\"business-process-selection error-state\">\n        <div className=\"error-content\">\n          <h2>Error Loading DAK Data</h2>\n          <p>{dakError}</p>\n          <div className=\"error-actions\">\n            <button onClick={() => navigate('/')} className=\"action-btn primary\">\n              Return to Home\n            </button>\n            <button onClick={() => window.location.reload()} className=\"action-btn secondary\">\n              Retry\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!profile || !repository) {\n    navigate('/');\n    return <div>Redirecting...</div>;\n  }\n\n  return (\n    <div className=\"business-process-selection\">\n      <div className=\"selection-header\">\n        <div className=\"who-branding\">\n          <h1>SGEX Workbench</h1>\n          <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n        </div>\n        <div className=\"context-info\">\n          <img \n            src={profile.avatar_url || `https://github.com/${profile.login}.png`} \n            alt=\"Profile\" \n            className=\"context-avatar\" \n          />\n          <div className=\"context-details\">\n            <span className=\"context-repo\">{repository.name}</span>\n            <span className=\"context-component\">Business Processes</span>\n            {!checkingPermissions && (\n              <span className={`access-level ${hasWriteAccess ? 'write' : 'read'}`}>\n                {hasWriteAccess ? '✏️ Edit Access' : '👁️ Read-Only Access'}\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"selection-content\">\n        <div className=\"breadcrumb\">\n          <button onClick={() => navigate('/')} className=\"breadcrumb-link\">\n            Select Profile\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate('/repositories', { state: { profile } })} className=\"breadcrumb-link\">\n            Select Repository\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button \n            onClick={() => navigate(`/dashboard/${repository.owner?.login || repository.full_name.split('/')[0]}/${repository.name}${selectedBranch ? `/${selectedBranch}` : ''}`, { \n              state: { profile, repository, selectedBranch } \n            })} \n            className=\"breadcrumb-link\"\n          >\n            DAK Components\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <span className=\"breadcrumb-current\">Business Processes</span>\n        </div>\n\n        <div className=\"selection-main\">\n          <div className=\"selection-intro\">\n            <h2>Business Process Files</h2>\n            <p>\n              Select a BPMN business process file to view, edit, or examine the source code.\n              Files are loaded from <code>input/business-processes/</code> or <code>input/business-process/</code> directories and subdirectories.\n            </p>\n          </div>\n\n          {loading ? (\n            <div className=\"loading\">\n              <div className=\"spinner\"></div>\n              <p>Loading business process files...</p>\n            </div>\n          ) : error ? (\n            <div className=\"error\">\n              <p>❌ {error}</p>\n            </div>\n          ) : bpmnFiles.length === 0 ? (\n            <div className=\"empty-state\">\n              <div className=\"empty-icon\">📋</div>\n              <h3>No BPMN Files Found</h3>\n              <p>No .bpmn files were found in the input/business-processes/ or input/business-process/ directories.</p>\n            </div>\n          ) : (\n            <div className=\"files-grid\">\n              {bpmnFiles.map((file) => (\n                <div key={file.sha} className=\"file-card\">\n                  <div className=\"file-header\">\n                    <div className=\"file-icon\">🔄</div>\n                    <div className=\"file-details\">\n                      <h3 className=\"file-name\">{file.name}</h3>\n                      <p className=\"file-path\">{file.path}</p>\n                      <p className=\"file-size\">{(file.size / 1024).toFixed(1)} KB</p>\n                    </div>\n                  </div>\n\n                  <div className=\"file-actions\">\n                    <button \n                      className=\"action-btn view-btn\"\n                      onClick={(event) => handleView(event, file)}\n                      title=\"View BPMN diagram (read-only)\"\n                    >\n                      👁️ View\n                    </button>\n\n                    <button \n                      className={`action-btn edit-btn ${!hasWriteAccess ? 'disabled' : ''}`}\n                      onClick={(event) => handleEdit(event, file)}\n                      title={hasWriteAccess ? \"Edit BPMN diagram\" : \"Edit access required\"}\n                      disabled={!hasWriteAccess}\n                    >\n                      ✏️ Edit\n                    </button>\n\n                    <button \n                      className=\"action-btn source-btn\"\n                      onClick={(event) => handleViewSource(event, file)}\n                      title=\"View XML source code\"\n                    >\n                      📄 Source\n                    </button>\n                  </div>\n\n                  {!hasWriteAccess && (\n                    <div className=\"permission-notice\">\n                      <p>🔒 Read-only access - editing requires write permissions</p>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <ContextualHelpMascot \n        pageId=\"business-process-selection\"\n        contextData={{ profile, repository, component }}\n      />\n    </div>\n  );\n};\n\nexport default BusinessProcessSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}