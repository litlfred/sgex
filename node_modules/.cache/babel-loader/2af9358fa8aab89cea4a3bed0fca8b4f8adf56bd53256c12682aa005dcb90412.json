{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{PageLayout}from'./framework';import HelpModal from'./HelpModal';import PATLogin from'./PATLogin';import WorkflowStatus from'./WorkflowStatus';import githubActionsService from'../services/githubActionsService';import branchListingCacheService from'../services/branchListingCacheService';import useThemeImage from'../hooks/useThemeImage';import'./BranchListing.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BranchListing=()=>{const[branches,setBranches]=useState([]);const[pullRequests,setPullRequests]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState('prs');// Start with PR preview section\nconst[prPage,setPrPage]=useState(1);const[prSearchTerm,setPrSearchTerm]=useState('');const[branchSearchTerm,setBranchSearchTerm]=useState('');// Theme-aware mascot image\nconst mascotImage=useThemeImage('sgex-mascot.png');const[prSortBy,setPrSortBy]=useState('updated');// updated, number, alphabetical\nconst[branchSortBy,setBranchSortBy]=useState('updated');// updated, alphabetical\nconst[showContributeModal,setShowContributeModal]=useState(false);const[deploymentStatuses,setDeploymentStatuses]=useState({});const[checkingStatuses,setCheckingStatuses]=useState(false);const[prFilter,setPrFilter]=useState('open');// 'open', 'closed', 'all'\nconst[isAuthenticated,setIsAuthenticated]=useState(false);const[githubToken,setGithubToken]=useState(null);const[prComments,setPrComments]=useState({});const[commentInputs,setCommentInputs]=useState({});const[submittingComments,setSubmittingComments]=useState({});const[commentErrors,setCommentErrors]=useState({});const[expandedDiscussions,setExpandedDiscussions]=useState({});const[discussionSummaries,setDiscussionSummaries]=useState({});const[loadingSummaries,setLoadingSummaries]=useState(false);const[workflowStatuses,setWorkflowStatuses]=useState({});const[loadingWorkflowStatuses,setLoadingWorkflowStatuses]=useState(false);const[isRefreshing,setIsRefreshing]=useState(false);const[cacheInfo,setCacheInfo]=useState(null);const ITEMS_PER_PAGE=10;const GITHUB_OWNER='litlfred';const GITHUB_REPO='sgex';// Function to manually refresh cache and reload data\nconst handleManualRefresh=useCallback(async()=>{setIsRefreshing(true);// Clear the cache to force fresh data\nbranchListingCacheService.forceRefresh(GITHUB_OWNER,GITHUB_REPO);// The fetchData function will be called by the useEffect when isRefreshing changes\n},[]);// GitHub authentication functions\nconst handleAuthSuccess=(token,octokitInstance)=>{setGithubToken(token);setIsAuthenticated(true);// Store token for session\nsessionStorage.setItem('github_token',token);// Set token for GitHub Actions service\ngithubActionsService.setToken(token);};const handleLogout=()=>{setGithubToken(null);setIsAuthenticated(false);sessionStorage.removeItem('github_token');// Clear token from GitHub Actions service\ngithubActionsService.setToken(null);};// Function to fetch PR comments summary\nconst fetchPRCommentsSummary=useCallback(async prNumber=>{// Allow fetching comments even without authentication for read-only access\ntry{const headers={'Accept':'application/vnd.github.v3+json'};// Add authorization header only if token is available\nif(githubToken){headers['Authorization']=`token ${githubToken}`;}const response=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,{headers});if(!response.ok){throw new Error(`Failed to fetch comments: ${response.status}`);}const comments=await response.json();if(comments.length===0){return{count:0,lastComment:null};}const lastComment=comments[comments.length-1];return{count:comments.length,lastComment:{author:lastComment.user.login,created_at:new Date(lastComment.created_at),avatar_url:lastComment.user.avatar_url}};}catch(error){console.error(`Error fetching comment summary for PR ${prNumber}:`,error);return null;}},[githubToken]);// Function to fetch all PR comments (for expanded view)\nconst fetchAllPRComments=useCallback(async prNumber=>{// Allow fetching comments even without authentication for read-only access\ntry{const headers={'Accept':'application/vnd.github.v3+json'};// Add authorization header only if token is available\nif(githubToken){headers['Authorization']=`token ${githubToken}`;}const response=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,{headers});if(!response.ok){throw new Error(`Failed to fetch comments: ${response.status}`);}const comments=await response.json();return comments.map(comment=>({id:comment.id,author:comment.user.login,body:comment.body,created_at:new Date(comment.created_at).toLocaleDateString(),avatar_url:comment.user.avatar_url}));}catch(error){console.error(`Error fetching all comments for PR ${prNumber}:`,error);return[];}},[githubToken]);// Function to load discussion summaries for visible PRs\nconst loadDiscussionSummaries=useCallback(async prs=>{if(prs.length===0)return;setLoadingSummaries(true);const summaries={};for(const pr of prs){summaries[pr.number]=await fetchPRCommentsSummary(pr.number);}setDiscussionSummaries(summaries);setLoadingSummaries(false);},[fetchPRCommentsSummary]);// Function to toggle discussion expansion\nconst toggleDiscussion=async prNumber=>{const isExpanded=expandedDiscussions[prNumber];if(!isExpanded){// Load all comments when expanding\nconst comments=await fetchAllPRComments(prNumber);setPrComments(prev=>({...prev,[prNumber]:comments}));}setExpandedDiscussions(prev=>({...prev,[prNumber]:!isExpanded}));};// Function to get discussion summary text\nconst getDiscussionSummaryText=prNumber=>{const summary=discussionSummaries[prNumber];if(loadingSummaries){return\"Loading discussion...\";}if(!summary||summary.count===0){return\"No comments yet\";}const{count,lastComment}=summary;const timeAgo=lastComment?getTimeAgo(lastComment.created_at):'';return`${count} comment${count>1?'s':''}, last by ${lastComment.author} ${timeAgo}`;};// Helper function to get relative time\nconst getTimeAgo=date=>{const now=new Date();const diffMs=now-date;const diffDays=Math.floor(diffMs/(1000*60*60*24));if(diffDays===0)return'today';if(diffDays===1)return'1 day ago';if(diffDays<7)return`${diffDays} days ago`;if(diffDays<30)return`${Math.floor(diffDays/7)} week${Math.floor(diffDays/7)>1?'s':''} ago`;return`${Math.floor(diffDays/30)} month${Math.floor(diffDays/30)>1?'s':''} ago`;};// Function to submit a comment\nconst submitComment=async(prNumber,commentText)=>{if(!githubToken||!commentText.trim())return false;setSubmittingComments(prev=>({...prev,[prNumber]:true}));setCommentErrors(prev=>({...prev,[prNumber]:null}));// Clear previous errors\ntry{const response=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,{method:'POST',headers:{'Authorization':`token ${githubToken}`,'Accept':'application/vnd.github.v3+json','Content-Type':'application/json'},body:JSON.stringify({body:commentText})});if(!response.ok){let errorMessage='Failed to submit comment';if(response.status===401){errorMessage='Authentication failed. Please check your token permissions.';}else if(response.status===403){errorMessage='Permission denied. You may not have write access to this repository.';}else if(response.status===404){errorMessage='Pull request not found or repository access denied.';}else if(response.status===422){errorMessage='Invalid comment content. Please check your message.';}else if(response.status>=500){errorMessage='GitHub server error. Please try again later.';}else{errorMessage=`Failed to submit comment (Error ${response.status})`;}throw new Error(errorMessage);}// Clear the comment input\nsetCommentInputs(prev=>({...prev,[prNumber]:''}));// Refresh both full comments (if expanded) and summary\nif(expandedDiscussions[prNumber]){const updatedComments=await fetchAllPRComments(prNumber);setPrComments(prev=>({...prev,[prNumber]:updatedComments}));}// Refresh the discussion summary\nconst updatedSummary=await fetchPRCommentsSummary(prNumber);setDiscussionSummaries(prev=>({...prev,[prNumber]:updatedSummary}));return true;}catch(error){console.error(`Error submitting comment for PR ${prNumber}:`,error);// Set user-friendly error message\nconst errorMessage=error.message||'An unexpected error occurred while submitting your comment';setCommentErrors(prev=>({...prev,[prNumber]:errorMessage}));return false;}finally{setSubmittingComments(prev=>({...prev,[prNumber]:false}));}};// Function to load workflow statuses for branches\nconst loadWorkflowStatuses=useCallback(async(branchData,prData)=>{if(!githubToken)return;setLoadingWorkflowStatuses(true);try{// Get all branch names (from both branches and PRs)\nconst branchNames=[...branchData.map(branch=>branch.name),...prData.map(pr=>pr.branchName)];const uniqueBranchNames=[...new Set(branchNames)];const statuses=await githubActionsService.getWorkflowStatusForBranches(uniqueBranchNames);setWorkflowStatuses(statuses);}catch(error){console.error('Error loading workflow statuses:',error);}finally{setLoadingWorkflowStatuses(false);}},[githubToken]);// Function to trigger workflow for a branch\nconst triggerWorkflow=useCallback(async branchName=>{if(!githubToken){alert('Please authenticate to trigger workflows');return;}try{const success=await githubActionsService.triggerWorkflow(branchName);if(success){alert(`Workflow triggered for branch: ${branchName}`);// Refresh workflow statuses after a short delay\nsetTimeout(()=>{const currentBranches=branches.length>0?branches:[];const currentPRs=pullRequests.length>0?pullRequests:[];loadWorkflowStatuses(currentBranches,currentPRs);},2000);}else{alert(`Failed to trigger workflow for branch: ${branchName}`);}}catch(error){console.error('Error triggering workflow:',error);alert(`Error triggering workflow: ${error.message}`);}},[githubToken,branches,pullRequests,loadWorkflowStatuses]);// Check for existing authentication on component mount\nuseEffect(()=>{const token=sessionStorage.getItem('github_token');if(token){setGithubToken(token);setIsAuthenticated(true);// Set token for GitHub Actions service\ngithubActionsService.setToken(token);}},[]);// Function to check deployment status\nconst checkDeploymentStatus=async url=>{try{const response=await fetch(url,{method:'HEAD'});if(response.ok){return'active';}else if(response.status===404){return'not-found';}else{return'errored';}}catch(error){return'errored';}};// Function to check deployment statuses for all items\nconst checkAllDeploymentStatuses=useCallback(async(branchData,prData)=>{setCheckingStatuses(true);const statuses={};// Check branches\nfor(const branch of branchData){const status=await checkDeploymentStatus(branch.url);statuses[`branch-${branch.name}`]=status;}// Check PRs\nfor(const pr of prData){const status=await checkDeploymentStatus(pr.url);statuses[`pr-${pr.id}`]=status;}setDeploymentStatuses(statuses);setCheckingStatuses(false);},[]);// Function to copy URL to clipboard\nconst copyToClipboard=async(url,type,name)=>{try{await navigator.clipboard.writeText(url);// You could add a toast notification here\nconsole.log(`Copied ${type} URL for ${name} to clipboard`);}catch(error){// Fallback for browsers that don't support clipboard API\nconst textArea=document.createElement('textarea');textArea.value=url;document.body.appendChild(textArea);textArea.select();document.execCommand('copy');document.body.removeChild(textArea);console.log(`Copied ${type} URL for ${name} to clipboard (fallback)`);}};// Sorting functions\nconst sortBranches=(branches,sortBy)=>{return[...branches].sort((a,b)=>{switch(sortBy){case'alphabetical':return a.name.localeCompare(b.name);case'updated':default:const dateA=new Date(a.lastModified);const dateB=new Date(b.lastModified);return dateB-dateA;// Most recent first\n}});};const sortPRs=(prs,sortBy)=>{return[...prs].sort((a,b)=>{switch(sortBy){case'number':return b.number-a.number;// Highest number first\ncase'alphabetical':return a.title.localeCompare(b.title);case'updated':default:const dateA=new Date(a.updatedAt);const dateB=new Date(b.updatedAt);return dateB-dateA;// Most recent first\n}});};// \"How to contribute\" slideshow content\nconst contributeHelpTopic={id:'how-to-contribute',title:'How to Contribute to SGEX',type:'slideshow',content:[{title:'Welcome to SGEX - A Collaborative Workbench',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"${mascotImage}\" alt=\"SGEX Mascot\" class=\"contribute-mascot\" />\n            </div>\n            <h3>What is SGEX?</h3>\n            <p>SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits.</p>\n            <p>Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.</p>\n          </div>\n        `},{title:'Step 1: Report a Bug or Make a Feature Request',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"${mascotImage}\" alt=\"SGEX Mascot examining a bug\" class=\"contribute-mascot bug-report\" />\n            </div>\n            <h3>🐛 Found something that needs fixing?</h3>\n            <p>Every great contribution starts with identifying what can be improved:</p>\n            <ul>\n              <li><strong>Bug reports:</strong> Help us identify and fix issues</li>\n              <li><strong>Feature requests:</strong> Share ideas for new functionality</li>\n              <li><strong>Documentation improvements:</strong> Make our guides clearer</li>\n              <li><strong>User experience feedback:</strong> Tell us what's confusing</li>\n            </ul>\n            <p>Click the mascot's help button on any page to quickly report issues!</p>\n          </div>\n        `},{title:'Step 2: Assignment to a Coding Agent',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"${mascotImage}\" alt=\"Robotic SGEX Mascot\" class=\"contribute-mascot coding-agent\" />\n            </div>\n            <h3>🤖 AI-Powered Development</h3>\n            <p>Once your issue is triaged, it may be assigned to one of our coding agents:</p>\n            <ul>\n              <li><strong>Automated analysis:</strong> AI agents analyze the requirements</li>\n              <li><strong>Code generation:</strong> Initial implementations are created</li>\n              <li><strong>Testing integration:</strong> Automated tests validate changes</li>\n              <li><strong>Documentation updates:</strong> Keep documentation in sync</li>\n            </ul>\n            <p>This hybrid approach combines human insight with AI efficiency.</p>\n          </div>\n        `},{title:'Step 3: Community Collaboration',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <div class=\"mascot-group\">\n                <img src=\"${mascotImage}\" alt=\"SGEX Mascot 1\" class=\"contribute-mascot community\" />\n                <img src=\"${mascotImage}\" alt=\"SGEX Mascot 2\" class=\"contribute-mascot community\" />\n                <img src=\"${mascotImage}\" alt=\"SGEX Mascot 3\" class=\"contribute-mascot community\" />\n              </div>\n              <div class=\"thought-bubble\">💫</div>\n            </div>\n            <h3>🌟 Real-time Evolution</h3>\n            <p>The community drives continuous improvement through collaborative discussion:</p>\n            <ul>\n              <li><strong>Code reviews:</strong> Community members review and suggest improvements</li>\n              <li><strong>Testing feedback:</strong> Real-world testing by healthcare professionals</li>\n              <li><strong>Knowledge sharing:</strong> Best practices emerge from collective experience</li>\n              <li><strong>Iterative refinement:</strong> The workbench evolves based on actual usage</li>\n            </ul>\n            <p>Together, we're building the future of digital health tooling!</p>\n          </div>\n        `},{title:'Get Started Today!',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"${mascotImage}\" alt=\"SGEX Mascot celebrating\" class=\"contribute-mascot celebrate\" />\n            </div>\n            <h3>🚀 Ready to Contribute?</h3>\n            <div class=\"action-buttons\">\n              <a href=\"https://github.com/litlfred/sgex/issues/new\" target=\"_blank\" class=\"contribute-btn primary\">\n                🐛 Report a Bug\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/issues/new?template=feature_request.md\" target=\"_blank\" class=\"contribute-btn secondary\">\n                ✨ Request a Feature  \n              </a>\n              <a href=\"/sgex/main/docs/\" target=\"_blank\" class=\"contribute-btn tertiary\">\n                📚 Read Documentation\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/tree/main/public/docs\" target=\"_blank\" class=\"contribute-btn tertiary-alt\">\n                📖 Docs on GitHub\n              </a>\n            </div>\n            <p class=\"contribute-footer\">\n              <strong>Every contribution matters!</strong> Whether you're reporting a bug, testing a feature, or sharing feedback, you're helping improve digital health tools for healthcare workers worldwide.\n            </p>\n          </div>\n        `}]};// Main data fetching function\nconst fetchData=useCallback(async()=>{try{setLoading(true);// Check cache first\nconst cachedData=branchListingCacheService.getCachedData(GITHUB_OWNER,GITHUB_REPO);if(cachedData&&!isRefreshing){console.log('Using cached branch listing data');setBranches(cachedData.branches);setPullRequests(cachedData.pullRequests);// Update cache info for display\nsetCacheInfo(branchListingCacheService.getCacheInfo(GITHUB_OWNER,GITHUB_REPO));// Still check deployment statuses and other real-time data\nawait checkAllDeploymentStatuses(cachedData.branches,cachedData.pullRequests);// Load workflow statuses if authenticated\nif(githubToken){await loadWorkflowStatuses(cachedData.branches,cachedData.pullRequests);}// Load discussion summaries for PRs\nconst filtered=cachedData.pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const sorted=sortPRs(filtered,prSortBy);const paginated=sorted.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);await loadDiscussionSummaries(paginated);setLoading(false);return;}// If no cache or force refresh, fetch from GitHub API\nconsole.log('Fetching fresh branch listing data from GitHub API');// Use GitHub API to fetch branches and PRs for the sgex repository\n// Fetch branches\nconst branchResponse=await fetch(`https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/branches`);if(!branchResponse.ok){throw new Error(`Failed to fetch branches: ${branchResponse.status}`);}const branchData=await branchResponse.json();// Fetch pull requests based on filter\nconst prState=prFilter==='all'?'all':prFilter;const prResponse=await fetch(`https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/pulls?state=${prState}&sort=updated&per_page=100`);if(!prResponse.ok){throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);}const prData=await prResponse.json();// Filter out gh-pages branch and format data\nconst filteredBranches=branchData.filter(branch=>branch.name!=='gh-pages').map(branch=>{var _branch$commit$commit,_branch$commit$commit2;// Convert branch name to safe directory name (replace slashes with dashes)\nconst safeName=branch.name.replace(/\\//g,'-');return{name:branch.name,safeName:safeName,commit:branch.commit,url:`./${safeName}/index.html`,lastModified:(_branch$commit$commit=branch.commit.commit)!==null&&_branch$commit$commit!==void 0&&(_branch$commit$commit2=_branch$commit$commit.committer)!==null&&_branch$commit$commit2!==void 0&&_branch$commit$commit2.date?new Date(branch.commit.commit.committer.date).toLocaleDateString():'Unknown'};});// Format PR data\nconst formattedPRs=prData.map(pr=>{const safeBranchName=pr.head.ref.replace(/\\//g,'-');return{id:pr.id,number:pr.number,title:pr.title,state:pr.state,author:pr.user.login,branchName:pr.head.ref,safeBranchName:safeBranchName,url:`./${safeBranchName}/index.html`,prUrl:pr.html_url,updatedAt:new Date(pr.updated_at).toLocaleDateString(),createdAt:new Date(pr.created_at).toLocaleDateString()};});// Cache the fetched data\nbranchListingCacheService.setCachedData(GITHUB_OWNER,GITHUB_REPO,filteredBranches,formattedPRs);// Update cache info for display\nsetCacheInfo(branchListingCacheService.getCacheInfo(GITHUB_OWNER,GITHUB_REPO));setBranches(filteredBranches);setPullRequests(formattedPRs);// Check deployment statuses\nawait checkAllDeploymentStatuses(filteredBranches,formattedPRs);// Load workflow statuses if authenticated\nif(githubToken){await loadWorkflowStatuses(filteredBranches,formattedPRs);}// Load discussion summaries for PRs - available for all users\nawait loadDiscussionSummaries(formattedPRs.slice(0,ITEMS_PER_PAGE));}catch(err){console.error('Error fetching data:',err);setError(err.message);// Only use fallback data in development or when GitHub API is blocked\nif(process.env.NODE_ENV==='development'||err.message.includes('Failed to fetch')){console.log('Using fallback mock data for demonstration...');const mockBranches=[{name:'main',safeName:'main',commit:{sha:'abc1234'},url:'./main/index.html',lastModified:new Date().toLocaleDateString()},{name:'feature/user-auth',safeName:'feature-user-auth',commit:{sha:'def5678'},url:'./feature-user-auth/index.html',lastModified:new Date(Date.now()-86400000).toLocaleDateString()},{name:'fix/api-endpoints',safeName:'fix-api-endpoints',commit:{sha:'ghi9012'},url:'./fix-api-endpoints/index.html',lastModified:new Date(Date.now()-172800000).toLocaleDateString()}];const mockPRs=[{id:1,number:123,title:'Improve multi-page selector landing page for GitHub deployment',state:'open',author:'copilot',branchName:'copilot/fix-459',safeBranchName:'copilot-fix-459',url:'./copilot-fix-459/index.html',prUrl:'https://github.com/litlfred/sgex/pull/123',updatedAt:new Date().toLocaleDateString(),createdAt:new Date(Date.now()-86400000).toLocaleDateString()},{id:2,number:122,title:'Add dark mode support',state:'closed',author:'developer',branchName:'feature/dark-mode',safeBranchName:'feature-dark-mode',url:'./feature-dark-mode/index.html',prUrl:'https://github.com/litlfred/sgex/pull/122',updatedAt:new Date(Date.now()-172800000).toLocaleDateString(),createdAt:new Date(Date.now()-345600000).toLocaleDateString()},{id:3,number:121,title:'Fix authentication flow',state:'open',author:'contributor',branchName:'fix/auth-flow',safeBranchName:'fix-auth-flow',url:'./fix-auth-flow/index.html',prUrl:'https://github.com/litlfred/sgex/pull/121',updatedAt:new Date(Date.now()-259200000).toLocaleDateString(),createdAt:new Date(Date.now()-432000000).toLocaleDateString()}];setBranches(mockBranches);setPullRequests(mockPRs);setError(null);// Clear error since we have fallback data\n}}finally{setLoading(false);setIsRefreshing(false);}},[checkAllDeploymentStatuses,prFilter,githubToken,loadWorkflowStatuses,loadDiscussionSummaries,isRefreshing,prSearchTerm,prSortBy,prPage]);useEffect(()=>{fetchData();},[fetchData]);// Load summaries for visible PRs when page changes\nuseEffect(()=>{if(pullRequests.length>0){const filtered=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const sorted=sortPRs(filtered,prSortBy);const paginated=sorted.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);loadDiscussionSummaries(paginated);}},[prPage,prSearchTerm,prSortBy,pullRequests,loadDiscussionSummaries]);// Filter and sort PRs based on search and sorting\nconst filteredPRs=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const sortedPRs=sortPRs(filteredPRs,prSortBy);const paginatedPRs=sortedPRs.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);const totalPRPages=Math.ceil(sortedPRs.length/ITEMS_PER_PAGE);// Filter and sort branches based on search and sorting\nconst filteredBranches=branches.filter(branch=>branch.name.toLowerCase().includes(branchSearchTerm.toLowerCase()));const sortedBranches=sortBranches(filteredBranches,branchSortBy);if(loading){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,showHeader:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading previews...\"})]})});}if(error){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,showHeader:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Failed to load previews: \",error]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please try refreshing the page or check back later.\"})]})]})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,showHeader:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"prominent-info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"\\uD83D\\uDC3E This landing page lists all available previews. Each branch and PR is automatically deployed to its own preview environment.\"}),cacheInfo&&cacheInfo.exists&&/*#__PURE__*/_jsxs(\"div\",{className:\"cache-status\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"cache-info\",children:[\"\\uD83D\\uDCCA Data cached \",cacheInfo.ageMinutes,\" minute\",cacheInfo.ageMinutes!==1?'s':'',\" ago\",cacheInfo.stale&&' (refreshing...)']}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleManualRefresh,disabled:isRefreshing,className:\"refresh-btn\",title:\"Refresh data from GitHub API\",children:[isRefreshing?'🔄':'🔄',\" \",isRefreshing?'Refreshing...':'Refresh']})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-section\",children:!isAuthenticated?/*#__PURE__*/_jsxs(\"div\",{className:\"login-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD10 GitHub Authentication\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Login with your GitHub Personal Access Token to view and add comments to pull requests:\"}),/*#__PURE__*/_jsx(PATLogin,{onAuthSuccess:handleAuthSuccess})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"authenticated-section\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u2705 Authenticated - You can now view and add comments to pull requests\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"logout-btn\",children:\"Logout\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"contribute-btn primary\",onClick:()=>setShowContributeModal(true),children:\"\\uD83C\\uDF1F How to Contribute\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/sgex/main/docs/\",className:\"contribute-btn secondary\",target:\"_blank\",rel:\"noopener noreferrer\",onError:e=>{// Fallback to GitHub docs if main branch docs not available\ne.target.href=\"https://github.com/litlfred/sgex/tree/main/public/docs\";},children:\"\\uD83D\\uDCDA Documentation\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex/issues/new\",className:\"contribute-btn tertiary\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDC1B Report a Bug\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-tabs\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='branches'?'active':''}`,onClick:()=>setActiveTab('branches'),children:[\"\\uD83C\\uDF3F Branch Previews (\",sortedBranches.length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='prs'?'active':''}`,onClick:()=>setActiveTab('prs'),children:[\"\\uD83D\\uDD04 Pull Request Previews (\",sortedPRs.length,\")\"]})]}),activeTab==='branches'&&/*#__PURE__*/_jsxs(\"div\",{className:\"branch-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"branch-controls\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search branches by name...\",value:branchSearchTerm,onChange:e=>setBranchSearchTerm(e.target.value),className:\"branch-search\"}),/*#__PURE__*/_jsxs(\"select\",{value:branchSortBy,onChange:e=>setBranchSortBy(e.target.value),className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"updated\",children:\"Sort by Recent Updates\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alphabetical\",children:\"Sort Alphabetically\"})]}),checkingStatuses&&/*#__PURE__*/_jsx(\"span\",{className:\"status-checking\",children:\"\\uD83D\\uDD04 Checking deployment status...\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"branch-cards\",children:sortedBranches.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-items\",children:branchSearchTerm?/*#__PURE__*/_jsxs(\"p\",{children:[\"No branches match your search \\\"\",branchSearchTerm,\"\\\".\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"No branch previews available at the moment.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Branch previews will appear here when code is pushed to branches.\"})]})}):sortedBranches.map(branch=>{const statusKey=`branch-${branch.name}`;const deploymentStatus=deploymentStatuses[statusKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"item-name\",children:branch.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-badges\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"commit-badge\",children:branch.commit.sha.substring(0,7)}),deploymentStatus&&/*#__PURE__*/_jsxs(\"span\",{className:`status-badge ${deploymentStatus}`,children:[deploymentStatus==='active'&&'🟢 Active',deploymentStatus==='not-found'&&'🟡 Building',deploymentStatus==='errored'&&'🔴 Error']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Last updated: \",branch.lastModified]}),/*#__PURE__*/_jsxs(\"div\",{className:\"branch-actions\",children:[deploymentStatus==='active'?/*#__PURE__*/_jsx(\"a\",{href:branch.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}):deploymentStatus==='not-found'?/*#__PURE__*/_jsx(\"div\",{className:\"deployment-message\",children:/*#__PURE__*/_jsx(\"span\",{className:\"building-message\",children:\"\\uD83D\\uDD04 Deployment in progress. Please check back in a few minutes.\"})}):deploymentStatus==='errored'?/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:\"\\u274C Deployment failed. Please check the GitHub Actions logs or contact support.\"}),/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/litlfred/sgex/actions`,className:\"actions-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"View Actions Log\"})]}):/*#__PURE__*/_jsx(\"a\",{href:branch.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>copyToClipboard(branch.url,'branch',branch.name),title:\"Copy URL to clipboard\",children:\"\\uD83D\\uDCCB Copy URL\"})]}),/*#__PURE__*/_jsx(WorkflowStatus,{workflowStatus:workflowStatuses[branch.name],branchName:branch.name,onTriggerWorkflow:triggerWorkflow,isAuthenticated:isAuthenticated,isLoading:loadingWorkflowStatuses})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",/*#__PURE__*/_jsx(\"a\",{href:branch.url,className:\"preview-url-link\",rel:\"noopener noreferrer\",children:branch.url})]})})]},branch.name);})})]}),activeTab==='prs'&&/*#__PURE__*/_jsxs(\"div\",{className:\"pr-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-filter-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pr-filter\",children:\"Filter PRs:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"pr-filter\",value:prFilter,onChange:e=>{setPrFilter(e.target.value);setPrPage(1);// Reset to first page when filtering\n},className:\"filter-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"open\",children:\"Open PRs Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"closed\",children:\"Closed PRs Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All PRs\"})]})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search pull requests by title or author...\",value:prSearchTerm,onChange:e=>{setPrSearchTerm(e.target.value);setPrPage(1);// Reset to first page when searching\n},className:\"pr-search\"}),/*#__PURE__*/_jsxs(\"select\",{value:prSortBy,onChange:e=>{setPrSortBy(e.target.value);setPrPage(1);// Reset to first page when sorting\n},className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"updated\",children:\"Sort by Recent Updates\"}),/*#__PURE__*/_jsx(\"option\",{value:\"number\",children:\"Sort by PR Number\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alphabetical\",children:\"Sort Alphabetically\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pr-cards\",children:paginatedPRs.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-items\",children:prSearchTerm?/*#__PURE__*/_jsxs(\"p\",{children:[\"No pull requests match your search \\\"\",prSearchTerm,\"\\\".\"]}):/*#__PURE__*/_jsx(\"p\",{children:\"No pull request previews available at the moment.\"})}):paginatedPRs.map(pr=>{var _commentInputs$pr$num;const statusKey=`pr-${pr.id}`;const deploymentStatus=deploymentStatuses[statusKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card pr-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"item-name\",children:[\"#\",pr.number,\": \",pr.title]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-badges\",children:[/*#__PURE__*/_jsxs(\"span\",{className:`state-badge ${pr.state}`,children:[pr.state==='open'?'🟢':'🔴',\" \",pr.state]}),deploymentStatus&&/*#__PURE__*/_jsxs(\"span\",{className:`status-badge ${deploymentStatus}`,children:[deploymentStatus==='active'&&'🟢 Active',deploymentStatus==='not-found'&&'🟡 Building',deploymentStatus==='errored'&&'🔴 Error']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"pr-meta\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Branch:\"}),\" \",pr.branchName,\" \\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Author:\"}),\" \",pr.author]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Created: \",pr.createdAt,\" \\u2022 Updated: \",pr.updatedAt]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-summary-bar\",onClick:()=>toggleDiscussion(pr.number),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-summary-text\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"discussion-summary-icon\",children:\"\\uD83D\\uDCAC\"}),getDiscussionSummaryText(pr.number)]}),/*#__PURE__*/_jsx(\"span\",{className:`discussion-expand-icon ${expandedDiscussions[pr.number]?'expanded':''}`,children:\"\\u25B6\"})]}),expandedDiscussions[pr.number]&&/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-expanded-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"discussion-title\",children:\"Discussion\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-actions\",children:[/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/litlfred/sgex/pull/${pr.number}/files`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"discussion-action-btn\",children:\"\\uD83D\\uDCC1 View Files\"}),/*#__PURE__*/_jsx(\"a\",{href:pr.prUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"discussion-action-btn secondary\",children:\"\\uD83D\\uDD17 Full Discussion\"})]})]}),isAuthenticated?/*#__PURE__*/_jsxs(\"div\",{className:\"comment-input-section\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:commentInputs[pr.number]||'',onChange:e=>{setCommentInputs(prev=>({...prev,[pr.number]:e.target.value}));// Clear error when user starts typing\nif(commentErrors[pr.number]){setCommentErrors(prev=>({...prev,[pr.number]:null}));}},placeholder:\"Add a comment...\",className:\"comment-input\",rows:3}),commentErrors[pr.number]&&/*#__PURE__*/_jsxs(\"div\",{className:\"comment-error-message\",children:[\"\\u26A0\\uFE0F \",commentErrors[pr.number]]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>submitComment(pr.number,commentInputs[pr.number]),disabled:!((_commentInputs$pr$num=commentInputs[pr.number])!==null&&_commentInputs$pr$num!==void 0&&_commentInputs$pr$num.trim())||submittingComments[pr.number],className:\"submit-comment-btn\",children:submittingComments[pr.number]?'Submitting...':'Add Comment'})]}):/*#__PURE__*/_jsx(\"div\",{className:\"comment-auth-message\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDD10 \",/*#__PURE__*/_jsx(\"a\",{href:\"#auth-section\",onClick:()=>{var _document$querySelect;return(_document$querySelect=document.querySelector('.auth-section'))===null||_document$querySelect===void 0?void 0:_document$querySelect.scrollIntoView();},children:\"Sign in\"}),\" to add comments to this discussion\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"discussion-scroll-area\",children:prComments[pr.number]&&prComments[pr.number].length>0?/*#__PURE__*/_jsx(\"div\",{className:\"comments-list\",children:prComments[pr.number].map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:\"comment-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:comment.avatar_url,alt:comment.author,className:\"comment-avatar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-author\",children:comment.author}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-date\",children:comment.created_at})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-body\",children:comment.body})]},comment.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-comments\",children:[\"No comments yet. \",isAuthenticated?'Be the first to comment!':'Sign in to be the first to comment!']})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-actions\",children:[deploymentStatus==='active'?/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}):deploymentStatus==='not-found'?/*#__PURE__*/_jsx(\"div\",{className:\"deployment-message\",children:/*#__PURE__*/_jsx(\"span\",{className:\"building-message\",children:\"\\uD83D\\uDD04 Deployment in progress. Please check back in a few minutes.\"})}):deploymentStatus==='errored'?/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:\"\\u274C Deployment failed. Please check the GitHub Actions logs or contact support.\"}),/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/litlfred/sgex/actions`,className:\"actions-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"View Actions Log\"})]}):/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>copyToClipboard(pr.url,'PR',`#${pr.number}`),title:\"Copy URL to clipboard\",children:\"\\uD83D\\uDCCB Copy URL\"}),/*#__PURE__*/_jsx(\"a\",{href:pr.prUrl,className:\"pr-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCB View PR\"})})]}),/*#__PURE__*/_jsx(WorkflowStatus,{workflowStatus:workflowStatuses[pr.branchName],branchName:pr.branchName,onTriggerWorkflow:triggerWorkflow,isAuthenticated:isAuthenticated,isLoading:loadingWorkflowStatuses})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-url-link\",rel:\"noopener noreferrer\",children:pr.url})]})})]},pr.id);})}),totalPRPages>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.max(1,prPage-1)),disabled:prPage===1,children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"pagination-info\",children:[\"Page \",prPage,\" of \",totalPRPages,\" (\",sortedPRs.length,\" total)\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.min(totalPRPages,prPage+1)),disabled:prPage===totalPRPages,children:\"Next \\u2192\"})]})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"branch-listing-footer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"footer-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"footer-left\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"source-link\",children:\"\\uD83D\\uDCE6 Source Code\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"footer-center\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Main Application:\"}),\" \",/*#__PURE__*/_jsx(\"a\",{href:\"./main/index.html\",children:\"View Main Branch \\u2192\"})]})})]})}),showContributeModal&&/*#__PURE__*/_jsx(HelpModal,{helpTopic:contributeHelpTopic,onClose:()=>setShowContributeModal(false)})]})});};export default BranchListing;","map":{"version":3,"names":["React","useState","useEffect","useCallback","PageLayout","HelpModal","PATLogin","WorkflowStatus","githubActionsService","branchListingCacheService","useThemeImage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BranchListing","branches","setBranches","pullRequests","setPullRequests","loading","setLoading","error","setError","activeTab","setActiveTab","prPage","setPrPage","prSearchTerm","setPrSearchTerm","branchSearchTerm","setBranchSearchTerm","mascotImage","prSortBy","setPrSortBy","branchSortBy","setBranchSortBy","showContributeModal","setShowContributeModal","deploymentStatuses","setDeploymentStatuses","checkingStatuses","setCheckingStatuses","prFilter","setPrFilter","isAuthenticated","setIsAuthenticated","githubToken","setGithubToken","prComments","setPrComments","commentInputs","setCommentInputs","submittingComments","setSubmittingComments","commentErrors","setCommentErrors","expandedDiscussions","setExpandedDiscussions","discussionSummaries","setDiscussionSummaries","loadingSummaries","setLoadingSummaries","workflowStatuses","setWorkflowStatuses","loadingWorkflowStatuses","setLoadingWorkflowStatuses","isRefreshing","setIsRefreshing","cacheInfo","setCacheInfo","ITEMS_PER_PAGE","GITHUB_OWNER","GITHUB_REPO","handleManualRefresh","forceRefresh","handleAuthSuccess","token","octokitInstance","sessionStorage","setItem","setToken","handleLogout","removeItem","fetchPRCommentsSummary","prNumber","headers","response","fetch","ok","Error","status","comments","json","length","count","lastComment","author","user","login","created_at","Date","avatar_url","console","fetchAllPRComments","map","comment","id","body","toLocaleDateString","loadDiscussionSummaries","prs","summaries","pr","number","toggleDiscussion","isExpanded","prev","getDiscussionSummaryText","summary","timeAgo","getTimeAgo","date","now","diffMs","diffDays","Math","floor","submitComment","commentText","trim","method","JSON","stringify","errorMessage","updatedComments","updatedSummary","message","loadWorkflowStatuses","branchData","prData","branchNames","branch","name","branchName","uniqueBranchNames","Set","statuses","getWorkflowStatusForBranches","triggerWorkflow","alert","success","setTimeout","currentBranches","currentPRs","getItem","checkDeploymentStatus","url","checkAllDeploymentStatuses","copyToClipboard","type","navigator","clipboard","writeText","log","textArea","document","createElement","value","appendChild","select","execCommand","removeChild","sortBranches","sortBy","sort","a","b","localeCompare","dateA","lastModified","dateB","sortPRs","title","updatedAt","contributeHelpTopic","content","fetchData","cachedData","getCachedData","getCacheInfo","filtered","filter","toLowerCase","includes","sorted","paginated","slice","branchResponse","prState","prResponse","filteredBranches","_branch$commit$commit","_branch$commit$commit2","safeName","replace","commit","committer","formattedPRs","safeBranchName","head","ref","state","prUrl","html_url","updated_at","createdAt","setCachedData","err","process","env","NODE_ENV","mockBranches","sha","mockPRs","filteredPRs","sortedPRs","paginatedPRs","totalPRPages","ceil","sortedBranches","pageName","showMascot","showHeader","children","className","src","alt","exists","ageMinutes","stale","onClick","disabled","onAuthSuccess","href","target","rel","onError","e","placeholder","onChange","statusKey","deploymentStatus","substring","workflowStatus","onTriggerWorkflow","isLoading","htmlFor","_commentInputs$pr$num","rows","_document$querySelect","querySelector","scrollIntoView","max","min","helpTopic","onClose"],"sources":["/home/runner/work/sgex/sgex/src/components/BranchListing.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { PageLayout } from './framework';\nimport HelpModal from './HelpModal';\nimport PATLogin from './PATLogin';\nimport WorkflowStatus from './WorkflowStatus';\nimport githubActionsService from '../services/githubActionsService';\nimport branchListingCacheService from '../services/branchListingCacheService';\nimport useThemeImage from '../hooks/useThemeImage';\nimport './BranchListing.css';\n\nconst BranchListing = () => {\n  const [branches, setBranches] = useState([]);\n  const [pullRequests, setPullRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('prs'); // Start with PR preview section\n  const [prPage, setPrPage] = useState(1);\n  const [prSearchTerm, setPrSearchTerm] = useState('');\n  const [branchSearchTerm, setBranchSearchTerm] = useState('');\n\n  // Theme-aware mascot image\n  const mascotImage = useThemeImage('sgex-mascot.png');\n  const [prSortBy, setPrSortBy] = useState('updated'); // updated, number, alphabetical\n  const [branchSortBy, setBranchSortBy] = useState('updated'); // updated, alphabetical\n  const [showContributeModal, setShowContributeModal] = useState(false);\n  const [deploymentStatuses, setDeploymentStatuses] = useState({});\n  const [checkingStatuses, setCheckingStatuses] = useState(false);\n  const [prFilter, setPrFilter] = useState('open'); // 'open', 'closed', 'all'\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [githubToken, setGithubToken] = useState(null);\n  const [prComments, setPrComments] = useState({});\n  const [commentInputs, setCommentInputs] = useState({});\n  const [submittingComments, setSubmittingComments] = useState({});\n  const [commentErrors, setCommentErrors] = useState({});\n  const [expandedDiscussions, setExpandedDiscussions] = useState({});\n  const [discussionSummaries, setDiscussionSummaries] = useState({});\n  const [loadingSummaries, setLoadingSummaries] = useState(false);\n  const [workflowStatuses, setWorkflowStatuses] = useState({});\n  const [loadingWorkflowStatuses, setLoadingWorkflowStatuses] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [cacheInfo, setCacheInfo] = useState(null);\n\n  const ITEMS_PER_PAGE = 10;\n  const GITHUB_OWNER = 'litlfred';\n  const GITHUB_REPO = 'sgex';\n\n  // Function to manually refresh cache and reload data\n  const handleManualRefresh = useCallback(async () => {\n    setIsRefreshing(true);\n    \n    // Clear the cache to force fresh data\n    branchListingCacheService.forceRefresh(GITHUB_OWNER, GITHUB_REPO);\n    \n    // The fetchData function will be called by the useEffect when isRefreshing changes\n  }, []);\n\n  // GitHub authentication functions\n  const handleAuthSuccess = (token, octokitInstance) => {\n    setGithubToken(token);\n    setIsAuthenticated(true);\n    // Store token for session\n    sessionStorage.setItem('github_token', token);\n    // Set token for GitHub Actions service\n    githubActionsService.setToken(token);\n  };\n\n  const handleLogout = () => {\n    setGithubToken(null);\n    setIsAuthenticated(false);\n    sessionStorage.removeItem('github_token');\n    // Clear token from GitHub Actions service\n    githubActionsService.setToken(null);\n  };\n\n  // Function to fetch PR comments summary\n  const fetchPRCommentsSummary = useCallback(async (prNumber) => {\n    // Allow fetching comments even without authentication for read-only access\n    \n    try {\n      const headers = {\n        'Accept': 'application/vnd.github.v3+json'\n      };\n      \n      // Add authorization header only if token is available\n      if (githubToken) {\n        headers['Authorization'] = `token ${githubToken}`;\n      }\n      \n      const response = await fetch(\n        `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n        { headers }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch comments: ${response.status}`);\n      }\n      \n      const comments = await response.json();\n      if (comments.length === 0) {\n        return { count: 0, lastComment: null };\n      }\n      \n      const lastComment = comments[comments.length - 1];\n      return {\n        count: comments.length,\n        lastComment: {\n          author: lastComment.user.login,\n          created_at: new Date(lastComment.created_at),\n          avatar_url: lastComment.user.avatar_url\n        }\n      };\n    } catch (error) {\n      console.error(`Error fetching comment summary for PR ${prNumber}:`, error);\n      return null;\n    }\n  }, [githubToken]);\n\n  // Function to fetch all PR comments (for expanded view)\n  const fetchAllPRComments = useCallback(async (prNumber) => {\n    // Allow fetching comments even without authentication for read-only access\n    \n    try {\n      const headers = {\n        'Accept': 'application/vnd.github.v3+json'\n      };\n      \n      // Add authorization header only if token is available\n      if (githubToken) {\n        headers['Authorization'] = `token ${githubToken}`;\n      }\n      \n      const response = await fetch(\n        `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n        { headers }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch comments: ${response.status}`);\n      }\n      \n      const comments = await response.json();\n      return comments.map(comment => ({\n        id: comment.id,\n        author: comment.user.login,\n        body: comment.body,\n        created_at: new Date(comment.created_at).toLocaleDateString(),\n        avatar_url: comment.user.avatar_url\n      }));\n    } catch (error) {\n      console.error(`Error fetching all comments for PR ${prNumber}:`, error);\n      return [];\n    }\n  }, [githubToken]);\n\n  // Function to load discussion summaries for visible PRs\n  const loadDiscussionSummaries = useCallback(async (prs) => {\n    if (prs.length === 0) return;\n    \n    setLoadingSummaries(true);\n    const summaries = {};\n    \n    for (const pr of prs) {\n      summaries[pr.number] = await fetchPRCommentsSummary(pr.number);\n    }\n    \n    setDiscussionSummaries(summaries);\n    setLoadingSummaries(false);\n  }, [fetchPRCommentsSummary]);\n\n  // Function to toggle discussion expansion\n  const toggleDiscussion = async (prNumber) => {\n    const isExpanded = expandedDiscussions[prNumber];\n    \n    if (!isExpanded) {\n      // Load all comments when expanding\n      const comments = await fetchAllPRComments(prNumber);\n      setPrComments(prev => ({ ...prev, [prNumber]: comments }));\n    }\n    \n    setExpandedDiscussions(prev => ({\n      ...prev,\n      [prNumber]: !isExpanded\n    }));\n  };\n\n  // Function to get discussion summary text\n  const getDiscussionSummaryText = (prNumber) => {\n    const summary = discussionSummaries[prNumber];\n    \n    if (loadingSummaries) {\n      return \"Loading discussion...\";\n    }\n    \n    if (!summary || summary.count === 0) {\n      return \"No comments yet\";\n    }\n    \n    const { count, lastComment } = summary;\n    const timeAgo = lastComment ? getTimeAgo(lastComment.created_at) : '';\n    \n    return `${count} comment${count > 1 ? 's' : ''}, last by ${lastComment.author} ${timeAgo}`;\n  };\n\n  // Helper function to get relative time\n  const getTimeAgo = (date) => {\n    const now = new Date();\n    const diffMs = now - date;\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 0) return 'today';\n    if (diffDays === 1) return '1 day ago';\n    if (diffDays < 7) return `${diffDays} days ago`;\n    if (diffDays < 30) return `${Math.floor(diffDays / 7)} week${Math.floor(diffDays / 7) > 1 ? 's' : ''} ago`;\n    return `${Math.floor(diffDays / 30)} month${Math.floor(diffDays / 30) > 1 ? 's' : ''} ago`;\n  };\n\n  // Function to submit a comment\n  const submitComment = async (prNumber, commentText) => {\n    if (!githubToken || !commentText.trim()) return false;\n    \n    setSubmittingComments(prev => ({ ...prev, [prNumber]: true }));\n    setCommentErrors(prev => ({ ...prev, [prNumber]: null })); // Clear previous errors\n    \n    try {\n      const response = await fetch(\n        `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n        {\n          method: 'POST',\n          headers: {\n            'Authorization': `token ${githubToken}`,\n            'Accept': 'application/vnd.github.v3+json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            body: commentText\n          })\n        }\n      );\n      \n      if (!response.ok) {\n        let errorMessage = 'Failed to submit comment';\n        \n        if (response.status === 401) {\n          errorMessage = 'Authentication failed. Please check your token permissions.';\n        } else if (response.status === 403) {\n          errorMessage = 'Permission denied. You may not have write access to this repository.';\n        } else if (response.status === 404) {\n          errorMessage = 'Pull request not found or repository access denied.';\n        } else if (response.status === 422) {\n          errorMessage = 'Invalid comment content. Please check your message.';\n        } else if (response.status >= 500) {\n          errorMessage = 'GitHub server error. Please try again later.';\n        } else {\n          errorMessage = `Failed to submit comment (Error ${response.status})`;\n        }\n        \n        throw new Error(errorMessage);\n      }\n      \n      // Clear the comment input\n      setCommentInputs(prev => ({ ...prev, [prNumber]: '' }));\n      \n      // Refresh both full comments (if expanded) and summary\n      if (expandedDiscussions[prNumber]) {\n        const updatedComments = await fetchAllPRComments(prNumber);\n        setPrComments(prev => ({ ...prev, [prNumber]: updatedComments }));\n      }\n      \n      // Refresh the discussion summary\n      const updatedSummary = await fetchPRCommentsSummary(prNumber);\n      setDiscussionSummaries(prev => ({ ...prev, [prNumber]: updatedSummary }));\n      \n      return true;\n    } catch (error) {\n      console.error(`Error submitting comment for PR ${prNumber}:`, error);\n      \n      // Set user-friendly error message\n      const errorMessage = error.message || 'An unexpected error occurred while submitting your comment';\n      setCommentErrors(prev => ({ ...prev, [prNumber]: errorMessage }));\n      \n      return false;\n    } finally {\n      setSubmittingComments(prev => ({ ...prev, [prNumber]: false }));\n    }\n  };\n\n  // Function to load workflow statuses for branches\n  const loadWorkflowStatuses = useCallback(async (branchData, prData) => {\n    if (!githubToken) return;\n    \n    setLoadingWorkflowStatuses(true);\n    \n    try {\n      // Get all branch names (from both branches and PRs)\n      const branchNames = [\n        ...branchData.map(branch => branch.name),\n        ...prData.map(pr => pr.branchName)\n      ];\n      \n      const uniqueBranchNames = [...new Set(branchNames)];\n      const statuses = await githubActionsService.getWorkflowStatusForBranches(uniqueBranchNames);\n      \n      setWorkflowStatuses(statuses);\n    } catch (error) {\n      console.error('Error loading workflow statuses:', error);\n    } finally {\n      setLoadingWorkflowStatuses(false);\n    }\n  }, [githubToken]);\n\n  // Function to trigger workflow for a branch\n  const triggerWorkflow = useCallback(async (branchName) => {\n    if (!githubToken) {\n      alert('Please authenticate to trigger workflows');\n      return;\n    }\n    \n    try {\n      const success = await githubActionsService.triggerWorkflow(branchName);\n      if (success) {\n        alert(`Workflow triggered for branch: ${branchName}`);\n        // Refresh workflow statuses after a short delay\n        setTimeout(() => {\n          const currentBranches = branches.length > 0 ? branches : [];\n          const currentPRs = pullRequests.length > 0 ? pullRequests : [];\n          loadWorkflowStatuses(currentBranches, currentPRs);\n        }, 2000);\n      } else {\n        alert(`Failed to trigger workflow for branch: ${branchName}`);\n      }\n    } catch (error) {\n      console.error('Error triggering workflow:', error);\n      alert(`Error triggering workflow: ${error.message}`);\n    }\n  }, [githubToken, branches, pullRequests, loadWorkflowStatuses]);\n\n\n\n  // Check for existing authentication on component mount\n  useEffect(() => {\n    const token = sessionStorage.getItem('github_token');\n    if (token) {\n      setGithubToken(token);\n      setIsAuthenticated(true);\n      // Set token for GitHub Actions service\n      githubActionsService.setToken(token);\n    }\n  }, []);\n\n  // Function to check deployment status\n  const checkDeploymentStatus = async (url) => {\n    try {\n      const response = await fetch(url, { method: 'HEAD' });\n      if (response.ok) {\n        return 'active';\n      } else if (response.status === 404) {\n        return 'not-found';\n      } else {\n        return 'errored';\n      }\n    } catch (error) {\n      return 'errored';\n    }\n  };\n\n  // Function to check deployment statuses for all items\n  const checkAllDeploymentStatuses = useCallback(async (branchData, prData) => {\n    setCheckingStatuses(true);\n    const statuses = {};\n    \n    // Check branches\n    for (const branch of branchData) {\n      const status = await checkDeploymentStatus(branch.url);\n      statuses[`branch-${branch.name}`] = status;\n    }\n    \n    // Check PRs\n    for (const pr of prData) {\n      const status = await checkDeploymentStatus(pr.url);\n      statuses[`pr-${pr.id}`] = status;\n    }\n    \n    setDeploymentStatuses(statuses);\n    setCheckingStatuses(false);\n  }, []);\n\n  // Function to copy URL to clipboard\n  const copyToClipboard = async (url, type, name) => {\n    try {\n      await navigator.clipboard.writeText(url);\n      // You could add a toast notification here\n      console.log(`Copied ${type} URL for ${name} to clipboard`);\n    } catch (error) {\n      // Fallback for browsers that don't support clipboard API\n      const textArea = document.createElement('textarea');\n      textArea.value = url;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      console.log(`Copied ${type} URL for ${name} to clipboard (fallback)`);\n    }\n  };\n\n  // Sorting functions\n  const sortBranches = (branches, sortBy) => {\n    return [...branches].sort((a, b) => {\n      switch (sortBy) {\n        case 'alphabetical':\n          return a.name.localeCompare(b.name);\n        case 'updated':\n        default:\n          const dateA = new Date(a.lastModified);\n          const dateB = new Date(b.lastModified);\n          return dateB - dateA; // Most recent first\n      }\n    });\n  };\n\n  const sortPRs = (prs, sortBy) => {\n    return [...prs].sort((a, b) => {\n      switch (sortBy) {\n        case 'number':\n          return b.number - a.number; // Highest number first\n        case 'alphabetical':\n          return a.title.localeCompare(b.title);\n        case 'updated':\n        default:\n          const dateA = new Date(a.updatedAt);\n          const dateB = new Date(b.updatedAt);\n          return dateB - dateA; // Most recent first\n      }\n    });\n  };\n\n  // \"How to contribute\" slideshow content\n  const contributeHelpTopic = {\n    id: 'how-to-contribute',\n    title: 'How to Contribute to SGEX',\n    type: 'slideshow',\n    content: [\n      {\n        title: 'Welcome to SGEX - A Collaborative Workbench',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"${mascotImage}\" alt=\"SGEX Mascot\" class=\"contribute-mascot\" />\n            </div>\n            <h3>What is SGEX?</h3>\n            <p>SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits.</p>\n            <p>Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 1: Report a Bug or Make a Feature Request',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"${mascotImage}\" alt=\"SGEX Mascot examining a bug\" class=\"contribute-mascot bug-report\" />\n            </div>\n            <h3>🐛 Found something that needs fixing?</h3>\n            <p>Every great contribution starts with identifying what can be improved:</p>\n            <ul>\n              <li><strong>Bug reports:</strong> Help us identify and fix issues</li>\n              <li><strong>Feature requests:</strong> Share ideas for new functionality</li>\n              <li><strong>Documentation improvements:</strong> Make our guides clearer</li>\n              <li><strong>User experience feedback:</strong> Tell us what's confusing</li>\n            </ul>\n            <p>Click the mascot's help button on any page to quickly report issues!</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 2: Assignment to a Coding Agent',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"${mascotImage}\" alt=\"Robotic SGEX Mascot\" class=\"contribute-mascot coding-agent\" />\n            </div>\n            <h3>🤖 AI-Powered Development</h3>\n            <p>Once your issue is triaged, it may be assigned to one of our coding agents:</p>\n            <ul>\n              <li><strong>Automated analysis:</strong> AI agents analyze the requirements</li>\n              <li><strong>Code generation:</strong> Initial implementations are created</li>\n              <li><strong>Testing integration:</strong> Automated tests validate changes</li>\n              <li><strong>Documentation updates:</strong> Keep documentation in sync</li>\n            </ul>\n            <p>This hybrid approach combines human insight with AI efficiency.</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 3: Community Collaboration',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <div class=\"mascot-group\">\n                <img src=\"${mascotImage}\" alt=\"SGEX Mascot 1\" class=\"contribute-mascot community\" />\n                <img src=\"${mascotImage}\" alt=\"SGEX Mascot 2\" class=\"contribute-mascot community\" />\n                <img src=\"${mascotImage}\" alt=\"SGEX Mascot 3\" class=\"contribute-mascot community\" />\n              </div>\n              <div class=\"thought-bubble\">💫</div>\n            </div>\n            <h3>🌟 Real-time Evolution</h3>\n            <p>The community drives continuous improvement through collaborative discussion:</p>\n            <ul>\n              <li><strong>Code reviews:</strong> Community members review and suggest improvements</li>\n              <li><strong>Testing feedback:</strong> Real-world testing by healthcare professionals</li>\n              <li><strong>Knowledge sharing:</strong> Best practices emerge from collective experience</li>\n              <li><strong>Iterative refinement:</strong> The workbench evolves based on actual usage</li>\n            </ul>\n            <p>Together, we're building the future of digital health tooling!</p>\n          </div>\n        `\n      },\n      {\n        title: 'Get Started Today!',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"${mascotImage}\" alt=\"SGEX Mascot celebrating\" class=\"contribute-mascot celebrate\" />\n            </div>\n            <h3>🚀 Ready to Contribute?</h3>\n            <div class=\"action-buttons\">\n              <a href=\"https://github.com/litlfred/sgex/issues/new\" target=\"_blank\" class=\"contribute-btn primary\">\n                🐛 Report a Bug\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/issues/new?template=feature_request.md\" target=\"_blank\" class=\"contribute-btn secondary\">\n                ✨ Request a Feature  \n              </a>\n              <a href=\"/sgex/main/docs/\" target=\"_blank\" class=\"contribute-btn tertiary\">\n                📚 Read Documentation\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/tree/main/public/docs\" target=\"_blank\" class=\"contribute-btn tertiary-alt\">\n                📖 Docs on GitHub\n              </a>\n            </div>\n            <p class=\"contribute-footer\">\n              <strong>Every contribution matters!</strong> Whether you're reporting a bug, testing a feature, or sharing feedback, you're helping improve digital health tools for healthcare workers worldwide.\n            </p>\n          </div>\n        `\n      }\n    ]\n  };\n\n  // Main data fetching function\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      \n      // Check cache first\n      const cachedData = branchListingCacheService.getCachedData(GITHUB_OWNER, GITHUB_REPO);\n      if (cachedData && !isRefreshing) {\n        console.log('Using cached branch listing data');\n        setBranches(cachedData.branches);\n        setPullRequests(cachedData.pullRequests);\n        \n        // Update cache info for display\n        setCacheInfo(branchListingCacheService.getCacheInfo(GITHUB_OWNER, GITHUB_REPO));\n        \n        // Still check deployment statuses and other real-time data\n        await checkAllDeploymentStatuses(cachedData.branches, cachedData.pullRequests);\n        \n        // Load workflow statuses if authenticated\n        if (githubToken) {\n          await loadWorkflowStatuses(cachedData.branches, cachedData.pullRequests);\n        }\n        \n        // Load discussion summaries for PRs\n        const filtered = cachedData.pullRequests.filter(pr => \n          pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n          pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n        );\n        const sorted = sortPRs(filtered, prSortBy);\n        const paginated = sorted.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n        await loadDiscussionSummaries(paginated);\n        \n        setLoading(false);\n        return;\n      }\n      \n      // If no cache or force refresh, fetch from GitHub API\n      console.log('Fetching fresh branch listing data from GitHub API');\n      \n      // Use GitHub API to fetch branches and PRs for the sgex repository\n      // Fetch branches\n      const branchResponse = await fetch(`https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/branches`);\n      if (!branchResponse.ok) {\n        throw new Error(`Failed to fetch branches: ${branchResponse.status}`);\n      }\n      const branchData = await branchResponse.json();\n      \n      // Fetch pull requests based on filter\n      const prState = prFilter === 'all' ? 'all' : prFilter;\n      const prResponse = await fetch(`https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/pulls?state=${prState}&sort=updated&per_page=100`);\n      if (!prResponse.ok) {\n        throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);\n      }\n      const prData = await prResponse.json();\n      \n      // Filter out gh-pages branch and format data\n      const filteredBranches = branchData\n        .filter(branch => branch.name !== 'gh-pages')\n        .map(branch => {\n          // Convert branch name to safe directory name (replace slashes with dashes)\n          const safeName = branch.name.replace(/\\//g, '-');\n          return {\n            name: branch.name,\n            safeName: safeName,\n            commit: branch.commit,\n            url: `./${safeName}/index.html`,\n            lastModified: branch.commit.commit?.committer?.date \n              ? new Date(branch.commit.commit.committer.date).toLocaleDateString()\n              : 'Unknown'\n          };\n        });\n      \n      // Format PR data\n      const formattedPRs = prData.map(pr => {\n        const safeBranchName = pr.head.ref.replace(/\\//g, '-');\n        return {\n          id: pr.id,\n          number: pr.number,\n          title: pr.title,\n          state: pr.state,\n          author: pr.user.login,\n          branchName: pr.head.ref,\n          safeBranchName: safeBranchName,\n          url: `./${safeBranchName}/index.html`,\n          prUrl: pr.html_url,\n          updatedAt: new Date(pr.updated_at).toLocaleDateString(),\n          createdAt: new Date(pr.created_at).toLocaleDateString()\n        };\n      });\n      \n      // Cache the fetched data\n      branchListingCacheService.setCachedData(GITHUB_OWNER, GITHUB_REPO, filteredBranches, formattedPRs);\n      \n      // Update cache info for display\n      setCacheInfo(branchListingCacheService.getCacheInfo(GITHUB_OWNER, GITHUB_REPO));\n      \n      setBranches(filteredBranches);\n      setPullRequests(formattedPRs);\n      \n      // Check deployment statuses\n      await checkAllDeploymentStatuses(filteredBranches, formattedPRs);\n      \n      // Load workflow statuses if authenticated\n      if (githubToken) {\n        await loadWorkflowStatuses(filteredBranches, formattedPRs);\n      }\n      \n      // Load discussion summaries for PRs - available for all users\n      await loadDiscussionSummaries(formattedPRs.slice(0, ITEMS_PER_PAGE));\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError(err.message);\n      \n      // Only use fallback data in development or when GitHub API is blocked\n      if (process.env.NODE_ENV === 'development' || err.message.includes('Failed to fetch')) {\n        console.log('Using fallback mock data for demonstration...');\n        const mockBranches = [\n          {\n            name: 'main',\n            safeName: 'main',\n            commit: { sha: 'abc1234' },\n            url: './main/index.html',\n            lastModified: new Date().toLocaleDateString()\n          },\n          {\n            name: 'feature/user-auth',\n            safeName: 'feature-user-auth',\n            commit: { sha: 'def5678' },\n            url: './feature-user-auth/index.html',\n            lastModified: new Date(Date.now() - 86400000).toLocaleDateString()\n          },\n          {\n            name: 'fix/api-endpoints',\n            safeName: 'fix-api-endpoints',\n            commit: { sha: 'ghi9012' },\n            url: './fix-api-endpoints/index.html',\n            lastModified: new Date(Date.now() - 172800000).toLocaleDateString()\n          }\n        ];\n\n        const mockPRs = [\n          {\n            id: 1,\n            number: 123,\n            title: 'Improve multi-page selector landing page for GitHub deployment',\n            state: 'open',\n            author: 'copilot',\n            branchName: 'copilot/fix-459',\n            safeBranchName: 'copilot-fix-459',\n            url: './copilot-fix-459/index.html',\n            prUrl: 'https://github.com/litlfred/sgex/pull/123',\n            updatedAt: new Date().toLocaleDateString(),\n            createdAt: new Date(Date.now() - 86400000).toLocaleDateString()\n          },\n          {\n            id: 2,\n            number: 122,\n            title: 'Add dark mode support',\n            state: 'closed',\n            author: 'developer',\n            branchName: 'feature/dark-mode',\n            safeBranchName: 'feature-dark-mode',\n            url: './feature-dark-mode/index.html',\n            prUrl: 'https://github.com/litlfred/sgex/pull/122',\n            updatedAt: new Date(Date.now() - 172800000).toLocaleDateString(),\n            createdAt: new Date(Date.now() - 345600000).toLocaleDateString()\n          },\n          {\n            id: 3,\n            number: 121,\n            title: 'Fix authentication flow',\n            state: 'open',\n            author: 'contributor',\n            branchName: 'fix/auth-flow',\n            safeBranchName: 'fix-auth-flow',\n            url: './fix-auth-flow/index.html',\n            prUrl: 'https://github.com/litlfred/sgex/pull/121',\n            updatedAt: new Date(Date.now() - 259200000).toLocaleDateString(),\n            createdAt: new Date(Date.now() - 432000000).toLocaleDateString()\n          }\n        ];\n\n        setBranches(mockBranches);\n        setPullRequests(mockPRs);\n        setError(null); // Clear error since we have fallback data\n      }\n    } finally {\n      setLoading(false);\n      setIsRefreshing(false);\n    }\n  }, [checkAllDeploymentStatuses, prFilter, githubToken, loadWorkflowStatuses, loadDiscussionSummaries, isRefreshing, prSearchTerm, prSortBy, prPage]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Load summaries for visible PRs when page changes\n  useEffect(() => {\n    if (pullRequests.length > 0) {\n      const filtered = pullRequests.filter(pr => \n        pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n        pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n      );\n      const sorted = sortPRs(filtered, prSortBy);\n      const paginated = sorted.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n      loadDiscussionSummaries(paginated);\n    }\n  }, [prPage, prSearchTerm, prSortBy, pullRequests, loadDiscussionSummaries]);\n\n  // Filter and sort PRs based on search and sorting\n  const filteredPRs = pullRequests.filter(pr => \n    pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n    pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n  );\n  const sortedPRs = sortPRs(filteredPRs, prSortBy);\n  const paginatedPRs = sortedPRs.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n  const totalPRPages = Math.ceil(sortedPRs.length / ITEMS_PER_PAGE);\n\n  // Filter and sort branches based on search and sorting\n  const filteredBranches = branches.filter(branch => \n    branch.name.toLowerCase().includes(branchSearchTerm.toLowerCase())\n  );\n  const sortedBranches = sortBranches(filteredBranches, branchSortBy);\n\n  if (loading) {\n    return (\n      <PageLayout pageName=\"branch-listing\" showMascot={true} showHeader={false}>\n        <div className=\"branch-listing\">\n          <h1><img src={mascotImage} alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          <div className=\"loading\">Loading previews...</div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <PageLayout pageName=\"branch-listing\" showMascot={true} showHeader={false}>\n        <div className=\"branch-listing\">\n          <h1><img src={mascotImage} alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          <div className=\"error\">\n            <p>Failed to load previews: {error}</p>\n            <p>Please try refreshing the page or check back later.</p>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout pageName=\"branch-listing\" showMascot={true} showHeader={false}>\n      <div className=\"branch-listing\">\n        <header className=\"branch-listing-header\">\n          <h1><img src={mascotImage} alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          \n          <div className=\"prominent-info\">\n            <p className=\"info-text\">\n              🐾 This landing page lists all available previews. \n              Each branch and PR is automatically deployed to its own preview environment.\n            </p>\n            {cacheInfo && cacheInfo.exists && (\n              <div className=\"cache-status\">\n                <span className=\"cache-info\">\n                  📊 Data cached {cacheInfo.ageMinutes} minute{cacheInfo.ageMinutes !== 1 ? 's' : ''} ago\n                  {cacheInfo.stale && ' (refreshing...)'}\n                </span>\n                <button \n                  onClick={handleManualRefresh}\n                  disabled={isRefreshing}\n                  className=\"refresh-btn\"\n                  title=\"Refresh data from GitHub API\"\n                >\n                  {isRefreshing ? '🔄' : '🔄'} {isRefreshing ? 'Refreshing...' : 'Refresh'}\n                </button>\n              </div>\n            )}\n          </div>\n          \n          {/* Authentication Section */}\n          <div className=\"auth-section\">\n            {!isAuthenticated ? (\n              <div className=\"login-section\">\n                <h3>🔐 GitHub Authentication</h3>\n                <p>Login with your GitHub Personal Access Token to view and add comments to pull requests:</p>\n                <PATLogin onAuthSuccess={handleAuthSuccess} />\n              </div>\n            ) : (\n              <div className=\"authenticated-section\">\n                <p>✅ Authenticated - You can now view and add comments to pull requests</p>\n                <button onClick={handleLogout} className=\"logout-btn\">\n                  Logout\n                </button>\n              </div>\n            )}\n          </div>\n        </header>\n\n        <div className=\"main-actions\">\n          <button \n            className=\"contribute-btn primary\"\n            onClick={() => setShowContributeModal(true)}\n          >\n            🌟 How to Contribute\n          </button>\n          <a \n            href=\"/sgex/main/docs/\" \n            className=\"contribute-btn secondary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            onError={(e) => {\n              // Fallback to GitHub docs if main branch docs not available\n              e.target.href = \"https://github.com/litlfred/sgex/tree/main/public/docs\";\n            }}\n          >\n            📚 Documentation\n          </a>\n          <a \n            href=\"https://github.com/litlfred/sgex/issues/new\" \n            className=\"contribute-btn tertiary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            🐛 Report a Bug\n          </a>\n        </div>\n\n        <div className=\"preview-tabs\">\n          <button \n            className={`tab-button ${activeTab === 'branches' ? 'active' : ''}`}\n            onClick={() => setActiveTab('branches')}\n          >\n            🌿 Branch Previews ({sortedBranches.length})\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'prs' ? 'active' : ''}`}\n            onClick={() => setActiveTab('prs')}\n          >\n            🔄 Pull Request Previews ({sortedPRs.length})\n          </button>\n        </div>\n\n        {activeTab === 'branches' && (\n          <div className=\"branch-section\">\n            <div className=\"branch-controls\">\n              <input\n                type=\"text\"\n                placeholder=\"Search branches by name...\"\n                value={branchSearchTerm}\n                onChange={(e) => setBranchSearchTerm(e.target.value)}\n                className=\"branch-search\"\n              />\n              <select\n                value={branchSortBy}\n                onChange={(e) => setBranchSortBy(e.target.value)}\n                className=\"sort-select\"\n              >\n                <option value=\"updated\">Sort by Recent Updates</option>\n                <option value=\"alphabetical\">Sort Alphabetically</option>\n              </select>\n              {checkingStatuses && (\n                <span className=\"status-checking\">\n                  🔄 Checking deployment status...\n                </span>\n              )}\n            </div>\n\n            <div className=\"branch-cards\">\n              {sortedBranches.length === 0 ? (\n                <div className=\"no-items\">\n                  {branchSearchTerm ? (\n                    <p>No branches match your search \"{branchSearchTerm}\".</p>\n                  ) : (\n                    <>\n                      <p>No branch previews available at the moment.</p>\n                      <p>Branch previews will appear here when code is pushed to branches.</p>\n                    </>\n                  )}\n                </div>\n              ) : (\n                sortedBranches.map((branch) => {\n                  const statusKey = `branch-${branch.name}`;\n                  const deploymentStatus = deploymentStatuses[statusKey];\n                  \n                  return (\n                    <div key={branch.name} className=\"preview-card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"item-name\">{branch.name}</h3>\n                        <div className=\"card-badges\">\n                          <span className=\"commit-badge\">\n                            {branch.commit.sha.substring(0, 7)}\n                          </span>\n                          {deploymentStatus && (\n                            <span className={`status-badge ${deploymentStatus}`}>\n                              {deploymentStatus === 'active' && '🟢 Active'}\n                              {deploymentStatus === 'not-found' && '🟡 Building'}\n                              {deploymentStatus === 'errored' && '🔴 Error'}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"card-body\">\n                        <p className=\"item-date\">\n                          Last updated: {branch.lastModified}\n                        </p>\n                        \n                        <div className=\"branch-actions\">\n                          {deploymentStatus === 'active' ? (\n                            <a \n                              href={branch.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>🚀 View Preview</span>\n                            </a>\n                          ) : deploymentStatus === 'not-found' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"building-message\">\n                                🔄 Deployment in progress. Please check back in a few minutes.\n                              </span>\n                            </div>\n                          ) : deploymentStatus === 'errored' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"error-message\">\n                                ❌ Deployment failed. Please check the GitHub Actions logs or contact support.\n                              </span>\n                              <a \n                                href={`https://github.com/litlfred/sgex/actions`}\n                                className=\"actions-link\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                View Actions Log\n                              </a>\n                            </div>\n                          ) : (\n                            <a \n                              href={branch.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>🚀 View Preview</span>\n                            </a>\n                          )}\n                          \n                          <button \n                            className=\"copy-btn\"\n                            onClick={() => copyToClipboard(branch.url, 'branch', branch.name)}\n                            title=\"Copy URL to clipboard\"\n                          >\n                            📋 Copy URL\n                          </button>\n                        </div>\n\n                        {/* Workflow Status */}\n                        <WorkflowStatus\n                          workflowStatus={workflowStatuses[branch.name]}\n                          branchName={branch.name}\n                          onTriggerWorkflow={triggerWorkflow}\n                          isAuthenticated={isAuthenticated}\n                          isLoading={loadingWorkflowStatuses}\n                        />\n                      </div>\n\n                      <div className=\"card-footer\">\n                        <small className=\"preview-path\">\n                          Preview URL: <a \n                            href={branch.url} \n                            className=\"preview-url-link\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            {branch.url}\n                          </a>\n                        </small>\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'prs' && (\n          <div className=\"pr-section\">\n            <div className=\"pr-controls\">\n              <div className=\"pr-filter-section\">\n                <label htmlFor=\"pr-filter\">Filter PRs:</label>\n                <select\n                  id=\"pr-filter\"\n                  value={prFilter}\n                  onChange={(e) => {\n                    setPrFilter(e.target.value);\n                    setPrPage(1); // Reset to first page when filtering\n                  }}\n                  className=\"filter-select\"\n                >\n                  <option value=\"open\">Open PRs Only</option>\n                  <option value=\"closed\">Closed PRs Only</option>\n                  <option value=\"all\">All PRs</option>\n                </select>\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"Search pull requests by title or author...\"\n                value={prSearchTerm}\n                onChange={(e) => {\n                  setPrSearchTerm(e.target.value);\n                  setPrPage(1); // Reset to first page when searching\n                }}\n                className=\"pr-search\"\n              />\n              <select\n                value={prSortBy}\n                onChange={(e) => {\n                  setPrSortBy(e.target.value);\n                  setPrPage(1); // Reset to first page when sorting\n                }}\n                className=\"sort-select\"\n              >\n                <option value=\"updated\">Sort by Recent Updates</option>\n                <option value=\"number\">Sort by PR Number</option>\n                <option value=\"alphabetical\">Sort Alphabetically</option>\n              </select>\n            </div>\n\n            <div className=\"pr-cards\">\n              {paginatedPRs.length === 0 ? (\n                <div className=\"no-items\">\n                  {prSearchTerm ? (\n                    <p>No pull requests match your search \"{prSearchTerm}\".</p>\n                  ) : (\n                    <p>No pull request previews available at the moment.</p>\n                  )}\n                </div>\n              ) : (\n                paginatedPRs.map((pr) => {\n                  const statusKey = `pr-${pr.id}`;\n                  const deploymentStatus = deploymentStatuses[statusKey];\n                  \n                  return (\n                    <div key={pr.id} className=\"preview-card pr-card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"item-name\">#{pr.number}: {pr.title}</h3>\n                        <div className=\"card-badges\">\n                          <span className={`state-badge ${pr.state}`}>\n                            {pr.state === 'open' ? '🟢' : '🔴'} {pr.state}\n                          </span>\n                          {deploymentStatus && (\n                            <span className={`status-badge ${deploymentStatus}`}>\n                              {deploymentStatus === 'active' && '🟢 Active'}\n                              {deploymentStatus === 'not-found' && '🟡 Building'}\n                              {deploymentStatus === 'errored' && '🔴 Error'}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"card-body\">\n                        <p className=\"pr-meta\">\n                          <strong>Branch:</strong> {pr.branchName} • <strong>Author:</strong> {pr.author}\n                        </p>\n                        <p className=\"item-date\">\n                          Created: {pr.createdAt} • Updated: {pr.updatedAt}\n                        </p>\n                        \n                        {/* Discussion Summary Section - Show for all users */}\n                        <div>\n                          {/* Discussion Summary Status Bar */}\n                          <div \n                            className=\"discussion-summary-bar\"\n                            onClick={() => toggleDiscussion(pr.number)}\n                          >\n                            <div className=\"discussion-summary-text\">\n                              <span className=\"discussion-summary-icon\">💬</span>\n                              {getDiscussionSummaryText(pr.number)}\n                            </div>\n                            <span className={`discussion-expand-icon ${expandedDiscussions[pr.number] ? 'expanded' : ''}`}>\n                              ▶\n                            </span>\n                          </div>\n\n                          {/* Expanded Discussion Section */}\n                          {expandedDiscussions[pr.number] && (\n                            <div className=\"discussion-expanded-section\">\n                              <div className=\"discussion-header\">\n                                <h4 className=\"discussion-title\">Discussion</h4>\n                                <div className=\"discussion-actions\">\n                                  <a \n                                    href={`https://github.com/litlfred/sgex/pull/${pr.number}/files`}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    className=\"discussion-action-btn\"\n                                  >\n                                    📁 View Files\n                                  </a>\n                                  <a \n                                    href={pr.prUrl}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    className=\"discussion-action-btn secondary\"\n                                  >\n                                    🔗 Full Discussion\n                                  </a>\n                                </div>\n                              </div>\n                              \n                              {/* Comment Input at Top - Only show for authenticated users */}\n                              {isAuthenticated ? (\n                                <div className=\"comment-input-section\">\n                                  <textarea\n                                    value={commentInputs[pr.number] || ''}\n                                    onChange={(e) => {\n                                      setCommentInputs(prev => ({\n                                        ...prev,\n                                        [pr.number]: e.target.value\n                                      }));\n                                      // Clear error when user starts typing\n                                      if (commentErrors[pr.number]) {\n                                        setCommentErrors(prev => ({\n                                          ...prev,\n                                          [pr.number]: null\n                                        }));\n                                      }\n                                    }}\n                                    placeholder=\"Add a comment...\"\n                                    className=\"comment-input\"\n                                    rows={3}\n                                  />\n                                  {commentErrors[pr.number] && (\n                                    <div className=\"comment-error-message\">\n                                      ⚠️ {commentErrors[pr.number]}\n                                    </div>\n                                  )}\n                                  <button\n                                    onClick={() => submitComment(pr.number, commentInputs[pr.number])}\n                                    disabled={!commentInputs[pr.number]?.trim() || submittingComments[pr.number]}\n                                    className=\"submit-comment-btn\"\n                                  >\n                                    {submittingComments[pr.number] ? 'Submitting...' : 'Add Comment'}\n                                  </button>\n                                </div>\n                              ) : (\n                                <div className=\"comment-auth-message\">\n                                  <p>\n                                    🔐 <a href=\"#auth-section\" onClick={() => document.querySelector('.auth-section')?.scrollIntoView()}>Sign in</a> to add comments to this discussion\n                                  </p>\n                                </div>\n                              )}\n                              \n                              {/* Scrollable Comments Area */}\n                              <div className=\"discussion-scroll-area\">\n                                {prComments[pr.number] && prComments[pr.number].length > 0 ? (\n                                  <div className=\"comments-list\">\n                                    {prComments[pr.number].map((comment) => (\n                                      <div key={comment.id} className=\"comment-item\">\n                                        <div className=\"comment-header\">\n                                          <img \n                                            src={comment.avatar_url} \n                                            alt={comment.author} \n                                            className=\"comment-avatar\"\n                                          />\n                                          <span className=\"comment-author\">{comment.author}</span>\n                                          <span className=\"comment-date\">{comment.created_at}</span>\n                                        </div>\n                                        <div className=\"comment-body\">{comment.body}</div>\n                                      </div>\n                                    ))}\n                                  </div>\n                                ) : (\n                                  <div className=\"no-comments\">\n                                    No comments yet. {isAuthenticated ? 'Be the first to comment!' : 'Sign in to be the first to comment!'}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                        \n                        <div className=\"pr-actions\">\n                          {deploymentStatus === 'active' ? (\n                            <a \n                              href={pr.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>🚀 View Preview</span>\n                            </a>\n                          ) : deploymentStatus === 'not-found' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"building-message\">\n                                🔄 Deployment in progress. Please check back in a few minutes.\n                              </span>\n                            </div>\n                          ) : deploymentStatus === 'errored' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"error-message\">\n                                ❌ Deployment failed. Please check the GitHub Actions logs or contact support.\n                              </span>\n                              <a \n                                href={`https://github.com/litlfred/sgex/actions`}\n                                className=\"actions-link\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                View Actions Log\n                              </a>\n                            </div>\n                          ) : (\n                            <a \n                              href={pr.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>🚀 View Preview</span>\n                            </a>\n                          )}\n                          \n                          <button \n                            className=\"copy-btn\"\n                            onClick={() => copyToClipboard(pr.url, 'PR', `#${pr.number}`)}\n                            title=\"Copy URL to clipboard\"\n                          >\n                            📋 Copy URL\n                          </button>\n                          \n                          <a \n                            href={pr.prUrl} \n                            className=\"pr-link\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <span>📋 View PR</span>\n                          </a>\n                        </div>\n\n                        {/* Workflow Status */}\n                        <WorkflowStatus\n                          workflowStatus={workflowStatuses[pr.branchName]}\n                          branchName={pr.branchName}\n                          onTriggerWorkflow={triggerWorkflow}\n                          isAuthenticated={isAuthenticated}\n                          isLoading={loadingWorkflowStatuses}\n                        />\n                      </div>\n\n                      <div className=\"card-footer\">\n                        <small className=\"preview-path\">\n                          Preview URL: <a \n                            href={pr.url} \n                            className=\"preview-url-link\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            {pr.url}\n                          </a>\n                        </small>\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n            </div>\n\n            {totalPRPages > 1 && (\n              <div className=\"pagination\">\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => setPrPage(Math.max(1, prPage - 1))}\n                  disabled={prPage === 1}\n                >\n                  ← Previous\n                </button>\n                <span className=\"pagination-info\">\n                  Page {prPage} of {totalPRPages} ({sortedPRs.length} total)\n                </span>\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => setPrPage(Math.min(totalPRPages, prPage + 1))}\n                  disabled={prPage === totalPRPages}\n                >\n                  Next →\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        <footer className=\"branch-listing-footer\">\n          <div className=\"footer-content\">\n            <div className=\"footer-left\">\n              <a \n                href=\"https://github.com/litlfred/sgex\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"source-link\"\n              >\n                📦 Source Code\n              </a>\n            </div>\n            <div className=\"footer-center\">\n              <p>\n                <strong>Main Application:</strong> <a href=\"./main/index.html\">View Main Branch →</a>\n              </p>\n            </div>\n          </div>\n        </footer>\n\n        {showContributeModal && (\n          <HelpModal\n            helpTopic={contributeHelpTopic}\n            onClose={() => setShowContributeModal(false)}\n          />\n        )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default BranchListing;"],"mappings":"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CAAC,CACvC,IAAK,SAAS,CACd,QACE,KAAM,CAAAJ,KAAK,CAAG,GAAI,CAAA9E,IAAI,CAAC2E,CAAC,CAACQ,SAAS,CAAC,CACnC,KAAM,CAAAH,KAAK,CAAG,GAAI,CAAAhF,IAAI,CAAC4E,CAAC,CAACO,SAAS,CAAC,CACnC,MAAO,CAAAH,KAAK,CAAGF,KAAK,CAAE;AAC1B,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAM,mBAAmB,CAAG,CAC1B9E,EAAE,CAAE,mBAAmB,CACvB4E,KAAK,CAAE,2BAA2B,CAClCvB,IAAI,CAAE,WAAW,CACjB0B,OAAO,CAAE,CACP,CACEH,KAAK,CAAE,6CAA6C,CACpDG,OAAO,CAAE;AACjB;AACA;AACA,0BAA0B1J,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEuJ,KAAK,CAAE,gDAAgD,CACvDG,OAAO,CAAE;AACjB;AACA;AACA,0BAA0B1J,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEuJ,KAAK,CAAE,sCAAsC,CAC7CG,OAAO,CAAE;AACjB;AACA;AACA,0BAA0B1J,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEuJ,KAAK,CAAE,iCAAiC,CACxCG,OAAO,CAAE;AACjB;AACA;AACA;AACA,4BAA4B1J,WAAW;AACvC,4BAA4BA,WAAW;AACvC,4BAA4BA,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEuJ,KAAK,CAAE,oBAAoB,CAC3BG,OAAO,CAAE;AACjB;AACA;AACA,0BAA0B1J,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CAEL,CAAC,CAED;AACA,KAAM,CAAA2J,SAAS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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}