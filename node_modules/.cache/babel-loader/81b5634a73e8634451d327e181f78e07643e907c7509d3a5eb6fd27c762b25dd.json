{"ast":null,"code":"import _objectSpread from\"/home/runner/work/sgex/sgex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{useLocation,useNavigate}from'react-router-dom';import githubService from'../services/githubService';import{PageLayout}from'./framework';import'./OrganizationSelection.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const OrganizationSelection=()=>{var _sourceRepository$ful;const location=useLocation();const navigate=useNavigate();const[organizations,setOrganizations]=useState([]);const[selectedOrganization,setSelectedOrganization]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[includePersonal,setIncludePersonal]=useState(true);const{profile,sourceRepository,action}=location.state||{};const getActionConfig=()=>{switch(action){case'fork':return{title:'Select Destination for Fork',description:\"Choose where to create a fork of \\\"\".concat(sourceRepository===null||sourceRepository===void 0?void 0:sourceRepository.name,\"\\\".\"),buttonText:'Fork Repository',nextRoute:'/dashboard'};case'create':return{title:'Select Destination for New DAK',description:\"Choose where to create your new DAK based on \\\"\".concat(sourceRepository===null||sourceRepository===void 0?void 0:sourceRepository.name,\"\\\".\"),buttonText:'Continue to Configuration',nextRoute:'/dak-configuration'};default:return{title:'Select Organization',description:'Choose an organization for your DAK.',buttonText:'Continue',nextRoute:'/dashboard'};}};const fetchOrganizations=useCallback(async()=>{setLoading(true);setError(null);try{let orgsData=[];if(githubService.isAuth()){orgsData=await githubService.getUserOrganizations();}else{// Fallback to mock organizations for demonstration\norgsData=await getMockOrganizations();}// Always ensure WHO organization is included with fresh data\ntry{const whoOrganization=await githubService.getWHOOrganization();// Check if WHO organization is already in the list\nconst whoIndex=orgsData.findIndex(org=>org.login==='WorldHealthOrganization');if(whoIndex>=0){// Replace existing WHO org with fresh data\norgsData[whoIndex]=_objectSpread(_objectSpread({},orgsData[whoIndex]),whoOrganization);}else{// Add WHO organization at the beginning of the list\norgsData.unshift(whoOrganization);}}catch(whoError){console.warn('Could not fetch WHO organization data, using fallback:',whoError);// Fallback to hardcoded WHO organization\nconst whoOrganization={id:'who-organization',login:'WorldHealthOrganization',display_name:'World Health Organization',description:'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',avatar_url:'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',html_url:'https://github.com/WorldHealthOrganization',type:'Organization',permissions:{can_create_repositories:true,can_create_private_repositories:true},plan:{name:'Organization',private_repos:'unlimited'},isWHO:true};// Check if WHO organization is already in the list\nconst hasWHO=orgsData.some(org=>org.login==='WorldHealthOrganization');if(!hasWHO){// Add WHO organization at the beginning of the list\norgsData.unshift(whoOrganization);}}setOrganizations(orgsData);}catch(error){console.error('Error fetching organizations:',error);setError('Failed to fetch organizations. Please check your connection and try again.');// Fallback to mock data for demonstration (which includes WHO)\ntry{const mockOrgs=await getMockOrganizations();setOrganizations(mockOrgs);}catch(mockError){// Ultimate fallback with hardcoded data\nsetOrganizations([{id:'who-organization',login:'WorldHealthOrganization',display_name:'World Health Organization',description:'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',avatar_url:'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',html_url:'https://github.com/WorldHealthOrganization',type:'Organization',permissions:{can_create_repositories:true,can_create_private_repositories:true},plan:{name:'Organization',private_repos:'unlimited'},isWHO:true}]);}}finally{setLoading(false);}},[]);const getMockOrganizations=async()=>{try{// Try to get fresh WHO data even in mock mode\nconst whoOrganization=await githubService.getWHOOrganization();return[whoOrganization,{id:1,login:'my-health-org',display_name:'My Health Organization',description:'Healthcare technology organization focused on digital health solutions',avatar_url:'https://avatars.githubusercontent.com/u/1?s=200&v=4',html_url:'https://github.com/my-health-org',type:'Organization',permissions:{can_create_repositories:true,can_create_private_repositories:true},plan:{name:'Team',private_repos:10}},{id:2,login:'global-health-initiative',display_name:'Global Health Initiative',description:'International organization working on global health standards',avatar_url:'https://avatars.githubusercontent.com/u/2?s=200&v=4',html_url:'https://github.com/global-health-initiative',type:'Organization',permissions:{can_create_repositories:true,can_create_private_repositories:false},plan:{name:'Free',private_repos:0}}];}catch(error){console.warn('Could not fetch WHO data for mock organizations, using fallback:',error);// Return original hardcoded mock data\nreturn[{id:'who-organization',login:'WorldHealthOrganization',display_name:'World Health Organization',description:'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',avatar_url:'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',html_url:'https://github.com/WorldHealthOrganization',type:'Organization',permissions:{can_create_repositories:true,can_create_private_repositories:true},plan:{name:'Organization',private_repos:'unlimited'},isWHO:true},{id:1,login:'my-health-org',display_name:'My Health Organization',description:'Healthcare technology organization focused on digital health solutions',avatar_url:'https://avatars.githubusercontent.com/u/1?s=200&v=4',html_url:'https://github.com/my-health-org',type:'Organization',permissions:{can_create_repositories:true,can_create_private_repositories:true},plan:{name:'Team',private_repos:10}},{id:2,login:'global-health-initiative',display_name:'Global Health Initiative',description:'International organization working on global health standards',avatar_url:'https://avatars.githubusercontent.com/u/2?s=200&v=4',html_url:'https://github.com/global-health-initiative',type:'Organization',permissions:{can_create_repositories:true,can_create_private_repositories:false},plan:{name:'Free',private_repos:0}}];}};useEffect(()=>{if(!profile||!sourceRepository||!action){navigate('/');return;}fetchOrganizations();},[profile,sourceRepository,action,navigate,fetchOrganizations]);const handleOrganizationSelect=org=>{setSelectedOrganization(org);};const handleContinue=()=>{if(!selectedOrganization){alert('Please select an organization to continue');return;}const config=getActionConfig();if(action==='fork'){// For fork, go directly to dashboard after forking\nnavigate(config.nextRoute,{state:{profile,repository:_objectSpread(_objectSpread({},sourceRepository),{},{// Update repository info to reflect the fork destination\nfull_name:\"\".concat(selectedOrganization.login,\"/\").concat(sourceRepository.name),html_url:\"https://github.com/\".concat(selectedOrganization.login,\"/\").concat(sourceRepository.name),owner:selectedOrganization}),sourceRepository,destinationOrganization:selectedOrganization,action}});}else if(action==='create'){// For create, go to DAK configuration\nnavigate(config.nextRoute,{state:{profile,templateRepository:sourceRepository,destinationOrganization:selectedOrganization,action}});}};const handleBack=()=>{navigate(\"/dak-selection/\".concat(profile.login),{state:{profile,action}});};if(!profile||!sourceRepository||!action){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"organization-selection\",children:/*#__PURE__*/_jsx(\"div\",{children:\"Redirecting...\"})});}const config=getActionConfig();// Create combined list of options\nconst allOptions=[];if(includePersonal){allOptions.push(_objectSpread(_objectSpread({},profile),{},{type:'User',display_name:profile.name||profile.login,description:'Your personal GitHub account',permissions:{can_create_repositories:true,can_create_private_repositories:true},isPersonal:true}));}allOptions.push(...organizations);return/*#__PURE__*/_jsx(PageLayout,{pageName:\"organization-selection\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"org-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"breadcrumb-link\",children:\"Select Profile\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/dak-action',{state:{profile}}),className:\"breadcrumb-link\",children:\"Choose DAK Action\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,className:\"breadcrumb-link\",children:\"Select DAK\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:\"Select Organization\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"org-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"org-intro\",children:[/*#__PURE__*/_jsx(\"h2\",{children:config.title}),/*#__PURE__*/_jsx(\"p\",{children:config.description}),sourceRepository&&/*#__PURE__*/_jsxs(\"div\",{className:\"source-repo-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"repo-label\",children:\"Source Repository:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"repo-badge\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"repo-name\",children:sourceRepository.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"repo-owner\",children:[\"@\",(_sourceRepository$ful=sourceRepository.full_name)===null||_sourceRepository$ful===void 0?void 0:_sourceRepository$ful.split('/')[0]]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"options-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"include-personal\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:includePersonal,onChange:e=>setIncludePersonal(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{children:\"Include my personal account as an option\"})]})}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading organizations...\"})]}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"error-state\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Error loading organizations\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchOrganizations,className:\"retry-btn\",children:\"Try Again\"})]}):allOptions.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"No organizations available\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enable personal account option or join organizations to see options here.\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"org-grid\",children:allOptions.map(org=>{var _org$permissions,_org$permissions2,_org$permissions3,_org$permissions4;return/*#__PURE__*/_jsxs(\"div\",{className:\"org-card \".concat((selectedOrganization===null||selectedOrganization===void 0?void 0:selectedOrganization.id)===org.id&&(selectedOrganization===null||selectedOrganization===void 0?void 0:selectedOrganization.type)===org.type?'selected':'',\" \").concat(org.isPersonal?'personal':'',\" \").concat(org.isWHO?'who-org':''),onClick:()=>handleOrganizationSelect(org),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"org-header-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:org.avatar_url||\"https://github.com/\".concat(org.login,\".png\"),alt:\"\".concat(org.display_name||org.login,\" avatar\"),className:\"org-avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"org-details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:org.display_name||org.login}),/*#__PURE__*/_jsxs(\"p\",{className:\"org-login\",children:[\"@\",org.login]}),org.isPersonal&&/*#__PURE__*/_jsx(\"span\",{className:\"personal-badge\",children:\"Personal\"}),org.isWHO&&/*#__PURE__*/_jsx(\"span\",{className:\"who-badge\",children:\"WHO Official\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"org-description\",children:org.description||'No description available'}),/*#__PURE__*/_jsxs(\"div\",{className:\"org-permissions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"permission-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"permission-icon \".concat((_org$permissions=org.permissions)!==null&&_org$permissions!==void 0&&_org$permissions.can_create_repositories?'allowed':'denied'),children:(_org$permissions2=org.permissions)!==null&&_org$permissions2!==void 0&&_org$permissions2.can_create_repositories?'✓':'✗'}),/*#__PURE__*/_jsx(\"span\",{children:\"Create repositories\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"permission-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"permission-icon \".concat((_org$permissions3=org.permissions)!==null&&_org$permissions3!==void 0&&_org$permissions3.can_create_private_repositories?'allowed':'denied'),children:(_org$permissions4=org.permissions)!==null&&_org$permissions4!==void 0&&_org$permissions4.can_create_private_repositories?'✓':'✗'}),/*#__PURE__*/_jsx(\"span\",{children:\"Create private repositories\"})]})]}),org.plan&&/*#__PURE__*/_jsxs(\"div\",{className:\"org-plan\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"plan-name\",children:[org.plan.name,\" Plan\"]}),org.plan.private_repos!==undefined&&/*#__PURE__*/_jsxs(\"span\",{className:\"plan-repos\",children:[org.plan.private_repos,\" private repos\"]})]}),(selectedOrganization===null||selectedOrganization===void 0?void 0:selectedOrganization.id)===org.id&&(selectedOrganization===null||selectedOrganization===void 0?void 0:selectedOrganization.type)===org.type&&/*#__PURE__*/_jsx(\"div\",{className:\"selection-indicator\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\u2713 Selected\"})})]},\"\".concat(org.type,\"-\").concat(org.id));})}),/*#__PURE__*/_jsx(\"div\",{className:\"org-footer\",children:/*#__PURE__*/_jsx(\"button\",{className:\"continue-btn\",onClick:handleContinue,disabled:!selectedOrganization,children:config.buttonText})})]})]})]})]})});};export default OrganizationSelection;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useLocation","useNavigate","githubService","PageLayout","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OrganizationSelection","_sourceRepository$ful","location","navigate","organizations","setOrganizations","selectedOrganization","setSelectedOrganization","loading","setLoading","error","setError","includePersonal","setIncludePersonal","profile","sourceRepository","action","state","getActionConfig","title","description","concat","name","buttonText","nextRoute","fetchOrganizations","orgsData","isAuth","getUserOrganizations","getMockOrganizations","whoOrganization","getWHOOrganization","whoIndex","findIndex","org","login","_objectSpread","unshift","whoError","console","warn","id","display_name","avatar_url","html_url","type","permissions","can_create_repositories","can_create_private_repositories","plan","private_repos","isWHO","hasWHO","some","mockOrgs","mockError","handleOrganizationSelect","handleContinue","alert","config","repository","full_name","owner","destinationOrganization","templateRepository","handleBack","pageName","children","allOptions","push","isPersonal","className","onClick","split","checked","onChange","e","target","length","map","_org$permissions","_org$permissions2","_org$permissions3","_org$permissions4","src","alt","undefined","disabled"],"sources":["/home/runner/work/sgex/sgex/src/components/OrganizationSelection.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport { PageLayout } from './framework';\nimport './OrganizationSelection.css';\n\nconst OrganizationSelection = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [organizations, setOrganizations] = useState([]);\n  const [selectedOrganization, setSelectedOrganization] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [includePersonal, setIncludePersonal] = useState(true);\n  \n  const { profile, sourceRepository, action } = location.state || {};\n\n  const getActionConfig = () => {\n    switch (action) {\n      case 'fork':\n        return {\n          title: 'Select Destination for Fork',\n          description: `Choose where to create a fork of \"${sourceRepository?.name}\".`,\n          buttonText: 'Fork Repository',\n          nextRoute: '/dashboard'\n        };\n      case 'create':\n        return {\n          title: 'Select Destination for New DAK',\n          description: `Choose where to create your new DAK based on \"${sourceRepository?.name}\".`,\n          buttonText: 'Continue to Configuration',\n          nextRoute: '/dak-configuration'\n        };\n      default:\n        return {\n          title: 'Select Organization',\n          description: 'Choose an organization for your DAK.',\n          buttonText: 'Continue',\n          nextRoute: '/dashboard'\n        };\n    }\n  };\n\n  const fetchOrganizations = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      let orgsData = [];\n      \n      if (githubService.isAuth()) {\n        orgsData = await githubService.getUserOrganizations();\n      } else {\n        // Fallback to mock organizations for demonstration\n        orgsData = await getMockOrganizations();\n      }\n      \n      // Always ensure WHO organization is included with fresh data\n      try {\n        const whoOrganization = await githubService.getWHOOrganization();\n        \n        // Check if WHO organization is already in the list\n        const whoIndex = orgsData.findIndex(org => org.login === 'WorldHealthOrganization');\n        \n        if (whoIndex >= 0) {\n          // Replace existing WHO org with fresh data\n          orgsData[whoIndex] = { ...orgsData[whoIndex], ...whoOrganization };\n        } else {\n          // Add WHO organization at the beginning of the list\n          orgsData.unshift(whoOrganization);\n        }\n      } catch (whoError) {\n        console.warn('Could not fetch WHO organization data, using fallback:', whoError);\n        \n        // Fallback to hardcoded WHO organization\n        const whoOrganization = {\n          id: 'who-organization',\n          login: 'WorldHealthOrganization',\n          display_name: 'World Health Organization',\n          description: 'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',\n          avatar_url: 'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',\n          html_url: 'https://github.com/WorldHealthOrganization',\n          type: 'Organization',\n          permissions: {\n            can_create_repositories: true,\n            can_create_private_repositories: true\n          },\n          plan: {\n            name: 'Organization',\n            private_repos: 'unlimited'\n          },\n          isWHO: true\n        };\n        \n        // Check if WHO organization is already in the list\n        const hasWHO = orgsData.some(org => org.login === 'WorldHealthOrganization');\n        \n        if (!hasWHO) {\n          // Add WHO organization at the beginning of the list\n          orgsData.unshift(whoOrganization);\n        }\n      }\n      \n      setOrganizations(orgsData);\n    } catch (error) {\n      console.error('Error fetching organizations:', error);\n      setError('Failed to fetch organizations. Please check your connection and try again.');\n      // Fallback to mock data for demonstration (which includes WHO)\n      try {\n        const mockOrgs = await getMockOrganizations();\n        setOrganizations(mockOrgs);\n      } catch (mockError) {\n        // Ultimate fallback with hardcoded data\n        setOrganizations([{\n          id: 'who-organization',\n          login: 'WorldHealthOrganization',\n          display_name: 'World Health Organization',\n          description: 'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',\n          avatar_url: 'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',\n          html_url: 'https://github.com/WorldHealthOrganization',\n          type: 'Organization',\n          permissions: {\n            can_create_repositories: true,\n            can_create_private_repositories: true\n          },\n          plan: {\n            name: 'Organization',\n            private_repos: 'unlimited'\n          },\n          isWHO: true\n        }]);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const getMockOrganizations = async () => {\n    try {\n      // Try to get fresh WHO data even in mock mode\n      const whoOrganization = await githubService.getWHOOrganization();\n      \n      return [\n        whoOrganization,\n        {\n          id: 1,\n          login: 'my-health-org',\n          display_name: 'My Health Organization',\n          description: 'Healthcare technology organization focused on digital health solutions',\n          avatar_url: 'https://avatars.githubusercontent.com/u/1?s=200&v=4',\n          html_url: 'https://github.com/my-health-org',\n          type: 'Organization',\n          permissions: {\n            can_create_repositories: true,\n            can_create_private_repositories: true\n          },\n          plan: {\n            name: 'Team',\n            private_repos: 10\n          }\n        },\n        {\n          id: 2,\n          login: 'global-health-initiative',\n          display_name: 'Global Health Initiative',\n          description: 'International organization working on global health standards',\n          avatar_url: 'https://avatars.githubusercontent.com/u/2?s=200&v=4',\n          html_url: 'https://github.com/global-health-initiative',\n          type: 'Organization',\n          permissions: {\n            can_create_repositories: true,\n            can_create_private_repositories: false\n          },\n          plan: {\n            name: 'Free',\n            private_repos: 0\n          }\n        }\n      ];\n    } catch (error) {\n      console.warn('Could not fetch WHO data for mock organizations, using fallback:', error);\n      // Return original hardcoded mock data\n      return [\n        {\n          id: 'who-organization',\n          login: 'WorldHealthOrganization',\n          display_name: 'World Health Organization',\n          description: 'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',\n          avatar_url: 'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',\n          html_url: 'https://github.com/WorldHealthOrganization',\n          type: 'Organization',\n          permissions: {\n            can_create_repositories: true,\n            can_create_private_repositories: true\n          },\n          plan: {\n            name: 'Organization',\n            private_repos: 'unlimited'\n          },\n          isWHO: true\n        },\n        {\n          id: 1,\n          login: 'my-health-org',\n          display_name: 'My Health Organization',\n          description: 'Healthcare technology organization focused on digital health solutions',\n          avatar_url: 'https://avatars.githubusercontent.com/u/1?s=200&v=4',\n          html_url: 'https://github.com/my-health-org',\n          type: 'Organization',\n          permissions: {\n            can_create_repositories: true,\n            can_create_private_repositories: true\n          },\n          plan: {\n            name: 'Team',\n            private_repos: 10\n          }\n        },\n        {\n          id: 2,\n          login: 'global-health-initiative',\n          display_name: 'Global Health Initiative',\n          description: 'International organization working on global health standards',\n          avatar_url: 'https://avatars.githubusercontent.com/u/2?s=200&v=4',\n          html_url: 'https://github.com/global-health-initiative',\n          type: 'Organization',\n          permissions: {\n            can_create_repositories: true,\n            can_create_private_repositories: false\n          },\n          plan: {\n            name: 'Free',\n            private_repos: 0\n          }\n        }\n      ];\n    }\n  };\n\n  useEffect(() => {\n    if (!profile || !sourceRepository || !action) {\n      navigate('/');\n      return;\n    }\n    \n    fetchOrganizations();\n  }, [profile, sourceRepository, action, navigate, fetchOrganizations]);\n\n  const handleOrganizationSelect = (org) => {\n    setSelectedOrganization(org);\n  };\n\n  const handleContinue = () => {\n    if (!selectedOrganization) {\n      alert('Please select an organization to continue');\n      return;\n    }\n\n    const config = getActionConfig();\n    \n    if (action === 'fork') {\n      // For fork, go directly to dashboard after forking\n      navigate(config.nextRoute, {\n        state: {\n          profile,\n          repository: {\n            ...sourceRepository,\n            // Update repository info to reflect the fork destination\n            full_name: `${selectedOrganization.login}/${sourceRepository.name}`,\n            html_url: `https://github.com/${selectedOrganization.login}/${sourceRepository.name}`,\n            owner: selectedOrganization\n          },\n          sourceRepository,\n          destinationOrganization: selectedOrganization,\n          action\n        }\n      });\n    } else if (action === 'create') {\n      // For create, go to DAK configuration\n      navigate(config.nextRoute, {\n        state: {\n          profile,\n          templateRepository: sourceRepository,\n          destinationOrganization: selectedOrganization,\n          action\n        }\n      });\n    }\n  };\n\n  const handleBack = () => {\n    navigate(`/dak-selection/${profile.login}`, { \n      state: { profile, action } \n    });\n  };\n\n  if (!profile || !sourceRepository || !action) {\n    return (\n      <PageLayout pageName=\"organization-selection\">\n        <div>Redirecting...</div>\n      </PageLayout>\n    );\n  }\n\n  const config = getActionConfig();\n  \n  // Create combined list of options\n  const allOptions = [];\n  \n  if (includePersonal) {\n    allOptions.push({\n      ...profile,\n      type: 'User',\n      display_name: profile.name || profile.login,\n      description: 'Your personal GitHub account',\n      permissions: {\n        can_create_repositories: true,\n        can_create_private_repositories: true\n      },\n      isPersonal: true\n    });\n  }\n  \n  allOptions.push(...organizations);\n\n  return (\n    <PageLayout pageName=\"organization-selection\">\n      <div className=\"org-content\">\n        <div className=\"breadcrumb\">\n          <button onClick={() => navigate('/')} className=\"breadcrumb-link\">\n            Select Profile\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate('/dak-action', { state: { profile } })} className=\"breadcrumb-link\">\n            Choose DAK Action\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={handleBack} className=\"breadcrumb-link\">\n            Select DAK\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <span className=\"breadcrumb-current\">Select Organization</span>\n        </div>\n\n        <div className=\"org-main\">\n          <div className=\"org-intro\">\n            <h2>{config.title}</h2>\n            <p>{config.description}</p>\n            \n            {sourceRepository && (\n              <div className=\"source-repo-info\">\n                <span className=\"repo-label\">Source Repository:</span>\n                <div className=\"repo-badge\">\n                  <span className=\"repo-name\">{sourceRepository.name}</span>\n                  <span className=\"repo-owner\">@{sourceRepository.full_name?.split('/')[0]}</span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"options-section\">\n            <div className=\"include-personal\">\n              <label className=\"checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  checked={includePersonal}\n                  onChange={(e) => setIncludePersonal(e.target.checked)}\n                />\n                <span>Include my personal account as an option</span>\n              </label>\n            </div>\n\n            {loading ? (\n              <div className=\"loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading organizations...</p>\n              </div>\n            ) : error ? (\n              <div className=\"error-state\">\n                <h3>Error loading organizations</h3>\n                <p>{error}</p>\n                <button onClick={fetchOrganizations} className=\"retry-btn\">\n                  Try Again\n                </button>\n              </div>\n            ) : allOptions.length === 0 ? (\n              <div className=\"empty-state\">\n                <h3>No organizations available</h3>\n                <p>Enable personal account option or join organizations to see options here.</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"org-grid\">\n                  {allOptions.map((org) => (\n                    <div \n                      key={`${org.type}-${org.id}`}\n                      className={`org-card ${selectedOrganization?.id === org.id && selectedOrganization?.type === org.type ? 'selected' : ''} ${org.isPersonal ? 'personal' : ''} ${org.isWHO ? 'who-org' : ''}`}\n                      onClick={() => handleOrganizationSelect(org)}\n                    >\n                      <div className=\"org-header-info\">\n                        <img \n                          src={org.avatar_url || `https://github.com/${org.login}.png`} \n                          alt={`${org.display_name || org.login} avatar`}\n                          className=\"org-avatar\"\n                        />\n                        <div className=\"org-details\">\n                          <h3>{org.display_name || org.login}</h3>\n                          <p className=\"org-login\">@{org.login}</p>\n                          {org.isPersonal && <span className=\"personal-badge\">Personal</span>}\n                          {org.isWHO && <span className=\"who-badge\">WHO Official</span>}\n                        </div>\n                      </div>\n                      \n                      <p className=\"org-description\">{org.description || 'No description available'}</p>\n                      \n                      <div className=\"org-permissions\">\n                        <div className=\"permission-item\">\n                          <span className={`permission-icon ${org.permissions?.can_create_repositories ? 'allowed' : 'denied'}`}>\n                            {org.permissions?.can_create_repositories ? '✓' : '✗'}\n                          </span>\n                          <span>Create repositories</span>\n                        </div>\n                        <div className=\"permission-item\">\n                          <span className={`permission-icon ${org.permissions?.can_create_private_repositories ? 'allowed' : 'denied'}`}>\n                            {org.permissions?.can_create_private_repositories ? '✓' : '✗'}\n                          </span>\n                          <span>Create private repositories</span>\n                        </div>\n                      </div>\n\n                      {org.plan && (\n                        <div className=\"org-plan\">\n                          <span className=\"plan-name\">{org.plan.name} Plan</span>\n                          {org.plan.private_repos !== undefined && (\n                            <span className=\"plan-repos\">{org.plan.private_repos} private repos</span>\n                          )}\n                        </div>\n                      )}\n\n                      {selectedOrganization?.id === org.id && selectedOrganization?.type === org.type && (\n                        <div className=\"selection-indicator\">\n                          <span>✓ Selected</span>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"org-footer\">\n                  <button \n                    className=\"continue-btn\"\n                    onClick={handleContinue}\n                    disabled={!selectedOrganization}\n                  >\n                    {config.buttonText}\n                  </button>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default OrganizationSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}