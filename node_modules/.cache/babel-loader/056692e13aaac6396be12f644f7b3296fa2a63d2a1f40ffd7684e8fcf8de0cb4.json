{"ast":null,"code":"import { assign, isNil } from 'min-dash';\nconst round = Math.round;\n\n/**\n * @typedef {import('diagram-js/lib/features/complex-preview/ComplexPreview').default} ComplexPreview\n * @typedef {import('diagram-js/lib/layout/ConnectionDocking').default} ConnectionDocking\n * @typedef {import('../modeling/ElementFactory').default} ElementFactory\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../modeling/BpmnLayouter').default} BpmnLayouter\n * @typedef {import('diagram-js/lib/features/rules/Rules').default} Rules\n *\n * @typedef {import('../../model/Types').Shape} Shape\n */\n\n/**\n * A preview for appending.\n *\n * @param {ComplexPreview} complexPreview\n * @param {ConnectionDocking} connectionDocking\n * @param {ElementFactory} elementFactory\n * @param {EventBus} eventBus\n * @param {BpmnLayouter} layouter\n * @param {Rules} rules\n */\nexport default function AppendPreview(complexPreview, connectionDocking, elementFactory, eventBus, layouter, rules) {\n  this._complexPreview = complexPreview;\n  this._connectionDocking = connectionDocking;\n  this._elementFactory = elementFactory;\n  this._eventBus = eventBus;\n  this._layouter = layouter;\n  this._rules = rules;\n}\n\n/**\n * Create a preview of appending a shape of the given type to the given source.\n *\n * @param {Shape} source\n * @param {string} type\n * @param {Partial<Shape>} options\n */\nAppendPreview.prototype.create = function (source, type, options) {\n  const complexPreview = this._complexPreview,\n    connectionDocking = this._connectionDocking,\n    elementFactory = this._elementFactory,\n    eventBus = this._eventBus,\n    layouter = this._layouter,\n    rules = this._rules;\n  const shape = elementFactory.createShape(assign({\n    type\n  }, options));\n  const position = eventBus.fire('autoPlace', {\n    source,\n    shape\n  });\n  if (!position) {\n    return;\n  }\n  assign(shape, {\n    x: position.x - round(shape.width / 2),\n    y: position.y - round(shape.height / 2)\n  });\n  const connectionCreateAllowed = rules.allowed('connection.create', {\n    source,\n    target: shape,\n    hints: {\n      targetParent: source.parent\n    }\n  });\n  let connection = null;\n  if (connectionCreateAllowed) {\n    connection = elementFactory.createConnection(connectionCreateAllowed);\n    connection.waypoints = layouter.layoutConnection(connection, {\n      source,\n      target: shape\n    });\n    connection.waypoints = connectionDocking.getCroppedWaypoints(connection, source, shape);\n  }\n  complexPreview.create({\n    created: [shape, connection].filter(element => !isNil(element))\n  });\n};\nAppendPreview.prototype.cleanUp = function () {\n  this._complexPreview.cleanUp();\n};\nAppendPreview.$inject = ['complexPreview', 'connectionDocking', 'elementFactory', 'eventBus', 'layouter', 'rules'];","map":{"version":3,"names":["assign","isNil","round","Math","AppendPreview","complexPreview","connectionDocking","elementFactory","eventBus","layouter","rules","_complexPreview","_connectionDocking","_elementFactory","_eventBus","_layouter","_rules","prototype","create","source","type","options","shape","createShape","position","fire","x","width","y","height","connectionCreateAllowed","allowed","target","hints","targetParent","parent","connection","createConnection","waypoints","layoutConnection","getCroppedWaypoints","created","filter","element","cleanUp","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/append-preview/AppendPreview.js"],"sourcesContent":["import {\n  assign,\n  isNil\n} from 'min-dash';\n\nconst round = Math.round;\n\n/**\n * @typedef {import('diagram-js/lib/features/complex-preview/ComplexPreview').default} ComplexPreview\n * @typedef {import('diagram-js/lib/layout/ConnectionDocking').default} ConnectionDocking\n * @typedef {import('../modeling/ElementFactory').default} ElementFactory\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../modeling/BpmnLayouter').default} BpmnLayouter\n * @typedef {import('diagram-js/lib/features/rules/Rules').default} Rules\n *\n * @typedef {import('../../model/Types').Shape} Shape\n */\n\n/**\n * A preview for appending.\n *\n * @param {ComplexPreview} complexPreview\n * @param {ConnectionDocking} connectionDocking\n * @param {ElementFactory} elementFactory\n * @param {EventBus} eventBus\n * @param {BpmnLayouter} layouter\n * @param {Rules} rules\n */\nexport default function AppendPreview(complexPreview, connectionDocking, elementFactory, eventBus, layouter, rules) {\n  this._complexPreview = complexPreview;\n  this._connectionDocking = connectionDocking;\n  this._elementFactory = elementFactory;\n  this._eventBus = eventBus;\n  this._layouter = layouter;\n  this._rules = rules;\n}\n\n/**\n * Create a preview of appending a shape of the given type to the given source.\n *\n * @param {Shape} source\n * @param {string} type\n * @param {Partial<Shape>} options\n */\nAppendPreview.prototype.create = function(source, type, options) {\n  const complexPreview = this._complexPreview,\n        connectionDocking = this._connectionDocking,\n        elementFactory = this._elementFactory,\n        eventBus = this._eventBus,\n        layouter = this._layouter,\n        rules = this._rules;\n\n  const shape = elementFactory.createShape(assign({ type }, options));\n\n  const position = eventBus.fire('autoPlace', {\n    source,\n    shape\n  });\n\n  if (!position) {\n    return;\n  }\n\n  assign(shape, {\n    x: position.x - round(shape.width / 2),\n    y: position.y - round(shape.height / 2)\n  });\n\n  const connectionCreateAllowed = rules.allowed('connection.create', {\n    source,\n    target: shape,\n    hints: {\n      targetParent: source.parent\n    }\n  });\n\n  let connection = null;\n\n  if (connectionCreateAllowed) {\n    connection = elementFactory.createConnection(connectionCreateAllowed);\n\n    connection.waypoints = layouter.layoutConnection(connection, {\n      source,\n      target: shape\n    });\n\n    connection.waypoints = connectionDocking.getCroppedWaypoints(connection, source, shape);\n  }\n\n  complexPreview.create({\n    created: [\n      shape,\n      connection\n    ].filter((element) => !isNil(element))\n  });\n};\n\nAppendPreview.prototype.cleanUp = function() {\n  this._complexPreview.cleanUp();\n};\n\nAppendPreview.$inject = [\n  'complexPreview',\n  'connectionDocking',\n  'elementFactory',\n  'eventBus',\n  'layouter',\n  'rules'\n];"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}