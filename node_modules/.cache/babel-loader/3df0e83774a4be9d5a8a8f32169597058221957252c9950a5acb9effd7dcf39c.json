{"ast":null,"code":"import { mid, setSnapped } from 'diagram-js/lib/features/snapping/SnapUtil';\nimport { isCmd } from 'diagram-js/lib/features/keyboard/KeyboardUtil';\nimport { getOrientation } from 'diagram-js/lib/layout/LayoutUtil';\nimport { is } from '../../util/ModelUtil';\nimport { isAny } from '../modeling/util/ModelingUtil';\nimport { some } from 'min-dash';\n\n/**\r\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\r\n *\r\n * @typedef {import('diagram-js/lib/core/EventBus').Event} Event\r\n *\r\n * @typedef {import('../../model/Types').Shape} Shape\r\n *\r\n * @typedef {import('diagram-js/lib/util/Types').Axis} Axis\r\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\r\n */\n\nvar HIGHER_PRIORITY = 1250;\nvar BOUNDARY_TO_HOST_THRESHOLD = 40;\nvar TARGET_BOUNDS_PADDING = 20,\n  TASK_BOUNDS_PADDING = 10;\nvar TARGET_CENTER_PADDING = 20;\nvar AXES = ['x', 'y'];\nvar abs = Math.abs;\n\n/**\r\n * Snap during connect.\r\n *\r\n * @param {EventBus} eventBus\r\n */\nexport default function BpmnConnectSnapping(eventBus) {\n  eventBus.on(['connect.hover', 'connect.move', 'connect.end'], HIGHER_PRIORITY, function (event) {\n    var context = event.context,\n      canExecute = context.canExecute,\n      start = context.start,\n      hover = context.hover,\n      source = context.source,\n      target = context.target;\n\n    // do NOT snap on CMD\n    if (event.originalEvent && isCmd(event.originalEvent)) {\n      return;\n    }\n    if (!context.initialConnectionStart) {\n      context.initialConnectionStart = context.connectionStart;\n    }\n\n    // snap hover\n    if (canExecute && hover) {\n      snapToShape(event, hover, getTargetBoundsPadding(hover));\n    }\n    if (hover && isAnyType(canExecute, ['bpmn:Association', 'bpmn:DataInputAssociation', 'bpmn:DataOutputAssociation', 'bpmn:SequenceFlow'])) {\n      context.connectionStart = mid(start);\n\n      // snap hover\n      if (isAny(hover, ['bpmn:Event', 'bpmn:Gateway'])) {\n        snapToPosition(event, mid(hover));\n      }\n\n      // snap hover\n      if (isAny(hover, ['bpmn:Task', 'bpmn:SubProcess'])) {\n        snapToTargetMid(event, hover);\n      }\n\n      // snap source and target\n      if (is(source, 'bpmn:BoundaryEvent') && target === source.host) {\n        snapBoundaryEventLoop(event);\n      }\n    } else if (isType(canExecute, 'bpmn:MessageFlow')) {\n      if (is(start, 'bpmn:Event')) {\n        // snap start\n        context.connectionStart = mid(start);\n      }\n      if (is(hover, 'bpmn:Event')) {\n        // snap hover\n        snapToPosition(event, mid(hover));\n      }\n    } else {\n      // un-snap source\n      context.connectionStart = context.initialConnectionStart;\n    }\n  });\n}\nBpmnConnectSnapping.$inject = ['eventBus'];\n\n// helpers //////////\n\n/**\r\n * Snap to the given target if the event is inside the bounds of the target.\r\n *\r\n * @param {Event} event\r\n * @param {Shape} target\r\n * @param {number} padding\r\n */\nfunction snapToShape(event, target, padding) {\n  AXES.forEach(function (axis) {\n    var dimensionForAxis = getDimensionForAxis(axis, target);\n    if (event[axis] < target[axis] + padding) {\n      setSnapped(event, axis, target[axis] + padding);\n    } else if (event[axis] > target[axis] + dimensionForAxis - padding) {\n      setSnapped(event, axis, target[axis] + dimensionForAxis - padding);\n    }\n  });\n}\n\n/**\r\n * Snap to the target mid if the event is in the target mid.\r\n *\r\n * @param {Event} event\r\n * @param {Shape} target\r\n */\nfunction snapToTargetMid(event, target) {\n  var targetMid = mid(target);\n  AXES.forEach(function (axis) {\n    if (isMid(event, target, axis)) {\n      setSnapped(event, axis, targetMid[axis]);\n    }\n  });\n}\n\n/**\r\n * Snap to prevent a loop overlapping a boundary event.\r\n *\r\n * @param {Event} event\r\n */\nfunction snapBoundaryEventLoop(event) {\n  var context = event.context,\n    source = context.source,\n    target = context.target;\n  if (isReverse(context)) {\n    return;\n  }\n  var sourceMid = mid(source),\n    orientation = getOrientation(sourceMid, target, -10),\n    axes = [];\n  if (/top|bottom/.test(orientation)) {\n    axes.push('x');\n  }\n  if (/left|right/.test(orientation)) {\n    axes.push('y');\n  }\n  axes.forEach(function (axis) {\n    var coordinate = event[axis],\n      newCoordinate;\n    if (abs(coordinate - sourceMid[axis]) < BOUNDARY_TO_HOST_THRESHOLD) {\n      if (coordinate > sourceMid[axis]) {\n        newCoordinate = sourceMid[axis] + BOUNDARY_TO_HOST_THRESHOLD;\n      } else {\n        newCoordinate = sourceMid[axis] - BOUNDARY_TO_HOST_THRESHOLD;\n      }\n      setSnapped(event, axis, newCoordinate);\n    }\n  });\n}\n\n/**\r\n * @param {Event} event\r\n * @param {Point} position\r\n */\nfunction snapToPosition(event, position) {\n  setSnapped(event, 'x', position.x);\n  setSnapped(event, 'y', position.y);\n}\nfunction isType(attrs, type) {\n  return attrs && attrs.type === type;\n}\nfunction isAnyType(attrs, types) {\n  return some(types, function (type) {\n    return isType(attrs, type);\n  });\n}\n\n/**\r\n * @param {Axis} axis\r\n * @param {Shape} element\r\n *\r\n * @return {number}\r\n */\nfunction getDimensionForAxis(axis, element) {\n  return axis === 'x' ? element.width : element.height;\n}\n\n/**\r\n * @param {Shape} target\r\n *\r\n * @return {number}\r\n */\nfunction getTargetBoundsPadding(target) {\n  if (is(target, 'bpmn:Task')) {\n    return TASK_BOUNDS_PADDING;\n  } else {\n    return TARGET_BOUNDS_PADDING;\n  }\n}\n\n/**\r\n * @param {Event} event\r\n * @param {Shape} target\r\n * @param {Axis} axis\r\n *\r\n * @return {boolean}\r\n */\nfunction isMid(event, target, axis) {\n  return event[axis] > target[axis] + TARGET_CENTER_PADDING && event[axis] < target[axis] + getDimensionForAxis(axis, target) - TARGET_CENTER_PADDING;\n}\nfunction isReverse(context) {\n  var hover = context.hover,\n    source = context.source;\n  return hover && source && hover === source;\n}","map":{"version":3,"names":["mid","setSnapped","isCmd","getOrientation","is","isAny","some","HIGHER_PRIORITY","BOUNDARY_TO_HOST_THRESHOLD","TARGET_BOUNDS_PADDING","TASK_BOUNDS_PADDING","TARGET_CENTER_PADDING","AXES","abs","Math","BpmnConnectSnapping","eventBus","on","event","context","canExecute","start","hover","source","target","originalEvent","initialConnectionStart","connectionStart","snapToShape","getTargetBoundsPadding","isAnyType","snapToPosition","snapToTargetMid","host","snapBoundaryEventLoop","isType","$inject","padding","forEach","axis","dimensionForAxis","getDimensionForAxis","targetMid","isMid","isReverse","sourceMid","orientation","axes","test","push","coordinate","newCoordinate","position","x","y","attrs","type","types","element","width","height"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/snapping/BpmnConnectSnapping.js"],"sourcesContent":["import {\r\n  mid,\r\n  setSnapped\r\n} from 'diagram-js/lib/features/snapping/SnapUtil';\r\n\r\nimport { isCmd } from 'diagram-js/lib/features/keyboard/KeyboardUtil';\r\n\r\nimport {\r\n  getOrientation\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport { is } from '../../util/ModelUtil';\r\n\r\nimport { isAny } from '../modeling/util/ModelingUtil';\r\n\r\nimport { some } from 'min-dash';\r\n\r\n/**\r\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\r\n *\r\n * @typedef {import('diagram-js/lib/core/EventBus').Event} Event\r\n *\r\n * @typedef {import('../../model/Types').Shape} Shape\r\n *\r\n * @typedef {import('diagram-js/lib/util/Types').Axis} Axis\r\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\r\n */\r\n\r\nvar HIGHER_PRIORITY = 1250;\r\n\r\nvar BOUNDARY_TO_HOST_THRESHOLD = 40;\r\n\r\nvar TARGET_BOUNDS_PADDING = 20,\r\n    TASK_BOUNDS_PADDING = 10;\r\n\r\nvar TARGET_CENTER_PADDING = 20;\r\n\r\nvar AXES = [ 'x', 'y' ];\r\n\r\nvar abs = Math.abs;\r\n\r\n/**\r\n * Snap during connect.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function BpmnConnectSnapping(eventBus) {\r\n  eventBus.on([\r\n    'connect.hover',\r\n    'connect.move',\r\n    'connect.end',\r\n  ], HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        canExecute = context.canExecute,\r\n        start = context.start,\r\n        hover = context.hover,\r\n        source = context.source,\r\n        target = context.target;\r\n\r\n    // do NOT snap on CMD\r\n    if (event.originalEvent && isCmd(event.originalEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (!context.initialConnectionStart) {\r\n      context.initialConnectionStart = context.connectionStart;\r\n    }\r\n\r\n    // snap hover\r\n    if (canExecute && hover) {\r\n      snapToShape(event, hover, getTargetBoundsPadding(hover));\r\n    }\r\n\r\n    if (hover && isAnyType(canExecute, [\r\n      'bpmn:Association',\r\n      'bpmn:DataInputAssociation',\r\n      'bpmn:DataOutputAssociation',\r\n      'bpmn:SequenceFlow'\r\n    ])) {\r\n      context.connectionStart = mid(start);\r\n\r\n      // snap hover\r\n      if (isAny(hover, [ 'bpmn:Event', 'bpmn:Gateway' ])) {\r\n        snapToPosition(event, mid(hover));\r\n      }\r\n\r\n      // snap hover\r\n      if (isAny(hover, [ 'bpmn:Task', 'bpmn:SubProcess' ])) {\r\n        snapToTargetMid(event, hover);\r\n      }\r\n\r\n      // snap source and target\r\n      if (is(source, 'bpmn:BoundaryEvent') && target === source.host) {\r\n        snapBoundaryEventLoop(event);\r\n      }\r\n\r\n    } else if (isType(canExecute, 'bpmn:MessageFlow')) {\r\n\r\n      if (is(start, 'bpmn:Event')) {\r\n\r\n        // snap start\r\n        context.connectionStart = mid(start);\r\n      }\r\n\r\n      if (is(hover, 'bpmn:Event')) {\r\n\r\n        // snap hover\r\n        snapToPosition(event, mid(hover));\r\n      }\r\n\r\n    } else {\r\n\r\n      // un-snap source\r\n      context.connectionStart = context.initialConnectionStart;\r\n    }\r\n  });\r\n}\r\n\r\nBpmnConnectSnapping.$inject = [ 'eventBus' ];\r\n\r\n\r\n// helpers //////////\r\n\r\n/**\r\n * Snap to the given target if the event is inside the bounds of the target.\r\n *\r\n * @param {Event} event\r\n * @param {Shape} target\r\n * @param {number} padding\r\n */\r\nfunction snapToShape(event, target, padding) {\r\n  AXES.forEach(function(axis) {\r\n    var dimensionForAxis = getDimensionForAxis(axis, target);\r\n\r\n    if (event[ axis ] < target[ axis ] + padding) {\r\n      setSnapped(event, axis, target[ axis ] + padding);\r\n    } else if (event[ axis ] > target[ axis ] + dimensionForAxis - padding) {\r\n      setSnapped(event, axis, target[ axis ] + dimensionForAxis - padding);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Snap to the target mid if the event is in the target mid.\r\n *\r\n * @param {Event} event\r\n * @param {Shape} target\r\n */\r\nfunction snapToTargetMid(event, target) {\r\n  var targetMid = mid(target);\r\n\r\n  AXES.forEach(function(axis) {\r\n    if (isMid(event, target, axis)) {\r\n      setSnapped(event, axis, targetMid[ axis ]);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Snap to prevent a loop overlapping a boundary event.\r\n *\r\n * @param {Event} event\r\n */\r\nfunction snapBoundaryEventLoop(event) {\r\n  var context = event.context,\r\n      source = context.source,\r\n      target = context.target;\r\n\r\n  if (isReverse(context)) {\r\n    return;\r\n  }\r\n\r\n  var sourceMid = mid(source),\r\n      orientation = getOrientation(sourceMid, target, -10),\r\n      axes = [];\r\n\r\n  if (/top|bottom/.test(orientation)) {\r\n    axes.push('x');\r\n  }\r\n\r\n  if (/left|right/.test(orientation)) {\r\n    axes.push('y');\r\n  }\r\n\r\n  axes.forEach(function(axis) {\r\n    var coordinate = event[ axis ], newCoordinate;\r\n\r\n    if (abs(coordinate - sourceMid[ axis ]) < BOUNDARY_TO_HOST_THRESHOLD) {\r\n      if (coordinate > sourceMid[ axis ]) {\r\n        newCoordinate = sourceMid[ axis ] + BOUNDARY_TO_HOST_THRESHOLD;\r\n      }\r\n      else {\r\n        newCoordinate = sourceMid[ axis ] - BOUNDARY_TO_HOST_THRESHOLD;\r\n      }\r\n\r\n      setSnapped(event, axis, newCoordinate);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * @param {Event} event\r\n * @param {Point} position\r\n */\r\nfunction snapToPosition(event, position) {\r\n  setSnapped(event, 'x', position.x);\r\n  setSnapped(event, 'y', position.y);\r\n}\r\n\r\nfunction isType(attrs, type) {\r\n  return attrs && attrs.type === type;\r\n}\r\n\r\nfunction isAnyType(attrs, types) {\r\n  return some(types, function(type) {\r\n    return isType(attrs, type);\r\n  });\r\n}\r\n\r\n/**\r\n * @param {Axis} axis\r\n * @param {Shape} element\r\n *\r\n * @return {number}\r\n */\r\nfunction getDimensionForAxis(axis, element) {\r\n  return axis === 'x' ? element.width : element.height;\r\n}\r\n\r\n/**\r\n * @param {Shape} target\r\n *\r\n * @return {number}\r\n */\r\nfunction getTargetBoundsPadding(target) {\r\n  if (is(target, 'bpmn:Task')) {\r\n    return TASK_BOUNDS_PADDING;\r\n  } else {\r\n    return TARGET_BOUNDS_PADDING;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Event} event\r\n * @param {Shape} target\r\n * @param {Axis} axis\r\n *\r\n * @return {boolean}\r\n */\r\nfunction isMid(event, target, axis) {\r\n  return event[ axis ] > target[ axis ] + TARGET_CENTER_PADDING\r\n    && event[ axis ] < target[ axis ] + getDimensionForAxis(axis, target) - TARGET_CENTER_PADDING;\r\n}\r\n\r\nfunction isReverse(context) {\r\n  var hover = context.hover,\r\n      source = context.source;\r\n\r\n  return hover && source && hover === source;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}