{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil';\nimport { isLabel } from '../../../util/LabelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\n * @typedef {import('didi').Injector} Injector\n * @typedef {import('../Modeling').default} Modeling\n *\n * @typedef {import('../../../model/Types').Moddle} Moddle\n */\n\n/**\n * Unclaims model IDs on element deletion.\n *\n * @param {Canvas} canvas\n * @param {Injector} injector\n * @param {Moddle} moddle\n * @param {Modeling} modeling\n */\nexport default function UnclaimIdBehavior(canvas, injector, moddle, modeling) {\n  injector.invoke(CommandInterceptor, this);\n  this.preExecute('shape.delete', function (event) {\n    var context = event.context,\n      shape = context.shape,\n      shapeBo = shape.businessObject;\n    if (isLabel(shape)) {\n      return;\n    }\n    if (is(shape, 'bpmn:Participant') && isExpanded(shape)) {\n      moddle.ids.unclaim(shapeBo.processRef.id);\n    }\n    modeling.unclaimId(shapeBo.id, shapeBo);\n  });\n  this.preExecute('connection.delete', function (event) {\n    var context = event.context,\n      connection = context.connection,\n      connectionBo = connection.businessObject;\n    modeling.unclaimId(connectionBo.id, connectionBo);\n  });\n  this.preExecute('canvas.updateRoot', function () {\n    var rootElement = canvas.getRootElement(),\n      rootElementBo = rootElement.businessObject;\n    if (is(rootElement, 'bpmn:Collaboration')) {\n      moddle.ids.unclaim(rootElementBo.id);\n    }\n  });\n}\ninherits(UnclaimIdBehavior, CommandInterceptor);\nUnclaimIdBehavior.$inject = ['canvas', 'injector', 'moddle', 'modeling'];","map":{"version":3,"names":["inherits","CommandInterceptor","is","isExpanded","isLabel","UnclaimIdBehavior","canvas","injector","moddle","modeling","invoke","preExecute","event","context","shape","shapeBo","businessObject","ids","unclaim","processRef","id","unclaimId","connection","connectionBo","rootElement","getRootElement","rootElementBo","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/UnclaimIdBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil';\nimport { isLabel } from '../../../util/LabelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\n * @typedef {import('didi').Injector} Injector\n * @typedef {import('../Modeling').default} Modeling\n *\n * @typedef {import('../../../model/Types').Moddle} Moddle\n */\n\n/**\n * Unclaims model IDs on element deletion.\n *\n * @param {Canvas} canvas\n * @param {Injector} injector\n * @param {Moddle} moddle\n * @param {Modeling} modeling\n */\nexport default function UnclaimIdBehavior(canvas, injector, moddle, modeling) {\n  injector.invoke(CommandInterceptor, this);\n\n  this.preExecute('shape.delete', function(event) {\n    var context = event.context,\n        shape = context.shape,\n        shapeBo = shape.businessObject;\n\n    if (isLabel(shape)) {\n      return;\n    }\n\n    if (is(shape, 'bpmn:Participant') && isExpanded(shape)) {\n      moddle.ids.unclaim(shapeBo.processRef.id);\n    }\n\n    modeling.unclaimId(shapeBo.id, shapeBo);\n  });\n\n\n  this.preExecute('connection.delete', function(event) {\n    var context = event.context,\n        connection = context.connection,\n        connectionBo = connection.businessObject;\n\n    modeling.unclaimId(connectionBo.id, connectionBo);\n  });\n\n  this.preExecute('canvas.updateRoot', function() {\n    var rootElement = canvas.getRootElement(),\n        rootElementBo = rootElement.businessObject;\n\n    if (is(rootElement, 'bpmn:Collaboration')) {\n      moddle.ids.unclaim(rootElementBo.id);\n    }\n  });\n}\n\ninherits(UnclaimIdBehavior, CommandInterceptor);\n\nUnclaimIdBehavior.$inject = [ 'canvas', 'injector', 'moddle', 'modeling' ];"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,kBAAkB;AAEvC,OAAOC,kBAAkB,MAAM,2CAA2C;AAE1E,SAASC,EAAE,QAAQ,yBAAyB;AAC5C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,OAAO,QAAQ,yBAAyB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iBAAiBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,EAAE;EAC5EF,QAAQ,CAACG,MAAM,CAACT,kBAAkB,EAAE,IAAI,CAAC;EAEzC,IAAI,CAACU,UAAU,CAAC,cAAc,EAAE,UAASC,KAAK,EAAE;IAC9C,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;MACvBC,KAAK,GAAGD,OAAO,CAACC,KAAK;MACrBC,OAAO,GAAGD,KAAK,CAACE,cAAc;IAElC,IAAIZ,OAAO,CAACU,KAAK,CAAC,EAAE;MAClB;IACF;IAEA,IAAIZ,EAAE,CAACY,KAAK,EAAE,kBAAkB,CAAC,IAAIX,UAAU,CAACW,KAAK,CAAC,EAAE;MACtDN,MAAM,CAACS,GAAG,CAACC,OAAO,CAACH,OAAO,CAACI,UAAU,CAACC,EAAE,CAAC;IAC3C;IAEAX,QAAQ,CAACY,SAAS,CAACN,OAAO,CAACK,EAAE,EAAEL,OAAO,CAAC;EACzC,CAAC,CAAC;EAGF,IAAI,CAACJ,UAAU,CAAC,mBAAmB,EAAE,UAASC,KAAK,EAAE;IACnD,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;MACvBS,UAAU,GAAGT,OAAO,CAACS,UAAU;MAC/BC,YAAY,GAAGD,UAAU,CAACN,cAAc;IAE5CP,QAAQ,CAACY,SAAS,CAACE,YAAY,CAACH,EAAE,EAAEG,YAAY,CAAC;EACnD,CAAC,CAAC;EAEF,IAAI,CAACZ,UAAU,CAAC,mBAAmB,EAAE,YAAW;IAC9C,IAAIa,WAAW,GAAGlB,MAAM,CAACmB,cAAc,CAAC,CAAC;MACrCC,aAAa,GAAGF,WAAW,CAACR,cAAc;IAE9C,IAAId,EAAE,CAACsB,WAAW,EAAE,oBAAoB,CAAC,EAAE;MACzChB,MAAM,CAACS,GAAG,CAACC,OAAO,CAACQ,aAAa,CAACN,EAAE,CAAC;IACtC;EACF,CAAC,CAAC;AACJ;AAEApB,QAAQ,CAACK,iBAAiB,EAAEJ,kBAAkB,CAAC;AAE/CI,iBAAiB,CAACsB,OAAO,GAAG,CAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}