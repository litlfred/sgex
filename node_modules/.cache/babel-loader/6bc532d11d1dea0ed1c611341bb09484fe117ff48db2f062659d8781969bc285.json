{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/runner/work/sgex/sgex/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject0;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst code_1 = require(\"../../vocabularies/code\");\nconst errors_1 = require(\"../errors\");\nfunction macroKeywordCode(cxt, def) {\n  const {\n    gen,\n    keyword,\n    schema,\n    parentSchema,\n    it\n  } = cxt;\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n  const schemaRef = useKeyword(gen, keyword, macroSchema);\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true);\n  const valid = gen.name(\"valid\");\n  cxt.subschema({\n    schema: macroSchema,\n    schemaPath: codegen_1.nil,\n    errSchemaPath: \"\".concat(it.errSchemaPath, \"/\").concat(keyword),\n    topSchemaRef: schemaRef,\n    compositeRule: true\n  }, valid);\n  cxt.pass(valid, () => cxt.error(true));\n}\nexports.macroKeywordCode = macroKeywordCode;\nfunction funcKeywordCode(cxt, def) {\n  var _a;\n  const {\n    gen,\n    keyword,\n    schema,\n    parentSchema,\n    $data,\n    it\n  } = cxt;\n  checkAsyncKeyword(it, def);\n  const validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n  const validateRef = useKeyword(gen, keyword, validate);\n  const valid = gen.let(\"valid\");\n  cxt.block$data(valid, validateKeyword);\n  cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n  function validateKeyword() {\n    if (def.errors === false) {\n      assignValid();\n      if (def.modifying) modifyData(cxt);\n      reportErrs(() => cxt.error());\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync();\n      if (def.modifying) modifyData(cxt);\n      reportErrs(() => addErrs(cxt, ruleErrs));\n    }\n  }\n  function validateAsync() {\n    const ruleErrs = gen.let(\"ruleErrs\", null);\n    gen.try(() => assignValid((0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"await \"])))), e => gen.assign(valid, false).if((0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \" instanceof \", \"\"])), e, it.ValidationError), () => gen.assign(ruleErrs, (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \".errors\"])), e)), () => gen.throw(e)));\n    return ruleErrs;\n  }\n  function validateSync() {\n    const validateErrs = (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \".errors\"])), validateRef);\n    gen.assign(validateErrs, null);\n    assignValid(codegen_1.nil);\n    return validateErrs;\n  }\n  function assignValid() {\n    let _await = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : def.async ? (0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"await \"]))) : codegen_1.nil;\n    const passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n    const passSchema = !(\"compile\" in def && !$data || def.schema === false);\n    gen.assign(valid, (0, codegen_1._)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\", \"\", \"\"])), _await, (0, code_1.callValidateCode)(cxt, validateRef, passCxt, passSchema)), def.modifying);\n  }\n  function reportErrs(errors) {\n    var _a;\n    gen.if((0, codegen_1.not)((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n  }\n}\nexports.funcKeywordCode = funcKeywordCode;\nfunction modifyData(cxt) {\n  const {\n    gen,\n    data,\n    it\n  } = cxt;\n  gen.if(it.parentData, () => gen.assign(data, (0, codegen_1._)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \"[\", \"]\"])), it.parentData, it.parentDataProperty)));\n}\nfunction addErrs(cxt, errs) {\n  const {\n    gen\n  } = cxt;\n  gen.if((0, codegen_1._)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"Array.isArray(\", \")\"])), errs), () => {\n    gen.assign(names_1.default.vErrors, (0, codegen_1._)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\", \" === null ? \", \" : \", \".concat(\", \")\"])), names_1.default.vErrors, errs, names_1.default.vErrors, errs)).assign(names_1.default.errors, (0, codegen_1._)(_templateObject0 || (_templateObject0 = _taggedTemplateLiteral([\"\", \".length\"])), names_1.default.vErrors));\n    (0, errors_1.extendErrors)(cxt);\n  }, () => cxt.error());\n}\nfunction checkAsyncKeyword(_ref, def) {\n  let {\n    schemaEnv\n  } = _ref;\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\");\n}\nfunction useKeyword(gen, keyword, result) {\n  if (result === undefined) throw new Error(\"keyword \\\"\".concat(keyword, \"\\\" failed to compile\"));\n  return gen.scopeValue(\"keyword\", typeof result == \"function\" ? {\n    ref: result\n  } : {\n    ref: result,\n    code: (0, codegen_1.stringify)(result)\n  });\n}\nfunction validSchemaType(schema, schemaType) {\n  let allowUndefined = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // TODO add tests\n  return !schemaType.length || schemaType.some(st => st === \"array\" ? Array.isArray(schema) : st === \"object\" ? schema && typeof schema == \"object\" && !Array.isArray(schema) : typeof schema == st || allowUndefined && typeof schema == \"undefined\");\n}\nexports.validSchemaType = validSchemaType;\nfunction validateKeywordUsage(_ref2, def, keyword) {\n  let {\n    schema,\n    opts,\n    self,\n    errSchemaPath\n  } = _ref2;\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\");\n  }\n  const deps = def.dependencies;\n  if (deps === null || deps === void 0 ? void 0 : deps.some(kwd => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(\"parent schema must have dependencies of \".concat(keyword, \": \").concat(deps.join(\",\")));\n  }\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword]);\n    if (!valid) {\n      const msg = \"keyword \\\"\".concat(keyword, \"\\\" value is invalid at path \\\"\").concat(errSchemaPath, \"\\\": \") + self.errorsText(def.validateSchema.errors);\n      if (opts.validateSchema === \"log\") self.logger.error(msg);else throw new Error(msg);\n    }\n  }\n}\nexports.validateKeywordUsage = validateKeywordUsage;","map":{"version":3,"names":["codegen_1","require","names_1","code_1","errors_1","macroKeywordCode","cxt","def","gen","keyword","schema","parentSchema","it","macroSchema","macro","call","self","schemaRef","useKeyword","opts","validateSchema","valid","name","subschema","schemaPath","nil","errSchemaPath","concat","topSchemaRef","compositeRule","pass","error","exports","funcKeywordCode","$data","checkAsyncKeyword","validate","compile","validateRef","let","block$data","validateKeyword","ok","_a","errors","assignValid","modifying","modifyData","reportErrs","ruleErrs","async","validateAsync","validateSync","addErrs","try","_","_templateObject","_taggedTemplateLiteral","e","assign","if","_templateObject2","ValidationError","_templateObject3","throw","validateErrs","_templateObject4","_await","arguments","length","undefined","_templateObject5","passCxt","passContext","default","this","passSchema","_templateObject6","callValidateCode","not","data","parentData","_templateObject7","parentDataProperty","errs","_templateObject8","vErrors","_templateObject9","_templateObject0","extendErrors","_ref","schemaEnv","$async","Error","result","scopeValue","ref","code","stringify","validSchemaType","schemaType","allowUndefined","some","st","Array","isArray","validateKeywordUsage","_ref2","includes","deps","dependencies","kwd","Object","prototype","hasOwnProperty","join","msg","errorsText","logger"],"sources":["/home/runner/work/sgex/sgex/node_modules/ajv/lib/compile/validate/keyword.ts"],"sourcesContent":["import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}