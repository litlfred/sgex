{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import githubService from'../services/githubService';import{PageLayout,useDAKParams}from'./framework';import'./CoreDataDictionaryViewer.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CoreDataDictionaryViewer=()=>{return/*#__PURE__*/_jsx(PageLayout,{pageName:\"core-data-dictionary-viewer\",children:/*#__PURE__*/_jsx(CoreDataDictionaryViewerContent,{})});};const CoreDataDictionaryViewerContent=()=>{const navigate=useNavigate();const{profile,repository,branch}=useDAKParams();// Get data from URL params\nconst user=profile===null||profile===void 0?void 0:profile.login;const repo=repository===null||repository===void 0?void 0:repository.name;const[fshFiles,setFshFiles]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[selectedFile,setSelectedFile]=useState(null);const[fileContent,setFileContent]=useState('');const[showModal,setShowModal]=useState(false);const[branches,setBranches]=useState([]);const[hasGhPages,setHasGhPages]=useState(false);const[dakFshFile,setDakFshFile]=useState(null);const[dakConcepts,setDakConcepts]=useState([]);const[dakTableSearch,setDakTableSearch]=useState('');const[hasPublishedDak,setHasPublishedDak]=useState(false);const[checkingPublishedDak,setCheckingPublishedDak]=useState(false);// Generate base URL for IG Publisher artifacts\nconst getBaseUrl=useCallback(branchName=>{var _repository$owner;const owner=user||(repository===null||repository===void 0?void 0:(_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login)||(repository===null||repository===void 0?void 0:repository.full_name.split('/')[0]);const repoName=repo||(repository===null||repository===void 0?void 0:repository.name);if(branchName===((repository===null||repository===void 0?void 0:repository.default_branch)||'main')){return`https://${owner}.github.io/${repoName}`;}else{return`https://${owner}.github.io/${repoName}/branches/${branchName}`;}},[user,repository,repo]);// Parse DAK.fsh file to extract concepts\nconst parseDakFshConcepts=useCallback(content=>{const concepts=[];// Split by lines and find concept definitions\nconst lines=content.split('\\n');for(let i=0;i<lines.length;i++){const line=lines[i].trim();// Look for concept definitions: * #code \"display\" \"definition\"\nconst conceptMatch=line.match(/^\\*\\s*#([^\\s\"]+)\\s*\"([^\"]+)\"\\s*\"([^\"]+)\"/);if(conceptMatch){const[,code,display,definition]=conceptMatch;concepts.push({code:code.trim(),display:display.trim(),definition:definition.trim()});}}return concepts;},[]);const handleHomeNavigation=()=>{navigate('/');};const handleBackToDashboard=()=>{if(user&&repo){// Use URL parameters for navigation\nconst dashboardPath=branch?`/dashboard/${user}/${repo}/${branch}`:`/dashboard/${user}/${repo}`;navigate(dashboardPath);}else{// Fallback to state-based navigation\nnavigate('/dashboard',{state:{profile,repository,branch}});}};// Fetch FSH files from input/fsh directory\nuseEffect(()=>{const fetchFshFiles=async()=>{var _repository$owner2;// Support both URL params and state-based data\nconst currentRepository=repository;const currentBranch=branch;const currentUser=user||(repository===null||repository===void 0?void 0:(_repository$owner2=repository.owner)===null||_repository$owner2===void 0?void 0:_repository$owner2.login)||(repository===null||repository===void 0?void 0:repository.full_name.split('/')[0]);const currentRepo=repo||(repository===null||repository===void 0?void 0:repository.name);if(!currentRepository&&(!currentUser||!currentRepo)||!currentBranch){setLoading(false);return;}// Check if published DAK CodeSystem exists\nconst checkPublishedDakExists=async baseUrl=>{try{setCheckingPublishedDak(true);const dakUrl=`${baseUrl}/CodeSystem-DAK.html`;// Use fetch to check if the URL exists (HEAD request would be better but may have CORS issues)\nconst response=await fetch(dakUrl,{method:'HEAD'});return response.ok;}catch(error){console.warn('Error checking published DAK:',error);return false;}finally{setCheckingPublishedDak(false);}};try{setLoading(true);setError(null);// Try to fetch the input/fsh directory\ntry{const fshDirContents=await githubService.getDirectoryContents(currentUser,currentRepo,'input/fsh',currentBranch);// Filter for .fsh files\nconst fshFilesList=fshDirContents.filter(file=>file.name.endsWith('.fsh')&&file.type==='file').map(file=>({name:file.name,path:file.path,download_url:file.download_url,html_url:file.html_url}));setFshFiles(fshFilesList);}catch(err){if(err.status===404){// input/fsh directory doesn't exist\nsetFshFiles([]);}else{throw err;}}// Try to fetch the DAK.fsh file specifically from input/fsh/codesystems/\ntry{const dakFile=await githubService.getDirectoryContents(currentUser,currentRepo,'input/fsh/codesystems',currentBranch);// Look for DAK.fsh file\nconst dakFsh=dakFile.find(file=>file.name==='DAK.fsh'&&file.type==='file');if(dakFsh){setDakFshFile({name:dakFsh.name,path:dakFsh.path,download_url:dakFsh.download_url,html_url:dakFsh.html_url});// Fetch and parse DAK.fsh content for table display\ntry{const dakContent=await githubService.getFileContent(currentUser,currentRepo,dakFsh.path,currentBranch);const concepts=parseDakFshConcepts(dakContent);setDakConcepts(concepts);}catch(contentErr){console.warn('Could not parse DAK.fsh content:',contentErr);setDakConcepts([]);}}else{setDakFshFile(null);setDakConcepts([]);}}catch(err){if(err.status===404){// input/fsh/codesystems directory doesn't exist or no DAK.fsh\nsetDakFshFile(null);setDakConcepts([]);}else{console.warn('Error fetching DAK.fsh:',err);setDakFshFile(null);setDakConcepts([]);}}// Fetch branches to check for gh-pages\nconst allBranches=await githubService.getBranches(currentUser,currentRepo);const branchNames=allBranches.map(b=>b.name);setBranches(branchNames.filter(name=>name!=='gh-pages'));const hasGhPagesVar=branchNames.includes('gh-pages');setHasGhPages(hasGhPagesVar);// Check if published DAK exists if we have gh-pages\nif(hasGhPagesVar){const baseUrl=getBaseUrl(currentBranch);const dakExists=await checkPublishedDakExists(baseUrl);setHasPublishedDak(dakExists);}else{setHasPublishedDak(false);}}catch(err){console.error('Error fetching FSH files:',err);setError('Failed to load Core Data Dictionary files. Please check repository access.');}finally{setLoading(false);}};fetchFshFiles();},[repository,branch,user,repo,getBaseUrl,parseDakFshConcepts]);// Fetch file content for modal display\nconst handleViewSource=async file=>{try{var _repository$owner3;setSelectedFile(file);setFileContent('Loading...');setShowModal(true);const currentUser=user||(repository===null||repository===void 0?void 0:(_repository$owner3=repository.owner)===null||_repository$owner3===void 0?void 0:_repository$owner3.login)||(repository===null||repository===void 0?void 0:repository.full_name.split('/')[0]);const currentRepo=repo||(repository===null||repository===void 0?void 0:repository.name);const currentBranch=branch;const content=await githubService.getFileContent(currentUser,currentRepo,file.path,currentBranch);setFileContent(content);}catch(err){console.error('Error fetching file content:',err);setFileContent('Error loading file content.');}};const closeModal=()=>{setShowModal(false);setSelectedFile(null);setFileContent('');};if(!profile||!repository){navigate('/');return/*#__PURE__*/_jsx(\"div\",{children:\"Redirecting...\"});}if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"core-data-dictionary-viewer loading-state\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Loading Core Data Dictionary...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Fetching FHIR FSH files and repository data...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"core-data-dictionary-viewer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"viewer-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"who-branding\",children:[/*#__PURE__*/_jsx(\"h1\",{onClick:handleHomeNavigation,className:\"clickable-title\",children:\"SGEX Workbench\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"WHO SMART Guidelines Exchange\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:(profile===null||profile===void 0?void 0:profile.avatar_url)||`https://github.com/${user||(profile===null||profile===void 0?void 0:profile.login)}.png`,alt:\"Profile\",className:\"context-avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"context-repo\",children:repo||(repository===null||repository===void 0?void 0:repository.name)}),/*#__PURE__*/_jsx(\"span\",{className:\"context-component\",children:\"Core Data Dictionary\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"viewer-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"breadcrumb-link\",children:\"Select Profile\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(`/dak-selection/${profile.login}`,{state:{profile}}),className:\"breadcrumb-link\",children:\"Select Repository\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBackToDashboard,className:\"breadcrumb-link\",children:\"DAK Components\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:\"Core Data Dictionary\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"viewer-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"component-intro\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"component-icon\",style:{color:'#0078d4'},children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"intro-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Core Data Dictionary Viewer\"}),/*#__PURE__*/_jsx(\"p\",{children:\"View canonical representations of Component 2 Core Data Dictionary including FHIR CodeSystems, ValueSets, and ConceptMaps stored in FSH format.\"}),branch&&/*#__PURE__*/_jsxs(\"div\",{className:\"branch-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Branch:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:branch})]})]})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u26A0\\uFE0F Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error})]}),/*#__PURE__*/_jsx(\"div\",{className:\"documentation-section\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"https://smart.who.int/ig-starter-kit/v1.0.0/\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"documentation-link\",children:\"\\uD83D\\uDCDA WHO IG Starter Kit Documentation \\u2197\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"two-column-layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section standard-dictionaries-section left-column\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Standard Dictionaries\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"subsection\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Code Systems\"}),dakFshFile&&/*#__PURE__*/_jsxs(\"div\",{className:\"dak-source-section\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"DAK Source File (FSH)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dak-source-links\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn primary\",onClick:()=>handleViewSource(dakFshFile),title:\"View DAK.fsh source code with syntax highlighting\",children:\"\\uD83D\\uDCC4 View Source\"}),/*#__PURE__*/_jsx(\"a\",{href:dakFshFile.html_url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"action-btn secondary\",title:\"View DAK.fsh source on GitHub\",children:\"\\uD83D\\uDD17 GitHub Source \\u2197\"})]})]}),hasGhPages?/*#__PURE__*/_jsxs(\"div\",{className:\"dak-published-section\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Published CodeSystem\"}),checkingPublishedDak?/*#__PURE__*/_jsx(\"p\",{className:\"checking-published\",children:\"Checking published version...\"}):hasPublishedDak?/*#__PURE__*/_jsx(\"div\",{className:\"dictionary-links\",children:/*#__PURE__*/_jsx(\"a\",{href:`${getBaseUrl(branch)}/CodeSystem-DAK.html`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"dictionary-link primary\",children:\"\\uD83D\\uDCCA View Published Core Data Dictionary (DAK) \\u2197\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"unpublished-dak\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"disabled-link\",children:\"Core Data Dictionary (DAK)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"unpublished-note\",children:\"\\u26A0\\uFE0F The published version is not yet available. The CodeSystem-DAK.html file has not been published to GitHub Pages.\"})]})]}):/*#__PURE__*/_jsx(\"p\",{className:\"no-publication-note\",children:\"Published CodeSystems will be available once GitHub Pages is configured.\"})]}),dakConcepts.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"subsection\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"DAK Concepts (\",dakConcepts.length,\" total)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"dak-table-controls\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search concepts...\",value:dakTableSearch,onChange:e=>setDakTableSearch(e.target.value),className:\"search-input\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"dak-concepts-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Code\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Display\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Definition\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:dakConcepts.filter(concept=>!dakTableSearch||concept.code.toLowerCase().includes(dakTableSearch.toLowerCase())||concept.display.toLowerCase().includes(dakTableSearch.toLowerCase())||concept.definition.toLowerCase().includes(dakTableSearch.toLowerCase())).map((concept,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"concept-code\",children:concept.code}),/*#__PURE__*/_jsx(\"td\",{className:\"concept-display\",children:concept.display}),/*#__PURE__*/_jsx(\"td\",{className:\"concept-definition\",children:concept.definition})]},index))})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"subsection\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Value Sets\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"placeholder-links\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"placeholder-link\",children:\"Actors (Coming Soon)\"}),/*#__PURE__*/_jsx(\"span\",{className:\"placeholder-link\",children:\"Workflows (Coming Soon)\"}),/*#__PURE__*/_jsx(\"span\",{className:\"placeholder-link\",children:\"Decision Tables (Coming Soon)\"})]})]})]}),hasGhPages?/*#__PURE__*/_jsxs(\"div\",{className:\"section publications-section right-column\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Publications\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Published FHIR Implementation Guide artifacts generated by the IG Publisher\"}),branches.sort().map(branchName=>/*#__PURE__*/_jsxs(\"div\",{className:\"branch-publication\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Branch: \",/*#__PURE__*/_jsx(\"code\",{children:branchName})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"artifact-links\",children:[/*#__PURE__*/_jsx(\"a\",{href:`${getBaseUrl(branchName)}/artifacts.html#terminology-code-systems`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"artifact-link\",children:\"Code Systems \\u2197\"}),/*#__PURE__*/_jsx(\"a\",{href:`${getBaseUrl(branchName)}/artifacts.html#terminology-value-sets`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"artifact-link\",children:\"Value Sets \\u2197\"}),/*#__PURE__*/_jsx(\"a\",{href:`${getBaseUrl(branchName)}/artifacts.html#structures-logical-models`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"artifact-link\",children:\"Logical Models \\u2197\"}),/*#__PURE__*/_jsx(\"a\",{href:`${getBaseUrl(branchName)}/artifacts.html#terminology-concept-maps`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"artifact-link\",children:\"Concept Maps \\u2197\"})]})]},branchName))]}):/*#__PURE__*/_jsxs(\"div\",{className:\"section no-publications-section right-column\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Publications\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"no-gh-pages-message\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCCB No published artifacts available\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"This repository does not have a \",/*#__PURE__*/_jsx(\"code\",{children:\"gh-pages\"}),\" branch for publishing FHIR Implementation Guide artifacts.\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section fsh-files-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"FHIR FSH Source Files\"}),/*#__PURE__*/_jsx(\"p\",{children:\"FHIR Shorthand (FSH) files containing CodeSystems, ValueSets, and ConceptMaps\"}),fshFiles.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-files-message\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"No FHIR FSH files found in \",/*#__PURE__*/_jsx(\"code\",{children:\"input/fsh/\"}),\" directory.\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Core Data Dictionary files should be stored in FSH format in this location.\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"fsh-files-grid\",children:fshFiles.map(file=>/*#__PURE__*/_jsxs(\"div\",{className:\"fsh-file-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-icon\",children:\"\\uD83D\\uDCC4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"file-name\",children:file.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn primary\",onClick:()=>handleViewSource(file),title:\"View source code with syntax highlighting\",children:\"View Source\"}),/*#__PURE__*/_jsx(\"a\",{href:file.html_url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"action-btn secondary\",title:\"View source on GitHub\",children:\"GitHub \\u2197\"})]})]},file.path))})]})]})]}),showModal&&selectedFile&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:closeModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedFile.name}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:closeModal,children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:/*#__PURE__*/_jsx(\"pre\",{className:\"fsh-code\",children:/*#__PURE__*/_jsx(\"code\",{children:fileContent})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"a\",{href:selectedFile.html_url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"btn-secondary\",children:\"View on GitHub \\u2197\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",onClick:closeModal,children:\"Close\"})]})]})})]});};export default CoreDataDictionaryViewer;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","githubService","PageLayout","useDAKParams","jsx","_jsx","jsxs","_jsxs","CoreDataDictionaryViewer","pageName","children","CoreDataDictionaryViewerContent","navigate","profile","repository","branch","user","login","repo","name","fshFiles","setFshFiles","loading","setLoading","error","setError","selectedFile","setSelectedFile","fileContent","setFileContent","showModal","setShowModal","branches","setBranches","hasGhPages","setHasGhPages","dakFshFile","setDakFshFile","dakConcepts","setDakConcepts","dakTableSearch","setDakTableSearch","hasPublishedDak","setHasPublishedDak","checkingPublishedDak","setCheckingPublishedDak","getBaseUrl","branchName","_repository$owner","owner","full_name","split","repoName","default_branch","parseDakFshConcepts","content","concepts","lines","i","length","line","trim","conceptMatch","match","code","display","definition","push","handleHomeNavigation","handleBackToDashboard","dashboardPath","state","fetchFshFiles","_repository$owner2","currentRepository","currentBranch","currentUser","currentRepo","checkPublishedDakExists","baseUrl","dakUrl","response","fetch","method","ok","console","warn","fshDirContents","getDirectoryContents","fshFilesList","filter","file","endsWith","type","map","path","download_url","html_url","err","status","dakFile","dakFsh","find","dakContent","getFileContent","contentErr","allBranches","getBranches","branchNames","b","hasGhPagesVar","includes","dakExists","handleViewSource","_repository$owner3","closeModal","className","onClick","src","avatar_url","alt","style","color","href","target","rel","title","placeholder","value","onChange","e","concept","toLowerCase","index","sort","stopPropagation"],"sources":["/home/runner/work/sgex/sgex/src/components/CoreDataDictionaryViewer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport { PageLayout, useDAKParams } from './framework';\nimport './CoreDataDictionaryViewer.css';\n\nconst CoreDataDictionaryViewer = () => {\n  return (\n    <PageLayout pageName=\"core-data-dictionary-viewer\">\n      <CoreDataDictionaryViewerContent />\n    </PageLayout>\n  );\n};\n\nconst CoreDataDictionaryViewerContent = () => {\n  const navigate = useNavigate();\n  const { profile, repository, branch } = useDAKParams();\n  \n  // Get data from URL params\n  const user = profile?.login;\n  const repo = repository?.name;\n  \n  const [fshFiles, setFshFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [branches, setBranches] = useState([]);\n  const [hasGhPages, setHasGhPages] = useState(false);\n  const [dakFshFile, setDakFshFile] = useState(null);\n  const [dakConcepts, setDakConcepts] = useState([]);\n  const [dakTableSearch, setDakTableSearch] = useState('');\n  const [hasPublishedDak, setHasPublishedDak] = useState(false);\n  const [checkingPublishedDak, setCheckingPublishedDak] = useState(false);\n\n  // Generate base URL for IG Publisher artifacts\n  const getBaseUrl = useCallback((branchName) => {\n    const owner = user || repository?.owner?.login || repository?.full_name.split('/')[0];\n    const repoName = repo || repository?.name;\n    \n    if (branchName === (repository?.default_branch || 'main')) {\n      return `https://${owner}.github.io/${repoName}`;\n    } else {\n      return `https://${owner}.github.io/${repoName}/branches/${branchName}`;\n    }\n  }, [user, repository, repo]);\n\n  // Parse DAK.fsh file to extract concepts\n  const parseDakFshConcepts = useCallback((content) => {\n    const concepts = [];\n    \n    // Split by lines and find concept definitions\n    const lines = content.split('\\n');\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      \n      // Look for concept definitions: * #code \"display\" \"definition\"\n      const conceptMatch = line.match(/^\\*\\s*#([^\\s\"]+)\\s*\"([^\"]+)\"\\s*\"([^\"]+)\"/);\n      if (conceptMatch) {\n        const [, code, display, definition] = conceptMatch;\n        concepts.push({\n          code: code.trim(),\n          display: display.trim(),\n          definition: definition.trim()\n        });\n      }\n    }\n    \n    return concepts;\n  }, []);\n\n  const handleHomeNavigation = () => {\n    navigate('/');\n  };\n\n  const handleBackToDashboard = () => {\n    if (user && repo) {\n      // Use URL parameters for navigation\n      const dashboardPath = branch ? \n        `/dashboard/${user}/${repo}/${branch}` : \n        `/dashboard/${user}/${repo}`;\n      navigate(dashboardPath);\n    } else {\n      // Fallback to state-based navigation\n      navigate('/dashboard', { \n        state: { \n          profile, \n          repository, \n          branch \n        } \n      });\n    }\n  };\n\n  // Fetch FSH files from input/fsh directory\n  useEffect(() => {\n    const fetchFshFiles = async () => {\n      // Support both URL params and state-based data\n      const currentRepository = repository;\n      const currentBranch = branch;\n      const currentUser = user || repository?.owner?.login || repository?.full_name.split('/')[0];\n      const currentRepo = repo || repository?.name;\n      \n      if ((!currentRepository && (!currentUser || !currentRepo)) || !currentBranch) {\n        setLoading(false);\n        return;\n      }\n\n      // Check if published DAK CodeSystem exists\n      const checkPublishedDakExists = async (baseUrl) => {\n        try {\n          setCheckingPublishedDak(true);\n          const dakUrl = `${baseUrl}/CodeSystem-DAK.html`;\n          \n          // Use fetch to check if the URL exists (HEAD request would be better but may have CORS issues)\n          const response = await fetch(dakUrl, { method: 'HEAD' });\n          return response.ok;\n        } catch (error) {\n          console.warn('Error checking published DAK:', error);\n          return false;\n        } finally {\n          setCheckingPublishedDak(false);\n        }\n      };\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Try to fetch the input/fsh directory\n        try {\n          const fshDirContents = await githubService.getDirectoryContents(\n            currentUser, \n            currentRepo, \n            'input/fsh', \n            currentBranch\n          );\n\n          // Filter for .fsh files\n          const fshFilesList = fshDirContents\n            .filter(file => file.name.endsWith('.fsh') && file.type === 'file')\n            .map(file => ({\n              name: file.name,\n              path: file.path,\n              download_url: file.download_url,\n              html_url: file.html_url\n            }));\n\n          setFshFiles(fshFilesList);\n        } catch (err) {\n          if (err.status === 404) {\n            // input/fsh directory doesn't exist\n            setFshFiles([]);\n          } else {\n            throw err;\n          }\n        }\n\n        // Try to fetch the DAK.fsh file specifically from input/fsh/codesystems/\n        try {\n          const dakFile = await githubService.getDirectoryContents(\n            currentUser,\n            currentRepo,\n            'input/fsh/codesystems',\n            currentBranch\n          );\n          \n          // Look for DAK.fsh file\n          const dakFsh = dakFile.find(file => file.name === 'DAK.fsh' && file.type === 'file');\n          if (dakFsh) {\n            setDakFshFile({\n              name: dakFsh.name,\n              path: dakFsh.path,\n              download_url: dakFsh.download_url,\n              html_url: dakFsh.html_url\n            });\n\n            // Fetch and parse DAK.fsh content for table display\n            try {\n              const dakContent = await githubService.getFileContent(\n                currentUser,\n                currentRepo,\n                dakFsh.path,\n                currentBranch\n              );\n              const concepts = parseDakFshConcepts(dakContent);\n              setDakConcepts(concepts);\n            } catch (contentErr) {\n              console.warn('Could not parse DAK.fsh content:', contentErr);\n              setDakConcepts([]);\n            }\n          } else {\n            setDakFshFile(null);\n            setDakConcepts([]);\n          }\n        } catch (err) {\n          if (err.status === 404) {\n            // input/fsh/codesystems directory doesn't exist or no DAK.fsh\n            setDakFshFile(null);\n            setDakConcepts([]);\n          } else {\n            console.warn('Error fetching DAK.fsh:', err);\n            setDakFshFile(null);\n            setDakConcepts([]);\n          }\n        }\n\n        // Fetch branches to check for gh-pages\n        const allBranches = await githubService.getBranches(currentUser, currentRepo);\n        const branchNames = allBranches.map(b => b.name);\n        setBranches(branchNames.filter(name => name !== 'gh-pages'));\n        const hasGhPagesVar = branchNames.includes('gh-pages');\n        setHasGhPages(hasGhPagesVar);\n\n        // Check if published DAK exists if we have gh-pages\n        if (hasGhPagesVar) {\n          const baseUrl = getBaseUrl(currentBranch);\n          const dakExists = await checkPublishedDakExists(baseUrl);\n          setHasPublishedDak(dakExists);\n        } else {\n          setHasPublishedDak(false);\n        }\n\n      } catch (err) {\n        console.error('Error fetching FSH files:', err);\n        setError('Failed to load Core Data Dictionary files. Please check repository access.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFshFiles();\n  }, [repository, branch, user, repo, getBaseUrl, parseDakFshConcepts]);\n\n  // Fetch file content for modal display\n  const handleViewSource = async (file) => {\n    try {\n      setSelectedFile(file);\n      setFileContent('Loading...');\n      setShowModal(true);\n\n      const currentUser = user || repository?.owner?.login || repository?.full_name.split('/')[0];\n      const currentRepo = repo || repository?.name;\n      const currentBranch = branch;\n      \n      const content = await githubService.getFileContent(\n        currentUser,\n        currentRepo,\n        file.path,\n        currentBranch\n      );\n\n      setFileContent(content);\n    } catch (err) {\n      console.error('Error fetching file content:', err);\n      setFileContent('Error loading file content.');\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedFile(null);\n    setFileContent('');\n  };\n\n  if (!profile || !repository) {\n    navigate('/');\n    return <div>Redirecting...</div>;\n  }\n\n  if (loading) {\n    return (\n      <div className=\"core-data-dictionary-viewer loading-state\">\n        <div className=\"loading-content\">\n          <h2>Loading Core Data Dictionary...</h2>\n          <p>Fetching FHIR FSH files and repository data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"core-data-dictionary-viewer\">\n      <div className=\"viewer-header\">\n        <div className=\"who-branding\">\n          <h1 onClick={handleHomeNavigation} className=\"clickable-title\">SGEX Workbench</h1>\n          <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n        </div>\n        <div className=\"context-info\">\n          <img \n            src={profile?.avatar_url || `https://github.com/${user || profile?.login}.png`} \n            alt=\"Profile\" \n            className=\"context-avatar\" \n          />\n          <div className=\"context-details\">\n            <span className=\"context-repo\">{repo || repository?.name}</span>\n            <span className=\"context-component\">Core Data Dictionary</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"viewer-content\">\n        <div className=\"breadcrumb\">\n          <button onClick={() => navigate('/')} className=\"breadcrumb-link\">\n            Select Profile\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate(`/dak-selection/${profile.login}`, { state: { profile } })} className=\"breadcrumb-link\">\n            Select Repository\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={handleBackToDashboard} className=\"breadcrumb-link\">\n            DAK Components\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <span className=\"breadcrumb-current\">Core Data Dictionary</span>\n        </div>\n\n        <div className=\"viewer-main\">\n          <div className=\"component-intro\">\n            <div className=\"component-icon\" style={{ color: '#0078d4' }}>\n              📊\n            </div>\n            <div className=\"intro-content\">\n              <h2>Core Data Dictionary Viewer</h2>\n              <p>\n                View canonical representations of Component 2 Core Data Dictionary including FHIR CodeSystems, \n                ValueSets, and ConceptMaps stored in FSH format.\n              </p>\n              {branch && (\n                <div className=\"branch-info\">\n                  <strong>Branch:</strong> <code>{branch}</code>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              <h3>⚠️ Error</h3>\n              <p>{error}</p>\n            </div>\n          )}\n\n          {/* Documentation Link */}\n          <div className=\"documentation-section\">\n            <p>\n              <a \n                href=\"https://smart.who.int/ig-starter-kit/v1.0.0/\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"documentation-link\"\n              >\n                📚 WHO IG Starter Kit Documentation ↗\n              </a>\n            </p>\n          </div>\n\n          {/* Main content layout with two columns */}\n          <div className=\"two-column-layout\">\n            {/* Standard Dictionaries Section - Left Column */}\n            <div className=\"section standard-dictionaries-section left-column\">\n              <h3>Standard Dictionaries</h3>\n              \n              <div className=\"subsection\">\n                <h4>Code Systems</h4>\n                \n                {/* DAK Source File Links */}\n                {dakFshFile && (\n                  <div className=\"dak-source-section\">\n                    <h5>DAK Source File (FSH)</h5>\n                    <div className=\"dak-source-links\">\n                      <button \n                        className=\"action-btn primary\"\n                        onClick={() => handleViewSource(dakFshFile)}\n                        title=\"View DAK.fsh source code with syntax highlighting\"\n                      >\n                        📄 View Source\n                      </button>\n                      <a \n                        href={dakFshFile.html_url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"action-btn secondary\"\n                        title=\"View DAK.fsh source on GitHub\"\n                      >\n                        🔗 GitHub Source ↗\n                      </a>\n                    </div>\n                  </div>\n                )}\n\n                {/* Published DAK CodeSystem */}\n                {hasGhPages ? (\n                  <div className=\"dak-published-section\">\n                    <h5>Published CodeSystem</h5>\n                    {checkingPublishedDak ? (\n                      <p className=\"checking-published\">Checking published version...</p>\n                    ) : hasPublishedDak ? (\n                      <div className=\"dictionary-links\">\n                        <a \n                          href={`${getBaseUrl(branch)}/CodeSystem-DAK.html`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"dictionary-link primary\"\n                        >\n                          📊 View Published Core Data Dictionary (DAK) ↗\n                        </a>\n                      </div>\n                    ) : (\n                      <div className=\"unpublished-dak\">\n                        <span className=\"disabled-link\">Core Data Dictionary (DAK)</span>\n                        <p className=\"unpublished-note\">\n                          ⚠️ The published version is not yet available. The CodeSystem-DAK.html file has not been published to GitHub Pages.\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <p className=\"no-publication-note\">\n                    Published CodeSystems will be available once GitHub Pages is configured.\n                  </p>\n                )}\n              </div>\n\n              {/* DAK Concepts Table */}\n              {dakConcepts.length > 0 && (\n                <div className=\"subsection\">\n                  <h4>DAK Concepts ({dakConcepts.length} total)</h4>\n                  <div className=\"dak-table-controls\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search concepts...\"\n                      value={dakTableSearch}\n                      onChange={(e) => setDakTableSearch(e.target.value)}\n                      className=\"search-input\"\n                    />\n                  </div>\n                  <div className=\"dak-concepts-table\">\n                    <table>\n                      <thead>\n                        <tr>\n                          <th>Code</th>\n                          <th>Display</th>\n                          <th>Definition</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {dakConcepts\n                          .filter(concept => \n                            !dakTableSearch || \n                            concept.code.toLowerCase().includes(dakTableSearch.toLowerCase()) ||\n                            concept.display.toLowerCase().includes(dakTableSearch.toLowerCase()) ||\n                            concept.definition.toLowerCase().includes(dakTableSearch.toLowerCase())\n                          )\n                          .map((concept, index) => (\n                            <tr key={index}>\n                              <td className=\"concept-code\">{concept.code}</td>\n                              <td className=\"concept-display\">{concept.display}</td>\n                              <td className=\"concept-definition\">{concept.definition}</td>\n                            </tr>\n                          ))\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"subsection\">\n                <h4>Value Sets</h4>\n                <div className=\"placeholder-links\">\n                  <span className=\"placeholder-link\">Actors (Coming Soon)</span>\n                  <span className=\"placeholder-link\">Workflows (Coming Soon)</span>\n                  <span className=\"placeholder-link\">Decision Tables (Coming Soon)</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Publications Section - Right Column */}\n            {hasGhPages ? (\n              <div className=\"section publications-section right-column\">\n                <h3>Publications</h3>\n                <p>Published FHIR Implementation Guide artifacts generated by the IG Publisher</p>\n                \n                {branches.sort().map((branchName) => (\n                  <div key={branchName} className=\"branch-publication\">\n                    <h4>Branch: <code>{branchName}</code></h4>\n                    <div className=\"artifact-links\">\n                      <a \n                        href={`${getBaseUrl(branchName)}/artifacts.html#terminology-code-systems`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"artifact-link\"\n                      >\n                        Code Systems ↗\n                      </a>\n                      <a \n                        href={`${getBaseUrl(branchName)}/artifacts.html#terminology-value-sets`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"artifact-link\"\n                      >\n                        Value Sets ↗\n                      </a>\n                      <a \n                        href={`${getBaseUrl(branchName)}/artifacts.html#structures-logical-models`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"artifact-link\"\n                      >\n                        Logical Models ↗\n                      </a>\n                      <a \n                        href={`${getBaseUrl(branchName)}/artifacts.html#terminology-concept-maps`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"artifact-link\"\n                      >\n                        Concept Maps ↗\n                      </a>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"section no-publications-section right-column\">\n                <h3>Publications</h3>\n                <div className=\"no-gh-pages-message\">\n                  <p>📋 No published artifacts available</p>\n                  <p>This repository does not have a <code>gh-pages</code> branch for publishing FHIR Implementation Guide artifacts.</p>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* FHIR FSH Files Section */}\n          <div className=\"section fsh-files-section\">\n            <h3>FHIR FSH Source Files</h3>\n            <p>FHIR Shorthand (FSH) files containing CodeSystems, ValueSets, and ConceptMaps</p>\n            \n            {fshFiles.length === 0 ? (\n              <div className=\"no-files-message\">\n                <p>No FHIR FSH files found in <code>input/fsh/</code> directory.</p>\n                <p>Core Data Dictionary files should be stored in FSH format in this location.</p>\n              </div>\n            ) : (\n              <div className=\"fsh-files-grid\">\n                {fshFiles.map((file) => (\n                  <div key={file.path} className=\"fsh-file-card\">\n                    <div className=\"file-header\">\n                      <div className=\"file-icon\">📄</div>\n                      <div className=\"file-name\">{file.name}</div>\n                    </div>\n                    <div className=\"file-actions\">\n                      <button \n                        className=\"action-btn primary\"\n                        onClick={() => handleViewSource(file)}\n                        title=\"View source code with syntax highlighting\"\n                      >\n                        View Source\n                      </button>\n                      <a \n                        href={file.html_url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"action-btn secondary\"\n                        title=\"View source on GitHub\"\n                      >\n                        GitHub ↗\n                      </a>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Source Code Modal */}\n      {showModal && selectedFile && (\n        <div className=\"modal-overlay\" onClick={closeModal}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>{selectedFile.name}</h3>\n              <button className=\"modal-close\" onClick={closeModal}>×</button>\n            </div>\n            <div className=\"modal-body\">\n              <pre className=\"fsh-code\">\n                <code>{fileContent}</code>\n              </pre>\n            </div>\n            <div className=\"modal-footer\">\n              <a \n                href={selectedFile.html_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn-secondary\"\n              >\n                View on GitHub ↗\n              </a>\n              <button className=\"btn-primary\" onClick={closeModal}>\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      </div>\n  );\n};\n\nexport default CoreDataDictionaryViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}