{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { getBusinessObject, is } from '../../../util/ModelUtil';\nimport { createCategory, createCategoryValue, linkCategoryValue, unlinkCategory, unlinkCategoryValue } from './util/CategoryUtil';\n\n/**\n * @typedef {import('../BpmnFactory').default} BpmnFactory\n * @typedef {import('../../../Modeler').default} Modeler\n * @typedef {import('diagram-js/lib/core/ElementRegistry').default} ElementRegistry\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('didi').Injector} Injector\n * @typedef {import('../../copy-paste/ModdleCopy').default} ModdleCopy\n *\n * @typedef {import('../../../model/Types').Element} Element\n * @typedef {import('../../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').DirectionTRBL} DirectionTRBL\n */\n\nvar LOWER_PRIORITY = 770;\n\n/**\n * BPMN specific group behavior.\n *\n * @param {BpmnFactory} bpmnFactory\n * @param {Modeler} bpmnjs\n * @param {ElementRegistry} elementRegistry\n * @param {EventBus} eventBus\n * @param {Injector} injector\n * @param {ModdleCopy} moddleCopy\n */\nexport default function GroupBehavior(bpmnFactory, bpmnjs, elementRegistry, eventBus, injector, moddleCopy) {\n  injector.invoke(CommandInterceptor, this);\n\n  /**\n   * Returns all group element in the current registry.\n   *\n   * @return {Shape[]}\n   */\n  function getGroupElements() {\n    return elementRegistry.filter(function (e) {\n      return is(e, 'bpmn:Group');\n    });\n  }\n\n  /**\n   * Returns true if given category is referenced in one of the given elements.\n   *\n   * @param {Element[]} elements\n   * @param {ModdleElement} category\n   *\n   * @return {boolean}\n   */\n  function isReferencedCategory(elements, category) {\n    return elements.some(function (element) {\n      var businessObject = getBusinessObject(element);\n      var _category = businessObject.categoryValueRef && businessObject.categoryValueRef.$parent;\n      return _category === category;\n    });\n  }\n\n  /**\n   * Returns true if given categoryValue is referenced in one of the given elements.\n   *\n   * @param {Element[]} elements\n   * @param {ModdleElement} categoryValue\n   *\n   * @return {boolean}\n   */\n  function isReferencedCategoryValue(elements, categoryValue) {\n    return elements.some(function (element) {\n      var businessObject = getBusinessObject(element);\n      return businessObject.categoryValueRef === categoryValue;\n    });\n  }\n\n  /**\n   * Remove category value unless it is still referenced.\n   *\n   * @param {ModdleElement} categoryValue\n   * @param {ModdleElement} category\n   * @param {ModdleElement} businessObject\n   */\n  function removeCategoryValue(categoryValue, category, businessObject) {\n    var groups = getGroupElements().filter(function (element) {\n      return element.businessObject !== businessObject;\n    });\n    if (category && !isReferencedCategory(groups, category)) {\n      unlinkCategory(category);\n    }\n    if (categoryValue && !isReferencedCategoryValue(groups, categoryValue)) {\n      unlinkCategoryValue(categoryValue);\n    }\n  }\n\n  /**\n   * Add category value.\n   *\n   * @param {ModdleElement} categoryValue\n   * @param {ModdleElement} category\n   *\n   * @return {ModdleElement}\n   */\n  function addCategoryValue(categoryValue, category) {\n    return linkCategoryValue(categoryValue, category, bpmnjs.getDefinitions());\n  }\n  function setCategoryValue(element, context) {\n    var businessObject = getBusinessObject(element),\n      categoryValue = businessObject.categoryValueRef;\n    if (!categoryValue) {\n      categoryValue = businessObject.categoryValueRef = context.categoryValue = context.categoryValue || createCategoryValue(bpmnFactory);\n    }\n    var category = categoryValue.$parent;\n    if (!category) {\n      category = categoryValue.$parent = context.category = context.category || createCategory(bpmnFactory);\n    }\n    addCategoryValue(categoryValue, category, bpmnjs.getDefinitions());\n  }\n  function unsetCategoryValue(element, context) {\n    var category = context.category,\n      categoryValue = context.categoryValue,\n      businessObject = getBusinessObject(element);\n    if (categoryValue) {\n      businessObject.categoryValueRef = null;\n      removeCategoryValue(categoryValue, category, businessObject);\n    } else {\n      removeCategoryValue(null, businessObject.categoryValueRef.$parent, businessObject);\n    }\n  }\n\n  // ensure category + value exist before label editing\n\n  this.execute('label.create', function (event) {\n    var context = event.context,\n      labelTarget = context.labelTarget;\n    if (!is(labelTarget, 'bpmn:Group')) {\n      return;\n    }\n    setCategoryValue(labelTarget, context);\n  });\n  this.revert('label.create', function (event) {\n    var context = event.context,\n      labelTarget = context.labelTarget;\n    if (!is(labelTarget, 'bpmn:Group')) {\n      return;\n    }\n    unsetCategoryValue(labelTarget, context);\n  });\n\n  // remove referenced category + value when group was deleted\n\n  this.execute('shape.delete', function (event) {\n    var context = event.context,\n      shape = context.shape,\n      businessObject = getBusinessObject(shape);\n    if (!is(shape, 'bpmn:Group') || shape.labelTarget) {\n      return;\n    }\n    var categoryValue = context.categoryValue = businessObject.categoryValueRef,\n      category;\n    if (categoryValue) {\n      category = context.category = categoryValue.$parent;\n      removeCategoryValue(categoryValue, category, businessObject);\n      businessObject.categoryValueRef = null;\n    }\n  });\n  this.reverted('shape.delete', function (event) {\n    var context = event.context,\n      shape = context.shape;\n    if (!is(shape, 'bpmn:Group') || shape.labelTarget) {\n      return;\n    }\n    var category = context.category,\n      categoryValue = context.categoryValue,\n      businessObject = getBusinessObject(shape);\n    if (categoryValue) {\n      businessObject.categoryValueRef = categoryValue;\n      addCategoryValue(categoryValue, category);\n    }\n  });\n\n  // create new category + value when group was created\n\n  this.execute('shape.create', function (event) {\n    var context = event.context,\n      shape = context.shape;\n    if (!is(shape, 'bpmn:Group') || shape.labelTarget) {\n      return;\n    }\n    if (getBusinessObject(shape).categoryValueRef) {\n      setCategoryValue(shape, context);\n    }\n  });\n  this.reverted('shape.create', function (event) {\n    var context = event.context,\n      shape = context.shape;\n    if (!is(shape, 'bpmn:Group') || shape.labelTarget) {\n      return;\n    }\n    if (getBusinessObject(shape).categoryValueRef) {\n      unsetCategoryValue(shape, context);\n    }\n  });\n\n  // copy + paste categoryValueRef with group\n\n  function copy(bo, clone) {\n    var targetBo = bpmnFactory.create(bo.$type);\n    return moddleCopy.copyElement(bo, targetBo, null, clone);\n  }\n  eventBus.on('copyPaste.copyElement', LOWER_PRIORITY, function (context) {\n    var descriptor = context.descriptor,\n      element = context.element;\n    if (!is(element, 'bpmn:Group') || element.labelTarget) {\n      return;\n    }\n    var groupBo = getBusinessObject(element);\n    if (groupBo.categoryValueRef) {\n      var categoryValue = groupBo.categoryValueRef;\n      descriptor.categoryValue = copy(categoryValue, true);\n      if (categoryValue.$parent) {\n        descriptor.category = copy(categoryValue.$parent, true);\n      }\n    }\n  });\n  eventBus.on('copyPaste.pasteElement', LOWER_PRIORITY, function (context) {\n    var descriptor = context.descriptor,\n      businessObject = descriptor.businessObject,\n      categoryValue = descriptor.categoryValue,\n      category = descriptor.category;\n    if (categoryValue) {\n      categoryValue = businessObject.categoryValueRef = copy(categoryValue);\n    }\n    if (category) {\n      categoryValue.$parent = copy(category);\n    }\n    delete descriptor.category;\n    delete descriptor.categoryValue;\n  });\n}\nGroupBehavior.$inject = ['bpmnFactory', 'bpmnjs', 'elementRegistry', 'eventBus', 'injector', 'moddleCopy'];\ninherits(GroupBehavior, CommandInterceptor);","map":{"version":3,"names":["inherits","CommandInterceptor","getBusinessObject","is","createCategory","createCategoryValue","linkCategoryValue","unlinkCategory","unlinkCategoryValue","LOWER_PRIORITY","GroupBehavior","bpmnFactory","bpmnjs","elementRegistry","eventBus","injector","moddleCopy","invoke","getGroupElements","filter","e","isReferencedCategory","elements","category","some","element","businessObject","_category","categoryValueRef","$parent","isReferencedCategoryValue","categoryValue","removeCategoryValue","groups","addCategoryValue","getDefinitions","setCategoryValue","context","unsetCategoryValue","execute","event","labelTarget","revert","shape","reverted","copy","bo","clone","targetBo","create","$type","copyElement","on","descriptor","groupBo","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/GroupBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getBusinessObject,\n  is\n} from '../../../util/ModelUtil';\n\nimport {\n  createCategory,\n  createCategoryValue,\n  linkCategoryValue,\n  unlinkCategory,\n  unlinkCategoryValue\n} from './util/CategoryUtil';\n\n/**\n * @typedef {import('../BpmnFactory').default} BpmnFactory\n * @typedef {import('../../../Modeler').default} Modeler\n * @typedef {import('diagram-js/lib/core/ElementRegistry').default} ElementRegistry\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('didi').Injector} Injector\n * @typedef {import('../../copy-paste/ModdleCopy').default} ModdleCopy\n *\n * @typedef {import('../../../model/Types').Element} Element\n * @typedef {import('../../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').DirectionTRBL} DirectionTRBL\n */\n\nvar LOWER_PRIORITY = 770;\n\n\n/**\n * BPMN specific group behavior.\n *\n * @param {BpmnFactory} bpmnFactory\n * @param {Modeler} bpmnjs\n * @param {ElementRegistry} elementRegistry\n * @param {EventBus} eventBus\n * @param {Injector} injector\n * @param {ModdleCopy} moddleCopy\n */\nexport default function GroupBehavior(\n    bpmnFactory,\n    bpmnjs,\n    elementRegistry,\n    eventBus,\n    injector,\n    moddleCopy\n) {\n  injector.invoke(CommandInterceptor, this);\n\n  /**\n   * Returns all group element in the current registry.\n   *\n   * @return {Shape[]}\n   */\n  function getGroupElements() {\n    return elementRegistry.filter(function(e) {\n      return is(e, 'bpmn:Group');\n    });\n  }\n\n  /**\n   * Returns true if given category is referenced in one of the given elements.\n   *\n   * @param {Element[]} elements\n   * @param {ModdleElement} category\n   *\n   * @return {boolean}\n   */\n  function isReferencedCategory(elements, category) {\n    return elements.some(function(element) {\n      var businessObject = getBusinessObject(element);\n\n      var _category = businessObject.categoryValueRef && businessObject.categoryValueRef.$parent;\n\n      return _category === category;\n    });\n  }\n\n  /**\n   * Returns true if given categoryValue is referenced in one of the given elements.\n   *\n   * @param {Element[]} elements\n   * @param {ModdleElement} categoryValue\n   *\n   * @return {boolean}\n   */\n  function isReferencedCategoryValue(elements, categoryValue) {\n    return elements.some(function(element) {\n      var businessObject = getBusinessObject(element);\n\n      return businessObject.categoryValueRef === categoryValue;\n    });\n  }\n\n  /**\n   * Remove category value unless it is still referenced.\n   *\n   * @param {ModdleElement} categoryValue\n   * @param {ModdleElement} category\n   * @param {ModdleElement} businessObject\n   */\n  function removeCategoryValue(categoryValue, category, businessObject) {\n\n    var groups = getGroupElements().filter(function(element) {\n      return element.businessObject !== businessObject;\n    });\n\n    if (category && !isReferencedCategory(groups, category)) {\n      unlinkCategory(category);\n    }\n\n    if (categoryValue && !isReferencedCategoryValue(groups, categoryValue)) {\n      unlinkCategoryValue(categoryValue);\n    }\n  }\n\n  /**\n   * Add category value.\n   *\n   * @param {ModdleElement} categoryValue\n   * @param {ModdleElement} category\n   *\n   * @return {ModdleElement}\n   */\n  function addCategoryValue(categoryValue, category) {\n    return linkCategoryValue(categoryValue, category, bpmnjs.getDefinitions());\n  }\n\n  function setCategoryValue(element, context) {\n    var businessObject = getBusinessObject(element),\n        categoryValue = businessObject.categoryValueRef;\n\n    if (!categoryValue) {\n      categoryValue =\n      businessObject.categoryValueRef =\n      context.categoryValue = (\n        context.categoryValue || createCategoryValue(bpmnFactory)\n      );\n    }\n\n    var category = categoryValue.$parent;\n\n    if (!category) {\n      category =\n      categoryValue.$parent =\n      context.category = (\n        context.category || createCategory(bpmnFactory)\n      );\n    }\n\n    addCategoryValue(categoryValue, category, bpmnjs.getDefinitions());\n  }\n\n  function unsetCategoryValue(element, context) {\n    var category = context.category,\n        categoryValue = context.categoryValue,\n        businessObject = getBusinessObject(element);\n\n    if (categoryValue) {\n      businessObject.categoryValueRef = null;\n\n      removeCategoryValue(categoryValue, category, businessObject);\n    } else {\n      removeCategoryValue(null, businessObject.categoryValueRef.$parent, businessObject);\n    }\n  }\n\n\n  // ensure category + value exist before label editing\n\n  this.execute('label.create', function(event) {\n    var context = event.context,\n        labelTarget = context.labelTarget;\n\n    if (!is(labelTarget, 'bpmn:Group')) {\n      return;\n    }\n\n    setCategoryValue(labelTarget, context);\n  });\n\n  this.revert('label.create', function(event) {\n    var context = event.context,\n        labelTarget = context.labelTarget;\n\n    if (!is(labelTarget, 'bpmn:Group')) {\n      return;\n    }\n\n    unsetCategoryValue(labelTarget, context);\n  });\n\n\n  // remove referenced category + value when group was deleted\n\n  this.execute('shape.delete', function(event) {\n\n    var context = event.context,\n        shape = context.shape,\n        businessObject = getBusinessObject(shape);\n\n    if (!is(shape, 'bpmn:Group') || shape.labelTarget) {\n      return;\n    }\n\n    var categoryValue = context.categoryValue = businessObject.categoryValueRef,\n        category;\n\n    if (categoryValue) {\n      category = context.category = categoryValue.$parent;\n\n      removeCategoryValue(categoryValue, category, businessObject);\n\n      businessObject.categoryValueRef = null;\n    }\n  });\n\n  this.reverted('shape.delete', function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    if (!is(shape, 'bpmn:Group') || shape.labelTarget) {\n      return;\n    }\n\n    var category = context.category,\n        categoryValue = context.categoryValue,\n        businessObject = getBusinessObject(shape);\n\n    if (categoryValue) {\n      businessObject.categoryValueRef = categoryValue;\n\n      addCategoryValue(categoryValue, category);\n    }\n  });\n\n\n  // create new category + value when group was created\n\n  this.execute('shape.create', function(event) {\n    var context = event.context,\n        shape = context.shape;\n\n    if (!is(shape, 'bpmn:Group') || shape.labelTarget) {\n      return;\n    }\n\n    if (getBusinessObject(shape).categoryValueRef) {\n      setCategoryValue(shape, context);\n    }\n  });\n\n  this.reverted('shape.create', function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    if (!is(shape, 'bpmn:Group') || shape.labelTarget) {\n      return;\n    }\n\n    if (getBusinessObject(shape).categoryValueRef) {\n      unsetCategoryValue(shape, context);\n    }\n  });\n\n\n  // copy + paste categoryValueRef with group\n\n  function copy(bo, clone) {\n    var targetBo = bpmnFactory.create(bo.$type);\n\n    return moddleCopy.copyElement(bo, targetBo, null, clone);\n  }\n\n  eventBus.on('copyPaste.copyElement', LOWER_PRIORITY, function(context) {\n    var descriptor = context.descriptor,\n        element = context.element;\n\n    if (!is(element, 'bpmn:Group') || element.labelTarget) {\n      return;\n    }\n\n    var groupBo = getBusinessObject(element);\n\n    if (groupBo.categoryValueRef) {\n\n      var categoryValue = groupBo.categoryValueRef;\n\n      descriptor.categoryValue = copy(categoryValue, true);\n\n      if (categoryValue.$parent) {\n        descriptor.category = copy(categoryValue.$parent, true);\n      }\n    }\n  });\n\n  eventBus.on('copyPaste.pasteElement', LOWER_PRIORITY, function(context) {\n    var descriptor = context.descriptor,\n        businessObject = descriptor.businessObject,\n        categoryValue = descriptor.categoryValue,\n        category = descriptor.category;\n\n    if (categoryValue) {\n      categoryValue = businessObject.categoryValueRef = copy(categoryValue);\n    }\n\n    if (category) {\n      categoryValue.$parent = copy(category);\n    }\n\n    delete descriptor.category;\n    delete descriptor.categoryValue;\n  });\n\n}\n\nGroupBehavior.$inject = [\n  'bpmnFactory',\n  'bpmnjs',\n  'elementRegistry',\n  'eventBus',\n  'injector',\n  'moddleCopy'\n];\n\ninherits(GroupBehavior, CommandInterceptor);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}