{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import githubService from'../services/githubService';import{handleNavigationClick}from'../utils/navigationUtils';import'./ForkStatusBar.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForkStatusBar=_ref=>{let{profile,repository,selectedBranch}=_ref;const navigate=useNavigate();const[isExpanded,setIsExpanded]=useState(false);const[forks,setForks]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Get session storage key for this repository\nconst getStorageKey=React.useCallback(()=>{if(!repository)return null;return`sgex_fork_status_${repository.full_name}`;},[repository]);// Load expansion state from session storage\nuseEffect(()=>{const storageKey=getStorageKey();if(storageKey){const savedState=sessionStorage.getItem(storageKey);if(savedState!==null){setIsExpanded(JSON.parse(savedState));}}},[getStorageKey]);// Save expansion state to session storage\nconst toggleExpansion=()=>{const newState=!isExpanded;setIsExpanded(newState);const storageKey=getStorageKey();if(storageKey){sessionStorage.setItem(storageKey,JSON.stringify(newState));}};// Fetch forks when component mounts\nuseEffect(()=>{const fetchForks=async()=>{if(!repository)return;setLoading(true);setError(null);try{// For sgex repository, fetch from litlfred/sgex\nconst forks=await githubService.getRepositoryForks('litlfred','sgex');setForks(forks);}catch(err){console.error('Error fetching repository forks:',err);setError(err.message);}finally{setLoading(false);}};fetchForks();},[repository]);// Generate DAK dashboard URL for a fork\nconst getForkDashboardUrl=fork=>{const owner=fork.owner.login;const repoName=fork.name;const branch=fork.default_branch||'main';return`/dashboard/${owner}/${repoName}/${branch}`;};// Handle fork navigation\nconst handleForkClick=(event,fork)=>{const dashboardUrl=getForkDashboardUrl(fork);const navigationState={profile:{login:fork.owner.login,name:fork.owner.login,avatar_url:fork.owner.avatar_url,type:fork.owner.type},repository:fork,selectedBranch:fork.default_branch||'main'};handleNavigationClick(event,dashboardUrl,navigate,navigationState);};if(!repository||loading){return/*#__PURE__*/_jsx(\"div\",{className:\"fork-status-bar loading\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"fork-status-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fork-badge-placeholder\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"fork-icon\",children:\"\\uD83C\\uDF74\"}),/*#__PURE__*/_jsx(\"span\",{className:\"fork-count\",children:\"...\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"fork-status-title\",children:\"Loading forks...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"fork-status-bar error\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"fork-status-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fork-badge\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"fork-icon\",children:\"\\uD83C\\uDF74\"}),/*#__PURE__*/_jsx(\"span\",{className:\"fork-count\",children:\"?\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"fork-status-title\",children:\"Unable to load forks\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:`fork-status-bar ${isExpanded?'expanded':'collapsed'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fork-status-header\",onClick:toggleExpansion,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fork-badge\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"fork-icon\",children:\"\\uD83C\\uDF74\"}),/*#__PURE__*/_jsx(\"span\",{className:\"fork-count\",children:forks.length})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"fork-status-title\",children:[forks.length,\" fork\",forks.length!==1?'s':'',\" of sgex repository\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"fork-toggle-btn\",\"aria-label\":isExpanded?'Collapse':'Expand',children:/*#__PURE__*/_jsx(\"span\",{className:`toggle-icon ${isExpanded?'expanded':''}`,children:\"\\u25BC\"})})]}),isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"fork-list\",children:forks.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-forks\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No forks found for this repository.\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"fork-items\",children:forks.map(fork=>/*#__PURE__*/_jsxs(\"div\",{className:\"fork-item\",onClick:event=>handleForkClick(event,fork),children:[/*#__PURE__*/_jsx(\"div\",{className:\"fork-avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:fork.owner.avatar_url,alt:fork.owner.login,className:\"fork-owner-avatar\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"fork-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fork-name\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[fork.owner.login,\"/\",fork.name]})}),/*#__PURE__*/_jsx(\"div\",{className:\"fork-description\",children:fork.description||'No description available'}),/*#__PURE__*/_jsxs(\"div\",{className:\"fork-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"fork-stat\",children:[\"\\u2B50 \",fork.stargazers_count]}),/*#__PURE__*/_jsxs(\"span\",{className:\"fork-stat\",children:[\"\\uD83D\\uDCDD \",fork.open_issues_count,\" issues\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"fork-stat\",children:[\"\\uD83D\\uDCC5 Updated \",new Date(fork.updated_at).toLocaleDateString()]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"fork-actions\",children:/*#__PURE__*/_jsx(\"span\",{className:\"fork-link-hint\",children:\"Click to view DAK \\u2192\"})})]},fork.id))})})]});};export default ForkStatusBar;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","githubService","handleNavigationClick","jsx","_jsx","jsxs","_jsxs","ForkStatusBar","_ref","profile","repository","selectedBranch","navigate","isExpanded","setIsExpanded","forks","setForks","loading","setLoading","error","setError","getStorageKey","useCallback","full_name","storageKey","savedState","sessionStorage","getItem","JSON","parse","toggleExpansion","newState","setItem","stringify","fetchForks","getRepositoryForks","err","console","message","getForkDashboardUrl","fork","owner","login","repoName","name","branch","default_branch","handleForkClick","event","dashboardUrl","navigationState","avatar_url","type","className","children","onClick","length","map","src","alt","description","stargazers_count","open_issues_count","Date","updated_at","toLocaleDateString","id"],"sources":["/home/runner/work/sgex/sgex/src/components/ForkStatusBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport { handleNavigationClick } from '../utils/navigationUtils';\nimport './ForkStatusBar.css';\n\nconst ForkStatusBar = ({ profile, repository, selectedBranch }) => {\n  const navigate = useNavigate();\n  \n  const [isExpanded, setIsExpanded] = useState(false);\n  const [forks, setForks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Get session storage key for this repository\n  const getStorageKey = React.useCallback(() => {\n    if (!repository) return null;\n    return `sgex_fork_status_${repository.full_name}`;\n  }, [repository]);\n\n  // Load expansion state from session storage\n  useEffect(() => {\n    const storageKey = getStorageKey();\n    if (storageKey) {\n      const savedState = sessionStorage.getItem(storageKey);\n      if (savedState !== null) {\n        setIsExpanded(JSON.parse(savedState));\n      }\n    }\n  }, [getStorageKey]);\n\n  // Save expansion state to session storage\n  const toggleExpansion = () => {\n    const newState = !isExpanded;\n    setIsExpanded(newState);\n    \n    const storageKey = getStorageKey();\n    if (storageKey) {\n      sessionStorage.setItem(storageKey, JSON.stringify(newState));\n    }\n  };\n\n  // Fetch forks when component mounts\n  useEffect(() => {\n    const fetchForks = async () => {\n      if (!repository) return;\n      \n      setLoading(true);\n      setError(null);\n      \n      try {\n        // For sgex repository, fetch from litlfred/sgex\n        const forks = await githubService.getRepositoryForks('litlfred', 'sgex');\n        setForks(forks);\n      } catch (err) {\n        console.error('Error fetching repository forks:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchForks();\n  }, [repository]);\n\n  // Generate DAK dashboard URL for a fork\n  const getForkDashboardUrl = (fork) => {\n    const owner = fork.owner.login;\n    const repoName = fork.name;\n    const branch = fork.default_branch || 'main';\n    return `/dashboard/${owner}/${repoName}/${branch}`;\n  };\n\n  // Handle fork navigation\n  const handleForkClick = (event, fork) => {\n    const dashboardUrl = getForkDashboardUrl(fork);\n    const navigationState = {\n      profile: {\n        login: fork.owner.login,\n        name: fork.owner.login,\n        avatar_url: fork.owner.avatar_url,\n        type: fork.owner.type\n      },\n      repository: fork,\n      selectedBranch: fork.default_branch || 'main'\n    };\n    \n    handleNavigationClick(event, dashboardUrl, navigate, navigationState);\n  };\n\n  if (!repository || loading) {\n    return (\n      <div className=\"fork-status-bar loading\">\n        <div className=\"fork-status-header\">\n          <div className=\"fork-badge-placeholder\">\n            <span className=\"fork-icon\">üç¥</span>\n            <span className=\"fork-count\">...</span>\n          </div>\n          <span className=\"fork-status-title\">Loading forks...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"fork-status-bar error\">\n        <div className=\"fork-status-header\">\n          <div className=\"fork-badge\">\n            <span className=\"fork-icon\">üç¥</span>\n            <span className=\"fork-count\">?</span>\n          </div>\n          <span className=\"fork-status-title\">Unable to load forks</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`fork-status-bar ${isExpanded ? 'expanded' : 'collapsed'}`}>\n      <div className=\"fork-status-header\" onClick={toggleExpansion}>\n        <div className=\"fork-badge\">\n          <span className=\"fork-icon\">üç¥</span>\n          <span className=\"fork-count\">{forks.length}</span>\n        </div>\n        <span className=\"fork-status-title\">\n          {forks.length} fork{forks.length !== 1 ? 's' : ''} of sgex repository\n        </span>\n        <button className=\"fork-toggle-btn\" aria-label={isExpanded ? 'Collapse' : 'Expand'}>\n          <span className={`toggle-icon ${isExpanded ? 'expanded' : ''}`}>‚ñº</span>\n        </button>\n      </div>\n      \n      {isExpanded && (\n        <div className=\"fork-list\">\n          {forks.length === 0 ? (\n            <div className=\"no-forks\">\n              <p>No forks found for this repository.</p>\n            </div>\n          ) : (\n            <div className=\"fork-items\">\n              {forks.map((fork) => (\n                <div \n                  key={fork.id} \n                  className=\"fork-item\"\n                  onClick={(event) => handleForkClick(event, fork)}\n                >\n                  <div className=\"fork-avatar\">\n                    <img \n                      src={fork.owner.avatar_url} \n                      alt={fork.owner.login}\n                      className=\"fork-owner-avatar\"\n                    />\n                  </div>\n                  <div className=\"fork-info\">\n                    <div className=\"fork-name\">\n                      <strong>{fork.owner.login}/{fork.name}</strong>\n                    </div>\n                    <div className=\"fork-description\">\n                      {fork.description || 'No description available'}\n                    </div>\n                    <div className=\"fork-stats\">\n                      <span className=\"fork-stat\">\n                        ‚≠ê {fork.stargazers_count}\n                      </span>\n                      <span className=\"fork-stat\">\n                        üìù {fork.open_issues_count} issues\n                      </span>\n                      <span className=\"fork-stat\">\n                        üìÖ Updated {new Date(fork.updated_at).toLocaleDateString()}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"fork-actions\">\n                    <span className=\"fork-link-hint\">Click to view DAK ‚Üí</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ForkStatusBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}