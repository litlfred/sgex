{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{useParams,useLocation,useNavigate}from'react-router-dom';import githubService from'../../services/githubService';import dakValidationService from'../../services/dakValidationService';import profileSubscriptionService from'../../services/profileSubscriptionService';/**\n * Page types supported by the framework\n */import{jsx as _jsx}from\"react/jsx-runtime\";export const PAGE_TYPES={TOP_LEVEL:'top-level',USER:'user',DAK:'dak',ASSET:'asset'};/**\n * Context for page framework\n */const PageContext=/*#__PURE__*/createContext(null);/**\n * Hook to use page context\n */export const usePage=()=>{const context=useContext(PageContext);console.log('usePage: called, context is:',context?'available':'null');if(!context){console.error('usePage: PageContext is null - component not wrapped in PageProvider');// Return a default context instead of throwing to make ErrorHandler more resilient\nreturn{pageName:'unknown',user:null,profile:null,repository:null,branch:null,asset:null,type:'top-level',loading:false,error:null,isAuthenticated:false,navigate:()=>{},params:{},location:{pathname:'/'}};}return context;};/**\n * Determine page type from URL parameters\n */const determinePageType=params=>{const{user,repo}=params;const asset=params['*'];// Wildcard parameter for asset path\nconsole.log('PageProvider: determinePageType called with params:',params);console.log('PageProvider: extracted values:',{user,repo,asset});if(asset)return PAGE_TYPES.ASSET;if(user&&repo)return PAGE_TYPES.DAK;if(user)return PAGE_TYPES.USER;return PAGE_TYPES.TOP_LEVEL;};/**\n * Provider component for page framework\n */export const PageProvider=_ref=>{let{children,pageName}=_ref;const params=useParams();const location=useLocation();const navigate=useNavigate();console.log('PageProvider: initialized with:',{pageName,params,locationPathname:location.pathname});const[pageState,setPageState]=useState({type:determinePageType(params),pageName,loading:false,error:null,user:null,profile:null,repository:null,branch:null,asset:null,isAuthenticated:githubService.isAuth()});// Extract URL parameters\nconst{user,repo}=params;const asset=params['*'];// Wildcard parameter for asset path\n// Load data based on page type\nuseEffect(()=>{const loadPageData=async()=>{try{var _location$state,_location$state2,_location$state3;setPageState(prev=>({...prev,loading:true,error:null}));// Use location state if available, otherwise fetch from URL params\nlet profile=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.profile;let repository=(_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.repository;let selectedBranch=((_location$state3=location.state)===null||_location$state3===void 0?void 0:_location$state3.selectedBranch)||params.branch;// For DAK and Asset pages, validate and fetch data\nif(pageState.type===PAGE_TYPES.DAK||pageState.type===PAGE_TYPES.ASSET){var _repository;if(!profile&&user){if(githubService.isAuth()){try{profile=await githubService.getUser(user);}catch(err){// For dashboard pages, set error state instead of redirecting\nif(pageName==='dashboard'||pageName.includes('editor')||pageName.includes('viewer')||pageState.type===PAGE_TYPES.DAK||pageState.type===PAGE_TYPES.ASSET){setPageState(prev=>({...prev,loading:false,error:`User '${user}' not found or not accessible. Please check the username and try again.`,user,// Still set available URL parameters for context\nrepository:repo?{name:repo,owner:{login:user},html_url:`https://github.com/${user}/${repo}`,isNotFound:true}:null,branch:params.branch||'main'}));return;}throw new Error(`User '${user}' not found or not accessible.`);}}else{// Demo mode for DAK validation\nconst isValidDAK=dakValidationService.validateDemoDAKRepository(user,repo);if(!isValidDAK){// For dashboard pages, set error state instead of redirecting\nif(pageName==='dashboard'||pageName.includes('editor')||pageName.includes('viewer')||pageState.type===PAGE_TYPES.DAK||pageState.type===PAGE_TYPES.ASSET){setPageState(prev=>({...prev,loading:false,error:`Repository '${user}/${repo}' not found or not accessible. This may be a private repository or the repository doesn't exist.`,user,profile:{login:user,name:user.charAt(0).toUpperCase()+user.slice(1),avatar_url:`https://github.com/${user}.png`,type:'User',isDemo:true},repository:{name:repo,owner:{login:user},html_url:`https://github.com/${user}/${repo}`,isNotFound:true},branch:params.branch||'main'}));return;}throw new Error(`Repository '${user}/${repo}' not found or not accessible.`);}profile={login:user,name:user.charAt(0).toUpperCase()+user.slice(1),avatar_url:`https://github.com/${user}.png`,type:'User',isDemo:true};}}if(!repository&&user&&repo){if(githubService.isAuth()){try{repository=await githubService.getRepository(user,repo);// Validate it's a DAK repository\nconst isValidDAK=await dakValidationService.validateDAKRepository(user,repo,selectedBranch||repository.default_branch);if(!isValidDAK){// For dashboard pages, set error state instead of redirecting\nif(pageName==='dashboard'||pageName.includes('editor')||pageName.includes('viewer')||pageState.type===PAGE_TYPES.DAK||pageState.type===PAGE_TYPES.ASSET){setPageState(prev=>({...prev,loading:false,error:`Repository '${user}/${repo}' is not a valid DAK repository. This repository may not contain WHO SMART Guidelines content.`,user,profile,repository:{...repository,isInvalidDAK:true},branch:selectedBranch||repository.default_branch}));return;}throw new Error(`Repository '${user}/${repo}' is not a valid DAK repository.`);}}catch(err){// For dashboard pages, set error state instead of redirecting\nif(pageName==='dashboard'||pageName.includes('editor')||pageName.includes('viewer')||pageState.type===PAGE_TYPES.DAK||pageState.type===PAGE_TYPES.ASSET){setPageState(prev=>({...prev,loading:false,error:`Repository '${user}/${repo}' not found or not accessible. Please check the repository name and your access permissions.`,user,profile,repository:{name:repo,owner:{login:user},html_url:`https://github.com/${user}/${repo}`,isNotFound:true},branch:selectedBranch||'main'}));return;}throw new Error(`Repository '${user}/${repo}' not found or not accessible.`);}}else{// For demo mode, validate the demo repository exists\nconst isValidDAK=dakValidationService.validateDemoDAKRepository(user,repo);if(!isValidDAK){// For dashboard pages, set error state instead of redirecting\nif(pageName==='dashboard'||pageName.includes('editor')||pageName.includes('viewer')||pageState.type===PAGE_TYPES.DAK||pageState.type===PAGE_TYPES.ASSET){setPageState(prev=>({...prev,loading:false,error:`Repository '${user}/${repo}' not found or not accessible. This may be a private repository or the repository doesn't exist.`,user,profile:{login:user,name:user.charAt(0).toUpperCase()+user.slice(1),avatar_url:`https://github.com/${user}.png`,type:'User',isDemo:true},repository:{name:repo,owner:{login:user},html_url:`https://github.com/${user}/${repo}`,isNotFound:true},branch:selectedBranch||'main'}));return;}throw new Error(`Repository '${user}/${repo}' not found or not accessible.`);}repository={name:repo,full_name:`${user}/${repo}`,owner:{login:user},default_branch:selectedBranch||'main',html_url:`https://github.com/${user}/${repo}`,isDemo:true};}}selectedBranch=selectedBranch||((_repository=repository)===null||_repository===void 0?void 0:_repository.default_branch)||'main';// For asset pages, validate the asset exists (when authenticated or public repo)\nif(pageState.type===PAGE_TYPES.ASSET&&asset){try{await githubService.getFileContent(user,repo,asset,selectedBranch);}catch(err){// For asset pages, set error state instead of redirecting  \nif(pageName==='asset'||pageName.includes('editor')||pageName.includes('viewer')){setPageState(prev=>({...prev,loading:false,error:`Asset '${asset}' not found in repository '${user}/${repo}'. The file may have been moved or deleted.`,user,profile,repository,branch:selectedBranch,asset}));return;}throw new Error(`Asset '${asset}' not found in repository.`);}}}// For User pages, just need profile\nif(pageState.type===PAGE_TYPES.USER&&!profile&&user){if(githubService.isAuth()){try{profile=await githubService.getUser(user);}catch(err){// For user pages, set error state instead of redirecting\nsetPageState(prev=>({...prev,loading:false,error:`User '${user}' not found or not accessible. Please check the username and try again.`,user}));return;}}else{profile={login:user,name:user.charAt(0).toUpperCase()+user.slice(1),avatar_url:`https://github.com/${user}.png`,type:'User',isDemo:true};}}setPageState(prev=>({...prev,loading:false,user,profile,repository,branch:selectedBranch,asset,isAuthenticated:githubService.isAuth()}));// Handle profile subscriptions asynchronously\nconst handleSubscriptions=async()=>{try{const currentUser=await githubService.getCurrentUser();if(currentUser){profileSubscriptionService.ensureCurrentUserSubscribed(currentUser);}}catch(error){// Current user fetch failed, but continue with visited profile logic\nconsole.debug('Could not fetch current user for subscriptions:',error);}// Auto-add visited profiles (if not demo and not already subscribed)\nif(profile&&!profile.isDemo&&(pageState.type===PAGE_TYPES.USER||pageState.type===PAGE_TYPES.DAK||pageState.type===PAGE_TYPES.ASSET)){profileSubscriptionService.autoAddVisitedProfile(profile);}};// Run subscription logic without blocking the main page load\nif(githubService.isAuth()){handleSubscriptions();}}catch(error){console.error('Page data loading error:',error);setPageState(prev=>({...prev,loading:false,error:error.message}));}};// Only load data if we have URL parameters that require it\nif(pageState.type!==PAGE_TYPES.TOP_LEVEL&&user||pageState.type===PAGE_TYPES.TOP_LEVEL){loadPageData();}},[user,repo,params.branch,asset,pageState.type,location.state,navigate,pageName]);// Monitor authentication state changes\nuseEffect(()=>{const checkAuthState=()=>{const currentAuthState=githubService.isAuth();if(currentAuthState!==pageState.isAuthenticated){setPageState(prev=>({...prev,isAuthenticated:currentAuthState}));}};// Check periodically for auth state changes (for logout detection)\nconst interval=setInterval(checkAuthState,1000);return()=>clearInterval(interval);},[pageState.isAuthenticated]);const value={...pageState,navigate,params,location};return/*#__PURE__*/_jsx(PageContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useParams","useLocation","useNavigate","githubService","dakValidationService","profileSubscriptionService","jsx","_jsx","PAGE_TYPES","TOP_LEVEL","USER","DAK","ASSET","PageContext","usePage","context","console","log","error","pageName","user","profile","repository","branch","asset","type","loading","isAuthenticated","navigate","params","location","pathname","determinePageType","repo","PageProvider","_ref","children","locationPathname","pageState","setPageState","isAuth","loadPageData","_location$state","_location$state2","_location$state3","prev","state","selectedBranch","_repository","getUser","err","includes","name","owner","login","html_url","isNotFound","Error","isValidDAK","validateDemoDAKRepository","charAt","toUpperCase","slice","avatar_url","isDemo","getRepository","validateDAKRepository","default_branch","isInvalidDAK","full_name","getFileContent","handleSubscriptions","currentUser","getCurrentUser","ensureCurrentUserSubscribed","debug","autoAddVisitedProfile","message","checkAuthState","currentAuthState","interval","setInterval","clearInterval","value","Provider"],"sources":["/home/runner/work/sgex/sgex/src/components/framework/PageProvider.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport githubService from '../../services/githubService';\nimport dakValidationService from '../../services/dakValidationService';\nimport profileSubscriptionService from '../../services/profileSubscriptionService';\n\n/**\n * Page types supported by the framework\n */\nexport const PAGE_TYPES = {\n  TOP_LEVEL: 'top-level',\n  USER: 'user', \n  DAK: 'dak',\n  ASSET: 'asset'\n};\n\n/**\n * Context for page framework\n */\nconst PageContext = createContext(null);\n\n/**\n * Hook to use page context\n */\nexport const usePage = () => {\n  const context = useContext(PageContext);\n  console.log('usePage: called, context is:', context ? 'available' : 'null');\n  if (!context) {\n    console.error('usePage: PageContext is null - component not wrapped in PageProvider');\n    // Return a default context instead of throwing to make ErrorHandler more resilient\n    return {\n      pageName: 'unknown',\n      user: null,\n      profile: null,\n      repository: null,\n      branch: null,\n      asset: null,\n      type: 'top-level',\n      loading: false,\n      error: null,\n      isAuthenticated: false,\n      navigate: () => {},\n      params: {},\n      location: { pathname: '/' }\n    };\n  }\n  return context;\n};\n\n/**\n * Determine page type from URL parameters\n */\nconst determinePageType = (params) => {\n  const { user, repo } = params;\n  const asset = params['*']; // Wildcard parameter for asset path\n  \n  console.log('PageProvider: determinePageType called with params:', params);\n  console.log('PageProvider: extracted values:', { user, repo, asset });\n  \n  if (asset) return PAGE_TYPES.ASSET;\n  if (user && repo) return PAGE_TYPES.DAK;\n  if (user) return PAGE_TYPES.USER;\n  return PAGE_TYPES.TOP_LEVEL;\n};\n\n/**\n * Provider component for page framework\n */\nexport const PageProvider = ({ children, pageName }) => {\n  const params = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  console.log('PageProvider: initialized with:', {\n    pageName,\n    params,\n    locationPathname: location.pathname\n  });\n  \n  const [pageState, setPageState] = useState({\n    type: determinePageType(params),\n    pageName,\n    loading: false,\n    error: null,\n    user: null,\n    profile: null,\n    repository: null,\n    branch: null,\n    asset: null,\n    isAuthenticated: githubService.isAuth()\n  });\n\n  // Extract URL parameters\n  const { user, repo } = params;\n  const asset = params['*']; // Wildcard parameter for asset path\n\n  // Load data based on page type\n  useEffect(() => {\n    const loadPageData = async () => {\n      try {\n        setPageState(prev => ({ ...prev, loading: true, error: null }));\n\n        // Use location state if available, otherwise fetch from URL params\n        let profile = location.state?.profile;\n        let repository = location.state?.repository;\n        let selectedBranch = location.state?.selectedBranch || params.branch;\n\n        // For DAK and Asset pages, validate and fetch data\n        if (pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n          if (!profile && user) {\n            if (githubService.isAuth()) {\n              try {\n                profile = await githubService.getUser(user);\n              } catch (err) {\n                // For dashboard pages, set error state instead of redirecting\n                if (pageName === 'dashboard' || pageName.includes('editor') || pageName.includes('viewer') || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n                  setPageState(prev => ({\n                    ...prev,\n                    loading: false,\n                    error: `User '${user}' not found or not accessible. Please check the username and try again.`,\n                    user,\n                    // Still set available URL parameters for context\n                    repository: repo ? { name: repo, owner: { login: user }, html_url: `https://github.com/${user}/${repo}`, isNotFound: true } : null,\n                    branch: params.branch || 'main'\n                  }));\n                  return;\n                }\n                throw new Error(`User '${user}' not found or not accessible.`);\n              }\n            } else {\n              // Demo mode for DAK validation\n              const isValidDAK = dakValidationService.validateDemoDAKRepository(user, repo);\n              if (!isValidDAK) {\n                // For dashboard pages, set error state instead of redirecting\n                if (pageName === 'dashboard' || pageName.includes('editor') || pageName.includes('viewer') || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n                  setPageState(prev => ({\n                    ...prev,\n                    loading: false,\n                    error: `Repository '${user}/${repo}' not found or not accessible. This may be a private repository or the repository doesn't exist.`,\n                    user,\n                    profile: {\n                      login: user,\n                      name: user.charAt(0).toUpperCase() + user.slice(1),\n                      avatar_url: `https://github.com/${user}.png`,\n                      type: 'User',\n                      isDemo: true\n                    },\n                    repository: { name: repo, owner: { login: user }, html_url: `https://github.com/${user}/${repo}`, isNotFound: true },\n                    branch: params.branch || 'main'\n                  }));\n                  return;\n                }\n                throw new Error(`Repository '${user}/${repo}' not found or not accessible.`);\n              }\n              profile = {\n                login: user,\n                name: user.charAt(0).toUpperCase() + user.slice(1),\n                avatar_url: `https://github.com/${user}.png`,\n                type: 'User',\n                isDemo: true\n              };\n            }\n          }\n\n          if (!repository && user && repo) {\n            if (githubService.isAuth()) {\n              try {\n                repository = await githubService.getRepository(user, repo);\n                // Validate it's a DAK repository\n                const isValidDAK = await dakValidationService.validateDAKRepository(user, repo, selectedBranch || repository.default_branch);\n                if (!isValidDAK) {\n                  // For dashboard pages, set error state instead of redirecting\n                  if (pageName === 'dashboard' || pageName.includes('editor') || pageName.includes('viewer') || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n                    setPageState(prev => ({\n                      ...prev,\n                      loading: false,\n                      error: `Repository '${user}/${repo}' is not a valid DAK repository. This repository may not contain WHO SMART Guidelines content.`,\n                      user,\n                      profile,\n                      repository: { ...repository, isInvalidDAK: true },\n                      branch: selectedBranch || repository.default_branch\n                    }));\n                    return;\n                  }\n                  throw new Error(`Repository '${user}/${repo}' is not a valid DAK repository.`);\n                }\n              } catch (err) {\n                // For dashboard pages, set error state instead of redirecting\n                if (pageName === 'dashboard' || pageName.includes('editor') || pageName.includes('viewer') || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n                  setPageState(prev => ({\n                    ...prev,\n                    loading: false,\n                    error: `Repository '${user}/${repo}' not found or not accessible. Please check the repository name and your access permissions.`,\n                    user,\n                    profile,\n                    repository: { name: repo, owner: { login: user }, html_url: `https://github.com/${user}/${repo}`, isNotFound: true },\n                    branch: selectedBranch || 'main'\n                  }));\n                  return;\n                }\n                throw new Error(`Repository '${user}/${repo}' not found or not accessible.`);\n              }\n            } else {\n              // For demo mode, validate the demo repository exists\n              const isValidDAK = dakValidationService.validateDemoDAKRepository(user, repo);\n              if (!isValidDAK) {\n                // For dashboard pages, set error state instead of redirecting\n                if (pageName === 'dashboard' || pageName.includes('editor') || pageName.includes('viewer') || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n                  setPageState(prev => ({\n                    ...prev,\n                    loading: false,\n                    error: `Repository '${user}/${repo}' not found or not accessible. This may be a private repository or the repository doesn't exist.`,\n                    user,\n                    profile: {\n                      login: user,\n                      name: user.charAt(0).toUpperCase() + user.slice(1),\n                      avatar_url: `https://github.com/${user}.png`,\n                      type: 'User',\n                      isDemo: true\n                    },\n                    repository: { name: repo, owner: { login: user }, html_url: `https://github.com/${user}/${repo}`, isNotFound: true },\n                    branch: selectedBranch || 'main'\n                  }));\n                  return;\n                }\n                throw new Error(`Repository '${user}/${repo}' not found or not accessible.`);\n              }\n              \n              repository = {\n                name: repo,\n                full_name: `${user}/${repo}`,\n                owner: { login: user },\n                default_branch: selectedBranch || 'main',\n                html_url: `https://github.com/${user}/${repo}`,\n                isDemo: true\n              };\n            }\n          }\n\n          selectedBranch = selectedBranch || repository?.default_branch || 'main';\n\n          // For asset pages, validate the asset exists (when authenticated or public repo)\n          if (pageState.type === PAGE_TYPES.ASSET && asset) {\n            try {\n              await githubService.getFileContent(user, repo, asset, selectedBranch);\n            } catch (err) {\n              // For asset pages, set error state instead of redirecting  \n              if (pageName === 'asset' || pageName.includes('editor') || pageName.includes('viewer')) {\n                setPageState(prev => ({\n                  ...prev,\n                  loading: false,\n                  error: `Asset '${asset}' not found in repository '${user}/${repo}'. The file may have been moved or deleted.`,\n                  user,\n                  profile,\n                  repository,\n                  branch: selectedBranch,\n                  asset\n                }));\n                return;\n              }\n              throw new Error(`Asset '${asset}' not found in repository.`);\n            }\n          }\n        }\n\n        // For User pages, just need profile\n        if (pageState.type === PAGE_TYPES.USER && !profile && user) {\n          if (githubService.isAuth()) {\n            try {\n              profile = await githubService.getUser(user);\n            } catch (err) {\n              // For user pages, set error state instead of redirecting\n              setPageState(prev => ({\n                ...prev,\n                loading: false,\n                error: `User '${user}' not found or not accessible. Please check the username and try again.`,\n                user\n              }));\n              return;\n            }\n          } else {\n            profile = {\n              login: user,\n              name: user.charAt(0).toUpperCase() + user.slice(1),\n              avatar_url: `https://github.com/${user}.png`,\n              type: 'User',\n              isDemo: true\n            };\n          }\n        }\n\n        setPageState(prev => ({\n          ...prev,\n          loading: false,\n          user,\n          profile,\n          repository,\n          branch: selectedBranch,\n          asset,\n          isAuthenticated: githubService.isAuth()\n        }));\n\n        // Handle profile subscriptions asynchronously\n        const handleSubscriptions = async () => {\n          try {\n            const currentUser = await githubService.getCurrentUser();\n            if (currentUser) {\n              profileSubscriptionService.ensureCurrentUserSubscribed(currentUser);\n            }\n          } catch (error) {\n            // Current user fetch failed, but continue with visited profile logic\n            console.debug('Could not fetch current user for subscriptions:', error);\n          }\n\n          // Auto-add visited profiles (if not demo and not already subscribed)\n          if (profile && !profile.isDemo && (pageState.type === PAGE_TYPES.USER || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET)) {\n            profileSubscriptionService.autoAddVisitedProfile(profile);\n          }\n        };\n\n        // Run subscription logic without blocking the main page load\n        if (githubService.isAuth()) {\n          handleSubscriptions();\n        }\n\n      } catch (error) {\n        console.error('Page data loading error:', error);\n        setPageState(prev => ({\n          ...prev,\n          loading: false,\n          error: error.message\n        }));\n      }\n    };\n\n    // Only load data if we have URL parameters that require it\n    if ((pageState.type !== PAGE_TYPES.TOP_LEVEL && user) || pageState.type === PAGE_TYPES.TOP_LEVEL) {\n      loadPageData();\n    }\n  }, [user, repo, params.branch, asset, pageState.type, location.state, navigate, pageName]);\n\n  // Monitor authentication state changes\n  useEffect(() => {\n    const checkAuthState = () => {\n      const currentAuthState = githubService.isAuth();\n      if (currentAuthState !== pageState.isAuthenticated) {\n        setPageState(prev => ({\n          ...prev,\n          isAuthenticated: currentAuthState\n        }));\n      }\n    };\n\n    // Check periodically for auth state changes (for logout detection)\n    const interval = setInterval(checkAuthState, 1000);\n    \n    return () => clearInterval(interval);\n  }, [pageState.isAuthenticated]);\n\n  const value = {\n    ...pageState,\n    navigate,\n    params,\n    location\n  };\n\n  return (\n    <PageContext.Provider value={value}>\n      {children}\n    </PageContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}