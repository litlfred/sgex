{"ast":null,"code":"import { is } from '../../util/ModelUtil';\nimport { isLabel } from '../../util/LabelUtil';\nimport inherits from 'inherits-browser';\nimport { forEach } from 'min-dash';\nimport AutoResizeProvider from 'diagram-js/lib/features/auto-resize/AutoResizeProvider';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../modeling/Modeling').default} Modeling\n *\n * @typedef {import('../../model/Types').Shape} Shape\n */\n\n/**\n * BPMN-specific provider for automatic resizung.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function BpmnAutoResizeProvider(eventBus, modeling) {\n  AutoResizeProvider.call(this, eventBus);\n  this._modeling = modeling;\n}\ninherits(BpmnAutoResizeProvider, AutoResizeProvider);\nBpmnAutoResizeProvider.$inject = ['eventBus', 'modeling'];\n\n/**\n * BPMN-specific check whether given elements can be resized.\n *\n * @param {Shape[]} elements\n * @param {Shape} target\n *\n * @return {boolean}\n */\nBpmnAutoResizeProvider.prototype.canResize = function (elements, target) {\n  // do not resize plane elements:\n  // root elements, collapsed sub-processes\n  if (is(target.di, 'bpmndi:BPMNPlane')) {\n    return false;\n  }\n  if (!is(target, 'bpmn:Participant') && !is(target, 'bpmn:Lane') && !is(target, 'bpmn:SubProcess')) {\n    return false;\n  }\n  var canResize = true;\n  forEach(elements, function (element) {\n    if (is(element, 'bpmn:Lane') || isLabel(element)) {\n      canResize = false;\n      return;\n    }\n  });\n  return canResize;\n};","map":{"version":3,"names":["is","isLabel","inherits","forEach","AutoResizeProvider","BpmnAutoResizeProvider","eventBus","modeling","call","_modeling","$inject","prototype","canResize","elements","target","di","element"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/auto-resize/BpmnAutoResizeProvider.js"],"sourcesContent":["import { is } from '../../util/ModelUtil';\n\nimport { isLabel } from '../../util/LabelUtil';\n\nimport inherits from 'inherits-browser';\n\nimport { forEach } from 'min-dash';\n\nimport AutoResizeProvider from 'diagram-js/lib/features/auto-resize/AutoResizeProvider';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../modeling/Modeling').default} Modeling\n *\n * @typedef {import('../../model/Types').Shape} Shape\n */\n\n/**\n * BPMN-specific provider for automatic resizung.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function BpmnAutoResizeProvider(eventBus, modeling) {\n  AutoResizeProvider.call(this, eventBus);\n\n  this._modeling = modeling;\n}\n\ninherits(BpmnAutoResizeProvider, AutoResizeProvider);\n\nBpmnAutoResizeProvider.$inject = [\n  'eventBus',\n  'modeling'\n];\n\n\n/**\n * BPMN-specific check whether given elements can be resized.\n *\n * @param {Shape[]} elements\n * @param {Shape} target\n *\n * @return {boolean}\n */\nBpmnAutoResizeProvider.prototype.canResize = function(elements, target) {\n\n  // do not resize plane elements:\n  // root elements, collapsed sub-processes\n  if (is(target.di, 'bpmndi:BPMNPlane')) {\n    return false;\n  }\n\n  if (!is(target, 'bpmn:Participant') && !is(target, 'bpmn:Lane') && !(is(target, 'bpmn:SubProcess'))) {\n    return false;\n  }\n\n  var canResize = true;\n\n  forEach(elements, function(element) {\n\n    if (is(element, 'bpmn:Lane') || isLabel(element)) {\n      canResize = false;\n      return;\n    }\n  });\n\n  return canResize;\n};\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,sBAAsB;AAEzC,SAASC,OAAO,QAAQ,sBAAsB;AAE9C,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,SAASC,OAAO,QAAQ,UAAU;AAElC,OAAOC,kBAAkB,MAAM,wDAAwD;;AAEvF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,sBAAsBA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACjEH,kBAAkB,CAACI,IAAI,CAAC,IAAI,EAAEF,QAAQ,CAAC;EAEvC,IAAI,CAACG,SAAS,GAAGF,QAAQ;AAC3B;AAEAL,QAAQ,CAACG,sBAAsB,EAAED,kBAAkB,CAAC;AAEpDC,sBAAsB,CAACK,OAAO,GAAG,CAC/B,UAAU,EACV,UAAU,CACX;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,sBAAsB,CAACM,SAAS,CAACC,SAAS,GAAG,UAASC,QAAQ,EAAEC,MAAM,EAAE;EAEtE;EACA;EACA,IAAId,EAAE,CAACc,MAAM,CAACC,EAAE,EAAE,kBAAkB,CAAC,EAAE;IACrC,OAAO,KAAK;EACd;EAEA,IAAI,CAACf,EAAE,CAACc,MAAM,EAAE,kBAAkB,CAAC,IAAI,CAACd,EAAE,CAACc,MAAM,EAAE,WAAW,CAAC,IAAI,CAAEd,EAAE,CAACc,MAAM,EAAE,iBAAiB,CAAE,EAAE;IACnG,OAAO,KAAK;EACd;EAEA,IAAIF,SAAS,GAAG,IAAI;EAEpBT,OAAO,CAACU,QAAQ,EAAE,UAASG,OAAO,EAAE;IAElC,IAAIhB,EAAE,CAACgB,OAAO,EAAE,WAAW,CAAC,IAAIf,OAAO,CAACe,OAAO,CAAC,EAAE;MAChDJ,SAAS,GAAG,KAAK;MACjB;IACF;EACF,CAAC,CAAC;EAEF,OAAOA,SAAS;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}