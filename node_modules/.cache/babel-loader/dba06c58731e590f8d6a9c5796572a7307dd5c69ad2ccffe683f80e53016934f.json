{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation,useNavigate}from'react-router-dom';import githubService from'../services/githubService';import stagingGroundService from'../services/stagingGroundService';import{PageLayout}from'./framework';import PageViewModal from'./PageViewModal';import PageEditModal from'./PageEditModal';import DAKStatusBox from'./DAKStatusBox';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PagesManager=()=>{const location=useLocation();const navigate=useNavigate();const{profile,repository,selectedBranch}=location.state||{};const[pages,setPages]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[hasWriteAccess,setHasWriteAccess]=useState(false);const[initializingAuth,setInitializingAuth]=useState(true);const[viewModalPage,setViewModalPage]=useState(null);const[editModalPage,setEditModalPage]=useState(null);// Initialize authentication if needed\nuseEffect(()=>{const initializeAuthentication=async()=>{// Check if GitHub service is already authenticated\nif(githubService.isAuth()){setInitializingAuth(false);return;}// Try to restore authentication from stored token\nconst token=sessionStorage.getItem('github_token')||localStorage.getItem('github_token');if(token){console.log('Restoring GitHub authentication from stored token');const success=githubService.authenticate(token);if(success){console.log('GitHub authentication restored successfully');}else{console.warn('Failed to restore GitHub authentication');// Clean up invalid tokens\nsessionStorage.removeItem('github_token');localStorage.removeItem('github_token');}}else{console.warn('No stored GitHub token found');}setInitializingAuth(false);};initializeAuthentication();},[]);// Check write permissions\nuseEffect(()=>{const checkPermissions=async()=>{if(repository&&profile&&!initializingAuth){try{var _repository$owner;const writeAccess=await githubService.checkRepositoryWritePermissions(((_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login)||repository.full_name.split('/')[0],repository.name);setHasWriteAccess(writeAccess);}catch(error){console.warn('Could not check write permissions:',error);setHasWriteAccess(false);}}};if(!initializingAuth){checkPermissions();}},[repository,profile,initializingAuth]);// Initialize staging ground service\nuseEffect(()=>{if(repository&&selectedBranch&&!initializingAuth){stagingGroundService.initialize(repository,selectedBranch);}},[repository,selectedBranch,initializingAuth]);// Load pages from sushi-config.yaml\nuseEffect(()=>{const loadPages=async()=>{if(!profile||!repository){navigate('/');return;}// Wait for authentication to be initialized\nif(initializingAuth){return;}// Check if we have authentication after initialization\nif(!githubService.isAuth()){setError('GitHub authentication not available. Please return to the home page and sign in again.');setLoading(false);return;}// Retry logic for GitHub service authentication\nlet retries=0;const maxRetries=3;while(retries<maxRetries){try{var _repository$owner2;setLoading(true);setError(null);const owner=((_repository$owner2=repository.owner)===null||_repository$owner2===void 0?void 0:_repository$owner2.login)||repository.full_name.split('/')[0];const repo=repository.name;const branch=selectedBranch||'main';console.log(`Loading pages for ${owner}/${repo} on branch: ${branch} (attempt ${retries+1})`);console.log('selectedBranch:',selectedBranch);console.log('GitHub auth status:',githubService.isAuth());console.log('GitHub octokit:',!!githubService.octokit);// Double-check authentication status\nif(!githubService.isAuth()||!githubService.octokit){if(retries<maxRetries-1){console.log('GitHub service not ready, waiting...');await new Promise(resolve=>setTimeout(resolve,1000));retries++;continue;}else{throw new Error('GitHub service not authenticated. Please return to the home page and sign in again.');}}// Fetch sushi-config.yaml\nconst sushiConfigContent=await fetchSushiConfig(owner,repo,branch);if(!sushiConfigContent){throw new Error(`sushi-config.yaml not found in repository on branch \"${branch}\"`);}// Parse pages from sushi-config.yaml\nconst parsedPages=parsePagesFromSushiConfig(sushiConfigContent);// Check if page files exist and get their status\nconst pagesWithStatus=await checkPagesExistence(owner,repo,branch,parsedPages);setPages(pagesWithStatus);break;// Success, exit retry loop\n}catch(error){console.error('Failed to load pages:',error);if(retries<maxRetries-1){retries++;await new Promise(resolve=>setTimeout(resolve,500));continue;}// Final error after all retries\nsetError(error.message);}finally{setLoading(false);}break;}};loadPages();},[profile,repository,selectedBranch,navigate,initializingAuth]);const fetchSushiConfig=async(owner,repo,branch)=>{try{// Check if GitHub service is authenticated and available\nif(!githubService.isAuth()||!githubService.octokit){throw new Error('GitHub service not authenticated');}console.log(`Fetching sushi-config.yaml from ${owner}/${repo} on branch ${branch}`);const{data}=await githubService.octokit.rest.repos.getContent({owner,repo,path:'sushi-config.yaml',ref:branch});if(data.type==='file'&&data.content){console.log('Successfully fetched sushi-config.yaml');return atob(data.content);}console.log('sushi-config.yaml found but no content or not a file');return null;}catch(error){console.error('Failed to fetch sushi-config.yaml:',error);// Provide more specific error messages\nif(error.status===404){throw new Error(`sushi-config.yaml not found in repository on branch \"${branch}\"`);}else if(error.status===403){throw new Error('Access denied - insufficient permissions to read repository contents');}else if(error.status===401){throw new Error('Authentication failed - please check your GitHub token');}else if(!githubService.isAuth()){throw new Error('GitHub service not authenticated');}else{throw new Error(`Failed to fetch sushi-config.yaml: ${error.message}`);}}};const parsePagesFromSushiConfig=configContent=>{const pages=[];try{// Simple YAML parsing for pages section\nconst lines=configContent.split('\\n');let inPagesSection=false;let currentIndent=0;for(let i=0;i<lines.length;i++){const line=lines[i];const trimmedLine=line.trim();if(trimmedLine==='pages:'){inPagesSection=true;currentIndent=line.length-line.trimStart().length;continue;}if(inPagesSection){const lineIndent=line.length-line.trimStart().length;// If we've moved back to the same or lesser indent level, we're out of pages section\nif(trimmedLine&&lineIndent<=currentIndent){break;}// Look for markdown file entries (e.g., \"index.md:\")\nif(trimmedLine.endsWith('.md:')){const filename=trimmedLine.replace(':','').trim();let title=filename;// Default title to filename if no title found\n// Look ahead for the title on the next line(s)\nfor(let j=i+1;j<lines.length;j++){const nextLine=lines[j];const nextTrimmed=nextLine.trim();const nextIndent=nextLine.length-nextLine.trimStart().length;// If we've moved to same or lesser indent, stop looking for title\nif(nextTrimmed&&nextIndent<=lineIndent){break;}// Look for title line\nif(nextTrimmed.startsWith('title:')){title=nextTrimmed.replace('title:','').trim();break;}}pages.push({title,filename,path:`input/pagecontent/${filename}`,level:Math.floor((lineIndent-currentIndent)/2)});}// Handle nested sections (lines that end with : but aren't .md files)\nelse if(trimmedLine.endsWith(':')&&!trimmedLine.includes('.md')){const sectionName=trimmedLine.replace(':','').trim();if(sectionName){pages.push({title:sectionName,isSection:true,level:Math.floor((lineIndent-currentIndent)/2)});}}}}}catch(error){console.error('Failed to parse pages from sushi-config.yaml:',error);}return pages;};const checkPagesExistence=async(owner,repo,branch,parsedPages)=>{const pagesWithStatus=[];for(const page of parsedPages){if(page.isSection){pagesWithStatus.push(page);continue;}let exists=false;let content=null;try{// Check if GitHub service is authenticated and available\nif(githubService.isAuth()&&githubService.octokit){const{data}=await githubService.octokit.rest.repos.getContent({owner,repo,path:page.path,ref:branch});if(data.type==='file'){exists=true;content=data;}}}catch(error){exists=false;}pagesWithStatus.push({...page,exists,content,githubUrl:`https://github.com/${owner}/${repo}/blob/${branch}/${page.path}`});}return pagesWithStatus;};const handleViewPage=page=>{setViewModalPage(page);};const handleEditPage=page=>{setEditModalPage(page);};const handleSavePage=async function(page,content){let action=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'staged';// For staging ground integration, we don't need write access check here\n// as the content is being staged, not directly committed\nif(action==='staged'){// Content has been successfully staged, no further action needed\nconsole.log(`Page ${page.filename} has been staged for commit`);return;}// Legacy direct save functionality (if needed for backward compatibility)\nif(action==='direct'&&!hasWriteAccess){throw new Error('You need write access to save changes. Please upgrade your GitHub token permissions.');}// This direct save path should not be used anymore with staging ground integration\nif(action==='direct'){var _repository$owner3,_page$content,_repository$owner4;const owner=((_repository$owner3=repository.owner)===null||_repository$owner3===void 0?void 0:_repository$owner3.login)||repository.full_name.split('/')[0];const branch=selectedBranch||'main';// Encode content to base64\nconst encodedContent=btoa(content);// Get current file SHA for update\nconst currentSha=(_page$content=page.content)===null||_page$content===void 0?void 0:_page$content.sha;await githubService.octokit.rest.repos.createOrUpdateFileContents({owner,repo:repository.name,path:page.path,message:`Update ${page.filename} via SGEX Workbench`,content:encodedContent,branch,sha:currentSha});// Refresh pages after save\nconst owner2=((_repository$owner4=repository.owner)===null||_repository$owner4===void 0?void 0:_repository$owner4.login)||repository.full_name.split('/')[0];const sushiConfigContent=await fetchSushiConfig(owner2,repository.name,branch);if(sushiConfigContent){const parsedPages=parsePagesFromSushiConfig(sushiConfigContent);const pagesWithStatus=await checkPagesExistence(owner2,repository.name,branch,parsedPages);setPages(pagesWithStatus);}}};// Redirect if missing required context - use useEffect to avoid render issues\nuseEffect(()=>{if(!profile||!repository){navigate('/');}},[profile,repository,navigate]);if(!profile||!repository){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"pages-manager\",children:/*#__PURE__*/_jsx(\"div\",{className:\"pages-manager\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"redirecting-state\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Redirecting...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Missing required context. Redirecting to home page...\"})]})})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"pages-manager\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pages-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pages-content\",children:[/*#__PURE__*/_jsx(DAKStatusBox,{repository:repository,selectedBranch:selectedBranch,hasWriteAccess:hasWriteAccess,profile:profile}),/*#__PURE__*/_jsxs(\"div\",{className:\"pages-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pages-intro\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"component-icon\",style:{color:'#8b5cf6'},children:\"\\uD83D\\uDCC4\"}),\"Pages\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Published page content and documentation for \",/*#__PURE__*/_jsx(\"strong\",{children:repository.name}),selectedBranch&&/*#__PURE__*/_jsxs(\"span\",{children:[\" on branch \",/*#__PURE__*/_jsx(\"code\",{className:\"branch-display\",children:selectedBranch})]}),\". Pages are defined in \",/*#__PURE__*/_jsx(\"code\",{children:\"sushi-config.yaml\"}),\" and stored as Markdown files in \",/*#__PURE__*/_jsx(\"code\",{children:\"input/pagecontent/\"}),\".\"]})]}),(loading||initializingAuth)&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:initializingAuth?'Initializing GitHub authentication...':'Loading pages from sushi-config.yaml...'})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Could not load pages\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-suggestions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Make sure:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"The repository contains a \",/*#__PURE__*/_jsx(\"code\",{children:\"sushi-config.yaml\"}),\" file\",selectedBranch&&` on branch \"${selectedBranch}\"`]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"The sushi-config.yaml file has a \",/*#__PURE__*/_jsx(\"code\",{children:\"pages:\"}),\" section\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"You have access to view the repository contents\"}),selectedBranch&&selectedBranch!=='main'&&/*#__PURE__*/_jsxs(\"li\",{children:[\"The branch \\\"\",selectedBranch,\"\\\" exists and is accessible\"]})]})]})]})]}),!loading&&!initializingAuth&&!error&&pages.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDCC4\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"No pages found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This repository doesn't have any pages defined in sushi-config.yaml\"}),/*#__PURE__*/_jsx(\"div\",{className:\"empty-actions\",children:/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/${repository.full_name}/blob/${selectedBranch||'main'}/sushi-config.yaml`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"btn-secondary\",children:\"View sushi-config.yaml\"})})]}),!loading&&!initializingAuth&&!error&&pages.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"pages-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pages-header-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pages-count\",children:[pages.filter(p=>!p.isSection).length,\" pages found\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"pages-actions\",children:/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/${repository.full_name}/blob/${selectedBranch||'main'}/sushi-config.yaml`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"btn-secondary small\",children:\"View sushi-config.yaml\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pages-tree\",children:pages.map((page,index)=>/*#__PURE__*/_jsx(\"div\",{className:`page-item ${page.isSection?'section':'page'} level-${page.level}`,style:{'--indent-level':page.level},children:page.isSection?/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83D\\uDCC1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"section-title\",children:page.title})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"page-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:`page-status ${page.exists?'exists':'missing'}`,children:page.exists?'✅':'❌'}),/*#__PURE__*/_jsx(\"span\",{className:\"page-name\",children:page.title}),/*#__PURE__*/_jsxs(\"span\",{className:\"page-filename\",children:[\"(\",page.filename,\")\"]})]}),!page.exists&&/*#__PURE__*/_jsx(\"div\",{className:\"page-error\",children:\"File not found in repository\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"page-actions\",children:[page.exists&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewPage(page),className:\"btn-action view\",title:\"View page content\",children:\"\\uD83D\\uDC41\\uFE0F View\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditPage(page),className:\"btn-action edit\",title:\"Edit page with WYSIWYG editor\",children:\"\\u270F\\uFE0F Edit\"}),/*#__PURE__*/_jsx(\"a\",{href:page.githubUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"btn-action source\",title:\"View source on GitHub\",children:\"\\uD83D\\uDD17 Source\"})]})]})},index))})]})]})]}),viewModalPage&&/*#__PURE__*/_jsx(PageViewModal,{page:viewModalPage,onClose:()=>setViewModalPage(null)}),editModalPage&&/*#__PURE__*/_jsx(PageEditModal,{page:editModalPage,onClose:()=>setEditModalPage(null),onSave:handleSavePage})]})});};export default PagesManager;","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","githubService","stagingGroundService","PageLayout","PageViewModal","PageEditModal","DAKStatusBox","jsx","_jsx","jsxs","_jsxs","PagesManager","location","navigate","profile","repository","selectedBranch","state","pages","setPages","loading","setLoading","error","setError","hasWriteAccess","setHasWriteAccess","initializingAuth","setInitializingAuth","viewModalPage","setViewModalPage","editModalPage","setEditModalPage","initializeAuthentication","isAuth","token","sessionStorage","getItem","localStorage","console","log","success","authenticate","warn","removeItem","checkPermissions","_repository$owner","writeAccess","checkRepositoryWritePermissions","owner","login","full_name","split","name","initialize","loadPages","retries","maxRetries","_repository$owner2","repo","branch","octokit","Promise","resolve","setTimeout","Error","sushiConfigContent","fetchSushiConfig","parsedPages","parsePagesFromSushiConfig","pagesWithStatus","checkPagesExistence","message","data","rest","repos","getContent","path","ref","type","content","atob","status","configContent","lines","inPagesSection","currentIndent","i","length","line","trimmedLine","trim","trimStart","lineIndent","endsWith","filename","replace","title","j","nextLine","nextTrimmed","nextIndent","startsWith","push","level","Math","floor","includes","sectionName","isSection","page","exists","githubUrl","handleViewPage","handleEditPage","handleSavePage","action","arguments","undefined","_repository$owner3","_page$content","_repository$owner4","encodedContent","btoa","currentSha","sha","createOrUpdateFileContents","owner2","pageName","children","className","style","color","href","target","rel","filter","p","map","index","onClick","onClose","onSave"],"sources":["/home/runner/work/sgex/sgex/src/components/PagesManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport stagingGroundService from '../services/stagingGroundService';\nimport { PageLayout } from './framework';\nimport PageViewModal from './PageViewModal';\nimport PageEditModal from './PageEditModal';\nimport DAKStatusBox from './DAKStatusBox';\n\nconst PagesManager = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  const { profile, repository, selectedBranch } = location.state || {};\n  \n  const [pages, setPages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hasWriteAccess, setHasWriteAccess] = useState(false);\n  const [initializingAuth, setInitializingAuth] = useState(true);\n  const [viewModalPage, setViewModalPage] = useState(null);\n  const [editModalPage, setEditModalPage] = useState(null);\n\n  // Initialize authentication if needed\n  useEffect(() => {\n    const initializeAuthentication = async () => {\n      // Check if GitHub service is already authenticated\n      if (githubService.isAuth()) {\n        setInitializingAuth(false);\n        return;\n      }\n\n      // Try to restore authentication from stored token\n      const token = sessionStorage.getItem('github_token') || localStorage.getItem('github_token');\n      if (token) {\n        console.log('Restoring GitHub authentication from stored token');\n        const success = githubService.authenticate(token);\n        if (success) {\n          console.log('GitHub authentication restored successfully');\n        } else {\n          console.warn('Failed to restore GitHub authentication');\n          // Clean up invalid tokens\n          sessionStorage.removeItem('github_token');\n          localStorage.removeItem('github_token');\n        }\n      } else {\n        console.warn('No stored GitHub token found');\n      }\n\n      setInitializingAuth(false);\n    };\n\n    initializeAuthentication();\n  }, []);\n\n  // Check write permissions\n  useEffect(() => {\n    const checkPermissions = async () => {\n      if (repository && profile && !initializingAuth) {\n        try {\n          const writeAccess = await githubService.checkRepositoryWritePermissions(\n            repository.owner?.login || repository.full_name.split('/')[0],\n            repository.name\n          );\n          setHasWriteAccess(writeAccess);\n        } catch (error) {\n          console.warn('Could not check write permissions:', error);\n          setHasWriteAccess(false);\n        }\n      }\n    };\n\n    if (!initializingAuth) {\n      checkPermissions();\n    }\n  }, [repository, profile, initializingAuth]);\n\n  // Initialize staging ground service\n  useEffect(() => {\n    if (repository && selectedBranch && !initializingAuth) {\n      stagingGroundService.initialize(repository, selectedBranch);\n    }\n  }, [repository, selectedBranch, initializingAuth]);\n\n  // Load pages from sushi-config.yaml\n  useEffect(() => {\n    const loadPages = async () => {\n      if (!profile || !repository) {\n        navigate('/');\n        return;\n      }\n\n      // Wait for authentication to be initialized\n      if (initializingAuth) {\n        return;\n      }\n\n      // Check if we have authentication after initialization\n      if (!githubService.isAuth()) {\n        setError('GitHub authentication not available. Please return to the home page and sign in again.');\n        setLoading(false);\n        return;\n      }\n\n      // Retry logic for GitHub service authentication\n      let retries = 0;\n      const maxRetries = 3;\n      \n      while (retries < maxRetries) {\n        try {\n          setLoading(true);\n          setError(null);\n\n          const owner = repository.owner?.login || repository.full_name.split('/')[0];\n          const repo = repository.name;\n          const branch = selectedBranch || 'main';\n\n          console.log(`Loading pages for ${owner}/${repo} on branch: ${branch} (attempt ${retries + 1})`);\n          console.log('selectedBranch:', selectedBranch);\n          console.log('GitHub auth status:', githubService.isAuth());\n          console.log('GitHub octokit:', !!githubService.octokit);\n\n          // Double-check authentication status\n          if (!githubService.isAuth() || !githubService.octokit) {\n            if (retries < maxRetries - 1) {\n              console.log('GitHub service not ready, waiting...');\n              await new Promise(resolve => setTimeout(resolve, 1000));\n              retries++;\n              continue;\n            } else {\n              throw new Error('GitHub service not authenticated. Please return to the home page and sign in again.');\n            }\n          }\n\n          // Fetch sushi-config.yaml\n          const sushiConfigContent = await fetchSushiConfig(owner, repo, branch);\n          if (!sushiConfigContent) {\n            throw new Error(`sushi-config.yaml not found in repository on branch \"${branch}\"`);\n          }\n        \n          // Parse pages from sushi-config.yaml\n          const parsedPages = parsePagesFromSushiConfig(sushiConfigContent);\n          \n          // Check if page files exist and get their status\n          const pagesWithStatus = await checkPagesExistence(owner, repo, branch, parsedPages);\n          \n          setPages(pagesWithStatus);\n          break; // Success, exit retry loop\n          \n        } catch (error) {\n          console.error('Failed to load pages:', error);\n          \n          if (retries < maxRetries - 1) {\n            retries++;\n            await new Promise(resolve => setTimeout(resolve, 500));\n            continue;\n          }\n          \n          // Final error after all retries\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n        break;\n      }\n    };\n\n    loadPages();\n  }, [profile, repository, selectedBranch, navigate, initializingAuth]);\n\n  const fetchSushiConfig = async (owner, repo, branch) => {\n    try {\n      // Check if GitHub service is authenticated and available\n      if (!githubService.isAuth() || !githubService.octokit) {\n        throw new Error('GitHub service not authenticated');\n      }\n\n      console.log(`Fetching sushi-config.yaml from ${owner}/${repo} on branch ${branch}`);\n      \n      const { data } = await githubService.octokit.rest.repos.getContent({\n        owner,\n        repo,\n        path: 'sushi-config.yaml',\n        ref: branch\n      });\n\n      if (data.type === 'file' && data.content) {\n        console.log('Successfully fetched sushi-config.yaml');\n        return atob(data.content);\n      }\n      \n      console.log('sushi-config.yaml found but no content or not a file');\n      return null;\n    } catch (error) {\n      console.error('Failed to fetch sushi-config.yaml:', error);\n      \n      // Provide more specific error messages\n      if (error.status === 404) {\n        throw new Error(`sushi-config.yaml not found in repository on branch \"${branch}\"`);\n      } else if (error.status === 403) {\n        throw new Error('Access denied - insufficient permissions to read repository contents');\n      } else if (error.status === 401) {\n        throw new Error('Authentication failed - please check your GitHub token');\n      } else if (!githubService.isAuth()) {\n        throw new Error('GitHub service not authenticated');\n      } else {\n        throw new Error(`Failed to fetch sushi-config.yaml: ${error.message}`);\n      }\n    }\n  };\n\n  const parsePagesFromSushiConfig = (configContent) => {\n    const pages = [];\n    \n    try {\n      // Simple YAML parsing for pages section\n      const lines = configContent.split('\\n');\n      let inPagesSection = false;\n      let currentIndent = 0;\n      \n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        const trimmedLine = line.trim();\n        \n        if (trimmedLine === 'pages:') {\n          inPagesSection = true;\n          currentIndent = line.length - line.trimStart().length;\n          continue;\n        }\n        \n        if (inPagesSection) {\n          const lineIndent = line.length - line.trimStart().length;\n          \n          // If we've moved back to the same or lesser indent level, we're out of pages section\n          if (trimmedLine && lineIndent <= currentIndent) {\n            break;\n          }\n          \n          // Look for markdown file entries (e.g., \"index.md:\")\n          if (trimmedLine.endsWith('.md:')) {\n            const filename = trimmedLine.replace(':', '').trim();\n            let title = filename; // Default title to filename if no title found\n            \n            // Look ahead for the title on the next line(s)\n            for (let j = i + 1; j < lines.length; j++) {\n              const nextLine = lines[j];\n              const nextTrimmed = nextLine.trim();\n              const nextIndent = nextLine.length - nextLine.trimStart().length;\n              \n              // If we've moved to same or lesser indent, stop looking for title\n              if (nextTrimmed && nextIndent <= lineIndent) {\n                break;\n              }\n              \n              // Look for title line\n              if (nextTrimmed.startsWith('title:')) {\n                title = nextTrimmed.replace('title:', '').trim();\n                break;\n              }\n            }\n            \n            pages.push({\n              title,\n              filename,\n              path: `input/pagecontent/${filename}`,\n              level: Math.floor((lineIndent - currentIndent) / 2)\n            });\n          }\n          // Handle nested sections (lines that end with : but aren't .md files)\n          else if (trimmedLine.endsWith(':') && !trimmedLine.includes('.md')) {\n            const sectionName = trimmedLine.replace(':', '').trim();\n            if (sectionName) {\n              pages.push({\n                title: sectionName,\n                isSection: true,\n                level: Math.floor((lineIndent - currentIndent) / 2)\n              });\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Failed to parse pages from sushi-config.yaml:', error);\n    }\n    \n    return pages;\n  };\n\n  const checkPagesExistence = async (owner, repo, branch, parsedPages) => {\n    const pagesWithStatus = [];\n    \n    for (const page of parsedPages) {\n      if (page.isSection) {\n        pagesWithStatus.push(page);\n        continue;\n      }\n      \n      let exists = false;\n      let content = null;\n      \n      try {\n        // Check if GitHub service is authenticated and available\n        if (githubService.isAuth() && githubService.octokit) {\n          const { data } = await githubService.octokit.rest.repos.getContent({\n            owner,\n            repo,\n            path: page.path,\n            ref: branch\n          });\n          \n          if (data.type === 'file') {\n            exists = true;\n            content = data;\n          }\n        }\n      } catch (error) {\n        exists = false;\n      }\n      \n      pagesWithStatus.push({\n        ...page,\n        exists,\n        content,\n        githubUrl: `https://github.com/${owner}/${repo}/blob/${branch}/${page.path}`\n      });\n    }\n    \n    return pagesWithStatus;\n  };\n\n  const handleViewPage = (page) => {\n    setViewModalPage(page);\n  };\n\n  const handleEditPage = (page) => {\n    setEditModalPage(page);\n  };\n\n  const handleSavePage = async (page, content, action = 'staged') => {\n    // For staging ground integration, we don't need write access check here\n    // as the content is being staged, not directly committed\n    if (action === 'staged') {\n      // Content has been successfully staged, no further action needed\n      console.log(`Page ${page.filename} has been staged for commit`);\n      return;\n    }\n    \n    // Legacy direct save functionality (if needed for backward compatibility)\n    if (action === 'direct' && !hasWriteAccess) {\n      throw new Error('You need write access to save changes. Please upgrade your GitHub token permissions.');\n    }\n\n    // This direct save path should not be used anymore with staging ground integration\n    if (action === 'direct') {\n      const owner = repository.owner?.login || repository.full_name.split('/')[0];\n      const branch = selectedBranch || 'main';\n      \n      // Encode content to base64\n      const encodedContent = btoa(content);\n      \n      // Get current file SHA for update\n      const currentSha = page.content?.sha;\n      \n      await githubService.octokit.rest.repos.createOrUpdateFileContents({\n        owner,\n        repo: repository.name,\n        path: page.path,\n        message: `Update ${page.filename} via SGEX Workbench`,\n        content: encodedContent,\n        branch,\n        sha: currentSha\n      });\n\n      // Refresh pages after save\n      const owner2 = repository.owner?.login || repository.full_name.split('/')[0];\n      const sushiConfigContent = await fetchSushiConfig(owner2, repository.name, branch);\n      if (sushiConfigContent) {\n        const parsedPages = parsePagesFromSushiConfig(sushiConfigContent);\n        const pagesWithStatus = await checkPagesExistence(owner2, repository.name, branch, parsedPages);\n        setPages(pagesWithStatus);\n      }\n    }\n  };\n\n\n\n  // Redirect if missing required context - use useEffect to avoid render issues\n  useEffect(() => {\n    if (!profile || !repository) {\n      navigate('/');\n    }\n  }, [profile, repository, navigate]);\n\n  if (!profile || !repository) {\n    return (\n      <PageLayout pageName=\"pages-manager\">\n        <div className=\"pages-manager\">\n          <div className=\"redirecting-state\">\n            <h2>Redirecting...</h2>\n            <p>Missing required context. Redirecting to home page...</p>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout pageName=\"pages-manager\">\n      <div className=\"pages-manager\">\n        <div className=\"pages-content\">\n\n        {/* Staging Ground Status */}\n        <DAKStatusBox\n          repository={repository}\n          selectedBranch={selectedBranch}\n          hasWriteAccess={hasWriteAccess}\n          profile={profile}\n        />\n\n        <div className=\"pages-main\">\n          <div className=\"pages-intro\">\n            <h2>\n              <span className=\"component-icon\" style={{ color: '#8b5cf6' }}>📄</span>\n              Pages\n            </h2>\n            <p>\n              Published page content and documentation for <strong>{repository.name}</strong>\n              {selectedBranch && (\n                <span> on branch <code className=\"branch-display\">{selectedBranch}</code></span>\n              )}. \n              Pages are defined in <code>sushi-config.yaml</code> and stored as Markdown files in <code>input/pagecontent/</code>.\n            </p>\n          </div>\n\n          {(loading || initializingAuth) && (\n            <div className=\"loading-state\">\n              <div className=\"loading-spinner\"></div>\n              <p>{initializingAuth ? 'Initializing GitHub authentication...' : 'Loading pages from sushi-config.yaml...'}</p>\n            </div>\n          )}\n\n          {error && (\n            <div className=\"error-state\">\n              <div className=\"error-icon\">⚠️</div>\n              <div className=\"error-content\">\n                <h3>Could not load pages</h3>\n                <p>{error}</p>\n                <div className=\"error-suggestions\">\n                  <p>Make sure:</p>\n                  <ul>\n                    <li>The repository contains a <code>sushi-config.yaml</code> file{selectedBranch && ` on branch \"${selectedBranch}\"`}</li>\n                    <li>The sushi-config.yaml file has a <code>pages:</code> section</li>\n                    <li>You have access to view the repository contents</li>\n                    {selectedBranch && selectedBranch !== 'main' && <li>The branch \"{selectedBranch}\" exists and is accessible</li>}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {!loading && !initializingAuth && !error && pages.length === 0 && (\n            <div className=\"empty-state\">\n              <div className=\"empty-icon\">📄</div>\n              <h3>No pages found</h3>\n              <p>This repository doesn't have any pages defined in sushi-config.yaml</p>\n              <div className=\"empty-actions\">\n                <a \n                  href={`https://github.com/${repository.full_name}/blob/${selectedBranch || 'main'}/sushi-config.yaml`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"btn-secondary\"\n                >\n                  View sushi-config.yaml\n                </a>\n              </div>\n            </div>\n          )}\n\n          {!loading && !initializingAuth && !error && pages.length > 0 && (\n            <div className=\"pages-list\">\n              <div className=\"pages-header-info\">\n                <div className=\"pages-count\">\n                  {pages.filter(p => !p.isSection).length} pages found\n                </div>\n                <div className=\"pages-actions\">\n                  <a\n                    href={`https://github.com/${repository.full_name}/blob/${selectedBranch || 'main'}/sushi-config.yaml`}\n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"btn-secondary small\"\n                  >\n                    View sushi-config.yaml\n                  </a>\n                </div>\n              </div>\n\n              <div className=\"pages-tree\">\n                {pages.map((page, index) => (\n                  <div \n                    key={index}\n                    className={`page-item ${page.isSection ? 'section' : 'page'} level-${page.level}`}\n                    style={{ '--indent-level': page.level }}\n                  >\n                    {page.isSection ? (\n                      <div className=\"section-header\">\n                        <span className=\"section-icon\">📁</span>\n                        <span className=\"section-title\">{page.title}</span>\n                      </div>\n                    ) : (\n                      <div className=\"page-row\">\n                        <div className=\"page-info\">\n                          <div className=\"page-title\">\n                            <span className={`page-status ${page.exists ? 'exists' : 'missing'}`}>\n                              {page.exists ? '✅' : '❌'}\n                            </span>\n                            <span className=\"page-name\">{page.title}</span>\n                            <span className=\"page-filename\">({page.filename})</span>\n                          </div>\n                          {!page.exists && (\n                            <div className=\"page-error\">\n                              File not found in repository\n                            </div>\n                          )}\n                        </div>\n                        \n                        <div className=\"page-actions\">\n                          {page.exists && (\n                            <button\n                              onClick={() => handleViewPage(page)}\n                              className=\"btn-action view\"\n                              title=\"View page content\"\n                            >\n                              👁️ View\n                            </button>\n                          )}\n                          \n                          <button\n                            onClick={() => handleEditPage(page)}\n                            className=\"btn-action edit\"\n                            title=\"Edit page with WYSIWYG editor\"\n                          >\n                            ✏️ Edit\n                          </button>\n                          \n                          <a\n                            href={page.githubUrl}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"btn-action source\"\n                            title=\"View source on GitHub\"\n                          >\n                            🔗 Source\n                          </a>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* View Modal */}\n      {viewModalPage && (\n        <PageViewModal\n          page={viewModalPage}\n          onClose={() => setViewModalPage(null)}\n        />\n      )}\n\n      {/* Edit Modal */}\n      {editModalPage && (\n        <PageEditModal\n          page={editModalPage}\n          onClose={() => setEditModalPage(null)}\n          onSave={handleSavePage}\n        />\n      )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default PagesManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}