{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import BpmnViewer from'bpmn-js/lib/NavigatedViewer';import githubService from'../services/githubService';import'./BPMNPreview.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BPMNPreview=_ref=>{let{file,repository,selectedBranch,profile}=_ref;const containerRef=useRef(null);const viewerRef=useRef(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const loadPreview=async()=>{if(!file||!repository||!containerRef.current){console.log('üö´ BPMNPreview: Missing required props:',{hasFile:!!file,hasRepository:!!repository,hasContainer:!!containerRef.current,fileName:file===null||file===void 0?void 0:file.name});return;}try{var _repository$owner,_file$path,_file$sha,_bpmnXml3;setLoading(true);setError(null);// Clean container\nif(containerRef.current){containerRef.current.innerHTML='';}const owner=((_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login)||repository.full_name.split('/')[0];const repoName=repository.name;const ref=selectedBranch||'main';const isDemo=((_file$path=file.path)===null||_file$path===void 0?void 0:_file$path.includes('demo/'))||((_file$sha=file.sha)===null||_file$sha===void 0?void 0:_file$sha.startsWith('demo-'));console.log('üé¨ BPMNPreview: Starting preview load for file:',{fileName:file.name,filePath:file.path,owner:owner,repoName:repoName,ref:ref,isDemo:isDemo,hasDownloadUrl:!!file.download_url});let bpmnXml;if(isDemo){// For demo files, create a representative BPMN diagram\nconst processName=file.name.replace('.bpmn','').replace(/[-_]/g,' ');bpmnXml=`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" \n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" \n                  id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g,'_')}\" isExecutable=\"false\">\n    <bpmn:startEvent id=\"StartEvent_1\" name=\"Start\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${processName}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\" name=\"End\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g,'_')}\">\n      <bpmndi:BPMNShape id=\"StartEvent_1_di\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"152\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"158\" y=\"125\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Task_1_di\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"250\" y=\"60\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"EndEvent_1_di\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"402\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"410\" y=\"125\" width=\"20\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"188\" y=\"100\" />\n        <di:waypoint x=\"250\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"350\" y=\"100\" />\n        <di:waypoint x=\"402\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;}else{// For real files, try to load the actual BPMN content\nconsole.log('üì• BPMNPreview: Attempting to load real BPMN file content...');try{var _bpmnXml,_bpmnXml2;console.log('üåê BPMNPreview: Calling githubService.getFileContent with params:',{owner,repoName,path:file.path,ref});bpmnXml=await githubService.getFileContent(owner,repoName,file.path,ref);console.log('‚úÖ BPMNPreview: Successfully loaded BPMN content, length:',(_bpmnXml=bpmnXml)===null||_bpmnXml===void 0?void 0:_bpmnXml.length);console.log('üîç BPMNPreview: Content preview (first 100 chars):',(_bpmnXml2=bpmnXml)===null||_bpmnXml2===void 0?void 0:_bpmnXml2.substring(0,100));// Validate that we got actual BPMN content\nif(!bpmnXml||typeof bpmnXml!=='string'){throw new Error('Invalid content received: not a string');}if(!bpmnXml.includes('bpmn:definitions')&&!bpmnXml.includes('<definitions')){console.warn('‚ö†Ô∏è BPMNPreview: Content does not appear to be valid BPMN XML');console.log('üîç BPMNPreview: Full content received:',bpmnXml);throw new Error('Content does not appear to be valid BPMN');}console.log('‚úÖ BPMNPreview: BPMN content validation passed');}catch(fileError){console.warn('‚ùå BPMNPreview: Could not load BPMN file content:',fileError.message,fileError.status);console.error('üîç BPMNPreview: File loading error details:',{error:fileError,stack:fileError.stack,fileName:file.name,filePath:file.path,owner,repoName,ref});// Fallback to a generic BPMN diagram if file can't be loaded\nconst processName=file.name.replace('.bpmn','').replace(/[-_]/g,' ');console.log('üîÑ BPMNPreview: Using fallback BPMN diagram for:',processName);bpmnXml=`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" \n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" \n                  id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g,'_')}\" isExecutable=\"false\">\n    <bpmn:startEvent id=\"StartEvent_1\" name=\"Start\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${processName}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\" name=\"End\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g,'_')}\">\n      <bpmndi:BPMNShape id=\"StartEvent_1_di\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"152\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"158\" y=\"125\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Task_1_di\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"250\" y=\"60\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"EndEvent_1_di\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"402\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"410\" y=\"125\" width=\"20\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"188\" y=\"100\" />\n        <di:waypoint x=\"250\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"350\" y=\"100\" />\n        <di:waypoint x=\"402\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;}}console.log('üîß BPMNPreview: Creating BPMN viewer...');console.log('üîç BPMNPreview: About to create viewer with BPMN content length:',(_bpmnXml3=bpmnXml)===null||_bpmnXml3===void 0?void 0:_bpmnXml3.length);// Create and initialize viewer with clean separation\nconst viewer=new BpmnViewer();viewerRef.current=viewer;console.log('‚úÖ BPMNPreview: BPMN viewer instance created successfully');try{var _containerRef$current,_containerRef$current2,_containerRef$current3,_containerRef$current4,_bpmnXml4,_importResult$warning,_importResult$warning2,_importResult$warning3,_viewbox$inner,_viewbox$inner2,_containerRef$current5,_containerRef$current6,_containerRef$current7,_containerRef$current8;console.log('üîó BPMNPreview: Attaching viewer to container...');console.log('üîç BPMNPreview: Container element details:',{exists:!!containerRef.current,className:(_containerRef$current=containerRef.current)===null||_containerRef$current===void 0?void 0:_containerRef$current.className,width:(_containerRef$current2=containerRef.current)===null||_containerRef$current2===void 0?void 0:_containerRef$current2.offsetWidth,height:(_containerRef$current3=containerRef.current)===null||_containerRef$current3===void 0?void 0:_containerRef$current3.offsetHeight,parentExists:!!((_containerRef$current4=containerRef.current)!==null&&_containerRef$current4!==void 0&&_containerRef$current4.parentElement)});// Create timeout promise for viewer operations\nconst createTimeoutPromise=function(operation){let timeoutMs=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10000;return new Promise((_,reject)=>{setTimeout(()=>{reject(new Error(`${operation} timeout after ${timeoutMs}ms`));},timeoutMs);});};// Attach viewer to container first with timeout\nconst attachPromise=viewer.attachTo(containerRef.current);await Promise.race([attachPromise,createTimeoutPromise('Viewer attach',5000)]);console.log('‚úÖ BPMNPreview: Successfully attached viewer to container');console.log('üìä BPMNPreview: Importing BPMN XML...');console.log('üîç BPMNPreview: XML content preview (first 200 chars):',(_bpmnXml4=bpmnXml)===null||_bpmnXml4===void 0?void 0:_bpmnXml4.substring(0,200));// Import XML with timeout handling\nconst importStartTime=Date.now();const importPromise=viewer.importXML(bpmnXml);const importResult=await Promise.race([importPromise,createTimeoutPromise('XML import',15000)]);const importTime=Date.now()-importStartTime;console.log(`‚úÖ BPMNPreview: Successfully imported BPMN XML in ${importTime}ms`);console.log('üìä BPMNPreview: Import result details:',{warnings:(importResult===null||importResult===void 0?void 0:(_importResult$warning=importResult.warnings)===null||_importResult$warning===void 0?void 0:_importResult$warning.length)||0,hasWarnings:!!(importResult!==null&&importResult!==void 0&&(_importResult$warning2=importResult.warnings)!==null&&_importResult$warning2!==void 0&&_importResult$warning2.length),warningDetails:importResult===null||importResult===void 0?void 0:importResult.warnings});if((importResult===null||importResult===void 0?void 0:(_importResult$warning3=importResult.warnings)===null||_importResult$warning3===void 0?void 0:_importResult$warning3.length)>0){console.warn('‚ö†Ô∏è BPMNPreview: Import warnings:',importResult.warnings);}console.log('üéØ BPMNPreview: Fitting to viewport...');// Fit to viewport for preview\nconst canvas=viewer.get('canvas');console.log('üîç BPMNPreview: Canvas service retrieved:',!!canvas);const zoomStartTime=Date.now();canvas.zoom('fit-viewport');const zoomTime=Date.now()-zoomStartTime;console.log(`‚úÖ BPMNPreview: Successfully fitted to viewport in ${zoomTime}ms`);// Final validation - check if diagram was actually rendered\nconst viewbox=canvas.viewbox();console.log('üîç BPMNPreview: Final viewport details:',{viewbox,hasElements:((_viewbox$inner=viewbox.inner)===null||_viewbox$inner===void 0?void 0:_viewbox$inner.width)>0&&((_viewbox$inner2=viewbox.inner)===null||_viewbox$inner2===void 0?void 0:_viewbox$inner2.height)>0,containerHasContent:((_containerRef$current5=containerRef.current)===null||_containerRef$current5===void 0?void 0:(_containerRef$current6=_containerRef$current5.children)===null||_containerRef$current6===void 0?void 0:_containerRef$current6.length)>0});// Check if container actually has content\nif(((_containerRef$current7=containerRef.current)===null||_containerRef$current7===void 0?void 0:(_containerRef$current8=_containerRef$current7.children)===null||_containerRef$current8===void 0?void 0:_containerRef$current8.length)===0){console.warn('‚ö†Ô∏è BPMNPreview: Container is empty after rendering - potential issue');}console.log(`üéâ BPMNPreview: Successfully rendered preview for: ${file.name}`);setLoading(false);}catch(importError){var _bpmnXml5,_bpmnXml6,_containerRef$current9,_containerRef$current0,_containerRef$current1,_containerRef$current10;console.error('‚ùå BPMNPreview: Failed to import BPMN XML:',importError);console.error('üîç BPMNPreview: Import error details:',{message:importError.message,stack:importError.stack,fileName:file.name,xmlLength:(_bpmnXml5=bpmnXml)===null||_bpmnXml5===void 0?void 0:_bpmnXml5.length,xmlPreview:(_bpmnXml6=bpmnXml)===null||_bpmnXml6===void 0?void 0:_bpmnXml6.substring(0,300),containerState:{exists:!!containerRef.current,hasChildren:((_containerRef$current9=containerRef.current)===null||_containerRef$current9===void 0?void 0:(_containerRef$current0=_containerRef$current9.children)===null||_containerRef$current0===void 0?void 0:_containerRef$current0.length)||0,clientHeight:(_containerRef$current1=containerRef.current)===null||_containerRef$current1===void 0?void 0:_containerRef$current1.clientHeight,clientWidth:(_containerRef$current10=containerRef.current)===null||_containerRef$current10===void 0?void 0:_containerRef$current10.clientWidth}});setError(`Failed to load preview: ${importError.message}`);setLoading(false);}}catch(renderError){console.error('‚ùå BPMNPreview: Failed to render BPMN preview:',renderError.message||renderError);console.log('üîç BPMNPreview: Error details:',{fileName:file.name,filePath:file.path,errorMessage:renderError.message,errorStack:renderError.stack});setError('Failed to load preview');setLoading(false);}};// Cleanup function\nconst cleanup=()=>{if(viewerRef.current){try{viewerRef.current.destroy();}catch(cleanupError){console.warn('Error cleaning up BPMN viewer:',cleanupError);}viewerRef.current=null;}};// Only run if we have all required props\nif(file&&repository&&containerRef.current){console.log('üöÄ BPMNPreview: Starting loadPreview for:',file.name);loadPreview();}else{console.log('‚è≠Ô∏è BPMNPreview: Skipping loadPreview, missing props:',{hasFile:!!file,hasRepository:!!repository,hasContainer:!!containerRef.current,fileName:file===null||file===void 0?void 0:file.name});setLoading(false);}return cleanup;},[file,repository,selectedBranch,profile]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"bpmn-preview\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"preview-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"preview-spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading preview...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"bpmn-preview\",children:/*#__PURE__*/_jsx(\"div\",{className:\"preview-error\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u274C \",error]})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"bpmn-preview\",children:/*#__PURE__*/_jsx(\"div\",{className:\"preview-container\",ref:containerRef})});};export default BPMNPreview;","map":{"version":3,"names":["React","useState","useEffect","useRef","BpmnViewer","githubService","jsx","_jsx","jsxs","_jsxs","BPMNPreview","_ref","file","repository","selectedBranch","profile","containerRef","viewerRef","loading","setLoading","error","setError","loadPreview","current","console","log","hasFile","hasRepository","hasContainer","fileName","name","_repository$owner","_file$path","_file$sha","_bpmnXml3","innerHTML","owner","login","full_name","split","repoName","ref","isDemo","path","includes","sha","startsWith","filePath","hasDownloadUrl","download_url","bpmnXml","processName","replace","_bpmnXml","_bpmnXml2","getFileContent","length","substring","Error","warn","fileError","message","status","stack","viewer","_containerRef$current","_containerRef$current2","_containerRef$current3","_containerRef$current4","_bpmnXml4","_importResult$warning","_importResult$warning2","_importResult$warning3","_viewbox$inner","_viewbox$inner2","_containerRef$current5","_containerRef$current6","_containerRef$current7","_containerRef$current8","exists","className","width","offsetWidth","height","offsetHeight","parentExists","parentElement","createTimeoutPromise","operation","timeoutMs","arguments","undefined","Promise","_","reject","setTimeout","attachPromise","attachTo","race","importStartTime","Date","now","importPromise","importXML","importResult","importTime","warnings","hasWarnings","warningDetails","canvas","get","zoomStartTime","zoom","zoomTime","viewbox","hasElements","inner","containerHasContent","children","importError","_bpmnXml5","_bpmnXml6","_containerRef$current9","_containerRef$current0","_containerRef$current1","_containerRef$current10","xmlLength","xmlPreview","containerState","hasChildren","clientHeight","clientWidth","renderError","errorMessage","errorStack","cleanup","destroy","cleanupError"],"sources":["/home/runner/work/sgex/sgex/src/components/BPMNPreview.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport BpmnViewer from 'bpmn-js/lib/NavigatedViewer';\nimport githubService from '../services/githubService';\nimport './BPMNPreview.css';\n\nconst BPMNPreview = ({ file, repository, selectedBranch, profile }) => {\n  const containerRef = useRef(null);\n  const viewerRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadPreview = async () => {\n      if (!file || !repository || !containerRef.current) {\n        console.log('üö´ BPMNPreview: Missing required props:', {\n          hasFile: !!file,\n          hasRepository: !!repository,\n          hasContainer: !!containerRef.current,\n          fileName: file?.name\n        });\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Clean container\n        if (containerRef.current) {\n          containerRef.current.innerHTML = '';\n        }\n\n        const owner = repository.owner?.login || repository.full_name.split('/')[0];\n        const repoName = repository.name;\n        const ref = selectedBranch || 'main';\n        const isDemo = file.path?.includes('demo/') || file.sha?.startsWith('demo-');\n\n        console.log('üé¨ BPMNPreview: Starting preview load for file:', {\n          fileName: file.name,\n          filePath: file.path,\n          owner: owner,\n          repoName: repoName,\n          ref: ref,\n          isDemo: isDemo,\n          hasDownloadUrl: !!file.download_url\n        });\n\n        let bpmnXml;\n\n        if (isDemo) {\n          // For demo files, create a representative BPMN diagram\n          const processName = file.name.replace('.bpmn', '').replace(/[-_]/g, ' ');\n          bpmnXml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" \n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" \n                  id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\" isExecutable=\"false\">\n    <bpmn:startEvent id=\"StartEvent_1\" name=\"Start\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${processName}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\" name=\"End\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\">\n      <bpmndi:BPMNShape id=\"StartEvent_1_di\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"152\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"158\" y=\"125\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Task_1_di\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"250\" y=\"60\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"EndEvent_1_di\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"402\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"410\" y=\"125\" width=\"20\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"188\" y=\"100\" />\n        <di:waypoint x=\"250\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"350\" y=\"100\" />\n        <di:waypoint x=\"402\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;\n        } else {\n          // For real files, try to load the actual BPMN content\n          console.log('üì• BPMNPreview: Attempting to load real BPMN file content...');\n          try {\n            console.log('üåê BPMNPreview: Calling githubService.getFileContent with params:', {\n              owner, repoName, path: file.path, ref\n            });\n            bpmnXml = await githubService.getFileContent(owner, repoName, file.path, ref);\n            console.log('‚úÖ BPMNPreview: Successfully loaded BPMN content, length:', bpmnXml?.length);\n            console.log('üîç BPMNPreview: Content preview (first 100 chars):', bpmnXml?.substring(0, 100));\n            \n            // Validate that we got actual BPMN content\n            if (!bpmnXml || typeof bpmnXml !== 'string') {\n              throw new Error('Invalid content received: not a string');\n            }\n            \n            if (!bpmnXml.includes('bpmn:definitions') && !bpmnXml.includes('<definitions')) {\n              console.warn('‚ö†Ô∏è BPMNPreview: Content does not appear to be valid BPMN XML');\n              console.log('üîç BPMNPreview: Full content received:', bpmnXml);\n              throw new Error('Content does not appear to be valid BPMN');\n            }\n            \n            console.log('‚úÖ BPMNPreview: BPMN content validation passed');\n          } catch (fileError) {\n            console.warn('‚ùå BPMNPreview: Could not load BPMN file content:', fileError.message, fileError.status);\n            console.error('üîç BPMNPreview: File loading error details:', {\n              error: fileError,\n              stack: fileError.stack,\n              fileName: file.name,\n              filePath: file.path,\n              owner,\n              repoName,\n              ref\n            });\n            // Fallback to a generic BPMN diagram if file can't be loaded\n            const processName = file.name.replace('.bpmn', '').replace(/[-_]/g, ' ');\n            console.log('üîÑ BPMNPreview: Using fallback BPMN diagram for:', processName);\n            bpmnXml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" \n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" \n                  id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\" isExecutable=\"false\">\n    <bpmn:startEvent id=\"StartEvent_1\" name=\"Start\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${processName}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\" name=\"End\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\">\n      <bpmndi:BPMNShape id=\"StartEvent_1_di\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"152\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"158\" y=\"125\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Task_1_di\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"250\" y=\"60\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"EndEvent_1_di\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"402\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"410\" y=\"125\" width=\"20\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"188\" y=\"100\" />\n        <di:waypoint x=\"250\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"350\" y=\"100\" />\n        <di:waypoint x=\"402\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;\n          }\n        }\n\n        console.log('üîß BPMNPreview: Creating BPMN viewer...');\n        console.log('üîç BPMNPreview: About to create viewer with BPMN content length:', bpmnXml?.length);\n        \n        // Create and initialize viewer with clean separation\n        const viewer = new BpmnViewer();\n        viewerRef.current = viewer;\n        \n        console.log('‚úÖ BPMNPreview: BPMN viewer instance created successfully');\n\n        try {\n          console.log('üîó BPMNPreview: Attaching viewer to container...');\n          console.log('üîç BPMNPreview: Container element details:', {\n            exists: !!containerRef.current,\n            className: containerRef.current?.className,\n            width: containerRef.current?.offsetWidth,\n            height: containerRef.current?.offsetHeight,\n            parentExists: !!containerRef.current?.parentElement\n          });\n          \n          // Create timeout promise for viewer operations\n          const createTimeoutPromise = (operation, timeoutMs = 10000) => {\n            return new Promise((_, reject) => {\n              setTimeout(() => {\n                reject(new Error(`${operation} timeout after ${timeoutMs}ms`));\n              }, timeoutMs);\n            });\n          };\n          \n          // Attach viewer to container first with timeout\n          const attachPromise = viewer.attachTo(containerRef.current);\n          await Promise.race([attachPromise, createTimeoutPromise('Viewer attach', 5000)]);\n          console.log('‚úÖ BPMNPreview: Successfully attached viewer to container');\n          \n          console.log('üìä BPMNPreview: Importing BPMN XML...');\n          console.log('üîç BPMNPreview: XML content preview (first 200 chars):', bpmnXml?.substring(0, 200));\n          \n          // Import XML with timeout handling\n          const importStartTime = Date.now();\n          const importPromise = viewer.importXML(bpmnXml);\n          const importResult = await Promise.race([importPromise, createTimeoutPromise('XML import', 15000)]);\n          const importTime = Date.now() - importStartTime;\n          \n          console.log(`‚úÖ BPMNPreview: Successfully imported BPMN XML in ${importTime}ms`);\n          console.log('üìä BPMNPreview: Import result details:', {\n            warnings: importResult?.warnings?.length || 0,\n            hasWarnings: !!(importResult?.warnings?.length),\n            warningDetails: importResult?.warnings\n          });\n          \n          if (importResult?.warnings?.length > 0) {\n            console.warn('‚ö†Ô∏è BPMNPreview: Import warnings:', importResult.warnings);\n          }\n          \n          console.log('üéØ BPMNPreview: Fitting to viewport...');\n          // Fit to viewport for preview\n          const canvas = viewer.get('canvas');\n          console.log('üîç BPMNPreview: Canvas service retrieved:', !!canvas);\n          \n          const zoomStartTime = Date.now();\n          canvas.zoom('fit-viewport');\n          const zoomTime = Date.now() - zoomStartTime;\n          \n          console.log(`‚úÖ BPMNPreview: Successfully fitted to viewport in ${zoomTime}ms`);\n\n          // Final validation - check if diagram was actually rendered\n          const viewbox = canvas.viewbox();\n          console.log('üîç BPMNPreview: Final viewport details:', {\n            viewbox,\n            hasElements: viewbox.inner?.width > 0 && viewbox.inner?.height > 0,\n            containerHasContent: containerRef.current?.children?.length > 0\n          });\n          \n          // Check if container actually has content\n          if (containerRef.current?.children?.length === 0) {\n            console.warn('‚ö†Ô∏è BPMNPreview: Container is empty after rendering - potential issue');\n          }\n\n          console.log(`üéâ BPMNPreview: Successfully rendered preview for: ${file.name}`);\n          setLoading(false);\n        } catch (importError) {\n          console.error('‚ùå BPMNPreview: Failed to import BPMN XML:', importError);\n          console.error('üîç BPMNPreview: Import error details:', {\n            message: importError.message,\n            stack: importError.stack,\n            fileName: file.name,\n            xmlLength: bpmnXml?.length,\n            xmlPreview: bpmnXml?.substring(0, 300),\n            containerState: {\n              exists: !!containerRef.current,\n              hasChildren: containerRef.current?.children?.length || 0,\n              clientHeight: containerRef.current?.clientHeight,\n              clientWidth: containerRef.current?.clientWidth\n            }\n          });\n          setError(`Failed to load preview: ${importError.message}`);\n          setLoading(false);\n        }\n\n      } catch (renderError) {\n        console.error('‚ùå BPMNPreview: Failed to render BPMN preview:', renderError.message || renderError);\n        console.log('üîç BPMNPreview: Error details:', {\n          fileName: file.name,\n          filePath: file.path,\n          errorMessage: renderError.message,\n          errorStack: renderError.stack\n        });\n        setError('Failed to load preview');\n        setLoading(false);\n      }\n    };\n\n    // Cleanup function\n    const cleanup = () => {\n      if (viewerRef.current) {\n        try {\n          viewerRef.current.destroy();\n        } catch (cleanupError) {\n          console.warn('Error cleaning up BPMN viewer:', cleanupError);\n        }\n        viewerRef.current = null;\n      }\n    };\n\n    // Only run if we have all required props\n    if (file && repository && containerRef.current) {\n      console.log('üöÄ BPMNPreview: Starting loadPreview for:', file.name);\n      loadPreview();\n    } else {\n      console.log('‚è≠Ô∏è BPMNPreview: Skipping loadPreview, missing props:', {\n        hasFile: !!file,\n        hasRepository: !!repository,\n        hasContainer: !!containerRef.current,\n        fileName: file?.name\n      });\n      setLoading(false);\n    }\n\n    return cleanup;\n  }, [file, repository, selectedBranch, profile]);\n\n  if (loading) {\n    return (\n      <div className=\"bpmn-preview\">\n        <div className=\"preview-loading\">\n          <div className=\"preview-spinner\"></div>\n          <span>Loading preview...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bpmn-preview\">\n        <div className=\"preview-error\">\n          <span>‚ùå {error}</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bpmn-preview\">\n      <div className=\"preview-container\" ref={containerRef}>\n        {/* BPMN viewer will be rendered here */}\n      </div>\n    </div>\n  );\n};\n\nexport default BPMNPreview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}