{"ast":null,"code":"class RequestError extends Error {\n  name;\n  /**\n   * http status code\n   */\n  status;\n  /**\n   * Request options that lead to the error.\n   */\n  request;\n  /**\n   * Response object if a response was received\n   */\n  response;\n  constructor(message, statusCode, options) {\n    super(message);\n    this.name = \"HttpError\";\n    this.status = Number.parseInt(statusCode);\n    if (Number.isNaN(this.status)) {\n      this.status = 0;\n    }\n    if (\"response\" in options) {\n      this.response = options.response;\n    }\n    const requestCopy = Object.assign({}, options.request);\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(/(?<! ) .*$/, \" [REDACTED]\")\n      });\n    }\n    requestCopy.url = requestCopy.url.replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\").replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy;\n  }\n}\nexport { RequestError };","map":{"version":3,"names":["RequestError","Error","name","status","request","response","constructor","message","statusCode","options","Number","parseInt","isNaN","requestCopy","Object","assign","headers","authorization","replace","url"],"sources":["/home/runner/work/sgex/sgex/node_modules/@octokit/request-error/dist-src/index.js"],"sourcesContent":["class RequestError extends Error {\n  name;\n  /**\n   * http status code\n   */\n  status;\n  /**\n   * Request options that lead to the error.\n   */\n  request;\n  /**\n   * Response object if a response was received\n   */\n  response;\n  constructor(message, statusCode, options) {\n    super(message);\n    this.name = \"HttpError\";\n    this.status = Number.parseInt(statusCode);\n    if (Number.isNaN(this.status)) {\n      this.status = 0;\n    }\n    if (\"response\" in options) {\n      this.response = options.response;\n    }\n    const requestCopy = Object.assign({}, options.request);\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(\n          /(?<! ) .*$/,\n          \" [REDACTED]\"\n        )\n      });\n    }\n    requestCopy.url = requestCopy.url.replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\").replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy;\n  }\n}\nexport {\n  RequestError\n};\n"],"mappings":"AAAA,MAAMA,YAAY,SAASC,KAAK,CAAC;EAC/BC,IAAI;EACJ;AACF;AACA;EACEC,MAAM;EACN;AACF;AACA;EACEC,OAAO;EACP;AACF;AACA;EACEC,QAAQ;EACRC,WAAWA,CAACC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAE;IACxC,KAAK,CAACF,OAAO,CAAC;IACd,IAAI,CAACL,IAAI,GAAG,WAAW;IACvB,IAAI,CAACC,MAAM,GAAGO,MAAM,CAACC,QAAQ,CAACH,UAAU,CAAC;IACzC,IAAIE,MAAM,CAACE,KAAK,CAAC,IAAI,CAACT,MAAM,CAAC,EAAE;MAC7B,IAAI,CAACA,MAAM,GAAG,CAAC;IACjB;IACA,IAAI,UAAU,IAAIM,OAAO,EAAE;MACzB,IAAI,CAACJ,QAAQ,GAAGI,OAAO,CAACJ,QAAQ;IAClC;IACA,MAAMQ,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,OAAO,CAACL,OAAO,CAAC;IACtD,IAAIK,OAAO,CAACL,OAAO,CAACY,OAAO,CAACC,aAAa,EAAE;MACzCJ,WAAW,CAACG,OAAO,GAAGF,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,OAAO,CAACL,OAAO,CAACY,OAAO,EAAE;QAC/DC,aAAa,EAAER,OAAO,CAACL,OAAO,CAACY,OAAO,CAACC,aAAa,CAACC,OAAO,CAC1D,YAAY,EACZ,aACF;MACF,CAAC,CAAC;IACJ;IACAL,WAAW,CAACM,GAAG,GAAGN,WAAW,CAACM,GAAG,CAACD,OAAO,CAAC,sBAAsB,EAAE,0BAA0B,CAAC,CAACA,OAAO,CAAC,qBAAqB,EAAE,yBAAyB,CAAC;IACvJ,IAAI,CAACd,OAAO,GAAGS,WAAW;EAC5B;AACF;AACA,SACEb,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}