{"ast":null,"code":"var MARKER_OK = 'connect-ok',\n  MARKER_NOT_OK = 'connect-not-ok';\n\n/**\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../connect/Connect').default} Connect\n * @typedef {import('../dragging/Dragging').default} Dragging\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('../mouse/Mouse').default} Mouse\n * @typedef {import('../rules/Rules').default} Rules\n * @typedef {import('../tool-manager/ToolManager').default} ToolManager\n *\n * @typedef {import('../../model/Types').Element} Element\n */\n\n/**\n * @class\n * @constructor\n *\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {Connect} connect\n * @param {Canvas} canvas\n * @param {ToolManager} toolManager\n * @param {Rules} rules\n * @param {Mouse} mouse\n */\nexport default function GlobalConnect(eventBus, dragging, connect, canvas, toolManager, rules, mouse) {\n  var self = this;\n  this._dragging = dragging;\n  this._rules = rules;\n  this._mouse = mouse;\n  toolManager.registerTool('global-connect', {\n    tool: 'global-connect',\n    dragging: 'global-connect.drag'\n  });\n  eventBus.on('global-connect.hover', function (event) {\n    var context = event.context,\n      startTarget = event.hover;\n    var canStartConnect = context.canStartConnect = self.canStartConnect(startTarget);\n\n    // simply ignore hover\n    if (canStartConnect === null) {\n      return;\n    }\n    context.startTarget = startTarget;\n    canvas.addMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n  });\n  eventBus.on(['global-connect.out', 'global-connect.cleanup'], function (event) {\n    var startTarget = event.context.startTarget,\n      canStartConnect = event.context.canStartConnect;\n    if (startTarget) {\n      canvas.removeMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n    }\n  });\n  eventBus.on(['global-connect.ended'], function (event) {\n    var context = event.context,\n      startTarget = context.startTarget,\n      startPosition = {\n        x: event.x,\n        y: event.y\n      };\n    var canStartConnect = self.canStartConnect(startTarget);\n    if (!canStartConnect) {\n      return;\n    }\n    eventBus.once('element.out', function () {\n      eventBus.once(['connect.ended', 'connect.canceled'], function () {\n        eventBus.fire('global-connect.drag.ended');\n      });\n      connect.start(null, startTarget, startPosition);\n    });\n    return false;\n  });\n}\nGlobalConnect.$inject = ['eventBus', 'dragging', 'connect', 'canvas', 'toolManager', 'rules', 'mouse'];\n\n/**\n * Initiates tool activity.\n */\nGlobalConnect.prototype.start = function (event, autoActivate) {\n  this._dragging.init(event, 'global-connect', {\n    autoActivate: autoActivate,\n    trapClick: false,\n    data: {\n      context: {}\n    }\n  });\n};\nGlobalConnect.prototype.toggle = function () {\n  if (this.isActive()) {\n    return this._dragging.cancel();\n  }\n  var mouseEvent = this._mouse.getLastMoveEvent();\n  return this.start(mouseEvent, !!mouseEvent);\n};\nGlobalConnect.prototype.isActive = function () {\n  var context = this._dragging.context();\n  return context && /^global-connect/.test(context.prefix);\n};\n\n/**\n * Check if source element can initiate connection.\n *\n * @param {Element} startTarget\n * @return {boolean}\n */\nGlobalConnect.prototype.canStartConnect = function (startTarget) {\n  return this._rules.allowed('connection.start', {\n    source: startTarget\n  });\n};","map":{"version":3,"names":["MARKER_OK","MARKER_NOT_OK","GlobalConnect","eventBus","dragging","connect","canvas","toolManager","rules","mouse","self","_dragging","_rules","_mouse","registerTool","tool","on","event","context","startTarget","hover","canStartConnect","addMarker","removeMarker","startPosition","x","y","once","fire","start","$inject","prototype","autoActivate","init","trapClick","data","toggle","isActive","cancel","mouseEvent","getLastMoveEvent","test","prefix","allowed","source"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/global-connect/GlobalConnect.js"],"sourcesContent":["var MARKER_OK = 'connect-ok',\n    MARKER_NOT_OK = 'connect-not-ok';\n\n/**\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../connect/Connect').default} Connect\n * @typedef {import('../dragging/Dragging').default} Dragging\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('../mouse/Mouse').default} Mouse\n * @typedef {import('../rules/Rules').default} Rules\n * @typedef {import('../tool-manager/ToolManager').default} ToolManager\n *\n * @typedef {import('../../model/Types').Element} Element\n */\n\n/**\n * @class\n * @constructor\n *\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {Connect} connect\n * @param {Canvas} canvas\n * @param {ToolManager} toolManager\n * @param {Rules} rules\n * @param {Mouse} mouse\n */\nexport default function GlobalConnect(\n    eventBus, dragging, connect,\n    canvas, toolManager, rules,\n    mouse) {\n\n  var self = this;\n\n  this._dragging = dragging;\n  this._rules = rules;\n  this._mouse = mouse;\n\n  toolManager.registerTool('global-connect', {\n    tool: 'global-connect',\n    dragging: 'global-connect.drag'\n  });\n\n  eventBus.on('global-connect.hover', function(event) {\n    var context = event.context,\n        startTarget = event.hover;\n\n    var canStartConnect = context.canStartConnect = self.canStartConnect(startTarget);\n\n    // simply ignore hover\n    if (canStartConnect === null) {\n      return;\n    }\n\n    context.startTarget = startTarget;\n\n    canvas.addMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n  });\n\n\n  eventBus.on([ 'global-connect.out', 'global-connect.cleanup' ], function(event) {\n    var startTarget = event.context.startTarget,\n        canStartConnect = event.context.canStartConnect;\n\n    if (startTarget) {\n      canvas.removeMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n    }\n  });\n\n\n  eventBus.on([ 'global-connect.ended' ], function(event) {\n    var context = event.context,\n        startTarget = context.startTarget,\n        startPosition = {\n          x: event.x,\n          y: event.y\n        };\n\n    var canStartConnect = self.canStartConnect(startTarget);\n\n    if (!canStartConnect) {\n      return;\n    }\n\n    eventBus.once('element.out', function() {\n      eventBus.once([ 'connect.ended', 'connect.canceled' ], function() {\n        eventBus.fire('global-connect.drag.ended');\n      });\n\n      connect.start(null, startTarget, startPosition);\n    });\n\n    return false;\n  });\n}\n\nGlobalConnect.$inject = [\n  'eventBus',\n  'dragging',\n  'connect',\n  'canvas',\n  'toolManager',\n  'rules',\n  'mouse'\n];\n\n/**\n * Initiates tool activity.\n */\nGlobalConnect.prototype.start = function(event, autoActivate) {\n  this._dragging.init(event, 'global-connect', {\n    autoActivate: autoActivate,\n    trapClick: false,\n    data: {\n      context: {}\n    }\n  });\n};\n\nGlobalConnect.prototype.toggle = function() {\n\n  if (this.isActive()) {\n    return this._dragging.cancel();\n  }\n\n  var mouseEvent = this._mouse.getLastMoveEvent();\n\n  return this.start(mouseEvent, !!mouseEvent);\n};\n\nGlobalConnect.prototype.isActive = function() {\n  var context = this._dragging.context();\n\n  return context && /^global-connect/.test(context.prefix);\n};\n\n/**\n * Check if source element can initiate connection.\n *\n * @param {Element} startTarget\n * @return {boolean}\n */\nGlobalConnect.prototype.canStartConnect = function(startTarget) {\n  return this._rules.allowed('connection.start', { source: startTarget });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}