{"ast":null,"code":"import { assign } from 'min-dash';\nimport inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { getConnectionAdjustment as getConnectionAnchorPoint } from './util/ConnectionLayoutUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A component that makes sure that Associations connected to Connections\n * are updated together with the Connection.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function LayoutConnectionBehavior(eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n  function getnewAnchorPoint(event, point) {\n    var context = event.context,\n      connection = context.connection,\n      hints = assign({}, context.hints),\n      newWaypoints = context.newWaypoints || connection.waypoints,\n      oldWaypoints = context.oldWaypoints;\n    if (typeof hints.startChanged === 'undefined') {\n      hints.startChanged = !!hints.connectionStart;\n    }\n    if (typeof hints.endChanged === 'undefined') {\n      hints.endChanged = !!hints.connectionEnd;\n    }\n    return getConnectionAnchorPoint(point, newWaypoints, oldWaypoints, hints);\n  }\n  this.postExecute(['connection.layout', 'connection.updateWaypoints'], function (event) {\n    var context = event.context;\n    var connection = context.connection,\n      outgoing = connection.outgoing,\n      incoming = connection.incoming;\n    incoming.forEach(function (connection) {\n      var endPoint = connection.waypoints[connection.waypoints.length - 1];\n      var newEndpoint = getnewAnchorPoint(event, endPoint);\n      var newWaypoints = [].concat(connection.waypoints.slice(0, -1), [newEndpoint]);\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n    outgoing.forEach(function (connection) {\n      var startpoint = connection.waypoints[0];\n      var newStartpoint = getnewAnchorPoint(event, startpoint);\n      var newWaypoints = [].concat([newStartpoint], connection.waypoints.slice(1));\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n  });\n  this.postExecute(['connection.move'], function (event) {\n    var context = event.context;\n    var connection = context.connection,\n      outgoing = connection.outgoing,\n      incoming = connection.incoming,\n      delta = context.delta;\n    incoming.forEach(function (connection) {\n      var endPoint = connection.waypoints[connection.waypoints.length - 1];\n      var newEndpoint = {\n        x: endPoint.x + delta.x,\n        y: endPoint.y + delta.y\n      };\n      var newWaypoints = [].concat(connection.waypoints.slice(0, -1), [newEndpoint]);\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n    outgoing.forEach(function (connection) {\n      var startpoint = connection.waypoints[0];\n      var newStartpoint = {\n        x: startpoint.x + delta.x,\n        y: startpoint.y + delta.y\n      };\n      var newWaypoints = [].concat([newStartpoint], connection.waypoints.slice(1));\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n  });\n}\ninherits(LayoutConnectionBehavior, CommandInterceptor);\nLayoutConnectionBehavior.$inject = ['eventBus', 'modeling'];","map":{"version":3,"names":["assign","inherits","CommandInterceptor","getConnectionAdjustment","getConnectionAnchorPoint","LayoutConnectionBehavior","eventBus","modeling","call","getnewAnchorPoint","event","point","context","connection","hints","newWaypoints","waypoints","oldWaypoints","startChanged","connectionStart","endChanged","connectionEnd","postExecute","outgoing","incoming","forEach","endPoint","length","newEndpoint","concat","slice","updateWaypoints","startpoint","newStartpoint","delta","x","y","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/LayoutConnectionBehavior.js"],"sourcesContent":["import {\n  assign\n} from 'min-dash';\n\nimport inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { getConnectionAdjustment as getConnectionAnchorPoint } from './util/ConnectionLayoutUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A component that makes sure that Associations connected to Connections\n * are updated together with the Connection.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function LayoutConnectionBehavior(eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  function getnewAnchorPoint(event, point) {\n\n    var context = event.context,\n        connection = context.connection,\n        hints = assign({}, context.hints),\n        newWaypoints = context.newWaypoints || connection.waypoints,\n        oldWaypoints = context.oldWaypoints;\n\n\n    if (typeof hints.startChanged === 'undefined') {\n      hints.startChanged = !!hints.connectionStart;\n    }\n\n    if (typeof hints.endChanged === 'undefined') {\n      hints.endChanged = !!hints.connectionEnd;\n    }\n\n    return getConnectionAnchorPoint(point, newWaypoints, oldWaypoints, hints);\n  }\n\n  this.postExecute([\n    'connection.layout',\n    'connection.updateWaypoints'\n  ], function(event) {\n    var context = event.context;\n\n    var connection = context.connection,\n        outgoing = connection.outgoing,\n        incoming = connection.incoming;\n\n    incoming.forEach(function(connection) {\n      var endPoint = connection.waypoints[connection.waypoints.length - 1];\n      var newEndpoint = getnewAnchorPoint(event, endPoint);\n\n      var newWaypoints = [].concat(connection.waypoints.slice(0, -1), [ newEndpoint ]);\n\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n\n    outgoing.forEach(function(connection) {\n      var startpoint = connection.waypoints[0];\n      var newStartpoint = getnewAnchorPoint(event, startpoint);\n\n      var newWaypoints = [].concat([ newStartpoint ], connection.waypoints.slice(1));\n\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n\n  });\n\n\n  this.postExecute([\n    'connection.move'\n  ], function(event) {\n    var context = event.context;\n\n    var connection = context.connection,\n        outgoing = connection.outgoing,\n        incoming = connection.incoming,\n        delta = context.delta;\n\n    incoming.forEach(function(connection) {\n      var endPoint = connection.waypoints[connection.waypoints.length - 1];\n      var newEndpoint = {\n        x: endPoint.x + delta.x,\n        y: endPoint.y + delta.y\n      };\n\n      var newWaypoints = [].concat(connection.waypoints.slice(0, -1), [ newEndpoint ]);\n\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n\n    outgoing.forEach(function(connection) {\n      var startpoint = connection.waypoints[0];\n      var newStartpoint = {\n        x: startpoint.x + delta.x,\n        y: startpoint.y + delta.y\n      };\n\n      var newWaypoints = [].concat([ newStartpoint ], connection.waypoints.slice(1));\n\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n\n  });\n\n}\n\ninherits(LayoutConnectionBehavior, CommandInterceptor);\n\nLayoutConnectionBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n"],"mappings":"AAAA,SACEA,MAAM,QACD,UAAU;AAEjB,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,OAAOC,kBAAkB,MAAM,2CAA2C;AAE1E,SAASC,uBAAuB,IAAIC,wBAAwB,QAAQ,6BAA6B;;AAEjG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,wBAAwBA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAEnEL,kBAAkB,CAACM,IAAI,CAAC,IAAI,EAAEF,QAAQ,CAAC;EAEvC,SAASG,iBAAiBA,CAACC,KAAK,EAAEC,KAAK,EAAE;IAEvC,IAAIC,OAAO,GAAGF,KAAK,CAACE,OAAO;MACvBC,UAAU,GAAGD,OAAO,CAACC,UAAU;MAC/BC,KAAK,GAAGd,MAAM,CAAC,CAAC,CAAC,EAAEY,OAAO,CAACE,KAAK,CAAC;MACjCC,YAAY,GAAGH,OAAO,CAACG,YAAY,IAAIF,UAAU,CAACG,SAAS;MAC3DC,YAAY,GAAGL,OAAO,CAACK,YAAY;IAGvC,IAAI,OAAOH,KAAK,CAACI,YAAY,KAAK,WAAW,EAAE;MAC7CJ,KAAK,CAACI,YAAY,GAAG,CAAC,CAACJ,KAAK,CAACK,eAAe;IAC9C;IAEA,IAAI,OAAOL,KAAK,CAACM,UAAU,KAAK,WAAW,EAAE;MAC3CN,KAAK,CAACM,UAAU,GAAG,CAAC,CAACN,KAAK,CAACO,aAAa;IAC1C;IAEA,OAAOjB,wBAAwB,CAACO,KAAK,EAAEI,YAAY,EAAEE,YAAY,EAAEH,KAAK,CAAC;EAC3E;EAEA,IAAI,CAACQ,WAAW,CAAC,CACf,mBAAmB,EACnB,4BAA4B,CAC7B,EAAE,UAASZ,KAAK,EAAE;IACjB,IAAIE,OAAO,GAAGF,KAAK,CAACE,OAAO;IAE3B,IAAIC,UAAU,GAAGD,OAAO,CAACC,UAAU;MAC/BU,QAAQ,GAAGV,UAAU,CAACU,QAAQ;MAC9BC,QAAQ,GAAGX,UAAU,CAACW,QAAQ;IAElCA,QAAQ,CAACC,OAAO,CAAC,UAASZ,UAAU,EAAE;MACpC,IAAIa,QAAQ,GAAGb,UAAU,CAACG,SAAS,CAACH,UAAU,CAACG,SAAS,CAACW,MAAM,GAAG,CAAC,CAAC;MACpE,IAAIC,WAAW,GAAGnB,iBAAiB,CAACC,KAAK,EAAEgB,QAAQ,CAAC;MAEpD,IAAIX,YAAY,GAAG,EAAE,CAACc,MAAM,CAAChB,UAAU,CAACG,SAAS,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAEF,WAAW,CAAE,CAAC;MAEhFrB,QAAQ,CAACwB,eAAe,CAAClB,UAAU,EAAEE,YAAY,CAAC;IACpD,CAAC,CAAC;IAEFQ,QAAQ,CAACE,OAAO,CAAC,UAASZ,UAAU,EAAE;MACpC,IAAImB,UAAU,GAAGnB,UAAU,CAACG,SAAS,CAAC,CAAC,CAAC;MACxC,IAAIiB,aAAa,GAAGxB,iBAAiB,CAACC,KAAK,EAAEsB,UAAU,CAAC;MAExD,IAAIjB,YAAY,GAAG,EAAE,CAACc,MAAM,CAAC,CAAEI,aAAa,CAAE,EAAEpB,UAAU,CAACG,SAAS,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;MAE9EvB,QAAQ,CAACwB,eAAe,CAAClB,UAAU,EAAEE,YAAY,CAAC;IACpD,CAAC,CAAC;EAEJ,CAAC,CAAC;EAGF,IAAI,CAACO,WAAW,CAAC,CACf,iBAAiB,CAClB,EAAE,UAASZ,KAAK,EAAE;IACjB,IAAIE,OAAO,GAAGF,KAAK,CAACE,OAAO;IAE3B,IAAIC,UAAU,GAAGD,OAAO,CAACC,UAAU;MAC/BU,QAAQ,GAAGV,UAAU,CAACU,QAAQ;MAC9BC,QAAQ,GAAGX,UAAU,CAACW,QAAQ;MAC9BU,KAAK,GAAGtB,OAAO,CAACsB,KAAK;IAEzBV,QAAQ,CAACC,OAAO,CAAC,UAASZ,UAAU,EAAE;MACpC,IAAIa,QAAQ,GAAGb,UAAU,CAACG,SAAS,CAACH,UAAU,CAACG,SAAS,CAACW,MAAM,GAAG,CAAC,CAAC;MACpE,IAAIC,WAAW,GAAG;QAChBO,CAAC,EAAET,QAAQ,CAACS,CAAC,GAAGD,KAAK,CAACC,CAAC;QACvBC,CAAC,EAAEV,QAAQ,CAACU,CAAC,GAAGF,KAAK,CAACE;MACxB,CAAC;MAED,IAAIrB,YAAY,GAAG,EAAE,CAACc,MAAM,CAAChB,UAAU,CAACG,SAAS,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAEF,WAAW,CAAE,CAAC;MAEhFrB,QAAQ,CAACwB,eAAe,CAAClB,UAAU,EAAEE,YAAY,CAAC;IACpD,CAAC,CAAC;IAEFQ,QAAQ,CAACE,OAAO,CAAC,UAASZ,UAAU,EAAE;MACpC,IAAImB,UAAU,GAAGnB,UAAU,CAACG,SAAS,CAAC,CAAC,CAAC;MACxC,IAAIiB,aAAa,GAAG;QAClBE,CAAC,EAAEH,UAAU,CAACG,CAAC,GAAGD,KAAK,CAACC,CAAC;QACzBC,CAAC,EAAEJ,UAAU,CAACI,CAAC,GAAGF,KAAK,CAACE;MAC1B,CAAC;MAED,IAAIrB,YAAY,GAAG,EAAE,CAACc,MAAM,CAAC,CAAEI,aAAa,CAAE,EAAEpB,UAAU,CAACG,SAAS,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;MAE9EvB,QAAQ,CAACwB,eAAe,CAAClB,UAAU,EAAEE,YAAY,CAAC;IACpD,CAAC,CAAC;EAEJ,CAAC,CAAC;AAEJ;AAEAd,QAAQ,CAACI,wBAAwB,EAAEH,kBAAkB,CAAC;AAEtDG,wBAAwB,CAACgC,OAAO,GAAG,CACjC,UAAU,EACV,UAAU,CACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}