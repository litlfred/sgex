{"ast":null,"code":"import _objectSpread from\"/home/runner/work/sgex/sgex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback,useRef}from'react';import{useLocation,useNavigate}from'react-router-dom';import githubService from'../services/githubService';import repositoryCacheService from'../services/repositoryCacheService';import dakTemplates from'../config/dak-templates.json';import{PageLayout,usePageParams}from'./framework';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DAKSelection=()=>{return/*#__PURE__*/_jsx(PageLayout,{pageName:\"dak-selection\",showHeader:true,children:/*#__PURE__*/_jsx(DAKSelectionContent,{})});};const DAKSelectionContent=()=>{var _location$state;const location=useLocation();const navigate=useNavigate();const{params,profile}=usePageParams();const userParam=params===null||params===void 0?void 0:params.user;// Use profile from framework (PageProvider) or location state\nconst effectiveProfile=profile||((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.profile);const effectiveProfileRef=useRef();effectiveProfileRef.current=effectiveProfile;const{action}=location.state||{};const[repositories,setRepositories]=useState([]);const[selectedRepository,setSelectedRepository]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[isScanning,setIsScanning]=useState(false);const[scanProgress,setScanProgress]=useState(null);const[currentlyScanningRepos,setCurrentlyScanningRepos]=useState(new Set());const[usingCachedData,setUsingCachedData]=useState(false);// Validate user parameter and profile consistency\nuseEffect(()=>{// If no user parameter in URL and no profile in state, redirect to landing\nif(!userParam&&!effectiveProfile){navigate('/');return;}// If user parameter exists but no action - redirect to action selection\nif(userParam&&!action){navigate(\"/dak-action/\".concat(userParam),{replace:true});return;}// If user parameter exists but no profile - redirect to landing\nif(userParam&&!effectiveProfile){navigate('/');return;}// If user parameter exists and profile exists but they don't match - redirect to landing\nif(userParam&&effectiveProfile&&effectiveProfile.login!==userParam){navigate('/');return;}// If profile exists but no user parameter, redirect to include user in URL\nif(effectiveProfile&&!userParam){navigate(\"/dak-selection/\".concat(effectiveProfile.login),{state:{profile:effectiveProfile,action},replace:true});return;}},[userParam,effectiveProfile,action,navigate]);// Helper function to extract user and repo from repository object\nconst getRepositoryPath=repository=>{var _repository$owner,_repository$full_name;if(!repository)return null;// Get user from owner.login or fallback to parsing full_name\nconst user=((_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login)||((_repository$full_name=repository.full_name)===null||_repository$full_name===void 0?void 0:_repository$full_name.split('/')[0]);const repo=repository.name;if(!user||!repo){console.error('Unable to extract user/repo from repository object:',repository);return null;}return{user,repo};};const getActionConfig=()=>{switch(action){case'edit':return{title:'Select DAK to Edit',description:'Choose an existing DAK repository that you have permission to modify.',buttonText:'Continue to Edit Components',nextRoute:'/dashboard'// This will be constructed dynamically with user/repo\n};case'fork':return{title:'Select DAK to Fork',description:'Choose the source DAK repository that you want to fork.',buttonText:'Continue to Organization Selection',nextRoute:'/organization-selection'};case'create':return{title:'Select Template DAK',description:'Choose a template repository to use as the base for your new DAK.',buttonText:'Continue to Organization Selection',nextRoute:'/organization-selection',showTemplate:true};default:return{title:'Select DAK Repository',description:'Choose a DAK repository to work with.',buttonText:'Continue',nextRoute:'/dashboard'// This will be constructed dynamically with user/repo\n};}};const getMockRepositories=useCallback(()=>{const profile=effectiveProfileRef.current;if(!profile||!profile.login){return[];}// Mock repositories - only some have SMART guidelines compatibility\nconst allMockRepos=[{id:1,name:'maternal-health-dak',full_name:\"\".concat(profile.login,\"/maternal-health-dak\"),description:'WHO SMART Guidelines for Maternal Health - Digital Adaptation Kit',html_url:\"https://github.com/\".concat(profile.login,\"/maternal-health-dak\"),topics:['who','smart-guidelines','maternal-health','dak'],language:'FML',stargazers_count:12,forks_count:3,updated_at:'2024-01-15T10:30:00Z',smart_guidelines_compatible:true},{id:2,name:'immunization-dak',full_name:\"\".concat(profile.login,\"/immunization-dak\"),description:'Digital Adaptation Kit for Immunization Guidelines',html_url:\"https://github.com/\".concat(profile.login,\"/immunization-dak\"),topics:['who','smart-guidelines','immunization','vaccines'],language:'FML',stargazers_count:8,forks_count:2,updated_at:'2024-01-10T14:20:00Z',smart_guidelines_compatible:true},{id:3,name:'anc-dak',full_name:\"\".concat(profile.login,\"/anc-dak\"),description:'Antenatal Care Digital Adaptation Kit based on WHO guidelines',html_url:\"https://github.com/\".concat(profile.login,\"/anc-dak\"),topics:['who','anc','antenatal-care','smart-guidelines'],language:'FML',stargazers_count:15,forks_count:5,updated_at:'2024-01-12T09:15:00Z',smart_guidelines_compatible:true},{id:4,name:'regular-health-app',full_name:\"\".concat(profile.login,\"/regular-health-app\"),description:'A regular health application without SMART Guidelines',html_url:\"https://github.com/\".concat(profile.login,\"/regular-health-app\"),topics:['health','app','javascript'],language:'JavaScript',stargazers_count:5,forks_count:1,updated_at:'2024-01-08T16:45:00Z',smart_guidelines_compatible:false// This one doesn't have sushi-config.yaml with smart.who.int.base\n},{id:5,name:'medical-database',full_name:\"\".concat(profile.login,\"/medical-database\"),description:'Medical database with FHIR but not SMART Guidelines',html_url:\"https://github.com/\".concat(profile.login,\"/medical-database\"),topics:['fhir','database','medical'],language:'SQL',stargazers_count:7,forks_count:2,updated_at:'2024-01-05T11:20:00Z',smart_guidelines_compatible:false// This one also doesn't have the required sushi-config.yaml\n}];// Filter to only return SMART guidelines compatible repositories\nreturn allMockRepos.filter(repo=>repo.smart_guidelines_compatible);},[]);const simulateEnhancedScanning=useCallback(async()=>{setIsScanning(true);setRepositories([]);// Clear current repositories for progressive updates\nconst mockRepos=getMockRepositories();const delay=ms=>new Promise(resolve=>setTimeout(resolve,ms));try{// Simulate concurrent scanning with enhanced display\nfor(let i=0;i<mockRepos.length;i++){const repo=mockRepos[i];// Simulate starting to scan this repository\nsetScanProgress({current:i+1,total:mockRepos.length,currentRepo:repo.name,progress:Math.round((i+1)/mockRepos.length*100),completed:false,started:true});// Add to currently scanning repos\nsetCurrentlyScanningRepos(prev=>new Set([...prev,repo.name]));// Simulate scanning time (1-2 seconds per repository)\nawait delay(1000+Math.random()*1000);// Add found repository to results in alphabetical order\nsetRepositories(prevRepos=>{const newRepos=[...prevRepos,repo];return newRepos.sort((a,b)=>a.name.localeCompare(b.name));});// Simulate completion\nsetScanProgress({current:i+1,total:mockRepos.length,currentRepo:repo.name,progress:Math.round((i+1)/mockRepos.length*100),completed:true});// Remove from currently scanning repos\nsetCurrentlyScanningRepos(prev=>{const newSet=new Set(prev);newSet.delete(repo.name);return newSet;});// Small delay before next repository\nawait delay(300);}// After all repositories are scanned, stop the scanning state\nconsole.log('🎉 Demo scanning completed, stopping scanning state');setTimeout(()=>{setIsScanning(false);setScanProgress(null);setCurrentlyScanningRepos(new Set());},500);// Small delay to show completion\n}catch(error){console.error('Error in simulated scanning:',error);// Make sure to stop scanning on error\nsetIsScanning(false);setScanProgress(null);setCurrentlyScanningRepos(new Set());}},[getMockRepositories]);const fetchRepositories=useCallback(async function(){let forceRescan=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;let useCachedData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;setLoading(true);setError(null);setIsScanning(false);setScanProgress(null);setCurrentlyScanningRepos(new Set());setUsingCachedData(false);try{let repos=[];let cachedData=null;if(action==='create'){// For create action, load templates from configuration\nrepos=dakTemplates.dakTemplates.map((template,index)=>({id:-(index+1),name:template.repo,full_name:\"\".concat(template.owner,\"/\").concat(template.repo),description:template.description,html_url:template.repository,clone_url:\"\".concat(template.repository,\".git\"),topics:template.tags.map(tag=>tag.toLowerCase().replace(/\\s+/g,'-')),language:'FML',stargazers_count:15,forks_count:8,updated_at:new Date().toISOString(),smart_guidelines_compatible:true,is_template:true,template_config:template,owner:{login:template.owner,avatar_url:template.owner==='WorldHealthOrganization'?'https://avatars.githubusercontent.com/u/9166906?s=200&v=4':'https://github.com/favicon.ico'}}));// Sort templates alphabetically by name\nrepos.sort((a,b)=>a.name.localeCompare(b.name));setRepositories(repos);}else{// For edit/fork actions, implement cache-first approach\n// Always check cache first unless explicitly forcing a rescan\nif(githubService.isAuth()&&!forceRescan){try{cachedData=repositoryCacheService.getCachedRepositories(effectiveProfile.login,effectiveProfile.type==='org'?'org':'user');}catch(cacheError){console.warn('Error accessing repository cache:',cacheError);}}if(cachedData&&!forceRescan){// Use cached data - show immediately\nconsole.log('Using cached repository data',repositoryCacheService.getCacheInfo(effectiveProfile.login,effectiveProfile.type==='org'?'org':'user'));repos=cachedData.repositories;setUsingCachedData(true);// Sort cached repositories alphabetically\nrepos.sort((a,b)=>a.name.localeCompare(b.name));setRepositories(repos);}else{// No cached data or forcing rescan - initiate progressive scanning\nif(githubService.isAuth()){console.log(forceRescan?'🔄 Force rescanning repositories...':'🔍 No cached data, initiating scan...');setIsScanning(true);setLoading(false);// Stop loading state to show scanning progress\n// Important: Don't clear existing repositories when scanning\n// This preserves any cached repos that were already displayed\nconsole.log('📊 Starting enhanced scanning display for authenticated user');// Add timeout wrapper to prevent infinite scanning\nconst SCAN_TIMEOUT=60000;// 60 seconds timeout\nconst timeoutPromise=new Promise((_,reject)=>{setTimeout(()=>reject(new Error('Scanning timeout - operation took longer than 60 seconds')),SCAN_TIMEOUT);});const scanPromise=githubService.getSmartGuidelinesRepositoriesProgressive(effectiveProfile.login,effectiveProfile.type==='org'?'org':'user',// onRepositoryFound callback - add repo to list immediately in alphabetical order\nfoundRepo=>{setRepositories(prevRepos=>{// Avoid duplicates\nconst exists=prevRepos.some(repo=>repo.id===foundRepo.id);if(!exists){// Add the new repository and sort alphabetically by name\nconst newRepos=[...prevRepos,foundRepo];return newRepos.sort((a,b)=>a.name.localeCompare(b.name));}return prevRepos;});},// onProgress callback - update progress indicator with enhanced display\nprogress=>{console.log('📊 Real scanning progress:',progress);setScanProgress(progress);// Track repositories currently being scanned with enhanced display timing\nif(progress.started&&!progress.completed){// Repository is being started - add to currently scanning set\nconsole.log('🔍 Started scanning:',progress.currentRepo);setCurrentlyScanningRepos(prev=>new Set([...prev,progress.currentRepo]));// Ensure the scanning state is properly set\nsetScanProgress(_objectSpread(_objectSpread({},progress),{},{started:true,completed:false}));}else if(progress.completed){// Repository is completed - show completion state\nconsole.log('✅ Completed scanning:',progress.currentRepo);setScanProgress(_objectSpread(_objectSpread({},progress),{},{completed:true}));// Remove from currently scanning set after a brief moment\nsetTimeout(()=>{setCurrentlyScanningRepos(prev=>{const newSet=new Set(prev);newSet.delete(progress.currentRepo);return newSet;});},200);// Check if this is the last repository being scanned\nif(progress.current===progress.total){// All repositories have been scanned, stop the scanning state\nconsole.log('🎉 All repositories scanned, stopping scanning state');setTimeout(()=>{setIsScanning(false);setScanProgress(null);setCurrentlyScanningRepos(new Set());},500);// Small delay to show completion\n}}else if(progress.total===0&&progress.completed){// Special case: no repositories to scan\nconsole.log('🎉 No repositories to scan, stopping scanning state');setTimeout(()=>{setIsScanning(false);setScanProgress(null);setCurrentlyScanningRepos(new Set());},500);}});try{// Race between the scanning promise and timeout\nrepos=await Promise.race([scanPromise,timeoutPromise]);}catch(timeoutError){console.error('⏰ Scanning timed out:',timeoutError.message);// Stop scanning on timeout\nsetIsScanning(false);setScanProgress(null);setCurrentlyScanningRepos(new Set());throw new Error('Repository scanning timed out. Please try again or use cached data if available.');}// Cache the results for future quick access\nrepositoryCacheService.setCachedRepositories(effectiveProfile.login,effectiveProfile.type==='org'?'org':'user',repos);// Update repositories with final results (in case callback missed any)\n// Sort alphabetically to ensure consistent ordering\nconst sortedRepos=repos.sort((a,b)=>a.name.localeCompare(b.name));setRepositories(sortedRepos);}else{// Fallback to mock repositories with enhanced scanning demonstration\nawait simulateEnhancedScanning();repos=getMockRepositories();// Sort mock repositories alphabetically\nrepos.sort((a,b)=>a.name.localeCompare(b.name));setRepositories(repos);}}}}catch(error){console.error('Error fetching repositories:',error);setError('Failed to fetch repositories. Please check your connection and try again.');// Fallback to mock data for demonstration\nconst mockRepos=getMockRepositories();mockRepos.sort((a,b)=>a.name.localeCompare(b.name));setRepositories(mockRepos);// Make sure to stop scanning on error\nsetIsScanning(false);setScanProgress(null);setCurrentlyScanningRepos(new Set());}finally{setLoading(false);// Don't automatically stop scanning here for authenticated progressive scans\n// or for demo scanning - let them manage their own scanning state\nif(!githubService.isAuth()&&action==='create'){// Only auto-stop for create action when not authenticated\nsetIsScanning(false);setScanProgress(null);setCurrentlyScanningRepos(new Set());}}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[effectiveProfile,action]);useEffect(()=>{// Only proceed if we have valid profile, action and userParam consistency\nif(!effectiveProfile||!action||!userParam||effectiveProfile.login!==userParam){return;}// Always check cache first on initial load\nfetchRepositories(false,false);// forceRescan=false, useCachedData=false (but still check cache first)\n},[effectiveProfile,action,userParam,fetchRepositories]);const handleRepositorySelect=repo=>{setSelectedRepository(repo);// For 'edit' action, automatically navigate after selection\nif(action==='edit'){// Add a small delay for visual feedback before navigation\nsetTimeout(()=>{const repoPath=getRepositoryPath(repo);if(repoPath){const dashboardUrl=\"/dashboard/\".concat(repoPath.user,\"/\").concat(repoPath.repo);navigate(dashboardUrl,{state:{profile:effectiveProfile,repository:repo,action}});}else{// Fallback to original behavior if unable to extract path\nconst config=getActionConfig();navigate(config.nextRoute,{state:{profile:effectiveProfile,repository:repo,action}});}},300);// 300ms delay for visual feedback\n}};const handleContinue=()=>{if(!selectedRepository){alert('Please select a repository to continue');return;}const config=getActionConfig();if(action==='edit'){// Go directly to dashboard for editing with user/repo parameters\nconst repoPath=getRepositoryPath(selectedRepository);if(repoPath){const dashboardUrl=\"/dashboard/\".concat(repoPath.user,\"/\").concat(repoPath.repo);navigate(dashboardUrl,{state:{profile:effectiveProfile,repository:selectedRepository,action:action}});}else{// Fallback to original behavior if unable to extract path\nnavigate(config.nextRoute,{state:{profile:effectiveProfile,repository:selectedRepository,action:action}});}}else{// Go to organization selection for fork/create\nnavigate(config.nextRoute,{state:{profile:effectiveProfile,sourceRepository:selectedRepository,action:action}});}};const handleRescan=()=>{fetchRepositories(true,false);// Force rescan, don't use cache\n};const handleUseCachedData=()=>{fetchRepositories(false,false);// Don't force rescan, check cache first (this should use cache if available)\n};const handleDemoScanning=async()=>{// Simulate the enhanced scanning display for demonstration purposes\nawait simulateEnhancedScanning();};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric'});};if(!effectiveProfile||!action||!userParam||effectiveProfile.login!==userParam){return/*#__PURE__*/_jsx(\"div\",{className:\"dak-selection\",children:/*#__PURE__*/_jsx(\"div\",{style:{color:'white',textAlign:'center',padding:'2rem'},children:\"Redirecting...\"})});}const config=getActionConfig();return/*#__PURE__*/_jsx(\"div\",{className:\"dak-selection\",children:/*#__PURE__*/_jsx(\"div\",{className:\"selection-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"selection-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"selection-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"selection-title\",children:[/*#__PURE__*/_jsx(\"h1\",{children:config.title}),/*#__PURE__*/_jsx(\"p\",{className:\"selection-subtitle\",children:config.description})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"selection-intro\",children:[action==='create'&&/*#__PURE__*/_jsxs(\"div\",{className:\"template-notice\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"notice-icon\",children:\"\\u2139\\uFE0F\"}),/*#__PURE__*/_jsx(\"span\",{children:\"You'll create a new repository based on the WHO SMART Guidelines template.\"})]}),action!=='create'&&githubService.isAuth()&&/*#__PURE__*/_jsx(\"div\",{className:\"cache-controls\",children:usingCachedData?/*#__PURE__*/_jsxs(\"div\",{className:\"cache-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"cache-icon\",children:\"\\uD83D\\uDCBE\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Using cached data. \"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRescan,className:\"rescan-link\",disabled:isScanning,children:isScanning?'Scanning...':'Refresh'})]}):/*#__PURE__*/_jsx(\"div\",{className:\"scan-controls\",children:!isScanning&&!loading&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleRescan,className:\"rescan-btn\",disabled:isScanning,children:\"\\uD83D\\uDD04 Rescan Repositories\"}),repositoryCacheService.getCachedRepositories(effectiveProfile.login,effectiveProfile.type==='org'?'org':'user')&&/*#__PURE__*/_jsx(\"button\",{onClick:handleUseCachedData,className:\"cache-btn\",disabled:isScanning,children:\"\\uD83D\\uDCBE Use Cached Data\"})]})})}),action!=='create'&&!githubService.isAuth()&&!isScanning&&!loading&&/*#__PURE__*/_jsx(\"div\",{className:\"demo-controls\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"demo-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"demo-icon\",children:\"\\uD83C\\uDFAD\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Not authenticated. \"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDemoScanning,className:\"demo-scan-btn\",disabled:isScanning,children:\"\\u2728 Demo Enhanced Scanning Display\"})]})})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading repositories...\"})]}):isScanning?/*#__PURE__*/_jsxs(\"div\",{className:\"scanning-status\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"scanning-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Scanning repositories for SMART Guidelines compatibility...\"})]}),scanProgress&&/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(scanProgress.progress,\"%\")}})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-info\",children:/*#__PURE__*/_jsx(\"div\",{className:\"unified-scanning-status\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"scanning-header-unified\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"progress-text\",children:[scanProgress.current,\"/\",scanProgress.total,\" repositories\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"progress-percentage\",children:[scanProgress.progress,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"currently-testing-unified\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"scanning-icon\",children:\"\\uD83D\\uDD0D\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Currently Testing:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"currently-scanning-repos\",children:currentlyScanningRepos.size>0?Array.from(currentlyScanningRepos).map(repoName=>/*#__PURE__*/_jsxs(\"div\",{className:\"scanning-repo-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"repo-status-indicator\",children:\"\\u26A1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"scanning-repo-name\",children:repoName})]},repoName)):/*#__PURE__*/_jsxs(\"div\",{className:\"scanning-repo-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"repo-status-indicator\",children:\"\\u23F3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"scanning-repo-name\",children:\"Preparing scan...\"})]})})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"scanning-note\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"note-icon\",children:\"\\u26A1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Scanning up to 5 repositories concurrently to improve speed\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scanning-results\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Found repositories will appear below as they are discovered:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"repo-grid\",children:repositories.map(repo=>{var _repo$template_config;return/*#__PURE__*/_jsxs(\"div\",{className:\"repo-card \".concat((selectedRepository===null||selectedRepository===void 0?void 0:selectedRepository.id)===repo.id?'selected':'',\" scanning-found\"),onClick:()=>handleRepositorySelect(repo),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"repo-header-info\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[repo.name,\" \",/*#__PURE__*/_jsx(\"span\",{className:\"new-badge\",children:\"\\u2728 Found\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"repo-meta\",children:[repo.is_template&&/*#__PURE__*/_jsx(\"span\",{className:\"template-badge\",children:((_repo$template_config=repo.template_config)===null||_repo$template_config===void 0?void 0:_repo$template_config.name)||'Template'}),repo.private&&/*#__PURE__*/_jsx(\"span\",{className:\"private-badge\",children:\"Private\"}),repo.language&&/*#__PURE__*/_jsx(\"span\",{className:\"language-badge\",children:repo.language}),repo.smart_guidelines_compatible&&/*#__PURE__*/_jsx(\"span\",{className:\"compatible-badge\",children:\"SMART Guidelines\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"repo-description\",children:repo.description||'No description available'}),/*#__PURE__*/_jsxs(\"div\",{className:\"repo-topics\",children:[(repo.topics||[]).slice(0,3).map(topic=>/*#__PURE__*/_jsx(\"span\",{className:\"topic-tag\",children:topic},topic)),(repo.topics||[]).length>3&&/*#__PURE__*/_jsxs(\"span\",{className:\"topic-more\",children:[\"+\",(repo.topics||[]).length-3,\" more\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"repo-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\u2B50\"}),/*#__PURE__*/_jsx(\"span\",{children:repo.stargazers_count||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\uD83C\\uDF74\"}),/*#__PURE__*/_jsx(\"span\",{children:repo.forks_count||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\uD83D\\uDCC5\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Updated \",formatDate(repo.updated_at)]})]})]}),(selectedRepository===null||selectedRepository===void 0?void 0:selectedRepository.id)===repo.id&&/*#__PURE__*/_jsx(\"div\",{className:\"selection-indicator\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\u2713 Selected\"})})]},repo.id);})})]})]}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"error-state\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Error loading repositories\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchRepositories,className:\"retry-btn\",children:\"Try Again\"})]}):repositories.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"No repositories found\"}),/*#__PURE__*/_jsx(\"p\",{children:action==='create'?'Unable to load the WHO template repository.':'No DAK repositories found with SMART Guidelines compatibility.'})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"repo-grid\",children:repositories.map(repo=>{var _repo$template_config2;return/*#__PURE__*/_jsxs(\"div\",{className:\"repo-card \".concat((selectedRepository===null||selectedRepository===void 0?void 0:selectedRepository.id)===repo.id?'selected':''),onClick:()=>handleRepositorySelect(repo),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"repo-header-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:repo.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"repo-meta\",children:[repo.is_template&&/*#__PURE__*/_jsx(\"span\",{className:\"template-badge\",children:((_repo$template_config2=repo.template_config)===null||_repo$template_config2===void 0?void 0:_repo$template_config2.name)||'Template'}),repo.private&&/*#__PURE__*/_jsx(\"span\",{className:\"private-badge\",children:\"Private\"}),repo.language&&/*#__PURE__*/_jsx(\"span\",{className:\"language-badge\",children:repo.language}),repo.smart_guidelines_compatible&&/*#__PURE__*/_jsx(\"span\",{className:\"compatible-badge\",children:\"SMART Guidelines\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"repo-description\",children:repo.description||'No description available'}),/*#__PURE__*/_jsxs(\"div\",{className:\"repo-topics\",children:[(repo.topics||[]).slice(0,3).map(topic=>/*#__PURE__*/_jsx(\"span\",{className:\"topic-tag\",children:topic},topic)),(repo.topics||[]).length>3&&/*#__PURE__*/_jsxs(\"span\",{className:\"topic-more\",children:[\"+\",(repo.topics||[]).length-3,\" more\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"repo-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\u2B50\"}),/*#__PURE__*/_jsx(\"span\",{children:repo.stargazers_count||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\uD83C\\uDF74\"}),/*#__PURE__*/_jsx(\"span\",{children:repo.forks_count||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\uD83D\\uDCC5\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Updated \",formatDate(repo.updated_at)]})]})]}),(selectedRepository===null||selectedRepository===void 0?void 0:selectedRepository.id)===repo.id&&/*#__PURE__*/_jsx(\"div\",{className:\"selection-indicator\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\u2713 Selected\"})})]},repo.id);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"selection-footer\",children:[action!=='edit'&&/*#__PURE__*/_jsx(\"button\",{className:\"continue-btn\",onClick:handleContinue,disabled:!selectedRepository,children:config.buttonText}),action==='edit'&&/*#__PURE__*/_jsxs(\"div\",{className:\"direct-selection-note\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"note-icon\",children:\"\\uD83D\\uDCA1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Click on a repository above to start editing its components\"})]})]})]})]})})});};export default DAKSelection;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useLocation","useNavigate","githubService","repositoryCacheService","dakTemplates","PageLayout","usePageParams","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DAKSelection","pageName","showHeader","children","DAKSelectionContent","_location$state","location","navigate","params","profile","userParam","user","effectiveProfile","state","effectiveProfileRef","current","action","repositories","setRepositories","selectedRepository","setSelectedRepository","loading","setLoading","error","setError","isScanning","setIsScanning","scanProgress","setScanProgress","currentlyScanningRepos","setCurrentlyScanningRepos","Set","usingCachedData","setUsingCachedData","concat","replace","login","getRepositoryPath","repository","_repository$owner","_repository$full_name","owner","full_name","split","repo","name","console","getActionConfig","title","description","buttonText","nextRoute","showTemplate","getMockRepositories","allMockRepos","id","html_url","topics","language","stargazers_count","forks_count","updated_at","smart_guidelines_compatible","filter","simulateEnhancedScanning","mockRepos","delay","ms","Promise","resolve","setTimeout","i","length","total","currentRepo","progress","Math","round","completed","started","prev","random","prevRepos","newRepos","sort","a","b","localeCompare","newSet","delete","log","fetchRepositories","forceRescan","arguments","undefined","useCachedData","repos","cachedData","map","template","index","clone_url","tags","tag","toLowerCase","Date","toISOString","is_template","template_config","avatar_url","isAuth","getCachedRepositories","type","cacheError","warn","getCacheInfo","SCAN_TIMEOUT","timeoutPromise","_","reject","Error","scanPromise","getSmartGuidelinesRepositoriesProgressive","foundRepo","exists","some","_objectSpread","race","timeoutError","message","setCachedRepositories","sortedRepos","handleRepositorySelect","repoPath","dashboardUrl","config","handleContinue","alert","sourceRepository","handleRescan","handleUseCachedData","handleDemoScanning","formatDate","dateString","toLocaleDateString","year","month","day","className","style","color","textAlign","padding","onClick","disabled","width","size","Array","from","repoName","_repo$template_config","private","slice","topic","_repo$template_config2"],"sources":["/home/runner/work/sgex/sgex/src/components/DAKSelection.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport repositoryCacheService from '../services/repositoryCacheService';\nimport dakTemplates from '../config/dak-templates.json';\nimport { PageLayout, usePageParams } from './framework';\n\nconst DAKSelection = () => {\n  return (\n    <PageLayout pageName=\"dak-selection\" showHeader={true}>\n      <DAKSelectionContent />\n    </PageLayout>\n  );\n};\n\nconst DAKSelectionContent = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { params, profile } = usePageParams();\n  const userParam = params?.user;\n  \n  // Use profile from framework (PageProvider) or location state\n  const effectiveProfile = profile || location.state?.profile;\n  const effectiveProfileRef = useRef();\n  effectiveProfileRef.current = effectiveProfile;\n  const { action } = location.state || {};\n  \n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepository, setSelectedRepository] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isScanning, setIsScanning] = useState(false);\n  const [scanProgress, setScanProgress] = useState(null);\n  const [currentlyScanningRepos, setCurrentlyScanningRepos] = useState(new Set());\n  const [usingCachedData, setUsingCachedData] = useState(false);\n\n  // Validate user parameter and profile consistency\n  useEffect(() => {\n    // If no user parameter in URL and no profile in state, redirect to landing\n    if (!userParam && !effectiveProfile) {\n      navigate('/');\n      return;\n    }\n    \n    // If user parameter exists but no action - redirect to action selection\n    if (userParam && !action) {\n      navigate(`/dak-action/${userParam}`, { replace: true });\n      return;\n    }\n    \n    // If user parameter exists but no profile - redirect to landing\n    if (userParam && !effectiveProfile) {\n      navigate('/');\n      return;\n    }\n    \n    // If user parameter exists and profile exists but they don't match - redirect to landing\n    if (userParam && effectiveProfile && effectiveProfile.login !== userParam) {\n      navigate('/');\n      return;\n    }\n    \n    // If profile exists but no user parameter, redirect to include user in URL\n    if (effectiveProfile && !userParam) {\n      navigate(`/dak-selection/${effectiveProfile.login}`, { \n        state: { profile: effectiveProfile, action },\n        replace: true \n      });\n      return;\n    }\n  }, [userParam, effectiveProfile, action, navigate]);\n\n  // Helper function to extract user and repo from repository object\n  const getRepositoryPath = (repository) => {\n    if (!repository) return null;\n    \n    // Get user from owner.login or fallback to parsing full_name\n    const user = repository.owner?.login || repository.full_name?.split('/')[0];\n    const repo = repository.name;\n    \n    if (!user || !repo) {\n      console.error('Unable to extract user/repo from repository object:', repository);\n      return null;\n    }\n    \n    return { user, repo };\n  };\n\n  const getActionConfig = () => {\n    switch (action) {\n      case 'edit':\n        return {\n          title: 'Select DAK to Edit',\n          description: 'Choose an existing DAK repository that you have permission to modify.',\n          buttonText: 'Continue to Edit Components',\n          nextRoute: '/dashboard'  // This will be constructed dynamically with user/repo\n        };\n      case 'fork':\n        return {\n          title: 'Select DAK to Fork',\n          description: 'Choose the source DAK repository that you want to fork.',\n          buttonText: 'Continue to Organization Selection',\n          nextRoute: '/organization-selection'\n        };\n      case 'create':\n        return {\n          title: 'Select Template DAK',\n          description: 'Choose a template repository to use as the base for your new DAK.',\n          buttonText: 'Continue to Organization Selection',\n          nextRoute: '/organization-selection',\n          showTemplate: true\n        };\n      default:\n        return {\n          title: 'Select DAK Repository',\n          description: 'Choose a DAK repository to work with.',\n          buttonText: 'Continue',\n          nextRoute: '/dashboard'  // This will be constructed dynamically with user/repo\n        };\n    }\n  };\n\n  const getMockRepositories = useCallback(() => {\n    const profile = effectiveProfileRef.current;\n    if (!profile || !profile.login) {\n      return [];\n    }\n    \n    // Mock repositories - only some have SMART guidelines compatibility\n    const allMockRepos = [\n      {\n        id: 1,\n        name: 'maternal-health-dak',\n        full_name: `${profile.login}/maternal-health-dak`,\n        description: 'WHO SMART Guidelines for Maternal Health - Digital Adaptation Kit',\n        html_url: `https://github.com/${profile.login}/maternal-health-dak`,\n        topics: ['who', 'smart-guidelines', 'maternal-health', 'dak'],\n        language: 'FML',\n        stargazers_count: 12,\n        forks_count: 3,\n        updated_at: '2024-01-15T10:30:00Z',\n        smart_guidelines_compatible: true\n      },\n      {\n        id: 2,\n        name: 'immunization-dak',\n        full_name: `${profile.login}/immunization-dak`,\n        description: 'Digital Adaptation Kit for Immunization Guidelines',\n        html_url: `https://github.com/${profile.login}/immunization-dak`,\n        topics: ['who', 'smart-guidelines', 'immunization', 'vaccines'],\n        language: 'FML',\n        stargazers_count: 8,\n        forks_count: 2,\n        updated_at: '2024-01-10T14:20:00Z',\n        smart_guidelines_compatible: true\n      },\n      {\n        id: 3,\n        name: 'anc-dak',\n        full_name: `${profile.login}/anc-dak`,\n        description: 'Antenatal Care Digital Adaptation Kit based on WHO guidelines',\n        html_url: `https://github.com/${profile.login}/anc-dak`,\n        topics: ['who', 'anc', 'antenatal-care', 'smart-guidelines'],\n        language: 'FML',\n        stargazers_count: 15,\n        forks_count: 5,\n        updated_at: '2024-01-12T09:15:00Z',\n        smart_guidelines_compatible: true\n      },\n      {\n        id: 4,\n        name: 'regular-health-app',\n        full_name: `${profile.login}/regular-health-app`,\n        description: 'A regular health application without SMART Guidelines',\n        html_url: `https://github.com/${profile.login}/regular-health-app`,\n        topics: ['health', 'app', 'javascript'],\n        language: 'JavaScript',\n        stargazers_count: 5,\n        forks_count: 1,\n        updated_at: '2024-01-08T16:45:00Z',\n        smart_guidelines_compatible: false // This one doesn't have sushi-config.yaml with smart.who.int.base\n      },\n      {\n        id: 5,\n        name: 'medical-database',\n        full_name: `${profile.login}/medical-database`,\n        description: 'Medical database with FHIR but not SMART Guidelines',\n        html_url: `https://github.com/${profile.login}/medical-database`,\n        topics: ['fhir', 'database', 'medical'],\n        language: 'SQL',\n        stargazers_count: 7,\n        forks_count: 2,\n        updated_at: '2024-01-05T11:20:00Z',\n        smart_guidelines_compatible: false // This one also doesn't have the required sushi-config.yaml\n      }\n    ];\n\n    // Filter to only return SMART guidelines compatible repositories\n    return allMockRepos.filter(repo => repo.smart_guidelines_compatible);\n  }, []);\n\n  const simulateEnhancedScanning = useCallback(async () => {\n    setIsScanning(true);\n    setRepositories([]); // Clear current repositories for progressive updates\n    \n    const mockRepos = getMockRepositories();\n    const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n    \n    try {\n      // Simulate concurrent scanning with enhanced display\n      for (let i = 0; i < mockRepos.length; i++) {\n        const repo = mockRepos[i];\n        \n        // Simulate starting to scan this repository\n        setScanProgress({\n          current: i + 1,\n          total: mockRepos.length,\n          currentRepo: repo.name,\n          progress: Math.round(((i + 1) / mockRepos.length) * 100),\n          completed: false,\n          started: true\n        });\n        \n        // Add to currently scanning repos\n        setCurrentlyScanningRepos(prev => new Set([...prev, repo.name]));\n        \n        // Simulate scanning time (1-2 seconds per repository)\n        await delay(1000 + Math.random() * 1000);\n        \n        // Add found repository to results in alphabetical order\n        setRepositories(prevRepos => {\n          const newRepos = [...prevRepos, repo];\n          return newRepos.sort((a, b) => a.name.localeCompare(b.name));\n        });\n        \n        // Simulate completion\n        setScanProgress({\n          current: i + 1,\n          total: mockRepos.length,\n          currentRepo: repo.name,\n          progress: Math.round(((i + 1) / mockRepos.length) * 100),\n          completed: true\n        });\n        \n        // Remove from currently scanning repos\n        setCurrentlyScanningRepos(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(repo.name);\n          return newSet;\n        });\n        \n        // Small delay before next repository\n        await delay(300);\n      }\n      \n      // After all repositories are scanned, stop the scanning state\n      console.log('🎉 Demo scanning completed, stopping scanning state');\n      setTimeout(() => {\n        setIsScanning(false);\n        setScanProgress(null);\n        setCurrentlyScanningRepos(new Set());\n      }, 500); // Small delay to show completion\n    } catch (error) {\n      console.error('Error in simulated scanning:', error);\n      // Make sure to stop scanning on error\n      setIsScanning(false);\n      setScanProgress(null);\n      setCurrentlyScanningRepos(new Set());\n    }\n  }, [getMockRepositories]);\n\n  const fetchRepositories = useCallback(async (forceRescan = false, useCachedData = false) => {\n    setLoading(true);\n    setError(null);\n    setIsScanning(false);\n    setScanProgress(null);\n    setCurrentlyScanningRepos(new Set());\n    setUsingCachedData(false);\n    \n    try {\n      let repos = [];\n      let cachedData = null;\n      \n      if (action === 'create') {\n        // For create action, load templates from configuration\n        repos = dakTemplates.dakTemplates.map((template, index) => ({\n          id: -(index + 1),\n          name: template.repo,\n          full_name: `${template.owner}/${template.repo}`,\n          description: template.description,\n          html_url: template.repository,\n          clone_url: `${template.repository}.git`,\n          topics: template.tags.map(tag => tag.toLowerCase().replace(/\\s+/g, '-')),\n          language: 'FML',\n          stargazers_count: 15,\n          forks_count: 8,\n          updated_at: new Date().toISOString(),\n          smart_guidelines_compatible: true,\n          is_template: true,\n          template_config: template,\n          owner: {\n            login: template.owner,\n            avatar_url: template.owner === 'WorldHealthOrganization' \n              ? 'https://avatars.githubusercontent.com/u/9166906?s=200&v=4'\n              : 'https://github.com/favicon.ico'\n          }\n        }));\n        // Sort templates alphabetically by name\n        repos.sort((a, b) => a.name.localeCompare(b.name));\n        setRepositories(repos);\n      } else {\n        // For edit/fork actions, implement cache-first approach\n        \n        // Always check cache first unless explicitly forcing a rescan\n        if (githubService.isAuth() && !forceRescan) {\n          try {\n            cachedData = repositoryCacheService.getCachedRepositories(effectiveProfile.login, effectiveProfile.type === 'org' ? 'org' : 'user');\n          } catch (cacheError) {\n            console.warn('Error accessing repository cache:', cacheError);\n          }\n        }\n\n        if (cachedData && !forceRescan) {\n          // Use cached data - show immediately\n          console.log('Using cached repository data', repositoryCacheService.getCacheInfo(effectiveProfile.login, effectiveProfile.type === 'org' ? 'org' : 'user'));\n          repos = cachedData.repositories;\n          setUsingCachedData(true);\n          // Sort cached repositories alphabetically\n          repos.sort((a, b) => a.name.localeCompare(b.name));\n          setRepositories(repos);\n        } else {\n          // No cached data or forcing rescan - initiate progressive scanning\n          if (githubService.isAuth()) {\n            console.log(forceRescan ? '🔄 Force rescanning repositories...' : '🔍 No cached data, initiating scan...');\n            setIsScanning(true);\n            setLoading(false); // Stop loading state to show scanning progress\n            \n            // Important: Don't clear existing repositories when scanning\n            // This preserves any cached repos that were already displayed\n            console.log('📊 Starting enhanced scanning display for authenticated user');\n            \n            // Add timeout wrapper to prevent infinite scanning\n            const SCAN_TIMEOUT = 60000; // 60 seconds timeout\n            const timeoutPromise = new Promise((_, reject) => {\n              setTimeout(() => reject(new Error('Scanning timeout - operation took longer than 60 seconds')), SCAN_TIMEOUT);\n            });\n            \n            const scanPromise = githubService.getSmartGuidelinesRepositoriesProgressive(\n              effectiveProfile.login, \n              effectiveProfile.type === 'org' ? 'org' : 'user',\n              // onRepositoryFound callback - add repo to list immediately in alphabetical order\n              (foundRepo) => {\n                setRepositories(prevRepos => {\n                  // Avoid duplicates\n                  const exists = prevRepos.some(repo => repo.id === foundRepo.id);\n                  if (!exists) {\n                    // Add the new repository and sort alphabetically by name\n                    const newRepos = [...prevRepos, foundRepo];\n                    return newRepos.sort((a, b) => a.name.localeCompare(b.name));\n                  }\n                  return prevRepos;\n                });\n              },\n              // onProgress callback - update progress indicator with enhanced display\n              (progress) => {\n                console.log('📊 Real scanning progress:', progress);\n                setScanProgress(progress);\n                \n                // Track repositories currently being scanned with enhanced display timing\n                if (progress.started && !progress.completed) {\n                  // Repository is being started - add to currently scanning set\n                  console.log('🔍 Started scanning:', progress.currentRepo);\n                  setCurrentlyScanningRepos(prev => new Set([...prev, progress.currentRepo]));\n                  \n                  // Ensure the scanning state is properly set\n                  setScanProgress({\n                    ...progress,\n                    started: true,\n                    completed: false\n                  });\n                } else if (progress.completed) {\n                  // Repository is completed - show completion state\n                  console.log('✅ Completed scanning:', progress.currentRepo);\n                  setScanProgress({\n                    ...progress,\n                    completed: true\n                  });\n                  \n                  // Remove from currently scanning set after a brief moment\n                  setTimeout(() => {\n                    setCurrentlyScanningRepos(prev => {\n                      const newSet = new Set(prev);\n                      newSet.delete(progress.currentRepo);\n                      return newSet;\n                    });\n                  }, 200);\n                  \n                  // Check if this is the last repository being scanned\n                  if (progress.current === progress.total) {\n                    // All repositories have been scanned, stop the scanning state\n                    console.log('🎉 All repositories scanned, stopping scanning state');\n                    setTimeout(() => {\n                      setIsScanning(false);\n                      setScanProgress(null);\n                      setCurrentlyScanningRepos(new Set());\n                    }, 500); // Small delay to show completion\n                  }\n                } else if (progress.total === 0 && progress.completed) {\n                  // Special case: no repositories to scan\n                  console.log('🎉 No repositories to scan, stopping scanning state');\n                  setTimeout(() => {\n                    setIsScanning(false);\n                    setScanProgress(null);\n                    setCurrentlyScanningRepos(new Set());\n                  }, 500);\n                }\n              }\n            );\n            \n            try {\n              // Race between the scanning promise and timeout\n              repos = await Promise.race([scanPromise, timeoutPromise]);\n            } catch (timeoutError) {\n              console.error('⏰ Scanning timed out:', timeoutError.message);\n              // Stop scanning on timeout\n              setIsScanning(false);\n              setScanProgress(null);\n              setCurrentlyScanningRepos(new Set());\n              throw new Error('Repository scanning timed out. Please try again or use cached data if available.');\n            }\n            \n            // Cache the results for future quick access\n            repositoryCacheService.setCachedRepositories(\n              effectiveProfile.login, \n              effectiveProfile.type === 'org' ? 'org' : 'user', \n              repos\n            );\n            \n            // Update repositories with final results (in case callback missed any)\n            // Sort alphabetically to ensure consistent ordering\n            const sortedRepos = repos.sort((a, b) => a.name.localeCompare(b.name));\n            setRepositories(sortedRepos);\n          } else {\n            // Fallback to mock repositories with enhanced scanning demonstration\n            await simulateEnhancedScanning();\n            repos = getMockRepositories();\n            // Sort mock repositories alphabetically\n            repos.sort((a, b) => a.name.localeCompare(b.name));\n            setRepositories(repos);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching repositories:', error);\n      setError('Failed to fetch repositories. Please check your connection and try again.');\n      // Fallback to mock data for demonstration\n      const mockRepos = getMockRepositories();\n      mockRepos.sort((a, b) => a.name.localeCompare(b.name));\n      setRepositories(mockRepos);\n      // Make sure to stop scanning on error\n      setIsScanning(false);\n      setScanProgress(null);\n      setCurrentlyScanningRepos(new Set());\n    } finally {\n      setLoading(false);\n      // Don't automatically stop scanning here for authenticated progressive scans\n      // or for demo scanning - let them manage their own scanning state\n      if (!githubService.isAuth() && action === 'create') {\n        // Only auto-stop for create action when not authenticated\n        setIsScanning(false);\n        setScanProgress(null);\n        setCurrentlyScanningRepos(new Set());\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [effectiveProfile, action]);\n\n  useEffect(() => {\n    // Only proceed if we have valid profile, action and userParam consistency\n    if (!effectiveProfile || !action || !userParam || effectiveProfile.login !== userParam) {\n      return;\n    }\n    \n    // Always check cache first on initial load\n    fetchRepositories(false, false); // forceRescan=false, useCachedData=false (but still check cache first)\n  }, [effectiveProfile, action, userParam, fetchRepositories]);\n\n  const handleRepositorySelect = (repo) => {\n    setSelectedRepository(repo);\n    \n    // For 'edit' action, automatically navigate after selection\n    if (action === 'edit') {\n      // Add a small delay for visual feedback before navigation\n      setTimeout(() => {\n        const repoPath = getRepositoryPath(repo);\n        if (repoPath) {\n          const dashboardUrl = `/dashboard/${repoPath.user}/${repoPath.repo}`;\n          navigate(dashboardUrl, {\n            state: {\n              profile: effectiveProfile,\n              repository: repo,\n              action\n            }\n          });\n        } else {\n          // Fallback to original behavior if unable to extract path\n          const config = getActionConfig();\n          navigate(config.nextRoute, {\n            state: {\n              profile: effectiveProfile,\n              repository: repo,\n              action\n            }\n          });\n        }\n      }, 300); // 300ms delay for visual feedback\n    }\n  };\n\n  const handleContinue = () => {\n    if (!selectedRepository) {\n      alert('Please select a repository to continue');\n      return;\n    }\n\n    const config = getActionConfig();\n    \n    if (action === 'edit') {\n      // Go directly to dashboard for editing with user/repo parameters\n      const repoPath = getRepositoryPath(selectedRepository);\n      if (repoPath) {\n        const dashboardUrl = `/dashboard/${repoPath.user}/${repoPath.repo}`;\n        navigate(dashboardUrl, {\n          state: {\n            profile: effectiveProfile,\n            repository: selectedRepository,\n            action: action\n          }\n        });\n      } else {\n        // Fallback to original behavior if unable to extract path\n        navigate(config.nextRoute, {\n          state: {\n            profile: effectiveProfile,\n            repository: selectedRepository,\n            action: action\n          }\n        });\n      }\n    } else {\n      // Go to organization selection for fork/create\n      navigate(config.nextRoute, {\n        state: {\n          profile: effectiveProfile,\n          sourceRepository: selectedRepository,\n          action: action\n        }\n      });\n    }\n  };\n\n  const handleRescan = () => {\n    fetchRepositories(true, false); // Force rescan, don't use cache\n  };\n\n  const handleUseCachedData = () => {\n    fetchRepositories(false, false); // Don't force rescan, check cache first (this should use cache if available)\n  };\n\n  const handleDemoScanning = async () => {\n    // Simulate the enhanced scanning display for demonstration purposes\n    await simulateEnhancedScanning();\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  if (!effectiveProfile || !action || !userParam || effectiveProfile.login !== userParam) {\n    return <div className=\"dak-selection\"><div style={{color: 'white', textAlign: 'center', padding: '2rem'}}>Redirecting...</div></div>;\n  }\n\n  const config = getActionConfig();\n\n  return (\n    <div className=\"dak-selection\">\n      <div className=\"selection-content\">\n        <div className=\"selection-main\">\n          <div className=\"selection-header\">\n            <div className=\"selection-title\">\n              <h1>{config.title}</h1>\n              <p className=\"selection-subtitle\">{config.description}</p>\n            </div>\n          </div>\n          <div className=\"selection-intro\">\n            {action === 'create' && (\n              <div className=\"template-notice\">\n                <span className=\"notice-icon\">ℹ️</span>\n                <span>You'll create a new repository based on the WHO SMART Guidelines template.</span>\n              </div>\n            )}\n            \n            {action !== 'create' && githubService.isAuth() && (\n              <div className=\"cache-controls\">\n                {usingCachedData ? (\n                  <div className=\"cache-info\">\n                    <span className=\"cache-icon\">💾</span>\n                    <span>Using cached data. </span>\n                    <button \n                      onClick={handleRescan} \n                      className=\"rescan-link\"\n                      disabled={isScanning}\n                    >\n                      {isScanning ? 'Scanning...' : 'Refresh'}\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"scan-controls\">\n                    {!isScanning && !loading && (\n                      <>\n                        <button \n                          onClick={handleRescan} \n                          className=\"rescan-btn\"\n                          disabled={isScanning}\n                        >\n                          🔄 Rescan Repositories\n                        </button>\n                        {repositoryCacheService.getCachedRepositories(effectiveProfile.login, effectiveProfile.type === 'org' ? 'org' : 'user') && (\n                          <button \n                            onClick={handleUseCachedData} \n                            className=\"cache-btn\"\n                            disabled={isScanning}\n                          >\n                            💾 Use Cached Data\n                          </button>\n                        )}\n                      </>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n            {action !== 'create' && !githubService.isAuth() && !isScanning && !loading && (\n              <div className=\"demo-controls\">\n                <div className=\"demo-info\">\n                  <span className=\"demo-icon\">🎭</span>\n                  <span>Not authenticated. </span>\n                  <button \n                    onClick={handleDemoScanning} \n                    className=\"demo-scan-btn\"\n                    disabled={isScanning}\n                  >\n                    ✨ Demo Enhanced Scanning Display\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {loading ? (\n            <div className=\"loading\">\n              <div className=\"spinner\"></div>\n              <p>Loading repositories...</p>\n            </div>\n          ) : isScanning ? (\n            <div className=\"scanning-status\">\n              <div className=\"scanning-header\">\n                <div className=\"spinner\"></div>\n                <h3>Scanning repositories for SMART Guidelines compatibility...</h3>\n              </div>\n              {scanProgress && (\n                <div className=\"progress-container\">\n                  <div className=\"progress-bar\">\n                    <div \n                      className=\"progress-fill\" \n                      style={{ width: `${scanProgress.progress}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"progress-info\">\n                    {/* Unified scanning status showing percentage and currently testing repos */}\n                    <div className=\"unified-scanning-status\">\n                      <div className=\"scanning-header-unified\">\n                        <div className=\"progress-stats\">\n                          <span className=\"progress-text\">\n                            {scanProgress.current}/{scanProgress.total} repositories\n                          </span>\n                          <span className=\"progress-percentage\">{scanProgress.progress}%</span>\n                        </div>\n                        {/* Always show Currently Testing section to maintain consistent height */}\n                        <div className=\"currently-testing-unified\">\n                          <span className=\"scanning-icon\">🔍</span>\n                          <span>Currently Testing:</span>\n                          <div className=\"currently-scanning-repos\">\n                            {currentlyScanningRepos.size > 0 ? (\n                              Array.from(currentlyScanningRepos).map((repoName) => (\n                                <div key={repoName} className=\"scanning-repo-item\">\n                                  <span className=\"repo-status-indicator\">⚡</span>\n                                  <span className=\"scanning-repo-name\">{repoName}</span>\n                                </div>\n                              ))\n                            ) : (\n                              <div className=\"scanning-repo-item\">\n                                <span className=\"repo-status-indicator\">⏳</span>\n                                <span className=\"scanning-repo-name\">Preparing scan...</span>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"scanning-note\">\n                    <span className=\"note-icon\">⚡</span>\n                    <span>Scanning up to 5 repositories concurrently to improve speed</span>\n                  </div>\n                </div>\n              )}\n              <div className=\"scanning-results\">\n                <p>Found repositories will appear below as they are discovered:</p>\n                <div className=\"repo-grid\">\n                  {repositories.map((repo) => (\n                    <div \n                      key={repo.id}\n                      className={`repo-card ${selectedRepository?.id === repo.id ? 'selected' : ''} scanning-found`}\n                      onClick={() => handleRepositorySelect(repo)}\n                    >\n                      <div className=\"repo-header-info\">\n                        <h3>{repo.name} <span className=\"new-badge\">✨ Found</span></h3>\n                        <div className=\"repo-meta\">\n                          {repo.is_template && (\n                            <span className=\"template-badge\">\n                              {repo.template_config?.name || 'Template'}\n                            </span>\n                          )}\n                          {repo.private && <span className=\"private-badge\">Private</span>}\n                          {repo.language && <span className=\"language-badge\">{repo.language}</span>}\n                          {repo.smart_guidelines_compatible && (\n                            <span className=\"compatible-badge\">SMART Guidelines</span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <p className=\"repo-description\">{repo.description || 'No description available'}</p>\n                      \n                      <div className=\"repo-topics\">\n                        {(repo.topics || []).slice(0, 3).map((topic) => (\n                          <span key={topic} className=\"topic-tag\">{topic}</span>\n                        ))}\n                        {(repo.topics || []).length > 3 && (\n                          <span className=\"topic-more\">+{(repo.topics || []).length - 3} more</span>\n                        )}\n                      </div>\n                      \n                      <div className=\"repo-stats\">\n                        <div className=\"stat\">\n                          <span className=\"stat-icon\">⭐</span>\n                          <span>{repo.stargazers_count || 0}</span>\n                        </div>\n                        <div className=\"stat\">\n                          <span className=\"stat-icon\">🍴</span>\n                          <span>{repo.forks_count || 0}</span>\n                        </div>\n                        <div className=\"stat\">\n                          <span className=\"stat-icon\">📅</span>\n                          <span>Updated {formatDate(repo.updated_at)}</span>\n                        </div>\n                      </div>\n\n                      {selectedRepository?.id === repo.id && (\n                        <div className=\"selection-indicator\">\n                          <span>✓ Selected</span>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ) : error ? (\n            <div className=\"error-state\">\n              <h3>Error loading repositories</h3>\n              <p>{error}</p>\n              <button onClick={fetchRepositories} className=\"retry-btn\">\n                Try Again\n              </button>\n            </div>\n          ) : repositories.length === 0 ? (\n            <div className=\"empty-state\">\n              <h3>No repositories found</h3>\n              <p>\n                {action === 'create' \n                  ? 'Unable to load the WHO template repository.'\n                  : 'No DAK repositories found with SMART Guidelines compatibility.'\n                }\n              </p>\n            </div>\n          ) : (\n            <>\n              <div className=\"repo-grid\">\n                {repositories.map((repo) => (\n                  <div \n                    key={repo.id}\n                    className={`repo-card ${selectedRepository?.id === repo.id ? 'selected' : ''}`}\n                    onClick={() => handleRepositorySelect(repo)}\n                  >\n                    <div className=\"repo-header-info\">\n                      <h3>{repo.name}</h3>\n                      <div className=\"repo-meta\">\n                        {repo.is_template && (\n                          <span className=\"template-badge\">\n                            {repo.template_config?.name || 'Template'}\n                          </span>\n                        )}\n                        {repo.private && <span className=\"private-badge\">Private</span>}\n                        {repo.language && <span className=\"language-badge\">{repo.language}</span>}\n                        {repo.smart_guidelines_compatible && (\n                          <span className=\"compatible-badge\">SMART Guidelines</span>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <p className=\"repo-description\">{repo.description || 'No description available'}</p>\n                    \n                    <div className=\"repo-topics\">\n                      {(repo.topics || []).slice(0, 3).map((topic) => (\n                        <span key={topic} className=\"topic-tag\">{topic}</span>\n                      ))}\n                      {(repo.topics || []).length > 3 && (\n                        <span className=\"topic-more\">+{(repo.topics || []).length - 3} more</span>\n                      )}\n                    </div>\n                    \n                    <div className=\"repo-stats\">\n                      <div className=\"stat\">\n                        <span className=\"stat-icon\">⭐</span>\n                        <span>{repo.stargazers_count || 0}</span>\n                      </div>\n                      <div className=\"stat\">\n                        <span className=\"stat-icon\">🍴</span>\n                        <span>{repo.forks_count || 0}</span>\n                      </div>\n                      <div className=\"stat\">\n                        <span className=\"stat-icon\">📅</span>\n                        <span>Updated {formatDate(repo.updated_at)}</span>\n                      </div>\n                    </div>\n\n                    {selectedRepository?.id === repo.id && (\n                      <div className=\"selection-indicator\">\n                        <span>✓ Selected</span>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"selection-footer\">\n                {action !== 'edit' && (\n                  <button \n                    className=\"continue-btn\"\n                    onClick={handleContinue}\n                    disabled={!selectedRepository}\n                  >\n                    {config.buttonText}\n                  </button>\n                )}\n                {action === 'edit' && (\n                  <div className=\"direct-selection-note\">\n                    <span className=\"note-icon\">💡</span>\n                    <span>Click on a repository above to start editing its components</span>\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DAKSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}