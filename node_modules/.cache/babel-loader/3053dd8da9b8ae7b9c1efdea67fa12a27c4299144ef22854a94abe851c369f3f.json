{"ast":null,"code":"import { forEach } from 'min-dash';\n\n/**\n * @typedef {import('../../../core/ElementRegistry').default} ElementRegistry\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * @param {Modeling} modeling\n * @param {ElementRegistry} elementRegistry\n */\nexport default function DeleteElementsHandler(modeling, elementRegistry) {\n  this._modeling = modeling;\n  this._elementRegistry = elementRegistry;\n}\nDeleteElementsHandler.$inject = ['modeling', 'elementRegistry'];\nDeleteElementsHandler.prototype.postExecute = function (context) {\n  var modeling = this._modeling,\n    elementRegistry = this._elementRegistry,\n    elements = context.elements;\n  forEach(elements, function (element) {\n    // element may have been removed with previous\n    // remove operations already (e.g. in case of nesting)\n    if (!elementRegistry.get(element.id)) {\n      return;\n    }\n    if (element.waypoints) {\n      modeling.removeConnection(element);\n    } else {\n      modeling.removeShape(element);\n    }\n  });\n};","map":{"version":3,"names":["forEach","DeleteElementsHandler","modeling","elementRegistry","_modeling","_elementRegistry","$inject","prototype","postExecute","context","elements","element","get","id","waypoints","removeConnection","removeShape"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/modeling/cmd/DeleteElementsHandler.js"],"sourcesContent":["import { forEach } from 'min-dash';\n\n/**\n * @typedef {import('../../../core/ElementRegistry').default} ElementRegistry\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * @param {Modeling} modeling\n * @param {ElementRegistry} elementRegistry\n */\nexport default function DeleteElementsHandler(modeling, elementRegistry) {\n  this._modeling = modeling;\n  this._elementRegistry = elementRegistry;\n}\n\nDeleteElementsHandler.$inject = [\n  'modeling',\n  'elementRegistry'\n];\n\n\nDeleteElementsHandler.prototype.postExecute = function(context) {\n\n  var modeling = this._modeling,\n      elementRegistry = this._elementRegistry,\n      elements = context.elements;\n\n  forEach(elements, function(element) {\n\n    // element may have been removed with previous\n    // remove operations already (e.g. in case of nesting)\n    if (!elementRegistry.get(element.id)) {\n      return;\n    }\n\n    if (element.waypoints) {\n      modeling.removeConnection(element);\n    } else {\n      modeling.removeShape(element);\n    }\n  });\n};"],"mappings":"AAAA,SAASA,OAAO,QAAQ,UAAU;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAASC,qBAAqBA,CAACC,QAAQ,EAAEC,eAAe,EAAE;EACvE,IAAI,CAACC,SAAS,GAAGF,QAAQ;EACzB,IAAI,CAACG,gBAAgB,GAAGF,eAAe;AACzC;AAEAF,qBAAqB,CAACK,OAAO,GAAG,CAC9B,UAAU,EACV,iBAAiB,CAClB;AAGDL,qBAAqB,CAACM,SAAS,CAACC,WAAW,GAAG,UAASC,OAAO,EAAE;EAE9D,IAAIP,QAAQ,GAAG,IAAI,CAACE,SAAS;IACzBD,eAAe,GAAG,IAAI,CAACE,gBAAgB;IACvCK,QAAQ,GAAGD,OAAO,CAACC,QAAQ;EAE/BV,OAAO,CAACU,QAAQ,EAAE,UAASC,OAAO,EAAE;IAElC;IACA;IACA,IAAI,CAACR,eAAe,CAACS,GAAG,CAACD,OAAO,CAACE,EAAE,CAAC,EAAE;MACpC;IACF;IAEA,IAAIF,OAAO,CAACG,SAAS,EAAE;MACrBZ,QAAQ,CAACa,gBAAgB,CAACJ,OAAO,CAAC;IACpC,CAAC,MAAM;MACLT,QAAQ,CAACc,WAAW,CAACL,OAAO,CAAC;IAC/B;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}