{"ast":null,"code":"import { forEach } from 'min-dash';\nimport { snapTo } from './SnapUtil';\n\n/**\n * @typedef {import('../../model/Types').Element} Element\n *\n * @typedef {import('../../util/Types').Axis} Axis\n * @typedef {import('../../util/Types').DirectionTRBL} DirectionTRBL\n * @typedef {import('../../util/Types').Point} Point\n *\n * @typedef {DirectionTRBL & 'mid'} SnapLocation\n */\n\n/**\n * A snap context, containing the (possibly incomplete)\n * mappings of drop targets (to identify the snapping)\n * to computed snap points.\n */\nexport default function SnapContext() {\n  /**\n   * @type {Record<string, SnapPoints>}\n   */\n  this._targets = {};\n\n  /**\n   * @type {Record<SnapLocation, Point>}\n   */\n  this._snapOrigins = {};\n\n  /**\n   * @type {SnapLocation[]}\n   */\n  this._snapLocations = [];\n\n  /**\n   * @type {Record<SnapLocation, Point[]>}\n   */\n  this._defaultSnaps = {};\n}\n\n/**\n * Get the snap origin for a given location.\n *\n * @param {SnapLocation} snapLocation\n *\n * @return {Point}\n */\nSnapContext.prototype.getSnapOrigin = function (snapLocation) {\n  return this._snapOrigins[snapLocation];\n};\n\n/**\n * Set the snap origin for a given location.\n *\n * @param {SnapLocation} snapLocation\n * @param {Point} snapOrigin\n */\nSnapContext.prototype.setSnapOrigin = function (snapLocation, snapOrigin) {\n  this._snapOrigins[snapLocation] = snapOrigin;\n  if (this._snapLocations.indexOf(snapLocation) === -1) {\n    this._snapLocations.push(snapLocation);\n  }\n};\n\n/**\n * Add a default snap point.\n *\n * @param {SnapLocation} snapLocation\n * @param {Point} point\n */\nSnapContext.prototype.addDefaultSnap = function (snapLocation, point) {\n  var snapValues = this._defaultSnaps[snapLocation];\n  if (!snapValues) {\n    snapValues = this._defaultSnaps[snapLocation] = [];\n  }\n  snapValues.push(point);\n};\n\n/**\n * Get the snap locations for this context.\n *\n * @return {SnapLocation[]}\n */\nSnapContext.prototype.getSnapLocations = function () {\n  return this._snapLocations;\n};\n\n/**\n * Set the snap locations for this context.\n *\n * The order of locations determines precedence.\n *\n * @param {SnapLocation[]} snapLocations\n */\nSnapContext.prototype.setSnapLocations = function (snapLocations) {\n  this._snapLocations = snapLocations;\n};\n\n/**\n * Get snap points for the given target.\n *\n * @param {Element|string} target\n *\n * @return {SnapPoints}\n */\nSnapContext.prototype.pointsForTarget = function (target) {\n  var targetId = target.id || target;\n  var snapPoints = this._targets[targetId];\n  if (!snapPoints) {\n    snapPoints = this._targets[targetId] = new SnapPoints();\n    snapPoints.initDefaults(this._defaultSnaps);\n  }\n  return snapPoints;\n};\n\n/**\n * Add points to snap to.\n */\nexport function SnapPoints() {\n  /**\n   * Example:\n   *\n   * ```javascript\n   * {\n   *   'top-right': {\n   *     x: [ 100, 200, 300 ]\n   *     y: [ 100, 200, 300 ]\n   *   }\n   * }\n   * ```\n   *\n   * @type {Record<string, Record<Axis, number[]>>}\n   */\n  this._snapValues = {};\n}\n\n/**\n * Add a snap point.\n *\n * @param {SnapLocation} snapLocation\n * @param {Point} point\n */\nSnapPoints.prototype.add = function (snapLocation, point) {\n  var snapValues = this._snapValues[snapLocation];\n  if (!snapValues) {\n    snapValues = this._snapValues[snapLocation] = {\n      x: [],\n      y: []\n    };\n  }\n  if (snapValues.x.indexOf(point.x) === -1) {\n    snapValues.x.push(point.x);\n  }\n  if (snapValues.y.indexOf(point.y) === -1) {\n    snapValues.y.push(point.y);\n  }\n};\n\n/**\n * Snap a point's x or y value.\n *\n * @param {Point} point\n * @param {SnapLocation} snapLocation\n * @param {Axis} axis\n * @param {number} tolerance\n *\n * @return {number}\n */\nSnapPoints.prototype.snap = function (point, snapLocation, axis, tolerance) {\n  var snappingValues = this._snapValues[snapLocation];\n  return snappingValues && snapTo(point[axis], snappingValues[axis], tolerance);\n};\n\n/**\n * Initialize default snap points.\n *\n * @param {Record<SnapLocation, Point[]>} defaultSnaps\n */\nSnapPoints.prototype.initDefaults = function (defaultSnaps) {\n  var self = this;\n  forEach(defaultSnaps || {}, function (snapPoints, snapLocation) {\n    forEach(snapPoints, function (point) {\n      self.add(snapLocation, point);\n    });\n  });\n};","map":{"version":3,"names":["forEach","snapTo","SnapContext","_targets","_snapOrigins","_snapLocations","_defaultSnaps","prototype","getSnapOrigin","snapLocation","setSnapOrigin","snapOrigin","indexOf","push","addDefaultSnap","point","snapValues","getSnapLocations","setSnapLocations","snapLocations","pointsForTarget","target","targetId","id","snapPoints","SnapPoints","initDefaults","_snapValues","add","x","y","snap","axis","tolerance","snappingValues","defaultSnaps","self"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/snapping/SnapContext.js"],"sourcesContent":["import {\n  forEach\n} from 'min-dash';\n\nimport {\n  snapTo\n} from './SnapUtil';\n\n/**\n * @typedef {import('../../model/Types').Element} Element\n *\n * @typedef {import('../../util/Types').Axis} Axis\n * @typedef {import('../../util/Types').DirectionTRBL} DirectionTRBL\n * @typedef {import('../../util/Types').Point} Point\n *\n * @typedef {DirectionTRBL & 'mid'} SnapLocation\n */\n\n/**\n * A snap context, containing the (possibly incomplete)\n * mappings of drop targets (to identify the snapping)\n * to computed snap points.\n */\nexport default function SnapContext() {\n\n  /**\n   * @type {Record<string, SnapPoints>}\n   */\n  this._targets = {};\n\n  /**\n   * @type {Record<SnapLocation, Point>}\n   */\n  this._snapOrigins = {};\n\n  /**\n   * @type {SnapLocation[]}\n   */\n  this._snapLocations = [];\n\n  /**\n   * @type {Record<SnapLocation, Point[]>}\n   */\n  this._defaultSnaps = {};\n}\n\n/**\n * Get the snap origin for a given location.\n *\n * @param {SnapLocation} snapLocation\n *\n * @return {Point}\n */\nSnapContext.prototype.getSnapOrigin = function(snapLocation) {\n  return this._snapOrigins[snapLocation];\n};\n\n/**\n * Set the snap origin for a given location.\n *\n * @param {SnapLocation} snapLocation\n * @param {Point} snapOrigin\n */\nSnapContext.prototype.setSnapOrigin = function(snapLocation, snapOrigin) {\n  this._snapOrigins[snapLocation] = snapOrigin;\n\n  if (this._snapLocations.indexOf(snapLocation) === -1) {\n    this._snapLocations.push(snapLocation);\n  }\n};\n\n/**\n * Add a default snap point.\n *\n * @param {SnapLocation} snapLocation\n * @param {Point} point\n */\nSnapContext.prototype.addDefaultSnap = function(snapLocation, point) {\n\n  var snapValues = this._defaultSnaps[snapLocation];\n\n  if (!snapValues) {\n    snapValues = this._defaultSnaps[snapLocation] = [];\n  }\n\n  snapValues.push(point);\n};\n\n/**\n * Get the snap locations for this context.\n *\n * @return {SnapLocation[]}\n */\nSnapContext.prototype.getSnapLocations = function() {\n  return this._snapLocations;\n};\n\n/**\n * Set the snap locations for this context.\n *\n * The order of locations determines precedence.\n *\n * @param {SnapLocation[]} snapLocations\n */\nSnapContext.prototype.setSnapLocations = function(snapLocations) {\n  this._snapLocations = snapLocations;\n};\n\n/**\n * Get snap points for the given target.\n *\n * @param {Element|string} target\n *\n * @return {SnapPoints}\n */\nSnapContext.prototype.pointsForTarget = function(target) {\n\n  var targetId = target.id || target;\n\n  var snapPoints = this._targets[targetId];\n\n  if (!snapPoints) {\n    snapPoints = this._targets[targetId] = new SnapPoints();\n    snapPoints.initDefaults(this._defaultSnaps);\n  }\n\n  return snapPoints;\n};\n\n\n/**\n * Add points to snap to.\n */\nexport function SnapPoints() {\n\n  /**\n   * Example:\n   *\n   * ```javascript\n   * {\n   *   'top-right': {\n   *     x: [ 100, 200, 300 ]\n   *     y: [ 100, 200, 300 ]\n   *   }\n   * }\n   * ```\n   *\n   * @type {Record<string, Record<Axis, number[]>>}\n   */\n  this._snapValues = {};\n}\n\n/**\n * Add a snap point.\n *\n * @param {SnapLocation} snapLocation\n * @param {Point} point\n */\nSnapPoints.prototype.add = function(snapLocation, point) {\n\n  var snapValues = this._snapValues[snapLocation];\n\n  if (!snapValues) {\n    snapValues = this._snapValues[snapLocation] = { x: [], y: [] };\n  }\n\n  if (snapValues.x.indexOf(point.x) === -1) {\n    snapValues.x.push(point.x);\n  }\n\n  if (snapValues.y.indexOf(point.y) === -1) {\n    snapValues.y.push(point.y);\n  }\n};\n\n/**\n * Snap a point's x or y value.\n *\n * @param {Point} point\n * @param {SnapLocation} snapLocation\n * @param {Axis} axis\n * @param {number} tolerance\n *\n * @return {number}\n */\nSnapPoints.prototype.snap = function(point, snapLocation, axis, tolerance) {\n  var snappingValues = this._snapValues[snapLocation];\n\n  return snappingValues && snapTo(point[axis], snappingValues[axis], tolerance);\n};\n\n/**\n * Initialize default snap points.\n *\n * @param {Record<SnapLocation, Point[]>} defaultSnaps\n */\nSnapPoints.prototype.initDefaults = function(defaultSnaps) {\n\n  var self = this;\n\n  forEach(defaultSnaps || {}, function(snapPoints, snapLocation) {\n    forEach(snapPoints, function(point) {\n      self.add(snapLocation, point);\n    });\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}