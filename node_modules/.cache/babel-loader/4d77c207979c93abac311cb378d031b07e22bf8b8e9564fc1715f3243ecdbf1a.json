{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../../util/ModelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n */\n\nvar LOW_PRIORITY = 500,\n  HIGH_PRIORITY = 5000;\n\n/**\n * BPMN specific delete lane behavior.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function UpdateFlowNodeRefsBehavior(eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Update Lane#flowNodeRefs and FlowNode#lanes with every flow node\n   * move/resize and lane move/resize. Groups elements to recompute containments\n   * as efficient as possible.\n   */\n\n  // the update context\n  var context;\n  function initContext() {\n    context = context || new UpdateContext();\n    context.enter();\n    return context;\n  }\n  function getContext() {\n    if (!context) {\n      throw new Error('out of bounds release');\n    }\n    return context;\n  }\n  function releaseContext() {\n    if (!context) {\n      throw new Error('out of bounds release');\n    }\n    var triggerUpdate = context.leave();\n    if (triggerUpdate) {\n      modeling.updateLaneRefs(context.flowNodes, context.lanes);\n      context = null;\n    }\n    return triggerUpdate;\n  }\n  var laneRefUpdateEvents = ['spaceTool', 'lane.add', 'lane.resize', 'lane.split', 'elements.create', 'elements.delete', 'elements.move', 'shape.create', 'shape.delete', 'shape.move', 'shape.resize'];\n\n  // listen to a lot of stuff to group lane updates\n\n  this.preExecute(laneRefUpdateEvents, HIGH_PRIORITY, function (event) {\n    initContext();\n  });\n  this.postExecuted(laneRefUpdateEvents, LOW_PRIORITY, function (event) {\n    releaseContext();\n  });\n\n  // Mark flow nodes + lanes that need an update\n\n  this.preExecute(['shape.create', 'shape.move', 'shape.delete', 'shape.resize'], function (event) {\n    var context = event.context,\n      shape = context.shape;\n    var updateContext = getContext();\n\n    // no need to update labels\n    if (shape.labelTarget) {\n      return;\n    }\n    if (is(shape, 'bpmn:Lane')) {\n      updateContext.addLane(shape);\n    }\n    if (is(shape, 'bpmn:FlowNode')) {\n      updateContext.addFlowNode(shape);\n    }\n  });\n}\nUpdateFlowNodeRefsBehavior.$inject = ['eventBus', 'modeling'];\ninherits(UpdateFlowNodeRefsBehavior, CommandInterceptor);\nfunction UpdateContext() {\n  this.flowNodes = [];\n  this.lanes = [];\n  this.counter = 0;\n  this.addLane = function (lane) {\n    this.lanes.push(lane);\n  };\n  this.addFlowNode = function (flowNode) {\n    this.flowNodes.push(flowNode);\n  };\n  this.enter = function () {\n    this.counter++;\n  };\n  this.leave = function () {\n    this.counter--;\n    return !this.counter;\n  };\n}","map":{"version":3,"names":["inherits","CommandInterceptor","is","LOW_PRIORITY","HIGH_PRIORITY","UpdateFlowNodeRefsBehavior","eventBus","modeling","call","context","initContext","UpdateContext","enter","getContext","Error","releaseContext","triggerUpdate","leave","updateLaneRefs","flowNodes","lanes","laneRefUpdateEvents","preExecute","event","postExecuted","shape","updateContext","labelTarget","addLane","addFlowNode","$inject","counter","lane","push","flowNode"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/UpdateFlowNodeRefsBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  is\n} from '../../../util/ModelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n */\n\nvar LOW_PRIORITY = 500,\n    HIGH_PRIORITY = 5000;\n\n\n/**\n * BPMN specific delete lane behavior.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function UpdateFlowNodeRefsBehavior(eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Update Lane#flowNodeRefs and FlowNode#lanes with every flow node\n   * move/resize and lane move/resize. Groups elements to recompute containments\n   * as efficient as possible.\n   */\n\n  // the update context\n  var context;\n\n\n  function initContext() {\n    context = context || new UpdateContext();\n    context.enter();\n\n    return context;\n  }\n\n  function getContext() {\n    if (!context) {\n      throw new Error('out of bounds release');\n    }\n\n    return context;\n  }\n\n  function releaseContext() {\n\n    if (!context) {\n      throw new Error('out of bounds release');\n    }\n\n    var triggerUpdate = context.leave();\n\n    if (triggerUpdate) {\n      modeling.updateLaneRefs(context.flowNodes, context.lanes);\n\n      context = null;\n    }\n\n    return triggerUpdate;\n  }\n\n\n  var laneRefUpdateEvents = [\n    'spaceTool',\n    'lane.add',\n    'lane.resize',\n    'lane.split',\n    'elements.create',\n    'elements.delete',\n    'elements.move',\n    'shape.create',\n    'shape.delete',\n    'shape.move',\n    'shape.resize'\n  ];\n\n\n  // listen to a lot of stuff to group lane updates\n\n  this.preExecute(laneRefUpdateEvents, HIGH_PRIORITY, function(event) {\n    initContext();\n  });\n\n  this.postExecuted(laneRefUpdateEvents, LOW_PRIORITY, function(event) {\n    releaseContext();\n  });\n\n\n  // Mark flow nodes + lanes that need an update\n\n  this.preExecute([\n    'shape.create',\n    'shape.move',\n    'shape.delete',\n    'shape.resize'\n  ], function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    var updateContext = getContext();\n\n    // no need to update labels\n    if (shape.labelTarget) {\n      return;\n    }\n\n    if (is(shape, 'bpmn:Lane')) {\n      updateContext.addLane(shape);\n    }\n\n    if (is(shape, 'bpmn:FlowNode')) {\n      updateContext.addFlowNode(shape);\n    }\n  });\n}\n\nUpdateFlowNodeRefsBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n\ninherits(UpdateFlowNodeRefsBehavior, CommandInterceptor);\n\n\nfunction UpdateContext() {\n\n  this.flowNodes = [];\n  this.lanes = [];\n\n  this.counter = 0;\n\n  this.addLane = function(lane) {\n    this.lanes.push(lane);\n  };\n\n  this.addFlowNode = function(flowNode) {\n    this.flowNodes.push(flowNode);\n  };\n\n  this.enter = function() {\n    this.counter++;\n  };\n\n  this.leave = function() {\n    this.counter--;\n\n    return !this.counter;\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}