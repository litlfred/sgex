{"ast":null,"code":"/**\n * Utility functions for handling navigation with command-click support\n *//**\n * Detects if a click event should open in a new tab\n * @param {MouseEvent} event - The click event\n * @returns {boolean} - True if should open in new tab (Ctrl/Cmd+click)\n */export const shouldOpenInNewTab=event=>{return!!(event!==null&&event!==void 0&&event.ctrlKey||event!==null&&event!==void 0&&event.metaKey);// Ctrl on Windows/Linux, Cmd on Mac\n};/**\n * Constructs a full URL from a relative path using the current base URL\n * @param {string} relativePath - The relative path (e.g., '/dashboard/user/repo')\n * @returns {string} - The full URL\n */export const constructFullUrl=relativePath=>{const basePath=process.env.PUBLIC_URL||'';const baseUrl=window.location.origin;// Remove leading slash from relativePath if present to avoid double slashes\nconst cleanPath=relativePath.startsWith('/')?relativePath.slice(1):relativePath;// Only add basePath if it's not empty\nif(!basePath){return`${baseUrl}/${cleanPath}`;}// Ensure basePath ends with slash for proper joining\nconst cleanBasePath=basePath.endsWith('/')?basePath:basePath+'/';return`${baseUrl}${cleanBasePath}${cleanPath}`;};/**\n * Handles navigation with command-click support\n * @param {MouseEvent} event - The click event\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n */export const handleNavigationClick=function(event,path,navigate){let state=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(shouldOpenInNewTab(event)){// Open in new tab\nconst fullUrl=constructFullUrl(path);window.open(fullUrl,'_blank','noopener,noreferrer');}else{// Navigate in same tab\nif(state){navigate(path,{state});}else{navigate(path);}}};/**\n * Creates a click handler that supports command-click for new tabs\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n * @returns {Function} - Click handler function\n */export const createNavigationClickHandler=function(path,navigate){let state=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return event=>{handleNavigationClick(event,path,navigate,state);};};","map":{"version":3,"names":["shouldOpenInNewTab","event","ctrlKey","metaKey","constructFullUrl","relativePath","basePath","process","env","PUBLIC_URL","baseUrl","window","location","origin","cleanPath","startsWith","slice","cleanBasePath","endsWith","handleNavigationClick","path","navigate","state","arguments","length","undefined","fullUrl","open","createNavigationClickHandler"],"sources":["/home/runner/work/sgex/sgex/src/utils/navigationUtils.js"],"sourcesContent":["/**\n * Utility functions for handling navigation with command-click support\n */\n\n/**\n * Detects if a click event should open in a new tab\n * @param {MouseEvent} event - The click event\n * @returns {boolean} - True if should open in new tab (Ctrl/Cmd+click)\n */\nexport const shouldOpenInNewTab = (event) => {\n  return !!(event?.ctrlKey || event?.metaKey); // Ctrl on Windows/Linux, Cmd on Mac\n};\n\n/**\n * Constructs a full URL from a relative path using the current base URL\n * @param {string} relativePath - The relative path (e.g., '/dashboard/user/repo')\n * @returns {string} - The full URL\n */\nexport const constructFullUrl = (relativePath) => {\n  const basePath = process.env.PUBLIC_URL || '';\n  const baseUrl = window.location.origin;\n  \n  // Remove leading slash from relativePath if present to avoid double slashes\n  const cleanPath = relativePath.startsWith('/') ? relativePath.slice(1) : relativePath;\n  \n  // Only add basePath if it's not empty\n  if (!basePath) {\n    return `${baseUrl}/${cleanPath}`;\n  }\n  \n  // Ensure basePath ends with slash for proper joining\n  const cleanBasePath = basePath.endsWith('/') ? basePath : basePath + '/';\n  \n  return `${baseUrl}${cleanBasePath}${cleanPath}`;\n};\n\n/**\n * Handles navigation with command-click support\n * @param {MouseEvent} event - The click event\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n */\nexport const handleNavigationClick = (event, path, navigate, state = null) => {\n  if (shouldOpenInNewTab(event)) {\n    // Open in new tab\n    const fullUrl = constructFullUrl(path);\n    window.open(fullUrl, '_blank', 'noopener,noreferrer');\n  } else {\n    // Navigate in same tab\n    if (state) {\n      navigate(path, { state });\n    } else {\n      navigate(path);\n    }\n  }\n};\n\n/**\n * Creates a click handler that supports command-click for new tabs\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n * @returns {Function} - Click handler function\n */\nexport const createNavigationClickHandler = (path, navigate, state = null) => {\n  return (event) => {\n    handleNavigationClick(event, path, navigate, state);\n  };\n};"],"mappings":"AAAA;AACA;AACA,GAEA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAA,kBAAkB,CAAIC,KAAK,EAAK,CAC3C,MAAO,CAAC,EAAEA,KAAK,SAALA,KAAK,WAALA,KAAK,CAAEC,OAAO,EAAID,KAAK,SAALA,KAAK,WAALA,KAAK,CAAEE,OAAO,CAAC,CAAE;AAC/C,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,gBAAgB,CAAIC,YAAY,EAAK,CAChD,KAAM,CAAAC,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,EAAI,EAAE,CAC7C,KAAM,CAAAC,OAAO,CAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAEtC;AACA,KAAM,CAAAC,SAAS,CAAGT,YAAY,CAACU,UAAU,CAAC,GAAG,CAAC,CAAGV,YAAY,CAACW,KAAK,CAAC,CAAC,CAAC,CAAGX,YAAY,CAErF;AACA,GAAI,CAACC,QAAQ,CAAE,CACb,MAAO,GAAGI,OAAO,IAAII,SAAS,EAAE,CAClC,CAEA;AACA,KAAM,CAAAG,aAAa,CAAGX,QAAQ,CAACY,QAAQ,CAAC,GAAG,CAAC,CAAGZ,QAAQ,CAAGA,QAAQ,CAAG,GAAG,CAExE,MAAO,GAAGI,OAAO,GAAGO,aAAa,GAAGH,SAAS,EAAE,CACjD,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAK,qBAAqB,CAAG,QAAAA,CAAClB,KAAK,CAAEmB,IAAI,CAAEC,QAAQ,CAAmB,IAAjB,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACvE,GAAIvB,kBAAkB,CAACC,KAAK,CAAC,CAAE,CAC7B;AACA,KAAM,CAAAyB,OAAO,CAAGtB,gBAAgB,CAACgB,IAAI,CAAC,CACtCT,MAAM,CAACgB,IAAI,CAACD,OAAO,CAAE,QAAQ,CAAE,qBAAqB,CAAC,CACvD,CAAC,IAAM,CACL;AACA,GAAIJ,KAAK,CAAE,CACTD,QAAQ,CAACD,IAAI,CAAE,CAAEE,KAAM,CAAC,CAAC,CAC3B,CAAC,IAAM,CACLD,QAAQ,CAACD,IAAI,CAAC,CAChB,CACF,CACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAQ,4BAA4B,CAAG,QAAAA,CAACR,IAAI,CAAEC,QAAQ,CAAmB,IAAjB,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACvE,MAAQ,CAAAtB,KAAK,EAAK,CAChBkB,qBAAqB,CAAClB,KAAK,CAAEmB,IAAI,CAAEC,QAAQ,CAAEC,KAAK,CAAC,CACrD,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}