{"ast":null,"code":"import inherits from 'inherits-browser';\nimport { find, isArray, matchPattern, some } from 'min-dash';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { add as collectionAdd, remove as collectionRemove } from 'diagram-js/lib/util/Collections';\nimport { getBusinessObject, is } from '../../../util/ModelUtil';\nimport { isAny } from '../util/ModelingUtil';\nimport { hasEventDefinition } from '../../../util/DiUtil';\n\n/**\r\n * @typedef {import('../../../Modeler').default} Modeler\r\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\r\n * @typedef {import('didi').Injector} Injector\r\n * @typedef {import('../../copy-paste/ModdleCopy').default} ModdleCopy\r\n * @typedef {import('../BpmnFactory').default} BpmnFactory\r\n *\r\n * @typedef {import('../../../model/Types').Element} Element\r\n * @typedef {import('../../../model/Types').Shape} Shape\r\n *\r\n * @typedef {import('diagram-js/lib/util/Types').DirectionTRBL} DirectionTRBL\r\n */\n\nvar LOW_PRIORITY = 500;\n\n/**\r\n * Add referenced root elements (error, escalation, message, signal) if they don't exist.\r\n * Copy referenced root elements on copy & paste.\r\n *\r\n * @param {Modeler} bpmnjs\r\n * @param {EventBus} eventBus\r\n * @param {Injector} injector\r\n * @param {ModdleCopy} moddleCopy\r\n * @param {BpmnFactory} bpmnFactory\r\n */\nexport default function RootElementReferenceBehavior(bpmnjs, eventBus, injector, moddleCopy, bpmnFactory) {\n  injector.invoke(CommandInterceptor, this);\n  function canHaveRootElementReference(element) {\n    return isAny(element, ['bpmn:ReceiveTask', 'bpmn:SendTask']) || hasAnyEventDefinition(element, ['bpmn:ErrorEventDefinition', 'bpmn:EscalationEventDefinition', 'bpmn:MessageEventDefinition', 'bpmn:SignalEventDefinition']);\n  }\n  function hasRootElement(rootElement) {\n    var definitions = bpmnjs.getDefinitions(),\n      rootElements = definitions.get('rootElements');\n    return !!find(rootElements, matchPattern({\n      id: rootElement.id\n    }));\n  }\n  function getRootElementReferencePropertyName(eventDefinition) {\n    if (is(eventDefinition, 'bpmn:ErrorEventDefinition')) {\n      return 'errorRef';\n    } else if (is(eventDefinition, 'bpmn:EscalationEventDefinition')) {\n      return 'escalationRef';\n    } else if (is(eventDefinition, 'bpmn:MessageEventDefinition')) {\n      return 'messageRef';\n    } else if (is(eventDefinition, 'bpmn:SignalEventDefinition')) {\n      return 'signalRef';\n    }\n  }\n  function getRootElement(businessObject) {\n    if (isAny(businessObject, ['bpmn:ReceiveTask', 'bpmn:SendTask'])) {\n      return businessObject.get('messageRef');\n    }\n    var eventDefinitions = businessObject.get('eventDefinitions'),\n      eventDefinition = eventDefinitions[0];\n    return eventDefinition.get(getRootElementReferencePropertyName(eventDefinition));\n  }\n  function setRootElement(businessObject, rootElement) {\n    if (isAny(businessObject, ['bpmn:ReceiveTask', 'bpmn:SendTask'])) {\n      return businessObject.set('messageRef', rootElement);\n    }\n    var eventDefinitions = businessObject.get('eventDefinitions'),\n      eventDefinition = eventDefinitions[0];\n    return eventDefinition.set(getRootElementReferencePropertyName(eventDefinition), rootElement);\n  }\n\n  // create shape\n  this.executed(['shape.create', 'element.updateProperties', 'element.updateModdleProperties'], function (context) {\n    var shape = context.shape || context.element;\n    if (!canHaveRootElementReference(shape)) {\n      return;\n    }\n    var businessObject = getBusinessObject(shape),\n      rootElement = getRootElement(businessObject),\n      rootElements;\n    if (rootElement && !hasRootElement(rootElement)) {\n      rootElements = bpmnjs.getDefinitions().get('rootElements');\n\n      // add root element\n      collectionAdd(rootElements, rootElement);\n      context.addedRootElement = rootElement;\n    }\n  }, true);\n  this.reverted(['shape.create', 'element.updateProperties', 'element.updateModdleProperties'], function (context) {\n    var addedRootElement = context.addedRootElement;\n    if (!addedRootElement) {\n      return;\n    }\n    var rootElements = bpmnjs.getDefinitions().get('rootElements');\n\n    // remove root element\n    collectionRemove(rootElements, addedRootElement);\n  }, true);\n  eventBus.on('copyPaste.copyElement', function (context) {\n    var descriptor = context.descriptor,\n      element = context.element;\n    if (element.labelTarget || !canHaveRootElementReference(element)) {\n      return;\n    }\n    var businessObject = getBusinessObject(element),\n      rootElement = getRootElement(businessObject);\n    if (rootElement) {\n      // TODO(nikku): clone on copy\n      descriptor.referencedRootElement = rootElement;\n    }\n  });\n  eventBus.on('copyPaste.pasteElement', LOW_PRIORITY, function (context) {\n    var descriptor = context.descriptor,\n      businessObject = descriptor.businessObject,\n      referencedRootElement = descriptor.referencedRootElement;\n    if (!referencedRootElement) {\n      return;\n    }\n    if (!hasRootElement(referencedRootElement)) {\n      referencedRootElement = moddleCopy.copyElement(referencedRootElement, bpmnFactory.create(referencedRootElement.$type));\n    }\n    setRootElement(businessObject, referencedRootElement);\n    delete descriptor.referencedRootElement;\n  });\n}\nRootElementReferenceBehavior.$inject = ['bpmnjs', 'eventBus', 'injector', 'moddleCopy', 'bpmnFactory'];\ninherits(RootElementReferenceBehavior, CommandInterceptor);\n\n// helpers //////////\n\nfunction hasAnyEventDefinition(element, types) {\n  if (!isArray(types)) {\n    types = [types];\n  }\n  return some(types, function (type) {\n    return hasEventDefinition(element, type);\n  });\n}","map":{"version":3,"names":["inherits","find","isArray","matchPattern","some","CommandInterceptor","add","collectionAdd","remove","collectionRemove","getBusinessObject","is","isAny","hasEventDefinition","LOW_PRIORITY","RootElementReferenceBehavior","bpmnjs","eventBus","injector","moddleCopy","bpmnFactory","invoke","canHaveRootElementReference","element","hasAnyEventDefinition","hasRootElement","rootElement","definitions","getDefinitions","rootElements","get","id","getRootElementReferencePropertyName","eventDefinition","getRootElement","businessObject","eventDefinitions","setRootElement","set","executed","context","shape","addedRootElement","reverted","on","descriptor","labelTarget","referencedRootElement","copyElement","create","$type","$inject","types","type"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/RootElementReferenceBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\r\n\r\nimport {\r\n  find,\r\n  isArray,\r\n  matchPattern,\r\n  some\r\n} from 'min-dash';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  add as collectionAdd,\r\n  remove as collectionRemove\r\n} from 'diagram-js/lib/util/Collections';\r\n\r\nimport {\r\n  getBusinessObject,\r\n  is\r\n} from '../../../util/ModelUtil';\r\n\r\nimport { isAny } from '../util/ModelingUtil';\r\n\r\nimport { hasEventDefinition } from '../../../util/DiUtil';\r\n\r\n/**\r\n * @typedef {import('../../../Modeler').default} Modeler\r\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\r\n * @typedef {import('didi').Injector} Injector\r\n * @typedef {import('../../copy-paste/ModdleCopy').default} ModdleCopy\r\n * @typedef {import('../BpmnFactory').default} BpmnFactory\r\n *\r\n * @typedef {import('../../../model/Types').Element} Element\r\n * @typedef {import('../../../model/Types').Shape} Shape\r\n *\r\n * @typedef {import('diagram-js/lib/util/Types').DirectionTRBL} DirectionTRBL\r\n */\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\n/**\r\n * Add referenced root elements (error, escalation, message, signal) if they don't exist.\r\n * Copy referenced root elements on copy & paste.\r\n *\r\n * @param {Modeler} bpmnjs\r\n * @param {EventBus} eventBus\r\n * @param {Injector} injector\r\n * @param {ModdleCopy} moddleCopy\r\n * @param {BpmnFactory} bpmnFactory\r\n */\r\nexport default function RootElementReferenceBehavior(\r\n    bpmnjs, eventBus, injector, moddleCopy, bpmnFactory\r\n) {\r\n  injector.invoke(CommandInterceptor, this);\r\n\r\n  function canHaveRootElementReference(element) {\r\n    return isAny(element, [ 'bpmn:ReceiveTask', 'bpmn:SendTask' ]) ||\r\n      hasAnyEventDefinition(element, [\r\n        'bpmn:ErrorEventDefinition',\r\n        'bpmn:EscalationEventDefinition',\r\n        'bpmn:MessageEventDefinition',\r\n        'bpmn:SignalEventDefinition'\r\n      ]);\r\n  }\r\n\r\n  function hasRootElement(rootElement) {\r\n    var definitions = bpmnjs.getDefinitions(),\r\n        rootElements = definitions.get('rootElements');\r\n\r\n    return !!find(rootElements, matchPattern({ id: rootElement.id }));\r\n  }\r\n\r\n  function getRootElementReferencePropertyName(eventDefinition) {\r\n    if (is(eventDefinition, 'bpmn:ErrorEventDefinition')) {\r\n      return 'errorRef';\r\n    } else if (is(eventDefinition, 'bpmn:EscalationEventDefinition')) {\r\n      return 'escalationRef';\r\n    } else if (is(eventDefinition, 'bpmn:MessageEventDefinition')) {\r\n      return 'messageRef';\r\n    } else if (is(eventDefinition, 'bpmn:SignalEventDefinition')) {\r\n      return 'signalRef';\r\n    }\r\n  }\r\n\r\n  function getRootElement(businessObject) {\r\n    if (isAny(businessObject, [ 'bpmn:ReceiveTask', 'bpmn:SendTask' ])) {\r\n      return businessObject.get('messageRef');\r\n    }\r\n\r\n    var eventDefinitions = businessObject.get('eventDefinitions'),\r\n        eventDefinition = eventDefinitions[ 0 ];\r\n\r\n    return eventDefinition.get(getRootElementReferencePropertyName(eventDefinition));\r\n  }\r\n\r\n  function setRootElement(businessObject, rootElement) {\r\n    if (isAny(businessObject, [ 'bpmn:ReceiveTask', 'bpmn:SendTask' ])) {\r\n      return businessObject.set('messageRef', rootElement);\r\n    }\r\n\r\n    var eventDefinitions = businessObject.get('eventDefinitions'),\r\n        eventDefinition = eventDefinitions[ 0 ];\r\n\r\n    return eventDefinition.set(getRootElementReferencePropertyName(eventDefinition), rootElement);\r\n  }\r\n\r\n  // create shape\r\n  this.executed([\r\n    'shape.create',\r\n    'element.updateProperties',\r\n    'element.updateModdleProperties'\r\n  ], function(context) {\r\n    var shape = context.shape || context.element;\r\n\r\n    if (!canHaveRootElementReference(shape)) {\r\n      return;\r\n    }\r\n\r\n    var businessObject = getBusinessObject(shape),\r\n        rootElement = getRootElement(businessObject),\r\n        rootElements;\r\n\r\n    if (rootElement && !hasRootElement(rootElement)) {\r\n      rootElements = bpmnjs.getDefinitions().get('rootElements');\r\n\r\n      // add root element\r\n      collectionAdd(rootElements, rootElement);\r\n\r\n      context.addedRootElement = rootElement;\r\n    }\r\n  }, true);\r\n\r\n  this.reverted([\r\n    'shape.create',\r\n    'element.updateProperties',\r\n    'element.updateModdleProperties'\r\n  ], function(context) {\r\n    var addedRootElement = context.addedRootElement;\r\n\r\n    if (!addedRootElement) {\r\n      return;\r\n    }\r\n\r\n    var rootElements = bpmnjs.getDefinitions().get('rootElements');\r\n\r\n    // remove root element\r\n    collectionRemove(rootElements, addedRootElement);\r\n  }, true);\r\n\r\n  eventBus.on('copyPaste.copyElement', function(context) {\r\n    var descriptor = context.descriptor,\r\n        element = context.element;\r\n\r\n    if (element.labelTarget || !canHaveRootElementReference(element)) {\r\n      return;\r\n    }\r\n\r\n    var businessObject = getBusinessObject(element),\r\n        rootElement = getRootElement(businessObject);\r\n\r\n    if (rootElement) {\r\n\r\n      // TODO(nikku): clone on copy\r\n      descriptor.referencedRootElement = rootElement;\r\n    }\r\n  });\r\n\r\n  eventBus.on('copyPaste.pasteElement', LOW_PRIORITY, function(context) {\r\n    var descriptor = context.descriptor,\r\n        businessObject = descriptor.businessObject,\r\n        referencedRootElement = descriptor.referencedRootElement;\r\n\r\n    if (!referencedRootElement) {\r\n      return;\r\n    }\r\n\r\n    if (!hasRootElement(referencedRootElement)) {\r\n      referencedRootElement = moddleCopy.copyElement(\r\n        referencedRootElement,\r\n        bpmnFactory.create(referencedRootElement.$type)\r\n      );\r\n    }\r\n\r\n    setRootElement(businessObject, referencedRootElement);\r\n\r\n    delete descriptor.referencedRootElement;\r\n  });\r\n}\r\n\r\nRootElementReferenceBehavior.$inject = [\r\n  'bpmnjs',\r\n  'eventBus',\r\n  'injector',\r\n  'moddleCopy',\r\n  'bpmnFactory'\r\n];\r\n\r\ninherits(RootElementReferenceBehavior, CommandInterceptor);\r\n\r\n// helpers //////////\r\n\r\nfunction hasAnyEventDefinition(element, types) {\r\n  if (!isArray(types)) {\r\n    types = [ types ];\r\n  }\r\n\r\n  return some(types, function(type) {\r\n    return hasEventDefinition(element, type);\r\n  });\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}