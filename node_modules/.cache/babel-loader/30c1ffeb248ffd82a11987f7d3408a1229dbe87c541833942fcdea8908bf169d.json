{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';/**\n * Theme context for managing dark/light mode with WHO colors\n */import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();/**\n * WHO Color palette\n */export const WHO_COLORS={// Primary WHO colors\nblue:'#006cbe',// WHO Blue - primary highlights and accents\nnavy:'#040B76',// WHO Navy - dark mode background\nlightBlue:'#c0dcf2',// WHO Light Blue - light mode background elements\n// Derived colors for better UX\nblueLight:'#338dd6',// Lighter shade of WHO Blue for hover states\nblueDark:'#004a99',// Darker shade of WHO Blue for pressed states\nnavyLight:'#1a2380',// Lighter navy for dark mode elements\nlightBlueLight:'#e0ebf7',// Very light blue for subtle backgrounds\nlightBlueDark:'#a0c8e8'// Darker light blue for borders/separators\n};/**\n * Theme provider component\n */export const ThemeProvider=_ref=>{let{children}=_ref;const[isDarkMode,setIsDarkMode]=useState(true);// Load theme preference from localStorage on mount\nuseEffect(()=>{const savedTheme=localStorage.getItem('sgex-theme');if(savedTheme){setIsDarkMode(savedTheme==='dark');}else{// Check if user explicitly prefers light mode\nconst prefersLight=window.matchMedia('(prefers-color-scheme: light)').matches;// Default to dark mode unless user explicitly prefers light\nsetIsDarkMode(!prefersLight);}},[]);// Update CSS custom properties when theme changes\nuseEffect(()=>{const root=document.documentElement;if(isDarkMode){// Dark mode - use WHO Navy background\nroot.style.setProperty('--who-primary-bg',WHO_COLORS.navy);root.style.setProperty('--who-secondary-bg',WHO_COLORS.navyLight);root.style.setProperty('--who-card-bg','rgba(255, 255, 255, 0.1)');root.style.setProperty('--who-text-primary','#ffffff');root.style.setProperty('--who-text-secondary','rgba(255, 255, 255, 0.8)');root.style.setProperty('--who-text-muted','rgba(255, 255, 255, 0.6)');root.style.setProperty('--who-border-color','rgba(255, 255, 255, 0.2)');root.style.setProperty('--who-hover-bg','rgba(255, 255, 255, 0.1)');root.style.setProperty('--who-selected-bg','rgba(0, 108, 190, 0.3)');}else{// Light mode - use WHO Light Blue background\nroot.style.setProperty('--who-primary-bg','#ffffff');root.style.setProperty('--who-secondary-bg',WHO_COLORS.lightBlue);root.style.setProperty('--who-card-bg','#ffffff');root.style.setProperty('--who-text-primary','#333333');root.style.setProperty('--who-text-secondary','#666666');root.style.setProperty('--who-text-muted','#999999');root.style.setProperty('--who-border-color',WHO_COLORS.lightBlueDark);root.style.setProperty('--who-hover-bg',WHO_COLORS.lightBlueLight);root.style.setProperty('--who-selected-bg','rgba(0, 108, 190, 0.1)');}// WHO Blue colors (same for both themes)\nroot.style.setProperty('--who-blue',WHO_COLORS.blue);root.style.setProperty('--who-blue-light',WHO_COLORS.blueLight);root.style.setProperty('--who-blue-dark',WHO_COLORS.blueDark);root.style.setProperty('--who-navy',WHO_COLORS.navy);root.style.setProperty('--who-light-blue',WHO_COLORS.lightBlue);root.style.setProperty('--who-light-blue-light',WHO_COLORS.lightBlueLight);root.style.setProperty('--who-light-blue-dark',WHO_COLORS.lightBlueDark);// Save theme preference\nlocalStorage.setItem('sgex-theme',isDarkMode?'dark':'light');// Update body class for theme-specific styling\ndocument.body.className=isDarkMode?'theme-dark':'theme-light';},[isDarkMode]);const toggleTheme=()=>{setIsDarkMode(!isDarkMode);};const themeValue={isDarkMode,toggleTheme,colors:WHO_COLORS};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:themeValue,children:children});};/**\n * Hook to use theme context  \n */export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export default ThemeContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","WHO_COLORS","blue","navy","lightBlue","blueLight","blueDark","navyLight","lightBlueLight","lightBlueDark","ThemeProvider","_ref","children","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","prefersLight","window","matchMedia","matches","root","document","documentElement","style","setProperty","setItem","body","className","toggleTheme","themeValue","colors","Provider","value","useTheme","context","Error"],"sources":["/home/runner/work/sgex/sgex/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n/**\n * Theme context for managing dark/light mode with WHO colors\n */\nconst ThemeContext = createContext();\n\n/**\n * WHO Color palette\n */\nexport const WHO_COLORS = {\n  // Primary WHO colors\n  blue: '#006cbe',      // WHO Blue - primary highlights and accents\n  navy: '#040B76',      // WHO Navy - dark mode background\n  lightBlue: '#c0dcf2', // WHO Light Blue - light mode background elements\n  \n  // Derived colors for better UX\n  blueLight: '#338dd6',   // Lighter shade of WHO Blue for hover states\n  blueDark: '#004a99',    // Darker shade of WHO Blue for pressed states\n  navyLight: '#1a2380',   // Lighter navy for dark mode elements\n  lightBlueLight: '#e0ebf7', // Very light blue for subtle backgrounds\n  lightBlueDark: '#a0c8e8',  // Darker light blue for borders/separators\n};\n\n/**\n * Theme provider component\n */\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(true);\n\n  // Load theme preference from localStorage on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('sgex-theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    } else {\n      // Check if user explicitly prefers light mode\n      const prefersLight = window.matchMedia('(prefers-color-scheme: light)').matches;\n      // Default to dark mode unless user explicitly prefers light\n      setIsDarkMode(!prefersLight);\n    }\n  }, []);\n\n  // Update CSS custom properties when theme changes\n  useEffect(() => {\n    const root = document.documentElement;\n    \n    if (isDarkMode) {\n      // Dark mode - use WHO Navy background\n      root.style.setProperty('--who-primary-bg', WHO_COLORS.navy);\n      root.style.setProperty('--who-secondary-bg', WHO_COLORS.navyLight);\n      root.style.setProperty('--who-card-bg', 'rgba(255, 255, 255, 0.1)');\n      root.style.setProperty('--who-text-primary', '#ffffff');\n      root.style.setProperty('--who-text-secondary', 'rgba(255, 255, 255, 0.8)');\n      root.style.setProperty('--who-text-muted', 'rgba(255, 255, 255, 0.6)');\n      root.style.setProperty('--who-border-color', 'rgba(255, 255, 255, 0.2)');\n      root.style.setProperty('--who-hover-bg', 'rgba(255, 255, 255, 0.1)');\n      root.style.setProperty('--who-selected-bg', 'rgba(0, 108, 190, 0.3)');\n    } else {\n      // Light mode - use WHO Light Blue background\n      root.style.setProperty('--who-primary-bg', '#ffffff');\n      root.style.setProperty('--who-secondary-bg', WHO_COLORS.lightBlue);\n      root.style.setProperty('--who-card-bg', '#ffffff');\n      root.style.setProperty('--who-text-primary', '#333333');\n      root.style.setProperty('--who-text-secondary', '#666666');\n      root.style.setProperty('--who-text-muted', '#999999');\n      root.style.setProperty('--who-border-color', WHO_COLORS.lightBlueDark);\n      root.style.setProperty('--who-hover-bg', WHO_COLORS.lightBlueLight);\n      root.style.setProperty('--who-selected-bg', 'rgba(0, 108, 190, 0.1)');\n    }\n\n    // WHO Blue colors (same for both themes)\n    root.style.setProperty('--who-blue', WHO_COLORS.blue);\n    root.style.setProperty('--who-blue-light', WHO_COLORS.blueLight);\n    root.style.setProperty('--who-blue-dark', WHO_COLORS.blueDark);\n    root.style.setProperty('--who-navy', WHO_COLORS.navy);\n    root.style.setProperty('--who-light-blue', WHO_COLORS.lightBlue);\n    root.style.setProperty('--who-light-blue-light', WHO_COLORS.lightBlueLight);\n    root.style.setProperty('--who-light-blue-dark', WHO_COLORS.lightBlueDark);\n\n    // Save theme preference\n    localStorage.setItem('sgex-theme', isDarkMode ? 'dark' : 'light');\n    \n    // Update body class for theme-specific styling\n    document.body.className = isDarkMode ? 'theme-dark' : 'theme-light';\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  const themeValue = {\n    isDarkMode,\n    toggleTheme,\n    colors: WHO_COLORS,\n  };\n\n  return (\n    <ThemeContext.Provider value={themeValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n/**\n * Hook to use theme context  \n */\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport default ThemeContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}