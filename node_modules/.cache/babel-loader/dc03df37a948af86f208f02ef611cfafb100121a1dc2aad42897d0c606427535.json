{"ast":null,"code":"// pkg/dist-src/index.js\nimport { request } from \"@octokit/request\";\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/with-defaults.js\nimport { request as Request2 } from \"@octokit/request\";\n\n// pkg/dist-src/graphql.js\nimport { request as Request } from \"@octokit/request\";\n\n// pkg/dist-src/error.js\nfunction _buildMessageForResponseErrors(data) {\n  return `Request failed due to following response errors:\n` + data.errors.map(e => ` - ${e.message}`).join(\"\\n\");\n}\nvar GraphqlResponseError = class extends Error {\n  constructor(request2, headers, response) {\n    super(_buildMessageForResponseErrors(response));\n    this.request = request2;\n    this.headers = headers;\n    this.response = response;\n    this.errors = response.errors;\n    this.data = response.data;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n  name = \"GraphqlResponseError\";\n  errors;\n  data;\n};\n\n// pkg/dist-src/graphql.js\nvar NON_VARIABLE_OPTIONS = [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"query\", \"mediaType\", \"operationName\"];\nvar FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nvar GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request2, query, options) {\n  if (options) {\n    if (typeof query === \"string\" && \"query\" in options) {\n      return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n    }\n    for (const key in options) {\n      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;\n      return Promise.reject(new Error(`[@octokit/graphql] \"${key}\" cannot be used as variable name`));\n    }\n  }\n  const parsedOptions = typeof query === \"string\" ? Object.assign({\n    query\n  }, options) : query;\n  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n    if (!result.variables) {\n      result.variables = {};\n    }\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {});\n  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n  return request2(requestOptions).then(response => {\n    if (response.data.errors) {\n      const headers = {};\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n      throw new GraphqlResponseError(requestOptions, headers, response.data);\n    }\n    return response.data.data;\n  });\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(request2, newDefaults) {\n  const newRequest = request2.defaults(newDefaults);\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: newRequest.endpoint\n  });\n}\n\n// pkg/dist-src/index.js\nvar graphql2 = withDefaults(request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\nexport { GraphqlResponseError, graphql2 as graphql, withCustomRequest };","map":{"version":3,"names":["request","getUserAgent","VERSION","Request2","Request","_buildMessageForResponseErrors","data","errors","map","e","message","join","GraphqlResponseError","Error","constructor","request2","headers","response","captureStackTrace","name","NON_VARIABLE_OPTIONS","FORBIDDEN_VARIABLE_OPTIONS","GHES_V3_SUFFIX_REGEX","graphql","query","options","Promise","reject","key","includes","parsedOptions","Object","assign","requestOptions","keys","reduce","result","variables","baseUrl","endpoint","DEFAULTS","test","url","replace","then","withDefaults","newDefaults","newRequest","defaults","newApi","bind","graphql2","method","withCustomRequest","customRequest"],"sources":["/home/runner/work/sgex/sgex/node_modules/@octokit/graphql/dist-bundle/index.js"],"sourcesContent":["// pkg/dist-src/index.js\nimport { request } from \"@octokit/request\";\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/with-defaults.js\nimport { request as Request2 } from \"@octokit/request\";\n\n// pkg/dist-src/graphql.js\nimport { request as Request } from \"@octokit/request\";\n\n// pkg/dist-src/error.js\nfunction _buildMessageForResponseErrors(data) {\n  return `Request failed due to following response errors:\n` + data.errors.map((e) => ` - ${e.message}`).join(\"\\n\");\n}\nvar GraphqlResponseError = class extends Error {\n  constructor(request2, headers, response) {\n    super(_buildMessageForResponseErrors(response));\n    this.request = request2;\n    this.headers = headers;\n    this.response = response;\n    this.errors = response.errors;\n    this.data = response.data;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n  name = \"GraphqlResponseError\";\n  errors;\n  data;\n};\n\n// pkg/dist-src/graphql.js\nvar NON_VARIABLE_OPTIONS = [\n  \"method\",\n  \"baseUrl\",\n  \"url\",\n  \"headers\",\n  \"request\",\n  \"query\",\n  \"mediaType\",\n  \"operationName\"\n];\nvar FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nvar GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request2, query, options) {\n  if (options) {\n    if (typeof query === \"string\" && \"query\" in options) {\n      return Promise.reject(\n        new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`)\n      );\n    }\n    for (const key in options) {\n      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;\n      return Promise.reject(\n        new Error(\n          `[@octokit/graphql] \"${key}\" cannot be used as variable name`\n        )\n      );\n    }\n  }\n  const parsedOptions = typeof query === \"string\" ? Object.assign({ query }, options) : query;\n  const requestOptions = Object.keys(\n    parsedOptions\n  ).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n    if (!result.variables) {\n      result.variables = {};\n    }\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {});\n  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n  return request2(requestOptions).then((response) => {\n    if (response.data.errors) {\n      const headers = {};\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n      throw new GraphqlResponseError(\n        requestOptions,\n        headers,\n        response.data\n      );\n    }\n    return response.data.data;\n  });\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(request2, newDefaults) {\n  const newRequest = request2.defaults(newDefaults);\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: newRequest.endpoint\n  });\n}\n\n// pkg/dist-src/index.js\nvar graphql2 = withDefaults(request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\nexport {\n  GraphqlResponseError,\n  graphql2 as graphql,\n  withCustomRequest\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}