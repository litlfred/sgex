{"ast":null,"code":"import { assign, forEach, has, isDefined, isObject, omit } from 'min-dash';\nimport inherits from 'inherits-browser';\nimport { getBusinessObject, getDi, is } from '../../util/ModelUtil';\nimport { isAny } from '../modeling/util/ModelingUtil';\nimport { isExpanded } from '../../util/DiUtil';\nimport BaseElementFactory from 'diagram-js/lib/core/ElementFactory';\nimport { DEFAULT_LABEL_SIZE } from '../../util/LabelUtil';\nimport { ensureCompatDiRef } from '../../util/CompatibilityUtil';\n\n/**\n * @typedef {import('diagram-js/lib/util/Types').Dimensions} Dimensions\n *\n * @typedef {import('./BpmnFactory').default} BpmnFactory\n *\n * @typedef {import('../../model/Types').BpmnAttributes} BpmnAttributes\n * @typedef {import('../../model/Types').Connection} Connection\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('../../model/Types').Label} Label\n * @typedef {import('../../model/Types').Root} Root\n * @typedef {import('../../model/Types').Shape} Shape\n * @typedef {import('../../model/Types').Moddle} Moddle\n * @typedef {import('../../model/Types').ModdleElement} ModdleElement\n */\n\n/**\n * A BPMN-specific element factory.\n *\n * @template {Connection} [T=Connection]\n * @template {Label} [U=Label]\n * @template {Root} [V=Root]\n * @template {Shape} [W=Shape]\n *\n * @extends {BaseElementFactory<T, U, V, W>}\n *\n * @param {BpmnFactory} bpmnFactory\n * @param {Moddle} moddle\n */\nexport default function ElementFactory(bpmnFactory, moddle) {\n  BaseElementFactory.call(this);\n  this._bpmnFactory = bpmnFactory;\n  this._moddle = moddle;\n}\ninherits(ElementFactory, BaseElementFactory);\nElementFactory.$inject = ['bpmnFactory', 'moddle'];\nElementFactory.prototype._baseCreate = BaseElementFactory.prototype.create;\n\n/**\n * Create a root element.\n *\n * @overlord\n * @param {'root'} elementType\n * @param {Partial<Root> & Partial<BpmnAttributes>} [attrs]\n * @return {V}\n */\n\n/**\n * Create a shape.\n *\n * @overlord\n * @param {'shape'} elementType\n * @param {Partial<Shape> & Partial<BpmnAttributes>} [attrs]\n * @return {W}\n */\n\n/**\n * Create a connection.\n *\n * @overlord\n * @param {'connection'} elementType\n * @param {Partial<Connection> & Partial<BpmnAttributes>} [attrs]\n * @return {T}\n */\n\n/**\n * Create a label.\n *\n * @param {'label'} elementType\n * @param {Partial<Label> & Partial<BpmnAttributes>} [attrs]\n * @return {U}\n */\nElementFactory.prototype.create = function (elementType, attrs) {\n  // no special magic for labels,\n  // we assume their businessObjects have already been created\n  // and wired via attrs\n  if (elementType === 'label') {\n    var di = attrs.di || this._bpmnFactory.createDiLabel();\n    return this._baseCreate(elementType, assign({\n      type: 'label',\n      di: di\n    }, DEFAULT_LABEL_SIZE, attrs));\n  }\n  return this.createElement(elementType, attrs);\n};\n\n/**\n * Create a BPMN root element.\n *\n * @overlord\n * @param {'root'} elementType\n * @param {Partial<Root> & Partial<BpmnAttributes>} [attrs]\n * @return {V}\n */\n\n/**\n * Create a BPMN shape.\n *\n * @overlord\n * @param {'shape'} elementType\n * @param {Partial<Shape> & Partial<BpmnAttributes>} [attrs]\n * @return {W}\n */\n\n/**\n * Create a BPMN connection.\n *\n * @param {'connection'} elementType\n * @param {Partial<Connection> & Partial<BpmnAttributes>} [attrs]\n * @return {T}\n */\nElementFactory.prototype.createElement = function (elementType, attrs) {\n  attrs = assign({}, attrs || {});\n  var size;\n  var businessObject = attrs.businessObject,\n    di = attrs.di;\n  if (!businessObject) {\n    if (!attrs.type) {\n      throw new Error('no shape type specified');\n    }\n    businessObject = this._bpmnFactory.create(attrs.type);\n    ensureCompatDiRef(businessObject);\n  }\n  if (!isModdleDi(di)) {\n    var diAttrs = assign({}, di || {}, {\n      id: businessObject.id + '_di'\n    });\n    if (elementType === 'root') {\n      di = this._bpmnFactory.createDiPlane(businessObject, diAttrs);\n    } else if (elementType === 'connection') {\n      di = this._bpmnFactory.createDiEdge(businessObject, diAttrs);\n    } else {\n      di = this._bpmnFactory.createDiShape(businessObject, diAttrs);\n    }\n  }\n  if (is(businessObject, 'bpmn:Group')) {\n    attrs = assign({\n      isFrame: true\n    }, attrs);\n  }\n  attrs = applyAttributes(businessObject, attrs, ['processRef', 'isInterrupting', 'associationDirection', 'isForCompensation']);\n  if (attrs.isExpanded) {\n    attrs = applyAttribute(di, attrs, 'isExpanded');\n  }\n  if (isAny(businessObject, ['bpmn:Lane', 'bpmn:Participant'])) {\n    attrs = applyAttribute(di, attrs, 'isHorizontal');\n  }\n  if (is(businessObject, 'bpmn:SubProcess')) {\n    attrs.collapsed = !isExpanded(businessObject, di);\n  }\n  if (is(businessObject, 'bpmn:ExclusiveGateway')) {\n    if (has(di, 'isMarkerVisible')) {\n      if (di.isMarkerVisible === undefined) {\n        di.isMarkerVisible = false;\n      }\n    } else {\n      di.isMarkerVisible = true;\n    }\n  }\n  if (isDefined(attrs.triggeredByEvent)) {\n    businessObject.triggeredByEvent = attrs.triggeredByEvent;\n    delete attrs.triggeredByEvent;\n  }\n  if (isDefined(attrs.cancelActivity)) {\n    businessObject.cancelActivity = attrs.cancelActivity;\n    delete attrs.cancelActivity;\n  }\n  var eventDefinitions, newEventDefinition;\n  if (attrs.eventDefinitionType) {\n    eventDefinitions = businessObject.get('eventDefinitions') || [];\n    newEventDefinition = this._bpmnFactory.create(attrs.eventDefinitionType, attrs.eventDefinitionAttrs);\n    if (attrs.eventDefinitionType === 'bpmn:ConditionalEventDefinition') {\n      newEventDefinition.condition = this._bpmnFactory.create('bpmn:FormalExpression');\n    }\n    eventDefinitions.push(newEventDefinition);\n    newEventDefinition.$parent = businessObject;\n    businessObject.eventDefinitions = eventDefinitions;\n    delete attrs.eventDefinitionType;\n  }\n  size = this.getDefaultSize(businessObject, di);\n  attrs = assign({\n    id: businessObject.id\n  }, size, attrs, {\n    businessObject: businessObject,\n    di: di\n  });\n  return this._baseCreate(elementType, attrs);\n};\n\n/**\n * Get the default size of a diagram element.\n *\n * @param {Element} element The element.\n * @param {ModdleElement} di The DI.\n *\n * @return {Dimensions} Default width and height of the element.\n */\nElementFactory.prototype.getDefaultSize = function (element, di) {\n  var bo = getBusinessObject(element);\n  di = di || getDi(element);\n  if (is(bo, 'bpmn:SubProcess')) {\n    if (isExpanded(bo, di)) {\n      return {\n        width: 350,\n        height: 200\n      };\n    } else {\n      return {\n        width: 100,\n        height: 80\n      };\n    }\n  }\n  if (is(bo, 'bpmn:Task')) {\n    return {\n      width: 100,\n      height: 80\n    };\n  }\n  if (is(bo, 'bpmn:Gateway')) {\n    return {\n      width: 50,\n      height: 50\n    };\n  }\n  if (is(bo, 'bpmn:Event')) {\n    return {\n      width: 36,\n      height: 36\n    };\n  }\n  if (is(bo, 'bpmn:Participant')) {\n    var isHorizontalPool = di.isHorizontal === undefined || di.isHorizontal === true;\n    if (isExpanded(bo, di)) {\n      if (isHorizontalPool) {\n        return {\n          width: 600,\n          height: 250\n        };\n      }\n      return {\n        width: 250,\n        height: 600\n      };\n    } else {\n      if (isHorizontalPool) {\n        return {\n          width: 400,\n          height: 60\n        };\n      }\n      return {\n        width: 60,\n        height: 400\n      };\n    }\n  }\n  if (is(bo, 'bpmn:Lane')) {\n    return {\n      width: 400,\n      height: 100\n    };\n  }\n  if (is(bo, 'bpmn:DataObjectReference')) {\n    return {\n      width: 36,\n      height: 50\n    };\n  }\n  if (is(bo, 'bpmn:DataStoreReference')) {\n    return {\n      width: 50,\n      height: 50\n    };\n  }\n  if (is(bo, 'bpmn:TextAnnotation')) {\n    return {\n      width: 100,\n      height: 30\n    };\n  }\n  if (is(bo, 'bpmn:Group')) {\n    return {\n      width: 300,\n      height: 300\n    };\n  }\n  return {\n    width: 100,\n    height: 80\n  };\n};\n\n/**\n * Create participant.\n *\n * @param {boolean|Partial<Shape> & Partial<BpmnAttributes>} [attrs]\n * Attributes or whether the participant is expanded.\n *\n * @return {W} The created participant.\n */\nElementFactory.prototype.createParticipantShape = function (attrs) {\n  if (!isObject(attrs)) {\n    attrs = {\n      isExpanded: attrs\n    };\n  }\n  attrs = assign({\n    type: 'bpmn:Participant'\n  }, attrs || {});\n\n  // participants are expanded by default\n  if (attrs.isExpanded !== false) {\n    attrs.processRef = this._bpmnFactory.create('bpmn:Process');\n  }\n  return this.createShape(attrs);\n};\n\n// helpers //////////////////////\n\n/**\n * Apply attributes from a map to the given element, remove attribute from the\n * map on application.\n *\n * @param {Element} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {string[]} attributeNames name of attributes to apply\n *\n * @return {Object} changed attrs\n */\nfunction applyAttributes(element, attrs, attributeNames) {\n  forEach(attributeNames, function (property) {\n    attrs = applyAttribute(element, attrs, property);\n  });\n  return attrs;\n}\n\n/**\n * Apply named property to element and drain it from the attrs collection.\n *\n * @param {Element} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {string} attributeName to apply\n *\n * @return {Object} changed attrs\n */\nfunction applyAttribute(element, attrs, attributeName) {\n  if (attrs[attributeName] === undefined) {\n    return attrs;\n  }\n  element[attributeName] = attrs[attributeName];\n  return omit(attrs, [attributeName]);\n}\n\n/**\n * @param {Element} element\n *\n * @return {boolean}\n */\nfunction isModdleDi(element) {\n  return isAny(element, ['bpmndi:BPMNShape', 'bpmndi:BPMNEdge', 'bpmndi:BPMNDiagram', 'bpmndi:BPMNPlane']);\n}","map":{"version":3,"names":["assign","forEach","has","isDefined","isObject","omit","inherits","getBusinessObject","getDi","is","isAny","isExpanded","BaseElementFactory","DEFAULT_LABEL_SIZE","ensureCompatDiRef","ElementFactory","bpmnFactory","moddle","call","_bpmnFactory","_moddle","$inject","prototype","_baseCreate","create","elementType","attrs","di","createDiLabel","type","createElement","size","businessObject","Error","isModdleDi","diAttrs","id","createDiPlane","createDiEdge","createDiShape","isFrame","applyAttributes","applyAttribute","collapsed","isMarkerVisible","undefined","triggeredByEvent","cancelActivity","eventDefinitions","newEventDefinition","eventDefinitionType","get","eventDefinitionAttrs","condition","push","$parent","getDefaultSize","element","bo","width","height","isHorizontalPool","isHorizontal","createParticipantShape","processRef","createShape","attributeNames","property","attributeName"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/ElementFactory.js"],"sourcesContent":["import {\n  assign,\n  forEach,\n  has,\n  isDefined,\n  isObject,\n  omit\n} from 'min-dash';\n\nimport inherits from 'inherits-browser';\n\nimport {\n  getBusinessObject,\n  getDi,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  isExpanded\n} from '../../util/DiUtil';\n\nimport BaseElementFactory from 'diagram-js/lib/core/ElementFactory';\n\nimport {\n  DEFAULT_LABEL_SIZE\n} from '../../util/LabelUtil';\n\nimport {\n  ensureCompatDiRef\n} from '../../util/CompatibilityUtil';\n\n/**\n * @typedef {import('diagram-js/lib/util/Types').Dimensions} Dimensions\n *\n * @typedef {import('./BpmnFactory').default} BpmnFactory\n *\n * @typedef {import('../../model/Types').BpmnAttributes} BpmnAttributes\n * @typedef {import('../../model/Types').Connection} Connection\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('../../model/Types').Label} Label\n * @typedef {import('../../model/Types').Root} Root\n * @typedef {import('../../model/Types').Shape} Shape\n * @typedef {import('../../model/Types').Moddle} Moddle\n * @typedef {import('../../model/Types').ModdleElement} ModdleElement\n */\n\n/**\n * A BPMN-specific element factory.\n *\n * @template {Connection} [T=Connection]\n * @template {Label} [U=Label]\n * @template {Root} [V=Root]\n * @template {Shape} [W=Shape]\n *\n * @extends {BaseElementFactory<T, U, V, W>}\n *\n * @param {BpmnFactory} bpmnFactory\n * @param {Moddle} moddle\n */\nexport default function ElementFactory(bpmnFactory, moddle) {\n  BaseElementFactory.call(this);\n\n  this._bpmnFactory = bpmnFactory;\n  this._moddle = moddle;\n}\n\ninherits(ElementFactory, BaseElementFactory);\n\nElementFactory.$inject = [\n  'bpmnFactory',\n  'moddle'\n];\n\nElementFactory.prototype._baseCreate = BaseElementFactory.prototype.create;\n\n/**\n * Create a root element.\n *\n * @overlord\n * @param {'root'} elementType\n * @param {Partial<Root> & Partial<BpmnAttributes>} [attrs]\n * @return {V}\n */\n\n/**\n * Create a shape.\n *\n * @overlord\n * @param {'shape'} elementType\n * @param {Partial<Shape> & Partial<BpmnAttributes>} [attrs]\n * @return {W}\n */\n\n/**\n * Create a connection.\n *\n * @overlord\n * @param {'connection'} elementType\n * @param {Partial<Connection> & Partial<BpmnAttributes>} [attrs]\n * @return {T}\n */\n\n/**\n * Create a label.\n *\n * @param {'label'} elementType\n * @param {Partial<Label> & Partial<BpmnAttributes>} [attrs]\n * @return {U}\n */\nElementFactory.prototype.create = function(elementType, attrs) {\n\n  // no special magic for labels,\n  // we assume their businessObjects have already been created\n  // and wired via attrs\n  if (elementType === 'label') {\n    var di = attrs.di || this._bpmnFactory.createDiLabel();\n    return this._baseCreate(elementType, assign({ type: 'label', di: di }, DEFAULT_LABEL_SIZE, attrs));\n  }\n\n  return this.createElement(elementType, attrs);\n};\n\n/**\n * Create a BPMN root element.\n *\n * @overlord\n * @param {'root'} elementType\n * @param {Partial<Root> & Partial<BpmnAttributes>} [attrs]\n * @return {V}\n */\n\n/**\n * Create a BPMN shape.\n *\n * @overlord\n * @param {'shape'} elementType\n * @param {Partial<Shape> & Partial<BpmnAttributes>} [attrs]\n * @return {W}\n */\n\n/**\n * Create a BPMN connection.\n *\n * @param {'connection'} elementType\n * @param {Partial<Connection> & Partial<BpmnAttributes>} [attrs]\n * @return {T}\n */\nElementFactory.prototype.createElement = function(elementType, attrs) {\n\n  attrs = assign({}, attrs || {});\n\n  var size;\n\n  var businessObject = attrs.businessObject,\n      di = attrs.di;\n\n  if (!businessObject) {\n    if (!attrs.type) {\n      throw new Error('no shape type specified');\n    }\n\n    businessObject = this._bpmnFactory.create(attrs.type);\n\n    ensureCompatDiRef(businessObject);\n  }\n\n  if (!isModdleDi(di)) {\n    var diAttrs = assign(\n      {},\n      di || {},\n      { id: businessObject.id + '_di' }\n    );\n\n    if (elementType === 'root') {\n      di = this._bpmnFactory.createDiPlane(businessObject, diAttrs);\n    } else if (elementType === 'connection') {\n      di = this._bpmnFactory.createDiEdge(businessObject, diAttrs);\n    } else {\n      di = this._bpmnFactory.createDiShape(businessObject, diAttrs);\n    }\n  }\n\n  if (is(businessObject, 'bpmn:Group')) {\n    attrs = assign({\n      isFrame: true\n    }, attrs);\n  }\n\n  attrs = applyAttributes(businessObject, attrs, [\n    'processRef',\n    'isInterrupting',\n    'associationDirection',\n    'isForCompensation'\n  ]);\n\n  if (attrs.isExpanded) {\n    attrs = applyAttribute(di, attrs, 'isExpanded');\n  }\n\n  if (isAny(businessObject, [ 'bpmn:Lane', 'bpmn:Participant' ])) {\n    attrs = applyAttribute(di, attrs, 'isHorizontal');\n  }\n\n  if (is(businessObject, 'bpmn:SubProcess')) {\n    attrs.collapsed = !isExpanded(businessObject, di);\n  }\n\n  if (is(businessObject, 'bpmn:ExclusiveGateway')) {\n    if (has(di, 'isMarkerVisible')) {\n      if (di.isMarkerVisible === undefined) {\n        di.isMarkerVisible = false;\n      }\n    } else {\n      di.isMarkerVisible = true;\n    }\n  }\n\n  if (isDefined(attrs.triggeredByEvent)) {\n    businessObject.triggeredByEvent = attrs.triggeredByEvent;\n    delete attrs.triggeredByEvent;\n  }\n\n  if (isDefined(attrs.cancelActivity)) {\n    businessObject.cancelActivity = attrs.cancelActivity;\n    delete attrs.cancelActivity;\n  }\n\n  var eventDefinitions,\n      newEventDefinition;\n\n  if (attrs.eventDefinitionType) {\n    eventDefinitions = businessObject.get('eventDefinitions') || [];\n    newEventDefinition = this._bpmnFactory.create(attrs.eventDefinitionType, attrs.eventDefinitionAttrs);\n\n    if (attrs.eventDefinitionType === 'bpmn:ConditionalEventDefinition') {\n      newEventDefinition.condition = this._bpmnFactory.create('bpmn:FormalExpression');\n    }\n\n    eventDefinitions.push(newEventDefinition);\n\n    newEventDefinition.$parent = businessObject;\n    businessObject.eventDefinitions = eventDefinitions;\n\n    delete attrs.eventDefinitionType;\n  }\n\n  size = this.getDefaultSize(businessObject, di);\n\n  attrs = assign({\n    id: businessObject.id\n  }, size, attrs, {\n    businessObject: businessObject,\n    di: di\n  });\n\n  return this._baseCreate(elementType, attrs);\n};\n\n/**\n * Get the default size of a diagram element.\n *\n * @param {Element} element The element.\n * @param {ModdleElement} di The DI.\n *\n * @return {Dimensions} Default width and height of the element.\n */\nElementFactory.prototype.getDefaultSize = function(element, di) {\n\n  var bo = getBusinessObject(element);\n  di = di || getDi(element);\n\n  if (is(bo, 'bpmn:SubProcess')) {\n    if (isExpanded(bo, di)) {\n      return { width: 350, height: 200 };\n    } else {\n      return { width: 100, height: 80 };\n    }\n  }\n\n  if (is(bo, 'bpmn:Task')) {\n    return { width: 100, height: 80 };\n  }\n\n  if (is(bo, 'bpmn:Gateway')) {\n    return { width: 50, height: 50 };\n  }\n\n  if (is(bo, 'bpmn:Event')) {\n    return { width: 36, height: 36 };\n  }\n\n  if (is(bo, 'bpmn:Participant')) {\n    var isHorizontalPool = di.isHorizontal === undefined || di.isHorizontal === true;\n    if (isExpanded(bo, di)) {\n      if (isHorizontalPool) {\n        return { width: 600, height: 250 };\n      }\n      return { width: 250, height: 600 };\n    } else {\n      if (isHorizontalPool) {\n        return { width: 400, height: 60 };\n      }\n      return { width: 60, height: 400 };\n    }\n  }\n\n  if (is(bo, 'bpmn:Lane')) {\n    return { width: 400, height: 100 };\n  }\n\n  if (is(bo, 'bpmn:DataObjectReference')) {\n    return { width: 36, height: 50 };\n  }\n\n  if (is(bo, 'bpmn:DataStoreReference')) {\n    return { width: 50, height: 50 };\n  }\n\n  if (is(bo, 'bpmn:TextAnnotation')) {\n    return { width: 100, height: 30 };\n  }\n\n  if (is(bo, 'bpmn:Group')) {\n    return { width: 300, height: 300 };\n  }\n\n  return { width: 100, height: 80 };\n};\n\n\n/**\n * Create participant.\n *\n * @param {boolean|Partial<Shape> & Partial<BpmnAttributes>} [attrs]\n * Attributes or whether the participant is expanded.\n *\n * @return {W} The created participant.\n */\nElementFactory.prototype.createParticipantShape = function(attrs) {\n\n  if (!isObject(attrs)) {\n    attrs = { isExpanded: attrs };\n  }\n\n  attrs = assign({ type: 'bpmn:Participant' }, attrs || {});\n\n  // participants are expanded by default\n  if (attrs.isExpanded !== false) {\n    attrs.processRef = this._bpmnFactory.create('bpmn:Process');\n  }\n\n  return this.createShape(attrs);\n};\n\n\n// helpers //////////////////////\n\n/**\n * Apply attributes from a map to the given element, remove attribute from the\n * map on application.\n *\n * @param {Element} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {string[]} attributeNames name of attributes to apply\n *\n * @return {Object} changed attrs\n */\nfunction applyAttributes(element, attrs, attributeNames) {\n\n  forEach(attributeNames, function(property) {\n    attrs = applyAttribute(element, attrs, property);\n  });\n\n  return attrs;\n}\n\n/**\n * Apply named property to element and drain it from the attrs collection.\n *\n * @param {Element} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {string} attributeName to apply\n *\n * @return {Object} changed attrs\n */\nfunction applyAttribute(element, attrs, attributeName) {\n  if (attrs[attributeName] === undefined) {\n    return attrs;\n  }\n\n  element[attributeName] = attrs[attributeName];\n\n  return omit(attrs, [ attributeName ]);\n}\n\n/**\n * @param {Element} element\n *\n * @return {boolean}\n */\nfunction isModdleDi(element) {\n  return isAny(element, [\n    'bpmndi:BPMNShape',\n    'bpmndi:BPMNEdge',\n    'bpmndi:BPMNDiagram',\n    'bpmndi:BPMNPlane',\n  ]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}