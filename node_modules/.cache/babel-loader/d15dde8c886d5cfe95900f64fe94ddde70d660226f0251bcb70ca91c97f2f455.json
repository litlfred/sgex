{"ast":null,"code":"import AutoResize from 'diagram-js/lib/features/auto-resize/AutoResize';\nimport inherits from 'inherits-browser';\nimport { is } from '../../util/ModelUtil';\n\n/**\n * @typedef {import('didi').Injector} Injector\n *\n * @typedef {import('../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').Rect} Rect\n */\n\n/**\n * BPMN-specific resize behavior.\n *\n * @param {Injector} injector\n */\nexport default function BpmnAutoResize(injector) {\n  injector.invoke(AutoResize, this);\n}\nBpmnAutoResize.$inject = ['injector'];\ninherits(BpmnAutoResize, AutoResize);\n\n/**\n * Perform BPMN-specific resizing of participants.\n *\n * @param {Shape} target\n * @param {Rect} newBounds\n * @param {Object} [hints]\n * @param {string} [hints.autoResize]\n */\nBpmnAutoResize.prototype.resize = function (target, newBounds, hints) {\n  if (is(target, 'bpmn:Participant')) {\n    this._modeling.resizeLane(target, newBounds, null, hints);\n  } else {\n    this._modeling.resizeShape(target, newBounds, null, hints);\n  }\n};","map":{"version":3,"names":["AutoResize","inherits","is","BpmnAutoResize","injector","invoke","$inject","prototype","resize","target","newBounds","hints","_modeling","resizeLane","resizeShape"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/auto-resize/BpmnAutoResize.js"],"sourcesContent":["import AutoResize from 'diagram-js/lib/features/auto-resize/AutoResize';\n\nimport inherits from 'inherits-browser';\n\nimport { is } from '../../util/ModelUtil';\n\n/**\n * @typedef {import('didi').Injector} Injector\n *\n * @typedef {import('../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').Rect} Rect\n */\n\n/**\n * BPMN-specific resize behavior.\n *\n * @param {Injector} injector\n */\nexport default function BpmnAutoResize(injector) {\n\n  injector.invoke(AutoResize, this);\n}\n\nBpmnAutoResize.$inject = [\n  'injector'\n];\n\ninherits(BpmnAutoResize, AutoResize);\n\n/**\n * Perform BPMN-specific resizing of participants.\n *\n * @param {Shape} target\n * @param {Rect} newBounds\n * @param {Object} [hints]\n * @param {string} [hints.autoResize]\n */\nBpmnAutoResize.prototype.resize = function(target, newBounds, hints) {\n\n  if (is(target, 'bpmn:Participant')) {\n    this._modeling.resizeLane(target, newBounds, null, hints);\n  } else {\n    this._modeling.resizeShape(target, newBounds, null, hints);\n  }\n};"],"mappings":"AAAA,OAAOA,UAAU,MAAM,gDAAgD;AAEvE,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,SAASC,EAAE,QAAQ,sBAAsB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,cAAcA,CAACC,QAAQ,EAAE;EAE/CA,QAAQ,CAACC,MAAM,CAACL,UAAU,EAAE,IAAI,CAAC;AACnC;AAEAG,cAAc,CAACG,OAAO,GAAG,CACvB,UAAU,CACX;AAEDL,QAAQ,CAACE,cAAc,EAAEH,UAAU,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAG,cAAc,CAACI,SAAS,CAACC,MAAM,GAAG,UAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAE;EAEnE,IAAIT,EAAE,CAACO,MAAM,EAAE,kBAAkB,CAAC,EAAE;IAClC,IAAI,CAACG,SAAS,CAACC,UAAU,CAACJ,MAAM,EAAEC,SAAS,EAAE,IAAI,EAAEC,KAAK,CAAC;EAC3D,CAAC,MAAM;IACL,IAAI,CAACC,SAAS,CAACE,WAAW,CAACL,MAAM,EAAEC,SAAS,EAAE,IAAI,EAAEC,KAAK,CAAC;EAC5D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}