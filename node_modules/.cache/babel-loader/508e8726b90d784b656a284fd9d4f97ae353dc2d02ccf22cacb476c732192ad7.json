{"ast":null,"code":"import { getAnchorPointAdjustment } from './LayoutUtil';\n\n/**\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n *\n * @typedef {import('./LayoutUtil').FindNewLineStartIndexHints} FindNewLineStartIndexHints\n */\n\n/**\n * Calculate the new point after the connection waypoints got updated.\n *\n * @param {Point} position\n * @param {Point[]} newWaypoints\n * @param {Point[]} oldWaypoints\n * @param {FindNewLineStartIndexHints} hints\n *\n * @return {Point}\n */\nexport function getConnectionAdjustment(position, newWaypoints, oldWaypoints, hints) {\n  return getAnchorPointAdjustment(position, newWaypoints, oldWaypoints, hints).point;\n}","map":{"version":3,"names":["getAnchorPointAdjustment","getConnectionAdjustment","position","newWaypoints","oldWaypoints","hints","point"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/util/ConnectionLayoutUtil.js"],"sourcesContent":["import { getAnchorPointAdjustment } from './LayoutUtil';\n\n/**\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n *\n * @typedef {import('./LayoutUtil').FindNewLineStartIndexHints} FindNewLineStartIndexHints\n */\n\n/**\n * Calculate the new point after the connection waypoints got updated.\n *\n * @param {Point} position\n * @param {Point[]} newWaypoints\n * @param {Point[]} oldWaypoints\n * @param {FindNewLineStartIndexHints} hints\n *\n * @return {Point}\n */\nexport function getConnectionAdjustment(position, newWaypoints, oldWaypoints, hints) {\n  return getAnchorPointAdjustment(position, newWaypoints, oldWaypoints, hints).point;\n}\n\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,cAAc;;AAEvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,uBAAuBA,CAACC,QAAQ,EAAEC,YAAY,EAAEC,YAAY,EAAEC,KAAK,EAAE;EACnF,OAAOL,wBAAwB,CAACE,QAAQ,EAAEC,YAAY,EAAEC,YAAY,EAAEC,KAAK,CAAC,CAACC,KAAK;AACpF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}