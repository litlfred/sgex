{"ast":null,"code":"import { getMid } from '../../layout/LayoutUtil';\nimport { isNil, isObject } from 'min-dash';\n\n/**\n * @typedef {import('../../model/Types').Element} Element\n *\n * @typedef {import('../../util/Types').Point} Point\n *\n * @typedef {import('../dragging/Dragging').default} Dragging\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('../modeling/Modeling').default} Modeling\n * @typedef {import('../rules/Rules').default} Rules\n */\n\n/**\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {Modeling} modeling\n * @param {Rules} rules\n */\nexport default function Connect(eventBus, dragging, modeling, rules) {\n  // rules\n\n  function canConnect(source, target) {\n    return rules.allowed('connection.create', {\n      source: source,\n      target: target\n    });\n  }\n  function canConnectReverse(source, target) {\n    return canConnect(target, source);\n  }\n\n  // event handlers\n\n  eventBus.on('connect.hover', function (event) {\n    var context = event.context,\n      start = context.start,\n      hover = event.hover,\n      canExecute;\n\n    // cache hover state\n    context.hover = hover;\n    canExecute = context.canExecute = canConnect(start, hover);\n\n    // ignore hover\n    if (isNil(canExecute)) {\n      return;\n    }\n    if (canExecute !== false) {\n      context.source = start;\n      context.target = hover;\n      return;\n    }\n    canExecute = context.canExecute = canConnectReverse(start, hover);\n\n    // ignore hover\n    if (isNil(canExecute)) {\n      return;\n    }\n    if (canExecute !== false) {\n      context.source = hover;\n      context.target = start;\n    }\n  });\n  eventBus.on(['connect.out', 'connect.cleanup'], function (event) {\n    var context = event.context;\n    context.hover = null;\n    context.source = null;\n    context.target = null;\n    context.canExecute = false;\n  });\n  eventBus.on('connect.end', function (event) {\n    var context = event.context,\n      canExecute = context.canExecute,\n      connectionStart = context.connectionStart,\n      connectionEnd = {\n        x: event.x,\n        y: event.y\n      },\n      source = context.source,\n      target = context.target;\n    if (!canExecute) {\n      return false;\n    }\n    var attrs = null,\n      hints = {\n        connectionStart: isReverse(context) ? connectionEnd : connectionStart,\n        connectionEnd: isReverse(context) ? connectionStart : connectionEnd\n      };\n    if (isObject(canExecute)) {\n      attrs = canExecute;\n    }\n    context.connection = modeling.connect(source, target, attrs, hints);\n  });\n\n  // API\n\n  /**\n   * Start connect operation.\n   *\n   * @param {MouseEvent|TouchEvent} event\n   * @param {Element} start\n   * @param {Point} [connectionStart]\n   * @param {boolean} [autoActivate=false]\n   */\n  this.start = function (event, start, connectionStart, autoActivate) {\n    if (!isObject(connectionStart)) {\n      autoActivate = connectionStart;\n      connectionStart = getMid(start);\n    }\n    dragging.init(event, 'connect', {\n      autoActivate: autoActivate,\n      data: {\n        shape: start,\n        context: {\n          start: start,\n          connectionStart: connectionStart\n        }\n      }\n    });\n  };\n}\nConnect.$inject = ['eventBus', 'dragging', 'modeling', 'rules'];\n\n// helpers //////////\n\nexport function isReverse(context) {\n  var hover = context.hover,\n    source = context.source,\n    target = context.target;\n  return hover && source && hover === source && source !== target;\n}","map":{"version":3,"names":["getMid","isNil","isObject","Connect","eventBus","dragging","modeling","rules","canConnect","source","target","allowed","canConnectReverse","on","event","context","start","hover","canExecute","connectionStart","connectionEnd","x","y","attrs","hints","isReverse","connection","connect","autoActivate","init","data","shape","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/connect/Connect.js"],"sourcesContent":["import {\n  getMid\n} from '../../layout/LayoutUtil';\n\nimport {\n  isNil,\n  isObject\n} from 'min-dash';\n\n/**\n * @typedef {import('../../model/Types').Element} Element\n *\n * @typedef {import('../../util/Types').Point} Point\n *\n * @typedef {import('../dragging/Dragging').default} Dragging\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('../modeling/Modeling').default} Modeling\n * @typedef {import('../rules/Rules').default} Rules\n */\n\n/**\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {Modeling} modeling\n * @param {Rules} rules\n */\nexport default function Connect(eventBus, dragging, modeling, rules) {\n\n  // rules\n\n  function canConnect(source, target) {\n    return rules.allowed('connection.create', {\n      source: source,\n      target: target\n    });\n  }\n\n  function canConnectReverse(source, target) {\n    return canConnect(target, source);\n  }\n\n\n  // event handlers\n\n  eventBus.on('connect.hover', function(event) {\n    var context = event.context,\n        start = context.start,\n        hover = event.hover,\n        canExecute;\n\n    // cache hover state\n    context.hover = hover;\n\n    canExecute = context.canExecute = canConnect(start, hover);\n\n    // ignore hover\n    if (isNil(canExecute)) {\n      return;\n    }\n\n    if (canExecute !== false) {\n      context.source = start;\n      context.target = hover;\n\n      return;\n    }\n\n    canExecute = context.canExecute = canConnectReverse(start, hover);\n\n    // ignore hover\n    if (isNil(canExecute)) {\n      return;\n    }\n\n    if (canExecute !== false) {\n      context.source = hover;\n      context.target = start;\n    }\n  });\n\n  eventBus.on([ 'connect.out', 'connect.cleanup' ], function(event) {\n    var context = event.context;\n\n    context.hover = null;\n    context.source = null;\n    context.target = null;\n\n    context.canExecute = false;\n  });\n\n  eventBus.on('connect.end', function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        connectionStart = context.connectionStart,\n        connectionEnd = {\n          x: event.x,\n          y: event.y\n        },\n        source = context.source,\n        target = context.target;\n\n    if (!canExecute) {\n      return false;\n    }\n\n    var attrs = null,\n        hints = {\n          connectionStart: isReverse(context) ? connectionEnd : connectionStart,\n          connectionEnd: isReverse(context) ? connectionStart : connectionEnd\n        };\n\n    if (isObject(canExecute)) {\n      attrs = canExecute;\n    }\n\n    context.connection = modeling.connect(source, target, attrs, hints);\n  });\n\n\n  // API\n\n  /**\n   * Start connect operation.\n   *\n   * @param {MouseEvent|TouchEvent} event\n   * @param {Element} start\n   * @param {Point} [connectionStart]\n   * @param {boolean} [autoActivate=false]\n   */\n  this.start = function(event, start, connectionStart, autoActivate) {\n    if (!isObject(connectionStart)) {\n      autoActivate = connectionStart;\n      connectionStart = getMid(start);\n    }\n\n    dragging.init(event, 'connect', {\n      autoActivate: autoActivate,\n      data: {\n        shape: start,\n        context: {\n          start: start,\n          connectionStart: connectionStart\n        }\n      }\n    });\n  };\n}\n\nConnect.$inject = [\n  'eventBus',\n  'dragging',\n  'modeling',\n  'rules'\n];\n\n\n// helpers //////////\n\nexport function isReverse(context) {\n  var hover = context.hover,\n      source = context.source,\n      target = context.target;\n\n  return hover && source && hover === source && source !== target;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}