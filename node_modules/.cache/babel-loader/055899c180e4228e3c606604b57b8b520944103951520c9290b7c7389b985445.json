{"ast":null,"code":"import React,{useState,useEffect}from'react';import{PageLayout,useDAKParams}from'./framework';import githubService from'../services/githubService';import branchContextService from'../services/branchContextService';import DAKStatusBox from'./DAKStatusBox';import Publications from'./Publications';import'./DAKDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DAKDashboardWithFramework=()=>{return/*#__PURE__*/_jsx(PageLayout,{pageName:\"dashboard\",children:/*#__PURE__*/_jsx(DAKDashboardContent,{})});};const DAKDashboardContent=()=>{const{profile,repository,branch,navigate}=useDAKParams();const[hasWriteAccess,setHasWriteAccess]=useState(false);const[showPermissionDialog,setShowPermissionDialog]=useState(false);const[activeTab,setActiveTab]=useState('core');// 'core', 'additional', or 'publications'\nconst[issueCounts,setIssueCounts]=useState({});// Check write permissions\nuseEffect(()=>{const checkWritePermissions=async()=>{if(!repository||!githubService.isAuth()){setHasWriteAccess(false);return;}try{// Check repository permissions\nconst hasPermission=await githubService.checkRepositoryPermissions(repository.owner.login,repository.name);setHasWriteAccess(hasPermission);}catch(error){console.error('Error checking repository permissions:',error);setHasWriteAccess(false);}};checkWritePermissions();},[repository]);// Set branch context\nuseEffect(()=>{if(profile&&repository&&branch){branchContextService.setBranchContext(profile.login,repository.name,branch);}},[profile,repository,branch]);// Fetch issue counts for repository (if authenticated)\nuseEffect(()=>{const fetchIssueCounts=async()=>{if(!repository||!githubService.isAuth()){return;}try{const issues=await githubService.getRepositoryIssues(repository.owner.login,repository.name);// Count issues by label\nconst counts={};issues.forEach(issue=>{issue.labels.forEach(label=>{counts[label.name]=(counts[label.name]||0)+1;});});setIssueCounts(counts);}catch(error){console.warn('Could not fetch issue counts:',error);}};fetchIssueCounts();},[repository]);const handleComponentNavigate=componentPath=>{if(profile&&repository){navigate(`/${componentPath}/${profile.login}/${repository.name}/${branch}`,{state:{profile,repository,selectedBranch:branch}});}};const handlePublicationNavigate=()=>{if(profile&&repository){navigate(`/publications/${profile.login}/${repository.name}/${branch}`,{state:{profile,repository,selectedBranch:branch}});}};// Define the 9 core DAK components based on WHO SMART Guidelines documentation\nconst dakComponents=[// Core Components (Level 2)\n{id:'health-interventions',title:'Health Interventions and Recommendations',description:'Clinical guidelines and health intervention specifications that define evidence-based care recommendations',icon:'📖',path:'health-interventions',level:'Level 2: Core Components',color:'#0078d4'},{id:'generic-personas',title:'Generic Personas',description:'Standardized user roles and actor definitions that represent different types of healthcare workers and patients',icon:'👥',path:'actor-editor',level:'Level 2: Core Components',color:'#107c10'},{id:'user-scenarios',title:'User Scenarios',description:'Narrative descriptions of how different personas interact with the system in specific healthcare contexts',icon:'📝',path:'user-scenarios',level:'Level 2: Core Components',color:'#881798'},{id:'business-processes',title:'Generic Business Processes and Workflows',description:'BPMN workflows and business process definitions that model clinical workflows and care pathways',icon:'🔄',path:'business-process-selection',level:'Level 2: Core Components',color:'#d13438'},{id:'core-data-elements',title:'Core Data Elements',description:'Essential data structures and terminology needed for clinical data capture and exchange',icon:'🗃️',path:'core-data-dictionary-viewer',level:'Level 2: Core Components',color:'#ff8c00'},{id:'decision-support',title:'Decision-Support Logic',description:'DMN decision tables and clinical decision support rules that encode clinical logic',icon:'🎯',path:'decision-support-logic',level:'Level 2: Core Components',color:'#00bcf2'},{id:'program-indicators',title:'Program Indicators',description:'Performance indicators and measurement definitions for monitoring and evaluation',icon:'📊',path:'program-indicators',level:'Level 2: Core Components',color:'#498205'},{id:'functional-requirements',title:'Functional and Non-Functional Requirements',description:'System requirements specifications that define capabilities and constraints',icon:'⚙️',path:'functional-requirements',level:'Level 2: Core Components',color:'#6b69d6'},{id:'testing',title:'Testing',description:'Feature files and test scenarios for validating the DAK implementation',icon:'🧪',path:'testing-viewer',level:'Level 2: Core Components',color:'#8b5cf6'},// Additional Components (Level 3)\n{id:'terminology',title:'Terminology',description:'Code systems, value sets, and concept maps',icon:'🏷️',path:'terminology',level:'Level 3: Technical Implementation',color:'#ff8c00'},{id:'profiles',title:'FHIR Profiles',description:'FHIR resource profiles and constraints',icon:'🔧',path:'profiles',level:'Level 3: Technical Implementation',color:'#00bcf2'},{id:'extensions',title:'FHIR Extensions',description:'Custom FHIR extensions and modifications',icon:'🧩',path:'extensions',level:'Level 3: Technical Implementation',color:'#498205'},{id:'test-data',title:'Test Data & Examples',description:'Sample data and testing resources',icon:'🧪',path:'test-data',level:'Level 3: Technical Implementation',color:'#8b5cf6'},{id:'questionnaire-editor',title:'FHIR Questionnaires',description:'Structured questionnaires and forms for data collection using FHIR standard',icon:'📋',path:'questionnaire-editor',level:'Level 3: Technical Implementation',color:'#17a2b8'}];const coreComponents=dakComponents.filter(comp=>comp.level.includes('Level 2: Core Components'));const additionalComponents=dakComponents.filter(comp=>comp.level.includes('Level 3: Technical Implementation'));return/*#__PURE__*/_jsxs(\"div\",{className:\"dak-dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-title\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[repository===null||repository===void 0?void 0:repository.name,\" Dashboard\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"dashboard-subtitle\",children:[\"Digital Adaptation Kit for \",(profile===null||profile===void 0?void 0:profile.name)||(profile===null||profile===void 0?void 0:profile.login)]})]})}),repository&&/*#__PURE__*/_jsx(DAKStatusBox,{repository:repository,profile:profile,selectedBranch:branch,issueCounts:issueCounts}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-navigation\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='core'?'active':''}`,onClick:()=>setActiveTab('core'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"tab-icon\",children:\"\\u2B50\"}),/*#__PURE__*/_jsx(\"span\",{className:\"tab-text\",children:\"9 Core Components\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='additional'?'active':''}`,onClick:()=>setActiveTab('additional'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"tab-icon\",children:\"\\uD83D\\uDD27\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"tab-text\",children:[\"Additional Components (\",additionalComponents.length,\")\"]})]}),/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='publications'?'active':''}`,onClick:()=>setActiveTab('publications'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"tab-icon\",children:\"\\uD83D\\uDCDA\"}),/*#__PURE__*/_jsx(\"span\",{className:\"tab-text\",children:\"Publications\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[activeTab==='core'&&/*#__PURE__*/_jsx(\"div\",{className:\"components-grid core-components\",children:coreComponents.map(component=>/*#__PURE__*/_jsxs(\"div\",{className:\"component-card\",onClick:()=>handleComponentNavigate(component.path),children:[/*#__PURE__*/_jsx(\"div\",{className:\"component-icon\",children:component.icon}),/*#__PURE__*/_jsx(\"h3\",{children:component.title}),/*#__PURE__*/_jsx(\"p\",{children:component.description}),issueCounts[component.id]>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"issue-badge\",children:[issueCounts[component.id],\" issues\"]})]},component.id))}),activeTab==='additional'&&/*#__PURE__*/_jsx(\"div\",{className:\"components-grid additional-components\",children:additionalComponents.map(component=>/*#__PURE__*/_jsxs(\"div\",{className:\"component-card\",onClick:()=>handleComponentNavigate(component.path),children:[/*#__PURE__*/_jsx(\"div\",{className:\"component-icon\",children:component.icon}),/*#__PURE__*/_jsx(\"h3\",{children:component.title}),/*#__PURE__*/_jsx(\"p\",{children:component.description}),issueCounts[component.id]>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"issue-badge\",children:[issueCounts[component.id],\" issues\"]})]},component.id))}),activeTab==='publications'&&/*#__PURE__*/_jsx(\"div\",{className:\"publications-section\",children:/*#__PURE__*/_jsx(Publications,{repository:repository,profile:profile,selectedBranch:branch,onNavigate:handlePublicationNavigate})})]}),showPermissionDialog&&/*#__PURE__*/_jsxs(\"div\",{className:\"permission-dialog\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dialog-overlay\",onClick:()=>setShowPermissionDialog(false)}),/*#__PURE__*/_jsxs(\"div\",{className:\"dialog-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Repository Permissions\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"You have \",hasWriteAccess?'write':'read-only',\" access to this repository.\",!hasWriteAccess&&' You can view content but cannot make changes.']}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowPermissionDialog(false),children:\"Got it\"})]})]})]});};export default DAKDashboardWithFramework;","map":{"version":3,"names":["React","useState","useEffect","PageLayout","useDAKParams","githubService","branchContextService","DAKStatusBox","Publications","jsx","_jsx","jsxs","_jsxs","DAKDashboardWithFramework","pageName","children","DAKDashboardContent","profile","repository","branch","navigate","hasWriteAccess","setHasWriteAccess","showPermissionDialog","setShowPermissionDialog","activeTab","setActiveTab","issueCounts","setIssueCounts","checkWritePermissions","isAuth","hasPermission","checkRepositoryPermissions","owner","login","name","error","console","setBranchContext","fetchIssueCounts","issues","getRepositoryIssues","counts","forEach","issue","labels","label","warn","handleComponentNavigate","componentPath","state","selectedBranch","handlePublicationNavigate","dakComponents","id","title","description","icon","path","level","color","coreComponents","filter","comp","includes","additionalComponents","className","onClick","length","map","component","onNavigate"],"sources":["/home/runner/work/sgex/sgex/src/components/DAKDashboardWithFramework.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PageLayout, useDAKParams } from './framework';\nimport githubService from '../services/githubService';\nimport branchContextService from '../services/branchContextService';\nimport DAKStatusBox from './DAKStatusBox';\nimport Publications from './Publications';\nimport './DAKDashboard.css';\n\nconst DAKDashboardWithFramework = () => {\n  return (\n    <PageLayout pageName=\"dashboard\">\n      <DAKDashboardContent />\n    </PageLayout>\n  );\n};\n\nconst DAKDashboardContent = () => {\n  const { profile, repository, branch, navigate } = useDAKParams();\n  \n  const [hasWriteAccess, setHasWriteAccess] = useState(false);\n  const [showPermissionDialog, setShowPermissionDialog] = useState(false);\n  const [activeTab, setActiveTab] = useState('core'); // 'core', 'additional', or 'publications'\n  const [issueCounts, setIssueCounts] = useState({});\n\n  // Check write permissions\n  useEffect(() => {\n    const checkWritePermissions = async () => {\n      if (!repository || !githubService.isAuth()) {\n        setHasWriteAccess(false);\n        return;\n      }\n\n      try {\n        // Check repository permissions\n        const hasPermission = await githubService.checkRepositoryPermissions(repository.owner.login, repository.name);\n        setHasWriteAccess(hasPermission);\n      } catch (error) {\n        console.error('Error checking repository permissions:', error);\n        setHasWriteAccess(false);\n      }\n    };\n\n    checkWritePermissions();\n  }, [repository]);\n\n  // Set branch context\n  useEffect(() => {\n    if (profile && repository && branch) {\n      branchContextService.setBranchContext(profile.login, repository.name, branch);\n    }\n  }, [profile, repository, branch]);\n\n  // Fetch issue counts for repository (if authenticated)\n  useEffect(() => {\n    const fetchIssueCounts = async () => {\n      if (!repository || !githubService.isAuth()) {\n        return;\n      }\n\n      try {\n        const issues = await githubService.getRepositoryIssues(repository.owner.login, repository.name);\n        \n        // Count issues by label\n        const counts = {};\n        issues.forEach(issue => {\n          issue.labels.forEach(label => {\n            counts[label.name] = (counts[label.name] || 0) + 1;\n          });\n        });\n        \n        setIssueCounts(counts);\n      } catch (error) {\n        console.warn('Could not fetch issue counts:', error);\n      }\n    };\n\n    fetchIssueCounts();\n  }, [repository]);\n\n  const handleComponentNavigate = (componentPath) => {\n    if (profile && repository) {\n      navigate(`/${componentPath}/${profile.login}/${repository.name}/${branch}`, {\n        state: {\n          profile,\n          repository,\n          selectedBranch: branch\n        }\n      });\n    }\n  };\n\n  const handlePublicationNavigate = () => {\n    if (profile && repository) {\n      navigate(`/publications/${profile.login}/${repository.name}/${branch}`, {\n        state: {\n          profile,\n          repository,\n          selectedBranch: branch\n        }\n      });\n    }\n  };\n\n  // Define the 9 core DAK components based on WHO SMART Guidelines documentation\n  const dakComponents = [\n    // Core Components (Level 2)\n    {\n      id: 'health-interventions',\n      title: 'Health Interventions and Recommendations',\n      description: 'Clinical guidelines and health intervention specifications that define evidence-based care recommendations',\n      icon: '📖',\n      path: 'health-interventions',\n      level: 'Level 2: Core Components',\n      color: '#0078d4'\n    },\n    {\n      id: 'generic-personas',\n      title: 'Generic Personas',\n      description: 'Standardized user roles and actor definitions that represent different types of healthcare workers and patients',\n      icon: '👥',\n      path: 'actor-editor',\n      level: 'Level 2: Core Components',\n      color: '#107c10'\n    },\n    {\n      id: 'user-scenarios',\n      title: 'User Scenarios',\n      description: 'Narrative descriptions of how different personas interact with the system in specific healthcare contexts',\n      icon: '📝',\n      path: 'user-scenarios',\n      level: 'Level 2: Core Components',\n      color: '#881798'\n    },\n    {\n      id: 'business-processes',\n      title: 'Generic Business Processes and Workflows',\n      description: 'BPMN workflows and business process definitions that model clinical workflows and care pathways',\n      icon: '🔄',\n      path: 'business-process-selection',\n      level: 'Level 2: Core Components',\n      color: '#d13438'\n    },\n    {\n      id: 'core-data-elements',\n      title: 'Core Data Elements',\n      description: 'Essential data structures and terminology needed for clinical data capture and exchange',\n      icon: '🗃️',\n      path: 'core-data-dictionary-viewer',\n      level: 'Level 2: Core Components',\n      color: '#ff8c00'\n    },\n    {\n      id: 'decision-support',\n      title: 'Decision-Support Logic',\n      description: 'DMN decision tables and clinical decision support rules that encode clinical logic',\n      icon: '🎯',\n      path: 'decision-support-logic',\n      level: 'Level 2: Core Components',\n      color: '#00bcf2'\n    },\n    {\n      id: 'program-indicators',\n      title: 'Program Indicators',\n      description: 'Performance indicators and measurement definitions for monitoring and evaluation',\n      icon: '📊',\n      path: 'program-indicators',\n      level: 'Level 2: Core Components',\n      color: '#498205'\n    },\n    {\n      id: 'functional-requirements',\n      title: 'Functional and Non-Functional Requirements',\n      description: 'System requirements specifications that define capabilities and constraints',\n      icon: '⚙️',\n      path: 'functional-requirements',\n      level: 'Level 2: Core Components',\n      color: '#6b69d6'\n    },\n    {\n      id: 'testing',\n      title: 'Testing',\n      description: 'Feature files and test scenarios for validating the DAK implementation',\n      icon: '🧪',\n      path: 'testing-viewer',\n      level: 'Level 2: Core Components',\n      color: '#8b5cf6'\n    },\n    // Additional Components (Level 3)\n    {\n      id: 'terminology',\n      title: 'Terminology',\n      description: 'Code systems, value sets, and concept maps',\n      icon: '🏷️',\n      path: 'terminology',\n      level: 'Level 3: Technical Implementation',\n      color: '#ff8c00'\n    },\n    {\n      id: 'profiles',\n      title: 'FHIR Profiles',\n      description: 'FHIR resource profiles and constraints',\n      icon: '🔧',\n      path: 'profiles',\n      level: 'Level 3: Technical Implementation',\n      color: '#00bcf2'\n    },\n    {\n      id: 'extensions',\n      title: 'FHIR Extensions',\n      description: 'Custom FHIR extensions and modifications',\n      icon: '🧩',\n      path: 'extensions',\n      level: 'Level 3: Technical Implementation',\n      color: '#498205'\n    },\n    {\n      id: 'test-data',\n      title: 'Test Data & Examples',\n      description: 'Sample data and testing resources',\n      icon: '🧪',\n      path: 'test-data',\n      level: 'Level 3: Technical Implementation',\n      color: '#8b5cf6'\n    },\n    {\n      id: 'questionnaire-editor',\n      title: 'FHIR Questionnaires',\n      description: 'Structured questionnaires and forms for data collection using FHIR standard',\n      icon: '📋',\n      path: 'questionnaire-editor',\n      level: 'Level 3: Technical Implementation',\n      color: '#17a2b8'\n    }\n  ];\n\n  const coreComponents = dakComponents.filter(comp => comp.level.includes('Level 2: Core Components'));\n  const additionalComponents = dakComponents.filter(comp => comp.level.includes('Level 3: Technical Implementation'));\n\n  return (\n    <div className=\"dak-dashboard\">\n        <div className=\"dashboard-header\">\n          <div className=\"dashboard-title\">\n            <h1>{repository?.name} Dashboard</h1>\n            <p className=\"dashboard-subtitle\">\n              Digital Adaptation Kit for {profile?.name || profile?.login}\n            </p>\n          </div>\n        </div>\n\n        {repository && (\n          <DAKStatusBox \n            repository={repository}\n            profile={profile}\n            selectedBranch={branch}\n            issueCounts={issueCounts}\n          />\n        )}\n\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'core' ? 'active' : ''}`}\n            onClick={() => setActiveTab('core')}\n          >\n            <span className=\"tab-icon\">⭐</span>\n            <span className=\"tab-text\">9 Core Components</span>\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'additional' ? 'active' : ''}`}\n            onClick={() => setActiveTab('additional')}\n          >\n            <span className=\"tab-icon\">🔧</span>\n            <span className=\"tab-text\">Additional Components ({additionalComponents.length})</span>\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'publications' ? 'active' : ''}`}\n            onClick={() => setActiveTab('publications')}\n          >\n            <span className=\"tab-icon\">📚</span>\n            <span className=\"tab-text\">Publications</span>\n          </button>\n        </div>\n\n        <div className=\"dashboard-content\">\n          {activeTab === 'core' && (\n            <div className=\"components-grid core-components\">\n              {coreComponents.map(component => (\n                <div \n                  key={component.id}\n                  className=\"component-card\"\n                  onClick={() => handleComponentNavigate(component.path)}\n                >\n                  <div className=\"component-icon\">{component.icon}</div>\n                  <h3>{component.title}</h3>\n                  <p>{component.description}</p>\n                  {issueCounts[component.id] > 0 && (\n                    <div className=\"issue-badge\">\n                      {issueCounts[component.id]} issues\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'additional' && (\n            <div className=\"components-grid additional-components\">\n              {additionalComponents.map(component => (\n                <div \n                  key={component.id}\n                  className=\"component-card\"\n                  onClick={() => handleComponentNavigate(component.path)}\n                >\n                  <div className=\"component-icon\">{component.icon}</div>\n                  <h3>{component.title}</h3>\n                  <p>{component.description}</p>\n                  {issueCounts[component.id] > 0 && (\n                    <div className=\"issue-badge\">\n                      {issueCounts[component.id]} issues\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'publications' && (\n            <div className=\"publications-section\">\n              <Publications \n                repository={repository}\n                profile={profile}\n                selectedBranch={branch}\n                onNavigate={handlePublicationNavigate}\n              />\n            </div>\n          )}\n        </div>\n\n        {showPermissionDialog && (\n          <div className=\"permission-dialog\">\n            <div className=\"dialog-overlay\" onClick={() => setShowPermissionDialog(false)}></div>\n            <div className=\"dialog-content\">\n              <h3>Repository Permissions</h3>\n              <p>\n                You have {hasWriteAccess ? 'write' : 'read-only'} access to this repository.\n                {!hasWriteAccess && ' You can view content but cannot make changes.'}\n              </p>\n              <button onClick={() => setShowPermissionDialog(false)}>\n                Got it\n              </button>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default DAKDashboardWithFramework;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}