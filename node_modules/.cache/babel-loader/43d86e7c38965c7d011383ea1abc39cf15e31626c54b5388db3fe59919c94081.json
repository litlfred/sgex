{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/runner/work/sgex/sgex/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n  const {\n    properties,\n    items\n  } = it.schema;\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default);\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i) => assignDefault(it, i, sch.default));\n  }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n  const {\n    gen,\n    compositeRule,\n    data,\n    opts\n  } = it;\n  if (defaultValue === undefined) return;\n  const childData = (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\", \"\", \"\"])), data, (0, codegen_1.getProperty)(prop));\n  if (compositeRule) {\n    (0, util_1.checkStrictMode)(it, \"default is ignored for: \".concat(childData));\n    return;\n  }\n  let condition = (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \" === undefined\"])), childData);\n  if (opts.useDefaults === \"empty\") {\n    condition = (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \" || \", \" === null || \", \" === \\\"\\\"\"])), condition, childData, childData);\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \" = \", \"\"])), childData, (0, codegen_1.stringify)(defaultValue)));\n}","map":{"version":3,"names":["codegen_1","require","util_1","assignDefaults","it","ty","properties","items","schema","key","assignDefault","default","Array","isArray","forEach","sch","i","exports","prop","defaultValue","gen","compositeRule","data","opts","undefined","childData","_","_templateObject","_taggedTemplateLiteral","getProperty","checkStrictMode","concat","condition","_templateObject2","useDefaults","_templateObject3","if","_templateObject4","stringify"],"sources":["/home/runner/work/sgex/sgex/node_modules/ajv/lib/compile/validate/defaults.ts"],"sourcesContent":["import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n"],"mappings":";;;;;;;;AACA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AAEA,SAAgBE,cAAcA,CAACC,EAAgB,EAAEC,EAAW;EAC1D,MAAM;IAACC,UAAU;IAAEC;EAAK,CAAC,GAAGH,EAAE,CAACI,MAAM;EACrC,IAAIH,EAAE,KAAK,QAAQ,IAAIC,UAAU,EAAE;IACjC,KAAK,MAAMG,GAAG,IAAIH,UAAU,EAAE;MAC5BI,aAAa,CAACN,EAAE,EAAEK,GAAG,EAAEH,UAAU,CAACG,GAAG,CAAC,CAACE,OAAO,CAAC;IACjD;EACF,CAAC,MAAM,IAAIN,EAAE,KAAK,OAAO,IAAIO,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,EAAE;IACjDA,KAAK,CAACO,OAAO,CAAC,CAACC,GAAG,EAAEC,CAAS,KAAKN,aAAa,CAACN,EAAE,EAAEY,CAAC,EAAED,GAAG,CAACJ,OAAO,CAAC,CAAC;EACtE;AACF;AATAM,OAAA,CAAAd,cAAA,GAAAA,cAAA;AAWA,SAASO,aAAaA,CAACN,EAAgB,EAAEc,IAAqB,EAAEC,YAAqB;EACnF,MAAM;IAACC,GAAG;IAAEC,aAAa;IAAEC,IAAI;IAAEC;EAAI,CAAC,GAAGnB,EAAE;EAC3C,IAAIe,YAAY,KAAKK,SAAS,EAAE;EAChC,MAAMC,SAAS,IAAG,GAAAzB,SAAA,CAAA0B,CAAC,EAAAC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,iBAAGN,IAAI,EAAG,IAAAtB,SAAA,CAAA6B,WAAW,EAACX,IAAI,CAAC,CAAE;EAChD,IAAIG,aAAa,EAAE;IACjB,IAAAnB,MAAA,CAAA4B,eAAe,EAAC1B,EAAE,6BAAA2B,MAAA,CAA6BN,SAAS,CAAE,CAAC;IAC3D;EACF;EAEA,IAAIO,SAAS,IAAG,GAAAhC,SAAA,CAAA0B,CAAC,EAAAO,gBAAA,KAAAA,gBAAA,GAAAL,sBAAA,2BAAGH,SAAS,CAAgB;EAC7C,IAAIF,IAAI,CAACW,WAAW,KAAK,OAAO,EAAE;IAChCF,SAAS,IAAG,GAAAhC,SAAA,CAAA0B,CAAC,EAAAS,gBAAA,KAAAA,gBAAA,GAAAP,sBAAA,+CAAGI,SAAS,EAAOP,SAAS,EAAgBA,SAAS,CAAS;EAC7E;EACA;EACA;EACAL,GAAG,CAACgB,EAAE,CAACJ,SAAS,GAAE,GAAAhC,SAAA,CAAA0B,CAAC,EAAAW,gBAAA,KAAAA,gBAAA,GAAAT,sBAAA,oBAAGH,SAAS,EAAM,IAAAzB,SAAA,CAAAsC,SAAS,EAACnB,YAAY,CAAC,CAAE,CAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}