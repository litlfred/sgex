{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useNavigate,useLocation}from'react-router-dom';import{useTranslation}from'react-i18next';import githubService from'../services/githubService';import repositoryCacheService from'../services/repositoryCacheService';import{PageLayout}from'./framework';import{handleNavigationClick}from'../utils/navigationUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SelectProfilePage=()=>{const{t}=useTranslation();const[user,setUser]=useState(null);const[organizations,setOrganizations]=useState([]);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[dakCounts,setDakCounts]=useState({});const[warningMessage,setWarningMessage]=useState(null);const navigate=useNavigate();const location=useLocation();// Load cached DAK counts without initiating any scanning\nconst loadCachedDakCounts=useCallback((userData,orgsData)=>{if(!githubService.isAuth()){return;}const counts={};// Check cache for user's personal repositories\nif(userData){const userCache=repositoryCacheService.getCachedRepositories(userData.login,'user');if(userCache&&userCache.repositories){counts[`user-${userData.login}`]=userCache.repositories.length;}}// Check cache for organization repositories\norgsData.forEach(org=>{const orgCache=repositoryCacheService.getCachedRepositories(org.login,'org');if(orgCache&&orgCache.repositories){counts[`org-${org.login}`]=orgCache.repositories.length;}});setDakCounts(counts);},[]);const fetchUserData=useCallback(async()=>{setLoading(true);setError(null);try{// Check token permissions first\nawait githubService.checkTokenPermissions();// Fetch user data using GitHub service\nconst userData=await githubService.getCurrentUser();setUser(userData);// Fetch organizations inline\nlet orgsData=[];if(githubService.isAuth()){try{orgsData=await githubService.getUserOrganizations();}catch(error){console.error('Error fetching organizations:',error);orgsData=[];}}// Always ensure WHO organization is included\ntry{const whoOrganization=await githubService.getWHOOrganization();// Check if WHO organization is already in the list\nconst whoIndex=orgsData.findIndex(org=>org.login==='WorldHealthOrganization');if(whoIndex>=0){// Replace existing WHO org with fresh data and ensure isWHO flag\norgsData[whoIndex]={...orgsData[whoIndex],...whoOrganization,isWHO:true};}else{// Add WHO organization at the beginning of the list\norgsData.unshift(whoOrganization);}}catch(whoError){console.warn('Could not fetch WHO organization data, using fallback:',whoError);// Fallback to hardcoded WHO organization\nconst whoOrganization={id:'who-organization',login:'WorldHealthOrganization',name:'World Health Organization',description:'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',avatar_url:'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',html_url:'https://github.com/WorldHealthOrganization',type:'Organization',isWHO:true};// Check if WHO organization is already in the list\nconst hasWHO=orgsData.some(org=>org.login==='WorldHealthOrganization');if(!hasWHO){// Add WHO organization at the beginning of the list\norgsData.unshift(whoOrganization);}else{// Ensure existing WHO organization has the isWHO flag\norgsData=orgsData.map(org=>org.login==='WorldHealthOrganization'?{...org,isWHO:true}:org);}}setOrganizations(orgsData);// Load cached DAK counts (if available)\nloadCachedDakCounts(userData,orgsData);}catch(error){console.error('Error fetching user data:',error);setError('Failed to fetch user data. Please check your connection and try again.');setIsAuthenticated(false);sessionStorage.removeItem('github_token');localStorage.removeItem('github_token');}finally{setLoading(false);}},[loadCachedDakCounts]);// Initial authentication check and redirect if not authenticated\nuseEffect(()=>{const initializeAuth=()=>{// Check if user is already authenticated from previous session\nconst token=sessionStorage.getItem('github_token')||localStorage.getItem('github_token');if(token){const success=githubService.authenticate(token);if(success){setIsAuthenticated(true);}else{sessionStorage.removeItem('github_token');localStorage.removeItem('github_token');// Redirect to welcome page if not authenticated\nnavigate('/',{replace:true});}}else{// Redirect to welcome page if no token\nnavigate('/',{replace:true});}};initializeAuth();},[navigate]);// Handle warning message from navigation state\nuseEffect(()=>{var _location$state;if((_location$state=location.state)!==null&&_location$state!==void 0&&_location$state.warningMessage){setWarningMessage(location.state.warningMessage);// Clear the warning message from navigation state to prevent it from persisting\nnavigate(location.pathname,{replace:true,state:{}});}},[location.state,navigate,location.pathname]);// Fetch user data when authentication state changes\nuseEffect(()=>{if(isAuthenticated&&!user){fetchUserData();}},[isAuthenticated,user,fetchUserData]);const handleProfileSelect=(event,profile)=>{const navigationState={profile};handleNavigationClick(event,`/dak-action/${profile.login}`,navigate,navigationState);};const handleDismissWarning=()=>{setWarningMessage(null);};// Don't render anything if not authenticated (will redirect)\nif(!isAuthenticated){return null;}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"select-profile\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"select-profile-content\",children:[warningMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"warning-message\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"warning-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"warning-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"warning-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"span\",{className:\"warning-text\",children:warningMessage})]}),/*#__PURE__*/_jsx(\"button\",{className:\"warning-dismiss\",onClick:handleDismissWarning,\"aria-label\":\"Dismiss warning\",children:\"\\xD7 Dismiss\"})]})}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading profile data...\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"profile-selection\",children:[/*#__PURE__*/_jsx(\"h2\",{children:t('organization.select')}),/*#__PURE__*/_jsxs(\"p\",{children:[t('organization.personal'),\":\"]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-grid-horizontal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card\",onClick:event=>handleProfileSelect(event,{type:'user',...user}),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:user===null||user===void 0?void 0:user.avatar_url,alt:\"Personal profile\"}),dakCounts[`user-${user===null||user===void 0?void 0:user.login}`]>0&&/*#__PURE__*/_jsx(\"div\",{className:\"dak-count-badge\",children:dakCounts[`user-${user===null||user===void 0?void 0:user.login}`]})]}),/*#__PURE__*/_jsx(\"h3\",{children:(user===null||user===void 0?void 0:user.name)||(user===null||user===void 0?void 0:user.login)}),/*#__PURE__*/_jsx(\"p\",{children:\"Personal repositories\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-badges\",children:/*#__PURE__*/_jsx(\"span\",{className:\"profile-type\",children:\"Personal\"})})]}),organizations.map(org=>/*#__PURE__*/_jsxs(\"div\",{className:`profile-card ${org.isWHO?'who-org':''}`,onClick:event=>handleProfileSelect(event,{type:'org',...org}),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:org.avatar_url||`https://github.com/${org.login}.png`,alt:`${org.name||org.login} organization`}),dakCounts[`org-${org.login}`]>0&&/*#__PURE__*/_jsx(\"div\",{className:\"dak-count-badge\",children:dakCounts[`org-${org.login}`]})]}),/*#__PURE__*/_jsx(\"h3\",{children:org.name||org.login}),/*#__PURE__*/_jsxs(\"p\",{children:[\"@\",org.login]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-badges\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"profile-type\",children:t('organization.organizations')}),org.isWHO&&/*#__PURE__*/_jsx(\"span\",{className:\"who-badge\",children:\"WHO Official\"})]})]},org.login))]})]})]})});};export default SelectProfilePage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","useTranslation","githubService","repositoryCacheService","PageLayout","handleNavigationClick","jsx","_jsx","jsxs","_jsxs","SelectProfilePage","t","user","setUser","organizations","setOrganizations","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","dakCounts","setDakCounts","warningMessage","setWarningMessage","navigate","location","loadCachedDakCounts","userData","orgsData","isAuth","counts","userCache","getCachedRepositories","login","repositories","length","forEach","org","orgCache","fetchUserData","checkTokenPermissions","getCurrentUser","getUserOrganizations","console","whoOrganization","getWHOOrganization","whoIndex","findIndex","isWHO","unshift","whoError","warn","id","name","description","avatar_url","html_url","type","hasWHO","some","map","sessionStorage","removeItem","localStorage","initializeAuth","token","getItem","success","authenticate","replace","_location$state","state","pathname","handleProfileSelect","event","profile","navigationState","handleDismissWarning","pageName","children","className","onClick","src","alt"],"sources":["/home/runner/work/sgex/sgex/src/components/SelectProfilePage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport githubService from '../services/githubService';\nimport repositoryCacheService from '../services/repositoryCacheService';\nimport { PageLayout } from './framework';\nimport { handleNavigationClick } from '../utils/navigationUtils';\n\nconst SelectProfilePage = () => {\n  const { t } = useTranslation();\n  const [user, setUser] = useState(null);\n  const [organizations, setOrganizations] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dakCounts, setDakCounts] = useState({});\n  const [warningMessage, setWarningMessage] = useState(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Load cached DAK counts without initiating any scanning\n  const loadCachedDakCounts = useCallback((userData, orgsData) => {\n    if (!githubService.isAuth()) {\n      return;\n    }\n\n    const counts = {};\n    \n    // Check cache for user's personal repositories\n    if (userData) {\n      const userCache = repositoryCacheService.getCachedRepositories(userData.login, 'user');\n      if (userCache && userCache.repositories) {\n        counts[`user-${userData.login}`] = userCache.repositories.length;\n      }\n    }\n    \n    // Check cache for organization repositories\n    orgsData.forEach(org => {\n      const orgCache = repositoryCacheService.getCachedRepositories(org.login, 'org');\n      if (orgCache && orgCache.repositories) {\n        counts[`org-${org.login}`] = orgCache.repositories.length;\n      }\n    });\n    \n    setDakCounts(counts);\n  }, []);\n\n  const fetchUserData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Check token permissions first\n      await githubService.checkTokenPermissions();\n      \n      // Fetch user data using GitHub service\n      const userData = await githubService.getCurrentUser();\n      setUser(userData);\n      \n      // Fetch organizations inline\n      let orgsData = [];\n      \n      if (githubService.isAuth()) {\n        try {\n          orgsData = await githubService.getUserOrganizations();\n        } catch (error) {\n          console.error('Error fetching organizations:', error);\n          orgsData = [];\n        }\n      }\n      \n      // Always ensure WHO organization is included\n      try {\n        const whoOrganization = await githubService.getWHOOrganization();\n        \n        // Check if WHO organization is already in the list\n        const whoIndex = orgsData.findIndex(org => org.login === 'WorldHealthOrganization');\n        \n        if (whoIndex >= 0) {\n          // Replace existing WHO org with fresh data and ensure isWHO flag\n          orgsData[whoIndex] = { ...orgsData[whoIndex], ...whoOrganization, isWHO: true };\n        } else {\n          // Add WHO organization at the beginning of the list\n          orgsData.unshift(whoOrganization);\n        }\n      } catch (whoError) {\n        console.warn('Could not fetch WHO organization data, using fallback:', whoError);\n        \n        // Fallback to hardcoded WHO organization\n        const whoOrganization = {\n          id: 'who-organization',\n          login: 'WorldHealthOrganization',\n          name: 'World Health Organization',\n          description: 'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',\n          avatar_url: 'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',\n          html_url: 'https://github.com/WorldHealthOrganization',\n          type: 'Organization',\n          isWHO: true\n        };\n        \n        // Check if WHO organization is already in the list\n        const hasWHO = orgsData.some(org => org.login === 'WorldHealthOrganization');\n        \n        if (!hasWHO) {\n          // Add WHO organization at the beginning of the list\n          orgsData.unshift(whoOrganization);\n        } else {\n          // Ensure existing WHO organization has the isWHO flag\n          orgsData = orgsData.map(org => \n            org.login === 'WorldHealthOrganization' \n              ? { ...org, isWHO: true }\n              : org\n          );\n        }\n      }\n      \n      setOrganizations(orgsData);\n      \n      // Load cached DAK counts (if available)\n      loadCachedDakCounts(userData, orgsData);\n      \n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      setError('Failed to fetch user data. Please check your connection and try again.');\n      setIsAuthenticated(false);\n      sessionStorage.removeItem('github_token');\n      localStorage.removeItem('github_token');\n    } finally {\n      setLoading(false);\n    }\n  }, [loadCachedDakCounts]);\n\n  // Initial authentication check and redirect if not authenticated\n  useEffect(() => {\n    const initializeAuth = () => {\n      // Check if user is already authenticated from previous session\n      const token = sessionStorage.getItem('github_token') || localStorage.getItem('github_token');\n      if (token) {\n        const success = githubService.authenticate(token);\n        if (success) {\n          setIsAuthenticated(true);\n        } else {\n          sessionStorage.removeItem('github_token');\n          localStorage.removeItem('github_token');\n          // Redirect to welcome page if not authenticated\n          navigate('/', { replace: true });\n        }\n      } else {\n        // Redirect to welcome page if no token\n        navigate('/', { replace: true });\n      }\n    };\n\n    initializeAuth();\n  }, [navigate]);\n\n  // Handle warning message from navigation state\n  useEffect(() => {\n    if (location.state?.warningMessage) {\n      setWarningMessage(location.state.warningMessage);\n      // Clear the warning message from navigation state to prevent it from persisting\n      navigate(location.pathname, { replace: true, state: {} });\n    }\n  }, [location.state, navigate, location.pathname]);\n\n  // Fetch user data when authentication state changes\n  useEffect(() => {\n    if (isAuthenticated && !user) {\n      fetchUserData();\n    }\n  }, [isAuthenticated, user, fetchUserData]);\n\n  const handleProfileSelect = (event, profile) => {\n    const navigationState = { profile };\n    handleNavigationClick(event, `/dak-action/${profile.login}`, navigate, navigationState);\n  };\n\n  const handleDismissWarning = () => {\n    setWarningMessage(null);\n  };\n\n  // Don't render anything if not authenticated (will redirect)\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <PageLayout pageName=\"select-profile\">\n      <div className=\"select-profile-content\">\n        {warningMessage && (\n          <div className=\"warning-message\">\n            <div className=\"warning-content\">\n              <div className=\"warning-header\">\n                <span className=\"warning-icon\">⚠️</span>\n                <span className=\"warning-text\">{warningMessage}</span>\n              </div>\n              <button \n                className=\"warning-dismiss\" \n                onClick={handleDismissWarning}\n                aria-label=\"Dismiss warning\"\n              >\n                × Dismiss\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {loading ? (\n          <div className=\"loading-section\">\n            <div className=\"spinner\"></div>\n            <p>Loading profile data...</p>\n          </div>\n        ) : (\n          <div className=\"profile-selection\">\n            <h2>{t('organization.select')}</h2>\n            <p>{t('organization.personal')}:</p>\n            \n            {error && <div className=\"error-message\">{error}</div>}\n            \n            {/* Horizontal profile grid */}\n            <div className=\"profile-grid-horizontal\">\n              {/* Personal Profile */}\n              <div \n                className=\"profile-card\"\n                onClick={(event) => handleProfileSelect(event, { type: 'user', ...user })}\n              >\n                <div className=\"profile-card-header\">\n                  <img src={user?.avatar_url} alt=\"Personal profile\" />\n                  {dakCounts[`user-${user?.login}`] > 0 && (\n                    <div className=\"dak-count-badge\">\n                      {dakCounts[`user-${user?.login}`]}\n                    </div>\n                  )}\n                </div>\n                <h3>{user?.name || user?.login}</h3>\n                <p>Personal repositories</p>\n                <div className=\"profile-badges\">\n                  <span className=\"profile-type\">Personal</span>\n                </div>\n              </div>\n              \n              {/* Organization Profiles */}\n              {organizations.map((org) => (\n                <div \n                  key={org.login}\n                  className={`profile-card ${org.isWHO ? 'who-org' : ''}`}\n                  onClick={(event) => handleProfileSelect(event, { type: 'org', ...org })}\n                >\n                  <div className=\"profile-card-header\">\n                    <img \n                      src={org.avatar_url || `https://github.com/${org.login}.png`} \n                      alt={`${org.name || org.login} organization`} \n                    />\n                    {dakCounts[`org-${org.login}`] > 0 && (\n                      <div className=\"dak-count-badge\">\n                        {dakCounts[`org-${org.login}`]}\n                      </div>\n                    )}\n                  </div>\n                  <h3>{org.name || org.login}</h3>\n                  <p>@{org.login}</p>\n                  <div className=\"profile-badges\">\n                    <span className=\"profile-type\">{t('organization.organizations')}</span>\n                    {org.isWHO && <span className=\"who-badge\">WHO Official</span>}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default SelectProfilePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}