{"ast":null,"code":"import { assign } from 'min-dash';\n\n/**\n * @typedef {import('../keyboard/Keyboard').default} Keyboard\n * @typedef {import('../modeling/Modeling').default} Modeling\n * @typedef {import('../rules/Rules').default} Rules\n * @typedef {import('../selection/Selection').default} Selection\n */\n\nvar DEFAULT_CONFIG = {\n  moveSpeed: 1,\n  moveSpeedAccelerated: 10\n};\nvar HIGHER_PRIORITY = 1500;\nvar LEFT = 'left';\nvar UP = 'up';\nvar RIGHT = 'right';\nvar DOWN = 'down';\nvar KEY_TO_DIRECTION = {\n  ArrowLeft: LEFT,\n  Left: LEFT,\n  ArrowUp: UP,\n  Up: UP,\n  ArrowRight: RIGHT,\n  Right: RIGHT,\n  ArrowDown: DOWN,\n  Down: DOWN\n};\nvar DIRECTIONS_DELTA = {\n  left: function (speed) {\n    return {\n      x: -speed,\n      y: 0\n    };\n  },\n  up: function (speed) {\n    return {\n      x: 0,\n      y: -speed\n    };\n  },\n  right: function (speed) {\n    return {\n      x: speed,\n      y: 0\n    };\n  },\n  down: function (speed) {\n    return {\n      x: 0,\n      y: speed\n    };\n  }\n};\n\n/**\n * Enables to move selection with keyboard arrows.\n * Use with Shift for modified speed (default=1, with Shift=10).\n * Pressed Cmd/Ctrl turns the feature off.\n *\n * @param {Object} config\n * @param {number} [config.moveSpeed=1]\n * @param {number} [config.moveSpeedAccelerated=10]\n * @param {Keyboard} keyboard\n * @param {Modeling} modeling\n * @param {Rules} rules\n * @param {Selection} selection\n */\nexport default function KeyboardMoveSelection(config, keyboard, modeling, rules, selection) {\n  var self = this;\n  this._config = assign({}, DEFAULT_CONFIG, config || {});\n  keyboard.addListener(HIGHER_PRIORITY, function (event) {\n    var keyEvent = event.keyEvent;\n    var direction = KEY_TO_DIRECTION[keyEvent.key];\n    if (!direction) {\n      return;\n    }\n    if (keyboard.isCmd(keyEvent)) {\n      return;\n    }\n    var accelerated = keyboard.isShift(keyEvent);\n    self.moveSelection(direction, accelerated);\n    return true;\n  });\n\n  /**\n   * Move selected elements in the given direction,\n   * optionally specifying accelerated movement.\n   *\n   * @param {string} direction\n   * @param {boolean} [accelerated=false]\n   */\n  this.moveSelection = function (direction, accelerated) {\n    var selectedElements = selection.get();\n    if (!selectedElements.length) {\n      return;\n    }\n    var speed = this._config[accelerated ? 'moveSpeedAccelerated' : 'moveSpeed'];\n    var delta = DIRECTIONS_DELTA[direction](speed);\n    var canMove = rules.allowed('elements.move', {\n      shapes: selectedElements\n    });\n    if (canMove) {\n      modeling.moveElements(selectedElements, delta);\n    }\n  };\n}\nKeyboardMoveSelection.$inject = ['config.keyboardMoveSelection', 'keyboard', 'modeling', 'rules', 'selection'];","map":{"version":3,"names":["assign","DEFAULT_CONFIG","moveSpeed","moveSpeedAccelerated","HIGHER_PRIORITY","LEFT","UP","RIGHT","DOWN","KEY_TO_DIRECTION","ArrowLeft","Left","ArrowUp","Up","ArrowRight","Right","ArrowDown","Down","DIRECTIONS_DELTA","left","speed","x","y","up","right","down","KeyboardMoveSelection","config","keyboard","modeling","rules","selection","self","_config","addListener","event","keyEvent","direction","key","isCmd","accelerated","isShift","moveSelection","selectedElements","get","length","delta","canMove","allowed","shapes","moveElements","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/keyboard-move-selection/KeyboardMoveSelection.js"],"sourcesContent":["import {\n  assign\n} from 'min-dash';\n\n/**\n * @typedef {import('../keyboard/Keyboard').default} Keyboard\n * @typedef {import('../modeling/Modeling').default} Modeling\n * @typedef {import('../rules/Rules').default} Rules\n * @typedef {import('../selection/Selection').default} Selection\n */\n\nvar DEFAULT_CONFIG = {\n  moveSpeed: 1,\n  moveSpeedAccelerated: 10\n};\n\nvar HIGHER_PRIORITY = 1500;\n\nvar LEFT = 'left';\nvar UP = 'up';\nvar RIGHT = 'right';\nvar DOWN = 'down';\n\nvar KEY_TO_DIRECTION = {\n  ArrowLeft: LEFT,\n  Left: LEFT,\n  ArrowUp: UP,\n  Up: UP,\n  ArrowRight: RIGHT,\n  Right: RIGHT,\n  ArrowDown: DOWN,\n  Down: DOWN\n};\n\nvar DIRECTIONS_DELTA = {\n  left: function(speed) {\n    return {\n      x: -speed,\n      y: 0\n    };\n  },\n  up: function(speed) {\n    return {\n      x: 0,\n      y: -speed\n    };\n  },\n  right: function(speed) {\n    return {\n      x: speed,\n      y: 0\n    };\n  },\n  down: function(speed) {\n    return {\n      x: 0,\n      y: speed\n    };\n  }\n};\n\n\n/**\n * Enables to move selection with keyboard arrows.\n * Use with Shift for modified speed (default=1, with Shift=10).\n * Pressed Cmd/Ctrl turns the feature off.\n *\n * @param {Object} config\n * @param {number} [config.moveSpeed=1]\n * @param {number} [config.moveSpeedAccelerated=10]\n * @param {Keyboard} keyboard\n * @param {Modeling} modeling\n * @param {Rules} rules\n * @param {Selection} selection\n */\nexport default function KeyboardMoveSelection(\n    config,\n    keyboard,\n    modeling,\n    rules,\n    selection\n) {\n\n  var self = this;\n\n  this._config = assign({}, DEFAULT_CONFIG, config || {});\n\n  keyboard.addListener(HIGHER_PRIORITY, function(event) {\n\n    var keyEvent = event.keyEvent;\n\n    var direction = KEY_TO_DIRECTION[keyEvent.key];\n\n    if (!direction) {\n      return;\n    }\n\n    if (keyboard.isCmd(keyEvent)) {\n      return;\n    }\n\n    var accelerated = keyboard.isShift(keyEvent);\n\n    self.moveSelection(direction, accelerated);\n\n    return true;\n  });\n\n\n  /**\n   * Move selected elements in the given direction,\n   * optionally specifying accelerated movement.\n   *\n   * @param {string} direction\n   * @param {boolean} [accelerated=false]\n   */\n  this.moveSelection = function(direction, accelerated) {\n\n    var selectedElements = selection.get();\n\n    if (!selectedElements.length) {\n      return;\n    }\n\n    var speed = this._config[\n      accelerated ?\n        'moveSpeedAccelerated' :\n        'moveSpeed'\n    ];\n\n    var delta = DIRECTIONS_DELTA[direction](speed);\n\n    var canMove = rules.allowed('elements.move', {\n      shapes: selectedElements\n    });\n\n    if (canMove) {\n      modeling.moveElements(selectedElements, delta);\n    }\n  };\n\n}\n\nKeyboardMoveSelection.$inject = [\n  'config.keyboardMoveSelection',\n  'keyboard',\n  'modeling',\n  'rules',\n  'selection'\n];"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}