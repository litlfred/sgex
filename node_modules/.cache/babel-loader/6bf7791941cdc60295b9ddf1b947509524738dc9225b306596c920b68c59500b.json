{"ast":null,"code":"import { findNewLineStartIndex, getAnchorPointAdjustment } from './LayoutUtil';\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\n\n/**\n * @typedef {import('./LineAttachmentUtil').Attachment} Attachment\n *\n * @typedef {import('./LayoutUtil').FindNewLineStartIndexHints} FindNewLineStartIndexHints\n *\n * @typedef {import('../../../../model/Types').Label} Label\n *\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n */\n\n/**\n * @param {Point[]} oldWaypoints\n * @param {Point[]} newWaypoints\n * @param {Attachment} attachment\n * @param {FindNewLineStartIndexHints} hints\n *\n * @return {number}\n */\nexport function findNewLabelLineStartIndex(oldWaypoints, newWaypoints, attachment, hints) {\n  return findNewLineStartIndex(oldWaypoints, newWaypoints, attachment, hints);\n}\n\n/**\n * Calculate the required adjustment (move delta) for the given label\n * after the connection waypoints got updated.\n *\n * @param {Label} label\n * @param {Point[]} newWaypoints\n * @param {Point[]} oldWaypoints\n * @param {FindNewLineStartIndexHints} hints\n *\n * @return {Point}\n */\nexport function getLabelAdjustment(label, newWaypoints, oldWaypoints, hints) {\n  var labelPosition = getMid(label);\n  return getAnchorPointAdjustment(labelPosition, newWaypoints, oldWaypoints, hints).delta;\n}","map":{"version":3,"names":["findNewLineStartIndex","getAnchorPointAdjustment","getMid","findNewLabelLineStartIndex","oldWaypoints","newWaypoints","attachment","hints","getLabelAdjustment","label","labelPosition","delta"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/util/LabelLayoutUtil.js"],"sourcesContent":["import { findNewLineStartIndex, getAnchorPointAdjustment } from './LayoutUtil';\n\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\n\n/**\n * @typedef {import('./LineAttachmentUtil').Attachment} Attachment\n *\n * @typedef {import('./LayoutUtil').FindNewLineStartIndexHints} FindNewLineStartIndexHints\n *\n * @typedef {import('../../../../model/Types').Label} Label\n *\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n */\n\n/**\n * @param {Point[]} oldWaypoints\n * @param {Point[]} newWaypoints\n * @param {Attachment} attachment\n * @param {FindNewLineStartIndexHints} hints\n *\n * @return {number}\n */\nexport function findNewLabelLineStartIndex(oldWaypoints, newWaypoints, attachment, hints) {\n  return findNewLineStartIndex(oldWaypoints, newWaypoints, attachment, hints);\n}\n\n/**\n * Calculate the required adjustment (move delta) for the given label\n * after the connection waypoints got updated.\n *\n * @param {Label} label\n * @param {Point[]} newWaypoints\n * @param {Point[]} oldWaypoints\n * @param {FindNewLineStartIndexHints} hints\n *\n * @return {Point}\n */\nexport function getLabelAdjustment(label, newWaypoints, oldWaypoints, hints) {\n  var labelPosition = getMid(label);\n\n  return getAnchorPointAdjustment(labelPosition, newWaypoints, oldWaypoints, hints).delta;\n}"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,wBAAwB,QAAQ,cAAc;AAE9E,SAASC,MAAM,QAAQ,kCAAkC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,0BAA0BA,CAACC,YAAY,EAAEC,YAAY,EAAEC,UAAU,EAAEC,KAAK,EAAE;EACxF,OAAOP,qBAAqB,CAACI,YAAY,EAAEC,YAAY,EAAEC,UAAU,EAAEC,KAAK,CAAC;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAACC,KAAK,EAAEJ,YAAY,EAAED,YAAY,EAAEG,KAAK,EAAE;EAC3E,IAAIG,aAAa,GAAGR,MAAM,CAACO,KAAK,CAAC;EAEjC,OAAOR,wBAAwB,CAACS,aAAa,EAAEL,YAAY,EAAED,YAAY,EAAEG,KAAK,CAAC,CAACI,KAAK;AACzF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}