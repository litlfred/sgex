{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{PageLayout}from'./framework';import PATLogin from'./PATLogin';import useThemeImage from'../hooks/useThemeImage';import'./BranchListingPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BranchListingPage=()=>{const[pullRequests,setPullRequests]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[prPage,setPrPage]=useState(1);const[prSearchTerm,setPrSearchTerm]=useState('');const[prSortBy,setPrSortBy]=useState('updated');const[prSortOrder,setPrSortOrder]=useState('desc');const[deploymentStatuses,setDeploymentStatuses]=useState({});const[prFilter,setPrFilter]=useState('open');const[isAuthenticated,setIsAuthenticated]=useState(false);const[githubToken,setGithubToken]=useState(null);const[prComments,setPrComments]=useState({});const[loadingComments]=useState(false);// Removed setLoadingComments as it's not used\nconst[commentInputs,setCommentInputs]=useState({});const[submittingComments,setSubmittingComments]=useState({});const[expandedDiscussions,setExpandedDiscussions]=useState({});const[discussionSummaries,setDiscussionSummaries]=useState({});const[loadingSummaries,setLoadingSummaries]=useState(false);const ITEMS_PER_PAGE=10;// Theme-aware image paths\nconst mascotImage=useThemeImage('sgex-mascot.png');// GitHub authentication functions\nconst handleAuthSuccess=(token,octokitInstance)=>{setGithubToken(token);setIsAuthenticated(true);sessionStorage.setItem('github_token',token);};const handleLogout=()=>{setGithubToken(null);setIsAuthenticated(false);sessionStorage.removeItem('github_token');setPrComments({});};// Function to fetch PR comments summary\nconst fetchPRCommentsSummary=async prNumber=>{if(!githubToken)return null;try{const response=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,{headers:{'Authorization':`token ${githubToken}`,'Accept':'application/vnd.github.v3+json'}});if(!response.ok){throw new Error(`Failed to fetch comments: ${response.status}`);}const comments=await response.json();if(comments.length===0){return{count:0,lastComment:null};}const lastComment=comments[comments.length-1];return{count:comments.length,lastComment:{author:lastComment.user.login,created_at:new Date(lastComment.created_at),avatar_url:lastComment.user.avatar_url}};}catch(error){console.error(`Error fetching comment summary for PR ${prNumber}:`,error);return null;}};// Function to fetch all PR comments (for expanded view)\nconst fetchAllPRComments=async prNumber=>{if(!githubToken)return[];try{const response=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,{headers:{'Authorization':`token ${githubToken}`,'Accept':'application/vnd.github.v3+json'}});if(!response.ok){throw new Error(`Failed to fetch comments: ${response.status}`);}const comments=await response.json();return comments.map(comment=>({id:comment.id,author:comment.user.login,body:comment.body,created_at:new Date(comment.created_at).toLocaleDateString(),avatar_url:comment.user.avatar_url}));}catch(error){console.error(`Error fetching all comments for PR ${prNumber}:`,error);return[];}};// Function to load discussion summaries for visible PRs\nconst loadDiscussionSummaries=useCallback(async prs=>{if(!githubToken||prs.length===0)return;setLoadingSummaries(true);const summaries={};for(const pr of prs){summaries[pr.number]=await fetchPRCommentsSummary(pr.number);}setDiscussionSummaries(summaries);setLoadingSummaries(false);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[githubToken]);// Function to toggle discussion expansion\nconst toggleDiscussion=async prNumber=>{const isExpanded=expandedDiscussions[prNumber];if(!isExpanded){// Load all comments when expanding\nconst comments=await fetchAllPRComments(prNumber);setPrComments(prev=>({...prev,[prNumber]:comments}));}setExpandedDiscussions(prev=>({...prev,[prNumber]:!isExpanded}));};// Function to get discussion summary text\nconst getDiscussionSummaryText=prNumber=>{const summary=discussionSummaries[prNumber];if(loadingSummaries){return\"Loading discussion...\";}if(!summary||summary.count===0){return\"No comments yet\";}const{count,lastComment}=summary;const timeAgo=lastComment?getTimeAgo(lastComment.created_at):'';return`${count} comment${count>1?'s':''}, last by ${lastComment.author} ${timeAgo}`;};// Helper function to get relative time\nconst getTimeAgo=date=>{const now=new Date();const diffMs=now-date;const diffDays=Math.floor(diffMs/(1000*60*60*24));if(diffDays===0)return'today';if(diffDays===1)return'1 day ago';if(diffDays<7)return`${diffDays} days ago`;if(diffDays<30)return`${Math.floor(diffDays/7)} week${Math.floor(diffDays/7)>1?'s':''} ago`;return`${Math.floor(diffDays/30)} month${Math.floor(diffDays/30)>1?'s':''} ago`;};// Function to submit a comment\nconst submitComment=async(prNumber,commentText)=>{if(!githubToken||!commentText.trim())return false;setSubmittingComments(prev=>({...prev,[prNumber]:true}));try{const response=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,{method:'POST',headers:{'Authorization':`token ${githubToken}`,'Accept':'application/vnd.github.v3+json','Content-Type':'application/json'},body:JSON.stringify({body:commentText})});if(!response.ok){throw new Error(`Failed to submit comment: ${response.status}`);}setCommentInputs(prev=>({...prev,[prNumber]:''}));// Refresh both full comments (if expanded) and summary\nif(expandedDiscussions[prNumber]){const updatedComments=await fetchAllPRComments(prNumber);setPrComments(prev=>({...prev,[prNumber]:updatedComments}));}// Refresh the discussion summary\nconst updatedSummary=await fetchPRCommentsSummary(prNumber);setDiscussionSummaries(prev=>({...prev,[prNumber]:updatedSummary}));return true;}catch(error){console.error(`Error submitting comment for PR ${prNumber}:`,error);return false;}finally{setSubmittingComments(prev=>({...prev,[prNumber]:false}));}};// Function to check deployment status for a branch\nconst checkDeploymentStatus=async safeBranchName=>{try{const response=await fetch(`https://api.github.com/repos/litlfred/sgex/actions/workflows/deploy.yml/runs?branch=${safeBranchName}&per_page=1`,{headers:githubToken?{'Authorization':`token ${githubToken}`,'Accept':'application/vnd.github.v3+json'}:{'Accept':'application/vnd.github.v3+json'}});if(!response.ok){throw new Error(`Failed to fetch deployment status: ${response.status}`);}const data=await response.json();if(data.workflow_runs&&data.workflow_runs.length>0){const latestRun=data.workflow_runs[0];return{status:latestRun.status,conclusion:latestRun.conclusion,html_url:latestRun.html_url,created_at:latestRun.created_at};}return{status:'unknown',conclusion:null};}catch(error){console.error(`Error checking deployment status for ${safeBranchName}:`,error);return{status:'error',conclusion:'error'};}};// Function to update deployment statuses for visible PRs\nconst updateDeploymentStatuses=useCallback(async prs=>{if(prs.length===0)return;const statuses={};for(const pr of prs){statuses[pr.safeBranchName]=await checkDeploymentStatus(pr.safeBranchName);}setDeploymentStatuses(prev=>({...prev,...statuses}));// eslint-disable-next-line react-hooks/exhaustive-deps\n},[githubToken]);// Function to get deployment status display info\nconst getDeploymentStatusInfo=safeBranchName=>{const status=deploymentStatuses[safeBranchName];if(!status)return{text:'Checking...',class:'unknown'};if(status.status==='completed'&&status.conclusion==='success'){return{text:'✅ Deployed',class:'success'};}else if(status.status==='completed'&&status.conclusion==='failure'){return{text:'❌ Failed',class:'failed'};}else if(status.status==='in_progress'){return{text:'🔄 Deploying',class:'in-progress'};}else if(status.status==='queued'){return{text:'⏳ Queued',class:'queued'};}else if(status.status==='error'){return{text:'⚠️ Error',class:'error'};}else{return{text:'❓ Unknown',class:'unknown'};}};// Sorting functions\nconst sortPRs=function(prs,sortBy){let sortOrder=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'desc';return[...prs].sort((a,b)=>{let comparison=0;switch(sortBy){case'number':comparison=b.number-a.number;break;case'alphabetical':comparison=a.title.localeCompare(b.title);break;case'updated':default:const dateA=new Date(a.updatedAt);const dateB=new Date(b.updatedAt);comparison=dateB-dateA;break;}// Reverse comparison for ascending order\nreturn sortOrder==='asc'?-comparison:comparison;});};// Check for existing authentication on component mount\nuseEffect(()=>{const token=sessionStorage.getItem('github_token');if(token){setGithubToken(token);setIsAuthenticated(true);}},[]);// Fetch data\nuseEffect(()=>{const fetchData=async()=>{try{setLoading(true);const owner='litlfred';const repo='sgex';const prState=prFilter==='all'?'all':prFilter;const prResponse=await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=${prState}&sort=updated&per_page=100`);if(!prResponse.ok){throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);}const prData=await prResponse.json();const formattedPRs=prData.map(pr=>{const safeBranchName=pr.head.ref.replace(/\\//g,'-');return{id:pr.id,number:pr.number,title:pr.title,state:pr.state,author:pr.user.login,branchName:pr.head.ref,safeBranchName:safeBranchName,url:`./${safeBranchName}/index.html`,prUrl:pr.html_url,updatedAt:new Date(pr.updated_at).toLocaleDateString(),createdAt:new Date(pr.created_at).toLocaleDateString()};});setPullRequests(formattedPRs);if(githubToken){await loadDiscussionSummaries(formattedPRs.slice(0,ITEMS_PER_PAGE));}}catch(err){console.error('Error fetching data:',err);setError(err.message);// Fallback mock data\nif(err.message.includes('Failed to fetch')){console.log('Using fallback mock data...');const mockPRs=[{id:1,number:460,title:'Improve multi-page selector landing page for GitHub deployment',state:'open',author:'copilot',branchName:'copilot/fix-459',safeBranchName:'copilot-fix-459',url:'./sgex/copilot-fix-459/index.html',prUrl:'https://github.com/litlfred/sgex/pull/460',updatedAt:new Date().toLocaleDateString(),createdAt:new Date(Date.now()-86400000).toLocaleDateString()},{id:2,number:459,title:'Add enhanced PR preview functionality',state:'open',author:'developer',branchName:'feature/pr-preview',safeBranchName:'feature-pr-preview',url:'./sgex/feature-pr-preview/index.html',prUrl:'https://github.com/litlfred/sgex/pull/459',updatedAt:new Date(Date.now()-172800000).toLocaleDateString(),createdAt:new Date(Date.now()-345600000).toLocaleDateString()}];setPullRequests(mockPRs);setError(null);}}finally{setLoading(false);}};fetchData();},[prFilter,githubToken,loadDiscussionSummaries]);// Poll deployment statuses every 7 seconds for visible PRs\nuseEffect(()=>{if(pullRequests.length===0)return;const filtered=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const sorted=sortPRs(filtered,prSortBy,prSortOrder);const paginated=sorted.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);// Initial status check\nupdateDeploymentStatuses(paginated);// Set up polling every 7 seconds\nconst interval=setInterval(()=>{updateDeploymentStatuses(paginated);},7000);return()=>clearInterval(interval);},[pullRequests,prSearchTerm,prSortBy,prSortOrder,prPage,updateDeploymentStatuses]);// Load comments when pagination changes\nuseEffect(()=>{if(isAuthenticated&&pullRequests.length>0){const filtered=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const sorted=sortPRs(filtered,prSortBy,prSortOrder);const paginated=sorted.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);loadDiscussionSummaries(paginated);}},[prPage,prSearchTerm,prSortBy,prSortOrder,pullRequests,isAuthenticated,loadDiscussionSummaries]);// Filter and sort PRs\nconst filteredPRs=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const sortedPRs=sortPRs(filteredPRs,prSortBy,prSortOrder);const paginatedPRs=sortedPRs.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);const totalPRPages=Math.ceil(sortedPRs.length/ITEMS_PER_PAGE);if(loading){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing-loading\",showBreadcrumbs:false,children:/*#__PURE__*/_jsx(\"div\",{className:\"branch-listing-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading previews...\"})]})})});}if(error){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing-error\",showBreadcrumbs:false,children:/*#__PURE__*/_jsx(\"div\",{className:\"branch-listing-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Failed to load previews: \",error]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please try refreshing the page or check back later.\"})]})]})})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showBreadcrumbs:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing-content\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"prominent-info\",children:/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"\\uD83D\\uDC3E This landing page lists all available previews. Each branch and PR is automatically deployed to its own preview environment.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-section\",children:!isAuthenticated?/*#__PURE__*/_jsxs(\"div\",{className:\"login-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD10 GitHub Authentication\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Login with your GitHub Personal Access Token to view and add comments to pull requests:\"}),/*#__PURE__*/_jsx(PATLogin,{onAuthSuccess:handleAuthSuccess})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"authenticated-section\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u2705 Authenticated - You can now view and add comments to pull requests\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"logout-btn\",children:\"Logout\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-actions\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex/issues/new\",className:\"contribute-btn primary\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDC1B Report a Bug\"}),/*#__PURE__*/_jsx(\"a\",{href:\"./sgex/main/docs/\",className:\"contribute-btn secondary\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDCDA Documentation\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex\",className:\"contribute-btn tertiary\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDCE6 Source Code\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"preview-tabs\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"tab-button active\",children:[\"\\uD83D\\uDD04 Pull Request Previews (\",sortedPRs.length,\")\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-filter-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pr-filter\",children:\"Filter PRs:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"pr-filter\",value:prFilter,onChange:e=>{setPrFilter(e.target.value);setPrPage(1);},className:\"filter-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"open\",children:\"Open PRs Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"closed\",children:\"Closed PRs Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All PRs\"})]})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search pull requests by title or author...\",value:prSearchTerm,onChange:e=>{setPrSearchTerm(e.target.value);setPrPage(1);},className:\"pr-search\"}),/*#__PURE__*/_jsxs(\"select\",{value:prSortBy,onChange:e=>{setPrSortBy(e.target.value);setPrPage(1);},className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"updated\",children:\"Sort by Recent Updates\"}),/*#__PURE__*/_jsx(\"option\",{value:\"number\",children:\"Sort by PR Number\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alphabetical\",children:\"Sort Alphabetically\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:prSortOrder,onChange:e=>{setPrSortOrder(e.target.value);setPrPage(1);},className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"desc\",children:\"Descending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"asc\",children:\"Ascending\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pr-cards\",children:paginatedPRs.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-items\",children:prSearchTerm?/*#__PURE__*/_jsxs(\"p\",{children:[\"No pull requests match your search \\\"\",prSearchTerm,\"\\\".\"]}):/*#__PURE__*/_jsx(\"p\",{children:\"No pull request previews available at the moment.\"})}):paginatedPRs.map(pr=>{var _commentInputs$pr$num;return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card pr-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"item-name\",children:[\"#\",pr.number,\": \",pr.title]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-badges\",children:[/*#__PURE__*/_jsxs(\"span\",{className:`state-badge ${pr.state}`,children:[pr.state==='open'?'🟢':'🔴',\" \",pr.state]}),/*#__PURE__*/_jsx(\"span\",{className:`deployment-status ${getDeploymentStatusInfo(pr.safeBranchName).class}`,children:getDeploymentStatusInfo(pr.safeBranchName).text})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"pr-meta\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Branch:\"}),\" \",pr.branchName,\" \\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Author:\"}),\" \",pr.author]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Created: \",pr.createdAt,\" \\u2022 Updated: \",pr.updatedAt]}),isAuthenticated&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-summary-bar\",onClick:()=>toggleDiscussion(pr.number),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-summary-text\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"discussion-summary-icon\",children:\"\\uD83D\\uDCAC\"}),getDiscussionSummaryText(pr.number)]}),/*#__PURE__*/_jsx(\"span\",{className:`discussion-expand-icon ${expandedDiscussions[pr.number]?'expanded':''}`,children:\"\\u25B6\"})]}),expandedDiscussions[pr.number]&&/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-expanded-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"discussion-title\",children:\"Discussion\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-actions\",children:[/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/litlfred/sgex/pull/${pr.number}/files`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"discussion-action-btn\",children:\"\\uD83D\\uDCC1 View Files\"}),/*#__PURE__*/_jsx(\"a\",{href:pr.prUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"discussion-action-btn secondary\",children:\"\\uD83D\\uDD17 Full Discussion\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-input-section\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:commentInputs[pr.number]||'',onChange:e=>setCommentInputs(prev=>({...prev,[pr.number]:e.target.value})),placeholder:\"Add a comment...\",className:\"comment-input\",rows:3}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>submitComment(pr.number,commentInputs[pr.number]),disabled:!((_commentInputs$pr$num=commentInputs[pr.number])!==null&&_commentInputs$pr$num!==void 0&&_commentInputs$pr$num.trim())||submittingComments[pr.number],className:\"submit-comment-btn\",children:submittingComments[pr.number]?'Submitting...':'Add Comment'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"discussion-scroll-area\",children:loadingComments?/*#__PURE__*/_jsx(\"div\",{className:\"comments-loading\",children:\"Loading full discussion...\"}):prComments[pr.number]&&prComments[pr.number].length>0?/*#__PURE__*/_jsx(\"div\",{className:\"comments-list\",children:prComments[pr.number].map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:\"comment-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:comment.avatar_url,alt:comment.author,className:\"comment-avatar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-author\",children:comment.author}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-date\",children:comment.created_at})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-body\",children:comment.body})]},comment.id))}):/*#__PURE__*/_jsx(\"div\",{className:\"no-comments\",children:\"No comments yet. Be the first to comment!\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-actions\",children:[/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}),/*#__PURE__*/_jsx(\"a\",{href:pr.prUrl,className:\"pr-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCB View PR\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",pr.url]})})]},pr.id);})}),totalPRPages>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.max(1,prPage-1)),disabled:prPage===1,children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"pagination-info\",children:[\"Page \",prPage,\" of \",totalPRPages,\" (\",sortedPRs.length,\" total)\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.min(totalPRPages,prPage+1)),disabled:prPage===totalPRPages,children:\"Next \\u2192\"})]})]})]})});};export default BranchListingPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","PageLayout","PATLogin","useThemeImage","jsx","_jsx","jsxs","_jsxs","BranchListingPage","pullRequests","setPullRequests","loading","setLoading","error","setError","prPage","setPrPage","prSearchTerm","setPrSearchTerm","prSortBy","setPrSortBy","prSortOrder","setPrSortOrder","deploymentStatuses","setDeploymentStatuses","prFilter","setPrFilter","isAuthenticated","setIsAuthenticated","githubToken","setGithubToken","prComments","setPrComments","loadingComments","commentInputs","setCommentInputs","submittingComments","setSubmittingComments","expandedDiscussions","setExpandedDiscussions","discussionSummaries","setDiscussionSummaries","loadingSummaries","setLoadingSummaries","ITEMS_PER_PAGE","mascotImage","handleAuthSuccess","token","octokitInstance","sessionStorage","setItem","handleLogout","removeItem","fetchPRCommentsSummary","prNumber","response","fetch","headers","ok","Error","status","comments","json","length","count","lastComment","author","user","login","created_at","Date","avatar_url","console","fetchAllPRComments","map","comment","id","body","toLocaleDateString","loadDiscussionSummaries","prs","summaries","pr","number","toggleDiscussion","isExpanded","prev","getDiscussionSummaryText","summary","timeAgo","getTimeAgo","date","now","diffMs","diffDays","Math","floor","submitComment","commentText","trim","method","JSON","stringify","updatedComments","updatedSummary","checkDeploymentStatus","safeBranchName","data","workflow_runs","latestRun","conclusion","html_url","updateDeploymentStatuses","statuses","getDeploymentStatusInfo","text","class","sortPRs","sortBy","sortOrder","arguments","undefined","sort","a","b","comparison","title","localeCompare","dateA","updatedAt","dateB","getItem","fetchData","owner","repo","prState","prResponse","prData","formattedPRs","head","ref","replace","state","branchName","url","prUrl","updated_at","createdAt","slice","err","message","includes","log","mockPRs","filtered","filter","toLowerCase","sorted","paginated","interval","setInterval","clearInterval","filteredPRs","sortedPRs","paginatedPRs","totalPRPages","ceil","pageName","showBreadcrumbs","children","className","src","alt","onAuthSuccess","onClick","href","target","rel","htmlFor","value","onChange","e","type","placeholder","_commentInputs$pr$num","rows","disabled","max","min"],"sources":["/home/runner/work/sgex/sgex/src/components/BranchListingPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { PageLayout } from './framework';\nimport PATLogin from './PATLogin';\nimport useThemeImage from '../hooks/useThemeImage';\nimport './BranchListingPage.css';\n\nconst BranchListingPage = () => {\n    const [pullRequests, setPullRequests] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [prPage, setPrPage] = useState(1);\n    const [prSearchTerm, setPrSearchTerm] = useState('');\n    const [prSortBy, setPrSortBy] = useState('updated');\n    const [prSortOrder, setPrSortOrder] = useState('desc');\n    const [deploymentStatuses, setDeploymentStatuses] = useState({});\n    const [prFilter, setPrFilter] = useState('open');\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [githubToken, setGithubToken] = useState(null);\n    const [prComments, setPrComments] = useState({});\n    const [loadingComments] = useState(false); // Removed setLoadingComments as it's not used\n    const [commentInputs, setCommentInputs] = useState({});\n    const [submittingComments, setSubmittingComments] = useState({});\n    const [expandedDiscussions, setExpandedDiscussions] = useState({});\n    const [discussionSummaries, setDiscussionSummaries] = useState({});\n    const [loadingSummaries, setLoadingSummaries] = useState(false);\n\n    const ITEMS_PER_PAGE = 10;\n\n    // Theme-aware image paths\n    const mascotImage = useThemeImage('sgex-mascot.png');\n\n    // GitHub authentication functions\n    const handleAuthSuccess = (token, octokitInstance) => {\n        setGithubToken(token);\n        setIsAuthenticated(true);\n        sessionStorage.setItem('github_token', token);\n    };\n\n    const handleLogout = () => {\n        setGithubToken(null);\n        setIsAuthenticated(false);\n        sessionStorage.removeItem('github_token');\n        setPrComments({});\n    };\n\n    // Function to fetch PR comments summary\n    const fetchPRCommentsSummary = async (prNumber) => {\n        if (!githubToken) return null;\n        \n        try {\n            const response = await fetch(\n                `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n                {\n                    headers: {\n                        'Authorization': `token ${githubToken}`,\n                        'Accept': 'application/vnd.github.v3+json'\n                    }\n                }\n            );\n            \n            if (!response.ok) {\n                throw new Error(`Failed to fetch comments: ${response.status}`);\n            }\n            \n            const comments = await response.json();\n            if (comments.length === 0) {\n                return { count: 0, lastComment: null };\n            }\n            \n            const lastComment = comments[comments.length - 1];\n            return {\n                count: comments.length,\n                lastComment: {\n                    author: lastComment.user.login,\n                    created_at: new Date(lastComment.created_at),\n                    avatar_url: lastComment.user.avatar_url\n                }\n            };\n        } catch (error) {\n            console.error(`Error fetching comment summary for PR ${prNumber}:`, error);\n            return null;\n        }\n    };\n\n    // Function to fetch all PR comments (for expanded view)\n    const fetchAllPRComments = async (prNumber) => {\n        if (!githubToken) return [];\n        \n        try {\n            const response = await fetch(\n                `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n                {\n                    headers: {\n                        'Authorization': `token ${githubToken}`,\n                        'Accept': 'application/vnd.github.v3+json'\n                    }\n                }\n            );\n            \n            if (!response.ok) {\n                throw new Error(`Failed to fetch comments: ${response.status}`);\n            }\n            \n            const comments = await response.json();\n            return comments.map(comment => ({\n                id: comment.id,\n                author: comment.user.login,\n                body: comment.body,\n                created_at: new Date(comment.created_at).toLocaleDateString(),\n                avatar_url: comment.user.avatar_url\n            }));\n        } catch (error) {\n            console.error(`Error fetching all comments for PR ${prNumber}:`, error);\n            return [];\n        }\n    };\n\n    // Function to load discussion summaries for visible PRs\n    const loadDiscussionSummaries = useCallback(async (prs) => {\n        if (!githubToken || prs.length === 0) return;\n        \n        setLoadingSummaries(true);\n        const summaries = {};\n        \n        for (const pr of prs) {\n            summaries[pr.number] = await fetchPRCommentsSummary(pr.number);\n        }\n        \n        setDiscussionSummaries(summaries);\n        setLoadingSummaries(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [githubToken]);\n\n    // Function to toggle discussion expansion\n    const toggleDiscussion = async (prNumber) => {\n        const isExpanded = expandedDiscussions[prNumber];\n        \n        if (!isExpanded) {\n            // Load all comments when expanding\n            const comments = await fetchAllPRComments(prNumber);\n            setPrComments(prev => ({ ...prev, [prNumber]: comments }));\n        }\n        \n        setExpandedDiscussions(prev => ({\n            ...prev,\n            [prNumber]: !isExpanded\n        }));\n    };\n\n    // Function to get discussion summary text\n    const getDiscussionSummaryText = (prNumber) => {\n        const summary = discussionSummaries[prNumber];\n        \n        if (loadingSummaries) {\n            return \"Loading discussion...\";\n        }\n        \n        if (!summary || summary.count === 0) {\n            return \"No comments yet\";\n        }\n        \n        const { count, lastComment } = summary;\n        const timeAgo = lastComment ? getTimeAgo(lastComment.created_at) : '';\n        \n        return `${count} comment${count > 1 ? 's' : ''}, last by ${lastComment.author} ${timeAgo}`;\n    };\n\n    // Helper function to get relative time\n    const getTimeAgo = (date) => {\n        const now = new Date();\n        const diffMs = now - date;\n        const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n        \n        if (diffDays === 0) return 'today';\n        if (diffDays === 1) return '1 day ago';\n        if (diffDays < 7) return `${diffDays} days ago`;\n        if (diffDays < 30) return `${Math.floor(diffDays / 7)} week${Math.floor(diffDays / 7) > 1 ? 's' : ''} ago`;\n        return `${Math.floor(diffDays / 30)} month${Math.floor(diffDays / 30) > 1 ? 's' : ''} ago`;\n    };\n\n    // Function to submit a comment\n    const submitComment = async (prNumber, commentText) => {\n        if (!githubToken || !commentText.trim()) return false;\n        \n        setSubmittingComments(prev => ({ ...prev, [prNumber]: true }));\n        \n        try {\n            const response = await fetch(\n                `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `token ${githubToken}`,\n                        'Accept': 'application/vnd.github.v3+json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        body: commentText\n                    })\n                }\n            );\n            \n            if (!response.ok) {\n                throw new Error(`Failed to submit comment: ${response.status}`);\n            }\n            \n            setCommentInputs(prev => ({ ...prev, [prNumber]: '' }));\n            \n            // Refresh both full comments (if expanded) and summary\n            if (expandedDiscussions[prNumber]) {\n                const updatedComments = await fetchAllPRComments(prNumber);\n                setPrComments(prev => ({ ...prev, [prNumber]: updatedComments }));\n            }\n            \n            // Refresh the discussion summary\n            const updatedSummary = await fetchPRCommentsSummary(prNumber);\n            setDiscussionSummaries(prev => ({ ...prev, [prNumber]: updatedSummary }));\n            \n            return true;\n        } catch (error) {\n            console.error(`Error submitting comment for PR ${prNumber}:`, error);\n            return false;\n        } finally {\n            setSubmittingComments(prev => ({ ...prev, [prNumber]: false }));\n        }\n    };\n\n    // Function to check deployment status for a branch\n    const checkDeploymentStatus = async (safeBranchName) => {\n        try {\n            const response = await fetch(\n                `https://api.github.com/repos/litlfred/sgex/actions/workflows/deploy.yml/runs?branch=${safeBranchName}&per_page=1`,\n                {\n                    headers: githubToken ? {\n                        'Authorization': `token ${githubToken}`,\n                        'Accept': 'application/vnd.github.v3+json'\n                    } : {\n                        'Accept': 'application/vnd.github.v3+json'\n                    }\n                }\n            );\n            \n            if (!response.ok) {\n                throw new Error(`Failed to fetch deployment status: ${response.status}`);\n            }\n            \n            const data = await response.json();\n            if (data.workflow_runs && data.workflow_runs.length > 0) {\n                const latestRun = data.workflow_runs[0];\n                return {\n                    status: latestRun.status,\n                    conclusion: latestRun.conclusion,\n                    html_url: latestRun.html_url,\n                    created_at: latestRun.created_at\n                };\n            }\n            \n            return { status: 'unknown', conclusion: null };\n        } catch (error) {\n            console.error(`Error checking deployment status for ${safeBranchName}:`, error);\n            return { status: 'error', conclusion: 'error' };\n        }\n    };\n\n    // Function to update deployment statuses for visible PRs\n    const updateDeploymentStatuses = useCallback(async (prs) => {\n        if (prs.length === 0) return;\n        \n        const statuses = {};\n        for (const pr of prs) {\n            statuses[pr.safeBranchName] = await checkDeploymentStatus(pr.safeBranchName);\n        }\n        \n        setDeploymentStatuses(prev => ({ ...prev, ...statuses }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [githubToken]);\n\n    // Function to get deployment status display info\n    const getDeploymentStatusInfo = (safeBranchName) => {\n        const status = deploymentStatuses[safeBranchName];\n        if (!status) return { text: 'Checking...', class: 'unknown' };\n        \n        if (status.status === 'completed' && status.conclusion === 'success') {\n            return { text: '✅ Deployed', class: 'success' };\n        } else if (status.status === 'completed' && status.conclusion === 'failure') {\n            return { text: '❌ Failed', class: 'failed' };\n        } else if (status.status === 'in_progress') {\n            return { text: '🔄 Deploying', class: 'in-progress' };\n        } else if (status.status === 'queued') {\n            return { text: '⏳ Queued', class: 'queued' };\n        } else if (status.status === 'error') {\n            return { text: '⚠️ Error', class: 'error' };\n        } else {\n            return { text: '❓ Unknown', class: 'unknown' };\n        }\n    };\n\n    // Sorting functions\n    const sortPRs = (prs, sortBy, sortOrder = 'desc') => {\n        return [...prs].sort((a, b) => {\n            let comparison = 0;\n            switch (sortBy) {\n                case 'number':\n                    comparison = b.number - a.number;\n                    break;\n                case 'alphabetical':\n                    comparison = a.title.localeCompare(b.title);\n                    break;\n                case 'updated':\n                default:\n                    const dateA = new Date(a.updatedAt);\n                    const dateB = new Date(b.updatedAt);\n                    comparison = dateB - dateA;\n                    break;\n            }\n            \n            // Reverse comparison for ascending order\n            return sortOrder === 'asc' ? -comparison : comparison;\n        });\n    };\n\n    // Check for existing authentication on component mount\n    useEffect(() => {\n        const token = sessionStorage.getItem('github_token');\n        if (token) {\n            setGithubToken(token);\n            setIsAuthenticated(true);\n        }\n    }, []);\n\n    // Fetch data\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                \n                const owner = 'litlfred';\n                const repo = 'sgex';\n                \n                const prState = prFilter === 'all' ? 'all' : prFilter;\n                const prResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=${prState}&sort=updated&per_page=100`);\n                if (!prResponse.ok) {\n                    throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);\n                }\n                const prData = await prResponse.json();\n                \n                const formattedPRs = prData.map(pr => {\n                    const safeBranchName = pr.head.ref.replace(/\\//g, '-');\n                    return {\n                        id: pr.id,\n                        number: pr.number,\n                        title: pr.title,\n                        state: pr.state,\n                        author: pr.user.login,\n                        branchName: pr.head.ref,\n                        safeBranchName: safeBranchName,\n                        url: `./${safeBranchName}/index.html`,\n                        prUrl: pr.html_url,\n                        updatedAt: new Date(pr.updated_at).toLocaleDateString(),\n                        createdAt: new Date(pr.created_at).toLocaleDateString()\n                    };\n                });\n                \n                setPullRequests(formattedPRs);\n                \n                if (githubToken) {\n                    await loadDiscussionSummaries(formattedPRs.slice(0, ITEMS_PER_PAGE));\n                }\n            } catch (err) {\n                console.error('Error fetching data:', err);\n                setError(err.message);\n                \n                // Fallback mock data\n                if (err.message.includes('Failed to fetch')) {\n                    console.log('Using fallback mock data...');\n                    const mockPRs = [\n                        {\n                            id: 1,\n                            number: 460,\n                            title: 'Improve multi-page selector landing page for GitHub deployment',\n                            state: 'open',\n                            author: 'copilot',\n                            branchName: 'copilot/fix-459',\n                            safeBranchName: 'copilot-fix-459',\n                            url: './sgex/copilot-fix-459/index.html',\n                            prUrl: 'https://github.com/litlfred/sgex/pull/460',\n                            updatedAt: new Date().toLocaleDateString(),\n                            createdAt: new Date(Date.now() - 86400000).toLocaleDateString()\n                        },\n                        {\n                            id: 2,\n                            number: 459,\n                            title: 'Add enhanced PR preview functionality',\n                            state: 'open',\n                            author: 'developer',\n                            branchName: 'feature/pr-preview',\n                            safeBranchName: 'feature-pr-preview',\n                            url: './sgex/feature-pr-preview/index.html',\n                            prUrl: 'https://github.com/litlfred/sgex/pull/459',\n                            updatedAt: new Date(Date.now() - 172800000).toLocaleDateString(),\n                            createdAt: new Date(Date.now() - 345600000).toLocaleDateString()\n                        }\n                    ];\n                    setPullRequests(mockPRs);\n                    setError(null);\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [prFilter, githubToken, loadDiscussionSummaries]);\n\n    // Poll deployment statuses every 7 seconds for visible PRs\n    useEffect(() => {\n        if (pullRequests.length === 0) return;\n        \n        const filtered = pullRequests.filter(pr => \n            pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n            pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n        );\n        const sorted = sortPRs(filtered, prSortBy, prSortOrder);\n        const paginated = sorted.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n        \n        // Initial status check\n        updateDeploymentStatuses(paginated);\n        \n        // Set up polling every 7 seconds\n        const interval = setInterval(() => {\n            updateDeploymentStatuses(paginated);\n        }, 7000);\n        \n        return () => clearInterval(interval);\n    }, [pullRequests, prSearchTerm, prSortBy, prSortOrder, prPage, updateDeploymentStatuses]);\n\n    // Load comments when pagination changes\n    useEffect(() => {\n        if (isAuthenticated && pullRequests.length > 0) {\n            const filtered = pullRequests.filter(pr => \n                pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n                pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n            );\n            const sorted = sortPRs(filtered, prSortBy, prSortOrder);\n            const paginated = sorted.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n            loadDiscussionSummaries(paginated);\n        }\n    }, [prPage, prSearchTerm, prSortBy, prSortOrder, pullRequests, isAuthenticated, loadDiscussionSummaries]);\n\n    // Filter and sort PRs\n    const filteredPRs = pullRequests.filter(pr => \n        pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n        pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n    );\n    const sortedPRs = sortPRs(filteredPRs, prSortBy, prSortOrder);\n    const paginatedPRs = sortedPRs.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n    const totalPRPages = Math.ceil(sortedPRs.length / ITEMS_PER_PAGE);\n\n    if (loading) {\n        return (\n            <PageLayout pageName=\"branch-listing-loading\" showBreadcrumbs={false}>\n                <div className=\"branch-listing-content\">\n                    <div className=\"branch-listing-header\">\n                        <h1><img src={mascotImage} alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n                        <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n                        <div className=\"loading\">Loading previews...</div>\n                    </div>\n                </div>\n            </PageLayout>\n        );\n    }\n\n    if (error) {\n        return (\n            <PageLayout pageName=\"branch-listing-error\" showBreadcrumbs={false}>\n                <div className=\"branch-listing-content\">\n                    <div className=\"branch-listing-header\">\n                        <h1><img src={mascotImage} alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n                        <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n                        <div className=\"error\">\n                            <p>Failed to load previews: {error}</p>\n                            <p>Please try refreshing the page or check back later.</p>\n                        </div>\n                    </div>\n                </div>\n            </PageLayout>\n        );\n    }\n\n    return (\n        <PageLayout pageName=\"branch-listing\" showBreadcrumbs={false}>\n            <div className=\"branch-listing-content\">\n                <header className=\"branch-listing-header\">\n                    <h1><img src={mascotImage} alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n                    <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n                    \n                    <div className=\"prominent-info\">\n                        <p className=\"info-text\">\n                            🐾 This landing page lists all available previews. \n                            Each branch and PR is automatically deployed to its own preview environment.\n                        </p>\n                    </div>\n                    \n                    <div className=\"auth-section\">\n                        {!isAuthenticated ? (\n                            <div className=\"login-section\">\n                                <h3>🔐 GitHub Authentication</h3>\n                                <p>Login with your GitHub Personal Access Token to view and add comments to pull requests:</p>\n                                <PATLogin onAuthSuccess={handleAuthSuccess} />\n                            </div>\n                        ) : (\n                            <div className=\"authenticated-section\">\n                                <p>✅ Authenticated - You can now view and add comments to pull requests</p>\n                                <button onClick={handleLogout} className=\"logout-btn\">\n                                    Logout\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </header>\n\n                <div className=\"main-actions\">\n                    <a \n                        href=\"https://github.com/litlfred/sgex/issues/new\" \n                        className=\"contribute-btn primary\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        🐛 Report a Bug\n                    </a>\n                    <a \n                        href=\"./sgex/main/docs/\" \n                        className=\"contribute-btn secondary\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        📚 Documentation\n                    </a>\n                    <a \n                        href=\"https://github.com/litlfred/sgex\" \n                        className=\"contribute-btn tertiary\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        📦 Source Code\n                    </a>\n                </div>\n\n                <div className=\"preview-tabs\">\n                    <button className=\"tab-button active\">\n                        🔄 Pull Request Previews ({sortedPRs.length})\n                    </button>\n                </div>\n\n                <div className=\"pr-section\">\n                    <div className=\"pr-controls\">\n                        <div className=\"pr-filter-section\">\n                            <label htmlFor=\"pr-filter\">Filter PRs:</label>\n                            <select\n                                id=\"pr-filter\"\n                                value={prFilter}\n                                onChange={(e) => {\n                                    setPrFilter(e.target.value);\n                                    setPrPage(1);\n                                }}\n                                className=\"filter-select\"\n                            >\n                                <option value=\"open\">Open PRs Only</option>\n                                <option value=\"closed\">Closed PRs Only</option>\n                                <option value=\"all\">All PRs</option>\n                            </select>\n                        </div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search pull requests by title or author...\"\n                            value={prSearchTerm}\n                            onChange={(e) => {\n                                setPrSearchTerm(e.target.value);\n                                setPrPage(1);\n                            }}\n                            className=\"pr-search\"\n                        />\n                        <select\n                            value={prSortBy}\n                            onChange={(e) => {\n                                setPrSortBy(e.target.value);\n                                setPrPage(1);\n                            }}\n                            className=\"sort-select\"\n                        >\n                            <option value=\"updated\">Sort by Recent Updates</option>\n                            <option value=\"number\">Sort by PR Number</option>\n                            <option value=\"alphabetical\">Sort Alphabetically</option>\n                        </select>\n                        <select\n                            value={prSortOrder}\n                            onChange={(e) => {\n                                setPrSortOrder(e.target.value);\n                                setPrPage(1);\n                            }}\n                            className=\"sort-select\"\n                        >\n                            <option value=\"desc\">Descending</option>\n                            <option value=\"asc\">Ascending</option>\n                        </select>\n                    </div>\n\n                    <div className=\"pr-cards\">\n                        {paginatedPRs.length === 0 ? (\n                            <div className=\"no-items\">\n                                {prSearchTerm ? (\n                                    <p>No pull requests match your search \"{prSearchTerm}\".</p>\n                                ) : (\n                                    <p>No pull request previews available at the moment.</p>\n                                )}\n                            </div>\n                        ) : (\n                            paginatedPRs.map((pr) => (\n                                <div key={pr.id} className=\"preview-card pr-card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"item-name\">#{pr.number}: {pr.title}</h3>\n                                        <div className=\"card-badges\">\n                                            <span className={`state-badge ${pr.state}`}>\n                                                {pr.state === 'open' ? '🟢' : '🔴'} {pr.state}\n                                            </span>\n                                            <span className={`deployment-status ${getDeploymentStatusInfo(pr.safeBranchName).class}`}>\n                                                {getDeploymentStatusInfo(pr.safeBranchName).text}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    \n                                    <div className=\"card-body\">\n                                        <p className=\"pr-meta\">\n                                            <strong>Branch:</strong> {pr.branchName} • <strong>Author:</strong> {pr.author}\n                                        </p>\n                                        <p className=\"item-date\">\n                                            Created: {pr.createdAt} • Updated: {pr.updatedAt}\n                                        </p>\n                                        \n                                        {isAuthenticated && (\n                                            <div>\n                                                {/* Discussion Summary Status Bar */}\n                                                <div \n                                                    className=\"discussion-summary-bar\"\n                                                    onClick={() => toggleDiscussion(pr.number)}\n                                                >\n                                                    <div className=\"discussion-summary-text\">\n                                                        <span className=\"discussion-summary-icon\">💬</span>\n                                                        {getDiscussionSummaryText(pr.number)}\n                                                    </div>\n                                                    <span className={`discussion-expand-icon ${expandedDiscussions[pr.number] ? 'expanded' : ''}`}>\n                                                        ▶\n                                                    </span>\n                                                </div>\n\n                                                {/* Expanded Discussion Section */}\n                                                {expandedDiscussions[pr.number] && (\n                                                    <div className=\"discussion-expanded-section\">\n                                                        <div className=\"discussion-header\">\n                                                            <h4 className=\"discussion-title\">Discussion</h4>\n                                                            <div className=\"discussion-actions\">\n                                                                <a \n                                                                    href={`https://github.com/litlfred/sgex/pull/${pr.number}/files`}\n                                                                    target=\"_blank\"\n                                                                    rel=\"noopener noreferrer\"\n                                                                    className=\"discussion-action-btn\"\n                                                                >\n                                                                    📁 View Files\n                                                                </a>\n                                                                <a \n                                                                    href={pr.prUrl}\n                                                                    target=\"_blank\"\n                                                                    rel=\"noopener noreferrer\"\n                                                                    className=\"discussion-action-btn secondary\"\n                                                                >\n                                                                    🔗 Full Discussion\n                                                                </a>\n                                                            </div>\n                                                        </div>\n                                                        \n                                                        {/* Comment Input at Top */}\n                                                        <div className=\"comment-input-section\">\n                                                            <textarea\n                                                                value={commentInputs[pr.number] || ''}\n                                                                onChange={(e) => setCommentInputs(prev => ({\n                                                                    ...prev,\n                                                                    [pr.number]: e.target.value\n                                                                }))}\n                                                                placeholder=\"Add a comment...\"\n                                                                className=\"comment-input\"\n                                                                rows={3}\n                                                            />\n                                                            <button\n                                                                onClick={() => submitComment(pr.number, commentInputs[pr.number])}\n                                                                disabled={!commentInputs[pr.number]?.trim() || submittingComments[pr.number]}\n                                                                className=\"submit-comment-btn\"\n                                                            >\n                                                                {submittingComments[pr.number] ? 'Submitting...' : 'Add Comment'}\n                                                            </button>\n                                                        </div>\n                                                        \n                                                        {/* Scrollable Comments Area */}\n                                                        <div className=\"discussion-scroll-area\">\n                                                            {loadingComments ? (\n                                                                <div className=\"comments-loading\">Loading full discussion...</div>\n                                                            ) : prComments[pr.number] && prComments[pr.number].length > 0 ? (\n                                                                <div className=\"comments-list\">\n                                                                    {prComments[pr.number].map((comment) => (\n                                                                        <div key={comment.id} className=\"comment-item\">\n                                                                            <div className=\"comment-header\">\n                                                                                <img \n                                                                                    src={comment.avatar_url} \n                                                                                    alt={comment.author} \n                                                                                    className=\"comment-avatar\"\n                                                                                />\n                                                                                <span className=\"comment-author\">{comment.author}</span>\n                                                                                <span className=\"comment-date\">{comment.created_at}</span>\n                                                                            </div>\n                                                                            <div className=\"comment-body\">{comment.body}</div>\n                                                                        </div>\n                                                                    ))}\n                                                                </div>\n                                                            ) : (\n                                                                <div className=\"no-comments\">No comments yet. Be the first to comment!</div>\n                                                            )}\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </div>\n                                        )}\n                                        \n                                        <div className=\"pr-actions\">\n                                            <a \n                                                href={pr.url} \n                                                className=\"preview-link\"\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <span>🚀 View Preview</span>\n                                            </a>\n                                            \n                                            <a \n                                                href={pr.prUrl} \n                                                className=\"pr-link\"\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <span>📋 View PR</span>\n                                            </a>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"card-footer\">\n                                        <small className=\"preview-path\">\n                                            Preview URL: {pr.url}\n                                        </small>\n                                    </div>\n                                </div>\n                            ))\n                        )}\n                    </div>\n\n                    {totalPRPages > 1 && (\n                        <div className=\"pagination\">\n                            <button \n                                className=\"pagination-btn\"\n                                onClick={() => setPrPage(Math.max(1, prPage - 1))}\n                                disabled={prPage === 1}\n                            >\n                                ← Previous\n                            </button>\n                            <span className=\"pagination-info\">\n                                Page {prPage} of {totalPRPages} ({sortedPRs.length} total)\n                            </span>\n                            <button \n                                className=\"pagination-btn\"\n                                onClick={() => setPrPage(Math.min(totalPRPages, prPage + 1))}\n                                disabled={prPage === totalPRPages}\n                            >\n                                Next →\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </PageLayout>\n    );\n};\n\nexport default BranchListingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}