{"ast":null,"code":"import { isEventSubProcess } from '../../../../util/DiUtil';\nimport { getBusinessObject, is } from '../../../../util/ModelUtil';\nexport const NON_INTERRUPTING_EVENT_TYPES = ['bpmn:MessageEventDefinition', 'bpmn:TimerEventDefinition', 'bpmn:EscalationEventDefinition', 'bpmn:ConditionalEventDefinition', 'bpmn:SignalEventDefinition'];\nexport function canBeNonInterrupting(shape) {\n  const businessObject = getBusinessObject(shape);\n  if (!is(businessObject, 'bpmn:BoundaryEvent') && !(is(businessObject, 'bpmn:StartEvent') && isEventSubProcess(businessObject.$parent))) {\n    return false;\n  }\n  const eventDefinitions = businessObject.get('eventDefinitions');\n  if (!eventDefinitions || !eventDefinitions.length) {\n    return false;\n  }\n  return NON_INTERRUPTING_EVENT_TYPES.some(event => is(eventDefinitions[0], event));\n}\nexport function getInterruptingProperty(shape) {\n  return is(shape, 'bpmn:BoundaryEvent') ? 'cancelActivity' : 'isInterrupting';\n}","map":{"version":3,"names":["isEventSubProcess","getBusinessObject","is","NON_INTERRUPTING_EVENT_TYPES","canBeNonInterrupting","shape","businessObject","$parent","eventDefinitions","get","length","some","event","getInterruptingProperty"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/util/NonInterruptingUtil.js"],"sourcesContent":["import { isEventSubProcess } from '../../../../util/DiUtil';\nimport { getBusinessObject, is } from '../../../../util/ModelUtil';\n\nexport const NON_INTERRUPTING_EVENT_TYPES = [\n  'bpmn:MessageEventDefinition',\n  'bpmn:TimerEventDefinition',\n  'bpmn:EscalationEventDefinition',\n  'bpmn:ConditionalEventDefinition',\n  'bpmn:SignalEventDefinition'\n];\n\nexport function canBeNonInterrupting(shape) {\n\n  const businessObject = getBusinessObject(shape);\n\n  if (\n    !is(businessObject, 'bpmn:BoundaryEvent') &&\n    !(is(businessObject, 'bpmn:StartEvent') && isEventSubProcess(businessObject.$parent))\n  ) {\n    return false;\n  }\n\n  const eventDefinitions = businessObject.get('eventDefinitions');\n  if (!eventDefinitions || !eventDefinitions.length) {\n    return false;\n  }\n\n  return NON_INTERRUPTING_EVENT_TYPES.some(event => is(eventDefinitions[0], event));\n}\n\nexport function getInterruptingProperty(shape) {\n  return is(shape, 'bpmn:BoundaryEvent') ? 'cancelActivity' : 'isInterrupting';\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,iBAAiB,EAAEC,EAAE,QAAQ,4BAA4B;AAElE,OAAO,MAAMC,4BAA4B,GAAG,CAC1C,6BAA6B,EAC7B,2BAA2B,EAC3B,gCAAgC,EAChC,iCAAiC,EACjC,4BAA4B,CAC7B;AAED,OAAO,SAASC,oBAAoBA,CAACC,KAAK,EAAE;EAE1C,MAAMC,cAAc,GAAGL,iBAAiB,CAACI,KAAK,CAAC;EAE/C,IACE,CAACH,EAAE,CAACI,cAAc,EAAE,oBAAoB,CAAC,IACzC,EAAEJ,EAAE,CAACI,cAAc,EAAE,iBAAiB,CAAC,IAAIN,iBAAiB,CAACM,cAAc,CAACC,OAAO,CAAC,CAAC,EACrF;IACA,OAAO,KAAK;EACd;EAEA,MAAMC,gBAAgB,GAAGF,cAAc,CAACG,GAAG,CAAC,kBAAkB,CAAC;EAC/D,IAAI,CAACD,gBAAgB,IAAI,CAACA,gBAAgB,CAACE,MAAM,EAAE;IACjD,OAAO,KAAK;EACd;EAEA,OAAOP,4BAA4B,CAACQ,IAAI,CAACC,KAAK,IAAIV,EAAE,CAACM,gBAAgB,CAAC,CAAC,CAAC,EAAEI,KAAK,CAAC,CAAC;AACnF;AAEA,OAAO,SAASC,uBAAuBA,CAACR,KAAK,EAAE;EAC7C,OAAOH,EAAE,CAACG,KAAK,EAAE,oBAAoB,CAAC,GAAG,gBAAgB,GAAG,gBAAgB;AAC9E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}