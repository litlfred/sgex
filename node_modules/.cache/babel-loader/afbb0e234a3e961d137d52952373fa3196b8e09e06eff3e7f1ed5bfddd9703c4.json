{"ast":null,"code":"import _objectSpread from \"/home/runner/work/sgex/sgex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport inherits from 'inherits-browser';\nimport { assign, forEach, isObject } from 'min-dash';\nimport BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\nimport { isExpanded, isHorizontal, isEventSubProcess } from '../util/DiUtil';\nimport { getLabel } from '../util/LabelUtil';\nimport { is } from '../util/ModelUtil';\nimport { createLine } from 'diagram-js/lib/util/RenderUtil';\nimport { isTypedEvent, isThrowEvent, isCollection, getBounds, getDi, getSemantic, getCirclePath, getRoundRectPath, getDiamondPath, getRectPath, getFillColor, getStrokeColor, getLabelColor, getHeight, getWidth } from './BpmnRenderUtil';\nimport { query as domQuery } from 'min-dom';\nimport { append as svgAppend, attr as svgAttr, create as svgCreate, classes as svgClasses } from 'tiny-svg';\nimport { rotate, transform, translate } from 'diagram-js/lib/util/SvgTransformUtil';\nimport Ids from 'ids';\nimport { black } from './BpmnRenderUtil';\nvar markerIds = new Ids();\nvar ELEMENT_LABEL_DISTANCE = 10,\n  INNER_OUTER_DIST = 3,\n  PARTICIPANT_STROKE_WIDTH = 1.5,\n  TASK_BORDER_RADIUS = 10;\nvar DEFAULT_OPACITY = 0.95,\n  FULL_OPACITY = 1,\n  LOW_OPACITY = 0.25;\n\n/**\n * @typedef { Partial<{\n *   defaultFillColor: string,\n *   defaultStrokeColor: string,\n *   defaultLabelColor: string\n * }> } BpmnRendererConfig\n *\n * @typedef { Partial<{\n *   fill: string,\n *   stroke: string,\n *   width: string,\n *   height: string\n * }> } Attrs\n */\n\n/**\n * @typedef { import('../model/Types').Element } Element\n * @typedef { import('../model/Types').Shape } Shape\n * @typedef { import('../model/Types').Connection } Connection\n */\n\n/**\n * A renderer for BPMN elements\n *\n * @param {BpmnRendererConfig} config\n * @param {import('diagram-js/lib/core/EventBus').default} eventBus\n * @param {import('diagram-js/lib/draw/Styles').default} styles\n * @param {import('./PathMap').default} pathMap\n * @param {import('diagram-js/lib/core/Canvas').default} canvas\n * @param {import('./TextRenderer').default} textRenderer\n * @param {number} [priority]\n */\nexport default function BpmnRenderer(config, eventBus, styles, pathMap, canvas, textRenderer, priority) {\n  BaseRenderer.call(this, eventBus, priority);\n  var defaultFillColor = config && config.defaultFillColor,\n    defaultStrokeColor = config && config.defaultStrokeColor,\n    defaultLabelColor = config && config.defaultLabelColor;\n  function shapeStyle(attrs) {\n    return styles.computeStyle(attrs, {\n      strokeLinecap: 'round',\n      strokeLinejoin: 'round',\n      stroke: black,\n      strokeWidth: 2,\n      fill: 'white'\n    });\n  }\n  function lineStyle(attrs) {\n    return styles.computeStyle(attrs, ['no-fill'], {\n      strokeLinecap: 'round',\n      strokeLinejoin: 'round',\n      stroke: black,\n      strokeWidth: 2\n    });\n  }\n  function addMarker(id, options) {\n    var {\n      ref = {\n        x: 0,\n        y: 0\n      },\n      scale = 1,\n      element,\n      parentGfx = canvas._svg\n    } = options;\n    var marker = svgCreate('marker', {\n      id: id,\n      viewBox: '0 0 20 20',\n      refX: ref.x,\n      refY: ref.y,\n      markerWidth: 20 * scale,\n      markerHeight: 20 * scale,\n      orient: 'auto'\n    });\n    svgAppend(marker, element);\n    var defs = domQuery(':scope > defs', parentGfx);\n    if (!defs) {\n      defs = svgCreate('defs');\n      svgAppend(parentGfx, defs);\n    }\n    svgAppend(defs, marker);\n  }\n  function marker(parentGfx, type, fill, stroke) {\n    var id = markerIds.nextPrefixed('marker-');\n    createMarker(parentGfx, id, type, fill, stroke);\n    return 'url(#' + id + ')';\n  }\n  function createMarker(parentGfx, id, type, fill, stroke) {\n    if (type === 'sequenceflow-end') {\n      var sequenceflowEnd = svgCreate('path', _objectSpread({\n        d: 'M 1 5 L 11 10 L 1 15 Z'\n      }, shapeStyle({\n        fill: stroke,\n        stroke: stroke,\n        strokeWidth: 1\n      })));\n      addMarker(id, {\n        element: sequenceflowEnd,\n        ref: {\n          x: 11,\n          y: 10\n        },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n    if (type === 'messageflow-start') {\n      var messageflowStart = svgCreate('circle', _objectSpread({\n        cx: 6,\n        cy: 6,\n        r: 3.5\n      }, shapeStyle({\n        fill,\n        stroke: stroke,\n        strokeWidth: 1,\n        // fix for safari / chrome / firefox bug not correctly\n        // resetting stroke dash array\n        strokeDasharray: [10000, 1]\n      })));\n      addMarker(id, {\n        element: messageflowStart,\n        ref: {\n          x: 6,\n          y: 6\n        },\n        parentGfx\n      });\n    }\n    if (type === 'messageflow-end') {\n      var messageflowEnd = svgCreate('path', _objectSpread({\n        d: 'm 1 5 l 0 -3 l 7 3 l -7 3 z'\n      }, shapeStyle({\n        fill,\n        stroke: stroke,\n        strokeWidth: 1,\n        // fix for safari / chrome / firefox bug not correctly\n        // resetting stroke dash array\n        strokeDasharray: [10000, 1]\n      })));\n      addMarker(id, {\n        element: messageflowEnd,\n        ref: {\n          x: 8.5,\n          y: 5\n        },\n        parentGfx\n      });\n    }\n    if (type === 'association-start') {\n      var associationStart = svgCreate('path', _objectSpread({\n        d: 'M 11 5 L 1 10 L 11 15'\n      }, lineStyle({\n        fill: 'none',\n        stroke,\n        strokeWidth: 1.5,\n        // fix for safari / chrome / firefox bug not correctly\n        // resetting stroke dash array\n        strokeDasharray: [10000, 1]\n      })));\n      addMarker(id, {\n        element: associationStart,\n        ref: {\n          x: 1,\n          y: 10\n        },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n    if (type === 'association-end') {\n      var associationEnd = svgCreate('path', _objectSpread({\n        d: 'M 1 5 L 11 10 L 1 15'\n      }, lineStyle({\n        fill: 'none',\n        stroke,\n        strokeWidth: 1.5,\n        // fix for safari / chrome / firefox bug not correctly\n        // resetting stroke dash array\n        strokeDasharray: [10000, 1]\n      })));\n      addMarker(id, {\n        element: associationEnd,\n        ref: {\n          x: 11,\n          y: 10\n        },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n    if (type === 'conditional-flow-marker') {\n      var conditionalFlowMarker = svgCreate('path', _objectSpread({\n        d: 'M 0 10 L 8 6 L 16 10 L 8 14 Z'\n      }, shapeStyle({\n        fill,\n        stroke: stroke\n      })));\n      addMarker(id, {\n        element: conditionalFlowMarker,\n        ref: {\n          x: -1,\n          y: 10\n        },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n    if (type === 'conditional-default-flow-marker') {\n      var defaultFlowMarker = svgCreate('path', _objectSpread({\n        d: 'M 6 4 L 10 16'\n      }, shapeStyle({\n        stroke: stroke,\n        fill: 'none'\n      })));\n      addMarker(id, {\n        element: defaultFlowMarker,\n        ref: {\n          x: 0,\n          y: 10\n        },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n  }\n  function drawCircle(parentGfx, width, height, offset) {\n    let attrs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n    offset = offset || 0;\n    attrs = shapeStyle(attrs);\n    var cx = width / 2,\n      cy = height / 2;\n    var circle = svgCreate('circle', _objectSpread({\n      cx: cx,\n      cy: cy,\n      r: Math.round((width + height) / 4 - offset)\n    }, attrs));\n    svgAppend(parentGfx, circle);\n    return circle;\n  }\n  function drawRect(parentGfx, width, height, r, offset, attrs) {\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n    offset = offset || 0;\n    attrs = shapeStyle(attrs);\n    var rect = svgCreate('rect', _objectSpread({\n      x: offset,\n      y: offset,\n      width: width - offset * 2,\n      height: height - offset * 2,\n      rx: r,\n      ry: r\n    }, attrs));\n    svgAppend(parentGfx, rect);\n    return rect;\n  }\n  function drawDiamond(parentGfx, width, height, attrs) {\n    var x_2 = width / 2;\n    var y_2 = height / 2;\n    var points = [{\n      x: x_2,\n      y: 0\n    }, {\n      x: width,\n      y: y_2\n    }, {\n      x: x_2,\n      y: height\n    }, {\n      x: 0,\n      y: y_2\n    }];\n    var pointsString = points.map(function (point) {\n      return point.x + ',' + point.y;\n    }).join(' ');\n    attrs = shapeStyle(attrs);\n    var polygon = svgCreate('polygon', _objectSpread(_objectSpread({}, attrs), {}, {\n      points: pointsString\n    }));\n    svgAppend(parentGfx, polygon);\n    return polygon;\n  }\n\n  /**\n   * @param {SVGElement} parentGfx\n   * @param {Point[]} waypoints\n   * @param {any} attrs\n   * @param {number} [radius]\n   *\n   * @return {SVGElement}\n   */\n  function drawLine(parentGfx, waypoints, attrs, radius) {\n    attrs = lineStyle(attrs);\n    var line = createLine(waypoints, attrs, radius);\n    svgAppend(parentGfx, line);\n    return line;\n  }\n\n  /**\n   * @param {SVGElement} parentGfx\n   * @param {Point[]} waypoints\n   * @param {any} attrs\n   *\n   * @return {SVGElement}\n   */\n  function drawConnectionSegments(parentGfx, waypoints, attrs) {\n    return drawLine(parentGfx, waypoints, attrs, 5);\n  }\n  function drawPath(parentGfx, d, attrs) {\n    attrs = lineStyle(attrs);\n    var path = svgCreate('path', _objectSpread(_objectSpread({}, attrs), {}, {\n      d\n    }));\n    svgAppend(parentGfx, path);\n    return path;\n  }\n  function drawMarker(type, parentGfx, path, attrs) {\n    return drawPath(parentGfx, path, assign({\n      'data-marker': type\n    }, attrs));\n  }\n  function renderer(type) {\n    return handlers[type];\n  }\n  function as(type) {\n    return function (parentGfx, element, attrs) {\n      return renderer(type)(parentGfx, element, attrs);\n    };\n  }\n  var eventIconRenderers = {\n    'bpmn:MessageEventDefinition': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      let isThrowing = arguments.length > 3 ? arguments[3] : undefined;\n      var pathData = pathMap.getScaledPath('EVENT_MESSAGE', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: attrs.width || element.width,\n        containerHeight: attrs.height || element.height,\n        position: {\n          mx: 0.235,\n          my: 0.315\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(element, defaultStrokeColor, attrs.stroke) : getFillColor(element, defaultFillColor, attrs.fill);\n      var stroke = isThrowing ? getFillColor(element, defaultFillColor, attrs.fill) : getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n      var messagePath = drawPath(parentGfx, pathData, {\n        fill,\n        stroke,\n        strokeWidth: 1\n      });\n      return messagePath;\n    },\n    'bpmn:TimerEventDefinition': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var baseWidth = attrs.width || element.width;\n      var baseHeight = attrs.height || element.height;\n\n      // use a lighter stroke for event suprocess icons\n      var strokeWidth = attrs.width ? 1 : 2;\n      var circle = drawCircle(parentGfx, baseWidth, baseHeight, 0.2 * baseHeight, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: strokeWidth\n      });\n      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {\n        xScaleFactor: 0.75,\n        yScaleFactor: 0.75,\n        containerWidth: baseWidth,\n        containerHeight: baseHeight,\n        position: {\n          mx: 0.5,\n          my: 0.5\n        }\n      });\n      drawPath(parentGfx, pathData, {\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: strokeWidth\n      });\n      for (var i = 0; i < 12; i++) {\n        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {\n          xScaleFactor: 0.75,\n          yScaleFactor: 0.75,\n          containerWidth: baseWidth,\n          containerHeight: baseHeight,\n          position: {\n            mx: 0.5,\n            my: 0.5\n          }\n        });\n        var width = baseWidth / 2,\n          height = baseHeight / 2;\n        drawPath(parentGfx, linePathData, {\n          strokeWidth: 1,\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          transform: 'rotate(' + i * 30 + ',' + height + ',' + width + ')'\n        });\n      }\n      return circle;\n    },\n    'bpmn:EscalationEventDefinition': function (parentGfx, event) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      let isThrowing = arguments.length > 3 ? arguments[3] : undefined;\n      var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor, attrs.stroke) : getFillColor(event, defaultFillColor, attrs.fill);\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:ConditionalEventDefinition': function (parentGfx, event) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var pathData = pathMap.getScaledPath('EVENT_CONDITIONAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.5,\n          my: 0.222\n        }\n      });\n      return drawPath(parentGfx, pathData, {\n        fill: getFillColor(event, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:LinkEventDefinition': function (parentGfx, event) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      let isThrowing = arguments.length > 3 ? arguments[3] : undefined;\n      var pathData = pathMap.getScaledPath('EVENT_LINK', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.57,\n          my: 0.263\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor, attrs.stroke) : getFillColor(event, defaultFillColor, attrs.fill);\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:ErrorEventDefinition': function (parentGfx, event) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      let isThrowing = arguments.length > 3 ? arguments[3] : undefined;\n      var pathData = pathMap.getScaledPath('EVENT_ERROR', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.2,\n          my: 0.722\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor, attrs.stroke) : getFillColor(event, defaultFillColor, attrs.fill);\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:CancelEventDefinition': function (parentGfx, event) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      let isThrowing = arguments.length > 3 ? arguments[3] : undefined;\n      var pathData = pathMap.getScaledPath('EVENT_CANCEL_45', {\n        xScaleFactor: 1.0,\n        yScaleFactor: 1.0,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.638,\n          my: -0.055\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor, attrs.stroke) : 'none';\n      var path = drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      rotate(path, 45);\n      return path;\n    },\n    'bpmn:CompensateEventDefinition': function (parentGfx, event) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      let isThrowing = arguments.length > 3 ? arguments[3] : undefined;\n      var pathData = pathMap.getScaledPath('EVENT_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.22,\n          my: 0.5\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor, attrs.stroke) : getFillColor(event, defaultFillColor, attrs.fill);\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:SignalEventDefinition': function (parentGfx, event) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      let isThrowing = arguments.length > 3 ? arguments[3] : undefined;\n      var pathData = pathMap.getScaledPath('EVENT_SIGNAL', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor, attrs.stroke) : getFillColor(event, defaultFillColor, attrs.fill);\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'bpmn:MultipleEventDefinition': function (parentGfx, event) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      let isThrowing = arguments.length > 3 ? arguments[3] : undefined;\n      var pathData = pathMap.getScaledPath('EVENT_MULTIPLE', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.211,\n          my: 0.36\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor, attrs.stroke) : getFillColor(event, defaultFillColor, attrs.fill);\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:ParallelMultipleEventDefinition': function (parentGfx, event) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var pathData = pathMap.getScaledPath('EVENT_PARALLEL_MULTIPLE', {\n        xScaleFactor: 1.2,\n        yScaleFactor: 1.2,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.458,\n          my: 0.194\n        }\n      });\n      return drawPath(parentGfx, pathData, {\n        fill: getFillColor(event, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:TerminateEventDefinition': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var circle = drawCircle(parentGfx, element.width, element.height, 8, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 4\n      });\n      return circle;\n    }\n  };\n  function renderEventIcon(element, parentGfx) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let proxyElement = arguments.length > 3 ? arguments[3] : undefined;\n    var semantic = getSemantic(element),\n      isThrowing = isThrowEvent(semantic);\n    var nodeElement = proxyElement || element;\n    if (semantic.get('eventDefinitions') && semantic.get('eventDefinitions').length > 1) {\n      if (semantic.get('parallelMultiple')) {\n        return eventIconRenderers['bpmn:ParallelMultipleEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n      } else {\n        return eventIconRenderers['bpmn:MultipleEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n      }\n    }\n    if (isTypedEvent(semantic, 'bpmn:MessageEventDefinition')) {\n      return eventIconRenderers['bpmn:MessageEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    if (isTypedEvent(semantic, 'bpmn:TimerEventDefinition')) {\n      return eventIconRenderers['bpmn:TimerEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    if (isTypedEvent(semantic, 'bpmn:ConditionalEventDefinition')) {\n      return eventIconRenderers['bpmn:ConditionalEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    if (isTypedEvent(semantic, 'bpmn:SignalEventDefinition')) {\n      return eventIconRenderers['bpmn:SignalEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    if (isTypedEvent(semantic, 'bpmn:EscalationEventDefinition')) {\n      return eventIconRenderers['bpmn:EscalationEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    if (isTypedEvent(semantic, 'bpmn:LinkEventDefinition')) {\n      return eventIconRenderers['bpmn:LinkEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    if (isTypedEvent(semantic, 'bpmn:ErrorEventDefinition')) {\n      return eventIconRenderers['bpmn:ErrorEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    if (isTypedEvent(semantic, 'bpmn:CancelEventDefinition')) {\n      return eventIconRenderers['bpmn:CancelEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    if (isTypedEvent(semantic, 'bpmn:CompensateEventDefinition')) {\n      return eventIconRenderers['bpmn:CompensateEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    if (isTypedEvent(semantic, 'bpmn:TerminateEventDefinition')) {\n      return eventIconRenderers['bpmn:TerminateEventDefinition'](parentGfx, nodeElement, attrs, isThrowing);\n    }\n    return null;\n  }\n  var taskMarkerRenderers = {\n    'ParticipantMultiplicityMarker': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var width = getWidth(element, attrs),\n        height = getHeight(element, attrs);\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: (width / 2 - 6) / width,\n          my: (height - 15) / height\n        }\n      });\n      drawMarker('participant-multiplicity', parentGfx, markerPath, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'SubProcessMarker': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var markerRect = drawRect(parentGfx, 14, 14, 0, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n      translate(markerRect, element.width / 2 - 7.5, element.height - 20);\n      var markerPath = pathMap.getScaledPath('MARKER_SUB_PROCESS', {\n        xScaleFactor: 1.5,\n        yScaleFactor: 1.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 - 7.5) / element.width,\n          my: (element.height - 20) / element.height\n        }\n      });\n      drawMarker('sub-process', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'ParallelMarker': function (parentGfx, element, attrs) {\n      var width = getWidth(element, attrs),\n        height = getHeight(element, attrs);\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: (width / 2 + attrs.parallel) / width,\n          my: (height - 20) / height\n        }\n      });\n      drawMarker('parallel', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'SequentialMarker': function (parentGfx, element, attrs) {\n      var markerPath = pathMap.getScaledPath('MARKER_SEQUENTIAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + attrs.seq) / element.width,\n          my: (element.height - 19) / element.height\n        }\n      });\n      drawMarker('sequential', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'CompensationMarker': function (parentGfx, element, attrs) {\n      var markerMath = pathMap.getScaledPath('MARKER_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + attrs.compensation) / element.width,\n          my: (element.height - 13) / element.height\n        }\n      });\n      drawMarker('compensation', parentGfx, markerMath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'LoopMarker': function (parentGfx, element, attrs) {\n      var width = getWidth(element, attrs),\n        height = getHeight(element, attrs);\n      var markerPath = pathMap.getScaledPath('MARKER_LOOP', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: (width / 2 + attrs.loop) / width,\n          my: (height - 7) / height\n        }\n      });\n      drawMarker('loop', parentGfx, markerPath, {\n        strokeWidth: 1.5,\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeMiterlimit: 0.5\n      });\n    },\n    'AdhocMarker': function (parentGfx, element, attrs) {\n      var width = getWidth(element, attrs),\n        height = getHeight(element, attrs);\n      var markerPath = pathMap.getScaledPath('MARKER_ADHOC', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: (width / 2 + attrs.adhoc) / width,\n          my: (height - 15) / height\n        }\n      });\n      drawMarker('adhoc', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    }\n  };\n  function renderTaskMarker(type, parentGfx, element, attrs) {\n    taskMarkerRenderers[type](parentGfx, element, attrs);\n  }\n  function renderTaskMarkers(parentGfx, element) {\n    let taskMarkers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let attrs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    attrs = {\n      fill: attrs.fill,\n      stroke: attrs.stroke,\n      width: getWidth(element, attrs),\n      height: getHeight(element, attrs)\n    };\n    var semantic = getSemantic(element);\n    var subprocess = taskMarkers.includes('SubProcessMarker');\n    if (subprocess) {\n      attrs = _objectSpread(_objectSpread({}, attrs), {}, {\n        seq: -21,\n        parallel: -22,\n        compensation: -25,\n        loop: -18,\n        adhoc: 10\n      });\n    } else {\n      attrs = _objectSpread(_objectSpread({}, attrs), {}, {\n        seq: -5,\n        parallel: -6,\n        compensation: -7,\n        loop: 0,\n        adhoc: -8\n      });\n    }\n    if (semantic.get('isForCompensation')) {\n      taskMarkers.push('CompensationMarker');\n    }\n    if (is(semantic, 'bpmn:AdHocSubProcess')) {\n      taskMarkers.push('AdhocMarker');\n      if (!subprocess) {\n        assign(attrs, {\n          compensation: attrs.compensation - 18\n        });\n      }\n    }\n    var loopCharacteristics = semantic.get('loopCharacteristics'),\n      isSequential = loopCharacteristics && loopCharacteristics.get('isSequential');\n    if (loopCharacteristics) {\n      assign(attrs, {\n        compensation: attrs.compensation - 18\n      });\n      if (taskMarkers.includes('AdhocMarker')) {\n        assign(attrs, {\n          seq: -23,\n          loop: -18,\n          parallel: -24\n        });\n      }\n      if (isSequential === undefined) {\n        taskMarkers.push('LoopMarker');\n      }\n      if (isSequential === false) {\n        taskMarkers.push('ParallelMarker');\n      }\n      if (isSequential === true) {\n        taskMarkers.push('SequentialMarker');\n      }\n    }\n    if (taskMarkers.includes('CompensationMarker') && taskMarkers.length === 1) {\n      assign(attrs, {\n        compensation: -8\n      });\n    }\n    forEach(taskMarkers, function (marker) {\n      renderTaskMarker(marker, parentGfx, element, attrs);\n    });\n  }\n  function renderLabel(parentGfx, label) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    attrs = assign({\n      size: {\n        width: 100\n      }\n    }, attrs);\n    var text = textRenderer.createText(label || '', attrs);\n    svgClasses(text).add('djs-label');\n    svgAppend(parentGfx, text);\n    return text;\n  }\n  function renderEmbeddedLabel(parentGfx, element, align) {\n    let attrs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var semantic = getSemantic(element);\n    var box = getBounds({\n      x: element.x,\n      y: element.y,\n      width: element.width,\n      height: element.height\n    }, attrs);\n    return renderLabel(parentGfx, semantic.name, {\n      align,\n      box,\n      padding: 7,\n      style: {\n        fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n      }\n    });\n  }\n  function renderExternalLabel(parentGfx, element) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var box = {\n      width: 90,\n      height: 30,\n      x: element.width / 2 + element.x,\n      y: element.height / 2 + element.y\n    };\n    return renderLabel(parentGfx, getLabel(element), {\n      box: box,\n      fitBox: true,\n      style: assign({}, textRenderer.getExternalStyle(), {\n        fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n      })\n    });\n  }\n  function renderLaneLabel(parentGfx, text, element) {\n    let attrs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var isHorizontalLane = isHorizontal(element);\n    var textBox = renderLabel(parentGfx, text, {\n      box: {\n        height: 30,\n        width: isHorizontalLane ? getHeight(element, attrs) : getWidth(element, attrs)\n      },\n      align: 'center-middle',\n      style: {\n        fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n      }\n    });\n    if (isHorizontalLane) {\n      var top = -1 * getHeight(element, attrs);\n      transform(textBox, 0, -top, 270);\n    }\n  }\n  function renderActivity(parentGfx, element) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var {\n      width,\n      height\n    } = getBounds(element, attrs);\n    return drawRect(parentGfx, width, height, TASK_BORDER_RADIUS, _objectSpread(_objectSpread({}, attrs), {}, {\n      fill: getFillColor(element, defaultFillColor, attrs.fill),\n      fillOpacity: DEFAULT_OPACITY,\n      stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n    }));\n  }\n  function renderAssociation(parentGfx, element) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var semantic = getSemantic(element);\n    var fill = getFillColor(element, defaultFillColor, attrs.fill),\n      stroke = getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n    if (semantic.get('associationDirection') === 'One' || semantic.get('associationDirection') === 'Both') {\n      attrs.markerEnd = marker(parentGfx, 'association-end', fill, stroke);\n    }\n    if (semantic.get('associationDirection') === 'Both') {\n      attrs.markerStart = marker(parentGfx, 'association-start', fill, stroke);\n    }\n    attrs = pickAttrs(attrs, ['markerStart', 'markerEnd']);\n    return drawConnectionSegments(parentGfx, element.waypoints, _objectSpread(_objectSpread({}, attrs), {}, {\n      stroke,\n      strokeDasharray: '0, 5'\n    }));\n  }\n  function renderDataObject(parentGfx, element) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var fill = getFillColor(element, defaultFillColor, attrs.fill),\n      stroke = getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n    var pathData = pathMap.getScaledPath('DATA_OBJECT_PATH', {\n      xScaleFactor: 1,\n      yScaleFactor: 1,\n      containerWidth: element.width,\n      containerHeight: element.height,\n      position: {\n        mx: 0.474,\n        my: 0.296\n      }\n    });\n    var dataObject = drawPath(parentGfx, pathData, {\n      fill,\n      fillOpacity: DEFAULT_OPACITY,\n      stroke\n    });\n    var semantic = getSemantic(element);\n    if (isCollection(semantic)) {\n      var collectionPathData = pathMap.getScaledPath('DATA_OBJECT_COLLECTION_PATH', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.33,\n          my: (element.height - 18) / element.height\n        }\n      });\n      drawPath(parentGfx, collectionPathData, {\n        strokeWidth: 2,\n        fill,\n        stroke\n      });\n    }\n    return dataObject;\n  }\n  function renderEvent(parentGfx, element) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return drawCircle(parentGfx, element.width, element.height, _objectSpread(_objectSpread({\n      fillOpacity: DEFAULT_OPACITY\n    }, attrs), {}, {\n      fill: getFillColor(element, defaultFillColor, attrs.fill),\n      stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n    }));\n  }\n  function renderGateway(parentGfx, element) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return drawDiamond(parentGfx, element.width, element.height, {\n      fill: getFillColor(element, defaultFillColor, attrs.fill),\n      fillOpacity: DEFAULT_OPACITY,\n      stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n    });\n  }\n  function renderLane(parentGfx, element) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var lane = drawRect(parentGfx, getWidth(element, attrs), getHeight(element, attrs), 0, {\n      fill: getFillColor(element, defaultFillColor, attrs.fill),\n      fillOpacity: attrs.fillOpacity || DEFAULT_OPACITY,\n      stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n      strokeWidth: 1.5\n    });\n    var semantic = getSemantic(element);\n    if (is(semantic, 'bpmn:Lane')) {\n      var text = semantic.get('name');\n      renderLaneLabel(parentGfx, text, element, attrs);\n    }\n    return lane;\n  }\n  function renderSubProcess(parentGfx, element) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var activity = renderActivity(parentGfx, element, attrs);\n    var expanded = isExpanded(element);\n    if (isEventSubProcess(element)) {\n      svgAttr(activity, {\n        strokeDasharray: '0, 5.5',\n        strokeWidth: 2.5\n      });\n      if (!expanded) {\n        var flowElements = getSemantic(element).flowElements || [];\n        var startEvents = flowElements.filter(e => is(e, 'bpmn:StartEvent'));\n        if (startEvents.length === 1) {\n          renderEventSubProcessIcon(startEvents[0], parentGfx, attrs, element);\n        }\n      }\n    }\n    renderEmbeddedLabel(parentGfx, element, expanded ? 'center-top' : 'center-middle', attrs);\n    if (expanded) {\n      renderTaskMarkers(parentGfx, element, undefined, attrs);\n    } else {\n      renderTaskMarkers(parentGfx, element, ['SubProcessMarker'], attrs);\n    }\n    return activity;\n  }\n  function renderEventSubProcessIcon(startEvent, parentGfx, attrs, proxyElement) {\n    var iconSize = 22;\n\n    // match the colors of the enclosing subprocess\n    var proxyAttrs = {\n      fill: getFillColor(proxyElement, defaultFillColor, attrs.fill),\n      stroke: getStrokeColor(proxyElement, defaultStrokeColor, attrs.stroke),\n      width: iconSize,\n      height: iconSize\n    };\n    var interrupting = getSemantic(startEvent).isInterrupting;\n    var strokeDasharray = interrupting ? 0 : 3;\n\n    // better visibility for non-interrupting events\n    var strokeWidth = interrupting ? 1 : 1.2;\n\n    // make the icon look larger by drawing a smaller circle\n    var circleSize = 20;\n    var shift = (iconSize - circleSize) / 2;\n    var transform = 'translate(' + shift + ',' + shift + ')';\n    drawCircle(parentGfx, circleSize, circleSize, {\n      fill: proxyAttrs.fill,\n      stroke: proxyAttrs.stroke,\n      strokeWidth,\n      strokeDasharray,\n      transform\n    });\n    renderEventIcon(startEvent, parentGfx, proxyAttrs, proxyElement);\n  }\n  function renderTask(parentGfx, element) {\n    let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var activity = renderActivity(parentGfx, element, attrs);\n    renderEmbeddedLabel(parentGfx, element, 'center-middle', attrs);\n    renderTaskMarkers(parentGfx, element, undefined, attrs);\n    return activity;\n  }\n  var handlers = this.handlers = {\n    'bpmn:AdHocSubProcess': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (isExpanded(element)) {\n        attrs = pickAttrs(attrs, ['fill', 'stroke', 'width', 'height']);\n      } else {\n        attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      }\n      return renderSubProcess(parentGfx, element, attrs);\n    },\n    'bpmn:Association': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      return renderAssociation(parentGfx, element, attrs);\n    },\n    'bpmn:BoundaryEvent': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var {\n        renderIcon = true\n      } = attrs;\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var semantic = getSemantic(element),\n        cancelActivity = semantic.get('cancelActivity');\n      attrs = {\n        strokeWidth: 1.5,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        fillOpacity: FULL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      };\n      if (!cancelActivity) {\n        attrs.strokeDasharray = '6';\n      }\n      var event = renderEvent(parentGfx, element, attrs);\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, _objectSpread(_objectSpread({}, attrs), {}, {\n        fill: 'none'\n      }));\n      if (renderIcon) {\n        renderEventIcon(element, parentGfx, attrs);\n      }\n      return event;\n    },\n    'bpmn:BusinessRuleTask': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var task = renderTask(parentGfx, element, attrs);\n      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n      var businessPath = drawPath(parentGfx, headerData);\n      svgAttr(businessPath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n      var businessHeaderPath = drawPath(parentGfx, headerPathData);\n      svgAttr(businessHeaderPath, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      return task;\n    },\n    'bpmn:CallActivity': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      return renderSubProcess(parentGfx, element, _objectSpread({\n        strokeWidth: 5\n      }, attrs));\n    },\n    'bpmn:ComplexGateway': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var gateway = renderGateway(parentGfx, element, attrs);\n      var pathData = pathMap.getScaledPath('GATEWAY_COMPLEX', {\n        xScaleFactor: 0.5,\n        yScaleFactor: 0.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.26\n        }\n      });\n      drawPath(parentGfx, pathData, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      return gateway;\n    },\n    'bpmn:DataInput': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n      var dataObject = renderDataObject(parentGfx, element, attrs);\n      drawPath(parentGfx, arrowPathData, {\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      return dataObject;\n    },\n    'bpmn:DataInputAssociation': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      return renderAssociation(parentGfx, element, _objectSpread(_objectSpread({}, attrs), {}, {\n        markerEnd: marker(parentGfx, 'association-end', getFillColor(element, defaultFillColor, attrs.fill), getStrokeColor(element, defaultStrokeColor, attrs.stroke))\n      }));\n    },\n    'bpmn:DataObject': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      return renderDataObject(parentGfx, element, attrs);\n    },\n    'bpmn:DataObjectReference': as('bpmn:DataObject'),\n    'bpmn:DataOutput': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n      var dataObject = renderDataObject(parentGfx, element, attrs);\n      drawPath(parentGfx, arrowPathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n      return dataObject;\n    },\n    'bpmn:DataOutputAssociation': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      return renderAssociation(parentGfx, element, _objectSpread(_objectSpread({}, attrs), {}, {\n        markerEnd: marker(parentGfx, 'association-end', getFillColor(element, defaultFillColor, attrs.fill), getStrokeColor(element, defaultStrokeColor, attrs.stroke))\n      }));\n    },\n    'bpmn:DataStoreReference': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var dataStorePath = pathMap.getScaledPath('DATA_STORE', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0,\n          my: 0.133\n        }\n      });\n      return drawPath(parentGfx, dataStorePath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        fillOpacity: DEFAULT_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 2\n      });\n    },\n    'bpmn:EndEvent': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var {\n        renderIcon = true\n      } = attrs;\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var event = renderEvent(parentGfx, element, _objectSpread(_objectSpread({}, attrs), {}, {\n        strokeWidth: 4\n      }));\n      if (renderIcon) {\n        renderEventIcon(element, parentGfx, attrs);\n      }\n      return event;\n    },\n    'bpmn:EventBasedGateway': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var semantic = getSemantic(element);\n      var diamond = renderGateway(parentGfx, element, attrs);\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.20, {\n        fill: getFillColor(element, 'none', attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      var type = semantic.get('eventGatewayType'),\n        instantiate = !!semantic.get('instantiate');\n      function drawEvent() {\n        var pathData = pathMap.getScaledPath('GATEWAY_EVENT_BASED', {\n          xScaleFactor: 0.18,\n          yScaleFactor: 0.18,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.36,\n            my: 0.44\n          }\n        });\n        drawPath(parentGfx, pathData, {\n          fill: 'none',\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: 2\n        });\n      }\n      if (type === 'Parallel') {\n        var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n          xScaleFactor: 0.4,\n          yScaleFactor: 0.4,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.474,\n            my: 0.296\n          }\n        });\n        drawPath(parentGfx, pathData, {\n          fill: 'none',\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: 1\n        });\n      } else if (type === 'Exclusive') {\n        if (!instantiate) {\n          drawCircle(parentGfx, element.width, element.height, element.height * 0.26, {\n            fill: 'none',\n            stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n            strokeWidth: 1\n          });\n        }\n        drawEvent();\n      }\n      return diamond;\n    },\n    'bpmn:ExclusiveGateway': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var gateway = renderGateway(parentGfx, element, attrs);\n      var pathData = pathMap.getScaledPath('GATEWAY_EXCLUSIVE', {\n        xScaleFactor: 0.4,\n        yScaleFactor: 0.4,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.32,\n          my: 0.3\n        }\n      });\n      var di = getDi(element);\n      if (di.get('isMarkerVisible')) {\n        drawPath(parentGfx, pathData, {\n          fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: 1\n        });\n      }\n      return gateway;\n    },\n    'bpmn:Gateway': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      return renderGateway(parentGfx, element, attrs);\n    },\n    'bpmn:Group': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke', 'width', 'height']);\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1.5,\n        strokeDasharray: '10, 6, 0, 6',\n        fill: 'none',\n        pointerEvents: 'none',\n        width: getWidth(element, attrs),\n        height: getHeight(element, attrs)\n      });\n    },\n    'bpmn:InclusiveGateway': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var gateway = renderGateway(parentGfx, element, attrs);\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 2.5\n      });\n      return gateway;\n    },\n    'bpmn:IntermediateEvent': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var {\n        renderIcon = true\n      } = attrs;\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var outer = renderEvent(parentGfx, element, _objectSpread(_objectSpread({}, attrs), {}, {\n        strokeWidth: 1.5\n      }));\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1.5\n      });\n      if (renderIcon) {\n        renderEventIcon(element, parentGfx, attrs);\n      }\n      return outer;\n    },\n    'bpmn:IntermediateCatchEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:IntermediateThrowEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:Lane': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke', 'width', 'height']);\n      return renderLane(parentGfx, element, _objectSpread(_objectSpread({}, attrs), {}, {\n        fillOpacity: LOW_OPACITY\n      }));\n    },\n    'bpmn:ManualTask': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var task = renderTask(parentGfx, element, attrs);\n      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {\n        abspos: {\n          x: 17,\n          y: 15\n        }\n      });\n      drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 0.5\n      });\n      return task;\n    },\n    'bpmn:MessageFlow': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var semantic = getSemantic(element),\n        di = getDi(element);\n      var fill = getFillColor(element, defaultFillColor, attrs.fill),\n        stroke = getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n      var path = drawConnectionSegments(parentGfx, element.waypoints, {\n        markerEnd: marker(parentGfx, 'messageflow-end', fill, stroke),\n        markerStart: marker(parentGfx, 'messageflow-start', fill, stroke),\n        stroke,\n        strokeDasharray: '10, 11',\n        strokeWidth: 1.5\n      });\n      if (semantic.get('messageRef')) {\n        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);\n        var markerPathData = pathMap.getScaledPath('MESSAGE_FLOW_MARKER', {\n          abspos: {\n            x: midPoint.x,\n            y: midPoint.y\n          }\n        });\n        var messageAttrs = {\n          strokeWidth: 1\n        };\n        if (di.get('messageVisibleKind') === 'initiating') {\n          messageAttrs.fill = fill;\n          messageAttrs.stroke = stroke;\n        } else {\n          messageAttrs.fill = stroke;\n          messageAttrs.stroke = fill;\n        }\n        var message = drawPath(parentGfx, markerPathData, messageAttrs);\n        var messageRef = semantic.get('messageRef'),\n          name = messageRef.get('name');\n        var label = renderLabel(parentGfx, name, {\n          align: 'center-top',\n          fitBox: true,\n          style: {\n            fill: stroke\n          }\n        });\n        var messageBounds = message.getBBox(),\n          labelBounds = label.getBBox();\n        var translateX = midPoint.x - labelBounds.width / 2,\n          translateY = midPoint.y + messageBounds.height / 2 + ELEMENT_LABEL_DISTANCE;\n        transform(label, translateX, translateY, 0);\n      }\n      return path;\n    },\n    'bpmn:ParallelGateway': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var diamond = renderGateway(parentGfx, element, attrs);\n      var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n        xScaleFactor: 0.6,\n        yScaleFactor: 0.6,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.2\n        }\n      });\n      drawPath(parentGfx, pathData, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      return diamond;\n    },\n    'bpmn:Participant': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke', 'width', 'height']);\n      var participant = renderLane(parentGfx, element, attrs);\n      var expandedParticipant = isExpanded(element);\n      var horizontalParticipant = isHorizontal(element);\n      var semantic = getSemantic(element),\n        name = semantic.get('name');\n      if (expandedParticipant) {\n        var waypoints = horizontalParticipant ? [{\n          x: 30,\n          y: 0\n        }, {\n          x: 30,\n          y: getHeight(element, attrs)\n        }] : [{\n          x: 0,\n          y: 30\n        }, {\n          x: getWidth(element, attrs),\n          y: 30\n        }];\n        drawLine(parentGfx, waypoints, {\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: PARTICIPANT_STROKE_WIDTH\n        });\n        renderLaneLabel(parentGfx, name, element, attrs);\n      } else {\n        var bounds = getBounds(element, attrs);\n        if (!horizontalParticipant) {\n          bounds.height = getWidth(element, attrs);\n          bounds.width = getHeight(element, attrs);\n        }\n        var textBox = renderLabel(parentGfx, name, {\n          box: bounds,\n          align: 'center-middle',\n          style: {\n            fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n          }\n        });\n        if (!horizontalParticipant) {\n          var top = -1 * getHeight(element, attrs);\n          transform(textBox, 0, -top, 270);\n        }\n      }\n      if (semantic.get('participantMultiplicity')) {\n        renderTaskMarker('ParticipantMultiplicityMarker', parentGfx, element, attrs);\n      }\n      return participant;\n    },\n    'bpmn:ReceiveTask': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var semantic = getSemantic(element);\n      var task = renderTask(parentGfx, element, attrs);\n      var pathData;\n      if (semantic.get('instantiate')) {\n        drawCircle(parentGfx, 28, 28, 20 * 0.22, {\n          fill: getFillColor(element, defaultFillColor, attrs.fill),\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: 1\n        });\n        pathData = pathMap.getScaledPath('TASK_TYPE_INSTANTIATING_SEND', {\n          abspos: {\n            x: 7.77,\n            y: 9.52\n          }\n        });\n      } else {\n        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n          xScaleFactor: 0.9,\n          yScaleFactor: 0.9,\n          containerWidth: 21,\n          containerHeight: 14,\n          position: {\n            mx: 0.3,\n            my: 0.4\n          }\n        });\n      }\n      drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      return task;\n    },\n    'bpmn:ScriptTask': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var task = renderTask(parentGfx, element, attrs);\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {\n        abspos: {\n          x: 15,\n          y: 20\n        }\n      });\n      drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      return task;\n    },\n    'bpmn:SendTask': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var task = renderTask(parentGfx, element, attrs);\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: 21,\n        containerHeight: 14,\n        position: {\n          mx: 0.285,\n          my: 0.357\n        }\n      });\n      drawPath(parentGfx, pathData, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getFillColor(element, defaultFillColor, attrs.fill),\n        strokeWidth: 1\n      });\n      return task;\n    },\n    'bpmn:SequenceFlow': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var fill = getFillColor(element, defaultFillColor, attrs.fill),\n        stroke = getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n      var connection = drawConnectionSegments(parentGfx, element.waypoints, {\n        markerEnd: marker(parentGfx, 'sequenceflow-end', fill, stroke),\n        stroke\n      });\n      var semantic = getSemantic(element);\n      var {\n        source\n      } = element;\n      if (source) {\n        var sourceSemantic = getSemantic(source);\n\n        // conditional flow marker\n        if (semantic.get('conditionExpression') && is(sourceSemantic, 'bpmn:Activity')) {\n          svgAttr(connection, {\n            markerStart: marker(parentGfx, 'conditional-flow-marker', fill, stroke)\n          });\n        }\n\n        // default marker\n        if (sourceSemantic.get('default') && (is(sourceSemantic, 'bpmn:Gateway') || is(sourceSemantic, 'bpmn:Activity')) && sourceSemantic.get('default') === semantic) {\n          svgAttr(connection, {\n            markerStart: marker(parentGfx, 'conditional-default-flow-marker', fill, stroke)\n          });\n        }\n      }\n      return connection;\n    },\n    'bpmn:ServiceTask': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var task = renderTask(parentGfx, element, attrs);\n      drawCircle(parentGfx, 10, 10, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: 'none',\n        transform: 'translate(6, 6)'\n      });\n      var pathDataService1 = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 12,\n          y: 18\n        }\n      });\n      drawPath(parentGfx, pathDataService1, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      drawCircle(parentGfx, 10, 10, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: 'none',\n        transform: 'translate(11, 10)'\n      });\n      var pathDataService2 = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 17,\n          y: 22\n        }\n      });\n      drawPath(parentGfx, pathDataService2, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n      return task;\n    },\n    'bpmn:StartEvent': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var {\n        renderIcon = true\n      } = attrs;\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var semantic = getSemantic(element);\n      if (!semantic.get('isInterrupting')) {\n        attrs = _objectSpread(_objectSpread({}, attrs), {}, {\n          strokeDasharray: '6'\n        });\n      }\n      var event = renderEvent(parentGfx, element, attrs);\n      if (renderIcon) {\n        renderEventIcon(element, parentGfx, attrs);\n      }\n      return event;\n    },\n    'bpmn:SubProcess': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (isExpanded(element)) {\n        attrs = pickAttrs(attrs, ['fill', 'stroke', 'width', 'height']);\n      } else {\n        attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      }\n      return renderSubProcess(parentGfx, element, attrs);\n    },\n    'bpmn:Task': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      return renderTask(parentGfx, element, attrs);\n    },\n    'bpmn:TextAnnotation': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke', 'width', 'height']);\n      var {\n        width,\n        height\n      } = getBounds(element, attrs);\n      var textElement = drawRect(parentGfx, width, height, 0, 0, {\n        fill: 'none',\n        stroke: 'none'\n      });\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n      drawPath(parentGfx, textPathData, {\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n      var semantic = getSemantic(element),\n        text = semantic.get('text') || '';\n      renderLabel(parentGfx, text, {\n        align: 'left-top',\n        box: getBounds(element, attrs),\n        padding: 7,\n        style: {\n          fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n        }\n      });\n      return textElement;\n    },\n    'bpmn:Transaction': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (isExpanded(element)) {\n        attrs = pickAttrs(attrs, ['fill', 'stroke', 'width', 'height']);\n      } else {\n        attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      }\n      var outer = renderSubProcess(parentGfx, element, _objectSpread({\n        strokeWidth: 1.5\n      }, attrs));\n      var innerAttrs = styles.style(['no-fill', 'no-events'], {\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1.5\n      });\n      var expanded = isExpanded(element);\n      if (!expanded) {\n        attrs = {};\n      }\n      drawRect(parentGfx, getWidth(element, attrs), getHeight(element, attrs), TASK_BORDER_RADIUS - INNER_OUTER_DIST, INNER_OUTER_DIST, innerAttrs);\n      return outer;\n    },\n    'bpmn:UserTask': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      attrs = pickAttrs(attrs, ['fill', 'stroke']);\n      var task = renderTask(parentGfx, element, attrs);\n      var x = 15;\n      var y = 12;\n      var pathDataUser1 = pathMap.getScaledPath('TASK_TYPE_USER_1', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n      drawPath(parentGfx, pathDataUser1, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 0.5\n      });\n      var pathDataUser2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n      drawPath(parentGfx, pathDataUser2, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 0.5\n      });\n      var pathDataUser3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n      drawPath(parentGfx, pathDataUser3, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 0.5\n      });\n      return task;\n    },\n    'label': function (parentGfx, element) {\n      let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return renderExternalLabel(parentGfx, element, attrs);\n    }\n  };\n\n  // extension API, use at your own risk\n  this._drawPath = drawPath;\n  this._renderer = renderer;\n}\ninherits(BpmnRenderer, BaseRenderer);\nBpmnRenderer.$inject = ['config.bpmnRenderer', 'eventBus', 'styles', 'pathMap', 'canvas', 'textRenderer'];\n\n/**\n * @param {Element} element\n *\n * @return {boolean}\n */\nBpmnRenderer.prototype.canRender = function (element) {\n  return is(element, 'bpmn:BaseElement');\n};\n\n/**\n * Draw shape into parentGfx.\n *\n * @param {SVGElement} parentGfx\n * @param {Shape} shape\n * @param {Attrs} [attrs]\n *\n * @return {SVGElement} mainGfx\n */\nBpmnRenderer.prototype.drawShape = function (parentGfx, shape) {\n  let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var {\n    type\n  } = shape;\n  var handler = this._renderer(type);\n  return handler(parentGfx, shape, attrs);\n};\n\n/**\n * Draw connection into parentGfx.\n *\n * @param {SVGElement} parentGfx\n * @param {Connection} connection\n * @param {Attrs} [attrs]\n *\n * @return {SVGElement} mainGfx\n */\nBpmnRenderer.prototype.drawConnection = function (parentGfx, connection) {\n  let attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var {\n    type\n  } = connection;\n  var handler = this._renderer(type);\n  return handler(parentGfx, connection, attrs);\n};\n\n/**\n * Get shape path.\n *\n * @param {Shape} shape\n *\n * @return {string} path\n */\nBpmnRenderer.prototype.getShapePath = function (shape) {\n  if (is(shape, 'bpmn:Event')) {\n    return getCirclePath(shape);\n  }\n  if (is(shape, 'bpmn:Activity')) {\n    return getRoundRectPath(shape, TASK_BORDER_RADIUS);\n  }\n  if (is(shape, 'bpmn:Gateway')) {\n    return getDiamondPath(shape);\n  }\n  return getRectPath(shape);\n};\n\n/**\n * Pick attributes if they exist.\n *\n * @param {Object} attrs\n * @param {string[]} keys\n *\n * @returns {Object}\n */\nfunction pickAttrs(attrs) {\n  let keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return keys.reduce((pickedAttrs, key) => {\n    if (attrs[key]) {\n      pickedAttrs[key] = attrs[key];\n    }\n    return pickedAttrs;\n  }, {});\n}","map":{"version":3,"names":["inherits","assign","forEach","isObject","BaseRenderer","isExpanded","isHorizontal","isEventSubProcess","getLabel","is","createLine","isTypedEvent","isThrowEvent","isCollection","getBounds","getDi","getSemantic","getCirclePath","getRoundRectPath","getDiamondPath","getRectPath","getFillColor","getStrokeColor","getLabelColor","getHeight","getWidth","query","domQuery","append","svgAppend","attr","svgAttr","create","svgCreate","classes","svgClasses","rotate","transform","translate","Ids","black","markerIds","ELEMENT_LABEL_DISTANCE","INNER_OUTER_DIST","PARTICIPANT_STROKE_WIDTH","TASK_BORDER_RADIUS","DEFAULT_OPACITY","FULL_OPACITY","LOW_OPACITY","BpmnRenderer","config","eventBus","styles","pathMap","canvas","textRenderer","priority","call","defaultFillColor","defaultStrokeColor","defaultLabelColor","shapeStyle","attrs","computeStyle","strokeLinecap","strokeLinejoin","stroke","strokeWidth","fill","lineStyle","addMarker","id","options","ref","x","y","scale","element","parentGfx","_svg","marker","viewBox","refX","refY","markerWidth","markerHeight","orient","defs","type","nextPrefixed","createMarker","sequenceflowEnd","_objectSpread","d","messageflowStart","cx","cy","r","strokeDasharray","messageflowEnd","associationStart","associationEnd","conditionalFlowMarker","defaultFlowMarker","drawCircle","width","height","offset","arguments","length","undefined","circle","Math","round","drawRect","rect","rx","ry","drawDiamond","x_2","y_2","points","pointsString","map","point","join","polygon","drawLine","waypoints","radius","line","drawConnectionSegments","drawPath","path","drawMarker","renderer","handlers","as","eventIconRenderers","bpmn:MessageEventDefinition","isThrowing","pathData","getScaledPath","xScaleFactor","yScaleFactor","containerWidth","containerHeight","position","mx","my","messagePath","bpmn:TimerEventDefinition","baseWidth","baseHeight","i","linePathData","bpmn:EscalationEventDefinition","event","bpmn:ConditionalEventDefinition","bpmn:LinkEventDefinition","bpmn:ErrorEventDefinition","bpmn:CancelEventDefinition","bpmn:CompensateEventDefinition","bpmn:SignalEventDefinition","bpmn:MultipleEventDefinition","bpmn:ParallelMultipleEventDefinition","bpmn:TerminateEventDefinition","renderEventIcon","proxyElement","semantic","nodeElement","get","taskMarkerRenderers","ParticipantMultiplicityMarker","markerPath","SubProcessMarker","markerRect","ParallelMarker","parallel","SequentialMarker","seq","CompensationMarker","markerMath","compensation","LoopMarker","loop","strokeMiterlimit","AdhocMarker","adhoc","renderTaskMarker","renderTaskMarkers","taskMarkers","subprocess","includes","push","loopCharacteristics","isSequential","renderLabel","label","size","text","createText","add","renderEmbeddedLabel","align","box","name","padding","style","renderExternalLabel","fitBox","getExternalStyle","renderLaneLabel","isHorizontalLane","textBox","top","renderActivity","fillOpacity","renderAssociation","markerEnd","markerStart","pickAttrs","renderDataObject","dataObject","collectionPathData","renderEvent","renderGateway","renderLane","lane","renderSubProcess","activity","expanded","flowElements","startEvents","filter","e","renderEventSubProcessIcon","startEvent","iconSize","proxyAttrs","interrupting","isInterrupting","circleSize","shift","renderTask","bpmn:AdHocSubProcess","bpmn:Association","bpmn:BoundaryEvent","renderIcon","cancelActivity","bpmn:BusinessRuleTask","task","headerData","abspos","businessPath","headerPathData","businessHeaderPath","bpmn:CallActivity","bpmn:ComplexGateway","gateway","bpmn:DataInput","arrowPathData","getRawPath","bpmn:DataInputAssociation","bpmn:DataObject","bpmn:DataOutput","bpmn:DataOutputAssociation","bpmn:DataStoreReference","dataStorePath","bpmn:EndEvent","bpmn:EventBasedGateway","diamond","instantiate","drawEvent","bpmn:ExclusiveGateway","di","bpmn:Gateway","bpmn:Group","pointerEvents","bpmn:InclusiveGateway","bpmn:IntermediateEvent","outer","bpmn:Lane","bpmn:ManualTask","bpmn:MessageFlow","midPoint","getPointAtLength","getTotalLength","markerPathData","messageAttrs","message","messageRef","messageBounds","getBBox","labelBounds","translateX","translateY","bpmn:ParallelGateway","bpmn:Participant","participant","expandedParticipant","horizontalParticipant","bounds","bpmn:ReceiveTask","bpmn:ScriptTask","bpmn:SendTask","bpmn:SequenceFlow","connection","source","sourceSemantic","bpmn:ServiceTask","pathDataService1","pathDataService2","bpmn:StartEvent","bpmn:SubProcess","bpmn:Task","bpmn:TextAnnotation","textElement","textPathData","bpmn:Transaction","innerAttrs","bpmn:UserTask","pathDataUser1","pathDataUser2","pathDataUser3","_drawPath","_renderer","$inject","prototype","canRender","drawShape","shape","handler","drawConnection","getShapePath","keys","reduce","pickedAttrs","key"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/draw/BpmnRenderer.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport {\n  assign,\n  forEach,\n  isObject\n} from 'min-dash';\n\nimport BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\n\nimport {\n  isExpanded,\n  isHorizontal,\n  isEventSubProcess\n} from '../util/DiUtil';\n\nimport {\n  getLabel\n} from '../util/LabelUtil';\n\nimport {\n  is\n} from '../util/ModelUtil';\n\nimport {\n  createLine\n} from 'diagram-js/lib/util/RenderUtil';\n\nimport {\n  isTypedEvent,\n  isThrowEvent,\n  isCollection,\n  getBounds,\n  getDi,\n  getSemantic,\n  getCirclePath,\n  getRoundRectPath,\n  getDiamondPath,\n  getRectPath,\n  getFillColor,\n  getStrokeColor,\n  getLabelColor,\n  getHeight,\n  getWidth\n} from './BpmnRenderUtil';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  classes as svgClasses\n} from 'tiny-svg';\n\nimport {\n  rotate,\n  transform,\n  translate\n} from 'diagram-js/lib/util/SvgTransformUtil';\n\nimport Ids from 'ids';\n\nimport { black } from './BpmnRenderUtil';\n\nvar markerIds = new Ids();\n\nvar ELEMENT_LABEL_DISTANCE = 10,\n    INNER_OUTER_DIST = 3,\n    PARTICIPANT_STROKE_WIDTH = 1.5,\n    TASK_BORDER_RADIUS = 10;\n\nvar DEFAULT_OPACITY = 0.95,\n    FULL_OPACITY = 1,\n    LOW_OPACITY = 0.25;\n\n/**\n * @typedef { Partial<{\n *   defaultFillColor: string,\n *   defaultStrokeColor: string,\n *   defaultLabelColor: string\n * }> } BpmnRendererConfig\n *\n * @typedef { Partial<{\n *   fill: string,\n *   stroke: string,\n *   width: string,\n *   height: string\n * }> } Attrs\n */\n\n/**\n * @typedef { import('../model/Types').Element } Element\n * @typedef { import('../model/Types').Shape } Shape\n * @typedef { import('../model/Types').Connection } Connection\n */\n\n/**\n * A renderer for BPMN elements\n *\n * @param {BpmnRendererConfig} config\n * @param {import('diagram-js/lib/core/EventBus').default} eventBus\n * @param {import('diagram-js/lib/draw/Styles').default} styles\n * @param {import('./PathMap').default} pathMap\n * @param {import('diagram-js/lib/core/Canvas').default} canvas\n * @param {import('./TextRenderer').default} textRenderer\n * @param {number} [priority]\n */\nexport default function BpmnRenderer(\n    config, eventBus, styles, pathMap,\n    canvas, textRenderer, priority) {\n\n  BaseRenderer.call(this, eventBus, priority);\n\n  var defaultFillColor = config && config.defaultFillColor,\n      defaultStrokeColor = config && config.defaultStrokeColor,\n      defaultLabelColor = config && config.defaultLabelColor;\n\n  function shapeStyle(attrs) {\n    return styles.computeStyle(attrs, {\n      strokeLinecap: 'round',\n      strokeLinejoin: 'round',\n      stroke: black,\n      strokeWidth: 2,\n      fill: 'white'\n    });\n  }\n\n  function lineStyle(attrs) {\n    return styles.computeStyle(attrs, [ 'no-fill' ], {\n      strokeLinecap: 'round',\n      strokeLinejoin: 'round',\n      stroke: black,\n      strokeWidth: 2\n    });\n  }\n\n  function addMarker(id, options) {\n    var {\n      ref = { x: 0, y: 0 },\n      scale = 1,\n      element,\n      parentGfx = canvas._svg\n    } = options;\n\n    var marker = svgCreate('marker', {\n      id: id,\n      viewBox: '0 0 20 20',\n      refX: ref.x,\n      refY: ref.y,\n      markerWidth: 20 * scale,\n      markerHeight: 20 * scale,\n      orient: 'auto'\n    });\n\n    svgAppend(marker, element);\n\n    var defs = domQuery(':scope > defs', parentGfx);\n\n    if (!defs) {\n      defs = svgCreate('defs');\n\n      svgAppend(parentGfx, defs);\n    }\n\n    svgAppend(defs, marker);\n  }\n\n  function marker(parentGfx, type, fill, stroke) {\n\n\n    var id = markerIds.nextPrefixed('marker-');\n\n    createMarker(parentGfx, id, type, fill, stroke);\n\n    return 'url(#' + id + ')';\n  }\n\n  function createMarker(parentGfx, id, type, fill, stroke) {\n\n    if (type === 'sequenceflow-end') {\n      var sequenceflowEnd = svgCreate('path', {\n        d: 'M 1 5 L 11 10 L 1 15 Z',\n        ...shapeStyle({\n          fill: stroke,\n          stroke: stroke,\n          strokeWidth: 1\n        })\n      });\n\n      addMarker(id, {\n        element: sequenceflowEnd,\n        ref: { x: 11, y: 10 },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n\n    if (type === 'messageflow-start') {\n      var messageflowStart = svgCreate('circle', {\n        cx: 6,\n        cy: 6,\n        r: 3.5,\n        ...shapeStyle({\n          fill,\n          stroke: stroke,\n          strokeWidth: 1,\n\n          // fix for safari / chrome / firefox bug not correctly\n          // resetting stroke dash array\n          strokeDasharray: [ 10000, 1 ]\n        })\n      });\n\n      addMarker(id, {\n        element: messageflowStart,\n        ref: { x: 6, y: 6 },\n        parentGfx\n      });\n    }\n\n    if (type === 'messageflow-end') {\n      var messageflowEnd = svgCreate('path', {\n        d: 'm 1 5 l 0 -3 l 7 3 l -7 3 z',\n        ...shapeStyle({\n          fill,\n          stroke: stroke,\n          strokeWidth: 1,\n\n          // fix for safari / chrome / firefox bug not correctly\n          // resetting stroke dash array\n          strokeDasharray: [ 10000, 1 ]\n        })\n      });\n\n      addMarker(id, {\n        element: messageflowEnd,\n        ref: { x: 8.5, y: 5 },\n        parentGfx\n      });\n    }\n\n    if (type === 'association-start') {\n      var associationStart = svgCreate('path', {\n        d: 'M 11 5 L 1 10 L 11 15',\n        ...lineStyle({\n          fill: 'none',\n          stroke,\n          strokeWidth: 1.5,\n\n          // fix for safari / chrome / firefox bug not correctly\n          // resetting stroke dash array\n          strokeDasharray: [ 10000, 1 ]\n        })\n      });\n\n      addMarker(id, {\n        element: associationStart,\n        ref: { x: 1, y: 10 },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n\n    if (type === 'association-end') {\n      var associationEnd = svgCreate('path', {\n        d: 'M 1 5 L 11 10 L 1 15',\n        ...lineStyle({\n          fill: 'none',\n          stroke,\n          strokeWidth: 1.5,\n\n          // fix for safari / chrome / firefox bug not correctly\n          // resetting stroke dash array\n          strokeDasharray: [ 10000, 1 ]\n        })\n      });\n\n      addMarker(id, {\n        element: associationEnd,\n        ref: { x: 11, y: 10 },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n\n    if (type === 'conditional-flow-marker') {\n      var conditionalFlowMarker = svgCreate('path', {\n        d: 'M 0 10 L 8 6 L 16 10 L 8 14 Z',\n        ...shapeStyle({\n          fill,\n          stroke: stroke\n        })\n      });\n\n      addMarker(id, {\n        element: conditionalFlowMarker,\n        ref: { x: -1, y: 10 },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n\n    if (type === 'conditional-default-flow-marker') {\n      var defaultFlowMarker = svgCreate('path', {\n        d: 'M 6 4 L 10 16',\n        ...shapeStyle({\n          stroke: stroke,\n          fill: 'none'\n        })\n      });\n\n      addMarker(id, {\n        element: defaultFlowMarker,\n        ref: { x: 0, y: 10 },\n        scale: 0.5,\n        parentGfx\n      });\n    }\n  }\n\n  function drawCircle(parentGfx, width, height, offset, attrs = {}) {\n\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n\n    attrs = shapeStyle(attrs);\n\n    var cx = width / 2,\n        cy = height / 2;\n\n    var circle = svgCreate('circle', {\n      cx: cx,\n      cy: cy,\n      r: Math.round((width + height) / 4 - offset),\n      ...attrs\n    });\n\n    svgAppend(parentGfx, circle);\n\n    return circle;\n  }\n\n  function drawRect(parentGfx, width, height, r, offset, attrs) {\n\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n\n    attrs = shapeStyle(attrs);\n\n    var rect = svgCreate('rect', {\n      x: offset,\n      y: offset,\n      width: width - offset * 2,\n      height: height - offset * 2,\n      rx: r,\n      ry: r,\n      ...attrs\n    });\n\n    svgAppend(parentGfx, rect);\n\n    return rect;\n  }\n\n  function drawDiamond(parentGfx, width, height, attrs) {\n\n    var x_2 = width / 2;\n    var y_2 = height / 2;\n\n    var points = [\n      { x: x_2, y: 0 },\n      { x: width, y: y_2 },\n      { x: x_2, y: height },\n      { x: 0, y: y_2 }\n    ];\n\n    var pointsString = points.map(function(point) {\n      return point.x + ',' + point.y;\n    }).join(' ');\n\n    attrs = shapeStyle(attrs);\n\n    var polygon = svgCreate('polygon', {\n      ...attrs,\n      points: pointsString\n    });\n\n    svgAppend(parentGfx, polygon);\n\n    return polygon;\n  }\n\n  /**\n   * @param {SVGElement} parentGfx\n   * @param {Point[]} waypoints\n   * @param {any} attrs\n   * @param {number} [radius]\n   *\n   * @return {SVGElement}\n   */\n  function drawLine(parentGfx, waypoints, attrs, radius) {\n    attrs = lineStyle(attrs);\n\n    var line = createLine(waypoints, attrs, radius);\n\n    svgAppend(parentGfx, line);\n\n    return line;\n  }\n\n  /**\n   * @param {SVGElement} parentGfx\n   * @param {Point[]} waypoints\n   * @param {any} attrs\n   *\n   * @return {SVGElement}\n   */\n  function drawConnectionSegments(parentGfx, waypoints, attrs) {\n    return drawLine(parentGfx, waypoints, attrs, 5);\n  }\n\n  function drawPath(parentGfx, d, attrs) {\n    attrs = lineStyle(attrs);\n\n    var path = svgCreate('path', {\n      ...attrs,\n      d\n    });\n\n    svgAppend(parentGfx, path);\n\n    return path;\n  }\n\n  function drawMarker(type, parentGfx, path, attrs) {\n    return drawPath(parentGfx, path, assign({ 'data-marker': type }, attrs));\n  }\n\n  function renderer(type) {\n    return handlers[type];\n  }\n\n  function as(type) {\n    return function(parentGfx, element, attrs) {\n      return renderer(type)(parentGfx, element, attrs);\n    };\n  }\n\n  var eventIconRenderers = {\n    'bpmn:MessageEventDefinition': function(parentGfx, element, attrs = {}, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MESSAGE', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: attrs.width || element.width,\n        containerHeight: attrs.height || element.height,\n        position: {\n          mx: 0.235,\n          my: 0.315\n        }\n      });\n\n      var fill = isThrowing\n        ? getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n        : getFillColor(element, defaultFillColor, attrs.fill);\n\n      var stroke = isThrowing\n        ? getFillColor(element, defaultFillColor, attrs.fill)\n        : getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n\n      var messagePath = drawPath(parentGfx, pathData, {\n        fill,\n        stroke,\n        strokeWidth: 1\n      });\n\n      return messagePath;\n    },\n    'bpmn:TimerEventDefinition': function(parentGfx, element, attrs = {}) {\n      var baseWidth = attrs.width || element.width;\n      var baseHeight = attrs.height || element.height;\n\n      // use a lighter stroke for event suprocess icons\n      var strokeWidth = attrs.width ? 1 : 2;\n\n      var circle = drawCircle(parentGfx, baseWidth, baseHeight, 0.2 * baseHeight, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: strokeWidth\n      });\n\n      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {\n        xScaleFactor: 0.75,\n        yScaleFactor: 0.75,\n        containerWidth: baseWidth,\n        containerHeight: baseHeight,\n        position: {\n          mx: 0.5,\n          my: 0.5\n        }\n      });\n\n      drawPath(parentGfx, pathData, {\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: strokeWidth\n      });\n\n      for (var i = 0; i < 12; i++) {\n        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {\n          xScaleFactor: 0.75,\n          yScaleFactor: 0.75,\n          containerWidth: baseWidth,\n          containerHeight: baseHeight,\n          position: {\n            mx: 0.5,\n            my: 0.5\n          }\n        });\n\n        var width = baseWidth / 2,\n            height = baseHeight / 2;\n\n        drawPath(parentGfx, linePathData, {\n          strokeWidth: 1,\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          transform: 'rotate(' + (i * 30) + ',' + height + ',' + width + ')'\n        });\n      }\n\n      return circle;\n    },\n    'bpmn:EscalationEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n\n      var fill = isThrowing\n        ? getStrokeColor(event, defaultStrokeColor, attrs.stroke)\n        : getFillColor(event, defaultFillColor, attrs.fill);\n\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:ConditionalEventDefinition': function(parentGfx, event, attrs = {}) {\n      var pathData = pathMap.getScaledPath('EVENT_CONDITIONAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.5,\n          my: 0.222\n        }\n      });\n\n      return drawPath(parentGfx, pathData, {\n        fill: getFillColor(event, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:LinkEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_LINK', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.57,\n          my: 0.263\n        }\n      });\n\n      var fill = isThrowing\n        ? getStrokeColor(event, defaultStrokeColor, attrs.stroke)\n        : getFillColor(event, defaultFillColor, attrs.fill);\n\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:ErrorEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ERROR', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.2,\n          my: 0.722\n        }\n      });\n\n      var fill = isThrowing\n        ? getStrokeColor(event, defaultStrokeColor, attrs.stroke)\n        : getFillColor(event, defaultFillColor, attrs.fill);\n\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:CancelEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_CANCEL_45', {\n        xScaleFactor: 1.0,\n        yScaleFactor: 1.0,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.638,\n          my: -0.055\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor, attrs.stroke) : 'none';\n\n      var path = drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      rotate(path, 45);\n\n      return path;\n    },\n    'bpmn:CompensateEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.22,\n          my: 0.5\n        }\n      });\n\n      var fill = isThrowing\n        ? getStrokeColor(event, defaultStrokeColor, attrs.stroke)\n        : getFillColor(event, defaultFillColor, attrs.fill);\n\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:SignalEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_SIGNAL', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n\n      var fill = isThrowing\n        ? getStrokeColor(event, defaultStrokeColor, attrs.stroke)\n        : getFillColor(event, defaultFillColor, attrs.fill);\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'bpmn:MultipleEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MULTIPLE', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.211,\n          my: 0.36\n        }\n      });\n\n      var fill = isThrowing\n        ? getStrokeColor(event, defaultStrokeColor, attrs.stroke)\n        : getFillColor(event, defaultFillColor, attrs.fill);\n\n      return drawPath(parentGfx, pathData, {\n        fill,\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:ParallelMultipleEventDefinition': function(parentGfx, event, attrs = {}) {\n      var pathData = pathMap.getScaledPath('EVENT_PARALLEL_MULTIPLE', {\n        xScaleFactor: 1.2,\n        yScaleFactor: 1.2,\n        containerWidth: attrs.width || event.width,\n        containerHeight: attrs.height || event.height,\n        position: {\n          mx: 0.458,\n          my: 0.194\n        }\n      });\n\n      return drawPath(parentGfx, pathData, {\n        fill: getFillColor(event, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n    },\n    'bpmn:TerminateEventDefinition': function(parentGfx, element, attrs = {}) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 8, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 4\n      });\n\n      return circle;\n    }\n  };\n\n  function renderEventIcon(element, parentGfx, attrs = {}, proxyElement) {\n    var semantic = getSemantic(element),\n        isThrowing = isThrowEvent(semantic);\n\n    var nodeElement = proxyElement || element;\n\n    if (semantic.get('eventDefinitions') && semantic.get('eventDefinitions').length > 1) {\n      if (semantic.get('parallelMultiple')) {\n        return eventIconRenderers[ 'bpmn:ParallelMultipleEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n      }\n      else {\n        return eventIconRenderers[ 'bpmn:MultipleEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n      }\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:MessageEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:MessageEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:TimerEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:TimerEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:ConditionalEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:ConditionalEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:SignalEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:SignalEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:EscalationEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:EscalationEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:LinkEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:LinkEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:ErrorEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:ErrorEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:CancelEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:CancelEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:CompensateEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:CompensateEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    if (isTypedEvent(semantic, 'bpmn:TerminateEventDefinition')) {\n      return eventIconRenderers[ 'bpmn:TerminateEventDefinition' ](parentGfx, nodeElement, attrs, isThrowing);\n    }\n\n    return null;\n  }\n\n  var taskMarkerRenderers = {\n    'ParticipantMultiplicityMarker': function(parentGfx, element, attrs = {}) {\n      var width = getWidth(element, attrs),\n          height = getHeight(element, attrs);\n\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: ((width / 2 - 6) / width),\n          my: (height - 15) / height\n        }\n      });\n\n      drawMarker('participant-multiplicity', parentGfx, markerPath, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'SubProcessMarker': function(parentGfx, element, attrs = {}) {\n      var markerRect = drawRect(parentGfx, 14, 14, 0, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n\n      translate(markerRect, element.width / 2 - 7.5, element.height - 20);\n\n      var markerPath = pathMap.getScaledPath('MARKER_SUB_PROCESS', {\n        xScaleFactor: 1.5,\n        yScaleFactor: 1.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 - 7.5) / element.width,\n          my: (element.height - 20) / element.height\n        }\n      });\n\n      drawMarker('sub-process', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'ParallelMarker': function(parentGfx, element, attrs) {\n      var width = getWidth(element, attrs),\n          height = getHeight(element, attrs);\n\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: ((width / 2 + attrs.parallel) / width),\n          my: (height - 20) / height\n        }\n      });\n\n      drawMarker('parallel', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'SequentialMarker': function(parentGfx, element, attrs) {\n      var markerPath = pathMap.getScaledPath('MARKER_SEQUENTIAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + attrs.seq) / element.width),\n          my: (element.height - 19) / element.height\n        }\n      });\n\n      drawMarker('sequential', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'CompensationMarker': function(parentGfx, element, attrs) {\n      var markerMath = pathMap.getScaledPath('MARKER_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + attrs.compensation) / element.width),\n          my: (element.height - 13) / element.height\n        }\n      });\n\n      drawMarker('compensation', parentGfx, markerMath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    },\n    'LoopMarker': function(parentGfx, element, attrs) {\n      var width = getWidth(element, attrs),\n          height = getHeight(element, attrs);\n\n      var markerPath = pathMap.getScaledPath('MARKER_LOOP', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: ((width / 2 + attrs.loop) / width),\n          my: (height - 7) / height\n        }\n      });\n\n      drawMarker('loop', parentGfx, markerPath, {\n        strokeWidth: 1.5,\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeMiterlimit: 0.5\n      });\n    },\n    'AdhocMarker': function(parentGfx, element, attrs) {\n      var width = getWidth(element, attrs),\n          height = getHeight(element, attrs);\n\n      var markerPath = pathMap.getScaledPath('MARKER_ADHOC', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: ((width / 2 + attrs.adhoc) / width),\n          my: (height - 15) / height\n        }\n      });\n\n      drawMarker('adhoc', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n    }\n  };\n\n  function renderTaskMarker(type, parentGfx, element, attrs) {\n    taskMarkerRenderers[ type ](parentGfx, element, attrs);\n  }\n\n  function renderTaskMarkers(parentGfx, element, taskMarkers = [], attrs = {}) {\n    attrs = {\n      fill: attrs.fill,\n      stroke: attrs.stroke,\n      width: getWidth(element, attrs),\n      height: getHeight(element, attrs)\n    };\n\n    var semantic = getSemantic(element);\n\n    var subprocess = taskMarkers.includes('SubProcessMarker');\n\n    if (subprocess) {\n      attrs = {\n        ...attrs,\n        seq: -21,\n        parallel: -22,\n        compensation: -25,\n        loop: -18,\n        adhoc: 10\n      };\n    } else {\n      attrs = {\n        ...attrs,\n        seq: -5,\n        parallel: -6,\n        compensation: -7,\n        loop: 0,\n        adhoc: -8\n      };\n    }\n\n    if (semantic.get('isForCompensation')) {\n      taskMarkers.push('CompensationMarker');\n    }\n\n    if (is(semantic, 'bpmn:AdHocSubProcess')) {\n      taskMarkers.push('AdhocMarker');\n\n      if (!subprocess) {\n        assign(attrs, { compensation: attrs.compensation - 18 });\n      }\n    }\n\n    var loopCharacteristics = semantic.get('loopCharacteristics'),\n        isSequential = loopCharacteristics && loopCharacteristics.get('isSequential');\n\n    if (loopCharacteristics) {\n\n      assign(attrs, {\n        compensation: attrs.compensation - 18,\n      });\n\n      if (taskMarkers.includes('AdhocMarker')) {\n        assign(attrs, {\n          seq: -23,\n          loop: -18,\n          parallel: -24\n        });\n      }\n\n      if (isSequential === undefined) {\n        taskMarkers.push('LoopMarker');\n      }\n\n      if (isSequential === false) {\n        taskMarkers.push('ParallelMarker');\n      }\n\n      if (isSequential === true) {\n        taskMarkers.push('SequentialMarker');\n      }\n    }\n\n    if (taskMarkers.includes('CompensationMarker') && taskMarkers.length === 1) {\n      assign(attrs, {\n        compensation: -8\n      });\n    }\n\n    forEach(taskMarkers, function(marker) {\n      renderTaskMarker(marker, parentGfx, element, attrs);\n    });\n  }\n\n  function renderLabel(parentGfx, label, attrs = {}) {\n    attrs = assign({\n      size: {\n        width: 100\n      }\n    }, attrs);\n\n    var text = textRenderer.createText(label || '', attrs);\n\n    svgClasses(text).add('djs-label');\n\n    svgAppend(parentGfx, text);\n\n    return text;\n  }\n\n  function renderEmbeddedLabel(parentGfx, element, align, attrs = {}) {\n    var semantic = getSemantic(element);\n\n    var box = getBounds({\n      x: element.x,\n      y: element.y,\n      width: element.width,\n      height: element.height\n    }, attrs);\n\n    return renderLabel(parentGfx, semantic.name, {\n      align,\n      box,\n      padding: 7,\n      style: {\n        fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n      }\n    });\n  }\n\n  function renderExternalLabel(parentGfx, element, attrs = {}) {\n    var box = {\n      width: 90,\n      height: 30,\n      x: element.width / 2 + element.x,\n      y: element.height / 2 + element.y\n    };\n\n    return renderLabel(parentGfx, getLabel(element), {\n      box: box,\n      fitBox: true,\n      style: assign(\n        {},\n        textRenderer.getExternalStyle(),\n        {\n          fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n        }\n      )\n    });\n  }\n\n  function renderLaneLabel(parentGfx, text, element, attrs = {}) {\n    var isHorizontalLane = isHorizontal(element);\n\n    var textBox = renderLabel(parentGfx, text, {\n      box: {\n        height: 30,\n        width: isHorizontalLane ? getHeight(element, attrs) : getWidth(element, attrs),\n      },\n      align: 'center-middle',\n      style: {\n        fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n      }\n    });\n\n    if (isHorizontalLane) {\n      var top = -1 * getHeight(element, attrs);\n      transform(textBox, 0, -top, 270);\n    }\n  }\n\n  function renderActivity(parentGfx, element, attrs = {}) {\n    var {\n      width,\n      height\n    } = getBounds(element, attrs);\n\n    return drawRect(parentGfx, width, height, TASK_BORDER_RADIUS, {\n      ...attrs,\n      fill: getFillColor(element, defaultFillColor, attrs.fill),\n      fillOpacity: DEFAULT_OPACITY,\n      stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n    });\n  }\n\n  function renderAssociation(parentGfx, element, attrs = {}) {\n    var semantic = getSemantic(element);\n\n    var fill = getFillColor(element, defaultFillColor, attrs.fill),\n        stroke = getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n\n    if (semantic.get('associationDirection') === 'One' ||\n        semantic.get('associationDirection') === 'Both') {\n      attrs.markerEnd = marker(parentGfx, 'association-end', fill, stroke);\n    }\n\n    if (semantic.get('associationDirection') === 'Both') {\n      attrs.markerStart = marker(parentGfx, 'association-start', fill, stroke);\n    }\n\n    attrs = pickAttrs(attrs, [\n      'markerStart',\n      'markerEnd'\n    ]);\n\n    return drawConnectionSegments(parentGfx, element.waypoints, {\n      ...attrs,\n      stroke,\n      strokeDasharray: '0, 5'\n    });\n  }\n\n  function renderDataObject(parentGfx, element, attrs = {}) {\n    var fill = getFillColor(element, defaultFillColor, attrs.fill),\n        stroke = getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n\n    var pathData = pathMap.getScaledPath('DATA_OBJECT_PATH', {\n      xScaleFactor: 1,\n      yScaleFactor: 1,\n      containerWidth: element.width,\n      containerHeight: element.height,\n      position: {\n        mx: 0.474,\n        my: 0.296\n      }\n    });\n\n    var dataObject = drawPath(parentGfx, pathData, {\n      fill,\n      fillOpacity: DEFAULT_OPACITY,\n      stroke\n    });\n\n    var semantic = getSemantic(element);\n\n    if (isCollection(semantic)) {\n      var collectionPathData = pathMap.getScaledPath('DATA_OBJECT_COLLECTION_PATH', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.33,\n          my: (element.height - 18) / element.height\n        }\n      });\n\n      drawPath(parentGfx, collectionPathData, {\n        strokeWidth: 2,\n        fill,\n        stroke\n      });\n    }\n\n    return dataObject;\n  }\n\n  function renderEvent(parentGfx, element, attrs = {}) {\n    return drawCircle(parentGfx, element.width, element.height, {\n      fillOpacity: DEFAULT_OPACITY,\n      ...attrs,\n      fill: getFillColor(element, defaultFillColor, attrs.fill),\n      stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n    });\n  }\n\n  function renderGateway(parentGfx, element, attrs = {}) {\n    return drawDiamond(parentGfx, element.width, element.height, {\n      fill: getFillColor(element, defaultFillColor, attrs.fill),\n      fillOpacity: DEFAULT_OPACITY,\n      stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n    });\n  }\n\n  function renderLane(parentGfx, element, attrs = {}) {\n    var lane = drawRect(parentGfx, getWidth(element, attrs), getHeight(element, attrs), 0, {\n      fill: getFillColor(element, defaultFillColor, attrs.fill),\n      fillOpacity: attrs.fillOpacity || DEFAULT_OPACITY,\n      stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n      strokeWidth: 1.5\n    });\n\n    var semantic = getSemantic(element);\n\n    if (is(semantic, 'bpmn:Lane')) {\n      var text = semantic.get('name');\n\n      renderLaneLabel(parentGfx, text, element, attrs);\n    }\n\n    return lane;\n  }\n\n  function renderSubProcess(parentGfx, element, attrs = {}) {\n    var activity = renderActivity(parentGfx, element, attrs);\n\n    var expanded = isExpanded(element);\n\n    if (isEventSubProcess(element)) {\n      svgAttr(activity, {\n        strokeDasharray: '0, 5.5',\n        strokeWidth: 2.5\n      });\n\n      if (!expanded) {\n        var flowElements = getSemantic(element).flowElements || [];\n        var startEvents = flowElements.filter(e => is(e, 'bpmn:StartEvent'));\n\n        if (startEvents.length === 1) {\n          renderEventSubProcessIcon(startEvents[0], parentGfx, attrs, element);\n        }\n      }\n    }\n\n    renderEmbeddedLabel(parentGfx, element, expanded ? 'center-top' : 'center-middle', attrs);\n\n    if (expanded) {\n      renderTaskMarkers(parentGfx, element, undefined, attrs);\n    } else {\n      renderTaskMarkers(parentGfx, element, [ 'SubProcessMarker' ], attrs);\n    }\n\n    return activity;\n  }\n\n  function renderEventSubProcessIcon(startEvent, parentGfx, attrs, proxyElement) {\n    var iconSize = 22;\n\n    // match the colors of the enclosing subprocess\n    var proxyAttrs = {\n      fill: getFillColor(proxyElement, defaultFillColor, attrs.fill),\n      stroke: getStrokeColor(proxyElement, defaultStrokeColor, attrs.stroke),\n      width: iconSize,\n      height: iconSize\n    };\n\n    var interrupting = getSemantic(startEvent).isInterrupting;\n    var strokeDasharray = interrupting ? 0 : 3;\n\n    // better visibility for non-interrupting events\n    var strokeWidth = interrupting ? 1 : 1.2;\n\n    // make the icon look larger by drawing a smaller circle\n    var circleSize = 20;\n    var shift = (iconSize - circleSize) / 2;\n    var transform = 'translate(' + shift + ',' + shift + ')';\n\n    drawCircle(parentGfx, circleSize, circleSize, {\n      fill: proxyAttrs.fill,\n      stroke: proxyAttrs.stroke,\n      strokeWidth,\n      strokeDasharray,\n      transform\n    });\n\n    renderEventIcon(startEvent, parentGfx, proxyAttrs, proxyElement);\n  }\n\n  function renderTask(parentGfx, element, attrs = {}) {\n    var activity = renderActivity(parentGfx, element, attrs);\n\n    renderEmbeddedLabel(parentGfx, element, 'center-middle', attrs);\n\n    renderTaskMarkers(parentGfx, element, undefined, attrs);\n\n    return activity;\n  }\n\n  var handlers = this.handlers = {\n    'bpmn:AdHocSubProcess': function(parentGfx, element, attrs = {}) {\n      if (isExpanded(element)) {\n        attrs = pickAttrs(attrs, [\n          'fill',\n          'stroke',\n          'width',\n          'height'\n        ]);\n      } else {\n        attrs = pickAttrs(attrs, [\n          'fill',\n          'stroke'\n        ]);\n      }\n\n      return renderSubProcess(parentGfx, element, attrs);\n    },\n    'bpmn:Association': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      return renderAssociation(parentGfx, element, attrs);\n    },\n    'bpmn:BoundaryEvent': function(parentGfx, element, attrs = {}) {\n      var { renderIcon = true } = attrs;\n\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var semantic = getSemantic(element),\n          cancelActivity = semantic.get('cancelActivity');\n\n      attrs = {\n        strokeWidth: 1.5,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        fillOpacity: FULL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      };\n\n      if (!cancelActivity) {\n        attrs.strokeDasharray = '6';\n      }\n\n      var event = renderEvent(parentGfx, element, attrs);\n\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\n        ...attrs,\n        fill: 'none'\n      });\n\n      if (renderIcon) {\n        renderEventIcon(element, parentGfx, attrs);\n      }\n\n      return event;\n    },\n    'bpmn:BusinessRuleTask': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var task = renderTask(parentGfx, element, attrs);\n\n      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n\n      var businessPath = drawPath(parentGfx, headerData);\n\n      svgAttr(businessPath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n\n      var businessHeaderPath = drawPath(parentGfx, headerPathData);\n\n      svgAttr(businessHeaderPath, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      return task;\n    },\n    'bpmn:CallActivity': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      return renderSubProcess(parentGfx, element, {\n        strokeWidth: 5,\n        ...attrs\n      });\n    },\n    'bpmn:ComplexGateway': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var gateway = renderGateway(parentGfx, element, attrs);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_COMPLEX', {\n        xScaleFactor: 0.5,\n        yScaleFactor:0.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.26\n        }\n      });\n\n      drawPath(parentGfx, pathData, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      return gateway;\n    },\n    'bpmn:DataInput': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      var dataObject = renderDataObject(parentGfx, element, attrs);\n\n      drawPath(parentGfx, arrowPathData, {\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      return dataObject;\n    },\n    'bpmn:DataInputAssociation': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      return renderAssociation(parentGfx, element, {\n        ...attrs,\n        markerEnd: marker(parentGfx, 'association-end', getFillColor(element, defaultFillColor, attrs.fill), getStrokeColor(element, defaultStrokeColor, attrs.stroke))\n      });\n    },\n    'bpmn:DataObject': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      return renderDataObject(parentGfx, element, attrs);\n    },\n    'bpmn:DataObjectReference': as('bpmn:DataObject'),\n    'bpmn:DataOutput': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      var dataObject = renderDataObject(parentGfx, element, attrs);\n\n      drawPath(parentGfx, arrowPathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n\n      return dataObject;\n    },\n    'bpmn:DataOutputAssociation': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      return renderAssociation(parentGfx, element, {\n        ...attrs,\n        markerEnd: marker(parentGfx, 'association-end', getFillColor(element, defaultFillColor, attrs.fill), getStrokeColor(element, defaultStrokeColor, attrs.stroke))\n      });\n    },\n    'bpmn:DataStoreReference': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var dataStorePath = pathMap.getScaledPath('DATA_STORE', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0,\n          my: 0.133\n        }\n      });\n\n      return drawPath(parentGfx, dataStorePath, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        fillOpacity: DEFAULT_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 2\n      });\n    },\n    'bpmn:EndEvent': function(parentGfx, element, attrs = {}) {\n      var { renderIcon = true } = attrs;\n\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var event = renderEvent(parentGfx, element, {\n        ...attrs,\n        strokeWidth: 4\n      });\n\n      if (renderIcon) {\n        renderEventIcon(element, parentGfx, attrs);\n      }\n\n      return event;\n    },\n    'bpmn:EventBasedGateway': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var semantic = getSemantic(element);\n\n      var diamond = renderGateway(parentGfx, element, attrs);\n\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.20, {\n        fill: getFillColor(element, 'none', attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      var type = semantic.get('eventGatewayType'),\n          instantiate = !!semantic.get('instantiate');\n\n      function drawEvent() {\n\n        var pathData = pathMap.getScaledPath('GATEWAY_EVENT_BASED', {\n          xScaleFactor: 0.18,\n          yScaleFactor: 0.18,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.36,\n            my: 0.44\n          }\n        });\n\n        drawPath(parentGfx, pathData, {\n          fill: 'none',\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: 2\n        });\n      }\n\n      if (type === 'Parallel') {\n        var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n          xScaleFactor: 0.4,\n          yScaleFactor: 0.4,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.474,\n            my: 0.296\n          }\n        });\n\n        drawPath(parentGfx, pathData, {\n          fill: 'none',\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: 1\n        });\n      } else if (type === 'Exclusive') {\n        if (!instantiate) {\n          drawCircle(parentGfx, element.width, element.height, element.height * 0.26, {\n            fill: 'none',\n            stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n            strokeWidth: 1\n          });\n        }\n\n        drawEvent();\n      }\n\n\n      return diamond;\n    },\n    'bpmn:ExclusiveGateway': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var gateway = renderGateway(parentGfx, element, attrs);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_EXCLUSIVE', {\n        xScaleFactor: 0.4,\n        yScaleFactor: 0.4,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.32,\n          my: 0.3\n        }\n      });\n\n      var di = getDi(element);\n\n      if (di.get('isMarkerVisible')) {\n        drawPath(parentGfx, pathData, {\n          fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: 1\n        });\n      }\n\n      return gateway;\n    },\n    'bpmn:Gateway': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      return renderGateway(parentGfx, element, attrs);\n    },\n    'bpmn:Group': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke',\n        'width',\n        'height'\n      ]);\n\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1.5,\n        strokeDasharray: '10, 6, 0, 6',\n        fill: 'none',\n        pointerEvents: 'none',\n        width: getWidth(element, attrs),\n        height: getHeight(element, attrs)\n      });\n    },\n    'bpmn:InclusiveGateway': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var gateway = renderGateway(parentGfx, element, attrs);\n\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 2.5\n      });\n\n      return gateway;\n    },\n    'bpmn:IntermediateEvent': function(parentGfx, element, attrs = {}) {\n      var { renderIcon = true } = attrs;\n\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var outer = renderEvent(parentGfx, element, {\n        ...attrs,\n        strokeWidth: 1.5\n      });\n\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1.5\n      });\n\n      if (renderIcon) {\n        renderEventIcon(element, parentGfx, attrs);\n      }\n\n      return outer;\n    },\n    'bpmn:IntermediateCatchEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:IntermediateThrowEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:Lane': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke',\n        'width',\n        'height'\n      ]);\n\n      return renderLane(parentGfx, element, {\n        ...attrs,\n        fillOpacity: LOW_OPACITY\n      });\n    },\n    'bpmn:ManualTask': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var task = renderTask(parentGfx, element, attrs);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {\n        abspos: {\n          x: 17,\n          y: 15\n        }\n      });\n\n      drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 0.5\n      });\n\n      return task;\n    },\n    'bpmn:MessageFlow': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var semantic = getSemantic(element),\n          di = getDi(element);\n\n      var fill = getFillColor(element, defaultFillColor, attrs.fill),\n          stroke = getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n\n      var path = drawConnectionSegments(parentGfx, element.waypoints, {\n        markerEnd: marker(parentGfx, 'messageflow-end', fill, stroke),\n        markerStart: marker(parentGfx, 'messageflow-start', fill, stroke),\n        stroke,\n        strokeDasharray: '10, 11',\n        strokeWidth: 1.5\n      });\n\n      if (semantic.get('messageRef')) {\n        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);\n\n        var markerPathData = pathMap.getScaledPath('MESSAGE_FLOW_MARKER', {\n          abspos: {\n            x: midPoint.x,\n            y: midPoint.y\n          }\n        });\n\n        var messageAttrs = {\n          strokeWidth: 1\n        };\n\n        if (di.get('messageVisibleKind') === 'initiating') {\n          messageAttrs.fill = fill;\n          messageAttrs.stroke = stroke;\n        } else {\n          messageAttrs.fill = stroke;\n          messageAttrs.stroke = fill;\n        }\n\n        var message = drawPath(parentGfx, markerPathData, messageAttrs);\n\n        var messageRef = semantic.get('messageRef'),\n            name = messageRef.get('name');\n\n        var label = renderLabel(parentGfx, name, {\n          align: 'center-top',\n          fitBox: true,\n          style: {\n            fill: stroke\n          }\n        });\n\n        var messageBounds = message.getBBox(),\n            labelBounds = label.getBBox();\n\n        var translateX = midPoint.x - labelBounds.width / 2,\n            translateY = midPoint.y + messageBounds.height / 2 + ELEMENT_LABEL_DISTANCE;\n\n        transform(label, translateX, translateY, 0);\n      }\n\n      return path;\n    },\n    'bpmn:ParallelGateway': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var diamond = renderGateway(parentGfx, element, attrs);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n        xScaleFactor: 0.6,\n        yScaleFactor: 0.6,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.2\n        }\n      });\n\n      drawPath(parentGfx, pathData, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      return diamond;\n    },\n    'bpmn:Participant': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke',\n        'width',\n        'height'\n      ]);\n\n      var participant = renderLane(parentGfx, element, attrs);\n\n      var expandedParticipant = isExpanded(element);\n      var horizontalParticipant = isHorizontal(element);\n\n      var semantic = getSemantic(element),\n          name = semantic.get('name');\n\n      if (expandedParticipant) {\n        var waypoints = horizontalParticipant ? [\n          {\n            x: 30,\n            y: 0\n          },\n          {\n            x: 30,\n            y: getHeight(element, attrs)\n          }\n        ] : [\n          {\n            x: 0,\n            y: 30\n          },\n          {\n            x: getWidth(element, attrs),\n            y: 30\n          }\n        ];\n\n        drawLine(parentGfx, waypoints, {\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: PARTICIPANT_STROKE_WIDTH\n        });\n\n        renderLaneLabel(parentGfx, name, element, attrs);\n      } else {\n        var bounds = getBounds(element, attrs);\n\n        if (!horizontalParticipant) {\n          bounds.height = getWidth(element, attrs);\n          bounds.width = getHeight(element, attrs);\n        }\n\n        var textBox = renderLabel(parentGfx, name, {\n          box: bounds,\n          align: 'center-middle',\n          style: {\n            fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n          }\n        });\n\n        if (!horizontalParticipant) {\n          var top = -1 * getHeight(element, attrs);\n          transform(textBox, 0, -top, 270);\n        }\n      }\n\n      if (semantic.get('participantMultiplicity')) {\n        renderTaskMarker('ParticipantMultiplicityMarker', parentGfx, element, attrs);\n      }\n\n      return participant;\n    },\n    'bpmn:ReceiveTask' : function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var semantic = getSemantic(element);\n\n      var task = renderTask(parentGfx, element, attrs);\n\n      var pathData;\n\n      if (semantic.get('instantiate')) {\n        drawCircle(parentGfx, 28, 28, 20 * 0.22, {\n          fill: getFillColor(element, defaultFillColor, attrs.fill),\n          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n          strokeWidth: 1\n        });\n\n        pathData = pathMap.getScaledPath('TASK_TYPE_INSTANTIATING_SEND', {\n          abspos: {\n            x: 7.77,\n            y: 9.52\n          }\n        });\n      } else {\n        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n          xScaleFactor: 0.9,\n          yScaleFactor: 0.9,\n          containerWidth: 21,\n          containerHeight: 14,\n          position: {\n            mx: 0.3,\n            my: 0.4\n          }\n        });\n      }\n\n      drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      return task;\n    },\n    'bpmn:ScriptTask': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var task = renderTask(parentGfx, element, attrs);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {\n        abspos: {\n          x: 15,\n          y: 20\n        }\n      });\n\n      drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      return task;\n    },\n    'bpmn:SendTask': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var task = renderTask(parentGfx, element, attrs);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: 21,\n        containerHeight: 14,\n        position: {\n          mx: 0.285,\n          my: 0.357\n        }\n      });\n\n      drawPath(parentGfx, pathData, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getFillColor(element, defaultFillColor, attrs.fill),\n        strokeWidth: 1\n      });\n\n      return task;\n    },\n    'bpmn:SequenceFlow': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var fill = getFillColor(element, defaultFillColor, attrs.fill),\n          stroke = getStrokeColor(element, defaultStrokeColor, attrs.stroke);\n\n      var connection = drawConnectionSegments(parentGfx, element.waypoints, {\n        markerEnd: marker(parentGfx, 'sequenceflow-end', fill, stroke),\n        stroke\n      });\n\n      var semantic = getSemantic(element);\n\n      var { source } = element;\n\n      if (source) {\n        var sourceSemantic = getSemantic(source);\n\n        // conditional flow marker\n        if (semantic.get('conditionExpression') && is(sourceSemantic, 'bpmn:Activity')) {\n          svgAttr(connection, {\n            markerStart: marker(parentGfx, 'conditional-flow-marker', fill, stroke)\n          });\n        }\n\n        // default marker\n        if (sourceSemantic.get('default') && (is(sourceSemantic, 'bpmn:Gateway') || is(sourceSemantic, 'bpmn:Activity')) &&\n            sourceSemantic.get('default') === semantic) {\n          svgAttr(connection, {\n            markerStart: marker(parentGfx, 'conditional-default-flow-marker', fill, stroke)\n          });\n        }\n      }\n\n      return connection;\n    },\n    'bpmn:ServiceTask': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var task = renderTask(parentGfx, element, attrs);\n\n      drawCircle(parentGfx, 10, 10, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: 'none',\n        transform: 'translate(6, 6)'\n      });\n\n      var pathDataService1 = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 12,\n          y: 18\n        }\n      });\n\n      drawPath(parentGfx, pathDataService1, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      drawCircle(parentGfx, 10, 10, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: 'none',\n        transform: 'translate(11, 10)'\n      });\n\n      var pathDataService2 = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 17,\n          y: 22\n        }\n      });\n\n      drawPath(parentGfx, pathDataService2, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1\n      });\n\n      return task;\n    },\n    'bpmn:StartEvent': function(parentGfx, element, attrs = {}) {\n      var { renderIcon = true } = attrs;\n\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var semantic = getSemantic(element);\n\n      if (!semantic.get('isInterrupting')) {\n        attrs = {\n          ...attrs,\n          strokeDasharray: '6'\n        };\n      }\n\n      var event = renderEvent(parentGfx, element, attrs);\n\n      if (renderIcon) {\n        renderEventIcon(element, parentGfx, attrs);\n      }\n\n      return event;\n    },\n    'bpmn:SubProcess': function(parentGfx, element, attrs = {}) {\n      if (isExpanded(element)) {\n        attrs = pickAttrs(attrs, [\n          'fill',\n          'stroke',\n          'width',\n          'height'\n        ]);\n      } else {\n        attrs = pickAttrs(attrs, [\n          'fill',\n          'stroke'\n        ]);\n      }\n\n      return renderSubProcess(parentGfx, element, attrs);\n    },\n    'bpmn:Task': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      return renderTask(parentGfx, element, attrs);\n    },\n    'bpmn:TextAnnotation': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke',\n        'width',\n        'height'\n      ]);\n\n      var {\n        width,\n        height\n      } = getBounds(element, attrs);\n\n      var textElement = drawRect(parentGfx, width, height, 0, 0, {\n        fill: 'none',\n        stroke: 'none'\n      });\n\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: width,\n        containerHeight: height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n\n      drawPath(parentGfx, textPathData, {\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke)\n      });\n\n      var semantic = getSemantic(element),\n          text = semantic.get('text') || '';\n\n      renderLabel(parentGfx, text, {\n        align: 'left-top',\n        box: getBounds(element, attrs),\n        padding: 7,\n        style: {\n          fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)\n        }\n      });\n\n      return textElement;\n    },\n    'bpmn:Transaction': function(parentGfx, element, attrs = {}) {\n      if (isExpanded(element)) {\n        attrs = pickAttrs(attrs, [\n          'fill',\n          'stroke',\n          'width',\n          'height'\n        ]);\n      } else {\n        attrs = pickAttrs(attrs, [\n          'fill',\n          'stroke'\n        ]);\n      }\n\n      var outer = renderSubProcess(parentGfx, element, {\n        strokeWidth: 1.5,\n        ...attrs\n      });\n\n      var innerAttrs = styles.style([ 'no-fill', 'no-events' ], {\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 1.5\n      });\n\n      var expanded = isExpanded(element);\n\n      if (!expanded) {\n        attrs = {};\n      }\n\n      drawRect(\n        parentGfx,\n        getWidth(element, attrs),\n        getHeight(element, attrs),\n        TASK_BORDER_RADIUS - INNER_OUTER_DIST,\n        INNER_OUTER_DIST,\n        innerAttrs\n      );\n\n      return outer;\n    },\n    'bpmn:UserTask': function(parentGfx, element, attrs = {}) {\n      attrs = pickAttrs(attrs, [\n        'fill',\n        'stroke'\n      ]);\n\n      var task = renderTask(parentGfx, element, attrs);\n\n      var x = 15;\n      var y = 12;\n\n      var pathDataUser1 = pathMap.getScaledPath('TASK_TYPE_USER_1', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      drawPath(parentGfx, pathDataUser1, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 0.5\n      });\n\n      var pathDataUser2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      drawPath(parentGfx, pathDataUser2, {\n        fill: getFillColor(element, defaultFillColor, attrs.fill),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 0.5\n      });\n\n      var pathDataUser3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      drawPath(parentGfx, pathDataUser3, {\n        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),\n        strokeWidth: 0.5\n      });\n\n      return task;\n    },\n    'label': function(parentGfx, element, attrs = {}) {\n      return renderExternalLabel(parentGfx, element, attrs);\n    }\n  };\n\n  // extension API, use at your own risk\n  this._drawPath = drawPath;\n\n  this._renderer = renderer;\n}\n\n\ninherits(BpmnRenderer, BaseRenderer);\n\nBpmnRenderer.$inject = [\n  'config.bpmnRenderer',\n  'eventBus',\n  'styles',\n  'pathMap',\n  'canvas',\n  'textRenderer'\n];\n\n\n/**\n * @param {Element} element\n *\n * @return {boolean}\n */\nBpmnRenderer.prototype.canRender = function(element) {\n  return is(element, 'bpmn:BaseElement');\n};\n\n/**\n * Draw shape into parentGfx.\n *\n * @param {SVGElement} parentGfx\n * @param {Shape} shape\n * @param {Attrs} [attrs]\n *\n * @return {SVGElement} mainGfx\n */\nBpmnRenderer.prototype.drawShape = function(parentGfx, shape, attrs = {}) {\n  var { type } = shape;\n\n  var handler = this._renderer(type);\n\n  return handler(parentGfx, shape, attrs);\n};\n\n/**\n * Draw connection into parentGfx.\n *\n * @param {SVGElement} parentGfx\n * @param {Connection} connection\n * @param {Attrs} [attrs]\n *\n * @return {SVGElement} mainGfx\n */\nBpmnRenderer.prototype.drawConnection = function(parentGfx, connection, attrs = {}) {\n  var { type } = connection;\n\n  var handler = this._renderer(type);\n\n  return handler(parentGfx, connection, attrs);\n};\n\n/**\n * Get shape path.\n *\n * @param {Shape} shape\n *\n * @return {string} path\n */\nBpmnRenderer.prototype.getShapePath = function(shape) {\n  if (is(shape, 'bpmn:Event')) {\n    return getCirclePath(shape);\n  }\n\n  if (is(shape, 'bpmn:Activity')) {\n    return getRoundRectPath(shape, TASK_BORDER_RADIUS);\n  }\n\n  if (is(shape, 'bpmn:Gateway')) {\n    return getDiamondPath(shape);\n  }\n\n  return getRectPath(shape);\n};\n\n/**\n * Pick attributes if they exist.\n *\n * @param {Object} attrs\n * @param {string[]} keys\n *\n * @returns {Object}\n */\nfunction pickAttrs(attrs, keys = []) {\n  return keys.reduce((pickedAttrs, key) => {\n    if (attrs[ key ]) {\n      pickedAttrs[ key ] = attrs[ key ];\n    }\n\n    return pickedAttrs;\n  }, {});\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}