{"ast":null,"code":"import { assign } from 'min-dash';\nimport inherits from 'inherits-browser';\nimport { is, getBusinessObject } from '../../../util/ModelUtil';\nimport { isLabelExternal, getLabel, hasExternalLabel, isLabel } from '../../../util/LabelUtil';\nimport { getLabelAdjustment } from './util/LabelLayoutUtil';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { getNewAttachPoint } from 'diagram-js/lib/util/AttachUtil';\nimport { getMid, roundPoint } from 'diagram-js/lib/layout/LayoutUtil';\nimport { delta } from 'diagram-js/lib/util/PositionUtil';\nimport { sortBy } from 'min-dash';\nimport { getDistancePointLine, perpendicularFoot } from './util/GeometricUtil';\nvar NAME_PROPERTY = 'name';\nvar TEXT_PROPERTY = 'text';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n * @typedef {import('../BpmnFactory').default} BpmnFactory\n * @typedef {import('../../../draw/TextRenderer').default} TextRenderer\n *\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n * @typedef {import('diagram-js/lib/util/Types').Rect} Rect\n *\n * @typedef {Point[]} Line\n */\n\n/**\n * A component that makes sure that external labels are added\n * together with respective elements and properly updated (DI wise)\n * during move.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {BpmnFactory} bpmnFactory\n * @param {TextRenderer} textRenderer\n */\nexport default function LabelBehavior(eventBus, modeling, bpmnFactory, textRenderer) {\n  CommandInterceptor.call(this, eventBus);\n\n  // update label if name property was updated\n  this.postExecute('element.updateProperties', onPropertyUpdate);\n  this.postExecute('element.updateModdleProperties', e => {\n    const elementBo = getBusinessObject(e.context.element);\n    if (elementBo === e.context.moddleElement) {\n      onPropertyUpdate(e);\n    }\n  });\n  function onPropertyUpdate(e) {\n    var context = e.context,\n      element = context.element,\n      properties = context.properties;\n    if (NAME_PROPERTY in properties) {\n      modeling.updateLabel(element, properties[NAME_PROPERTY]);\n    }\n    if (TEXT_PROPERTY in properties && is(element, 'bpmn:TextAnnotation')) {\n      var newBounds = textRenderer.getTextAnnotationBounds({\n        x: element.x,\n        y: element.y,\n        width: element.width,\n        height: element.height\n      }, properties[TEXT_PROPERTY] || '');\n      modeling.updateLabel(element, properties.text, newBounds);\n    }\n  }\n\n  // create label shape after shape/connection was created\n  this.postExecute(['shape.create', 'connection.create'], function (e) {\n    var context = e.context,\n      hints = context.hints || {};\n    if (hints.createElementsBehavior === false) {\n      return;\n    }\n    var element = context.shape || context.connection;\n    if (isLabel(element) || !isLabelExternal(element)) {\n      return;\n    }\n\n    // only create label if attribute available\n    if (!getLabel(element)) {\n      return;\n    }\n    modeling.updateLabel(element, getLabel(element));\n  });\n\n  // update label after label shape was deleted\n  this.postExecute('shape.delete', function (event) {\n    var context = event.context,\n      labelTarget = context.labelTarget,\n      hints = context.hints || {};\n\n    // check if label\n    if (labelTarget && hints.unsetLabel !== false) {\n      modeling.updateLabel(labelTarget, null, null, {\n        removeShape: false\n      });\n    }\n  });\n  function getVisibleLabelAdjustment(event) {\n    var context = event.context,\n      connection = context.connection,\n      label = connection.label,\n      hints = assign({}, context.hints),\n      newWaypoints = context.newWaypoints || connection.waypoints,\n      oldWaypoints = context.oldWaypoints;\n    if (typeof hints.startChanged === 'undefined') {\n      hints.startChanged = !!hints.connectionStart;\n    }\n    if (typeof hints.endChanged === 'undefined') {\n      hints.endChanged = !!hints.connectionEnd;\n    }\n    return getLabelAdjustment(label, newWaypoints, oldWaypoints, hints);\n  }\n  this.postExecute(['connection.layout', 'connection.updateWaypoints'], function (event) {\n    var context = event.context,\n      hints = context.hints || {};\n    if (hints.labelBehavior === false) {\n      return;\n    }\n    var connection = context.connection,\n      label = connection.label,\n      labelAdjustment;\n\n    // handle missing label as well as the case\n    // that the label parent does not exist (yet),\n    // because it is being pasted / created via multi element create\n    //\n    // Cf. https://github.com/bpmn-io/bpmn-js/pull/1227\n    if (!label || !label.parent) {\n      return;\n    }\n    labelAdjustment = getVisibleLabelAdjustment(event);\n    modeling.moveShape(label, labelAdjustment);\n  });\n\n  // keep label position on shape replace\n  this.postExecute(['shape.replace'], function (event) {\n    var context = event.context,\n      newShape = context.newShape,\n      oldShape = context.oldShape;\n    var businessObject = getBusinessObject(newShape);\n    if (businessObject && isLabelExternal(businessObject) && oldShape.label && newShape.label) {\n      newShape.label.x = oldShape.label.x;\n      newShape.label.y = oldShape.label.y;\n    }\n  });\n\n  // move external label after resizing\n  this.postExecute('shape.resize', function (event) {\n    var context = event.context,\n      shape = context.shape,\n      newBounds = context.newBounds,\n      oldBounds = context.oldBounds;\n    if (hasExternalLabel(shape)) {\n      var label = shape.label,\n        labelMid = getMid(label),\n        edges = asEdges(oldBounds);\n\n      // get nearest border point to label as reference point\n      var referencePoint = getReferencePoint(labelMid, edges);\n      var delta = getReferencePointDelta(referencePoint, oldBounds, newBounds);\n      modeling.moveShape(label, delta);\n    }\n  });\n}\ninherits(LabelBehavior, CommandInterceptor);\nLabelBehavior.$inject = ['eventBus', 'modeling', 'bpmnFactory', 'textRenderer'];\n\n// helpers //////////////////////\n\n/**\n * Calculates a reference point delta relative to a new position\n * of a certain element's bounds\n *\n * @param {Point} referencePoint\n * @param {Rect} oldBounds\n * @param {Rect} newBounds\n *\n * @return {Point}\n */\nexport function getReferencePointDelta(referencePoint, oldBounds, newBounds) {\n  var newReferencePoint = getNewAttachPoint(referencePoint, oldBounds, newBounds);\n  return roundPoint(delta(newReferencePoint, referencePoint));\n}\n\n/**\n * Generates the nearest point (reference point) for a given point\n * onto given set of lines\n *\n * @param {Point} point\n * @param {Line[]} lines\n *\n * @return {Point}\n */\nexport function getReferencePoint(point, lines) {\n  if (!lines.length) {\n    return;\n  }\n  var nearestLine = getNearestLine(point, lines);\n  return perpendicularFoot(point, nearestLine);\n}\n\n/**\n * Convert the given bounds to a lines array containing all edges\n *\n * @param {Rect|Point} bounds\n *\n * @return {Line[]}\n */\nexport function asEdges(bounds) {\n  return [[\n  // top\n  {\n    x: bounds.x,\n    y: bounds.y\n  }, {\n    x: bounds.x + (bounds.width || 0),\n    y: bounds.y\n  }], [\n  // right\n  {\n    x: bounds.x + (bounds.width || 0),\n    y: bounds.y\n  }, {\n    x: bounds.x + (bounds.width || 0),\n    y: bounds.y + (bounds.height || 0)\n  }], [\n  // bottom\n  {\n    x: bounds.x,\n    y: bounds.y + (bounds.height || 0)\n  }, {\n    x: bounds.x + (bounds.width || 0),\n    y: bounds.y + (bounds.height || 0)\n  }], [\n  // left\n  {\n    x: bounds.x,\n    y: bounds.y\n  }, {\n    x: bounds.x,\n    y: bounds.y + (bounds.height || 0)\n  }]];\n}\n\n/**\n * Returns the nearest line for a given point by distance\n * @param {Point} point\n * @param {Line[]} lines\n *\n * @return {Line}\n */\nfunction getNearestLine(point, lines) {\n  var distances = lines.map(function (l) {\n    return {\n      line: l,\n      distance: getDistancePointLine(point, l)\n    };\n  });\n  var sorted = sortBy(distances, 'distance');\n  return sorted[0].line;\n}","map":{"version":3,"names":["assign","inherits","is","getBusinessObject","isLabelExternal","getLabel","hasExternalLabel","isLabel","getLabelAdjustment","CommandInterceptor","getNewAttachPoint","getMid","roundPoint","delta","sortBy","getDistancePointLine","perpendicularFoot","NAME_PROPERTY","TEXT_PROPERTY","LabelBehavior","eventBus","modeling","bpmnFactory","textRenderer","call","postExecute","onPropertyUpdate","e","elementBo","context","element","moddleElement","properties","updateLabel","newBounds","getTextAnnotationBounds","x","y","width","height","text","hints","createElementsBehavior","shape","connection","event","labelTarget","unsetLabel","removeShape","getVisibleLabelAdjustment","label","newWaypoints","waypoints","oldWaypoints","startChanged","connectionStart","endChanged","connectionEnd","labelBehavior","labelAdjustment","parent","moveShape","newShape","oldShape","businessObject","oldBounds","labelMid","edges","asEdges","referencePoint","getReferencePoint","getReferencePointDelta","$inject","newReferencePoint","point","lines","length","nearestLine","getNearestLine","bounds","distances","map","l","line","distance","sorted"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/LabelBehavior.js"],"sourcesContent":["import {\n  assign\n} from 'min-dash';\n\nimport inherits from 'inherits-browser';\n\nimport {\n  is,\n  getBusinessObject\n} from '../../../util/ModelUtil';\n\nimport {\n  isLabelExternal,\n  getLabel,\n  hasExternalLabel,\n  isLabel\n} from '../../../util/LabelUtil';\n\nimport {\n  getLabelAdjustment\n} from './util/LabelLayoutUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getNewAttachPoint\n} from 'diagram-js/lib/util/AttachUtil';\n\nimport {\n  getMid,\n  roundPoint\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  delta\n} from 'diagram-js/lib/util/PositionUtil';\n\nimport {\n  sortBy\n} from 'min-dash';\n\nimport {\n  getDistancePointLine,\n  perpendicularFoot\n} from './util/GeometricUtil';\n\nvar NAME_PROPERTY = 'name';\nvar TEXT_PROPERTY = 'text';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n * @typedef {import('../BpmnFactory').default} BpmnFactory\n * @typedef {import('../../../draw/TextRenderer').default} TextRenderer\n *\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n * @typedef {import('diagram-js/lib/util/Types').Rect} Rect\n *\n * @typedef {Point[]} Line\n */\n\n/**\n * A component that makes sure that external labels are added\n * together with respective elements and properly updated (DI wise)\n * during move.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {BpmnFactory} bpmnFactory\n * @param {TextRenderer} textRenderer\n */\nexport default function LabelBehavior(\n    eventBus, modeling, bpmnFactory,\n    textRenderer) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  // update label if name property was updated\n  this.postExecute('element.updateProperties', onPropertyUpdate);\n  this.postExecute('element.updateModdleProperties', e => {\n    const elementBo = getBusinessObject(e.context.element);\n\n    if (elementBo === e.context.moddleElement) {\n      onPropertyUpdate(e);\n    }\n  });\n\n  function onPropertyUpdate(e) {\n    var context = e.context,\n        element = context.element,\n        properties = context.properties;\n\n    if (NAME_PROPERTY in properties) {\n      modeling.updateLabel(element, properties[NAME_PROPERTY]);\n    }\n\n    if (TEXT_PROPERTY in properties\n        && is(element, 'bpmn:TextAnnotation')) {\n\n      var newBounds = textRenderer.getTextAnnotationBounds(\n        {\n          x: element.x,\n          y: element.y,\n          width: element.width,\n          height: element.height\n        },\n        properties[TEXT_PROPERTY] || ''\n      );\n\n      modeling.updateLabel(element, properties.text, newBounds);\n    }\n  }\n\n  // create label shape after shape/connection was created\n  this.postExecute([ 'shape.create', 'connection.create' ], function(e) {\n    var context = e.context,\n        hints = context.hints || {};\n\n    if (hints.createElementsBehavior === false) {\n      return;\n    }\n\n    var element = context.shape || context.connection;\n\n    if (isLabel(element) || !isLabelExternal(element)) {\n      return;\n    }\n\n    // only create label if attribute available\n    if (!getLabel(element)) {\n      return;\n    }\n\n    modeling.updateLabel(element, getLabel(element));\n  });\n\n  // update label after label shape was deleted\n  this.postExecute('shape.delete', function(event) {\n    var context = event.context,\n        labelTarget = context.labelTarget,\n        hints = context.hints || {};\n\n    // check if label\n    if (labelTarget && hints.unsetLabel !== false) {\n      modeling.updateLabel(labelTarget, null, null, { removeShape: false });\n    }\n  });\n\n  function getVisibleLabelAdjustment(event) {\n\n    var context = event.context,\n        connection = context.connection,\n        label = connection.label,\n        hints = assign({}, context.hints),\n        newWaypoints = context.newWaypoints || connection.waypoints,\n        oldWaypoints = context.oldWaypoints;\n\n\n    if (typeof hints.startChanged === 'undefined') {\n      hints.startChanged = !!hints.connectionStart;\n    }\n\n    if (typeof hints.endChanged === 'undefined') {\n      hints.endChanged = !!hints.connectionEnd;\n    }\n\n    return getLabelAdjustment(label, newWaypoints, oldWaypoints, hints);\n  }\n\n  this.postExecute([\n    'connection.layout',\n    'connection.updateWaypoints'\n  ], function(event) {\n    var context = event.context,\n        hints = context.hints || {};\n\n    if (hints.labelBehavior === false) {\n      return;\n    }\n\n    var connection = context.connection,\n        label = connection.label,\n        labelAdjustment;\n\n    // handle missing label as well as the case\n    // that the label parent does not exist (yet),\n    // because it is being pasted / created via multi element create\n    //\n    // Cf. https://github.com/bpmn-io/bpmn-js/pull/1227\n    if (!label || !label.parent) {\n      return;\n    }\n\n    labelAdjustment = getVisibleLabelAdjustment(event);\n\n    modeling.moveShape(label, labelAdjustment);\n  });\n\n\n  // keep label position on shape replace\n  this.postExecute([ 'shape.replace' ], function(event) {\n    var context = event.context,\n        newShape = context.newShape,\n        oldShape = context.oldShape;\n\n    var businessObject = getBusinessObject(newShape);\n\n    if (businessObject\n      && isLabelExternal(businessObject)\n      && oldShape.label\n      && newShape.label) {\n      newShape.label.x = oldShape.label.x;\n      newShape.label.y = oldShape.label.y;\n    }\n  });\n\n\n  // move external label after resizing\n  this.postExecute('shape.resize', function(event) {\n\n    var context = event.context,\n        shape = context.shape,\n        newBounds = context.newBounds,\n        oldBounds = context.oldBounds;\n\n    if (hasExternalLabel(shape)) {\n\n      var label = shape.label,\n          labelMid = getMid(label),\n          edges = asEdges(oldBounds);\n\n      // get nearest border point to label as reference point\n      var referencePoint = getReferencePoint(labelMid, edges);\n\n      var delta = getReferencePointDelta(referencePoint, oldBounds, newBounds);\n\n      modeling.moveShape(label, delta);\n\n    }\n\n  });\n\n}\n\ninherits(LabelBehavior, CommandInterceptor);\n\nLabelBehavior.$inject = [\n  'eventBus',\n  'modeling',\n  'bpmnFactory',\n  'textRenderer'\n];\n\n// helpers //////////////////////\n\n/**\n * Calculates a reference point delta relative to a new position\n * of a certain element's bounds\n *\n * @param {Point} referencePoint\n * @param {Rect} oldBounds\n * @param {Rect} newBounds\n *\n * @return {Point}\n */\nexport function getReferencePointDelta(referencePoint, oldBounds, newBounds) {\n\n  var newReferencePoint = getNewAttachPoint(referencePoint, oldBounds, newBounds);\n\n  return roundPoint(delta(newReferencePoint, referencePoint));\n}\n\n/**\n * Generates the nearest point (reference point) for a given point\n * onto given set of lines\n *\n * @param {Point} point\n * @param {Line[]} lines\n *\n * @return {Point}\n */\nexport function getReferencePoint(point, lines) {\n\n  if (!lines.length) {\n    return;\n  }\n\n  var nearestLine = getNearestLine(point, lines);\n\n  return perpendicularFoot(point, nearestLine);\n}\n\n/**\n * Convert the given bounds to a lines array containing all edges\n *\n * @param {Rect|Point} bounds\n *\n * @return {Line[]}\n */\nexport function asEdges(bounds) {\n  return [\n    [ // top\n      {\n        x: bounds.x,\n        y: bounds.y\n      },\n      {\n        x: bounds.x + (bounds.width || 0),\n        y: bounds.y\n      }\n    ],\n    [ // right\n      {\n        x: bounds.x + (bounds.width || 0),\n        y: bounds.y\n      },\n      {\n        x: bounds.x + (bounds.width || 0),\n        y: bounds.y + (bounds.height || 0)\n      }\n    ],\n    [ // bottom\n      {\n        x: bounds.x,\n        y: bounds.y + (bounds.height || 0)\n      },\n      {\n        x: bounds.x + (bounds.width || 0),\n        y: bounds.y + (bounds.height || 0)\n      }\n    ],\n    [ // left\n      {\n        x: bounds.x,\n        y: bounds.y\n      },\n      {\n        x: bounds.x,\n        y: bounds.y + (bounds.height || 0)\n      }\n    ]\n  ];\n}\n\n/**\n * Returns the nearest line for a given point by distance\n * @param {Point} point\n * @param {Line[]} lines\n *\n * @return {Line}\n */\nfunction getNearestLine(point, lines) {\n\n  var distances = lines.map(function(l) {\n    return {\n      line: l,\n      distance: getDistancePointLine(point, l)\n    };\n  });\n\n  var sorted = sortBy(distances, 'distance');\n\n  return sorted[0].line;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}