{"ast":null,"code":"import { is } from '../../util/ModelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n */\n\n/**\n * Move collapsed subprocesses into view when drilling down.\n *\n * Zoom and scroll are saved in a session.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function DrilldownCentering(eventBus, canvas) {\n  var currentRoot = null;\n  var positionMap = new Map();\n  eventBus.on('root.set', function (event) {\n    var newRoot = event.element;\n    var currentViewbox = canvas.viewbox();\n    var storedViewbox = positionMap.get(newRoot);\n    positionMap.set(currentRoot, {\n      x: currentViewbox.x,\n      y: currentViewbox.y,\n      zoom: currentViewbox.scale\n    });\n    currentRoot = newRoot;\n\n    // Keep viewbox when replacing root elements\n    if (!is(newRoot, 'bpmn:SubProcess') && !storedViewbox) {\n      return;\n    }\n    storedViewbox = storedViewbox || {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n    var dx = (currentViewbox.x - storedViewbox.x) * currentViewbox.scale,\n      dy = (currentViewbox.y - storedViewbox.y) * currentViewbox.scale;\n    if (dx !== 0 || dy !== 0) {\n      canvas.scroll({\n        dx: dx,\n        dy: dy\n      });\n    }\n    if (storedViewbox.zoom !== currentViewbox.scale) {\n      canvas.zoom(storedViewbox.zoom, {\n        x: 0,\n        y: 0\n      });\n    }\n  });\n  eventBus.on('diagram.clear', function () {\n    positionMap.clear();\n    currentRoot = null;\n  });\n}\nDrilldownCentering.$inject = ['eventBus', 'canvas'];\n\n/**\n * ES5 Map implementation. Works.\n */\nfunction Map() {\n  this._entries = [];\n  this.set = function (key, value) {\n    var found = false;\n    for (var k in this._entries) {\n      if (this._entries[k][0] === key) {\n        this._entries[k][1] = value;\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      this._entries.push([key, value]);\n    }\n  };\n  this.get = function (key) {\n    for (var k in this._entries) {\n      if (this._entries[k][0] === key) {\n        return this._entries[k][1];\n      }\n    }\n    return null;\n  };\n  this.clear = function () {\n    this._entries.length = 0;\n  };\n  this.remove = function (key) {\n    var idx = -1;\n    for (var k in this._entries) {\n      if (this._entries[k][0] === key) {\n        idx = k;\n        break;\n      }\n    }\n    if (idx !== -1) {\n      this._entries.splice(idx, 1);\n    }\n  };\n}","map":{"version":3,"names":["is","DrilldownCentering","eventBus","canvas","currentRoot","positionMap","Map","on","event","newRoot","element","currentViewbox","viewbox","storedViewbox","get","set","x","y","zoom","scale","dx","dy","scroll","clear","$inject","_entries","key","value","found","k","push","length","remove","idx","splice"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/drilldown/DrilldownCentering.js"],"sourcesContent":["import { is } from '../../util/ModelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n */\n\n/**\n * Move collapsed subprocesses into view when drilling down.\n *\n * Zoom and scroll are saved in a session.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function DrilldownCentering(eventBus, canvas) {\n\n  var currentRoot = null;\n  var positionMap = new Map();\n\n  eventBus.on('root.set', function(event) {\n    var newRoot = event.element;\n    var currentViewbox = canvas.viewbox();\n    var storedViewbox = positionMap.get(newRoot);\n\n    positionMap.set(currentRoot, {\n      x: currentViewbox.x,\n      y: currentViewbox.y,\n      zoom: currentViewbox.scale\n    });\n\n    currentRoot = newRoot;\n\n    // Keep viewbox when replacing root elements\n    if (!is(newRoot, 'bpmn:SubProcess') && !storedViewbox) {\n      return;\n    }\n\n    storedViewbox = storedViewbox || { x: 0, y: 0, zoom: 1 };\n\n    var dx = (currentViewbox.x - storedViewbox.x) * currentViewbox.scale,\n        dy = (currentViewbox.y - storedViewbox.y) * currentViewbox.scale;\n\n    if (dx !== 0 || dy !== 0) {\n      canvas.scroll({\n        dx: dx,\n        dy: dy\n      });\n    }\n\n    if (storedViewbox.zoom !== currentViewbox.scale) {\n      canvas.zoom(storedViewbox.zoom, { x: 0, y: 0 });\n    }\n  });\n\n  eventBus.on('diagram.clear', function() {\n    positionMap.clear();\n    currentRoot = null;\n  });\n\n}\n\nDrilldownCentering.$inject = [ 'eventBus', 'canvas' ];\n\n\n/**\n * ES5 Map implementation. Works.\n */\nfunction Map() {\n\n  this._entries = [];\n\n  this.set = function(key, value) {\n\n    var found = false;\n\n    for (var k in this._entries) {\n      if (this._entries[k][0] === key) {\n        this._entries[k][1] = value;\n\n        found = true;\n\n        break;\n      }\n    }\n\n    if (!found) {\n      this._entries.push([ key, value ]);\n    }\n  };\n\n  this.get = function(key) {\n\n    for (var k in this._entries) {\n      if (this._entries[k][0] === key) {\n        return this._entries[k][1];\n      }\n    }\n\n    return null;\n  };\n\n  this.clear = function() {\n    this._entries.length = 0;\n  };\n\n  this.remove = function(key) {\n\n    var idx = -1;\n\n    for (var k in this._entries) {\n      if (this._entries[k][0] === key) {\n        idx = k;\n\n        break;\n      }\n    }\n\n    if (idx !== -1) {\n      this._entries.splice(idx, 1);\n    }\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}