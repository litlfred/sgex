{"ast":null,"code":"import { is } from '../../../util/ModelUtil';\n\n/**\r\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\r\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\r\n * @typedef {import('diagram-js/lib/features/grid-snapping/GridSnapping').default} GridSnapping\r\n */\n\nvar HIGHER_PRIORITY = 1750;\n\n/**\r\n * @param {Canvas} canvas\r\n * @param {EventBus} eventBus\r\n * @param {GridSnapping} gridSnapping\r\n */\nexport default function GridSnappingParticipantBehavior(canvas, eventBus, gridSnapping) {\n  eventBus.on(['create.start', 'shape.move.start'], HIGHER_PRIORITY, function (event) {\n    var context = event.context,\n      shape = context.shape,\n      rootElement = canvas.getRootElement();\n    if (!is(shape, 'bpmn:Participant') || !is(rootElement, 'bpmn:Process') || !rootElement.children.length) {\n      return;\n    }\n    var createConstraints = context.createConstraints;\n    if (!createConstraints) {\n      return;\n    }\n    shape.width = gridSnapping.snapValue(shape.width, {\n      min: shape.width\n    });\n    shape.height = gridSnapping.snapValue(shape.height, {\n      min: shape.height\n    });\n  });\n}\nGridSnappingParticipantBehavior.$inject = ['canvas', 'eventBus', 'gridSnapping'];","map":{"version":3,"names":["is","HIGHER_PRIORITY","GridSnappingParticipantBehavior","canvas","eventBus","gridSnapping","on","event","context","shape","rootElement","getRootElement","children","length","createConstraints","width","snapValue","min","height","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/grid-snapping/behavior/GridSnappingParticipantBehavior.js"],"sourcesContent":["import { is } from '../../../util/ModelUtil';\r\n\r\n/**\r\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\r\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\r\n * @typedef {import('diagram-js/lib/features/grid-snapping/GridSnapping').default} GridSnapping\r\n */\r\n\r\nvar HIGHER_PRIORITY = 1750;\r\n\r\n/**\r\n * @param {Canvas} canvas\r\n * @param {EventBus} eventBus\r\n * @param {GridSnapping} gridSnapping\r\n */\r\nexport default function GridSnappingParticipantBehavior(canvas, eventBus, gridSnapping) {\r\n  eventBus.on([\r\n    'create.start',\r\n    'shape.move.start'\r\n  ], HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        rootElement = canvas.getRootElement();\r\n\r\n    if (!is(shape, 'bpmn:Participant') ||\r\n      !is(rootElement, 'bpmn:Process') ||\r\n      !rootElement.children.length) {\r\n      return;\r\n    }\r\n\r\n    var createConstraints = context.createConstraints;\r\n\r\n    if (!createConstraints) {\r\n      return;\r\n    }\r\n\r\n    shape.width = gridSnapping.snapValue(shape.width, { min: shape.width });\r\n    shape.height = gridSnapping.snapValue(shape.height, { min: shape.height });\r\n  });\r\n}\r\n\r\nGridSnappingParticipantBehavior.$inject = [\r\n  'canvas',\r\n  'eventBus',\r\n  'gridSnapping'\r\n];"],"mappings":"AAAA,SAASA,EAAE,QAAQ,yBAAyB;;AAE5C;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAG,IAAI;;AAE1B;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,+BAA+BA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,YAAY,EAAE;EACtFD,QAAQ,CAACE,EAAE,CAAC,CACV,cAAc,EACd,kBAAkB,CACnB,EAAEL,eAAe,EAAE,UAASM,KAAK,EAAE;IAClC,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;MACvBC,KAAK,GAAGD,OAAO,CAACC,KAAK;MACrBC,WAAW,GAAGP,MAAM,CAACQ,cAAc,CAAC,CAAC;IAEzC,IAAI,CAACX,EAAE,CAACS,KAAK,EAAE,kBAAkB,CAAC,IAChC,CAACT,EAAE,CAACU,WAAW,EAAE,cAAc,CAAC,IAChC,CAACA,WAAW,CAACE,QAAQ,CAACC,MAAM,EAAE;MAC9B;IACF;IAEA,IAAIC,iBAAiB,GAAGN,OAAO,CAACM,iBAAiB;IAEjD,IAAI,CAACA,iBAAiB,EAAE;MACtB;IACF;IAEAL,KAAK,CAACM,KAAK,GAAGV,YAAY,CAACW,SAAS,CAACP,KAAK,CAACM,KAAK,EAAE;MAAEE,GAAG,EAAER,KAAK,CAACM;IAAM,CAAC,CAAC;IACvEN,KAAK,CAACS,MAAM,GAAGb,YAAY,CAACW,SAAS,CAACP,KAAK,CAACS,MAAM,EAAE;MAAED,GAAG,EAAER,KAAK,CAACS;IAAO,CAAC,CAAC;EAC5E,CAAC,CAAC;AACJ;AAEAhB,+BAA+B,CAACiB,OAAO,GAAG,CACxC,QAAQ,EACR,UAAU,EACV,cAAc,CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}