{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import{useLocation,useNavigate}from'react-router-dom';import BpmnViewer from'bpmn-js/lib/NavigatedViewer';import githubService from'../services/githubService';import ContextualHelpMascot from'./ContextualHelpMascot';import'./BPMNViewer.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BPMNViewerComponent=()=>{const location=useLocation();const navigate=useNavigate();const viewerRef=useRef(null);const containerRef=useRef(null);const{profile,repository,component,selectedFile,selectedBranch}=location.state||{};const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[hasWriteAccess,setHasWriteAccess]=useState(false);// Check write permissions\nuseEffect(()=>{const checkPermissions=async()=>{if(repository&&profile){try{var _repository$permissio;// Simple permission check - in real app, this would use githubService\nconst writeAccess=profile.token&&((_repository$permissio=repository.permissions)===null||_repository$permissio===void 0?void 0:_repository$permissio.push);setHasWriteAccess(writeAccess||false);}catch(error){console.warn('Could not check write permissions:',error);setHasWriteAccess(false);}}};checkPermissions();},[repository,profile]);// Load BPMN file content\nconst loadBpmnContent=useCallback(async()=>{var _repository$owner;console.log('🚀 BPMNViewer: loadBpmnContent called with:',{hasViewer:!!viewerRef.current,selectedFile:selectedFile,repository:repository?{name:repository.name,owner:repository.owner}:null});if(!viewerRef.current||!selectedFile||!repository){console.warn('❌ BPMNViewer: Missing required parameters for loadBpmnContent:',{hasViewer:!!viewerRef.current,hasSelectedFile:!!selectedFile,hasRepository:!!repository});return;}// Declare variables outside try block so they're accessible in catch block\nconst owner=((_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login)||repository.full_name.split('/')[0];const repoName=repository.name;const ref=selectedBranch||'main';try{console.log('📡 BPMNViewer: Setting loading state to true');setLoading(true);setError(null);console.log('🔍 BPMNViewer: Repository and file analysis:',{repository:{name:repository.name,full_name:repository.full_name,owner:repository.owner,isDemo:repository.isDemo,default_branch:repository.default_branch},selectedFile:{name:selectedFile.name,path:selectedFile.path,size:selectedFile.size},derivedOwner:owner,repoName:repoName,ref:ref,githubServiceAuthenticated:githubService.isAuth()});console.log(`📂 BPMNViewer: Preparing to load BPMN content from ${owner}/${repoName}:${selectedFile.path} (ref: ${ref})`);console.log('📋 BPMNViewer: Full selected file object:',JSON.stringify(selectedFile,null,2));// Add a timeout for the entire loading process\nconsole.log('⏰ BPMNViewer: Setting up 30-second timeout for loading process');const loadingTimeout=setTimeout(()=>{console.error('⏰ BPMNViewer: Loading process timed out after 30 seconds');setError('Loading timed out. Please try again or check your internet connection.');setLoading(false);},30000);// 30 second timeout\ntry{// Use githubService to fetch file content (works for both public and private repos)\nconsole.log(`🌐 BPMNViewer: About to call githubService.getFileContent with params:`,{owner,repoName,path:selectedFile.path,ref});console.log('🌐 BPMNViewer: Making GitHub API call...');const startTime=Date.now();const bpmnXml=await githubService.getFileContent(owner,repoName,selectedFile.path,ref);const endTime=Date.now();console.log(`✅ BPMNViewer: Successfully loaded BPMN content from repository in ${endTime-startTime}ms`);console.log('📏 BPMNViewer: Content length:',bpmnXml.length);console.log('👀 BPMNViewer: Content preview (first 200 chars):',bpmnXml.substring(0,200));console.log('🔍 BPMNViewer: Content type check - contains bpmn:definitions:',bpmnXml.includes('bpmn:definitions'));console.log('🔍 BPMNViewer: Content type check - contains <definitions:',bpmnXml.includes('<definitions'));// Validate that we got valid BPMN XML content\nif(!bpmnXml||!bpmnXml.trim()){console.error('❌ BPMNViewer: Empty or invalid BPMN file content received');throw new Error('Empty or invalid BPMN file content');}if(!bpmnXml.includes('bpmn:definitions')&&!bpmnXml.includes('<definitions')){console.error('❌ BPMNViewer: File does not contain valid BPMN XML content');console.error('🔍 BPMNViewer: Content preview for debugging:',bpmnXml.substring(0,500));throw new Error('File does not appear to contain valid BPMN XML content');}// Load the BPMN diagram\nconsole.log('🎨 BPMNViewer: Attempting to import XML into BPMN viewer...');await viewerRef.current.importXML(bpmnXml);console.log('✅ BPMNViewer: Successfully imported BPMN XML into viewer');// Center the diagram in the viewer\ntry{console.log('🎯 BPMNViewer: Attempting to center diagram in viewport...');const canvas=viewerRef.current.get('canvas');canvas.zoom('fit-viewport');console.log('✅ BPMNViewer: Successfully centered BPMN diagram in viewport');}catch(centerError){console.warn('⚠️ BPMNViewer: Could not center diagram:',centerError);// This is not a critical error, continue\n}clearTimeout(loadingTimeout);console.log('🎉 BPMNViewer: BPMN loading completed successfully, setting loading to false');setLoading(false);}catch(contentError){clearTimeout(loadingTimeout);console.error('❌ BPMNViewer: Error during file content processing:',contentError);throw contentError;}}catch(err){console.error('💥 BPMNViewer: Error loading BPMN file:',err);console.error('🔍 BPMNViewer: Full error details:',{message:err.message,status:err.status,stack:err.stack,repository:{owner:owner,name:repoName,ref:ref},file:{name:selectedFile.name,path:selectedFile.path}});// Provide specific error messages based on the error type\nif(err.message.includes('timeout')||err.message.includes('timed out')){console.error('⏰ BPMNViewer: Timeout error detected');setError('Loading timed out. Please check your internet connection and try again.');}else if(err.status===404){console.error('🔍 BPMNViewer: 404 error detected - file not found');setError('BPMN file not found in the repository. The file may have been moved or deleted.');}else if(err.status===403){console.error('🔒 BPMNViewer: 403 error detected - access denied');setError('Access denied. This repository may be private and require authentication.');}else if(err.message.includes('rate limit')){console.error('🚦 BPMNViewer: Rate limit error detected');setError('GitHub API rate limit exceeded. Please try again later or authenticate for higher limits.');}else if(err.message.includes('Network')||err.message.includes('Failed to fetch')){console.error('🌐 BPMNViewer: Network error detected');setError('Network error occurred. Please check your internet connection and try again.');}else if(err.message.includes('Empty or invalid BPMN')){console.error('📄 BPMNViewer: Empty file error detected');setError('The selected file appears to be empty or corrupted.');}else if(err.message.includes('does not appear to contain valid BPMN')){console.error('📋 BPMNViewer: Invalid BPMN content error detected');setError('The selected file does not appear to contain valid BPMN XML content.');}else if(err.message.includes('failed to parse XML')||err.message.includes('XML')){console.error('🔧 BPMNViewer: XML parsing error detected');setError('The BPMN file contains invalid XML and cannot be displayed.');}else{console.error('❓ BPMNViewer: Unknown error type');setError(`Failed to load BPMN diagram: ${err.message}`);}console.log('🔄 BPMNViewer: Setting loading state to false due to error');setLoading(false);}},[selectedFile,repository,selectedBranch]);// Initialize BPMN viewer with improved container readiness check\nuseEffect(()=>{const cleanupContainer=()=>{if(containerRef.current){// Clear any existing BPMN.js content from the container\ncontainerRef.current.innerHTML='';console.log('🧹 BPMNViewer: Container cleaned up');}};const initializeViewer=()=>{console.log('🛠️ BPMNViewer: initializeViewer called with:',{hasContainer:!!containerRef.current,hasViewer:!!viewerRef.current,selectedFile:selectedFile?selectedFile.name:'none',containerRefCurrent:containerRef.current,viewerRefCurrent:viewerRef.current});if(containerRef.current&&!viewerRef.current&&selectedFile){try{// Clean the container before creating a new viewer\ncleanupContainer();console.log('🔧 BPMNViewer: Creating new BPMN viewer...');console.log('🔧 BPMNViewer: Container element details:',{tagName:containerRef.current.tagName,className:containerRef.current.className,clientWidth:containerRef.current.clientWidth,clientHeight:containerRef.current.clientHeight,innerHTML:containerRef.current.innerHTML.length});viewerRef.current=new BpmnViewer({container:containerRef.current,keyboard:{bindTo:window}});console.log('✅ BPMNViewer: BPMN viewer initialized successfully');console.log('📞 BPMNViewer: About to call loadBpmnContent()...');loadBpmnContent();}catch(error){console.error('❌ BPMNViewer: Failed to initialize BPMN viewer:',error);console.error('🔍 BPMNViewer: Initialization error details:',{message:error.message,stack:error.stack,containerExists:!!containerRef.current,containerContent:containerRef.current?containerRef.current.innerHTML:'N/A'});// If it's an \"element already exists\" error, try to clean up and retry once\nif(error.message.includes('already exists')){console.log('🔄 BPMNViewer: Detected \"element already exists\" error, attempting cleanup and retry...');cleanupContainer();// Wait a bit and try again\nsetTimeout(()=>{if(containerRef.current&&!viewerRef.current){try{console.log('🔄 BPMNViewer: Retrying viewer creation after cleanup...');viewerRef.current=new BpmnViewer({container:containerRef.current,keyboard:{bindTo:window}});console.log('✅ BPMNViewer: BPMN viewer initialized successfully on retry');loadBpmnContent();}catch(retryError){console.error('❌ BPMNViewer: Failed to initialize BPMN viewer on retry:',retryError);setError(`Failed to initialize BPMN viewer: ${retryError.message}`);setLoading(false);}}},100);}else{setError(`Failed to initialize BPMN viewer: ${error.message}`);setLoading(false);}}}else{console.log('⚠️ BPMNViewer: Skipping viewer initialization:',{hasContainer:!!containerRef.current,hasViewer:!!viewerRef.current,hasSelectedFile:!!selectedFile,reason:!containerRef.current?'No container':viewerRef.current?'Viewer already exists':!selectedFile?'No selected file':'Unknown'});}};const waitForContainer=function(){let attempt=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;const maxAttempts=50;// Try for up to 5 seconds (50 * 100ms)\nif(containerRef.current){console.log(`✅ BPMNViewer: Container found on attempt ${attempt+1}`);initializeViewer();}else if(attempt<maxAttempts){console.log(`⏳ BPMNViewer: Container not ready, attempt ${attempt+1}/${maxAttempts}, retrying in 100ms...`);setTimeout(()=>waitForContainer(attempt+1),100);}else{console.error('❌ BPMNViewer: Container never became available after maximum attempts');setError('Failed to initialize BPMN viewer: container not available');setLoading(false);}};if(selectedFile){console.log('⏰ BPMNViewer: Starting container readiness check for selectedFile:',selectedFile.name);waitForContainer();}else{console.log('❌ BPMNViewer: No selectedFile, skipping viewer initialization');}return()=>{if(viewerRef.current){try{console.log('🧹 BPMNViewer: Destroying BPMN viewer...');viewerRef.current.destroy();console.log('✅ BPMNViewer: BPMN viewer destroyed successfully');}catch(error){console.error('❌ BPMNViewer: Error destroying BPMN viewer:',error);}viewerRef.current=null;}// Also clean up the container on unmount\ncleanupContainer();};},[selectedFile,loadBpmnContent]);const handleEditMode=()=>{if(!hasWriteAccess){alert('You need write permissions to edit BPMN files. Please check your GitHub token permissions.');return;}navigate('/bpmn-editor',{state:{profile,repository,component,selectedFile,selectedBranch,mode:'edit'}});};const handleBackToSelection=()=>{navigate('/business-process-selection',{state:{profile,repository,component,selectedBranch}});};if(!profile||!repository||!selectedFile){navigate('/');return/*#__PURE__*/_jsx(\"div\",{children:\"Redirecting...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bpmn-viewer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"viewer-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"who-branding\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"SGEX Workbench\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"WHO SMART Guidelines Exchange\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:profile.avatar_url||`https://github.com/${profile.login}.png`,alt:\"Profile\",className:\"context-avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"context-repo\",children:repository.name}),/*#__PURE__*/_jsx(\"span\",{className:\"context-component\",children:\"Business Process Viewer\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"viewer-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"breadcrumb-link\",children:\"Select Profile\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/repositories',{state:{profile}}),className:\"breadcrumb-link\",children:\"Select Repository\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/dashboard',{state:{profile,repository}}),className:\"breadcrumb-link\",children:\"DAK Components\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBackToSelection,className:\"breadcrumb-link\",children:\"Business Processes\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:selectedFile.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"viewer-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"viewer-toolbar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar-left\",children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedFile.name}),/*#__PURE__*/_jsx(\"span\",{className:\"view-mode-badge\",children:\"\\uD83D\\uDC41\\uFE0F Read-Only View\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar-right\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn secondary\",onClick:handleBackToSelection,children:\"\\u2190 Back to List\"}),hasWriteAccess&&/*#__PURE__*/_jsx(\"button\",{className:\"action-btn primary\",onClick:handleEditMode,children:\"\\u270F\\uFE0F Edit\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"diagram-container\",children:[loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-overlay\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"loading-info\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Loading BPMN diagram...\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"loading-details\",children:[\"Fetching \",selectedFile.name,\" from \",repository.name]}),/*#__PURE__*/_jsx(\"p\",{className:\"loading-hint\",children:\"This may take a few moments for large files or slow connections.\"})]})]}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"error-overlay\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u274C \",error]}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn secondary\",onClick:()=>loadBpmnContent(),children:\"\\uD83D\\uDD04 Retry\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn secondary\",onClick:()=>navigate('/business-process-selection',{state:{profile,repository,component,selectedBranch}}),children:\"\\u2190 Back to List\"})]})]}):null,/*#__PURE__*/_jsx(\"div\",{className:\"bpmn-container\",ref:containerRef,style:{display:loading||error?'none':'block',width:'100%',height:'100%'}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"diagram-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"File Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"File Name:\"}),/*#__PURE__*/_jsx(\"span\",{children:selectedFile.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"File Path:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"file-path\",children:selectedFile.path})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"File Size:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[(selectedFile.size/1024).toFixed(1),\" KB\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Access Level:\"}),/*#__PURE__*/_jsx(\"span\",{className:`access-badge ${hasWriteAccess?'write':'read'}`,children:hasWriteAccess?'✏️ Edit Access':'👁️ Read-Only'})]})]})]}),!hasWriteAccess&&/*#__PURE__*/_jsxs(\"div\",{className:\"permission-notice\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDD12 Read-Only Access\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You currently have read-only access to this repository. To edit BPMN diagrams, you need write permissions. Contact the repository administrator or update your GitHub Personal Access Token with write permissions.\"})]})]})]})]}),/*#__PURE__*/_jsx(ContextualHelpMascot,{pageId:\"bpmn-viewer\",contextData:{profile,repository,selectedFile}})]});};export default BPMNViewerComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useLocation","useNavigate","BpmnViewer","githubService","ContextualHelpMascot","jsx","_jsx","jsxs","_jsxs","BPMNViewerComponent","location","navigate","viewerRef","containerRef","profile","repository","component","selectedFile","selectedBranch","state","loading","setLoading","error","setError","hasWriteAccess","setHasWriteAccess","checkPermissions","_repository$permissio","writeAccess","token","permissions","push","console","warn","loadBpmnContent","_repository$owner","log","hasViewer","current","name","owner","hasSelectedFile","hasRepository","login","full_name","split","repoName","ref","isDemo","default_branch","path","size","derivedOwner","githubServiceAuthenticated","isAuth","JSON","stringify","loadingTimeout","setTimeout","startTime","Date","now","bpmnXml","getFileContent","endTime","length","substring","includes","trim","Error","importXML","canvas","get","zoom","centerError","clearTimeout","contentError","err","message","status","stack","file","cleanupContainer","innerHTML","initializeViewer","hasContainer","containerRefCurrent","viewerRefCurrent","tagName","className","clientWidth","clientHeight","container","keyboard","bindTo","window","containerExists","containerContent","retryError","reason","waitForContainer","attempt","arguments","undefined","maxAttempts","destroy","handleEditMode","alert","mode","handleBackToSelection","children","src","avatar_url","alt","onClick","style","display","width","height","toFixed","pageId","contextData"],"sources":["/home/runner/work/sgex/sgex/src/components/BPMNViewer.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport BpmnViewer from 'bpmn-js/lib/NavigatedViewer';\nimport githubService from '../services/githubService';\nimport ContextualHelpMascot from './ContextualHelpMascot';\nimport './BPMNViewer.css';\n\nconst BPMNViewerComponent = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const viewerRef = useRef(null);\n  const containerRef = useRef(null);\n  \n  const { profile, repository, component, selectedFile, selectedBranch } = location.state || {};\n  \n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hasWriteAccess, setHasWriteAccess] = useState(false);\n\n  // Check write permissions\n  useEffect(() => {\n    const checkPermissions = async () => {\n      if (repository && profile) {\n        try {\n          // Simple permission check - in real app, this would use githubService\n          const writeAccess = profile.token && repository.permissions?.push;\n          setHasWriteAccess(writeAccess || false);\n        } catch (error) {\n          console.warn('Could not check write permissions:', error);\n          setHasWriteAccess(false);\n        }\n      }\n    };\n\n    checkPermissions();\n  }, [repository, profile]);\n\n  // Load BPMN file content\n  const loadBpmnContent = useCallback(async () => {\n    console.log('🚀 BPMNViewer: loadBpmnContent called with:', {\n      hasViewer: !!viewerRef.current,\n      selectedFile: selectedFile,\n      repository: repository ? {\n        name: repository.name,\n        owner: repository.owner\n      } : null\n    });\n\n    if (!viewerRef.current || !selectedFile || !repository) {\n      console.warn('❌ BPMNViewer: Missing required parameters for loadBpmnContent:', {\n        hasViewer: !!viewerRef.current,\n        hasSelectedFile: !!selectedFile,\n        hasRepository: !!repository\n      });\n      return;\n    }\n\n    // Declare variables outside try block so they're accessible in catch block\n    const owner = repository.owner?.login || repository.full_name.split('/')[0];\n    const repoName = repository.name;\n    const ref = selectedBranch || 'main';\n\n    try {\n      console.log('📡 BPMNViewer: Setting loading state to true');\n      setLoading(true);\n      setError(null);\n\n      console.log('🔍 BPMNViewer: Repository and file analysis:', {\n        repository: {\n          name: repository.name,\n          full_name: repository.full_name,\n          owner: repository.owner,\n          isDemo: repository.isDemo,\n          default_branch: repository.default_branch\n        },\n        selectedFile: {\n          name: selectedFile.name,\n          path: selectedFile.path,\n          size: selectedFile.size\n        },\n        derivedOwner: owner,\n        repoName: repoName,\n        ref: ref,\n        githubServiceAuthenticated: githubService.isAuth()\n      });\n\n      console.log(`📂 BPMNViewer: Preparing to load BPMN content from ${owner}/${repoName}:${selectedFile.path} (ref: ${ref})`);\n      console.log('📋 BPMNViewer: Full selected file object:', JSON.stringify(selectedFile, null, 2));\n      \n      // Add a timeout for the entire loading process\n      console.log('⏰ BPMNViewer: Setting up 30-second timeout for loading process');\n      const loadingTimeout = setTimeout(() => {\n        console.error('⏰ BPMNViewer: Loading process timed out after 30 seconds');\n        setError('Loading timed out. Please try again or check your internet connection.');\n        setLoading(false);\n      }, 30000); // 30 second timeout\n      \n      try {\n        // Use githubService to fetch file content (works for both public and private repos)\n        console.log(`🌐 BPMNViewer: About to call githubService.getFileContent with params:`, {\n          owner,\n          repoName,\n          path: selectedFile.path,\n          ref\n        });\n        \n        console.log('🌐 BPMNViewer: Making GitHub API call...');\n        const startTime = Date.now();\n        const bpmnXml = await githubService.getFileContent(owner, repoName, selectedFile.path, ref);\n        const endTime = Date.now();\n        \n        console.log(`✅ BPMNViewer: Successfully loaded BPMN content from repository in ${endTime - startTime}ms`);\n        console.log('📏 BPMNViewer: Content length:', bpmnXml.length);\n        console.log('👀 BPMNViewer: Content preview (first 200 chars):', bpmnXml.substring(0, 200));\n        console.log('🔍 BPMNViewer: Content type check - contains bpmn:definitions:', bpmnXml.includes('bpmn:definitions'));\n        console.log('🔍 BPMNViewer: Content type check - contains <definitions:', bpmnXml.includes('<definitions'));\n\n        // Validate that we got valid BPMN XML content\n        if (!bpmnXml || !bpmnXml.trim()) {\n          console.error('❌ BPMNViewer: Empty or invalid BPMN file content received');\n          throw new Error('Empty or invalid BPMN file content');\n        }\n        \n        if (!bpmnXml.includes('bpmn:definitions') && !bpmnXml.includes('<definitions')) {\n          console.error('❌ BPMNViewer: File does not contain valid BPMN XML content');\n          console.error('🔍 BPMNViewer: Content preview for debugging:', bpmnXml.substring(0, 500));\n          throw new Error('File does not appear to contain valid BPMN XML content');\n        }\n\n        // Load the BPMN diagram\n        console.log('🎨 BPMNViewer: Attempting to import XML into BPMN viewer...');\n        await viewerRef.current.importXML(bpmnXml);\n        console.log('✅ BPMNViewer: Successfully imported BPMN XML into viewer');\n        \n        // Center the diagram in the viewer\n        try {\n          console.log('🎯 BPMNViewer: Attempting to center diagram in viewport...');\n          const canvas = viewerRef.current.get('canvas');\n          canvas.zoom('fit-viewport');\n          console.log('✅ BPMNViewer: Successfully centered BPMN diagram in viewport');\n        } catch (centerError) {\n          console.warn('⚠️ BPMNViewer: Could not center diagram:', centerError);\n          // This is not a critical error, continue\n        }\n        \n        clearTimeout(loadingTimeout);\n        console.log('🎉 BPMNViewer: BPMN loading completed successfully, setting loading to false');\n        setLoading(false);\n      } catch (contentError) {\n        clearTimeout(loadingTimeout);\n        console.error('❌ BPMNViewer: Error during file content processing:', contentError);\n        throw contentError;      }\n    } catch (err) {\n      console.error('💥 BPMNViewer: Error loading BPMN file:', err);\n      console.error('🔍 BPMNViewer: Full error details:', {\n        message: err.message,\n        status: err.status,\n        stack: err.stack,\n        repository: {\n          owner: owner,\n          name: repoName,\n          ref: ref\n        },\n        file: {\n          name: selectedFile.name,\n          path: selectedFile.path\n        }\n      });\n      \n      // Provide specific error messages based on the error type\n      if (err.message.includes('timeout') || err.message.includes('timed out')) {\n        console.error('⏰ BPMNViewer: Timeout error detected');\n        setError('Loading timed out. Please check your internet connection and try again.');\n      } else if (err.status === 404) {\n        console.error('🔍 BPMNViewer: 404 error detected - file not found');\n        setError('BPMN file not found in the repository. The file may have been moved or deleted.');\n      } else if (err.status === 403) {\n        console.error('🔒 BPMNViewer: 403 error detected - access denied');\n        setError('Access denied. This repository may be private and require authentication.');\n      } else if (err.message.includes('rate limit')) {\n        console.error('🚦 BPMNViewer: Rate limit error detected');\n        setError('GitHub API rate limit exceeded. Please try again later or authenticate for higher limits.');\n      } else if (err.message.includes('Network') || err.message.includes('Failed to fetch')) {\n        console.error('🌐 BPMNViewer: Network error detected');\n        setError('Network error occurred. Please check your internet connection and try again.');\n      } else if (err.message.includes('Empty or invalid BPMN')) {\n        console.error('📄 BPMNViewer: Empty file error detected');\n        setError('The selected file appears to be empty or corrupted.');\n      } else if (err.message.includes('does not appear to contain valid BPMN')) {\n        console.error('📋 BPMNViewer: Invalid BPMN content error detected');\n        setError('The selected file does not appear to contain valid BPMN XML content.');\n      } else if (err.message.includes('failed to parse XML') || err.message.includes('XML')) {\n        console.error('🔧 BPMNViewer: XML parsing error detected');\n        setError('The BPMN file contains invalid XML and cannot be displayed.');\n      } else {\n        console.error('❓ BPMNViewer: Unknown error type');\n        setError(`Failed to load BPMN diagram: ${err.message}`);\n      }\n      \n      console.log('🔄 BPMNViewer: Setting loading state to false due to error');\n      setLoading(false);\n    }\n  }, [selectedFile, repository, selectedBranch]);\n\n  // Initialize BPMN viewer with improved container readiness check\n  useEffect(() => {\n    const cleanupContainer = () => {\n      if (containerRef.current) {\n        // Clear any existing BPMN.js content from the container\n        containerRef.current.innerHTML = '';\n        console.log('🧹 BPMNViewer: Container cleaned up');\n      }\n    };\n\n    const initializeViewer = () => {\n      console.log('🛠️ BPMNViewer: initializeViewer called with:', {\n        hasContainer: !!containerRef.current,\n        hasViewer: !!viewerRef.current,\n        selectedFile: selectedFile ? selectedFile.name : 'none',\n        containerRefCurrent: containerRef.current,\n        viewerRefCurrent: viewerRef.current\n      });\n\n      if (containerRef.current && !viewerRef.current && selectedFile) {\n        try {\n          // Clean the container before creating a new viewer\n          cleanupContainer();\n          \n          console.log('🔧 BPMNViewer: Creating new BPMN viewer...');\n          console.log('🔧 BPMNViewer: Container element details:', {\n            tagName: containerRef.current.tagName,\n            className: containerRef.current.className,\n            clientWidth: containerRef.current.clientWidth,\n            clientHeight: containerRef.current.clientHeight,\n            innerHTML: containerRef.current.innerHTML.length\n          });\n          \n          viewerRef.current = new BpmnViewer({\n            container: containerRef.current,\n            keyboard: {\n              bindTo: window\n            }\n          });\n          console.log('✅ BPMNViewer: BPMN viewer initialized successfully');\n          console.log('📞 BPMNViewer: About to call loadBpmnContent()...');\n          \n          loadBpmnContent();\n        } catch (error) {\n          console.error('❌ BPMNViewer: Failed to initialize BPMN viewer:', error);\n          console.error('🔍 BPMNViewer: Initialization error details:', {\n            message: error.message,\n            stack: error.stack,\n            containerExists: !!containerRef.current,\n            containerContent: containerRef.current ? containerRef.current.innerHTML : 'N/A'\n          });\n          \n          // If it's an \"element already exists\" error, try to clean up and retry once\n          if (error.message.includes('already exists')) {\n            console.log('🔄 BPMNViewer: Detected \"element already exists\" error, attempting cleanup and retry...');\n            cleanupContainer();\n            \n            // Wait a bit and try again\n            setTimeout(() => {\n              if (containerRef.current && !viewerRef.current) {\n                try {\n                  console.log('🔄 BPMNViewer: Retrying viewer creation after cleanup...');\n                  viewerRef.current = new BpmnViewer({\n                    container: containerRef.current,\n                    keyboard: {\n                      bindTo: window\n                    }\n                  });\n                  console.log('✅ BPMNViewer: BPMN viewer initialized successfully on retry');\n                  loadBpmnContent();\n                } catch (retryError) {\n                  console.error('❌ BPMNViewer: Failed to initialize BPMN viewer on retry:', retryError);\n                  setError(`Failed to initialize BPMN viewer: ${retryError.message}`);\n                  setLoading(false);\n                }\n              }\n            }, 100);\n          } else {\n            setError(`Failed to initialize BPMN viewer: ${error.message}`);\n            setLoading(false);\n          }\n        }\n      } else {\n        console.log('⚠️ BPMNViewer: Skipping viewer initialization:', {\n          hasContainer: !!containerRef.current,\n          hasViewer: !!viewerRef.current,\n          hasSelectedFile: !!selectedFile,\n          reason: !containerRef.current ? 'No container' : \n                  viewerRef.current ? 'Viewer already exists' : \n                  !selectedFile ? 'No selected file' : 'Unknown'\n        });\n      }\n    };\n\n    const waitForContainer = (attempt = 0) => {\n      const maxAttempts = 50; // Try for up to 5 seconds (50 * 100ms)\n      \n      if (containerRef.current) {\n        console.log(`✅ BPMNViewer: Container found on attempt ${attempt + 1}`);\n        initializeViewer();\n      } else if (attempt < maxAttempts) {\n        console.log(`⏳ BPMNViewer: Container not ready, attempt ${attempt + 1}/${maxAttempts}, retrying in 100ms...`);\n        setTimeout(() => waitForContainer(attempt + 1), 100);\n      } else {\n        console.error('❌ BPMNViewer: Container never became available after maximum attempts');\n        setError('Failed to initialize BPMN viewer: container not available');\n        setLoading(false);\n      }\n    };\n\n    if (selectedFile) {\n      console.log('⏰ BPMNViewer: Starting container readiness check for selectedFile:', selectedFile.name);\n      waitForContainer();\n    } else {\n      console.log('❌ BPMNViewer: No selectedFile, skipping viewer initialization');\n    }\n\n    return () => {\n      if (viewerRef.current) {\n        try {\n          console.log('🧹 BPMNViewer: Destroying BPMN viewer...');\n          viewerRef.current.destroy();\n          console.log('✅ BPMNViewer: BPMN viewer destroyed successfully');\n        } catch (error) {\n          console.error('❌ BPMNViewer: Error destroying BPMN viewer:', error);\n        }\n        viewerRef.current = null;\n      }\n      // Also clean up the container on unmount\n      cleanupContainer();\n    };\n  }, [selectedFile, loadBpmnContent]);\n\n  const handleEditMode = () => {\n    if (!hasWriteAccess) {\n      alert('You need write permissions to edit BPMN files. Please check your GitHub token permissions.');\n      return;\n    }\n\n    navigate('/bpmn-editor', {\n      state: {\n        profile,\n        repository,\n        component,\n        selectedFile,\n        selectedBranch,\n        mode: 'edit'\n      }\n    });\n  };\n\n  const handleBackToSelection = () => {\n    navigate('/business-process-selection', {\n      state: {\n        profile,\n        repository,\n        component,\n        selectedBranch\n      }\n    });\n  };\n\n  if (!profile || !repository || !selectedFile) {\n    navigate('/');\n    return <div>Redirecting...</div>;\n  }\n\n  return (\n    <div className=\"bpmn-viewer\">\n      <div className=\"viewer-header\">\n        <div className=\"who-branding\">\n          <h1>SGEX Workbench</h1>\n          <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n        </div>\n        <div className=\"context-info\">\n          <img \n            src={profile.avatar_url || `https://github.com/${profile.login}.png`} \n            alt=\"Profile\" \n            className=\"context-avatar\" \n          />\n          <div className=\"context-details\">\n            <span className=\"context-repo\">{repository.name}</span>\n            <span className=\"context-component\">Business Process Viewer</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"viewer-content\">\n        <div className=\"breadcrumb\">\n          <button onClick={() => navigate('/')} className=\"breadcrumb-link\">\n            Select Profile\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate('/repositories', { state: { profile } })} className=\"breadcrumb-link\">\n            Select Repository\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate('/dashboard', { state: { profile, repository } })} className=\"breadcrumb-link\">\n            DAK Components\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={handleBackToSelection} className=\"breadcrumb-link\">\n            Business Processes\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <span className=\"breadcrumb-current\">{selectedFile.name}</span>\n        </div>\n\n        <div className=\"viewer-main\">\n          <div className=\"viewer-toolbar\">\n            <div className=\"toolbar-left\">\n              <h3>{selectedFile.name}</h3>\n              <span className=\"view-mode-badge\">👁️ Read-Only View</span>\n            </div>\n            <div className=\"toolbar-right\">\n              <button \n                className=\"action-btn secondary\"\n                onClick={handleBackToSelection}\n              >\n                ← Back to List\n              </button>\n              {hasWriteAccess && (\n                <button \n                  className=\"action-btn primary\"\n                  onClick={handleEditMode}\n                >\n                  ✏️ Edit\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"diagram-container\">\n            {loading ? (\n              <div className=\"loading-overlay\">\n                <div className=\"spinner\"></div>\n                <div className=\"loading-info\">\n                  <p>Loading BPMN diagram...</p>\n                  <p className=\"loading-details\">\n                    Fetching {selectedFile.name} from {repository.name}\n                  </p>\n                  <p className=\"loading-hint\">\n                    This may take a few moments for large files or slow connections.\n                  </p>\n                </div>\n              </div>\n            ) : error ? (\n              <div className=\"error-overlay\">\n                <p>❌ {error}</p>\n                <div className=\"error-actions\">\n                  <button \n                    className=\"action-btn secondary\"\n                    onClick={() => loadBpmnContent()}\n                  >\n                    🔄 Retry\n                  </button>\n                  <button \n                    className=\"action-btn secondary\"\n                    onClick={() => navigate('/business-process-selection', {\n                      state: { profile, repository, component, selectedBranch }\n                    })}\n                  >\n                    ← Back to List\n                  </button>\n                </div>\n              </div>\n            ) : null}\n            \n            {/* Always render the BPMN container so the ref can be set */}\n            <div \n              className=\"bpmn-container\" \n              ref={containerRef}\n              style={{ \n                display: loading || error ? 'none' : 'block',\n                width: '100%',\n                height: '100%'\n              }}\n            ></div>\n          </div>\n\n          <div className=\"diagram-info\">\n            <div className=\"info-section\">\n              <h4>File Information</h4>\n              <div className=\"info-grid\">\n                <div className=\"info-item\">\n                  <label>File Name:</label>\n                  <span>{selectedFile.name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>File Path:</label>\n                  <span className=\"file-path\">{selectedFile.path}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>File Size:</label>\n                  <span>{(selectedFile.size / 1024).toFixed(1)} KB</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>Access Level:</label>\n                  <span className={`access-badge ${hasWriteAccess ? 'write' : 'read'}`}>\n                    {hasWriteAccess ? '✏️ Edit Access' : '👁️ Read-Only'}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {!hasWriteAccess && (\n              <div className=\"permission-notice\">\n                <h4>🔒 Read-Only Access</h4>\n                <p>\n                  You currently have read-only access to this repository. \n                  To edit BPMN diagrams, you need write permissions. \n                  Contact the repository administrator or update your GitHub Personal Access Token with write permissions.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      <ContextualHelpMascot \n        pageId=\"bpmn-viewer\"\n        contextData={{ profile, repository, selectedFile }}\n      />\n    </div>\n  );\n};\n\nexport default BPMNViewerComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}