{"ast":null,"code":"import { is } from '../../../util/ModelUtil';\nimport { getParent } from './ModelingUtil';\nimport { isHorizontal } from '../../../util/DiUtil';\nimport { asTRBL } from 'diagram-js/lib/layout/LayoutUtil';\nimport { substractTRBL, resizeTRBL } from 'diagram-js/lib/features/resize/ResizeUtil';\n\n/**\n * @typedef {import('../../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').Rect} Rect\n */\n\nvar abs = Math.abs;\nfunction getTRBLResize(oldBounds, newBounds) {\n  return substractTRBL(asTRBL(newBounds), asTRBL(oldBounds));\n}\nvar LANE_PARENTS = ['bpmn:Participant', 'bpmn:Process', 'bpmn:SubProcess'];\nexport var LANE_INDENTATION = 30;\n\n/**\n * Return all lanes that are children of the given shape.\n *\n * @param  {Shape} shape\n * @param  {Shape[]} [collectedShapes]\n *\n * @return {Shape[]}\n */\nexport function collectLanes(shape, collectedShapes) {\n  collectedShapes = collectedShapes || [];\n  shape.children.filter(function (s) {\n    if (is(s, 'bpmn:Lane')) {\n      collectLanes(s, collectedShapes);\n      collectedShapes.push(s);\n    }\n  });\n  return collectedShapes;\n}\n\n/**\n * Return all lanes that are direct children of the given shape.\n *\n * @param {Shape} shape\n *\n * @return {Shape[]}\n */\nexport function getChildLanes(shape) {\n  return shape.children.filter(function (c) {\n    return is(c, 'bpmn:Lane');\n  });\n}\n\n/**\n * Return the parent shape of the given lane.\n *\n * @param {Shape} shape\n *\n * @return {Shape}\n */\nexport function getLanesRoot(shape) {\n  return getParent(shape, LANE_PARENTS) || shape;\n}\n\n/**\n * Compute the required resize operations for lanes\n * adjacent to the given shape, assuming it will be\n * resized to the given new bounds.\n *\n * @param {Shape} shape\n * @param {Rect} newBounds\n *\n * @return { {\n *   shape: Shape;\n *   newBounds: Rect;\n * }[] }\n */\nexport function computeLanesResize(shape, newBounds) {\n  var rootElement = getLanesRoot(shape);\n  var initialShapes = is(rootElement, 'bpmn:Process') ? [] : [rootElement];\n  var allLanes = collectLanes(rootElement, initialShapes),\n    shapeTrbl = asTRBL(shape),\n    shapeNewTrbl = asTRBL(newBounds),\n    trblResize = getTRBLResize(shape, newBounds),\n    resizeNeeded = [];\n  var isHorizontalLane = isHorizontal(shape);\n  allLanes.forEach(function (other) {\n    if (other === shape) {\n      return;\n    }\n    var topResize = isHorizontalLane ? 0 : trblResize.top,\n      rightResize = isHorizontalLane ? trblResize.right : 0,\n      bottomResize = isHorizontalLane ? 0 : trblResize.bottom,\n      leftResize = isHorizontalLane ? trblResize.left : 0;\n    var otherTrbl = asTRBL(other);\n    if (trblResize.top) {\n      if (abs(otherTrbl.bottom - shapeTrbl.top) < 10) {\n        bottomResize = shapeNewTrbl.top - otherTrbl.bottom;\n      }\n      if (abs(otherTrbl.top - shapeTrbl.top) < 5) {\n        topResize = shapeNewTrbl.top - otherTrbl.top;\n      }\n    }\n    if (trblResize.left) {\n      if (abs(otherTrbl.right - shapeTrbl.left) < 10) {\n        rightResize = shapeNewTrbl.left - otherTrbl.right;\n      }\n      if (abs(otherTrbl.left - shapeTrbl.left) < 5) {\n        leftResize = shapeNewTrbl.left - otherTrbl.left;\n      }\n    }\n    if (trblResize.bottom) {\n      if (abs(otherTrbl.top - shapeTrbl.bottom) < 10) {\n        topResize = shapeNewTrbl.bottom - otherTrbl.top;\n      }\n      if (abs(otherTrbl.bottom - shapeTrbl.bottom) < 5) {\n        bottomResize = shapeNewTrbl.bottom - otherTrbl.bottom;\n      }\n    }\n    if (trblResize.right) {\n      if (abs(otherTrbl.left - shapeTrbl.right) < 10) {\n        leftResize = shapeNewTrbl.right - otherTrbl.left;\n      }\n      if (abs(otherTrbl.right - shapeTrbl.right) < 5) {\n        rightResize = shapeNewTrbl.right - otherTrbl.right;\n      }\n    }\n    if (topResize || rightResize || bottomResize || leftResize) {\n      resizeNeeded.push({\n        shape: other,\n        newBounds: resizeTRBL(other, {\n          top: topResize,\n          right: rightResize,\n          bottom: bottomResize,\n          left: leftResize\n        })\n      });\n    }\n  });\n  return resizeNeeded;\n}","map":{"version":3,"names":["is","getParent","isHorizontal","asTRBL","substractTRBL","resizeTRBL","abs","Math","getTRBLResize","oldBounds","newBounds","LANE_PARENTS","LANE_INDENTATION","collectLanes","shape","collectedShapes","children","filter","s","push","getChildLanes","c","getLanesRoot","computeLanesResize","rootElement","initialShapes","allLanes","shapeTrbl","shapeNewTrbl","trblResize","resizeNeeded","isHorizontalLane","forEach","other","topResize","top","rightResize","right","bottomResize","bottom","leftResize","left","otherTrbl"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/util/LaneUtil.js"],"sourcesContent":["import { is } from '../../../util/ModelUtil';\n\nimport {\n  getParent\n} from './ModelingUtil';\n\nimport {\n  isHorizontal\n} from '../../../util/DiUtil';\n\nimport {\n  asTRBL\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  substractTRBL,\n  resizeTRBL\n} from 'diagram-js/lib/features/resize/ResizeUtil';\n\n/**\n * @typedef {import('../../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').Rect} Rect\n */\n\nvar abs = Math.abs;\n\n\nfunction getTRBLResize(oldBounds, newBounds) {\n  return substractTRBL(asTRBL(newBounds), asTRBL(oldBounds));\n}\n\n\nvar LANE_PARENTS = [\n  'bpmn:Participant',\n  'bpmn:Process',\n  'bpmn:SubProcess'\n];\n\nexport var LANE_INDENTATION = 30;\n\n\n/**\n * Return all lanes that are children of the given shape.\n *\n * @param  {Shape} shape\n * @param  {Shape[]} [collectedShapes]\n *\n * @return {Shape[]}\n */\nexport function collectLanes(shape, collectedShapes) {\n\n  collectedShapes = collectedShapes || [];\n\n  shape.children.filter(function(s) {\n    if (is(s, 'bpmn:Lane')) {\n      collectLanes(s, collectedShapes);\n\n      collectedShapes.push(s);\n    }\n  });\n\n  return collectedShapes;\n}\n\n\n/**\n * Return all lanes that are direct children of the given shape.\n *\n * @param {Shape} shape\n *\n * @return {Shape[]}\n */\nexport function getChildLanes(shape) {\n  return shape.children.filter(function(c) {\n    return is(c, 'bpmn:Lane');\n  });\n}\n\n\n/**\n * Return the parent shape of the given lane.\n *\n * @param {Shape} shape\n *\n * @return {Shape}\n */\nexport function getLanesRoot(shape) {\n  return getParent(shape, LANE_PARENTS) || shape;\n}\n\n\n/**\n * Compute the required resize operations for lanes\n * adjacent to the given shape, assuming it will be\n * resized to the given new bounds.\n *\n * @param {Shape} shape\n * @param {Rect} newBounds\n *\n * @return { {\n *   shape: Shape;\n *   newBounds: Rect;\n * }[] }\n */\nexport function computeLanesResize(shape, newBounds) {\n\n  var rootElement = getLanesRoot(shape);\n\n  var initialShapes = is(rootElement, 'bpmn:Process') ? [] : [ rootElement ];\n\n  var allLanes = collectLanes(rootElement, initialShapes),\n      shapeTrbl = asTRBL(shape),\n      shapeNewTrbl = asTRBL(newBounds),\n      trblResize = getTRBLResize(shape, newBounds),\n      resizeNeeded = [];\n\n  var isHorizontalLane = isHorizontal(shape);\n\n  allLanes.forEach(function(other) {\n\n    if (other === shape) {\n      return;\n    }\n\n    var topResize = isHorizontalLane ? 0 : trblResize.top,\n        rightResize = isHorizontalLane ? trblResize.right : 0,\n        bottomResize = isHorizontalLane ? 0 : trblResize.bottom,\n        leftResize = isHorizontalLane ? trblResize.left : 0;\n\n    var otherTrbl = asTRBL(other);\n\n    if (trblResize.top) {\n      if (abs(otherTrbl.bottom - shapeTrbl.top) < 10) {\n        bottomResize = shapeNewTrbl.top - otherTrbl.bottom;\n      }\n\n      if (abs(otherTrbl.top - shapeTrbl.top) < 5) {\n        topResize = shapeNewTrbl.top - otherTrbl.top;\n      }\n    }\n\n    if (trblResize.left) {\n      if (abs(otherTrbl.right - shapeTrbl.left) < 10) {\n        rightResize = shapeNewTrbl.left - otherTrbl.right;\n      }\n\n      if (abs(otherTrbl.left - shapeTrbl.left) < 5) {\n        leftResize = shapeNewTrbl.left - otherTrbl.left;\n      }\n    }\n\n    if (trblResize.bottom) {\n      if (abs(otherTrbl.top - shapeTrbl.bottom) < 10) {\n        topResize = shapeNewTrbl.bottom - otherTrbl.top;\n      }\n\n      if (abs(otherTrbl.bottom - shapeTrbl.bottom) < 5) {\n        bottomResize = shapeNewTrbl.bottom - otherTrbl.bottom;\n      }\n    }\n\n    if (trblResize.right) {\n      if (abs(otherTrbl.left - shapeTrbl.right) < 10) {\n        leftResize = shapeNewTrbl.right - otherTrbl.left;\n      }\n\n      if (abs(otherTrbl.right - shapeTrbl.right) < 5) {\n        rightResize = shapeNewTrbl.right - otherTrbl.right;\n      }\n    }\n\n    if (topResize || rightResize || bottomResize || leftResize) {\n\n      resizeNeeded.push({\n        shape: other,\n        newBounds: resizeTRBL(other, {\n          top: topResize,\n          right: rightResize,\n          bottom: bottomResize,\n          left: leftResize\n        })\n      });\n    }\n\n  });\n\n  return resizeNeeded;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}