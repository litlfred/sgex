{"ast":null,"code":"import React,{useState,useEffect}from'react';import githubService from'../services/githubService';import GITHUB_CONFIG from'../config/github';import logger from'../utils/logger';import'./OAuthDeviceFlow.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OAuthDeviceFlow=_ref=>{let{onAuthSuccess,onError,scopes=GITHUB_CONFIG.DEFAULT_SCOPES}=_ref;const[state,setState]=useState('idle');// 'idle', 'initiating', 'waiting', 'polling', 'success', 'error'\nconst[deviceFlowData,setDeviceFlowData]=useState(null);const[error,setError]=useState('');const[pollingInterval,setPollingInterval]=useState(null);const[timeRemaining,setTimeRemaining]=useState(0);const componentLogger=logger.getLogger('OAuthDeviceFlow');useEffect(()=>{componentLogger.componentMount({scopes});return()=>{componentLogger.componentUnmount();// Clean up polling interval on unmount\nif(pollingInterval){clearInterval(pollingInterval);}};},[componentLogger,scopes,pollingInterval]);const handleStartDeviceFlow=async()=>{componentLogger.userAction('Starting OAuth device flow',{scopes});setState('initiating');setError('');try{const deviceData=await githubService.initiateDeviceFlow(scopes);setDeviceFlowData(deviceData);setState('waiting');setTimeRemaining(deviceData.expires_in);componentLogger.auth('Device flow initiated',{verification_uri:deviceData.verification_uri,expires_in:deviceData.expires_in});// Start countdown timer\nconst countdownInterval=setInterval(()=>{setTimeRemaining(prev=>{if(prev<=1){clearInterval(countdownInterval);setState('error');setError('Device code expired. Please try again.');return 0;}return prev-1;});},1000);// Auto-start polling after a short delay\nsetTimeout(()=>{startPolling(deviceData);},2000);}catch(err){componentLogger.auth('Device flow initiation failed',{error:err.message});setState('error');setError('Failed to start device flow. Please try again.');if(onError)onError(err);}};const startPolling=deviceData=>{componentLogger.auth('Starting device flow polling');setState('polling');const interval=setInterval(async()=>{try{const result=await githubService.pollDeviceFlowToken(deviceData.device_code,deviceData.interval);if(result.status==='success'){clearInterval(interval);setPollingInterval(null);// Complete the authentication\nconst authResult=await githubService.authenticateWithDeviceFlow(result.access_token,result.scope?result.scope.split(' '):scopes);setState('success');componentLogger.auth('OAuth device flow completed successfully',{username:authResult.user.login,scopes:authResult.scopes});if(onAuthSuccess){onAuthSuccess(result.access_token,authResult.user,authResult.scopes);}}else if(result.status==='pending'){// Continue polling\ncomponentLogger.debug('Device flow still pending');}else if(result.status==='slow_down'){// Increase polling interval\nclearInterval(interval);setTimeout(()=>startPolling(deviceData),(deviceData.interval+2)*1000);}else if(result.status==='expired'){clearInterval(interval);setPollingInterval(null);setState('error');setError('Device code expired. Please try again.');}else if(result.status==='denied'){clearInterval(interval);setPollingInterval(null);setState('error');setError('Access denied. Please try again if you change your mind.');}}catch(err){componentLogger.auth('Device flow polling error',{error:err.message});clearInterval(interval);setPollingInterval(null);setState('error');setError('Authentication failed. Please try again.');if(onError)onError(err);}},deviceData.interval*1000);setPollingInterval(interval);};const formatTime=seconds=>{const minutes=Math.floor(seconds/60);const remainingSeconds=seconds%60;return`${minutes}:${remainingSeconds.toString().padStart(2,'0')}`;};const getScopeDescription=scope=>{return GITHUB_CONFIG.SCOPE_DESCRIPTIONS[scope]||scope;};const openVerificationPage=()=>{if(deviceFlowData!==null&&deviceFlowData!==void 0&&deviceFlowData.verification_uri_complete){window.open(deviceFlowData.verification_uri_complete,'_blank');}else if(deviceFlowData!==null&&deviceFlowData!==void 0&&deviceFlowData.verification_uri){window.open(deviceFlowData.verification_uri,'_blank');}};if(state==='idle'){return/*#__PURE__*/_jsx(\"div\",{className:\"oauth-device-flow\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"oauth-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sign in with GitHub\"}),/*#__PURE__*/_jsx(\"p\",{className:\"oauth-description\",children:\"Get secure access to GitHub with the permissions you need, when you need them.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"permissions-info\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Initial permissions requested:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"permissions-list\",children:scopes.map(scope=>/*#__PURE__*/_jsxs(\"li\",{className:\"permission-item\",children:[/*#__PURE__*/_jsx(\"code\",{children:scope}),\" - \",getScopeDescription(scope)]},scope))})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleStartDeviceFlow,className:\"github-oauth-btn\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"github-icon\",children:\"\\uD83D\\uDD17\"}),\"Sign in with GitHub\"]})]})});}if(state==='initiating'){return/*#__PURE__*/_jsx(\"div\",{className:\"oauth-device-flow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"oauth-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"oauth-status loading\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Preparing GitHub authentication...\"})]})})});}if(state==='waiting'||state==='polling'){return/*#__PURE__*/_jsx(\"div\",{className:\"oauth-device-flow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"oauth-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"device-flow-instructions\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Complete GitHub Authentication\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"verification-step\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Step 1:\"}),\" Copy this code:\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"device-code\",children:[/*#__PURE__*/_jsx(\"code\",{className:\"user-code\",children:deviceFlowData===null||deviceFlowData===void 0?void 0:deviceFlowData.user_code}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigator.clipboard.writeText(deviceFlowData===null||deviceFlowData===void 0?void 0:deviceFlowData.user_code),className:\"copy-btn\",title:\"Copy code\",children:\"\\uD83D\\uDCCB\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"verification-step\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Step 2:\"}),\" Open GitHub and enter the code:\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:openVerificationPage,className:\"verification-btn\",children:[\"\\uD83D\\uDD17 Open GitHub (\",deviceFlowData===null||deviceFlowData===void 0?void 0:deviceFlowData.verification_uri,\")\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"oauth-status\",children:[state==='waiting'&&/*#__PURE__*/_jsx(\"p\",{children:\"\\u23F3 Waiting for you to authorize the app...\"}),state==='polling'&&/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDD04 Checking for authorization...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-remaining\",children:[\"Code expires in: \",/*#__PURE__*/_jsx(\"strong\",{children:formatTime(timeRemaining)})]})]})]})})});}if(state==='success'){return/*#__PURE__*/_jsx(\"div\",{className:\"oauth-device-flow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"oauth-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"oauth-status success\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"success-icon\",children:\"\\u2705\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Successfully signed in with GitHub!\"})]})})});}if(state==='error'){return/*#__PURE__*/_jsx(\"div\",{className:\"oauth-device-flow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"oauth-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"oauth-status error\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-icon\",children:\"\\u274C\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setState('idle');setError('');setDeviceFlowData(null);},className:\"retry-btn\",children:\"Try Again\"})]})})});}return null;};export default OAuthDeviceFlow;","map":{"version":3,"names":["React","useState","useEffect","githubService","GITHUB_CONFIG","logger","jsx","_jsx","jsxs","_jsxs","OAuthDeviceFlow","_ref","onAuthSuccess","onError","scopes","DEFAULT_SCOPES","state","setState","deviceFlowData","setDeviceFlowData","error","setError","pollingInterval","setPollingInterval","timeRemaining","setTimeRemaining","componentLogger","getLogger","componentMount","componentUnmount","clearInterval","handleStartDeviceFlow","userAction","deviceData","initiateDeviceFlow","expires_in","auth","verification_uri","countdownInterval","setInterval","prev","setTimeout","startPolling","err","message","interval","result","pollDeviceFlowToken","device_code","status","authResult","authenticateWithDeviceFlow","access_token","scope","split","username","user","login","debug","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","getScopeDescription","SCOPE_DESCRIPTIONS","openVerificationPage","verification_uri_complete","window","open","className","children","map","onClick","user_code","navigator","clipboard","writeText","title"],"sources":["/home/runner/work/sgex/sgex/src/components/OAuthDeviceFlow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport githubService from '../services/githubService';\nimport GITHUB_CONFIG from '../config/github';\nimport logger from '../utils/logger';\nimport './OAuthDeviceFlow.css';\n\nconst OAuthDeviceFlow = ({ onAuthSuccess, onError, scopes = GITHUB_CONFIG.DEFAULT_SCOPES }) => {\n  const [state, setState] = useState('idle'); // 'idle', 'initiating', 'waiting', 'polling', 'success', 'error'\n  const [deviceFlowData, setDeviceFlowData] = useState(null);\n  const [error, setError] = useState('');\n  const [pollingInterval, setPollingInterval] = useState(null);\n  const [timeRemaining, setTimeRemaining] = useState(0);\n  const componentLogger = logger.getLogger('OAuthDeviceFlow');\n\n  useEffect(() => {\n    componentLogger.componentMount({ scopes });\n    return () => {\n      componentLogger.componentUnmount();\n      // Clean up polling interval on unmount\n      if (pollingInterval) {\n        clearInterval(pollingInterval);\n      }\n    };\n  }, [componentLogger, scopes, pollingInterval]);\n\n  const handleStartDeviceFlow = async () => {\n    componentLogger.userAction('Starting OAuth device flow', { scopes });\n    setState('initiating');\n    setError('');\n\n    try {\n      const deviceData = await githubService.initiateDeviceFlow(scopes);\n      setDeviceFlowData(deviceData);\n      setState('waiting');\n      setTimeRemaining(deviceData.expires_in);\n      \n      componentLogger.auth('Device flow initiated', { \n        verification_uri: deviceData.verification_uri,\n        expires_in: deviceData.expires_in \n      });\n\n      // Start countdown timer\n      const countdownInterval = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev <= 1) {\n            clearInterval(countdownInterval);\n            setState('error');\n            setError('Device code expired. Please try again.');\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      // Auto-start polling after a short delay\n      setTimeout(() => {\n        startPolling(deviceData);\n      }, 2000);\n\n    } catch (err) {\n      componentLogger.auth('Device flow initiation failed', { error: err.message });\n      setState('error');\n      setError('Failed to start device flow. Please try again.');\n      if (onError) onError(err);\n    }\n  };\n\n  const startPolling = (deviceData) => {\n    componentLogger.auth('Starting device flow polling');\n    setState('polling');\n\n    const interval = setInterval(async () => {\n      try {\n        const result = await githubService.pollDeviceFlowToken(deviceData.device_code, deviceData.interval);\n        \n        if (result.status === 'success') {\n          clearInterval(interval);\n          setPollingInterval(null);\n          \n          // Complete the authentication\n          const authResult = await githubService.authenticateWithDeviceFlow(\n            result.access_token, \n            result.scope ? result.scope.split(' ') : scopes\n          );\n          \n          setState('success');\n          componentLogger.auth('OAuth device flow completed successfully', { \n            username: authResult.user.login,\n            scopes: authResult.scopes \n          });\n          \n          if (onAuthSuccess) {\n            onAuthSuccess(result.access_token, authResult.user, authResult.scopes);\n          }\n          \n        } else if (result.status === 'pending') {\n          // Continue polling\n          componentLogger.debug('Device flow still pending');\n        } else if (result.status === 'slow_down') {\n          // Increase polling interval\n          clearInterval(interval);\n          setTimeout(() => startPolling(deviceData), (deviceData.interval + 2) * 1000);\n        } else if (result.status === 'expired') {\n          clearInterval(interval);\n          setPollingInterval(null);\n          setState('error');\n          setError('Device code expired. Please try again.');\n        } else if (result.status === 'denied') {\n          clearInterval(interval);\n          setPollingInterval(null);\n          setState('error');\n          setError('Access denied. Please try again if you change your mind.');\n        }\n      } catch (err) {\n        componentLogger.auth('Device flow polling error', { error: err.message });\n        clearInterval(interval);\n        setPollingInterval(null);\n        setState('error');\n        setError('Authentication failed. Please try again.');\n        if (onError) onError(err);\n      }\n    }, deviceData.interval * 1000);\n\n    setPollingInterval(interval);\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const getScopeDescription = (scope) => {\n    return GITHUB_CONFIG.SCOPE_DESCRIPTIONS[scope] || scope;\n  };\n\n  const openVerificationPage = () => {\n    if (deviceFlowData?.verification_uri_complete) {\n      window.open(deviceFlowData.verification_uri_complete, '_blank');\n    } else if (deviceFlowData?.verification_uri) {\n      window.open(deviceFlowData.verification_uri, '_blank');\n    }\n  };\n\n  if (state === 'idle') {\n    return (\n      <div className=\"oauth-device-flow\">\n        <div className=\"oauth-section\">\n          <h4>Sign in with GitHub</h4>\n          <p className=\"oauth-description\">\n            Get secure access to GitHub with the permissions you need, when you need them.\n          </p>\n          \n          <div className=\"permissions-info\">\n            <h5>Initial permissions requested:</h5>\n            <ul className=\"permissions-list\">\n              {scopes.map(scope => (\n                <li key={scope} className=\"permission-item\">\n                  <code>{scope}</code> - {getScopeDescription(scope)}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <button \n            onClick={handleStartDeviceFlow}\n            className=\"github-oauth-btn\"\n          >\n            <span className=\"github-icon\">🔗</span>\n            Sign in with GitHub\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (state === 'initiating') {\n    return (\n      <div className=\"oauth-device-flow\">\n        <div className=\"oauth-section\">\n          <div className=\"oauth-status loading\">\n            <span className=\"spinner\"></span>\n            <p>Preparing GitHub authentication...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (state === 'waiting' || state === 'polling') {\n    return (\n      <div className=\"oauth-device-flow\">\n        <div className=\"oauth-section\">\n          <div className=\"device-flow-instructions\">\n            <h4>Complete GitHub Authentication</h4>\n            \n            <div className=\"verification-step\">\n              <p><strong>Step 1:</strong> Copy this code:</p>\n              <div className=\"device-code\">\n                <code className=\"user-code\">{deviceFlowData?.user_code}</code>\n                <button \n                  onClick={() => navigator.clipboard.writeText(deviceFlowData?.user_code)}\n                  className=\"copy-btn\"\n                  title=\"Copy code\"\n                >\n                  📋\n                </button>\n              </div>\n            </div>\n\n            <div className=\"verification-step\">\n              <p><strong>Step 2:</strong> Open GitHub and enter the code:</p>\n              <button \n                onClick={openVerificationPage}\n                className=\"verification-btn\"\n              >\n                🔗 Open GitHub ({deviceFlowData?.verification_uri})\n              </button>\n            </div>\n\n            <div className=\"oauth-status\">\n              {state === 'waiting' && (\n                <p>⏳ Waiting for you to authorize the app...</p>\n              )}\n              {state === 'polling' && (\n                <p>🔄 Checking for authorization...</p>\n              )}\n              \n              <div className=\"time-remaining\">\n                Code expires in: <strong>{formatTime(timeRemaining)}</strong>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (state === 'success') {\n    return (\n      <div className=\"oauth-device-flow\">\n        <div className=\"oauth-section\">\n          <div className=\"oauth-status success\">\n            <span className=\"success-icon\">✅</span>\n            <p>Successfully signed in with GitHub!</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (state === 'error') {\n    return (\n      <div className=\"oauth-device-flow\">\n        <div className=\"oauth-section\">\n          <div className=\"oauth-status error\">\n            <span className=\"error-icon\">❌</span>\n            <p>{error}</p>\n            <button \n              onClick={() => {\n                setState('idle');\n                setError('');\n                setDeviceFlowData(null);\n              }}\n              className=\"retry-btn\"\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default OAuthDeviceFlow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}