{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { getBusinessObject } from '../../../util/ModelUtil';\nimport { isAny } from '../util/ModelingUtil';\nimport { isLabel } from '../../../util/LabelUtil';\n\n/**\n * @typedef {import('../../replace/BpmnReplace').default} BpmnReplace\n * @typedef {import('didi').Injector} Injector\n */\n\nvar LOW_PRIORITY = 500;\n\n/**\n * Replace intermediate event with boundary event when creating or moving results in attached event.\n *\n * @param {BpmnReplace} bpmnReplace\n * @param {Injector} injector\n */\nexport default function AttachEventBehavior(bpmnReplace, injector) {\n  injector.invoke(CommandInterceptor, this);\n  this._bpmnReplace = bpmnReplace;\n  var self = this;\n  this.postExecuted('elements.create', LOW_PRIORITY, function (context) {\n    var elements = context.elements;\n    elements = elements.filter(function (shape) {\n      var host = shape.host;\n      return shouldReplace(shape, host);\n    });\n    if (elements.length !== 1) {\n      return;\n    }\n    elements.map(function (element) {\n      return elements.indexOf(element);\n    }).forEach(function (index) {\n      var host = elements[index];\n      context.elements[index] = self._replaceShape(elements[index], host);\n    });\n  }, true);\n  this.preExecute('elements.move', LOW_PRIORITY, function (context) {\n    var shapes = context.shapes,\n      host = context.newHost;\n    if (shapes.length !== 1) {\n      return;\n    }\n    var shape = shapes[0];\n    if (shouldReplace(shape, host)) {\n      context.shapes = [self._replaceShape(shape, host)];\n    }\n  }, true);\n}\nAttachEventBehavior.$inject = ['bpmnReplace', 'injector'];\ninherits(AttachEventBehavior, CommandInterceptor);\nAttachEventBehavior.prototype._replaceShape = function (shape, host) {\n  var eventDefinition = getEventDefinition(shape);\n  var boundaryEvent = {\n    type: 'bpmn:BoundaryEvent',\n    host: host\n  };\n  if (eventDefinition) {\n    boundaryEvent.eventDefinitionType = eventDefinition.$type;\n  }\n  return this._bpmnReplace.replaceElement(shape, boundaryEvent, {\n    layoutConnection: false\n  });\n};\n\n// helpers //////////\n\nfunction getEventDefinition(element) {\n  var businessObject = getBusinessObject(element),\n    eventDefinitions = businessObject.eventDefinitions;\n  return eventDefinitions && eventDefinitions[0];\n}\nfunction shouldReplace(shape, host) {\n  return !isLabel(shape) && isAny(shape, ['bpmn:IntermediateThrowEvent', 'bpmn:IntermediateCatchEvent']) && !!host;\n}","map":{"version":3,"names":["inherits","CommandInterceptor","getBusinessObject","isAny","isLabel","LOW_PRIORITY","AttachEventBehavior","bpmnReplace","injector","invoke","_bpmnReplace","self","postExecuted","context","elements","filter","shape","host","shouldReplace","length","map","element","indexOf","forEach","index","_replaceShape","preExecute","shapes","newHost","$inject","prototype","eventDefinition","getEventDefinition","boundaryEvent","type","eventDefinitionType","$type","replaceElement","layoutConnection","businessObject","eventDefinitions"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/AttachEventBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { getBusinessObject } from '../../../util/ModelUtil';\n\nimport { isAny } from '../util/ModelingUtil';\n\nimport { isLabel } from '../../../util/LabelUtil';\n\n/**\n * @typedef {import('../../replace/BpmnReplace').default} BpmnReplace\n * @typedef {import('didi').Injector} Injector\n */\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * Replace intermediate event with boundary event when creating or moving results in attached event.\n *\n * @param {BpmnReplace} bpmnReplace\n * @param {Injector} injector\n */\nexport default function AttachEventBehavior(bpmnReplace, injector) {\n  injector.invoke(CommandInterceptor, this);\n\n  this._bpmnReplace = bpmnReplace;\n\n  var self = this;\n\n  this.postExecuted('elements.create', LOW_PRIORITY, function(context) {\n    var elements = context.elements;\n\n    elements = elements.filter(function(shape) {\n      var host = shape.host;\n\n      return shouldReplace(shape, host);\n    });\n\n    if (elements.length !== 1) {\n      return;\n    }\n\n    elements.map(function(element) {\n      return elements.indexOf(element);\n    }).forEach(function(index) {\n      var host = elements[ index ];\n\n      context.elements[ index ] = self._replaceShape(elements[ index ], host);\n    });\n  }, true);\n\n\n  this.preExecute('elements.move', LOW_PRIORITY, function(context) {\n    var shapes = context.shapes,\n        host = context.newHost;\n\n    if (shapes.length !== 1) {\n      return;\n    }\n\n    var shape = shapes[0];\n\n    if (shouldReplace(shape, host)) {\n      context.shapes = [ self._replaceShape(shape, host) ];\n    }\n  }, true);\n}\n\nAttachEventBehavior.$inject = [\n  'bpmnReplace',\n  'injector'\n];\n\ninherits(AttachEventBehavior, CommandInterceptor);\n\nAttachEventBehavior.prototype._replaceShape = function(shape, host) {\n  var eventDefinition = getEventDefinition(shape);\n\n  var boundaryEvent = {\n    type: 'bpmn:BoundaryEvent',\n    host: host\n  };\n\n  if (eventDefinition) {\n    boundaryEvent.eventDefinitionType = eventDefinition.$type;\n  }\n\n  return this._bpmnReplace.replaceElement(shape, boundaryEvent, { layoutConnection: false });\n};\n\n\n// helpers //////////\n\nfunction getEventDefinition(element) {\n  var businessObject = getBusinessObject(element),\n      eventDefinitions = businessObject.eventDefinitions;\n\n  return eventDefinitions && eventDefinitions[0];\n}\n\nfunction shouldReplace(shape, host) {\n  return !isLabel(shape) &&\n    isAny(shape, [ 'bpmn:IntermediateThrowEvent', 'bpmn:IntermediateCatchEvent' ]) && !!host;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}