{"ast":null,"code":"import React,{useState,useEffect}from'react';import GITHUB_CONFIG from'../config/github';import logger from'../utils/logger';import'./OAuthDeviceFlow.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OAuthRedirectFlow=_ref=>{let{onAuthSuccess,onError,scopes=GITHUB_CONFIG.DEFAULT_SCOPES}=_ref;const[error,setError]=useState('');const componentLogger=logger.getLogger('OAuthRedirectFlow');useEffect(()=>{componentLogger.componentMount({scopes});// Check if we're returning from GitHub OAuth\nconst urlParams=new URLSearchParams(window.location.search);const code=urlParams.get('code');const errorParam=urlParams.get('error');if(errorParam){setError('GitHub authentication was cancelled or failed.');if(onError)onError(new Error(errorParam));}else if(code){// For now, show that we received the code but need server-side handling\nsetError('OAuth code received but server-side token exchange is required for security.');}return()=>{componentLogger.componentUnmount();};},[componentLogger,scopes,onError]);const handleGitHubOAuth=()=>{componentLogger.userAction('Starting GitHub OAuth redirect',{scopes});// Build GitHub OAuth URL\nconst params=new URLSearchParams({client_id:GITHUB_CONFIG.CLIENT_ID,scope:scopes.join(' '),redirect_uri:window.location.origin+window.location.pathname,state:Math.random().toString(36).substring(7)// Simple CSRF protection\n});const githubOAuthUrl=`https://github.com/login/oauth/authorize?${params.toString()}`;// For now, open in new tab to avoid breaking the current session\nwindow.open(githubOAuthUrl,'_blank');};const getScopeDescription=scope=>{return GITHUB_CONFIG.SCOPE_DESCRIPTIONS[scope]||scope;};return/*#__PURE__*/_jsx(\"div\",{className:\"oauth-device-flow\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"oauth-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sign in with GitHub\"}),/*#__PURE__*/_jsx(\"p\",{className:\"oauth-description\",children:\"Get secure access to GitHub with the permissions you need, when you need them.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"permissions-info\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Initial permissions requested:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"permissions-list\",children:scopes.map(scope=>/*#__PURE__*/_jsxs(\"li\",{className:\"permission-item\",children:[/*#__PURE__*/_jsx(\"code\",{children:scope}),\" - \",getScopeDescription(scope)]},scope))})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"oauth-status error\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-icon\",children:\"\\u274C\"}),/*#__PURE__*/_jsx(\"p\",{children:error})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleGitHubOAuth,className:\"github-oauth-btn\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"github-icon\",children:\"\\uD83D\\uDD17\"}),\"Sign in with GitHub\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"oauth-note\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" GitHub OAuth requires a server to complete authentication securely. For now, this opens GitHub authorization in a new tab. A complete implementation would require backend token exchange.\"]})]})});};export default OAuthRedirectFlow;","map":{"version":3,"names":["React","useState","useEffect","GITHUB_CONFIG","logger","jsx","_jsx","jsxs","_jsxs","OAuthRedirectFlow","_ref","onAuthSuccess","onError","scopes","DEFAULT_SCOPES","error","setError","componentLogger","getLogger","componentMount","urlParams","URLSearchParams","window","location","search","code","get","errorParam","Error","componentUnmount","handleGitHubOAuth","userAction","params","client_id","CLIENT_ID","scope","join","redirect_uri","origin","pathname","state","Math","random","toString","substring","githubOAuthUrl","open","getScopeDescription","SCOPE_DESCRIPTIONS","className","children","map","onClick"],"sources":["/home/runner/work/sgex/sgex/src/components/OAuthRedirectFlow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GITHUB_CONFIG from '../config/github';\nimport logger from '../utils/logger';\nimport './OAuthDeviceFlow.css';\n\nconst OAuthRedirectFlow = ({ onAuthSuccess, onError, scopes = GITHUB_CONFIG.DEFAULT_SCOPES }) => {\n  const [error, setError] = useState('');\n  const componentLogger = logger.getLogger('OAuthRedirectFlow');\n\n  useEffect(() => {\n    componentLogger.componentMount({ scopes });\n    \n    // Check if we're returning from GitHub OAuth\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const errorParam = urlParams.get('error');\n    \n    if (errorParam) {\n      setError('GitHub authentication was cancelled or failed.');\n      if (onError) onError(new Error(errorParam));\n    } else if (code) {\n      // For now, show that we received the code but need server-side handling\n      setError('OAuth code received but server-side token exchange is required for security.');\n    }\n    \n    return () => {\n      componentLogger.componentUnmount();\n    };\n  }, [componentLogger, scopes, onError]);\n\n  const handleGitHubOAuth = () => {\n    componentLogger.userAction('Starting GitHub OAuth redirect', { scopes });\n    \n    // Build GitHub OAuth URL\n    const params = new URLSearchParams({\n      client_id: GITHUB_CONFIG.CLIENT_ID,\n      scope: scopes.join(' '),\n      redirect_uri: window.location.origin + window.location.pathname,\n      state: Math.random().toString(36).substring(7) // Simple CSRF protection\n    });\n    \n    const githubOAuthUrl = `https://github.com/login/oauth/authorize?${params.toString()}`;\n    \n    // For now, open in new tab to avoid breaking the current session\n    window.open(githubOAuthUrl, '_blank');\n  };\n\n  const getScopeDescription = (scope) => {\n    return GITHUB_CONFIG.SCOPE_DESCRIPTIONS[scope] || scope;\n  };\n\n  return (\n    <div className=\"oauth-device-flow\">\n      <div className=\"oauth-section\">\n        <h4>Sign in with GitHub</h4>\n        <p className=\"oauth-description\">\n          Get secure access to GitHub with the permissions you need, when you need them.\n        </p>\n        \n        <div className=\"permissions-info\">\n          <h5>Initial permissions requested:</h5>\n          <ul className=\"permissions-list\">\n            {scopes.map(scope => (\n              <li key={scope} className=\"permission-item\">\n                <code>{scope}</code> - {getScopeDescription(scope)}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {error && (\n          <div className=\"oauth-status error\">\n            <span className=\"error-icon\">‚ùå</span>\n            <p>{error}</p>\n          </div>\n        )}\n\n        <button \n          onClick={handleGitHubOAuth}\n          className=\"github-oauth-btn\"\n        >\n          <span className=\"github-icon\">üîó</span>\n          Sign in with GitHub\n        </button>\n        \n        <p className=\"oauth-note\">\n          <strong>Note:</strong> GitHub OAuth requires a server to complete authentication securely. \n          For now, this opens GitHub authorization in a new tab. A complete implementation would \n          require backend token exchange.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default OAuthRedirectFlow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}