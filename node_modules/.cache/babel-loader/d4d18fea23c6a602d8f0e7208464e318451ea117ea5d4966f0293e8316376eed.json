{"ast":null,"code":"import inherits from 'inherits-browser';\nimport { is } from '../../../util/ModelUtil';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n */\n\nexport default function TextAnnotationBehavior(eventBus) {\n  CommandInterceptor.call(this, eventBus);\n\n  // On Append, TextAnnotations will be created on the Root.\n  // The default for connections will create the connection in the parent of\n  // the source element, so we overwrite the parent here.\n  this.preExecute('connection.create', function (context) {\n    const {\n      target\n    } = context;\n    if (!is(target, 'bpmn:TextAnnotation')) {\n      return;\n    }\n    context.parent = target.parent;\n  }, true);\n  this.preExecute(['shape.create', 'shape.resize', 'elements.move'], function (context) {\n    const shapes = context.shapes || [context.shape];\n    if (shapes.length === 1 && is(shapes[0], 'bpmn:TextAnnotation')) {\n      context.hints = context.hints || {};\n      context.hints.autoResize = false;\n    }\n  }, true);\n}\ninherits(TextAnnotationBehavior, CommandInterceptor);\nTextAnnotationBehavior.$inject = ['eventBus'];","map":{"version":3,"names":["inherits","is","CommandInterceptor","TextAnnotationBehavior","eventBus","call","preExecute","context","target","parent","shapes","shape","length","hints","autoResize","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/TextAnnotationBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport { is } from '../../../util/ModelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n */\n\nexport default function TextAnnotationBehavior(eventBus) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  // On Append, TextAnnotations will be created on the Root.\n  // The default for connections will create the connection in the parent of\n  // the source element, so we overwrite the parent here.\n  this.preExecute('connection.create', function(context) {\n    const { target } = context;\n\n    if (!is(target, 'bpmn:TextAnnotation')) {\n      return;\n    }\n\n    context.parent = target.parent;\n  }, true);\n\n  this.preExecute([ 'shape.create', 'shape.resize', 'elements.move' ], function(context) {\n    const shapes = context.shapes || [ context.shape ];\n\n    if (shapes.length === 1 && is(shapes[0], 'bpmn:TextAnnotation')) {\n      context.hints = context.hints || {};\n\n      context.hints.autoResize = false;\n    }\n  }, true);\n}\n\ninherits(TextAnnotationBehavior, CommandInterceptor);\n\nTextAnnotationBehavior.$inject = [\n  'eventBus'\n];"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,kBAAkB;AAEvC,SAASC,EAAE,QAAQ,yBAAyB;AAE5C,OAAOC,kBAAkB,MAAM,2CAA2C;;AAE1E;AACA;AACA;;AAEA,eAAe,SAASC,sBAAsBA,CAACC,QAAQ,EAAE;EAEvDF,kBAAkB,CAACG,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC;;EAEvC;EACA;EACA;EACA,IAAI,CAACE,UAAU,CAAC,mBAAmB,EAAE,UAASC,OAAO,EAAE;IACrD,MAAM;MAAEC;IAAO,CAAC,GAAGD,OAAO;IAE1B,IAAI,CAACN,EAAE,CAACO,MAAM,EAAE,qBAAqB,CAAC,EAAE;MACtC;IACF;IAEAD,OAAO,CAACE,MAAM,GAAGD,MAAM,CAACC,MAAM;EAChC,CAAC,EAAE,IAAI,CAAC;EAER,IAAI,CAACH,UAAU,CAAC,CAAE,cAAc,EAAE,cAAc,EAAE,eAAe,CAAE,EAAE,UAASC,OAAO,EAAE;IACrF,MAAMG,MAAM,GAAGH,OAAO,CAACG,MAAM,IAAI,CAAEH,OAAO,CAACI,KAAK,CAAE;IAElD,IAAID,MAAM,CAACE,MAAM,KAAK,CAAC,IAAIX,EAAE,CAACS,MAAM,CAAC,CAAC,CAAC,EAAE,qBAAqB,CAAC,EAAE;MAC/DH,OAAO,CAACM,KAAK,GAAGN,OAAO,CAACM,KAAK,IAAI,CAAC,CAAC;MAEnCN,OAAO,CAACM,KAAK,CAACC,UAAU,GAAG,KAAK;IAClC;EACF,CAAC,EAAE,IAAI,CAAC;AACV;AAEAd,QAAQ,CAACG,sBAAsB,EAAED,kBAAkB,CAAC;AAEpDC,sBAAsB,CAACY,OAAO,GAAG,CAC/B,UAAU,CACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}