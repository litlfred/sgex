{"ast":null,"code":"import { assign, forEach, isString, pick } from 'min-dash';\nimport { getDi, isAny } from '../../../util/ModelUtil';\nimport { isLabel } from '../../../util/LabelUtil';\nimport { isConnection } from 'diagram-js/lib/util/ModelUtil';\n\n/**\r\n * @typedef {import('diagram-js/lib/command/CommandHandler').default} CommandHandler\r\n *\r\n * @typedef {import('diagram-js/lib/command/CommandStack').default} CommandStack\r\n *\r\n * @typedef {import('../../../model/Types').ModdleElement} ModdleElement\r\n */\n\nvar DEFAULT_COLORS = {\n  fill: undefined,\n  stroke: undefined\n};\n\n/**\r\n * @implements {CommandHandler}\r\n *\r\n * @param {CommandStack} commandStack\r\n */\nexport default function SetColorHandler(commandStack) {\n  this._commandStack = commandStack;\n  this._normalizeColor = function (color) {\n    // Remove color for falsy values.\n    if (!color) {\n      return undefined;\n    }\n    if (isString(color)) {\n      var hexColor = colorToHex(color);\n      if (hexColor) {\n        return hexColor;\n      }\n    }\n    throw new Error(`invalid color value: ${color}`);\n  };\n}\nSetColorHandler.$inject = ['commandStack'];\nSetColorHandler.prototype.postExecute = function (context) {\n  var elements = context.elements,\n    colors = context.colors || DEFAULT_COLORS;\n  var self = this;\n  var di = {};\n  if ('fill' in colors) {\n    assign(di, {\n      'background-color': this._normalizeColor(colors.fill)\n    });\n  }\n  if ('stroke' in colors) {\n    assign(di, {\n      'border-color': this._normalizeColor(colors.stroke)\n    });\n  }\n  forEach(elements, function (element) {\n    var assignedDi = isConnection(element) ? pick(di, ['border-color']) : di,\n      elementDi = getDi(element);\n\n    // TODO @barmac: remove once we drop bpmn.io properties\n    ensureLegacySupport(assignedDi);\n    if (isLabel(element)) {\n      // set label colors as bpmndi:BPMNLabel#color\n      self._commandStack.execute('element.updateModdleProperties', {\n        element: element,\n        moddleElement: elementDi.label,\n        properties: {\n          color: di['border-color']\n        }\n      });\n    } else {\n      // ignore non-compliant di\n      if (!isAny(elementDi, ['bpmndi:BPMNEdge', 'bpmndi:BPMNShape'])) {\n        return;\n      }\n\n      // set colors bpmndi:BPMNEdge or bpmndi:BPMNShape\n      self._commandStack.execute('element.updateProperties', {\n        element: element,\n        properties: {\n          di: assignedDi\n        }\n      });\n    }\n  });\n};\n\n/**\r\n * Convert color from rgb(a)/hsl to hex. Returns `null` for unknown color names\r\n * and for colors with alpha less than 1.0. This depends on `<canvas>`\r\n * serialization of the `context.fillStyle`.\r\n * Cf. https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-fillstyle\r\n *\r\n * @example\r\n *\r\n * ```javascript\r\n * colorToHex('fuchsia'); // \"#ff00ff\"\r\n *\r\n * colorToHex('rgba(1, 2, 3, 0.4)'); // null\r\n * ```\r\n *\r\n * @param {string} color\r\n *\r\n * @return {string|null}\r\n */\nfunction colorToHex(color) {\n  var context = document.createElement('canvas').getContext('2d');\n\n  // (0) Start with transparent to account for browser default values.\n  context.fillStyle = 'transparent';\n\n  // (1) Assign color so that it's serialized.\n  context.fillStyle = color;\n\n  // (2) Return null for non-hex serialization result.\n  return /^#[0-9a-fA-F]{6}$/.test(context.fillStyle) ? context.fillStyle : null;\n}\n\n/**\r\n * Add legacy properties if required.\r\n *\r\n * @param {ModdleElement} di\r\n */\nfunction ensureLegacySupport(di) {\n  if ('border-color' in di) {\n    di.stroke = di['border-color'];\n  }\n  if ('background-color' in di) {\n    di.fill = di['background-color'];\n  }\n}","map":{"version":3,"names":["assign","forEach","isString","pick","getDi","isAny","isLabel","isConnection","DEFAULT_COLORS","fill","undefined","stroke","SetColorHandler","commandStack","_commandStack","_normalizeColor","color","hexColor","colorToHex","Error","$inject","prototype","postExecute","context","elements","colors","self","di","element","assignedDi","elementDi","ensureLegacySupport","execute","moddleElement","label","properties","document","createElement","getContext","fillStyle","test"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/cmd/SetColorHandler.js"],"sourcesContent":["import {\r\n  assign,\r\n  forEach,\r\n  isString,\r\n  pick\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getDi,\r\n  isAny\r\n} from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  isLabel\r\n} from '../../../util/LabelUtil';\r\n\r\nimport { isConnection } from 'diagram-js/lib/util/ModelUtil';\r\n\r\n/**\r\n * @typedef {import('diagram-js/lib/command/CommandHandler').default} CommandHandler\r\n *\r\n * @typedef {import('diagram-js/lib/command/CommandStack').default} CommandStack\r\n *\r\n * @typedef {import('../../../model/Types').ModdleElement} ModdleElement\r\n */\r\n\r\nvar DEFAULT_COLORS = {\r\n  fill: undefined,\r\n  stroke: undefined\r\n};\r\n\r\n/**\r\n * @implements {CommandHandler}\r\n *\r\n * @param {CommandStack} commandStack\r\n */\r\nexport default function SetColorHandler(commandStack) {\r\n  this._commandStack = commandStack;\r\n\r\n  this._normalizeColor = function(color) {\r\n\r\n    // Remove color for falsy values.\r\n    if (!color) {\r\n      return undefined;\r\n    }\r\n\r\n    if (isString(color)) {\r\n      var hexColor = colorToHex(color);\r\n\r\n      if (hexColor) {\r\n        return hexColor;\r\n      }\r\n    }\r\n\r\n    throw new Error(`invalid color value: ${ color }`);\r\n  };\r\n}\r\n\r\nSetColorHandler.$inject = [\r\n  'commandStack'\r\n];\r\n\r\n\r\nSetColorHandler.prototype.postExecute = function(context) {\r\n  var elements = context.elements,\r\n      colors = context.colors || DEFAULT_COLORS;\r\n\r\n  var self = this;\r\n\r\n  var di = {};\r\n\r\n  if ('fill' in colors) {\r\n    assign(di, {\r\n      'background-color': this._normalizeColor(colors.fill) });\r\n  }\r\n\r\n  if ('stroke' in colors) {\r\n    assign(di, {\r\n      'border-color': this._normalizeColor(colors.stroke) });\r\n  }\r\n\r\n  forEach(elements, function(element) {\r\n    var assignedDi = isConnection(element) ? pick(di, [ 'border-color' ]) : di,\r\n        elementDi = getDi(element);\r\n\r\n    // TODO @barmac: remove once we drop bpmn.io properties\r\n    ensureLegacySupport(assignedDi);\r\n\r\n    if (isLabel(element)) {\r\n\r\n      // set label colors as bpmndi:BPMNLabel#color\r\n      self._commandStack.execute('element.updateModdleProperties', {\r\n        element: element,\r\n        moddleElement: elementDi.label,\r\n        properties: {\r\n          color: di['border-color']\r\n        }\r\n      });\r\n    } else {\r\n\r\n      // ignore non-compliant di\r\n      if (!isAny(elementDi, [ 'bpmndi:BPMNEdge', 'bpmndi:BPMNShape' ])) {\r\n        return;\r\n      }\r\n\r\n      // set colors bpmndi:BPMNEdge or bpmndi:BPMNShape\r\n      self._commandStack.execute('element.updateProperties', {\r\n        element: element,\r\n        properties: {\r\n          di: assignedDi\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n};\r\n\r\n/**\r\n * Convert color from rgb(a)/hsl to hex. Returns `null` for unknown color names\r\n * and for colors with alpha less than 1.0. This depends on `<canvas>`\r\n * serialization of the `context.fillStyle`.\r\n * Cf. https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-fillstyle\r\n *\r\n * @example\r\n *\r\n * ```javascript\r\n * colorToHex('fuchsia'); // \"#ff00ff\"\r\n *\r\n * colorToHex('rgba(1, 2, 3, 0.4)'); // null\r\n * ```\r\n *\r\n * @param {string} color\r\n *\r\n * @return {string|null}\r\n */\r\nfunction colorToHex(color) {\r\n  var context = document.createElement('canvas').getContext('2d');\r\n\r\n  // (0) Start with transparent to account for browser default values.\r\n  context.fillStyle = 'transparent';\r\n\r\n  // (1) Assign color so that it's serialized.\r\n  context.fillStyle = color;\r\n\r\n  // (2) Return null for non-hex serialization result.\r\n  return /^#[0-9a-fA-F]{6}$/.test(context.fillStyle) ? context.fillStyle : null;\r\n}\r\n\r\n/**\r\n * Add legacy properties if required.\r\n *\r\n * @param {ModdleElement} di\r\n */\r\nfunction ensureLegacySupport(di) {\r\n  if ('border-color' in di) {\r\n    di.stroke = di['border-color'];\r\n  }\r\n\r\n  if ('background-color' in di) {\r\n    di.fill = di['background-color'];\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}