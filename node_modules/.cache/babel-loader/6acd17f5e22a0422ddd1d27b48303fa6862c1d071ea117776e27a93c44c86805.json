{"ast":null,"code":"// @ts-check\n\nexport function addHook(state, kind, name, hook) {\n  const orig = hook;\n  if (!state.registry[name]) {\n    state.registry[name] = [];\n  }\n  if (kind === \"before\") {\n    hook = (method, options) => {\n      return Promise.resolve().then(orig.bind(null, options)).then(method.bind(null, options));\n    };\n  }\n  if (kind === \"after\") {\n    hook = (method, options) => {\n      let result;\n      return Promise.resolve().then(method.bind(null, options)).then(result_ => {\n        result = result_;\n        return orig(result, options);\n      }).then(() => {\n        return result;\n      });\n    };\n  }\n  if (kind === \"error\") {\n    hook = (method, options) => {\n      return Promise.resolve().then(method.bind(null, options)).catch(error => {\n        return orig(error, options);\n      });\n    };\n  }\n  state.registry[name].push({\n    hook: hook,\n    orig: orig\n  });\n}","map":{"version":3,"names":["addHook","state","kind","name","hook","orig","registry","method","options","Promise","resolve","then","bind","result","result_","catch","error","push"],"sources":["/home/runner/work/sgex/sgex/node_modules/before-after-hook/lib/add.js"],"sourcesContent":["// @ts-check\n\nexport function addHook(state, kind, name, hook) {\n  const orig = hook;\n  if (!state.registry[name]) {\n    state.registry[name] = [];\n  }\n\n  if (kind === \"before\") {\n    hook = (method, options) => {\n      return Promise.resolve()\n        .then(orig.bind(null, options))\n        .then(method.bind(null, options));\n    };\n  }\n\n  if (kind === \"after\") {\n    hook = (method, options) => {\n      let result;\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .then((result_) => {\n          result = result_;\n          return orig(result, options);\n        })\n        .then(() => {\n          return result;\n        });\n    };\n  }\n\n  if (kind === \"error\") {\n    hook = (method, options) => {\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .catch((error) => {\n          return orig(error, options);\n        });\n    };\n  }\n\n  state.registry[name].push({\n    hook: hook,\n    orig: orig,\n  });\n}\n"],"mappings":"AAAA;;AAEA,OAAO,SAASA,OAAOA,CAACC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC/C,MAAMC,IAAI,GAAGD,IAAI;EACjB,IAAI,CAACH,KAAK,CAACK,QAAQ,CAACH,IAAI,CAAC,EAAE;IACzBF,KAAK,CAACK,QAAQ,CAACH,IAAI,CAAC,GAAG,EAAE;EAC3B;EAEA,IAAID,IAAI,KAAK,QAAQ,EAAE;IACrBE,IAAI,GAAGA,CAACG,MAAM,EAAEC,OAAO,KAAK;MAC1B,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC,CACrBC,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAAC,CAAC,CAC9BG,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAAC,CAAC;IACrC,CAAC;EACH;EAEA,IAAIN,IAAI,KAAK,OAAO,EAAE;IACpBE,IAAI,GAAGA,CAACG,MAAM,EAAEC,OAAO,KAAK;MAC1B,IAAIK,MAAM;MACV,OAAOJ,OAAO,CAACC,OAAO,CAAC,CAAC,CACrBC,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAAC,CAAC,CAChCG,IAAI,CAAEG,OAAO,IAAK;QACjBD,MAAM,GAAGC,OAAO;QAChB,OAAOT,IAAI,CAACQ,MAAM,EAAEL,OAAO,CAAC;MAC9B,CAAC,CAAC,CACDG,IAAI,CAAC,MAAM;QACV,OAAOE,MAAM;MACf,CAAC,CAAC;IACN,CAAC;EACH;EAEA,IAAIX,IAAI,KAAK,OAAO,EAAE;IACpBE,IAAI,GAAGA,CAACG,MAAM,EAAEC,OAAO,KAAK;MAC1B,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC,CACrBC,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAAC,CAAC,CAChCO,KAAK,CAAEC,KAAK,IAAK;QAChB,OAAOX,IAAI,CAACW,KAAK,EAAER,OAAO,CAAC;MAC7B,CAAC,CAAC;IACN,CAAC;EACH;EAEAP,KAAK,CAACK,QAAQ,CAACH,IAAI,CAAC,CAACc,IAAI,CAAC;IACxBb,IAAI,EAAEA,IAAI;IACVC,IAAI,EAAEA;EACR,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}