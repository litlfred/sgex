{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { forEach } from 'min-dash';\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\nimport { selfAndAllChildren } from 'diagram-js/lib/util/Elements';\nimport { isExpanded } from '../../../util/DiUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n *\n * @typedef {import('../../../model/Types').Element} Element\n * @typedef {import('../../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').DirectionTRBL} DirectionTRBL\n */\n\n/**\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function ToggleCollapseConnectionBehaviour(eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n  this.postExecuted('shape.toggleCollapse', 1500, function (context) {\n    // var shape = context.shape;\n    var shape = context.shape;\n\n    // only change connections when collapsing\n    if (isExpanded(shape)) {\n      return;\n    }\n    var allChildren = selfAndAllChildren(shape);\n    allChildren.forEach(function (child) {\n      // Ensure that the connection array is not modified during iteration\n      var incomingConnections = child.incoming.slice(),\n        outgoingConnections = child.outgoing.slice();\n      forEach(incomingConnections, function (c) {\n        handleConnection(c, true);\n      });\n      forEach(outgoingConnections, function (c) {\n        handleConnection(c, false);\n      });\n    });\n    function handleConnection(c, incoming) {\n      if (allChildren.indexOf(c.source) !== -1 && allChildren.indexOf(c.target) !== -1) {\n        return;\n      }\n      if (incoming) {\n        modeling.reconnectEnd(c, shape, getMid(shape));\n      } else {\n        modeling.reconnectStart(c, shape, getMid(shape));\n      }\n    }\n  }, true);\n}\ninherits(ToggleCollapseConnectionBehaviour, CommandInterceptor);\nToggleCollapseConnectionBehaviour.$inject = ['eventBus', 'modeling'];","map":{"version":3,"names":["inherits","CommandInterceptor","forEach","getMid","selfAndAllChildren","isExpanded","ToggleCollapseConnectionBehaviour","eventBus","modeling","call","postExecuted","context","shape","allChildren","child","incomingConnections","incoming","slice","outgoingConnections","outgoing","c","handleConnection","indexOf","source","target","reconnectEnd","reconnectStart","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/ToggleCollapseConnectionBehaviour.js"],"sourcesContent":["\nimport inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  forEach\n} from 'min-dash';\n\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\nimport { selfAndAllChildren } from 'diagram-js/lib/util/Elements';\n\nimport { isExpanded } from '../../../util/DiUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n *\n * @typedef {import('../../../model/Types').Element} Element\n * @typedef {import('../../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').DirectionTRBL} DirectionTRBL\n */\n\n/**\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function ToggleCollapseConnectionBehaviour(\n    eventBus, modeling\n) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this.postExecuted('shape.toggleCollapse', 1500, function(context) {\n\n    // var shape = context.shape;\n    var shape = context.shape;\n\n    // only change connections when collapsing\n    if (isExpanded(shape)) {\n      return;\n    }\n\n    var allChildren = selfAndAllChildren(shape);\n\n    allChildren.forEach(function(child) {\n\n      // Ensure that the connection array is not modified during iteration\n      var incomingConnections = child.incoming.slice(),\n          outgoingConnections = child.outgoing.slice();\n\n      forEach(incomingConnections, function(c) {\n        handleConnection(c, true);\n      });\n\n      forEach(outgoingConnections, function(c) {\n        handleConnection(c, false);\n      });\n    });\n\n\n    function handleConnection(c, incoming) {\n      if (allChildren.indexOf(c.source) !== -1 && allChildren.indexOf(c.target) !== -1) {\n        return;\n      }\n\n      if (incoming) {\n        modeling.reconnectEnd(c, shape, getMid(shape));\n      } else {\n        modeling.reconnectStart(c, shape, getMid(shape));\n      }\n\n    }\n\n  }, true);\n\n}\n\ninherits(ToggleCollapseConnectionBehaviour, CommandInterceptor);\n\nToggleCollapseConnectionBehaviour.$inject = [\n  'eventBus',\n  'modeling',\n];\n\n\n"],"mappings":"AACA,OAAOA,QAAQ,MAAM,kBAAkB;AAEvC,OAAOC,kBAAkB,MAAM,2CAA2C;AAE1E,SACEC,OAAO,QACF,UAAU;AAEjB,SAASC,MAAM,QAAQ,kCAAkC;AACzD,SAASC,kBAAkB,QAAQ,8BAA8B;AAEjE,SAASC,UAAU,QAAQ,sBAAsB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAASC,iCAAiCA,CACrDC,QAAQ,EAAEC,QAAQ,EACpB;EAEAP,kBAAkB,CAACQ,IAAI,CAAC,IAAI,EAAEF,QAAQ,CAAC;EAEvC,IAAI,CAACG,YAAY,CAAC,sBAAsB,EAAE,IAAI,EAAE,UAASC,OAAO,EAAE;IAEhE;IACA,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAAK;;IAEzB;IACA,IAAIP,UAAU,CAACO,KAAK,CAAC,EAAE;MACrB;IACF;IAEA,IAAIC,WAAW,GAAGT,kBAAkB,CAACQ,KAAK,CAAC;IAE3CC,WAAW,CAACX,OAAO,CAAC,UAASY,KAAK,EAAE;MAElC;MACA,IAAIC,mBAAmB,GAAGD,KAAK,CAACE,QAAQ,CAACC,KAAK,CAAC,CAAC;QAC5CC,mBAAmB,GAAGJ,KAAK,CAACK,QAAQ,CAACF,KAAK,CAAC,CAAC;MAEhDf,OAAO,CAACa,mBAAmB,EAAE,UAASK,CAAC,EAAE;QACvCC,gBAAgB,CAACD,CAAC,EAAE,IAAI,CAAC;MAC3B,CAAC,CAAC;MAEFlB,OAAO,CAACgB,mBAAmB,EAAE,UAASE,CAAC,EAAE;QACvCC,gBAAgB,CAACD,CAAC,EAAE,KAAK,CAAC;MAC5B,CAAC,CAAC;IACJ,CAAC,CAAC;IAGF,SAASC,gBAAgBA,CAACD,CAAC,EAAEJ,QAAQ,EAAE;MACrC,IAAIH,WAAW,CAACS,OAAO,CAACF,CAAC,CAACG,MAAM,CAAC,KAAK,CAAC,CAAC,IAAIV,WAAW,CAACS,OAAO,CAACF,CAAC,CAACI,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QAChF;MACF;MAEA,IAAIR,QAAQ,EAAE;QACZR,QAAQ,CAACiB,YAAY,CAACL,CAAC,EAAER,KAAK,EAAET,MAAM,CAACS,KAAK,CAAC,CAAC;MAChD,CAAC,MAAM;QACLJ,QAAQ,CAACkB,cAAc,CAACN,CAAC,EAAER,KAAK,EAAET,MAAM,CAACS,KAAK,CAAC,CAAC;MAClD;IAEF;EAEF,CAAC,EAAE,IAAI,CAAC;AAEV;AAEAZ,QAAQ,CAACM,iCAAiC,EAAEL,kBAAkB,CAAC;AAE/DK,iCAAiC,CAACqB,OAAO,GAAG,CAC1C,UAAU,EACV,UAAU,CACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}