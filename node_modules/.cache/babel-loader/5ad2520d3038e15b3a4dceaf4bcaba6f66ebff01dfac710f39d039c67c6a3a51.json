{"ast":null,"code":"import { isReverse } from './Connect';\n\n/**\n * @typedef {import('didi').Injector} Injector\n *\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/EventBus').default} EventBus\n */\n\nvar HIGH_PRIORITY = 1100,\n  LOW_PRIORITY = 900;\nvar MARKER_OK = 'connect-ok',\n  MARKER_NOT_OK = 'connect-not-ok';\n\n/**\n * Shows connection preview during connect.\n *\n * @param {Injector} injector\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function ConnectPreview(injector, eventBus, canvas) {\n  var connectionPreview = injector.get('connectionPreview', false);\n  connectionPreview && eventBus.on('connect.move', function (event) {\n    var context = event.context,\n      canConnect = context.canExecute,\n      hover = context.hover,\n      source = context.source,\n      start = context.start,\n      startPosition = context.startPosition,\n      target = context.target,\n      connectionStart = context.connectionStart || startPosition,\n      connectionEnd = context.connectionEnd || {\n        x: event.x,\n        y: event.y\n      },\n      previewStart = connectionStart,\n      previewEnd = connectionEnd;\n    if (isReverse(context)) {\n      previewStart = connectionEnd;\n      previewEnd = connectionStart;\n    }\n    connectionPreview.drawPreview(context, canConnect, {\n      source: source || start,\n      target: target || hover,\n      connectionStart: previewStart,\n      connectionEnd: previewEnd\n    });\n  });\n  eventBus.on('connect.hover', LOW_PRIORITY, function (event) {\n    var context = event.context,\n      hover = event.hover,\n      canExecute = context.canExecute;\n\n    // ignore hover\n    if (canExecute === null) {\n      return;\n    }\n    canvas.addMarker(hover, canExecute ? MARKER_OK : MARKER_NOT_OK);\n  });\n  eventBus.on(['connect.out', 'connect.cleanup'], HIGH_PRIORITY, function (event) {\n    var hover = event.hover;\n    if (hover) {\n      canvas.removeMarker(hover, MARKER_OK);\n      canvas.removeMarker(hover, MARKER_NOT_OK);\n    }\n  });\n  connectionPreview && eventBus.on('connect.cleanup', function (event) {\n    connectionPreview.cleanUp(event.context);\n  });\n}\nConnectPreview.$inject = ['injector', 'eventBus', 'canvas'];","map":{"version":3,"names":["isReverse","HIGH_PRIORITY","LOW_PRIORITY","MARKER_OK","MARKER_NOT_OK","ConnectPreview","injector","eventBus","canvas","connectionPreview","get","on","event","context","canConnect","canExecute","hover","source","start","startPosition","target","connectionStart","connectionEnd","x","y","previewStart","previewEnd","drawPreview","addMarker","removeMarker","cleanUp","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/connect/ConnectPreview.js"],"sourcesContent":["import { isReverse } from './Connect';\n\n/**\n * @typedef {import('didi').Injector} Injector\n *\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/EventBus').default} EventBus\n */\n\nvar HIGH_PRIORITY = 1100,\n    LOW_PRIORITY = 900;\n\nvar MARKER_OK = 'connect-ok',\n    MARKER_NOT_OK = 'connect-not-ok';\n\n/**\n * Shows connection preview during connect.\n *\n * @param {Injector} injector\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function ConnectPreview(injector, eventBus, canvas) {\n  var connectionPreview = injector.get('connectionPreview', false);\n\n  connectionPreview && eventBus.on('connect.move', function(event) {\n    var context = event.context,\n        canConnect = context.canExecute,\n        hover = context.hover,\n        source = context.source,\n        start = context.start,\n        startPosition = context.startPosition,\n        target = context.target,\n        connectionStart = context.connectionStart || startPosition,\n        connectionEnd = context.connectionEnd || {\n          x: event.x,\n          y: event.y\n        },\n        previewStart = connectionStart,\n        previewEnd = connectionEnd;\n\n    if (isReverse(context)) {\n      previewStart = connectionEnd;\n      previewEnd = connectionStart;\n    }\n\n    connectionPreview.drawPreview(context, canConnect, {\n      source: source || start,\n      target: target || hover,\n      connectionStart: previewStart,\n      connectionEnd: previewEnd\n    });\n  });\n\n  eventBus.on('connect.hover', LOW_PRIORITY, function(event) {\n    var context = event.context,\n        hover = event.hover,\n        canExecute = context.canExecute;\n\n    // ignore hover\n    if (canExecute === null) {\n      return;\n    }\n\n    canvas.addMarker(hover, canExecute ? MARKER_OK : MARKER_NOT_OK);\n  });\n\n  eventBus.on([\n    'connect.out',\n    'connect.cleanup'\n  ], HIGH_PRIORITY, function(event) {\n    var hover = event.hover;\n\n    if (hover) {\n      canvas.removeMarker(hover, MARKER_OK);\n      canvas.removeMarker(hover, MARKER_NOT_OK);\n    }\n  });\n\n  connectionPreview && eventBus.on('connect.cleanup', function(event) {\n    connectionPreview.cleanUp(event.context);\n  });\n}\n\nConnectPreview.$inject = [\n  'injector',\n  'eventBus',\n  'canvas'\n];\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GAAG,IAAI;EACpBC,YAAY,GAAG,GAAG;AAEtB,IAAIC,SAAS,GAAG,YAAY;EACxBC,aAAa,GAAG,gBAAgB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,cAAcA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EACjE,IAAIC,iBAAiB,GAAGH,QAAQ,CAACI,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC;EAEhED,iBAAiB,IAAIF,QAAQ,CAACI,EAAE,CAAC,cAAc,EAAE,UAASC,KAAK,EAAE;IAC/D,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;MACvBC,UAAU,GAAGD,OAAO,CAACE,UAAU;MAC/BC,KAAK,GAAGH,OAAO,CAACG,KAAK;MACrBC,MAAM,GAAGJ,OAAO,CAACI,MAAM;MACvBC,KAAK,GAAGL,OAAO,CAACK,KAAK;MACrBC,aAAa,GAAGN,OAAO,CAACM,aAAa;MACrCC,MAAM,GAAGP,OAAO,CAACO,MAAM;MACvBC,eAAe,GAAGR,OAAO,CAACQ,eAAe,IAAIF,aAAa;MAC1DG,aAAa,GAAGT,OAAO,CAACS,aAAa,IAAI;QACvCC,CAAC,EAAEX,KAAK,CAACW,CAAC;QACVC,CAAC,EAAEZ,KAAK,CAACY;MACX,CAAC;MACDC,YAAY,GAAGJ,eAAe;MAC9BK,UAAU,GAAGJ,aAAa;IAE9B,IAAItB,SAAS,CAACa,OAAO,CAAC,EAAE;MACtBY,YAAY,GAAGH,aAAa;MAC5BI,UAAU,GAAGL,eAAe;IAC9B;IAEAZ,iBAAiB,CAACkB,WAAW,CAACd,OAAO,EAAEC,UAAU,EAAE;MACjDG,MAAM,EAAEA,MAAM,IAAIC,KAAK;MACvBE,MAAM,EAAEA,MAAM,IAAIJ,KAAK;MACvBK,eAAe,EAAEI,YAAY;MAC7BH,aAAa,EAAEI;IACjB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFnB,QAAQ,CAACI,EAAE,CAAC,eAAe,EAAET,YAAY,EAAE,UAASU,KAAK,EAAE;IACzD,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;MACvBG,KAAK,GAAGJ,KAAK,CAACI,KAAK;MACnBD,UAAU,GAAGF,OAAO,CAACE,UAAU;;IAEnC;IACA,IAAIA,UAAU,KAAK,IAAI,EAAE;MACvB;IACF;IAEAP,MAAM,CAACoB,SAAS,CAACZ,KAAK,EAAED,UAAU,GAAGZ,SAAS,GAAGC,aAAa,CAAC;EACjE,CAAC,CAAC;EAEFG,QAAQ,CAACI,EAAE,CAAC,CACV,aAAa,EACb,iBAAiB,CAClB,EAAEV,aAAa,EAAE,UAASW,KAAK,EAAE;IAChC,IAAII,KAAK,GAAGJ,KAAK,CAACI,KAAK;IAEvB,IAAIA,KAAK,EAAE;MACTR,MAAM,CAACqB,YAAY,CAACb,KAAK,EAAEb,SAAS,CAAC;MACrCK,MAAM,CAACqB,YAAY,CAACb,KAAK,EAAEZ,aAAa,CAAC;IAC3C;EACF,CAAC,CAAC;EAEFK,iBAAiB,IAAIF,QAAQ,CAACI,EAAE,CAAC,iBAAiB,EAAE,UAASC,KAAK,EAAE;IAClEH,iBAAiB,CAACqB,OAAO,CAAClB,KAAK,CAACC,OAAO,CAAC;EAC1C,CAAC,CAAC;AACJ;AAEAR,cAAc,CAAC0B,OAAO,GAAG,CACvB,UAAU,EACV,UAAU,EACV,QAAQ,CACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}