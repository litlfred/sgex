{"ast":null,"code":"import _objectSpread from\"/home/runner/work/sgex/sgex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{useNavigate,useLocation}from'react-router-dom';import{useTranslation}from'react-i18next';import githubService from'../services/githubService';import repositoryCacheService from'../services/repositoryCacheService';import{PageLayout}from'./framework';import{handleNavigationClick}from'../utils/navigationUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SelectProfilePage=()=>{const{t}=useTranslation();const[user,setUser]=useState(null);const[organizations,setOrganizations]=useState([]);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[dakCounts,setDakCounts]=useState({});const[warningMessage,setWarningMessage]=useState(null);const navigate=useNavigate();const location=useLocation();// Load cached DAK counts without initiating any scanning\nconst loadCachedDakCounts=useCallback((userData,orgsData)=>{if(!githubService.isAuth()){return;}const counts={};// Check cache for user's personal repositories\nif(userData){const userCache=repositoryCacheService.getCachedRepositories(userData.login,'user');if(userCache&&userCache.repositories){counts[\"user-\".concat(userData.login)]=userCache.repositories.length;}}// Check cache for organization repositories\norgsData.forEach(org=>{const orgCache=repositoryCacheService.getCachedRepositories(org.login,'org');if(orgCache&&orgCache.repositories){counts[\"org-\".concat(org.login)]=orgCache.repositories.length;}});setDakCounts(counts);},[]);const fetchUserData=useCallback(async()=>{setLoading(true);setError(null);try{let userData=null;if(isAuthenticated){// Check token permissions first for authenticated users\nawait githubService.checkTokenPermissions();// Fetch user data using GitHub service\nuserData=await githubService.getCurrentUser();setUser(userData);}else{// For unauthenticated users, set a demo user profile\nuserData={login:'anonymous-user',name:'Anonymous User',avatar_url:'https://github.com/github.png',type:'User',isAnonymous:true};setUser(userData);}// Fetch organizations inline\nlet orgsData=[];if(isAuthenticated){try{orgsData=await githubService.getUserOrganizations();}catch(error){console.error('Error fetching organizations:',error);orgsData=[];}}// Always ensure WHO organization is included (using public API)\ntry{const whoOrganization=await githubService.getWHOOrganization();// Check if WHO organization is already in the list\nconst whoIndex=orgsData.findIndex(org=>org.login==='WorldHealthOrganization');if(whoIndex>=0){// Replace existing WHO org with fresh data and ensure isWHO flag\norgsData[whoIndex]=_objectSpread(_objectSpread(_objectSpread({},orgsData[whoIndex]),whoOrganization),{},{isWHO:true});}else{// Add WHO organization at the beginning of the list\norgsData.unshift(whoOrganization);}}catch(whoError){console.warn('Could not fetch WHO organization data, using fallback:',whoError);// Fallback to hardcoded WHO organization\nconst whoOrganization={id:'who-organization',login:'WorldHealthOrganization',name:'World Health Organization',description:'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',avatar_url:'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',html_url:'https://github.com/WorldHealthOrganization',type:'Organization',isWHO:true};// Check if WHO organization is already in the list\nconst hasWHO=orgsData.some(org=>org.login==='WorldHealthOrganization');if(!hasWHO){// Add WHO organization at the beginning of the list\norgsData.unshift(whoOrganization);}else{// Ensure existing WHO organization has the isWHO flag\norgsData=orgsData.map(org=>org.login==='WorldHealthOrganization'?_objectSpread(_objectSpread({},org),{},{isWHO:true}):org);}}setOrganizations(orgsData);// Load cached DAK counts (if available and authenticated)\nif(isAuthenticated){loadCachedDakCounts(userData,orgsData);}}catch(error){console.error('Error fetching user data:',error);if(isAuthenticated){setError('Failed to fetch user data. Please check your connection and try again.');setIsAuthenticated(false);githubService.logout();// Use secure logout method\n}else{// For unauthenticated users, show limited error message\nsetError('Unable to fetch additional data. Some features may be limited.');}}finally{setLoading(false);}},[loadCachedDakCounts,isAuthenticated]);// Initial authentication check - don't redirect if not authenticated\nuseEffect(()=>{const initializeAuth=()=>{// Try to initialize from securely stored token\nconst success=githubService.initializeFromStoredToken();if(success){setIsAuthenticated(true);}else{// Don't redirect - allow unauthenticated access\nsetIsAuthenticated(false);}};initializeAuth();},[]);// Handle warning message from navigation state\nuseEffect(()=>{var _location$state;if((_location$state=location.state)!==null&&_location$state!==void 0&&_location$state.warningMessage){setWarningMessage(location.state.warningMessage);// Clear the warning message from navigation state to prevent it from persisting\nnavigate(location.pathname,{replace:true,state:{}});}},[location.state,navigate,location.pathname]);// Fetch user data when component mounts or authentication state changes\nuseEffect(()=>{// Always fetch data regardless of authentication state\nif(!user){fetchUserData();}},[user,fetchUserData]);const handleProfileSelect=(event,profile)=>{const navigationState={profile};handleNavigationClick(event,\"/dak-action/\".concat(profile.login),navigate,navigationState);};const handleDismissWarning=()=>{setWarningMessage(null);};// Don't render anything if still loading initial state\nif(loading&&!user){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"select-profile\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading profile data...\"})]})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"select-profile\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"select-profile-content\",children:[warningMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"warning-message\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"warning-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"warning-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"warning-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"span\",{className:\"warning-text\",children:warningMessage})]}),/*#__PURE__*/_jsx(\"button\",{className:\"warning-dismiss\",onClick:handleDismissWarning,\"aria-label\":\"Dismiss warning\",children:\"\\xD7 Dismiss\"})]})}),!isAuthenticated&&/*#__PURE__*/_jsx(\"div\",{className:\"auth-status-message\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-status-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"auth-status-icon\",children:\"\\uD83D\\uDD13\"}),/*#__PURE__*/_jsx(\"span\",{className:\"auth-status-text\",children:\"You are browsing in unauthenticated mode. Some features like saving to GitHub will be disabled, but you can still explore and use local staging.\"})]})}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading profile data...\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"profile-selection\",children:[/*#__PURE__*/_jsx(\"h2\",{children:t('organization.select')}),/*#__PURE__*/_jsxs(\"p\",{children:[t('organization.personal'),\":\"]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-grid-horizontal\",children:[(isAuthenticated||(user===null||user===void 0?void 0:user.isAnonymous))&&/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card\",onClick:event=>handleProfileSelect(event,_objectSpread({type:'user'},user)),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:user===null||user===void 0?void 0:user.avatar_url,alt:\"Personal profile\"}),dakCounts[\"user-\".concat(user===null||user===void 0?void 0:user.login)]>0&&/*#__PURE__*/_jsx(\"div\",{className:\"dak-count-badge\",children:dakCounts[\"user-\".concat(user===null||user===void 0?void 0:user.login)]})]}),/*#__PURE__*/_jsx(\"h3\",{children:(user===null||user===void 0?void 0:user.name)||(user===null||user===void 0?void 0:user.login)}),/*#__PURE__*/_jsx(\"p\",{children:user!==null&&user!==void 0&&user.isAnonymous?'Anonymous browsing':'Personal repositories'}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-badges\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"profile-type\",children:user!==null&&user!==void 0&&user.isAnonymous?'Anonymous':'Personal'}),(user===null||user===void 0?void 0:user.isAnonymous)&&/*#__PURE__*/_jsx(\"span\",{className:\"auth-badge\",children:\"Limited Access\"})]})]}),organizations.map(org=>/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card \".concat(org.isWHO?'who-org':''),onClick:event=>handleProfileSelect(event,_objectSpread({type:'org'},org)),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:org.avatar_url||\"https://github.com/\".concat(org.login,\".png\"),alt:\"\".concat(org.name||org.login,\" organization\")}),dakCounts[\"org-\".concat(org.login)]>0&&/*#__PURE__*/_jsx(\"div\",{className:\"dak-count-badge\",children:dakCounts[\"org-\".concat(org.login)]})]}),/*#__PURE__*/_jsx(\"h3\",{children:org.name||org.login}),/*#__PURE__*/_jsxs(\"p\",{children:[\"@\",org.login]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-badges\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"profile-type\",children:t('organization.organizations')}),org.isWHO&&/*#__PURE__*/_jsx(\"span\",{className:\"who-badge\",children:\"WHO Official\"})]})]},org.login))]})]})]})});};export default SelectProfilePage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","useTranslation","githubService","repositoryCacheService","PageLayout","handleNavigationClick","jsx","_jsx","jsxs","_jsxs","SelectProfilePage","t","user","setUser","organizations","setOrganizations","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","dakCounts","setDakCounts","warningMessage","setWarningMessage","navigate","location","loadCachedDakCounts","userData","orgsData","isAuth","counts","userCache","getCachedRepositories","login","repositories","concat","length","forEach","org","orgCache","fetchUserData","checkTokenPermissions","getCurrentUser","name","avatar_url","type","isAnonymous","getUserOrganizations","console","whoOrganization","getWHOOrganization","whoIndex","findIndex","_objectSpread","isWHO","unshift","whoError","warn","id","description","html_url","hasWHO","some","map","logout","initializeAuth","success","initializeFromStoredToken","_location$state","state","pathname","replace","handleProfileSelect","event","profile","navigationState","handleDismissWarning","pageName","children","className","onClick","src","alt"],"sources":["/home/runner/work/sgex/sgex/src/components/SelectProfilePage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport githubService from '../services/githubService';\nimport repositoryCacheService from '../services/repositoryCacheService';\nimport { PageLayout } from './framework';\nimport { handleNavigationClick } from '../utils/navigationUtils';\n\nconst SelectProfilePage = () => {\n  const { t } = useTranslation();\n  const [user, setUser] = useState(null);\n  const [organizations, setOrganizations] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dakCounts, setDakCounts] = useState({});\n  const [warningMessage, setWarningMessage] = useState(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Load cached DAK counts without initiating any scanning\n  const loadCachedDakCounts = useCallback((userData, orgsData) => {\n    if (!githubService.isAuth()) {\n      return;\n    }\n\n    const counts = {};\n    \n    // Check cache for user's personal repositories\n    if (userData) {\n      const userCache = repositoryCacheService.getCachedRepositories(userData.login, 'user');\n      if (userCache && userCache.repositories) {\n        counts[`user-${userData.login}`] = userCache.repositories.length;\n      }\n    }\n    \n    // Check cache for organization repositories\n    orgsData.forEach(org => {\n      const orgCache = repositoryCacheService.getCachedRepositories(org.login, 'org');\n      if (orgCache && orgCache.repositories) {\n        counts[`org-${org.login}`] = orgCache.repositories.length;\n      }\n    });\n    \n    setDakCounts(counts);\n  }, []);\n\n  const fetchUserData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      let userData = null;\n      \n      if (isAuthenticated) {\n        // Check token permissions first for authenticated users\n        await githubService.checkTokenPermissions();\n        \n        // Fetch user data using GitHub service\n        userData = await githubService.getCurrentUser();\n        setUser(userData);\n      } else {\n        // For unauthenticated users, set a demo user profile\n        userData = {\n          login: 'anonymous-user',\n          name: 'Anonymous User',\n          avatar_url: 'https://github.com/github.png',\n          type: 'User',\n          isAnonymous: true\n        };\n        setUser(userData);\n      }\n      \n      // Fetch organizations inline\n      let orgsData = [];\n      \n      if (isAuthenticated) {\n        try {\n          orgsData = await githubService.getUserOrganizations();\n        } catch (error) {\n          console.error('Error fetching organizations:', error);\n          orgsData = [];\n        }\n      }\n      \n      // Always ensure WHO organization is included (using public API)\n      try {\n        const whoOrganization = await githubService.getWHOOrganization();\n        \n        // Check if WHO organization is already in the list\n        const whoIndex = orgsData.findIndex(org => org.login === 'WorldHealthOrganization');\n        \n        if (whoIndex >= 0) {\n          // Replace existing WHO org with fresh data and ensure isWHO flag\n          orgsData[whoIndex] = { ...orgsData[whoIndex], ...whoOrganization, isWHO: true };\n        } else {\n          // Add WHO organization at the beginning of the list\n          orgsData.unshift(whoOrganization);\n        }\n      } catch (whoError) {\n        console.warn('Could not fetch WHO organization data, using fallback:', whoError);\n        \n        // Fallback to hardcoded WHO organization\n        const whoOrganization = {\n          id: 'who-organization',\n          login: 'WorldHealthOrganization',\n          name: 'World Health Organization',\n          description: 'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',\n          avatar_url: 'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',\n          html_url: 'https://github.com/WorldHealthOrganization',\n          type: 'Organization',\n          isWHO: true\n        };\n        \n        // Check if WHO organization is already in the list\n        const hasWHO = orgsData.some(org => org.login === 'WorldHealthOrganization');\n        \n        if (!hasWHO) {\n          // Add WHO organization at the beginning of the list\n          orgsData.unshift(whoOrganization);\n        } else {\n          // Ensure existing WHO organization has the isWHO flag\n          orgsData = orgsData.map(org => \n            org.login === 'WorldHealthOrganization' \n              ? { ...org, isWHO: true }\n              : org\n          );\n        }\n      }\n      \n      setOrganizations(orgsData);\n      \n      // Load cached DAK counts (if available and authenticated)\n      if (isAuthenticated) {\n        loadCachedDakCounts(userData, orgsData);\n      }\n      \n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      \n      if (isAuthenticated) {\n        setError('Failed to fetch user data. Please check your connection and try again.');\n        setIsAuthenticated(false);\n        githubService.logout(); // Use secure logout method\n      } else {\n        // For unauthenticated users, show limited error message\n        setError('Unable to fetch additional data. Some features may be limited.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [loadCachedDakCounts, isAuthenticated]);\n\n  // Initial authentication check - don't redirect if not authenticated\n  useEffect(() => {\n    const initializeAuth = () => {\n      // Try to initialize from securely stored token\n      const success = githubService.initializeFromStoredToken();\n      if (success) {\n        setIsAuthenticated(true);\n      } else {\n        // Don't redirect - allow unauthenticated access\n        setIsAuthenticated(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // Handle warning message from navigation state\n  useEffect(() => {\n    if (location.state?.warningMessage) {\n      setWarningMessage(location.state.warningMessage);\n      // Clear the warning message from navigation state to prevent it from persisting\n      navigate(location.pathname, { replace: true, state: {} });\n    }\n  }, [location.state, navigate, location.pathname]);\n\n  // Fetch user data when component mounts or authentication state changes\n  useEffect(() => {\n    // Always fetch data regardless of authentication state\n    if (!user) {\n      fetchUserData();\n    }\n  }, [user, fetchUserData]);\n\n  const handleProfileSelect = (event, profile) => {\n    const navigationState = { profile };\n    handleNavigationClick(event, `/dak-action/${profile.login}`, navigate, navigationState);\n  };\n\n  const handleDismissWarning = () => {\n    setWarningMessage(null);\n  };\n\n  // Don't render anything if still loading initial state\n  if (loading && !user) {\n    return (\n      <PageLayout pageName=\"select-profile\">\n        <div className=\"loading-section\">\n          <div className=\"spinner\"></div>\n          <p>Loading profile data...</p>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout pageName=\"select-profile\">\n      <div className=\"select-profile-content\">\n        {warningMessage && (\n          <div className=\"warning-message\">\n            <div className=\"warning-content\">\n              <div className=\"warning-header\">\n                <span className=\"warning-icon\">⚠️</span>\n                <span className=\"warning-text\">{warningMessage}</span>\n              </div>\n              <button \n                className=\"warning-dismiss\" \n                onClick={handleDismissWarning}\n                aria-label=\"Dismiss warning\"\n              >\n                × Dismiss\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {/* Authentication Status Indicator */}\n        {!isAuthenticated && (\n          <div className=\"auth-status-message\">\n            <div className=\"auth-status-content\">\n              <span className=\"auth-status-icon\">🔓</span>\n              <span className=\"auth-status-text\">\n                You are browsing in unauthenticated mode. Some features like saving to GitHub will be disabled, but you can still explore and use local staging.\n              </span>\n            </div>\n          </div>\n        )}\n        \n        {loading ? (\n          <div className=\"loading-section\">\n            <div className=\"spinner\"></div>\n            <p>Loading profile data...</p>\n          </div>\n        ) : (\n          <div className=\"profile-selection\">\n            <h2>{t('organization.select')}</h2>\n            <p>{t('organization.personal')}:</p>\n            \n            {error && <div className=\"error-message\">{error}</div>}\n            \n            {/* Horizontal profile grid */}\n            <div className=\"profile-grid-horizontal\">\n              {/* Personal Profile - Show for authenticated users or anonymous access */}\n              {(isAuthenticated || user?.isAnonymous) && (\n                <div \n                  className=\"profile-card\"\n                  onClick={(event) => handleProfileSelect(event, { type: 'user', ...user })}\n                >\n                  <div className=\"profile-card-header\">\n                    <img src={user?.avatar_url} alt=\"Personal profile\" />\n                    {dakCounts[`user-${user?.login}`] > 0 && (\n                      <div className=\"dak-count-badge\">\n                        {dakCounts[`user-${user?.login}`]}\n                      </div>\n                    )}\n                  </div>\n                  <h3>{user?.name || user?.login}</h3>\n                  <p>{user?.isAnonymous ? 'Anonymous browsing' : 'Personal repositories'}</p>\n                  <div className=\"profile-badges\">\n                    <span className=\"profile-type\">\n                      {user?.isAnonymous ? 'Anonymous' : 'Personal'}\n                    </span>\n                    {user?.isAnonymous && (\n                      <span className=\"auth-badge\">Limited Access</span>\n                    )}\n                  </div>\n                </div>\n              )}\n              \n              {/* Organization Profiles */}\n              {organizations.map((org) => (\n                <div \n                  key={org.login}\n                  className={`profile-card ${org.isWHO ? 'who-org' : ''}`}\n                  onClick={(event) => handleProfileSelect(event, { type: 'org', ...org })}\n                >\n                  <div className=\"profile-card-header\">\n                    <img \n                      src={org.avatar_url || `https://github.com/${org.login}.png`} \n                      alt={`${org.name || org.login} organization`} \n                    />\n                    {dakCounts[`org-${org.login}`] > 0 && (\n                      <div className=\"dak-count-badge\">\n                        {dakCounts[`org-${org.login}`]}\n                      </div>\n                    )}\n                  </div>\n                  <h3>{org.name || org.login}</h3>\n                  <p>@{org.login}</p>\n                  <div className=\"profile-badges\">\n                    <span className=\"profile-type\">{t('organization.organizations')}</span>\n                    {org.isWHO && <span className=\"who-badge\">WHO Official</span>}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default SelectProfilePage;"],"mappings":"gHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,OAASC,cAAc,KAAQ,eAAe,CAC9C,MAAO,CAAAC,aAAa,KAAM,2BAA2B,CACrD,MAAO,CAAAC,sBAAsB,KAAM,oCAAoC,CACvE,OAASC,UAAU,KAAQ,aAAa,CACxC,OAASC,qBAAqB,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjE,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAEC,CAAE,CAAC,CAAGV,cAAc,CAAC,CAAC,CAC9B,KAAM,CAACW,IAAI,CAAEC,OAAO,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACoB,eAAe,CAAEC,kBAAkB,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACsB,OAAO,CAAEC,UAAU,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACwB,KAAK,CAAEC,QAAQ,CAAC,CAAGzB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAC0B,SAAS,CAAEC,YAAY,CAAC,CAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9C,KAAM,CAAC4B,cAAc,CAAEC,iBAAiB,CAAC,CAAG7B,QAAQ,CAAC,IAAI,CAAC,CAE1D,KAAM,CAAA8B,QAAQ,CAAG3B,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAA4B,QAAQ,CAAG3B,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAA4B,mBAAmB,CAAG9B,WAAW,CAAC,CAAC+B,QAAQ,CAAEC,QAAQ,GAAK,CAC9D,GAAI,CAAC5B,aAAa,CAAC6B,MAAM,CAAC,CAAC,CAAE,CAC3B,OACF,CAEA,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CAEjB;AACA,GAAIH,QAAQ,CAAE,CACZ,KAAM,CAAAI,SAAS,CAAG9B,sBAAsB,CAAC+B,qBAAqB,CAACL,QAAQ,CAACM,KAAK,CAAE,MAAM,CAAC,CACtF,GAAIF,SAAS,EAAIA,SAAS,CAACG,YAAY,CAAE,CACvCJ,MAAM,SAAAK,MAAA,CAASR,QAAQ,CAACM,KAAK,EAAG,CAAGF,SAAS,CAACG,YAAY,CAACE,MAAM,CAClE,CACF,CAEA;AACAR,QAAQ,CAACS,OAAO,CAACC,GAAG,EAAI,CACtB,KAAM,CAAAC,QAAQ,CAAGtC,sBAAsB,CAAC+B,qBAAqB,CAACM,GAAG,CAACL,KAAK,CAAE,KAAK,CAAC,CAC/E,GAAIM,QAAQ,EAAIA,QAAQ,CAACL,YAAY,CAAE,CACrCJ,MAAM,QAAAK,MAAA,CAAQG,GAAG,CAACL,KAAK,EAAG,CAAGM,QAAQ,CAACL,YAAY,CAACE,MAAM,CAC3D,CACF,CAAC,CAAC,CAEFf,YAAY,CAACS,MAAM,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAU,aAAa,CAAG5C,WAAW,CAAC,SAAY,CAC5CqB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACF,GAAI,CAAAQ,QAAQ,CAAG,IAAI,CAEnB,GAAIb,eAAe,CAAE,CACnB;AACA,KAAM,CAAAd,aAAa,CAACyC,qBAAqB,CAAC,CAAC,CAE3C;AACAd,QAAQ,CAAG,KAAM,CAAA3B,aAAa,CAAC0C,cAAc,CAAC,CAAC,CAC/C/B,OAAO,CAACgB,QAAQ,CAAC,CACnB,CAAC,IAAM,CACL;AACAA,QAAQ,CAAG,CACTM,KAAK,CAAE,gBAAgB,CACvBU,IAAI,CAAE,gBAAgB,CACtBC,UAAU,CAAE,+BAA+B,CAC3CC,IAAI,CAAE,MAAM,CACZC,WAAW,CAAE,IACf,CAAC,CACDnC,OAAO,CAACgB,QAAQ,CAAC,CACnB,CAEA;AACA,GAAI,CAAAC,QAAQ,CAAG,EAAE,CAEjB,GAAId,eAAe,CAAE,CACnB,GAAI,CACFc,QAAQ,CAAG,KAAM,CAAA5B,aAAa,CAAC+C,oBAAoB,CAAC,CAAC,CACvD,CAAE,MAAO7B,KAAK,CAAE,CACd8B,OAAO,CAAC9B,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrDU,QAAQ,CAAG,EAAE,CACf,CACF,CAEA;AACA,GAAI,CACF,KAAM,CAAAqB,eAAe,CAAG,KAAM,CAAAjD,aAAa,CAACkD,kBAAkB,CAAC,CAAC,CAEhE;AACA,KAAM,CAAAC,QAAQ,CAAGvB,QAAQ,CAACwB,SAAS,CAACd,GAAG,EAAIA,GAAG,CAACL,KAAK,GAAK,yBAAyB,CAAC,CAEnF,GAAIkB,QAAQ,EAAI,CAAC,CAAE,CACjB;AACAvB,QAAQ,CAACuB,QAAQ,CAAC,CAAAE,aAAA,CAAAA,aAAA,CAAAA,aAAA,IAAQzB,QAAQ,CAACuB,QAAQ,CAAC,EAAKF,eAAe,MAAEK,KAAK,CAAE,IAAI,EAAE,CACjF,CAAC,IAAM,CACL;AACA1B,QAAQ,CAAC2B,OAAO,CAACN,eAAe,CAAC,CACnC,CACF,CAAE,MAAOO,QAAQ,CAAE,CACjBR,OAAO,CAACS,IAAI,CAAC,wDAAwD,CAAED,QAAQ,CAAC,CAEhF;AACA,KAAM,CAAAP,eAAe,CAAG,CACtBS,EAAE,CAAE,kBAAkB,CACtBzB,KAAK,CAAE,yBAAyB,CAChCU,IAAI,CAAE,2BAA2B,CACjCgB,WAAW,CAAE,0HAA0H,CACvIf,UAAU,CAAE,4DAA4D,CACxEgB,QAAQ,CAAE,4CAA4C,CACtDf,IAAI,CAAE,cAAc,CACpBS,KAAK,CAAE,IACT,CAAC,CAED;AACA,KAAM,CAAAO,MAAM,CAAGjC,QAAQ,CAACkC,IAAI,CAACxB,GAAG,EAAIA,GAAG,CAACL,KAAK,GAAK,yBAAyB,CAAC,CAE5E,GAAI,CAAC4B,MAAM,CAAE,CACX;AACAjC,QAAQ,CAAC2B,OAAO,CAACN,eAAe,CAAC,CACnC,CAAC,IAAM,CACL;AACArB,QAAQ,CAAGA,QAAQ,CAACmC,GAAG,CAACzB,GAAG,EACzBA,GAAG,CAACL,KAAK,GAAK,yBAAyB,CAAAoB,aAAA,CAAAA,aAAA,IAC9Bf,GAAG,MAAEgB,KAAK,CAAE,IAAI,GACrBhB,GACN,CAAC,CACH,CACF,CAEAzB,gBAAgB,CAACe,QAAQ,CAAC,CAE1B;AACA,GAAId,eAAe,CAAE,CACnBY,mBAAmB,CAACC,QAAQ,CAAEC,QAAQ,CAAC,CACzC,CAEF,CAAE,MAAOV,KAAK,CAAE,CACd8B,OAAO,CAAC9B,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CAEjD,GAAIJ,eAAe,CAAE,CACnBK,QAAQ,CAAC,wEAAwE,CAAC,CAClFJ,kBAAkB,CAAC,KAAK,CAAC,CACzBf,aAAa,CAACgE,MAAM,CAAC,CAAC,CAAE;AAC1B,CAAC,IAAM,CACL;AACA7C,QAAQ,CAAC,gEAAgE,CAAC,CAC5E,CACF,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,CAACS,mBAAmB,CAAEZ,eAAe,CAAC,CAAC,CAE1C;AACAnB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsE,cAAc,CAAGA,CAAA,GAAM,CAC3B;AACA,KAAM,CAAAC,OAAO,CAAGlE,aAAa,CAACmE,yBAAyB,CAAC,CAAC,CACzD,GAAID,OAAO,CAAE,CACXnD,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,IAAM,CACL;AACAA,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAEDkD,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN;AACAtE,SAAS,CAAC,IAAM,KAAAyE,eAAA,CACd,IAAAA,eAAA,CAAI3C,QAAQ,CAAC4C,KAAK,UAAAD,eAAA,WAAdA,eAAA,CAAgB9C,cAAc,CAAE,CAClCC,iBAAiB,CAACE,QAAQ,CAAC4C,KAAK,CAAC/C,cAAc,CAAC,CAChD;AACAE,QAAQ,CAACC,QAAQ,CAAC6C,QAAQ,CAAE,CAAEC,OAAO,CAAE,IAAI,CAAEF,KAAK,CAAE,CAAC,CAAE,CAAC,CAAC,CAC3D,CACF,CAAC,CAAE,CAAC5C,QAAQ,CAAC4C,KAAK,CAAE7C,QAAQ,CAAEC,QAAQ,CAAC6C,QAAQ,CAAC,CAAC,CAEjD;AACA3E,SAAS,CAAC,IAAM,CACd;AACA,GAAI,CAACe,IAAI,CAAE,CACT8B,aAAa,CAAC,CAAC,CACjB,CACF,CAAC,CAAE,CAAC9B,IAAI,CAAE8B,aAAa,CAAC,CAAC,CAEzB,KAAM,CAAAgC,mBAAmB,CAAGA,CAACC,KAAK,CAAEC,OAAO,GAAK,CAC9C,KAAM,CAAAC,eAAe,CAAG,CAAED,OAAQ,CAAC,CACnCvE,qBAAqB,CAACsE,KAAK,gBAAAtC,MAAA,CAAiBuC,OAAO,CAACzC,KAAK,EAAIT,QAAQ,CAAEmD,eAAe,CAAC,CACzF,CAAC,CAED,KAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CACjCrD,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,CAED;AACA,GAAIP,OAAO,EAAI,CAACN,IAAI,CAAE,CACpB,mBACEL,IAAA,CAACH,UAAU,EAAC2E,QAAQ,CAAC,gBAAgB,CAAAC,QAAA,cACnCvE,KAAA,QAAKwE,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BzE,IAAA,QAAK0E,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/B1E,IAAA,MAAAyE,QAAA,CAAG,yBAAuB,CAAG,CAAC,EAC3B,CAAC,CACI,CAAC,CAEjB,CAEA,mBACEzE,IAAA,CAACH,UAAU,EAAC2E,QAAQ,CAAC,gBAAgB,CAAAC,QAAA,cACnCvE,KAAA,QAAKwE,SAAS,CAAC,wBAAwB,CAAAD,QAAA,EACpCxD,cAAc,eACbjB,IAAA,QAAK0E,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAC9BvE,KAAA,QAAKwE,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BvE,KAAA,QAAKwE,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BzE,IAAA,SAAM0E,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAC,cAAE,CAAM,CAAC,cACxCzE,IAAA,SAAM0E,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAExD,cAAc,CAAO,CAAC,EACnD,CAAC,cACNjB,IAAA,WACE0E,SAAS,CAAC,iBAAiB,CAC3BC,OAAO,CAAEJ,oBAAqB,CAC9B,aAAW,iBAAiB,CAAAE,QAAA,CAC7B,cAED,CAAQ,CAAC,EACN,CAAC,CACH,CACN,CAGA,CAAChE,eAAe,eACfT,IAAA,QAAK0E,SAAS,CAAC,qBAAqB,CAAAD,QAAA,cAClCvE,KAAA,QAAKwE,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAClCzE,IAAA,SAAM0E,SAAS,CAAC,kBAAkB,CAAAD,QAAA,CAAC,cAAE,CAAM,CAAC,cAC5CzE,IAAA,SAAM0E,SAAS,CAAC,kBAAkB,CAAAD,QAAA,CAAC,kJAEnC,CAAM,CAAC,EACJ,CAAC,CACH,CACN,CAEA9D,OAAO,cACNT,KAAA,QAAKwE,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BzE,IAAA,QAAK0E,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/B1E,IAAA,MAAAyE,QAAA,CAAG,yBAAuB,CAAG,CAAC,EAC3B,CAAC,cAENvE,KAAA,QAAKwE,SAAS,CAAC,mBAAmB,CAAAD,QAAA,eAChCzE,IAAA,OAAAyE,QAAA,CAAKrE,CAAC,CAAC,qBAAqB,CAAC,CAAK,CAAC,cACnCF,KAAA,MAAAuE,QAAA,EAAIrE,CAAC,CAAC,uBAAuB,CAAC,CAAC,GAAC,EAAG,CAAC,CAEnCS,KAAK,eAAIb,IAAA,QAAK0E,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAE5D,KAAK,CAAM,CAAC,cAGtDX,KAAA,QAAKwE,SAAS,CAAC,yBAAyB,CAAAD,QAAA,EAErC,CAAChE,eAAe,GAAIJ,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEoC,WAAW,iBACpCvC,KAAA,QACEwE,SAAS,CAAC,cAAc,CACxBC,OAAO,CAAGP,KAAK,EAAKD,mBAAmB,CAACC,KAAK,CAAApB,aAAA,EAAIR,IAAI,CAAE,MAAM,EAAKnC,IAAI,CAAE,CAAE,CAAAoE,QAAA,eAE1EvE,KAAA,QAAKwE,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAClCzE,IAAA,QAAK4E,GAAG,CAAEvE,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEkC,UAAW,CAACsC,GAAG,CAAC,kBAAkB,CAAE,CAAC,CACpD9D,SAAS,SAAAe,MAAA,CAASzB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEuB,KAAK,EAAG,CAAG,CAAC,eACnC5B,IAAA,QAAK0E,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAC7B1D,SAAS,SAAAe,MAAA,CAASzB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEuB,KAAK,EAAG,CAC9B,CACN,EACE,CAAC,cACN5B,IAAA,OAAAyE,QAAA,CAAK,CAAApE,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEiC,IAAI,IAAIjC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEuB,KAAK,EAAK,CAAC,cACpC5B,IAAA,MAAAyE,QAAA,CAAIpE,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEoC,WAAW,CAAG,oBAAoB,CAAG,uBAAuB,CAAI,CAAC,cAC3EvC,KAAA,QAAKwE,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BzE,IAAA,SAAM0E,SAAS,CAAC,cAAc,CAAAD,QAAA,CAC3BpE,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEoC,WAAW,CAAG,WAAW,CAAG,UAAU,CACzC,CAAC,CACN,CAAApC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEoC,WAAW,gBAChBzC,IAAA,SAAM0E,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAC,gBAAc,CAAM,CAClD,EACE,CAAC,EACH,CACN,CAGAlE,aAAa,CAACmD,GAAG,CAAEzB,GAAG,eACrB/B,KAAA,QAEEwE,SAAS,iBAAA5C,MAAA,CAAkBG,GAAG,CAACgB,KAAK,CAAG,SAAS,CAAG,EAAE,CAAG,CACxD0B,OAAO,CAAGP,KAAK,EAAKD,mBAAmB,CAACC,KAAK,CAAApB,aAAA,EAAIR,IAAI,CAAE,KAAK,EAAKP,GAAG,CAAE,CAAE,CAAAwC,QAAA,eAExEvE,KAAA,QAAKwE,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAClCzE,IAAA,QACE4E,GAAG,CAAE3C,GAAG,CAACM,UAAU,wBAAAT,MAAA,CAA0BG,GAAG,CAACL,KAAK,QAAO,CAC7DiD,GAAG,IAAA/C,MAAA,CAAKG,GAAG,CAACK,IAAI,EAAIL,GAAG,CAACL,KAAK,iBAAgB,CAC9C,CAAC,CACDb,SAAS,QAAAe,MAAA,CAAQG,GAAG,CAACL,KAAK,EAAG,CAAG,CAAC,eAChC5B,IAAA,QAAK0E,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAC7B1D,SAAS,QAAAe,MAAA,CAAQG,GAAG,CAACL,KAAK,EAAG,CAC3B,CACN,EACE,CAAC,cACN5B,IAAA,OAAAyE,QAAA,CAAKxC,GAAG,CAACK,IAAI,EAAIL,GAAG,CAACL,KAAK,CAAK,CAAC,cAChC1B,KAAA,MAAAuE,QAAA,EAAG,GAAC,CAACxC,GAAG,CAACL,KAAK,EAAI,CAAC,cACnB1B,KAAA,QAAKwE,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BzE,IAAA,SAAM0E,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAErE,CAAC,CAAC,4BAA4B,CAAC,CAAO,CAAC,CACtE6B,GAAG,CAACgB,KAAK,eAAIjD,IAAA,SAAM0E,SAAS,CAAC,WAAW,CAAAD,QAAA,CAAC,cAAY,CAAM,CAAC,EAC1D,CAAC,GApBDxC,GAAG,CAACL,KAqBN,CACN,CAAC,EACC,CAAC,EACH,CACN,EACE,CAAC,CACI,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAzB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}