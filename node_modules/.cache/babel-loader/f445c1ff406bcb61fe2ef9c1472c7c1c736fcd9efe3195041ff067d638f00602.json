{"ast":null,"code":"import inherits from 'inherits-browser';\nimport { forEach, reduce } from 'min-dash';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { isEventSubProcess } from '../../../util/DiUtil';\n\n/**\n * @typedef {import('../../replace/BpmnReplace').default} BpmnReplace\n * @typedef {import('../../rules/BpmnRules').default} BpmnRules\n * @typedef {import('diagram-js/lib/core/ElementRegistry').default} ElementRegistry\n * @typedef {import('didi').Injector} Injector\n * @typedef {import('../Modeling').default} Modeling\n * @typedef {import('diagram-js/lib/features/selection/Selection').default} Selection\n */\n\n/**\n * BPMN-specific replace behavior.\n *\n * @param {BpmnReplace} bpmnReplace\n * @param {BpmnRules} bpmnRules\n * @param {ElementRegistry} elementRegistry\n * @param {Injector} injector\n * @param {Modeling} modeling\n * @param {Selection} selection\n */\nexport default function ReplaceElementBehaviour(bpmnReplace, bpmnRules, elementRegistry, injector, modeling, selection) {\n  injector.invoke(CommandInterceptor, this);\n  this._bpmnReplace = bpmnReplace;\n  this._elementRegistry = elementRegistry;\n  this._selection = selection;\n\n  // replace elements on create, e.g. during copy-paste\n  this.postExecuted(['elements.create'], 500, function (event) {\n    var context = event.context,\n      target = context.parent,\n      elements = context.elements;\n    var elementReplacements = reduce(elements, function (replacements, element) {\n      var canReplace = bpmnRules.canReplace([element], element.host || element.parent || target);\n      return canReplace ? replacements.concat(canReplace.replacements) : replacements;\n    }, []);\n    if (elementReplacements.length) {\n      this._replaceElements(elements, elementReplacements);\n    }\n  }, this);\n\n  // replace elements on move\n  this.postExecuted(['elements.move'], 500, function (event) {\n    var context = event.context,\n      target = context.newParent,\n      newHost = context.newHost,\n      elements = [];\n    forEach(context.closure.topLevel, function (topLevelElements) {\n      if (isEventSubProcess(topLevelElements)) {\n        elements = elements.concat(topLevelElements.children);\n      } else {\n        elements = elements.concat(topLevelElements);\n      }\n    });\n\n    // set target to host if attaching\n    if (elements.length === 1 && newHost) {\n      target = newHost;\n    }\n    var canReplace = bpmnRules.canReplace(elements, target);\n    if (canReplace) {\n      this._replaceElements(elements, canReplace.replacements, newHost);\n    }\n  }, this);\n\n  // update attachments on host replace\n  this.postExecute(['shape.replace'], 1500, function (e) {\n    var context = e.context,\n      oldShape = context.oldShape,\n      newShape = context.newShape,\n      attachers = oldShape.attachers,\n      canReplace;\n    if (attachers && attachers.length) {\n      canReplace = bpmnRules.canReplace(attachers, newShape);\n      this._replaceElements(attachers, canReplace.replacements);\n    }\n  }, this);\n\n  // keep ID on shape replace\n  this.postExecuted(['shape.replace'], 1500, function (e) {\n    var context = e.context,\n      oldShape = context.oldShape,\n      newShape = context.newShape;\n    modeling.unclaimId(oldShape.businessObject.id, oldShape.businessObject);\n    modeling.updateProperties(newShape, {\n      id: oldShape.id\n    });\n  });\n}\ninherits(ReplaceElementBehaviour, CommandInterceptor);\nReplaceElementBehaviour.prototype._replaceElements = function (elements, newElements) {\n  var elementRegistry = this._elementRegistry,\n    bpmnReplace = this._bpmnReplace,\n    selection = this._selection;\n  forEach(newElements, function (replacement) {\n    var newElement = {\n      type: replacement.newElementType\n    };\n    var oldElement = elementRegistry.get(replacement.oldElementId);\n    var idx = elements.indexOf(oldElement);\n    elements[idx] = bpmnReplace.replaceElement(oldElement, newElement, {\n      select: false\n    });\n  });\n  if (newElements) {\n    selection.select(elements);\n  }\n};\nReplaceElementBehaviour.$inject = ['bpmnReplace', 'bpmnRules', 'elementRegistry', 'injector', 'modeling', 'selection'];","map":{"version":3,"names":["inherits","forEach","reduce","CommandInterceptor","isEventSubProcess","ReplaceElementBehaviour","bpmnReplace","bpmnRules","elementRegistry","injector","modeling","selection","invoke","_bpmnReplace","_elementRegistry","_selection","postExecuted","event","context","target","parent","elements","elementReplacements","replacements","element","canReplace","host","concat","length","_replaceElements","newParent","newHost","closure","topLevel","topLevelElements","children","postExecute","e","oldShape","newShape","attachers","unclaimId","businessObject","id","updateProperties","prototype","newElements","replacement","newElement","type","newElementType","oldElement","get","oldElementId","idx","indexOf","replaceElement","select","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/ReplaceElementBehaviour.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport { forEach, reduce } from 'min-dash';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { isEventSubProcess } from '../../../util/DiUtil';\n\n/**\n * @typedef {import('../../replace/BpmnReplace').default} BpmnReplace\n * @typedef {import('../../rules/BpmnRules').default} BpmnRules\n * @typedef {import('diagram-js/lib/core/ElementRegistry').default} ElementRegistry\n * @typedef {import('didi').Injector} Injector\n * @typedef {import('../Modeling').default} Modeling\n * @typedef {import('diagram-js/lib/features/selection/Selection').default} Selection\n */\n\n/**\n * BPMN-specific replace behavior.\n *\n * @param {BpmnReplace} bpmnReplace\n * @param {BpmnRules} bpmnRules\n * @param {ElementRegistry} elementRegistry\n * @param {Injector} injector\n * @param {Modeling} modeling\n * @param {Selection} selection\n */\nexport default function ReplaceElementBehaviour(\n    bpmnReplace,\n    bpmnRules,\n    elementRegistry,\n    injector,\n    modeling,\n    selection\n) {\n  injector.invoke(CommandInterceptor, this);\n\n  this._bpmnReplace = bpmnReplace;\n  this._elementRegistry = elementRegistry;\n  this._selection = selection;\n\n  // replace elements on create, e.g. during copy-paste\n  this.postExecuted([ 'elements.create' ], 500, function(event) {\n    var context = event.context,\n        target = context.parent,\n        elements = context.elements;\n\n    var elementReplacements = reduce(elements, function(replacements, element) {\n      var canReplace = bpmnRules.canReplace([ element ], element.host || element.parent || target);\n\n      return canReplace ? replacements.concat(canReplace.replacements) : replacements;\n    }, []);\n\n    if (elementReplacements.length) {\n      this._replaceElements(elements, elementReplacements);\n    }\n  }, this);\n\n  // replace elements on move\n  this.postExecuted([ 'elements.move' ], 500, function(event) {\n    var context = event.context,\n        target = context.newParent,\n        newHost = context.newHost,\n        elements = [];\n\n    forEach(context.closure.topLevel, function(topLevelElements) {\n      if (isEventSubProcess(topLevelElements)) {\n        elements = elements.concat(topLevelElements.children);\n      } else {\n        elements = elements.concat(topLevelElements);\n      }\n    });\n\n    // set target to host if attaching\n    if (elements.length === 1 && newHost) {\n      target = newHost;\n    }\n\n    var canReplace = bpmnRules.canReplace(elements, target);\n\n    if (canReplace) {\n      this._replaceElements(elements, canReplace.replacements, newHost);\n    }\n  }, this);\n\n  // update attachments on host replace\n  this.postExecute([ 'shape.replace' ], 1500, function(e) {\n    var context = e.context,\n        oldShape = context.oldShape,\n        newShape = context.newShape,\n        attachers = oldShape.attachers,\n        canReplace;\n\n    if (attachers && attachers.length) {\n      canReplace = bpmnRules.canReplace(attachers, newShape);\n\n      this._replaceElements(attachers, canReplace.replacements);\n    }\n\n  }, this);\n\n  // keep ID on shape replace\n  this.postExecuted([ 'shape.replace' ], 1500, function(e) {\n    var context = e.context,\n        oldShape = context.oldShape,\n        newShape = context.newShape;\n\n    modeling.unclaimId(oldShape.businessObject.id, oldShape.businessObject);\n    modeling.updateProperties(newShape, { id: oldShape.id });\n  });\n}\n\ninherits(ReplaceElementBehaviour, CommandInterceptor);\n\nReplaceElementBehaviour.prototype._replaceElements = function(elements, newElements) {\n  var elementRegistry = this._elementRegistry,\n      bpmnReplace = this._bpmnReplace,\n      selection = this._selection;\n\n  forEach(newElements, function(replacement) {\n    var newElement = {\n      type: replacement.newElementType\n    };\n\n    var oldElement = elementRegistry.get(replacement.oldElementId);\n\n    var idx = elements.indexOf(oldElement);\n\n    elements[idx] = bpmnReplace.replaceElement(oldElement, newElement, { select: false });\n  });\n\n  if (newElements) {\n    selection.select(elements);\n  }\n};\n\nReplaceElementBehaviour.$inject = [\n  'bpmnReplace',\n  'bpmnRules',\n  'elementRegistry',\n  'injector',\n  'modeling',\n  'selection'\n];\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,kBAAkB;AAEvC,SAASC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAE1C,OAAOC,kBAAkB,MAAM,2CAA2C;AAE1E,SAASC,iBAAiB,QAAQ,sBAAsB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,uBAAuBA,CAC3CC,WAAW,EACXC,SAAS,EACTC,eAAe,EACfC,QAAQ,EACRC,QAAQ,EACRC,SAAS,EACX;EACAF,QAAQ,CAACG,MAAM,CAACT,kBAAkB,EAAE,IAAI,CAAC;EAEzC,IAAI,CAACU,YAAY,GAAGP,WAAW;EAC/B,IAAI,CAACQ,gBAAgB,GAAGN,eAAe;EACvC,IAAI,CAACO,UAAU,GAAGJ,SAAS;;EAE3B;EACA,IAAI,CAACK,YAAY,CAAC,CAAE,iBAAiB,CAAE,EAAE,GAAG,EAAE,UAASC,KAAK,EAAE;IAC5D,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;MACvBC,MAAM,GAAGD,OAAO,CAACE,MAAM;MACvBC,QAAQ,GAAGH,OAAO,CAACG,QAAQ;IAE/B,IAAIC,mBAAmB,GAAGpB,MAAM,CAACmB,QAAQ,EAAE,UAASE,YAAY,EAAEC,OAAO,EAAE;MACzE,IAAIC,UAAU,GAAGlB,SAAS,CAACkB,UAAU,CAAC,CAAED,OAAO,CAAE,EAAEA,OAAO,CAACE,IAAI,IAAIF,OAAO,CAACJ,MAAM,IAAID,MAAM,CAAC;MAE5F,OAAOM,UAAU,GAAGF,YAAY,CAACI,MAAM,CAACF,UAAU,CAACF,YAAY,CAAC,GAAGA,YAAY;IACjF,CAAC,EAAE,EAAE,CAAC;IAEN,IAAID,mBAAmB,CAACM,MAAM,EAAE;MAC9B,IAAI,CAACC,gBAAgB,CAACR,QAAQ,EAAEC,mBAAmB,CAAC;IACtD;EACF,CAAC,EAAE,IAAI,CAAC;;EAER;EACA,IAAI,CAACN,YAAY,CAAC,CAAE,eAAe,CAAE,EAAE,GAAG,EAAE,UAASC,KAAK,EAAE;IAC1D,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;MACvBC,MAAM,GAAGD,OAAO,CAACY,SAAS;MAC1BC,OAAO,GAAGb,OAAO,CAACa,OAAO;MACzBV,QAAQ,GAAG,EAAE;IAEjBpB,OAAO,CAACiB,OAAO,CAACc,OAAO,CAACC,QAAQ,EAAE,UAASC,gBAAgB,EAAE;MAC3D,IAAI9B,iBAAiB,CAAC8B,gBAAgB,CAAC,EAAE;QACvCb,QAAQ,GAAGA,QAAQ,CAACM,MAAM,CAACO,gBAAgB,CAACC,QAAQ,CAAC;MACvD,CAAC,MAAM;QACLd,QAAQ,GAAGA,QAAQ,CAACM,MAAM,CAACO,gBAAgB,CAAC;MAC9C;IACF,CAAC,CAAC;;IAEF;IACA,IAAIb,QAAQ,CAACO,MAAM,KAAK,CAAC,IAAIG,OAAO,EAAE;MACpCZ,MAAM,GAAGY,OAAO;IAClB;IAEA,IAAIN,UAAU,GAAGlB,SAAS,CAACkB,UAAU,CAACJ,QAAQ,EAAEF,MAAM,CAAC;IAEvD,IAAIM,UAAU,EAAE;MACd,IAAI,CAACI,gBAAgB,CAACR,QAAQ,EAAEI,UAAU,CAACF,YAAY,EAAEQ,OAAO,CAAC;IACnE;EACF,CAAC,EAAE,IAAI,CAAC;;EAER;EACA,IAAI,CAACK,WAAW,CAAC,CAAE,eAAe,CAAE,EAAE,IAAI,EAAE,UAASC,CAAC,EAAE;IACtD,IAAInB,OAAO,GAAGmB,CAAC,CAACnB,OAAO;MACnBoB,QAAQ,GAAGpB,OAAO,CAACoB,QAAQ;MAC3BC,QAAQ,GAAGrB,OAAO,CAACqB,QAAQ;MAC3BC,SAAS,GAAGF,QAAQ,CAACE,SAAS;MAC9Bf,UAAU;IAEd,IAAIe,SAAS,IAAIA,SAAS,CAACZ,MAAM,EAAE;MACjCH,UAAU,GAAGlB,SAAS,CAACkB,UAAU,CAACe,SAAS,EAAED,QAAQ,CAAC;MAEtD,IAAI,CAACV,gBAAgB,CAACW,SAAS,EAAEf,UAAU,CAACF,YAAY,CAAC;IAC3D;EAEF,CAAC,EAAE,IAAI,CAAC;;EAER;EACA,IAAI,CAACP,YAAY,CAAC,CAAE,eAAe,CAAE,EAAE,IAAI,EAAE,UAASqB,CAAC,EAAE;IACvD,IAAInB,OAAO,GAAGmB,CAAC,CAACnB,OAAO;MACnBoB,QAAQ,GAAGpB,OAAO,CAACoB,QAAQ;MAC3BC,QAAQ,GAAGrB,OAAO,CAACqB,QAAQ;IAE/B7B,QAAQ,CAAC+B,SAAS,CAACH,QAAQ,CAACI,cAAc,CAACC,EAAE,EAAEL,QAAQ,CAACI,cAAc,CAAC;IACvEhC,QAAQ,CAACkC,gBAAgB,CAACL,QAAQ,EAAE;MAAEI,EAAE,EAAEL,QAAQ,CAACK;IAAG,CAAC,CAAC;EAC1D,CAAC,CAAC;AACJ;AAEA3C,QAAQ,CAACK,uBAAuB,EAAEF,kBAAkB,CAAC;AAErDE,uBAAuB,CAACwC,SAAS,CAAChB,gBAAgB,GAAG,UAASR,QAAQ,EAAEyB,WAAW,EAAE;EACnF,IAAItC,eAAe,GAAG,IAAI,CAACM,gBAAgB;IACvCR,WAAW,GAAG,IAAI,CAACO,YAAY;IAC/BF,SAAS,GAAG,IAAI,CAACI,UAAU;EAE/Bd,OAAO,CAAC6C,WAAW,EAAE,UAASC,WAAW,EAAE;IACzC,IAAIC,UAAU,GAAG;MACfC,IAAI,EAAEF,WAAW,CAACG;IACpB,CAAC;IAED,IAAIC,UAAU,GAAG3C,eAAe,CAAC4C,GAAG,CAACL,WAAW,CAACM,YAAY,CAAC;IAE9D,IAAIC,GAAG,GAAGjC,QAAQ,CAACkC,OAAO,CAACJ,UAAU,CAAC;IAEtC9B,QAAQ,CAACiC,GAAG,CAAC,GAAGhD,WAAW,CAACkD,cAAc,CAACL,UAAU,EAAEH,UAAU,EAAE;MAAES,MAAM,EAAE;IAAM,CAAC,CAAC;EACvF,CAAC,CAAC;EAEF,IAAIX,WAAW,EAAE;IACfnC,SAAS,CAAC8C,MAAM,CAACpC,QAAQ,CAAC;EAC5B;AACF,CAAC;AAEDhB,uBAAuB,CAACqD,OAAO,GAAG,CAChC,aAAa,EACb,WAAW,EACX,iBAAiB,EACjB,UAAU,EACV,UAAU,EACV,WAAW,CACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}