{"ast":null,"code":"import { isString, assign } from 'min-dash';\nimport { Moddle } from 'moddle';\nimport { Reader, Writer } from 'moddle-xml';\n\n/**\n * A sub class of {@link Moddle} with support for import and export of BPMN 2.0 xml files.\n *\n * @class BpmnModdle\n * @extends Moddle\n *\n * @param {Object|Array} packages to use for instantiating the model\n * @param {Object} [options] additional options to pass over\n */\nfunction BpmnModdle(packages, options) {\n  Moddle.call(this, packages, options);\n}\nBpmnModdle.prototype = Object.create(Moddle.prototype);\n\n/**\n * The fromXML result.\n *\n * @typedef {Object} ParseResult\n *\n * @property {ModdleElement} rootElement\n * @property {Array<Object>} references\n * @property {Array<Error>} warnings\n * @property {Object} elementsById - a mapping containing each ID -> ModdleElement\n */\n\n/**\n * The fromXML error.\n *\n * @typedef {Error} ParseError\n *\n * @property {Array<Error>} warnings\n */\n\n/**\n * Instantiates a BPMN model tree from a given xml string.\n *\n * @param {String}   xmlStr\n * @param {String}   [typeName='bpmn:Definitions'] name of the root element\n * @param {Object}   [options]  options to pass to the underlying reader\n *\n * @returns {Promise<ParseResult, ParseError>}\n */\nBpmnModdle.prototype.fromXML = function (xmlStr, typeName, options) {\n  if (!isString(typeName)) {\n    options = typeName;\n    typeName = 'bpmn:Definitions';\n  }\n  var reader = new Reader(assign({\n    model: this,\n    lax: true\n  }, options));\n  var rootHandler = reader.handler(typeName);\n  return reader.fromXML(xmlStr, rootHandler);\n};\n\n/**\n * The toXML result.\n *\n * @typedef {Object} SerializationResult\n *\n * @property {String} xml\n */\n\n/**\n * Serializes a BPMN 2.0 object tree to XML.\n *\n * @param {String}   element    the root element, typically an instance of `bpmn:Definitions`\n * @param {Object}   [options]  to pass to the underlying writer\n *\n * @returns {Promise<SerializationResult, Error>}\n */\nBpmnModdle.prototype.toXML = function (element, options) {\n  var writer = new Writer(options);\n  return new Promise(function (resolve, reject) {\n    try {\n      var result = writer.toXML(element);\n      return resolve({\n        xml: result\n      });\n    } catch (err) {\n      return reject(err);\n    }\n  });\n};\nvar name$5 = \"BPMN20\";\nvar uri$5 = \"http://www.omg.org/spec/BPMN/20100524/MODEL\";\nvar prefix$5 = \"bpmn\";\nvar associations$5 = [];\nvar types$5 = [{\n  name: \"Interface\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"operations\",\n    type: \"Operation\",\n    isMany: true\n  }, {\n    name: \"implementationRef\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Operation\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"inMessageRef\",\n    type: \"Message\",\n    isReference: true\n  }, {\n    name: \"outMessageRef\",\n    type: \"Message\",\n    isReference: true\n  }, {\n    name: \"errorRef\",\n    type: \"Error\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"implementationRef\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"EndPoint\",\n  superClass: [\"RootElement\"]\n}, {\n  name: \"Auditing\",\n  superClass: [\"BaseElement\"]\n}, {\n  name: \"GlobalTask\",\n  superClass: [\"CallableElement\"],\n  properties: [{\n    name: \"resources\",\n    type: \"ResourceRole\",\n    isMany: true\n  }]\n}, {\n  name: \"Monitoring\",\n  superClass: [\"BaseElement\"]\n}, {\n  name: \"Performer\",\n  superClass: [\"ResourceRole\"]\n}, {\n  name: \"Process\",\n  superClass: [\"FlowElementsContainer\", \"CallableElement\"],\n  properties: [{\n    name: \"processType\",\n    type: \"ProcessType\",\n    isAttr: true\n  }, {\n    name: \"isClosed\",\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"auditing\",\n    type: \"Auditing\"\n  }, {\n    name: \"monitoring\",\n    type: \"Monitoring\"\n  }, {\n    name: \"properties\",\n    type: \"Property\",\n    isMany: true\n  }, {\n    name: \"laneSets\",\n    isMany: true,\n    replaces: \"FlowElementsContainer#laneSets\",\n    type: \"LaneSet\"\n  }, {\n    name: \"flowElements\",\n    isMany: true,\n    replaces: \"FlowElementsContainer#flowElements\",\n    type: \"FlowElement\"\n  }, {\n    name: \"artifacts\",\n    type: \"Artifact\",\n    isMany: true\n  }, {\n    name: \"resources\",\n    type: \"ResourceRole\",\n    isMany: true\n  }, {\n    name: \"correlationSubscriptions\",\n    type: \"CorrelationSubscription\",\n    isMany: true\n  }, {\n    name: \"supports\",\n    type: \"Process\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"definitionalCollaborationRef\",\n    type: \"Collaboration\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"isExecutable\",\n    isAttr: true,\n    type: \"Boolean\"\n  }]\n}, {\n  name: \"LaneSet\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"lanes\",\n    type: \"Lane\",\n    isMany: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Lane\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"partitionElementRef\",\n    type: \"BaseElement\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"partitionElement\",\n    type: \"BaseElement\"\n  }, {\n    name: \"flowNodeRef\",\n    type: \"FlowNode\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"childLaneSet\",\n    type: \"LaneSet\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }]\n}, {\n  name: \"GlobalManualTask\",\n  superClass: [\"GlobalTask\"]\n}, {\n  name: \"ManualTask\",\n  superClass: [\"Task\"]\n}, {\n  name: \"UserTask\",\n  superClass: [\"Task\"],\n  properties: [{\n    name: \"renderings\",\n    type: \"Rendering\",\n    isMany: true\n  }, {\n    name: \"implementation\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Rendering\",\n  superClass: [\"BaseElement\"]\n}, {\n  name: \"HumanPerformer\",\n  superClass: [\"Performer\"]\n}, {\n  name: \"PotentialOwner\",\n  superClass: [\"HumanPerformer\"]\n}, {\n  name: \"GlobalUserTask\",\n  superClass: [\"GlobalTask\"],\n  properties: [{\n    name: \"implementation\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"renderings\",\n    type: \"Rendering\",\n    isMany: true\n  }]\n}, {\n  name: \"Gateway\",\n  isAbstract: true,\n  superClass: [\"FlowNode\"],\n  properties: [{\n    name: \"gatewayDirection\",\n    type: \"GatewayDirection\",\n    \"default\": \"Unspecified\",\n    isAttr: true\n  }]\n}, {\n  name: \"EventBasedGateway\",\n  superClass: [\"Gateway\"],\n  properties: [{\n    name: \"instantiate\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"eventGatewayType\",\n    type: \"EventBasedGatewayType\",\n    isAttr: true,\n    \"default\": \"Exclusive\"\n  }]\n}, {\n  name: \"ComplexGateway\",\n  superClass: [\"Gateway\"],\n  properties: [{\n    name: \"activationCondition\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"default\",\n    type: \"SequenceFlow\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ExclusiveGateway\",\n  superClass: [\"Gateway\"],\n  properties: [{\n    name: \"default\",\n    type: \"SequenceFlow\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"InclusiveGateway\",\n  superClass: [\"Gateway\"],\n  properties: [{\n    name: \"default\",\n    type: \"SequenceFlow\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ParallelGateway\",\n  superClass: [\"Gateway\"]\n}, {\n  name: \"RootElement\",\n  isAbstract: true,\n  superClass: [\"BaseElement\"]\n}, {\n  name: \"Relationship\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"type\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"direction\",\n    type: \"RelationshipDirection\",\n    isAttr: true\n  }, {\n    name: \"source\",\n    isMany: true,\n    isReference: true,\n    type: \"Element\"\n  }, {\n    name: \"target\",\n    isMany: true,\n    isReference: true,\n    type: \"Element\"\n  }]\n}, {\n  name: \"BaseElement\",\n  isAbstract: true,\n  properties: [{\n    name: \"id\",\n    isAttr: true,\n    type: \"String\",\n    isId: true\n  }, {\n    name: \"documentation\",\n    type: \"Documentation\",\n    isMany: true\n  }, {\n    name: \"extensionDefinitions\",\n    type: \"ExtensionDefinition\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"extensionElements\",\n    type: \"ExtensionElements\"\n  }]\n}, {\n  name: \"Extension\",\n  properties: [{\n    name: \"mustUnderstand\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"definition\",\n    type: \"ExtensionDefinition\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ExtensionDefinition\",\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"extensionAttributeDefinitions\",\n    type: \"ExtensionAttributeDefinition\",\n    isMany: true\n  }]\n}, {\n  name: \"ExtensionAttributeDefinition\",\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"type\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"isReference\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"extensionDefinition\",\n    type: \"ExtensionDefinition\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ExtensionElements\",\n  properties: [{\n    name: \"valueRef\",\n    isAttr: true,\n    isReference: true,\n    type: \"Element\"\n  }, {\n    name: \"values\",\n    type: \"Element\",\n    isMany: true\n  }, {\n    name: \"extensionAttributeDefinition\",\n    type: \"ExtensionAttributeDefinition\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"Documentation\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"text\",\n    type: \"String\",\n    isBody: true\n  }, {\n    name: \"textFormat\",\n    \"default\": \"text/plain\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Event\",\n  isAbstract: true,\n  superClass: [\"FlowNode\", \"InteractionNode\"],\n  properties: [{\n    name: \"properties\",\n    type: \"Property\",\n    isMany: true\n  }]\n}, {\n  name: \"IntermediateCatchEvent\",\n  superClass: [\"CatchEvent\"]\n}, {\n  name: \"IntermediateThrowEvent\",\n  superClass: [\"ThrowEvent\"]\n}, {\n  name: \"EndEvent\",\n  superClass: [\"ThrowEvent\"]\n}, {\n  name: \"StartEvent\",\n  superClass: [\"CatchEvent\"],\n  properties: [{\n    name: \"isInterrupting\",\n    \"default\": true,\n    isAttr: true,\n    type: \"Boolean\"\n  }]\n}, {\n  name: \"ThrowEvent\",\n  isAbstract: true,\n  superClass: [\"Event\"],\n  properties: [{\n    name: \"dataInputs\",\n    type: \"DataInput\",\n    isMany: true\n  }, {\n    name: \"dataInputAssociations\",\n    type: \"DataInputAssociation\",\n    isMany: true\n  }, {\n    name: \"inputSet\",\n    type: \"InputSet\"\n  }, {\n    name: \"eventDefinitions\",\n    type: \"EventDefinition\",\n    isMany: true\n  }, {\n    name: \"eventDefinitionRef\",\n    type: \"EventDefinition\",\n    isMany: true,\n    isReference: true\n  }]\n}, {\n  name: \"CatchEvent\",\n  isAbstract: true,\n  superClass: [\"Event\"],\n  properties: [{\n    name: \"parallelMultiple\",\n    isAttr: true,\n    type: \"Boolean\",\n    \"default\": false\n  }, {\n    name: \"dataOutputs\",\n    type: \"DataOutput\",\n    isMany: true\n  }, {\n    name: \"dataOutputAssociations\",\n    type: \"DataOutputAssociation\",\n    isMany: true\n  }, {\n    name: \"outputSet\",\n    type: \"OutputSet\"\n  }, {\n    name: \"eventDefinitions\",\n    type: \"EventDefinition\",\n    isMany: true\n  }, {\n    name: \"eventDefinitionRef\",\n    type: \"EventDefinition\",\n    isMany: true,\n    isReference: true\n  }]\n}, {\n  name: \"BoundaryEvent\",\n  superClass: [\"CatchEvent\"],\n  properties: [{\n    name: \"cancelActivity\",\n    \"default\": true,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"attachedToRef\",\n    type: \"Activity\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"EventDefinition\",\n  isAbstract: true,\n  superClass: [\"RootElement\"]\n}, {\n  name: \"CancelEventDefinition\",\n  superClass: [\"EventDefinition\"]\n}, {\n  name: \"ErrorEventDefinition\",\n  superClass: [\"EventDefinition\"],\n  properties: [{\n    name: \"errorRef\",\n    type: \"Error\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"TerminateEventDefinition\",\n  superClass: [\"EventDefinition\"]\n}, {\n  name: \"EscalationEventDefinition\",\n  superClass: [\"EventDefinition\"],\n  properties: [{\n    name: \"escalationRef\",\n    type: \"Escalation\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"Escalation\",\n  properties: [{\n    name: \"structureRef\",\n    type: \"ItemDefinition\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"escalationCode\",\n    isAttr: true,\n    type: \"String\"\n  }],\n  superClass: [\"RootElement\"]\n}, {\n  name: \"CompensateEventDefinition\",\n  superClass: [\"EventDefinition\"],\n  properties: [{\n    name: \"waitForCompletion\",\n    isAttr: true,\n    type: \"Boolean\",\n    \"default\": true\n  }, {\n    name: \"activityRef\",\n    type: \"Activity\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"TimerEventDefinition\",\n  superClass: [\"EventDefinition\"],\n  properties: [{\n    name: \"timeDate\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"timeCycle\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"timeDuration\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }]\n}, {\n  name: \"LinkEventDefinition\",\n  superClass: [\"EventDefinition\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"target\",\n    type: \"LinkEventDefinition\",\n    isReference: true\n  }, {\n    name: \"source\",\n    type: \"LinkEventDefinition\",\n    isMany: true,\n    isReference: true\n  }]\n}, {\n  name: \"MessageEventDefinition\",\n  superClass: [\"EventDefinition\"],\n  properties: [{\n    name: \"messageRef\",\n    type: \"Message\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"operationRef\",\n    type: \"Operation\",\n    isReference: true\n  }]\n}, {\n  name: \"ConditionalEventDefinition\",\n  superClass: [\"EventDefinition\"],\n  properties: [{\n    name: \"condition\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }]\n}, {\n  name: \"SignalEventDefinition\",\n  superClass: [\"EventDefinition\"],\n  properties: [{\n    name: \"signalRef\",\n    type: \"Signal\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"Signal\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"structureRef\",\n    type: \"ItemDefinition\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"ImplicitThrowEvent\",\n  superClass: [\"ThrowEvent\"]\n}, {\n  name: \"DataState\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"ItemAwareElement\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"itemSubjectRef\",\n    type: \"ItemDefinition\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"dataState\",\n    type: \"DataState\"\n  }]\n}, {\n  name: \"DataAssociation\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"sourceRef\",\n    type: \"ItemAwareElement\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"targetRef\",\n    type: \"ItemAwareElement\",\n    isReference: true\n  }, {\n    name: \"transformation\",\n    type: \"FormalExpression\",\n    xml: {\n      serialize: \"property\"\n    }\n  }, {\n    name: \"assignment\",\n    type: \"Assignment\",\n    isMany: true\n  }]\n}, {\n  name: \"DataInput\",\n  superClass: [\"ItemAwareElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"isCollection\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"inputSetRef\",\n    type: \"InputSet\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"inputSetWithOptional\",\n    type: \"InputSet\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"inputSetWithWhileExecuting\",\n    type: \"InputSet\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }]\n}, {\n  name: \"DataOutput\",\n  superClass: [\"ItemAwareElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"isCollection\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"outputSetRef\",\n    type: \"OutputSet\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"outputSetWithOptional\",\n    type: \"OutputSet\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"outputSetWithWhileExecuting\",\n    type: \"OutputSet\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }]\n}, {\n  name: \"InputSet\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"dataInputRefs\",\n    type: \"DataInput\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"optionalInputRefs\",\n    type: \"DataInput\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"whileExecutingInputRefs\",\n    type: \"DataInput\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"outputSetRefs\",\n    type: \"OutputSet\",\n    isMany: true,\n    isReference: true\n  }]\n}, {\n  name: \"OutputSet\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"dataOutputRefs\",\n    type: \"DataOutput\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"inputSetRefs\",\n    type: \"InputSet\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"optionalOutputRefs\",\n    type: \"DataOutput\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"whileExecutingOutputRefs\",\n    type: \"DataOutput\",\n    isMany: true,\n    isReference: true\n  }]\n}, {\n  name: \"Property\",\n  superClass: [\"ItemAwareElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"DataInputAssociation\",\n  superClass: [\"DataAssociation\"]\n}, {\n  name: \"DataOutputAssociation\",\n  superClass: [\"DataAssociation\"]\n}, {\n  name: \"InputOutputSpecification\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"dataInputs\",\n    type: \"DataInput\",\n    isMany: true\n  }, {\n    name: \"dataOutputs\",\n    type: \"DataOutput\",\n    isMany: true\n  }, {\n    name: \"inputSets\",\n    type: \"InputSet\",\n    isMany: true\n  }, {\n    name: \"outputSets\",\n    type: \"OutputSet\",\n    isMany: true\n  }]\n}, {\n  name: \"DataObject\",\n  superClass: [\"FlowElement\", \"ItemAwareElement\"],\n  properties: [{\n    name: \"isCollection\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }]\n}, {\n  name: \"InputOutputBinding\",\n  properties: [{\n    name: \"inputDataRef\",\n    type: \"InputSet\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"outputDataRef\",\n    type: \"OutputSet\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"operationRef\",\n    type: \"Operation\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"Assignment\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"from\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"to\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }]\n}, {\n  name: \"DataStore\",\n  superClass: [\"RootElement\", \"ItemAwareElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"capacity\",\n    isAttr: true,\n    type: \"Integer\"\n  }, {\n    name: \"isUnlimited\",\n    \"default\": true,\n    isAttr: true,\n    type: \"Boolean\"\n  }]\n}, {\n  name: \"DataStoreReference\",\n  superClass: [\"ItemAwareElement\", \"FlowElement\"],\n  properties: [{\n    name: \"dataStoreRef\",\n    type: \"DataStore\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"DataObjectReference\",\n  superClass: [\"ItemAwareElement\", \"FlowElement\"],\n  properties: [{\n    name: \"dataObjectRef\",\n    type: \"DataObject\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ConversationLink\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"sourceRef\",\n    type: \"InteractionNode\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"targetRef\",\n    type: \"InteractionNode\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"ConversationAssociation\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"innerConversationNodeRef\",\n    type: \"ConversationNode\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"outerConversationNodeRef\",\n    type: \"ConversationNode\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"CallConversation\",\n  superClass: [\"ConversationNode\"],\n  properties: [{\n    name: \"calledCollaborationRef\",\n    type: \"Collaboration\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"participantAssociations\",\n    type: \"ParticipantAssociation\",\n    isMany: true\n  }]\n}, {\n  name: \"Conversation\",\n  superClass: [\"ConversationNode\"]\n}, {\n  name: \"SubConversation\",\n  superClass: [\"ConversationNode\"],\n  properties: [{\n    name: \"conversationNodes\",\n    type: \"ConversationNode\",\n    isMany: true\n  }]\n}, {\n  name: \"ConversationNode\",\n  isAbstract: true,\n  superClass: [\"InteractionNode\", \"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"participantRef\",\n    type: \"Participant\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"messageFlowRefs\",\n    type: \"MessageFlow\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"correlationKeys\",\n    type: \"CorrelationKey\",\n    isMany: true\n  }]\n}, {\n  name: \"GlobalConversation\",\n  superClass: [\"Collaboration\"]\n}, {\n  name: \"PartnerEntity\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"participantRef\",\n    type: \"Participant\",\n    isMany: true,\n    isReference: true\n  }]\n}, {\n  name: \"PartnerRole\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"participantRef\",\n    type: \"Participant\",\n    isMany: true,\n    isReference: true\n  }]\n}, {\n  name: \"CorrelationProperty\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"correlationPropertyRetrievalExpression\",\n    type: \"CorrelationPropertyRetrievalExpression\",\n    isMany: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"type\",\n    type: \"ItemDefinition\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"Error\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"structureRef\",\n    type: \"ItemDefinition\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"errorCode\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"CorrelationKey\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"correlationPropertyRef\",\n    type: \"CorrelationProperty\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Expression\",\n  superClass: [\"BaseElement\"],\n  isAbstract: false,\n  properties: [{\n    name: \"body\",\n    isBody: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"FormalExpression\",\n  superClass: [\"Expression\"],\n  properties: [{\n    name: \"language\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"evaluatesToTypeRef\",\n    type: \"ItemDefinition\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"Message\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"itemRef\",\n    type: \"ItemDefinition\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ItemDefinition\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"itemKind\",\n    type: \"ItemKind\",\n    isAttr: true\n  }, {\n    name: \"structureRef\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"isCollection\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"import\",\n    type: \"Import\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"FlowElement\",\n  isAbstract: true,\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"auditing\",\n    type: \"Auditing\"\n  }, {\n    name: \"monitoring\",\n    type: \"Monitoring\"\n  }, {\n    name: \"categoryValueRef\",\n    type: \"CategoryValue\",\n    isMany: true,\n    isReference: true\n  }]\n}, {\n  name: \"SequenceFlow\",\n  superClass: [\"FlowElement\"],\n  properties: [{\n    name: \"isImmediate\",\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"conditionExpression\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"sourceRef\",\n    type: \"FlowNode\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"targetRef\",\n    type: \"FlowNode\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"FlowElementsContainer\",\n  isAbstract: true,\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"laneSets\",\n    type: \"LaneSet\",\n    isMany: true\n  }, {\n    name: \"flowElements\",\n    type: \"FlowElement\",\n    isMany: true\n  }]\n}, {\n  name: \"CallableElement\",\n  isAbstract: true,\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"ioSpecification\",\n    type: \"InputOutputSpecification\",\n    xml: {\n      serialize: \"property\"\n    }\n  }, {\n    name: \"supportedInterfaceRef\",\n    type: \"Interface\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"ioBinding\",\n    type: \"InputOutputBinding\",\n    isMany: true,\n    xml: {\n      serialize: \"property\"\n    }\n  }]\n}, {\n  name: \"FlowNode\",\n  isAbstract: true,\n  superClass: [\"FlowElement\"],\n  properties: [{\n    name: \"incoming\",\n    type: \"SequenceFlow\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"outgoing\",\n    type: \"SequenceFlow\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"lanes\",\n    type: \"Lane\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }]\n}, {\n  name: \"CorrelationPropertyRetrievalExpression\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"messagePath\",\n    type: \"FormalExpression\"\n  }, {\n    name: \"messageRef\",\n    type: \"Message\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"CorrelationPropertyBinding\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"dataPath\",\n    type: \"FormalExpression\"\n  }, {\n    name: \"correlationPropertyRef\",\n    type: \"CorrelationProperty\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"Resource\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"resourceParameters\",\n    type: \"ResourceParameter\",\n    isMany: true\n  }]\n}, {\n  name: \"ResourceParameter\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"isRequired\",\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"type\",\n    type: \"ItemDefinition\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"CorrelationSubscription\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"correlationKeyRef\",\n    type: \"CorrelationKey\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"correlationPropertyBinding\",\n    type: \"CorrelationPropertyBinding\",\n    isMany: true\n  }]\n}, {\n  name: \"MessageFlow\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"sourceRef\",\n    type: \"InteractionNode\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"targetRef\",\n    type: \"InteractionNode\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"messageRef\",\n    type: \"Message\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"MessageFlowAssociation\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"innerMessageFlowRef\",\n    type: \"MessageFlow\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"outerMessageFlowRef\",\n    type: \"MessageFlow\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"InteractionNode\",\n  isAbstract: true,\n  properties: [{\n    name: \"incomingConversationLinks\",\n    type: \"ConversationLink\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"outgoingConversationLinks\",\n    type: \"ConversationLink\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }]\n}, {\n  name: \"Participant\",\n  superClass: [\"InteractionNode\", \"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"interfaceRef\",\n    type: \"Interface\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"participantMultiplicity\",\n    type: \"ParticipantMultiplicity\"\n  }, {\n    name: \"endPointRefs\",\n    type: \"EndPoint\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"processRef\",\n    type: \"Process\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ParticipantAssociation\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"innerParticipantRef\",\n    type: \"Participant\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"outerParticipantRef\",\n    type: \"Participant\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ParticipantMultiplicity\",\n  properties: [{\n    name: \"minimum\",\n    \"default\": 0,\n    isAttr: true,\n    type: \"Integer\"\n  }, {\n    name: \"maximum\",\n    \"default\": 1,\n    isAttr: true,\n    type: \"Integer\"\n  }],\n  superClass: [\"BaseElement\"]\n}, {\n  name: \"Collaboration\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"isClosed\",\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"participants\",\n    type: \"Participant\",\n    isMany: true\n  }, {\n    name: \"messageFlows\",\n    type: \"MessageFlow\",\n    isMany: true\n  }, {\n    name: \"artifacts\",\n    type: \"Artifact\",\n    isMany: true\n  }, {\n    name: \"conversations\",\n    type: \"ConversationNode\",\n    isMany: true\n  }, {\n    name: \"conversationAssociations\",\n    type: \"ConversationAssociation\"\n  }, {\n    name: \"participantAssociations\",\n    type: \"ParticipantAssociation\",\n    isMany: true\n  }, {\n    name: \"messageFlowAssociations\",\n    type: \"MessageFlowAssociation\",\n    isMany: true\n  }, {\n    name: \"correlationKeys\",\n    type: \"CorrelationKey\",\n    isMany: true\n  }, {\n    name: \"choreographyRef\",\n    type: \"Choreography\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"conversationLinks\",\n    type: \"ConversationLink\",\n    isMany: true\n  }]\n}, {\n  name: \"ChoreographyActivity\",\n  isAbstract: true,\n  superClass: [\"FlowNode\"],\n  properties: [{\n    name: \"participantRef\",\n    type: \"Participant\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"initiatingParticipantRef\",\n    type: \"Participant\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"correlationKeys\",\n    type: \"CorrelationKey\",\n    isMany: true\n  }, {\n    name: \"loopType\",\n    type: \"ChoreographyLoopType\",\n    \"default\": \"None\",\n    isAttr: true\n  }]\n}, {\n  name: \"CallChoreography\",\n  superClass: [\"ChoreographyActivity\"],\n  properties: [{\n    name: \"calledChoreographyRef\",\n    type: \"Choreography\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"participantAssociations\",\n    type: \"ParticipantAssociation\",\n    isMany: true\n  }]\n}, {\n  name: \"SubChoreography\",\n  superClass: [\"ChoreographyActivity\", \"FlowElementsContainer\"],\n  properties: [{\n    name: \"artifacts\",\n    type: \"Artifact\",\n    isMany: true\n  }]\n}, {\n  name: \"ChoreographyTask\",\n  superClass: [\"ChoreographyActivity\"],\n  properties: [{\n    name: \"messageFlowRef\",\n    type: \"MessageFlow\",\n    isMany: true,\n    isReference: true\n  }]\n}, {\n  name: \"Choreography\",\n  superClass: [\"Collaboration\", \"FlowElementsContainer\"]\n}, {\n  name: \"GlobalChoreographyTask\",\n  superClass: [\"Choreography\"],\n  properties: [{\n    name: \"initiatingParticipantRef\",\n    type: \"Participant\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"TextAnnotation\",\n  superClass: [\"Artifact\"],\n  properties: [{\n    name: \"text\",\n    type: \"String\"\n  }, {\n    name: \"textFormat\",\n    \"default\": \"text/plain\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Group\",\n  superClass: [\"Artifact\"],\n  properties: [{\n    name: \"categoryValueRef\",\n    type: \"CategoryValue\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"Association\",\n  superClass: [\"Artifact\"],\n  properties: [{\n    name: \"associationDirection\",\n    type: \"AssociationDirection\",\n    isAttr: true\n  }, {\n    name: \"sourceRef\",\n    type: \"BaseElement\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"targetRef\",\n    type: \"BaseElement\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"Category\",\n  superClass: [\"RootElement\"],\n  properties: [{\n    name: \"categoryValue\",\n    type: \"CategoryValue\",\n    isMany: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Artifact\",\n  isAbstract: true,\n  superClass: [\"BaseElement\"]\n}, {\n  name: \"CategoryValue\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"categorizedFlowElements\",\n    type: \"FlowElement\",\n    isMany: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"value\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Activity\",\n  isAbstract: true,\n  superClass: [\"FlowNode\"],\n  properties: [{\n    name: \"isForCompensation\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"default\",\n    type: \"SequenceFlow\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"ioSpecification\",\n    type: \"InputOutputSpecification\",\n    xml: {\n      serialize: \"property\"\n    }\n  }, {\n    name: \"boundaryEventRefs\",\n    type: \"BoundaryEvent\",\n    isMany: true,\n    isReference: true\n  }, {\n    name: \"properties\",\n    type: \"Property\",\n    isMany: true\n  }, {\n    name: \"dataInputAssociations\",\n    type: \"DataInputAssociation\",\n    isMany: true\n  }, {\n    name: \"dataOutputAssociations\",\n    type: \"DataOutputAssociation\",\n    isMany: true\n  }, {\n    name: \"startQuantity\",\n    \"default\": 1,\n    isAttr: true,\n    type: \"Integer\"\n  }, {\n    name: \"resources\",\n    type: \"ResourceRole\",\n    isMany: true\n  }, {\n    name: \"completionQuantity\",\n    \"default\": 1,\n    isAttr: true,\n    type: \"Integer\"\n  }, {\n    name: \"loopCharacteristics\",\n    type: \"LoopCharacteristics\"\n  }]\n}, {\n  name: \"ServiceTask\",\n  superClass: [\"Task\"],\n  properties: [{\n    name: \"implementation\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"operationRef\",\n    type: \"Operation\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"SubProcess\",\n  superClass: [\"Activity\", \"FlowElementsContainer\", \"InteractionNode\"],\n  properties: [{\n    name: \"triggeredByEvent\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"artifacts\",\n    type: \"Artifact\",\n    isMany: true\n  }]\n}, {\n  name: \"LoopCharacteristics\",\n  isAbstract: true,\n  superClass: [\"BaseElement\"]\n}, {\n  name: \"MultiInstanceLoopCharacteristics\",\n  superClass: [\"LoopCharacteristics\"],\n  properties: [{\n    name: \"isSequential\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"behavior\",\n    type: \"MultiInstanceBehavior\",\n    \"default\": \"All\",\n    isAttr: true\n  }, {\n    name: \"loopCardinality\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"loopDataInputRef\",\n    type: \"ItemAwareElement\",\n    isReference: true\n  }, {\n    name: \"loopDataOutputRef\",\n    type: \"ItemAwareElement\",\n    isReference: true\n  }, {\n    name: \"inputDataItem\",\n    type: \"DataInput\",\n    xml: {\n      serialize: \"property\"\n    }\n  }, {\n    name: \"outputDataItem\",\n    type: \"DataOutput\",\n    xml: {\n      serialize: \"property\"\n    }\n  }, {\n    name: \"complexBehaviorDefinition\",\n    type: \"ComplexBehaviorDefinition\",\n    isMany: true\n  }, {\n    name: \"completionCondition\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"oneBehaviorEventRef\",\n    type: \"EventDefinition\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"noneBehaviorEventRef\",\n    type: \"EventDefinition\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"StandardLoopCharacteristics\",\n  superClass: [\"LoopCharacteristics\"],\n  properties: [{\n    name: \"testBefore\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"loopCondition\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"loopMaximum\",\n    type: \"Integer\",\n    isAttr: true\n  }]\n}, {\n  name: \"CallActivity\",\n  superClass: [\"Activity\", \"InteractionNode\"],\n  properties: [{\n    name: \"calledElement\",\n    type: \"String\",\n    isAttr: true\n  }]\n}, {\n  name: \"Task\",\n  superClass: [\"Activity\", \"InteractionNode\"]\n}, {\n  name: \"SendTask\",\n  superClass: [\"Task\"],\n  properties: [{\n    name: \"implementation\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"operationRef\",\n    type: \"Operation\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"messageRef\",\n    type: \"Message\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ReceiveTask\",\n  superClass: [\"Task\"],\n  properties: [{\n    name: \"implementation\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"instantiate\",\n    \"default\": false,\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"operationRef\",\n    type: \"Operation\",\n    isAttr: true,\n    isReference: true\n  }, {\n    name: \"messageRef\",\n    type: \"Message\",\n    isAttr: true,\n    isReference: true\n  }]\n}, {\n  name: \"ScriptTask\",\n  superClass: [\"Task\"],\n  properties: [{\n    name: \"scriptFormat\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"script\",\n    type: \"String\"\n  }]\n}, {\n  name: \"BusinessRuleTask\",\n  superClass: [\"Task\"],\n  properties: [{\n    name: \"implementation\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"AdHocSubProcess\",\n  superClass: [\"SubProcess\"],\n  properties: [{\n    name: \"completionCondition\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"ordering\",\n    type: \"AdHocOrdering\",\n    isAttr: true\n  }, {\n    name: \"cancelRemainingInstances\",\n    \"default\": true,\n    isAttr: true,\n    type: \"Boolean\"\n  }]\n}, {\n  name: \"Transaction\",\n  superClass: [\"SubProcess\"],\n  properties: [{\n    name: \"protocol\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"method\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"GlobalScriptTask\",\n  superClass: [\"GlobalTask\"],\n  properties: [{\n    name: \"scriptLanguage\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"script\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"GlobalBusinessRuleTask\",\n  superClass: [\"GlobalTask\"],\n  properties: [{\n    name: \"implementation\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"ComplexBehaviorDefinition\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"condition\",\n    type: \"FormalExpression\"\n  }, {\n    name: \"event\",\n    type: \"ImplicitThrowEvent\"\n  }]\n}, {\n  name: \"ResourceRole\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"resourceRef\",\n    type: \"Resource\",\n    isReference: true\n  }, {\n    name: \"resourceParameterBindings\",\n    type: \"ResourceParameterBinding\",\n    isMany: true\n  }, {\n    name: \"resourceAssignmentExpression\",\n    type: \"ResourceAssignmentExpression\"\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"ResourceParameterBinding\",\n  properties: [{\n    name: \"expression\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }, {\n    name: \"parameterRef\",\n    type: \"ResourceParameter\",\n    isAttr: true,\n    isReference: true\n  }],\n  superClass: [\"BaseElement\"]\n}, {\n  name: \"ResourceAssignmentExpression\",\n  properties: [{\n    name: \"expression\",\n    type: \"Expression\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }],\n  superClass: [\"BaseElement\"]\n}, {\n  name: \"Import\",\n  properties: [{\n    name: \"importType\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"location\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"namespace\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Definitions\",\n  superClass: [\"BaseElement\"],\n  properties: [{\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"targetNamespace\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"expressionLanguage\",\n    \"default\": \"http://www.w3.org/1999/XPath\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"typeLanguage\",\n    \"default\": \"http://www.w3.org/2001/XMLSchema\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"imports\",\n    type: \"Import\",\n    isMany: true\n  }, {\n    name: \"extensions\",\n    type: \"Extension\",\n    isMany: true\n  }, {\n    name: \"rootElements\",\n    type: \"RootElement\",\n    isMany: true\n  }, {\n    name: \"diagrams\",\n    isMany: true,\n    type: \"bpmndi:BPMNDiagram\"\n  }, {\n    name: \"exporter\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"relationships\",\n    type: \"Relationship\",\n    isMany: true\n  }, {\n    name: \"exporterVersion\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}];\nvar enumerations$3 = [{\n  name: \"ProcessType\",\n  literalValues: [{\n    name: \"None\"\n  }, {\n    name: \"Public\"\n  }, {\n    name: \"Private\"\n  }]\n}, {\n  name: \"GatewayDirection\",\n  literalValues: [{\n    name: \"Unspecified\"\n  }, {\n    name: \"Converging\"\n  }, {\n    name: \"Diverging\"\n  }, {\n    name: \"Mixed\"\n  }]\n}, {\n  name: \"EventBasedGatewayType\",\n  literalValues: [{\n    name: \"Parallel\"\n  }, {\n    name: \"Exclusive\"\n  }]\n}, {\n  name: \"RelationshipDirection\",\n  literalValues: [{\n    name: \"None\"\n  }, {\n    name: \"Forward\"\n  }, {\n    name: \"Backward\"\n  }, {\n    name: \"Both\"\n  }]\n}, {\n  name: \"ItemKind\",\n  literalValues: [{\n    name: \"Physical\"\n  }, {\n    name: \"Information\"\n  }]\n}, {\n  name: \"ChoreographyLoopType\",\n  literalValues: [{\n    name: \"None\"\n  }, {\n    name: \"Standard\"\n  }, {\n    name: \"MultiInstanceSequential\"\n  }, {\n    name: \"MultiInstanceParallel\"\n  }]\n}, {\n  name: \"AssociationDirection\",\n  literalValues: [{\n    name: \"None\"\n  }, {\n    name: \"One\"\n  }, {\n    name: \"Both\"\n  }]\n}, {\n  name: \"MultiInstanceBehavior\",\n  literalValues: [{\n    name: \"None\"\n  }, {\n    name: \"One\"\n  }, {\n    name: \"All\"\n  }, {\n    name: \"Complex\"\n  }]\n}, {\n  name: \"AdHocOrdering\",\n  literalValues: [{\n    name: \"Parallel\"\n  }, {\n    name: \"Sequential\"\n  }]\n}];\nvar xml$1 = {\n  tagAlias: \"lowerCase\",\n  typePrefix: \"t\"\n};\nvar BpmnPackage = {\n  name: name$5,\n  uri: uri$5,\n  prefix: prefix$5,\n  associations: associations$5,\n  types: types$5,\n  enumerations: enumerations$3,\n  xml: xml$1\n};\nvar name$4 = \"BPMNDI\";\nvar uri$4 = \"http://www.omg.org/spec/BPMN/20100524/DI\";\nvar prefix$4 = \"bpmndi\";\nvar types$4 = [{\n  name: \"BPMNDiagram\",\n  properties: [{\n    name: \"plane\",\n    type: \"BPMNPlane\",\n    redefines: \"di:Diagram#rootElement\"\n  }, {\n    name: \"labelStyle\",\n    type: \"BPMNLabelStyle\",\n    isMany: true\n  }],\n  superClass: [\"di:Diagram\"]\n}, {\n  name: \"BPMNPlane\",\n  properties: [{\n    name: \"bpmnElement\",\n    isAttr: true,\n    isReference: true,\n    type: \"bpmn:BaseElement\",\n    redefines: \"di:DiagramElement#modelElement\"\n  }],\n  superClass: [\"di:Plane\"]\n}, {\n  name: \"BPMNShape\",\n  properties: [{\n    name: \"bpmnElement\",\n    isAttr: true,\n    isReference: true,\n    type: \"bpmn:BaseElement\",\n    redefines: \"di:DiagramElement#modelElement\"\n  }, {\n    name: \"isHorizontal\",\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"isExpanded\",\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"isMarkerVisible\",\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"label\",\n    type: \"BPMNLabel\"\n  }, {\n    name: \"isMessageVisible\",\n    isAttr: true,\n    type: \"Boolean\"\n  }, {\n    name: \"participantBandKind\",\n    type: \"ParticipantBandKind\",\n    isAttr: true\n  }, {\n    name: \"choreographyActivityShape\",\n    type: \"BPMNShape\",\n    isAttr: true,\n    isReference: true\n  }],\n  superClass: [\"di:LabeledShape\"]\n}, {\n  name: \"BPMNEdge\",\n  properties: [{\n    name: \"label\",\n    type: \"BPMNLabel\"\n  }, {\n    name: \"bpmnElement\",\n    isAttr: true,\n    isReference: true,\n    type: \"bpmn:BaseElement\",\n    redefines: \"di:DiagramElement#modelElement\"\n  }, {\n    name: \"sourceElement\",\n    isAttr: true,\n    isReference: true,\n    type: \"di:DiagramElement\",\n    redefines: \"di:Edge#source\"\n  }, {\n    name: \"targetElement\",\n    isAttr: true,\n    isReference: true,\n    type: \"di:DiagramElement\",\n    redefines: \"di:Edge#target\"\n  }, {\n    name: \"messageVisibleKind\",\n    type: \"MessageVisibleKind\",\n    isAttr: true,\n    \"default\": \"initiating\"\n  }],\n  superClass: [\"di:LabeledEdge\"]\n}, {\n  name: \"BPMNLabel\",\n  properties: [{\n    name: \"labelStyle\",\n    type: \"BPMNLabelStyle\",\n    isAttr: true,\n    isReference: true,\n    redefines: \"di:DiagramElement#style\"\n  }],\n  superClass: [\"di:Label\"]\n}, {\n  name: \"BPMNLabelStyle\",\n  properties: [{\n    name: \"font\",\n    type: \"dc:Font\"\n  }],\n  superClass: [\"di:Style\"]\n}];\nvar enumerations$2 = [{\n  name: \"ParticipantBandKind\",\n  literalValues: [{\n    name: \"top_initiating\"\n  }, {\n    name: \"middle_initiating\"\n  }, {\n    name: \"bottom_initiating\"\n  }, {\n    name: \"top_non_initiating\"\n  }, {\n    name: \"middle_non_initiating\"\n  }, {\n    name: \"bottom_non_initiating\"\n  }]\n}, {\n  name: \"MessageVisibleKind\",\n  literalValues: [{\n    name: \"initiating\"\n  }, {\n    name: \"non_initiating\"\n  }]\n}];\nvar associations$4 = [];\nvar BpmnDiPackage = {\n  name: name$4,\n  uri: uri$4,\n  prefix: prefix$4,\n  types: types$4,\n  enumerations: enumerations$2,\n  associations: associations$4\n};\nvar name$3 = \"DC\";\nvar uri$3 = \"http://www.omg.org/spec/DD/20100524/DC\";\nvar prefix$3 = \"dc\";\nvar types$3 = [{\n  name: \"Boolean\"\n}, {\n  name: \"Integer\"\n}, {\n  name: \"Real\"\n}, {\n  name: \"String\"\n}, {\n  name: \"Font\",\n  properties: [{\n    name: \"name\",\n    type: \"String\",\n    isAttr: true\n  }, {\n    name: \"size\",\n    type: \"Real\",\n    isAttr: true\n  }, {\n    name: \"isBold\",\n    type: \"Boolean\",\n    isAttr: true\n  }, {\n    name: \"isItalic\",\n    type: \"Boolean\",\n    isAttr: true\n  }, {\n    name: \"isUnderline\",\n    type: \"Boolean\",\n    isAttr: true\n  }, {\n    name: \"isStrikeThrough\",\n    type: \"Boolean\",\n    isAttr: true\n  }]\n}, {\n  name: \"Point\",\n  properties: [{\n    name: \"x\",\n    type: \"Real\",\n    \"default\": \"0\",\n    isAttr: true\n  }, {\n    name: \"y\",\n    type: \"Real\",\n    \"default\": \"0\",\n    isAttr: true\n  }]\n}, {\n  name: \"Bounds\",\n  properties: [{\n    name: \"x\",\n    type: \"Real\",\n    \"default\": \"0\",\n    isAttr: true\n  }, {\n    name: \"y\",\n    type: \"Real\",\n    \"default\": \"0\",\n    isAttr: true\n  }, {\n    name: \"width\",\n    type: \"Real\",\n    isAttr: true\n  }, {\n    name: \"height\",\n    type: \"Real\",\n    isAttr: true\n  }]\n}];\nvar associations$3 = [];\nvar DcPackage = {\n  name: name$3,\n  uri: uri$3,\n  prefix: prefix$3,\n  types: types$3,\n  associations: associations$3\n};\nvar name$2 = \"DI\";\nvar uri$2 = \"http://www.omg.org/spec/DD/20100524/DI\";\nvar prefix$2 = \"di\";\nvar types$2 = [{\n  name: \"DiagramElement\",\n  isAbstract: true,\n  properties: [{\n    name: \"id\",\n    isAttr: true,\n    isId: true,\n    type: \"String\"\n  }, {\n    name: \"extension\",\n    type: \"Extension\"\n  }, {\n    name: \"owningDiagram\",\n    type: \"Diagram\",\n    isReadOnly: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"owningElement\",\n    type: \"DiagramElement\",\n    isReadOnly: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"modelElement\",\n    isReadOnly: true,\n    isVirtual: true,\n    isReference: true,\n    type: \"Element\"\n  }, {\n    name: \"style\",\n    type: \"Style\",\n    isReadOnly: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"ownedElement\",\n    type: \"DiagramElement\",\n    isReadOnly: true,\n    isMany: true,\n    isVirtual: true\n  }]\n}, {\n  name: \"Node\",\n  isAbstract: true,\n  superClass: [\"DiagramElement\"]\n}, {\n  name: \"Edge\",\n  isAbstract: true,\n  superClass: [\"DiagramElement\"],\n  properties: [{\n    name: \"source\",\n    type: \"DiagramElement\",\n    isReadOnly: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"target\",\n    type: \"DiagramElement\",\n    isReadOnly: true,\n    isVirtual: true,\n    isReference: true\n  }, {\n    name: \"waypoint\",\n    isUnique: false,\n    isMany: true,\n    type: \"dc:Point\",\n    xml: {\n      serialize: \"xsi:type\"\n    }\n  }]\n}, {\n  name: \"Diagram\",\n  isAbstract: true,\n  properties: [{\n    name: \"id\",\n    isAttr: true,\n    isId: true,\n    type: \"String\"\n  }, {\n    name: \"rootElement\",\n    type: \"DiagramElement\",\n    isReadOnly: true,\n    isVirtual: true\n  }, {\n    name: \"name\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"documentation\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"resolution\",\n    isAttr: true,\n    type: \"Real\"\n  }, {\n    name: \"ownedStyle\",\n    type: \"Style\",\n    isReadOnly: true,\n    isMany: true,\n    isVirtual: true\n  }]\n}, {\n  name: \"Shape\",\n  isAbstract: true,\n  superClass: [\"Node\"],\n  properties: [{\n    name: \"bounds\",\n    type: \"dc:Bounds\"\n  }]\n}, {\n  name: \"Plane\",\n  isAbstract: true,\n  superClass: [\"Node\"],\n  properties: [{\n    name: \"planeElement\",\n    type: \"DiagramElement\",\n    subsettedProperty: \"DiagramElement-ownedElement\",\n    isMany: true\n  }]\n}, {\n  name: \"LabeledEdge\",\n  isAbstract: true,\n  superClass: [\"Edge\"],\n  properties: [{\n    name: \"ownedLabel\",\n    type: \"Label\",\n    isReadOnly: true,\n    subsettedProperty: \"DiagramElement-ownedElement\",\n    isMany: true,\n    isVirtual: true\n  }]\n}, {\n  name: \"LabeledShape\",\n  isAbstract: true,\n  superClass: [\"Shape\"],\n  properties: [{\n    name: \"ownedLabel\",\n    type: \"Label\",\n    isReadOnly: true,\n    subsettedProperty: \"DiagramElement-ownedElement\",\n    isMany: true,\n    isVirtual: true\n  }]\n}, {\n  name: \"Label\",\n  isAbstract: true,\n  superClass: [\"Node\"],\n  properties: [{\n    name: \"bounds\",\n    type: \"dc:Bounds\"\n  }]\n}, {\n  name: \"Style\",\n  isAbstract: true,\n  properties: [{\n    name: \"id\",\n    isAttr: true,\n    isId: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"Extension\",\n  properties: [{\n    name: \"values\",\n    isMany: true,\n    type: \"Element\"\n  }]\n}];\nvar associations$2 = [];\nvar xml = {\n  tagAlias: \"lowerCase\"\n};\nvar DiPackage = {\n  name: name$2,\n  uri: uri$2,\n  prefix: prefix$2,\n  types: types$2,\n  associations: associations$2,\n  xml: xml\n};\nvar name$1 = \"bpmn.io colors for BPMN\";\nvar uri$1 = \"http://bpmn.io/schema/bpmn/biocolor/1.0\";\nvar prefix$1 = \"bioc\";\nvar types$1 = [{\n  name: \"ColoredShape\",\n  \"extends\": [\"bpmndi:BPMNShape\"],\n  properties: [{\n    name: \"stroke\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"fill\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"ColoredEdge\",\n  \"extends\": [\"bpmndi:BPMNEdge\"],\n  properties: [{\n    name: \"stroke\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"fill\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}];\nvar enumerations$1 = [];\nvar associations$1 = [];\nvar BiocPackage = {\n  name: name$1,\n  uri: uri$1,\n  prefix: prefix$1,\n  types: types$1,\n  enumerations: enumerations$1,\n  associations: associations$1\n};\nvar name = \"BPMN in Color\";\nvar uri = \"http://www.omg.org/spec/BPMN/non-normative/color/1.0\";\nvar prefix = \"color\";\nvar types = [{\n  name: \"ColoredLabel\",\n  \"extends\": [\"bpmndi:BPMNLabel\"],\n  properties: [{\n    name: \"color\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"ColoredShape\",\n  \"extends\": [\"bpmndi:BPMNShape\"],\n  properties: [{\n    name: \"background-color\",\n    isAttr: true,\n    type: \"String\"\n  }, {\n    name: \"border-color\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}, {\n  name: \"ColoredEdge\",\n  \"extends\": [\"bpmndi:BPMNEdge\"],\n  properties: [{\n    name: \"border-color\",\n    isAttr: true,\n    type: \"String\"\n  }]\n}];\nvar enumerations = [];\nvar associations = [];\nvar BpmnInColorPackage = {\n  name: name,\n  uri: uri,\n  prefix: prefix,\n  types: types,\n  enumerations: enumerations,\n  associations: associations\n};\nconst packages = {\n  bpmn: BpmnPackage,\n  bpmndi: BpmnDiPackage,\n  dc: DcPackage,\n  di: DiPackage,\n  bioc: BiocPackage,\n  color: BpmnInColorPackage\n};\nfunction SimpleBpmnModdle(additionalPackages, options) {\n  const pks = assign({}, packages, additionalPackages);\n  return new BpmnModdle(pks, options);\n}\nexport { SimpleBpmnModdle as default };","map":{"version":3,"names":["BpmnModdle","packages","options","Moddle","call","prototype","Object","create","fromXML","xmlStr","typeName","isString","reader","Reader","assign","model","lax","rootHandler","handler","toXML","element","writer","Writer","Promise","resolve","reject","result","xml","err","bpmn","BpmnPackage","bpmndi","BpmnDiPackage","dc","DcPackage","di","DiPackage","bioc","BiocPackage","color","BpmnInColorPackage","SimpleBpmnModdle","additionalPackages","pks"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-moddle/lib/bpmn-moddle.js","/home/runner/work/sgex/sgex/node_modules/bpmn-moddle/lib/simple.js"],"sourcesContent":["import {\n  isString,\n  assign\n} from 'min-dash';\n\nimport {\n  Moddle\n} from 'moddle';\n\nimport {\n  Reader,\n  Writer\n} from 'moddle-xml';\n\n\n/**\n * A sub class of {@link Moddle} with support for import and export of BPMN 2.0 xml files.\n *\n * @class BpmnModdle\n * @extends Moddle\n *\n * @param {Object|Array} packages to use for instantiating the model\n * @param {Object} [options] additional options to pass over\n */\nexport default function BpmnModdle(packages, options) {\n  Moddle.call(this, packages, options);\n}\n\nBpmnModdle.prototype = Object.create(Moddle.prototype);\n\n/**\n * The fromXML result.\n *\n * @typedef {Object} ParseResult\n *\n * @property {ModdleElement} rootElement\n * @property {Array<Object>} references\n * @property {Array<Error>} warnings\n * @property {Object} elementsById - a mapping containing each ID -> ModdleElement\n */\n\n/**\n * The fromXML error.\n *\n * @typedef {Error} ParseError\n *\n * @property {Array<Error>} warnings\n */\n\n/**\n * Instantiates a BPMN model tree from a given xml string.\n *\n * @param {String}   xmlStr\n * @param {String}   [typeName='bpmn:Definitions'] name of the root element\n * @param {Object}   [options]  options to pass to the underlying reader\n *\n * @returns {Promise<ParseResult, ParseError>}\n */\nBpmnModdle.prototype.fromXML = function(xmlStr, typeName, options) {\n\n  if (!isString(typeName)) {\n    options = typeName;\n    typeName = 'bpmn:Definitions';\n  }\n\n  var reader = new Reader(assign({ model: this, lax: true }, options));\n  var rootHandler = reader.handler(typeName);\n\n  return reader.fromXML(xmlStr, rootHandler);\n};\n\n\n/**\n * The toXML result.\n *\n * @typedef {Object} SerializationResult\n *\n * @property {String} xml\n */\n\n/**\n * Serializes a BPMN 2.0 object tree to XML.\n *\n * @param {String}   element    the root element, typically an instance of `bpmn:Definitions`\n * @param {Object}   [options]  to pass to the underlying writer\n *\n * @returns {Promise<SerializationResult, Error>}\n */\nBpmnModdle.prototype.toXML = function(element, options) {\n\n  var writer = new Writer(options);\n\n  return new Promise(function(resolve, reject) {\n    try {\n      var result = writer.toXML(element);\n\n      return resolve({\n        xml: result\n      });\n    } catch (err) {\n      return reject(err);\n    }\n  });\n};\n","import {\n  assign\n} from 'min-dash';\n\nimport BpmnModdle from './bpmn-moddle.js';\n\nimport BpmnPackage from '../resources/bpmn/json/bpmn.json' with { type: 'json' };\nimport BpmnDiPackage from '../resources/bpmn/json/bpmndi.json' with { type: 'json' };\nimport DcPackage from '../resources/bpmn/json/dc.json' with { type: 'json' };\nimport DiPackage from '../resources/bpmn/json/di.json' with { type: 'json' };\nimport BiocPackage from '../resources/bpmn-io/json/bioc.json' with { type: 'json' };\nimport BpmnInColorPackage from 'bpmn-in-color-moddle/resources/bpmn-in-color.json' with { type: 'json' };\n\nconst packages = {\n  bpmn: BpmnPackage,\n  bpmndi: BpmnDiPackage,\n  dc: DcPackage,\n  di: DiPackage,\n  bioc: BiocPackage,\n  color: BpmnInColorPackage\n};\n\nexport default function SimpleBpmnModdle(additionalPackages, options) {\n  const pks = assign({}, packages, additionalPackages);\n\n  return new BpmnModdle(pks, options);\n}\n"],"mappings":";;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,UAAUA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACpDC,MAAM,CAACC,IAAI,CAAC,IAAI,EAAEH,QAAQ,EAAEC,OAAO,CAAC;AACtC;AAEAF,UAAU,CAACK,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACJ,MAAM,CAACE,SAAS,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,UAAU,CAACK,SAAS,CAACG,OAAO,GAAG,UAASC,MAAM,EAAEC,QAAQ,EAAER,OAAO,EAAE;EAEjE,IAAI,CAACS,QAAQ,CAACD,QAAQ,CAAC,EAAE;IACvBR,OAAO,GAAGQ,QAAQ;IAClBA,QAAQ,GAAG,kBAAkB;EACjC;EAEE,IAAIE,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAAC;IAAEC,KAAK,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAI,CAAE,EAAEd,OAAO,CAAC,CAAC;EACpE,IAAIe,WAAW,GAAGL,MAAM,CAACM,OAAO,CAACR,QAAQ,CAAC;EAE1C,OAAOE,MAAM,CAACJ,OAAO,CAACC,MAAM,EAAEQ,WAAW,CAAC;AAC5C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,UAAU,CAACK,SAAS,CAACc,KAAK,GAAG,UAASC,OAAO,EAAElB,OAAO,EAAE;EAEtD,IAAImB,MAAM,GAAG,IAAIC,MAAM,CAACpB,OAAO,CAAC;EAEhC,OAAO,IAAIqB,OAAO,CAAC,UAASC,OAAO,EAAEC,MAAM,EAAE;IAC3C,IAAI;MACF,IAAIC,MAAM,GAAGL,MAAM,CAACF,KAAK,CAACC,OAAO,CAAC;MAElC,OAAOI,OAAO,CAAC;QACbG,GAAG,EAAED;MACb,CAAO,CAAC;IACR,CAAK,CAAC,OAAOE,GAAG,EAAE;MACZ,OAAOH,MAAM,CAACG,GAAG,CAAC;IACxf4B,IAAI,EAAEC,WAAW;EACjBC,MAAM,EAAEC,aAAa;EACrBC,EAAE,EAAEC,SAAS;EACbC,EAAE,EAAEC,SAAS;EACbC,IAAI,EAAEC,WAAW;EACjBC,KAAK,EAAEC;AACT,CAAC;AAEc,SAASC,gBAAgBA,CAACC,kBAAkB,EAAExC,OAAO,EAAE;EACpE,MAAMyC,GAAG,GAAG7B,MAAM,CAAC,EAAE,EAAEb,QAAQ,EAAEyC,kBAAkB,CAAC;EAEpD,OAAO,IAAI1C,UAAU,CAAC2C,GAAG,EAAEzC,OAAO,CAAC;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}