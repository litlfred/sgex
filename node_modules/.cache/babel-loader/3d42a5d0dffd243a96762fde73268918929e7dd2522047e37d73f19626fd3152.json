{"ast":null,"code":"import { is } from '../../../util/ModelUtil';\nimport { roundBounds } from 'diagram-js/lib/layout/LayoutUtil';\nimport { hasPrimaryModifier } from 'diagram-js/lib/util/Mouse';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n */\n\nvar SLIGHTLY_HIGHER_PRIORITY = 1001;\n\n/**\n * Invoke {@link Modeling#resizeLane} instead of {@link Modeling#resizeShape}\n * when resizing a lane or participant shape.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function ResizeLaneBehavior(eventBus, modeling) {\n  eventBus.on('resize.start', SLIGHTLY_HIGHER_PRIORITY + 500, function (event) {\n    var context = event.context,\n      shape = context.shape;\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\n      // should we resize the opposite lane(s) in\n      // order to compensate for the resize operation?\n      context.balanced = !hasPrimaryModifier(event);\n    }\n  });\n\n  /**\n   * Intercept resize end and call resize lane function instead.\n   */\n  eventBus.on('resize.end', SLIGHTLY_HIGHER_PRIORITY, function (event) {\n    var context = event.context,\n      shape = context.shape,\n      canExecute = context.canExecute,\n      newBounds = context.newBounds;\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\n      if (canExecute) {\n        // ensure we have actual pixel values for new bounds\n        // (important when zoom level was > 1 during move)\n        newBounds = roundBounds(newBounds);\n\n        // perform the actual resize\n        modeling.resizeLane(shape, newBounds, context.balanced);\n      }\n\n      // stop propagation\n      return false;\n    }\n  });\n}\nResizeLaneBehavior.$inject = ['eventBus', 'modeling'];","map":{"version":3,"names":["is","roundBounds","hasPrimaryModifier","SLIGHTLY_HIGHER_PRIORITY","ResizeLaneBehavior","eventBus","modeling","on","event","context","shape","balanced","canExecute","newBounds","resizeLane","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/ResizeLaneBehavior.js"],"sourcesContent":["import { is } from '../../../util/ModelUtil';\n\nimport {\n  roundBounds\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  hasPrimaryModifier\n} from 'diagram-js/lib/util/Mouse';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n */\n\nvar SLIGHTLY_HIGHER_PRIORITY = 1001;\n\n\n/**\n * Invoke {@link Modeling#resizeLane} instead of {@link Modeling#resizeShape}\n * when resizing a lane or participant shape.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function ResizeLaneBehavior(eventBus, modeling) {\n\n  eventBus.on('resize.start', SLIGHTLY_HIGHER_PRIORITY + 500, function(event) {\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\n\n      // should we resize the opposite lane(s) in\n      // order to compensate for the resize operation?\n      context.balanced = !hasPrimaryModifier(event);\n    }\n  });\n\n  /**\n   * Intercept resize end and call resize lane function instead.\n   */\n  eventBus.on('resize.end', SLIGHTLY_HIGHER_PRIORITY, function(event) {\n    var context = event.context,\n        shape = context.shape,\n        canExecute = context.canExecute,\n        newBounds = context.newBounds;\n\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\n\n      if (canExecute) {\n\n        // ensure we have actual pixel values for new bounds\n        // (important when zoom level was > 1 during move)\n        newBounds = roundBounds(newBounds);\n\n        // perform the actual resize\n        modeling.resizeLane(shape, newBounds, context.balanced);\n      }\n\n      // stop propagation\n      return false;\n    }\n  });\n}\n\nResizeLaneBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,yBAAyB;AAE5C,SACEC,WAAW,QACN,kCAAkC;AAEzC,SACEC,kBAAkB,QACb,2BAA2B;;AAElC;AACA;AACA;AACA;;AAEA,IAAIC,wBAAwB,GAAG,IAAI;;AAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,kBAAkBA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAE7DD,QAAQ,CAACE,EAAE,CAAC,cAAc,EAAEJ,wBAAwB,GAAG,GAAG,EAAE,UAASK,KAAK,EAAE;IAC1E,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;MACvBC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAEzB,IAAIV,EAAE,CAACU,KAAK,EAAE,WAAW,CAAC,IAAIV,EAAE,CAACU,KAAK,EAAE,kBAAkB,CAAC,EAAE;MAE3D;MACA;MACAD,OAAO,CAACE,QAAQ,GAAG,CAACT,kBAAkB,CAACM,KAAK,CAAC;IAC/C;EACF,CAAC,CAAC;;EAEF;AACF;AACA;EACEH,QAAQ,CAACE,EAAE,CAAC,YAAY,EAAEJ,wBAAwB,EAAE,UAASK,KAAK,EAAE;IAClE,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;MACvBC,KAAK,GAAGD,OAAO,CAACC,KAAK;MACrBE,UAAU,GAAGH,OAAO,CAACG,UAAU;MAC/BC,SAAS,GAAGJ,OAAO,CAACI,SAAS;IAEjC,IAAIb,EAAE,CAACU,KAAK,EAAE,WAAW,CAAC,IAAIV,EAAE,CAACU,KAAK,EAAE,kBAAkB,CAAC,EAAE;MAE3D,IAAIE,UAAU,EAAE;QAEd;QACA;QACAC,SAAS,GAAGZ,WAAW,CAACY,SAAS,CAAC;;QAElC;QACAP,QAAQ,CAACQ,UAAU,CAACJ,KAAK,EAAEG,SAAS,EAAEJ,OAAO,CAACE,QAAQ,CAAC;MACzD;;MAEA;MACA,OAAO,KAAK;IACd;EACF,CAAC,CAAC;AACJ;AAEAP,kBAAkB,CAACW,OAAO,GAAG,CAC3B,UAAU,EACV,UAAU,CACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}