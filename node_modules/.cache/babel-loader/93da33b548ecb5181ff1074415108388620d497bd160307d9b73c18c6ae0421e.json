{"ast":null,"code":"function createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\nvar hat_1 = createCommonjsModule(function (module) {\n  var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n      digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    var rem = digits - Math.floor(digits);\n    var res = '';\n    for (var i = 0; i < Math.floor(digits); i++) {\n      var x = Math.floor(Math.random() * base).toString(base);\n      res = x + res;\n    }\n    if (rem) {\n      var b = Math.pow(base, rem);\n      var x = Math.floor(Math.random() * b).toString(base);\n      res = x + res;\n    }\n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n      return hat(bits, base);\n    } else return res;\n  };\n  hat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n      var iters = 0;\n      do {\n        if (iters++ > 10) {\n          if (expandBy) bits += expandBy;else throw new Error('too many ID collisions, use more bits');\n        }\n        var id = hat(bits, base);\n      } while (Object.hasOwnProperty.call(hats, id));\n      hats[id] = data;\n      return id;\n    };\n    var hats = fn.hats = {};\n    fn.get = function (id) {\n      return fn.hats[id];\n    };\n    fn.set = function (id, value) {\n      fn.hats[id] = value;\n      return fn;\n    };\n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n  };\n});\n\n/**\n * Create a new id generator / cache instance.\n *\n * You may optionally provide a seed that is used internally.\n *\n * @param {Seed} seed\n */\nfunction Ids(seed) {\n  if (!(this instanceof Ids)) {\n    return new Ids(seed);\n  }\n  seed = seed || [128, 36, 1];\n  this._seed = seed.length ? hat_1.rack(seed[0], seed[1], seed[2]) : seed;\n}\n\n/**\n * Generate a next id.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\nIds.prototype.next = function (element) {\n  return this._seed(element || true);\n};\n\n/**\n * Generate a next id with a given prefix.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\nIds.prototype.nextPrefixed = function (prefix, element) {\n  var id;\n  do {\n    id = prefix + this.next(true);\n  } while (this.assigned(id));\n\n  // claim {prefix}{random}\n  this.claim(id, element);\n\n  // return\n  return id;\n};\n\n/**\n * Manually claim an existing id.\n *\n * @param {String} id\n * @param {String} [element] element the id is claimed by\n */\nIds.prototype.claim = function (id, element) {\n  this._seed.set(id, element || true);\n};\n\n/**\n * Returns true if the given id has already been assigned.\n *\n * @param  {String} id\n * @return {Boolean}\n */\nIds.prototype.assigned = function (id) {\n  return this._seed.get(id) || false;\n};\n\n/**\n * Unclaim an id.\n *\n * @param  {String} id the id to unclaim\n */\nIds.prototype.unclaim = function (id) {\n  delete this._seed.hats[id];\n};\n\n/**\n * Clear all claimed ids.\n */\nIds.prototype.clear = function () {\n  var hats = this._seed.hats,\n    id;\n  for (id in hats) {\n    this.unclaim(id);\n  }\n};\nexport default Ids;","map":{"version":3,"names":["hat","module","exports","bits","base","undefined","digits","Math","log","pow","i","Infinity","rem","floor","res","x","random","toString","b","parsed","parseInt","rack","expandBy","fn","data","iters","Error","id","Object","hasOwnProperty","call","hats","get","set","value","Ids","seed","_seed","length","hat_1","prototype","next","element","nextPrefixed","prefix","assigned","claim","unclaim","clear"],"sources":["/home/runner/work/sgex/sgex/node_modules/ids/node_modules/hat/index.js","/home/runner/work/sgex/sgex/node_modules/ids/index.js"],"sourcesContent":["var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n","import hat from 'hat';\n\n\n/**\n * Create a new id generator / cache instance.\n *\n * You may optionally provide a seed that is used internally.\n *\n * @param {Seed} seed\n */\nexport default function Ids(seed) {\n\n  if (!(this instanceof Ids)) {\n    return new Ids(seed);\n  }\n\n  seed = seed || [ 128, 36, 1 ];\n  this._seed = seed.length ? hat.rack(seed[0], seed[1], seed[2]) : seed;\n}\n\n/**\n * Generate a next id.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\nIds.prototype.next = function(element) {\n  return this._seed(element || true);\n};\n\n/**\n * Generate a next id with a given prefix.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\nIds.prototype.nextPrefixed = function(prefix, element) {\n  var id;\n\n  do {\n    id = prefix + this.next(true);\n  } while (this.assigned(id));\n\n  // claim {prefix}{random}\n  this.claim(id, element);\n\n  // return\n  return id;\n};\n\n/**\n * Manually claim an existing id.\n *\n * @param {String} id\n * @param {String} [element] element the id is claimed by\n */\nIds.prototype.claim = function(id, element) {\n  this._seed.set(id, element || true);\n};\n\n/**\n * Returns true if the given id has already been assigned.\n *\n * @param  {String} id\n * @return {Boolean}\n */\nIds.prototype.assigned = function(id) {\n  return this._seed.get(id) || false;\n};\n\n/**\n * Unclaim an id.\n *\n * @param  {String} id the id to unclaim\n */\nIds.prototype.unclaim = function(id) {\n  delete this._seed.hats[id];\n};\n\n\n/**\n * Clear all claimed ids.\n */\nIds.prototype.clear = function() {\n\n  var hats = this._seed.hats,\n      id;\n\n  for (id in hats) {\n    this.unclaim(id);\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}