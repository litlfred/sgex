{"ast":null,"code":"import { assign } from 'min-dash';\nimport { getClosure } from '../../../../util/Elements';\n\n/**\n * @typedef {import('../../../../model/Types').Connection} Connection\n * @typedef {import('../../../../model/Types').Element} Element\n * @typedef {import('../../../../model/Types').Shape} Shape\n */\n\nexport default function MoveClosure() {\n  /**\n   * @type {Record<string, Shape>}\n   */\n  this.allShapes = {};\n\n  /**\n   * @type {Record<string, Connection>}\n   */\n  this.allConnections = {};\n\n  /**\n   * @type {Record<string, Element>}\n   */\n  this.enclosedElements = {};\n\n  /**\n   * @type {Record<string, Connection>}\n   */\n  this.enclosedConnections = {};\n\n  /**\n   * @type {Record<string, Element>}\n   */\n  this.topLevel = {};\n}\n\n/**\n * @param {Element} element\n * @param {boolean} [isTopLevel]\n *\n * @return {MoveClosure}\n */\nMoveClosure.prototype.add = function (element, isTopLevel) {\n  return this.addAll([element], isTopLevel);\n};\n\n/**\n * @param {Element[]} elements\n * @param {boolean} [isTopLevel]\n *\n * @return {MoveClosure}\n */\nMoveClosure.prototype.addAll = function (elements, isTopLevel) {\n  var newClosure = getClosure(elements, !!isTopLevel, this);\n  assign(this, newClosure);\n  return this;\n};","map":{"version":3,"names":["assign","getClosure","MoveClosure","allShapes","allConnections","enclosedElements","enclosedConnections","topLevel","prototype","add","element","isTopLevel","addAll","elements","newClosure"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/modeling/cmd/helper/MoveClosure.js"],"sourcesContent":["import {\n  assign\n} from 'min-dash';\n\nimport {\n  getClosure\n} from '../../../../util/Elements';\n\n/**\n * @typedef {import('../../../../model/Types').Connection} Connection\n * @typedef {import('../../../../model/Types').Element} Element\n * @typedef {import('../../../../model/Types').Shape} Shape\n */\n\nexport default function MoveClosure() {\n\n  /**\n   * @type {Record<string, Shape>}\n   */\n  this.allShapes = {};\n\n  /**\n   * @type {Record<string, Connection>}\n   */\n  this.allConnections = {};\n\n  /**\n   * @type {Record<string, Element>}\n   */\n  this.enclosedElements = {};\n\n  /**\n   * @type {Record<string, Connection>}\n   */\n  this.enclosedConnections = {};\n\n  /**\n   * @type {Record<string, Element>}\n   */\n  this.topLevel = {};\n}\n\n/**\n * @param {Element} element\n * @param {boolean} [isTopLevel]\n *\n * @return {MoveClosure}\n */\nMoveClosure.prototype.add = function(element, isTopLevel) {\n  return this.addAll([ element ], isTopLevel);\n};\n\n/**\n * @param {Element[]} elements\n * @param {boolean} [isTopLevel]\n *\n * @return {MoveClosure}\n */\nMoveClosure.prototype.addAll = function(elements, isTopLevel) {\n\n  var newClosure = getClosure(elements, !!isTopLevel, this);\n\n  assign(this, newClosure);\n\n  return this;\n};"],"mappings":"AAAA,SACEA,MAAM,QACD,UAAU;AAEjB,SACEC,UAAU,QACL,2BAA2B;;AAElC;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,WAAWA,CAAA,EAAG;EAEpC;AACF;AACA;EACE,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;;EAEnB;AACF;AACA;EACE,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;;EAExB;AACF;AACA;EACE,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;;EAE1B;AACF;AACA;EACE,IAAI,CAACC,mBAAmB,GAAG,CAAC,CAAC;;EAE7B;AACF;AACA;EACE,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAL,WAAW,CAACM,SAAS,CAACC,GAAG,GAAG,UAASC,OAAO,EAAEC,UAAU,EAAE;EACxD,OAAO,IAAI,CAACC,MAAM,CAAC,CAAEF,OAAO,CAAE,EAAEC,UAAU,CAAC;AAC7C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAT,WAAW,CAACM,SAAS,CAACI,MAAM,GAAG,UAASC,QAAQ,EAAEF,UAAU,EAAE;EAE5D,IAAIG,UAAU,GAAGb,UAAU,CAACY,QAAQ,EAAE,CAAC,CAACF,UAAU,EAAE,IAAI,CAAC;EAEzDX,MAAM,CAAC,IAAI,EAAEc,UAAU,CAAC;EAExB,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}