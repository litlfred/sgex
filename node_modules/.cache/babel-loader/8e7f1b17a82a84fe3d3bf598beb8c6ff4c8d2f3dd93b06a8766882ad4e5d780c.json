{"ast":null,"code":"import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport inherits from 'inherits-browser';\nimport { escapeCSS as cssEscape } from 'diagram-js/lib/util/EscapeUtil';\nimport { assign, forEach } from 'min-dash';\nimport { query as domQuery } from 'min-dom';\nimport { attr as svgAttr } from 'tiny-svg';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('diagram-js/lib/core/ElementRegistry').default} ElementRegistry\n * @typedef {import('diagram-js/lib/core/ElementFactory').default} ElementFactory\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\n * @typedef {import('diagram-js/lib/features/preview-support/PreviewSupport').default} PreviewSupport\n */\n\nvar LOW_PRIORITY = 250;\n\n/**\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {ElementFactory} elementFactory\n * @param {Canvas} canvas\n * @param {PreviewSupport} previewSupport\n */\nexport default function BpmnReplacePreview(eventBus, elementRegistry, elementFactory, canvas, previewSupport) {\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Replace the visuals of all elements in the context which can be replaced\n   *\n   * @param  {Object} context\n   */\n  function replaceVisual(context) {\n    var replacements = context.canExecute.replacements;\n    forEach(replacements, function (replacement) {\n      var id = replacement.oldElementId;\n      var newElement = {\n        type: replacement.newElementType\n      };\n\n      // if the visual of the element is already replaced\n      if (context.visualReplacements[id]) {\n        return;\n      }\n      var element = elementRegistry.get(id);\n      assign(newElement, {\n        x: element.x,\n        y: element.y\n      });\n\n      // create a temporary shape\n      var tempShape = elementFactory.createShape(newElement);\n      canvas.addShape(tempShape, element.parent);\n\n      // select the original SVG element related to the element and hide it\n      var gfx = domQuery('[data-element-id=\"' + cssEscape(element.id) + '\"]', context.dragGroup);\n      if (gfx) {\n        svgAttr(gfx, {\n          display: 'none'\n        });\n      }\n\n      // clone the gfx of the temporary shape and add it to the drag group\n      var dragger = previewSupport.addDragger(tempShape, context.dragGroup);\n      context.visualReplacements[id] = dragger;\n      canvas.removeShape(tempShape);\n    });\n  }\n\n  /**\n   * Restore the original visuals of the previously replaced elements\n   *\n   * @param  {Object} context\n   */\n  function restoreVisual(context) {\n    var visualReplacements = context.visualReplacements;\n    forEach(visualReplacements, function (dragger, id) {\n      var originalGfx = domQuery('[data-element-id=\"' + cssEscape(id) + '\"]', context.dragGroup);\n      if (originalGfx) {\n        svgAttr(originalGfx, {\n          display: 'inline'\n        });\n      }\n      dragger.remove();\n      if (visualReplacements[id]) {\n        delete visualReplacements[id];\n      }\n    });\n  }\n  eventBus.on('shape.move.move', LOW_PRIORITY, function (event) {\n    var context = event.context,\n      canExecute = context.canExecute;\n    if (!context.visualReplacements) {\n      context.visualReplacements = {};\n    }\n    if (canExecute && canExecute.replacements) {\n      replaceVisual(context);\n    } else {\n      restoreVisual(context);\n    }\n  });\n}\nBpmnReplacePreview.$inject = ['eventBus', 'elementRegistry', 'elementFactory', 'canvas', 'previewSupport'];\ninherits(BpmnReplacePreview, CommandInterceptor);","map":{"version":3,"names":["CommandInterceptor","inherits","escapeCSS","cssEscape","assign","forEach","query","domQuery","attr","svgAttr","LOW_PRIORITY","BpmnReplacePreview","eventBus","elementRegistry","elementFactory","canvas","previewSupport","call","replaceVisual","context","replacements","canExecute","replacement","id","oldElementId","newElement","type","newElementType","visualReplacements","element","get","x","y","tempShape","createShape","addShape","parent","gfx","dragGroup","display","dragger","addDragger","removeShape","restoreVisual","originalGfx","remove","on","event","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/replace-preview/BpmnReplacePreview.js"],"sourcesContent":["import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport inherits from 'inherits-browser';\n\nimport { escapeCSS as cssEscape } from 'diagram-js/lib/util/EscapeUtil';\n\nimport {\n  assign,\n  forEach\n} from 'min-dash';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  attr as svgAttr\n} from 'tiny-svg';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('diagram-js/lib/core/ElementRegistry').default} ElementRegistry\n * @typedef {import('diagram-js/lib/core/ElementFactory').default} ElementFactory\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\n * @typedef {import('diagram-js/lib/features/preview-support/PreviewSupport').default} PreviewSupport\n */\n\nvar LOW_PRIORITY = 250;\n\n/**\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {ElementFactory} elementFactory\n * @param {Canvas} canvas\n * @param {PreviewSupport} previewSupport\n */\nexport default function BpmnReplacePreview(\n    eventBus, elementRegistry, elementFactory,\n    canvas, previewSupport) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Replace the visuals of all elements in the context which can be replaced\n   *\n   * @param  {Object} context\n   */\n  function replaceVisual(context) {\n\n    var replacements = context.canExecute.replacements;\n\n    forEach(replacements, function(replacement) {\n\n      var id = replacement.oldElementId;\n\n      var newElement = {\n        type: replacement.newElementType\n      };\n\n      // if the visual of the element is already replaced\n      if (context.visualReplacements[id]) {\n        return;\n      }\n\n      var element = elementRegistry.get(id);\n\n      assign(newElement, { x: element.x, y: element.y });\n\n      // create a temporary shape\n      var tempShape = elementFactory.createShape(newElement);\n\n      canvas.addShape(tempShape, element.parent);\n\n      // select the original SVG element related to the element and hide it\n      var gfx = domQuery('[data-element-id=\"' + cssEscape(element.id) + '\"]', context.dragGroup);\n\n      if (gfx) {\n        svgAttr(gfx, { display: 'none' });\n      }\n\n      // clone the gfx of the temporary shape and add it to the drag group\n      var dragger = previewSupport.addDragger(tempShape, context.dragGroup);\n\n      context.visualReplacements[id] = dragger;\n\n      canvas.removeShape(tempShape);\n    });\n  }\n\n  /**\n   * Restore the original visuals of the previously replaced elements\n   *\n   * @param  {Object} context\n   */\n  function restoreVisual(context) {\n\n    var visualReplacements = context.visualReplacements;\n\n    forEach(visualReplacements, function(dragger, id) {\n\n      var originalGfx = domQuery('[data-element-id=\"' + cssEscape(id) + '\"]', context.dragGroup);\n\n      if (originalGfx) {\n        svgAttr(originalGfx, { display: 'inline' });\n      }\n\n      dragger.remove();\n\n      if (visualReplacements[id]) {\n        delete visualReplacements[id];\n      }\n    });\n  }\n\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        canExecute = context.canExecute;\n\n    if (!context.visualReplacements) {\n      context.visualReplacements = {};\n    }\n\n    if (canExecute && canExecute.replacements) {\n      replaceVisual(context);\n    } else {\n      restoreVisual(context);\n    }\n  });\n}\n\nBpmnReplacePreview.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'elementFactory',\n  'canvas',\n  'previewSupport'\n];\n\ninherits(BpmnReplacePreview, CommandInterceptor);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}