{"ast":null,"code":"/**\n * SUSHI WebAssembly Service\n * \n * This service manages the loading and execution of SUSHI via WebAssembly.\n * It provides a bridge between the React application and the WASM module.\n * Optimized for memory efficiency and browser stability.\n */class VirtualFileSystem{constructor(){this.files=new Map();this.directories=new Set();this.maxMemoryUsage=20*1024*1024;// Reduced to 20MB limit\nthis.currentMemoryUsage=0;}writeFile(path,content){// Normalize path\nconst normalizedPath=path.startsWith('/')?path.substring(1):path;// Check memory limits\nconst contentSize=new TextEncoder().encode(content).length;if(this.currentMemoryUsage+contentSize>this.maxMemoryUsage){throw new Error(`Memory limit exceeded. Cannot store file ${normalizedPath} (${(contentSize/1024/1024).toFixed(1)}MB)`);}// Ensure parent directories exist\nconst pathParts=normalizedPath.split('/');for(let i=0;i<pathParts.length-1;i++){const dirPath=pathParts.slice(0,i+1).join('/');this.directories.add(dirPath);}// Store file content as Uint8Array for WASM compatibility\nconst encoder=new TextEncoder();const data=encoder.encode(content);// Remove old file if exists to update memory usage\nif(this.files.has(normalizedPath)){const oldData=this.files.get(normalizedPath);this.currentMemoryUsage-=oldData.length;}this.files.set(normalizedPath,data);this.currentMemoryUsage+=data.length;return true;}readFile(path){const normalizedPath=path.startsWith('/')?path.substring(1):path;const data=this.files.get(normalizedPath);if(!data){return null;}// Convert back to string for JavaScript consumption\nconst decoder=new TextDecoder();return decoder.decode(data);}exists(path){const normalizedPath=path.startsWith('/')?path.substring(1):path;return this.files.has(normalizedPath)||this.directories.has(normalizedPath);}listDirectory(path){const normalizedPath=path.startsWith('/')?path.substring(1):path;const prefix=normalizedPath?`${normalizedPath}/`:'';const items=[];// Add files\nfor(const filePath of this.files.keys()){if(filePath.startsWith(prefix)){const relativePath=filePath.substring(prefix.length);if(!relativePath.includes('/')){// Direct child only\nitems.push({name:relativePath,type:'file',path:filePath});}}}// Add directories\nfor(const dirPath of this.directories){if(dirPath.startsWith(prefix)){const relativePath=dirPath.substring(prefix.length);if(!relativePath.includes('/')){// Direct child only\nitems.push({name:relativePath,type:'directory',path:dirPath});}}}return items;}clear(){this.files.clear();this.directories.clear();this.currentMemoryUsage=0;}getMemoryUsage(){return{used:this.currentMemoryUsage,limit:this.maxMemoryUsage,percentage:this.currentMemoryUsage/this.maxMemoryUsage*100};}}class SushiWASMRunner{constructor(){this.wasmModule=null;this.fs=new VirtualFileSystem();this.isInitialized=false;this.initializationPromise=null;}async initialize(){if(this.isInitialized){return this.wasmModule;}if(this.initializationPromise){return this.initializationPromise;}this.initializationPromise=this._loadWasmModule();return this.initializationPromise;}async _loadWasmModule(){try{// For now, we'll create a fallback implementation that uses the existing fsh-sushi\n// dependency but in a browser-compatible way. This is a stepping stone to full WASM.\n// Import the SUSHI library dynamically to avoid build issues\nconst sushiModule=await this._importSushiLibrary();this.wasmModule=sushiModule;this.isInitialized=true;return this.wasmModule;}catch(error){console.error('Failed to load SUSHI WASM module:',error);throw new Error(`SUSHI WASM initialization failed: ${error.message}`);}}async _importSushiLibrary(){// This is a bridge implementation that provides a WASM-like interface\n// for future migration. For now, we avoid direct fsh-sushi imports\n// due to Node.js dependency conflicts in browser environment.\nconsole.log('Creating fallback SUSHI implementation for browser environment');// Return a mock implementation with WASM-style interface\nreturn{ccall:this._createFallbackCCall.bind(this),FS:{writeFile:this.fs.writeFile.bind(this.fs),readFile:this.fs.readFile.bind(this.fs),exists:this.fs.exists.bind(this.fs)}};}_createFallbackCCall(){return(functionName,returnType,paramTypes,params)=>{if(functionName==='runSushi'){return this._runFallbackCompilation(params[0]);}throw new Error(`Unsupported WASM function: ${functionName}`);};}async _runFallbackCompilation(workspacePath){// Fallback implementation using the existing custom FSH parser\n// This maintains the current functionality while providing WASM interface\nconst outputFiles=[];const errors=[];const warnings=[];try{const fshFiles=this._getAllFshFiles();const configContent=this.fs.readFile('sushi-config.yaml');let config={name:'browser-generated-ig',version:'1.0.0',fhirVersion:'4.0.1',canonical:'http://example.org/fhir/ig/browser-generated'};if(configContent){try{const yaml=await import('js-yaml');config=yaml.default.load(configContent);}catch(err){warnings.push(`Failed to parse sushi-config.yaml: ${err.message}`);}}else{warnings.push('No sushi-config.yaml found, using default configuration');}// Use the existing FSH parsing logic from SushiRunner\nfor(const{content}of fshFiles){const definitions=this._extractFSHDefinitions(content);// Generate FHIR resources using the same logic as the current implementation\nconst resources=this._generateFHIRResources(definitions,config);outputFiles.push(...resources);}// Return object directly instead of JSON string to avoid parsing issues\nreturn{success:true,files:outputFiles,errors:errors,warnings:warnings};}catch(error){return{success:false,files:[],errors:[error.message],warnings:warnings};}}_getAllFshFiles(){var _this=this;const fshFiles=[];// Recursively collect all .fsh files\nconst collectFiles=function(){let path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';const items=_this.fs.listDirectory(path);for(const item of items){if(item.type==='file'&&item.name.endsWith('.fsh')){const content=_this.fs.readFile(item.path);if(content){fshFiles.push({path:item.path,content:content});}}else if(item.type==='directory'){collectFiles(item.path);}}};collectFiles('input/fsh');return fshFiles;}_extractFSHDefinitions(content){// Reuse the existing FSH parsing logic from SushiRunner\nconst definitions={profiles:[],instances:[],valueSets:[],codeSystems:[],extensions:[]};const lines=content.split('\\n');let currentDefinition=null;let currentType=null;for(let i=0;i<lines.length;i++){const line=lines[i].trim();// Detect definition types\nif(line.startsWith('Profile:')){currentType='profiles';currentDefinition={name:line.substring(8).trim(),type:'Profile',parent:null,id:null,title:null,description:null,rules:[]};}else if(line.startsWith('Instance:')){currentType='instances';currentDefinition={name:line.substring(9).trim(),type:'Instance',instanceOf:null,usage:null,title:null,description:null,rules:[]};}else if(line.startsWith('ValueSet:')){currentType='valueSets';currentDefinition={name:line.substring(9).trim(),type:'ValueSet',id:null,title:null,description:null,rules:[]};}else if(line.startsWith('CodeSystem:')){currentType='codeSystems';currentDefinition={name:line.substring(11).trim(),type:'CodeSystem',id:null,title:null,description:null,rules:[]};}else if(line.startsWith('Extension:')){currentType='extensions';currentDefinition={name:line.substring(10).trim(),type:'Extension',id:null,title:null,description:null,rules:[]};}// Parse properties\nif(currentDefinition){if(line.startsWith('Parent:')){currentDefinition.parent=line.substring(7).trim();}else if(line.startsWith('InstanceOf:')){currentDefinition.instanceOf=line.substring(11).trim();}else if(line.startsWith('Usage:')){currentDefinition.usage=line.substring(6).trim();}else if(line.startsWith('Id:')){currentDefinition.id=line.substring(3).trim();}else if(line.startsWith('Title:')){currentDefinition.title=line.substring(6).trim().replace(/['\"]/g,'');}else if(line.startsWith('Description:')){currentDefinition.description=line.substring(12).trim().replace(/['\"]/g,'');}else if(line.startsWith('* ')){currentDefinition.rules.push(line.substring(2).trim());}// If we hit a new definition or end of content, save current one\nif(line.includes(':')&&!line.startsWith('* ')&&!line.startsWith('Parent:')&&!line.startsWith('InstanceOf:')&&!line.startsWith('Usage:')&&!line.startsWith('Id:')&&!line.startsWith('Title:')&&!line.startsWith('Description:')||i===lines.length-1){if(currentDefinition&&currentType&&currentDefinition.name){definitions[currentType].push(currentDefinition);}currentDefinition=null;currentType=null;i--;// Re-process this line for the new definition\n}}}return definitions;}_generateFHIRResources(definitions,config){const resources=[];// Generate StructureDefinitions from profiles\ndefinitions.profiles.forEach(profile=>{const profileId=profile.id||profile.name.toLowerCase().replace(/\\s+/g,'-');const structureDefinition={resourceType:'StructureDefinition',id:profileId,url:`${config.canonical}/StructureDefinition/${profileId}`,name:profile.name,title:profile.title||profile.name,status:'draft',fhirVersion:config.fhirVersion||'4.0.1',kind:'resource',abstract:false,type:profile.parent==='Patient'?'Patient':profile.parent==='Observation'?'Observation':profile.parent||'DomainResource',baseDefinition:`http://hl7.org/fhir/StructureDefinition/${profile.parent||'DomainResource'}`,derivation:'constraint',description:profile.description||`Profile for ${profile.name}`};if(profile.rules.length>0){structureDefinition.differential={element:profile.rules.map((rule,index)=>({id:`${structureDefinition.type}.${rule.split(' ')[0]}`,path:`${structureDefinition.type}.${rule.split(' ')[0]}`,short:`Rule: ${rule}`}))};}resources.push({path:`StructureDefinition-${profileId}.json`,content:JSON.stringify(structureDefinition,null,2),resourceType:'StructureDefinition'});});// Generate instances\ndefinitions.instances.forEach(instance=>{const instanceId=instance.name.toLowerCase().replace(/\\s+/g,'-');const resourceType=instance.instanceOf==='Patient'?'Patient':instance.instanceOf==='Observation'?'Observation':'Patient';// Default fallback\nconst fhirInstance={resourceType:resourceType,id:instanceId,meta:{profile:instance.instanceOf?[`${config.canonical}/StructureDefinition/${instance.instanceOf}`]:undefined}};// Add basic properties based on resource type\nif(resourceType==='Patient'){fhirInstance.name=[{family:instance.name.split(' ').pop(),given:instance.name.split(' ').slice(0,-1)}];}resources.push({path:`${instanceId}.json`,content:JSON.stringify(fhirInstance,null,2),resourceType:resourceType});});// Generate ValueSets\ndefinitions.valueSets.forEach(vs=>{const vsId=vs.id||vs.name.toLowerCase().replace(/\\s+/g,'-');const valueSet={resourceType:'ValueSet',id:vsId,url:`${config.canonical}/ValueSet/${vsId}`,name:vs.name,title:vs.title||vs.name,status:'draft',description:vs.description||`ValueSet for ${vs.name}`,compose:{include:[{system:'http://example.org/codes',concept:[{code:'example1',display:'Example Code 1'},{code:'example2',display:'Example Code 2'}]}]}};resources.push({path:`ValueSet-${vsId}.json`,content:JSON.stringify(valueSet,null,2),resourceType:'ValueSet'});});// Generate CodeSystems\ndefinitions.codeSystems.forEach(cs=>{const csId=cs.id||cs.name.toLowerCase().replace(/\\s+/g,'-');const codeSystem={resourceType:'CodeSystem',id:csId,url:`${config.canonical}/CodeSystem/${csId}`,name:cs.name,title:cs.title||cs.name,status:'draft',content:'complete',description:cs.description||`CodeSystem for ${cs.name}`,concept:[{code:'concept1',display:'Concept 1'},{code:'concept2',display:'Concept 2'}]};resources.push({path:`CodeSystem-${csId}.json`,content:JSON.stringify(codeSystem,null,2),resourceType:'CodeSystem'});});return resources;}async runSushi(config,fshFiles){if(!this.isInitialized){await this.initialize();}// Clear previous files and check memory\nthis.fs.clear();// Check total size of input files\nconst totalSize=fshFiles.reduce((sum,file)=>{var _file$content;return sum+(((_file$content=file.content)===null||_file$content===void 0?void 0:_file$content.length)||0);},0);if(totalSize>15*1024*1024){// Reduced to 15MB limit\nthrow new Error(`Input files too large (${(totalSize/1024/1024).toFixed(1)}MB). Consider processing fewer files at once.`);}try{// Write configuration\nif(config){const configYaml=typeof config==='string'?config:(await import('js-yaml')).default.dump(config);this.fs.writeFile('sushi-config.yaml',configYaml);}// Write FSH files with size validation\nfor(const file of fshFiles){const filePath=file.path||`input/fsh/${file.name}`;// Skip very large files to prevent crashes\nif(file.content&&file.content.length>2*1024*1024){// Reduced to 2MB per file\nconsole.warn(`Skipping large file ${file.name} (${(file.content.length/1024/1024).toFixed(1)}MB)`);continue;}this.fs.writeFile(filePath,file.content||'');}// Execute SUSHI via WASM interface\nconst result=this.wasmModule.ccall('runSushi',// Function name\n'string',// Return type\n['string'],// Parameter types\n['/workspace']// Parameters\n);// Handle both JSON string and object returns\nif(typeof result==='string'){return JSON.parse(result);}else{return result;// Already an object\n}}catch(error){// Clear memory on error\nthis.fs.clear();throw error;}}}// Singleton instance\nconst sushiWasmService=new SushiWASMRunner();export default sushiWasmService;","map":{"version":3,"names":["VirtualFileSystem","constructor","files","Map","directories","Set","maxMemoryUsage","currentMemoryUsage","writeFile","path","content","normalizedPath","startsWith","substring","contentSize","TextEncoder","encode","length","Error","toFixed","pathParts","split","i","dirPath","slice","join","add","encoder","data","has","oldData","get","set","readFile","decoder","TextDecoder","decode","exists","listDirectory","prefix","items","filePath","keys","relativePath","includes","push","name","type","clear","getMemoryUsage","used","limit","percentage","SushiWASMRunner","wasmModule","fs","isInitialized","initializationPromise","initialize","_loadWasmModule","sushiModule","_importSushiLibrary","error","console","message","log","ccall","_createFallbackCCall","bind","FS","functionName","returnType","paramTypes","params","_runFallbackCompilation","workspacePath","outputFiles","errors","warnings","fshFiles","_getAllFshFiles","configContent","config","version","fhirVersion","canonical","yaml","default","load","err","definitions","_extractFSHDefinitions","resources","_generateFHIRResources","success","_this","collectFiles","arguments","undefined","item","endsWith","profiles","instances","valueSets","codeSystems","extensions","lines","currentDefinition","currentType","line","trim","parent","id","title","description","rules","instanceOf","usage","replace","forEach","profile","profileId","toLowerCase","structureDefinition","resourceType","url","status","kind","abstract","baseDefinition","derivation","differential","element","map","rule","index","short","JSON","stringify","instance","instanceId","fhirInstance","meta","family","pop","given","vs","vsId","valueSet","compose","include","system","concept","code","display","cs","csId","codeSystem","runSushi","totalSize","reduce","sum","file","_file$content","configYaml","dump","warn","result","parse","sushiWasmService"],"sources":["/home/runner/work/sgex/sgex/src/services/sushiWasmService.js"],"sourcesContent":["/**\n * SUSHI WebAssembly Service\n * \n * This service manages the loading and execution of SUSHI via WebAssembly.\n * It provides a bridge between the React application and the WASM module.\n * Optimized for memory efficiency and browser stability.\n */\n\nclass VirtualFileSystem {\n  constructor() {\n    this.files = new Map();\n    this.directories = new Set();\n    this.maxMemoryUsage = 20 * 1024 * 1024; // Reduced to 20MB limit\n    this.currentMemoryUsage = 0;\n  }\n\n  writeFile(path, content) {\n    // Normalize path\n    const normalizedPath = path.startsWith('/') ? path.substring(1) : path;\n    \n    // Check memory limits\n    const contentSize = new TextEncoder().encode(content).length;\n    if (this.currentMemoryUsage + contentSize > this.maxMemoryUsage) {\n      throw new Error(`Memory limit exceeded. Cannot store file ${normalizedPath} (${(contentSize / 1024 / 1024).toFixed(1)}MB)`);\n    }\n    \n    // Ensure parent directories exist\n    const pathParts = normalizedPath.split('/');\n    for (let i = 0; i < pathParts.length - 1; i++) {\n      const dirPath = pathParts.slice(0, i + 1).join('/');\n      this.directories.add(dirPath);\n    }\n    \n    // Store file content as Uint8Array for WASM compatibility\n    const encoder = new TextEncoder();\n    const data = encoder.encode(content);\n    \n    // Remove old file if exists to update memory usage\n    if (this.files.has(normalizedPath)) {\n      const oldData = this.files.get(normalizedPath);\n      this.currentMemoryUsage -= oldData.length;\n    }\n    \n    this.files.set(normalizedPath, data);\n    this.currentMemoryUsage += data.length;\n    \n    return true;\n  }\n\n  readFile(path) {\n    const normalizedPath = path.startsWith('/') ? path.substring(1) : path;\n    const data = this.files.get(normalizedPath);\n    \n    if (!data) {\n      return null;\n    }\n    \n    // Convert back to string for JavaScript consumption\n    const decoder = new TextDecoder();\n    return decoder.decode(data);\n  }\n\n  exists(path) {\n    const normalizedPath = path.startsWith('/') ? path.substring(1) : path;\n    return this.files.has(normalizedPath) || this.directories.has(normalizedPath);\n  }\n\n  listDirectory(path) {\n    const normalizedPath = path.startsWith('/') ? path.substring(1) : path;\n    const prefix = normalizedPath ? `${normalizedPath}/` : '';\n    \n    const items = [];\n    \n    // Add files\n    for (const filePath of this.files.keys()) {\n      if (filePath.startsWith(prefix)) {\n        const relativePath = filePath.substring(prefix.length);\n        if (!relativePath.includes('/')) { // Direct child only\n          items.push({\n            name: relativePath,\n            type: 'file',\n            path: filePath\n          });\n        }\n      }\n    }\n    \n    // Add directories\n    for (const dirPath of this.directories) {\n      if (dirPath.startsWith(prefix)) {\n        const relativePath = dirPath.substring(prefix.length);\n        if (!relativePath.includes('/')) { // Direct child only\n          items.push({\n            name: relativePath,\n            type: 'directory',\n            path: dirPath\n          });\n        }\n      }\n    }\n    \n    return items;\n  }\n\n  clear() {\n    this.files.clear();\n    this.directories.clear();\n    this.currentMemoryUsage = 0;\n  }\n\n  getMemoryUsage() {\n    return {\n      used: this.currentMemoryUsage,\n      limit: this.maxMemoryUsage,\n      percentage: (this.currentMemoryUsage / this.maxMemoryUsage) * 100\n    };\n  }\n}\n\nclass SushiWASMRunner {\n  constructor() {\n    this.wasmModule = null;\n    this.fs = new VirtualFileSystem();\n    this.isInitialized = false;\n    this.initializationPromise = null;\n  }\n\n  async initialize() {\n    if (this.isInitialized) {\n      return this.wasmModule;\n    }\n    \n    if (this.initializationPromise) {\n      return this.initializationPromise;\n    }\n    \n    this.initializationPromise = this._loadWasmModule();\n    return this.initializationPromise;\n  }\n\n  async _loadWasmModule() {\n    try {\n      // For now, we'll create a fallback implementation that uses the existing fsh-sushi\n      // dependency but in a browser-compatible way. This is a stepping stone to full WASM.\n      \n      // Import the SUSHI library dynamically to avoid build issues\n      const sushiModule = await this._importSushiLibrary();\n      \n      this.wasmModule = sushiModule;\n      this.isInitialized = true;\n      \n      return this.wasmModule;\n    } catch (error) {\n      console.error('Failed to load SUSHI WASM module:', error);\n      throw new Error(`SUSHI WASM initialization failed: ${error.message}`);\n    }\n  }\n\n  async _importSushiLibrary() {\n    // This is a bridge implementation that provides a WASM-like interface\n    // for future migration. For now, we avoid direct fsh-sushi imports\n    // due to Node.js dependency conflicts in browser environment.\n    \n    console.log('Creating fallback SUSHI implementation for browser environment');\n    \n    // Return a mock implementation with WASM-style interface\n    return {\n      ccall: this._createFallbackCCall.bind(this),\n      FS: {\n        writeFile: this.fs.writeFile.bind(this.fs),\n        readFile: this.fs.readFile.bind(this.fs),\n        exists: this.fs.exists.bind(this.fs)\n      }\n    };\n  }\n\n  _createFallbackCCall() {\n    return (functionName, returnType, paramTypes, params) => {\n      if (functionName === 'runSushi') {\n        return this._runFallbackCompilation(params[0]);\n      }\n      throw new Error(`Unsupported WASM function: ${functionName}`);\n    };\n  }\n\n  async _runFallbackCompilation(workspacePath) {\n    // Fallback implementation using the existing custom FSH parser\n    // This maintains the current functionality while providing WASM interface\n    \n    const outputFiles = [];\n    const errors = [];\n    const warnings = [];\n\n    try {\n      const fshFiles = this._getAllFshFiles();\n      const configContent = this.fs.readFile('sushi-config.yaml');\n      \n      let config = {\n        name: 'browser-generated-ig',\n        version: '1.0.0',\n        fhirVersion: '4.0.1',\n        canonical: 'http://example.org/fhir/ig/browser-generated'\n      };\n\n      if (configContent) {\n        try {\n          const yaml = await import('js-yaml');\n          config = yaml.default.load(configContent);\n        } catch (err) {\n          warnings.push(`Failed to parse sushi-config.yaml: ${err.message}`);\n        }\n      } else {\n        warnings.push('No sushi-config.yaml found, using default configuration');\n      }\n\n      // Use the existing FSH parsing logic from SushiRunner\n      for (const { content } of fshFiles) {\n        const definitions = this._extractFSHDefinitions(content);\n        \n        // Generate FHIR resources using the same logic as the current implementation\n        const resources = this._generateFHIRResources(definitions, config);\n        outputFiles.push(...resources);\n      }\n\n      // Return object directly instead of JSON string to avoid parsing issues\n      return {\n        success: true,\n        files: outputFiles,\n        errors: errors,\n        warnings: warnings\n      };\n\n    } catch (error) {\n      return {\n        success: false,\n        files: [],\n        errors: [error.message],\n        warnings: warnings\n      };\n    }\n  }\n\n  _getAllFshFiles() {\n    const fshFiles = [];\n    \n    // Recursively collect all .fsh files\n    const collectFiles = (path = '') => {\n      const items = this.fs.listDirectory(path);\n      \n      for (const item of items) {\n        if (item.type === 'file' && item.name.endsWith('.fsh')) {\n          const content = this.fs.readFile(item.path);\n          if (content) {\n            fshFiles.push({\n              path: item.path,\n              content: content\n            });\n          }\n        } else if (item.type === 'directory') {\n          collectFiles(item.path);\n        }\n      }\n    };\n\n    collectFiles('input/fsh');\n    return fshFiles;\n  }\n\n  _extractFSHDefinitions(content) {\n    // Reuse the existing FSH parsing logic from SushiRunner\n    const definitions = {\n      profiles: [],\n      instances: [],\n      valueSets: [],\n      codeSystems: [],\n      extensions: []\n    };\n    \n    const lines = content.split('\\n');\n    let currentDefinition = null;\n    let currentType = null;\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      \n      // Detect definition types\n      if (line.startsWith('Profile:')) {\n        currentType = 'profiles';\n        currentDefinition = {\n          name: line.substring(8).trim(),\n          type: 'Profile',\n          parent: null,\n          id: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      } else if (line.startsWith('Instance:')) {\n        currentType = 'instances';\n        currentDefinition = {\n          name: line.substring(9).trim(),\n          type: 'Instance',\n          instanceOf: null,\n          usage: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      } else if (line.startsWith('ValueSet:')) {\n        currentType = 'valueSets';\n        currentDefinition = {\n          name: line.substring(9).trim(),\n          type: 'ValueSet',\n          id: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      } else if (line.startsWith('CodeSystem:')) {\n        currentType = 'codeSystems';\n        currentDefinition = {\n          name: line.substring(11).trim(),\n          type: 'CodeSystem',\n          id: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      } else if (line.startsWith('Extension:')) {\n        currentType = 'extensions';\n        currentDefinition = {\n          name: line.substring(10).trim(),\n          type: 'Extension',\n          id: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      }\n      \n      // Parse properties\n      if (currentDefinition) {\n        if (line.startsWith('Parent:')) {\n          currentDefinition.parent = line.substring(7).trim();\n        } else if (line.startsWith('InstanceOf:')) {\n          currentDefinition.instanceOf = line.substring(11).trim();\n        } else if (line.startsWith('Usage:')) {\n          currentDefinition.usage = line.substring(6).trim();\n        } else if (line.startsWith('Id:')) {\n          currentDefinition.id = line.substring(3).trim();\n        } else if (line.startsWith('Title:')) {\n          currentDefinition.title = line.substring(6).trim().replace(/['\"]/g, '');\n        } else if (line.startsWith('Description:')) {\n          currentDefinition.description = line.substring(12).trim().replace(/['\"]/g, '');\n        } else if (line.startsWith('* ')) {\n          currentDefinition.rules.push(line.substring(2).trim());\n        }\n        \n        // If we hit a new definition or end of content, save current one\n        if ((line.includes(':') && !line.startsWith('* ') && \n             !line.startsWith('Parent:') && !line.startsWith('InstanceOf:') &&\n             !line.startsWith('Usage:') && !line.startsWith('Id:') &&\n             !line.startsWith('Title:') && !line.startsWith('Description:')) ||\n            i === lines.length - 1) {\n          \n          if (currentDefinition && currentType && currentDefinition.name) {\n            definitions[currentType].push(currentDefinition);\n          }\n          currentDefinition = null;\n          currentType = null;\n          i--; // Re-process this line for the new definition\n        }\n      }\n    }\n    \n    return definitions;\n  }\n\n  _generateFHIRResources(definitions, config) {\n    const resources = [];\n\n    // Generate StructureDefinitions from profiles\n    definitions.profiles.forEach(profile => {\n      const profileId = profile.id || profile.name.toLowerCase().replace(/\\s+/g, '-');\n      const structureDefinition = {\n        resourceType: 'StructureDefinition',\n        id: profileId,\n        url: `${config.canonical}/StructureDefinition/${profileId}`,\n        name: profile.name,\n        title: profile.title || profile.name,\n        status: 'draft',\n        fhirVersion: config.fhirVersion || '4.0.1',\n        kind: 'resource',\n        abstract: false,\n        type: profile.parent === 'Patient' ? 'Patient' : \n               profile.parent === 'Observation' ? 'Observation' :\n               profile.parent || 'DomainResource',\n        baseDefinition: `http://hl7.org/fhir/StructureDefinition/${profile.parent || 'DomainResource'}`,\n        derivation: 'constraint',\n        description: profile.description || `Profile for ${profile.name}`\n      };\n      \n      if (profile.rules.length > 0) {\n        structureDefinition.differential = {\n          element: profile.rules.map((rule, index) => ({\n            id: `${structureDefinition.type}.${rule.split(' ')[0]}`,\n            path: `${structureDefinition.type}.${rule.split(' ')[0]}`,\n            short: `Rule: ${rule}`\n          }))\n        };\n      }\n      \n      resources.push({\n        path: `StructureDefinition-${profileId}.json`,\n        content: JSON.stringify(structureDefinition, null, 2),\n        resourceType: 'StructureDefinition'\n      });\n    });\n\n    // Generate instances\n    definitions.instances.forEach(instance => {\n      const instanceId = instance.name.toLowerCase().replace(/\\s+/g, '-');\n      const resourceType = instance.instanceOf === 'Patient' ? 'Patient' :\n                         instance.instanceOf === 'Observation' ? 'Observation' :\n                         'Patient'; // Default fallback\n                         \n      const fhirInstance = {\n        resourceType: resourceType,\n        id: instanceId,\n        meta: {\n          profile: instance.instanceOf ? [`${config.canonical}/StructureDefinition/${instance.instanceOf}`] : undefined\n        }\n      };\n      \n      // Add basic properties based on resource type\n      if (resourceType === 'Patient') {\n        fhirInstance.name = [{\n          family: instance.name.split(' ').pop(),\n          given: instance.name.split(' ').slice(0, -1)\n        }];\n      }\n      \n      resources.push({\n        path: `${instanceId}.json`,\n        content: JSON.stringify(fhirInstance, null, 2),\n        resourceType: resourceType\n      });\n    });\n\n    // Generate ValueSets\n    definitions.valueSets.forEach(vs => {\n      const vsId = vs.id || vs.name.toLowerCase().replace(/\\s+/g, '-');\n      const valueSet = {\n        resourceType: 'ValueSet',\n        id: vsId,\n        url: `${config.canonical}/ValueSet/${vsId}`,\n        name: vs.name,\n        title: vs.title || vs.name,\n        status: 'draft',\n        description: vs.description || `ValueSet for ${vs.name}`,\n        compose: {\n          include: [{\n            system: 'http://example.org/codes',\n            concept: [\n              { code: 'example1', display: 'Example Code 1' },\n              { code: 'example2', display: 'Example Code 2' }\n            ]\n          }]\n        }\n      };\n      \n      resources.push({\n        path: `ValueSet-${vsId}.json`,\n        content: JSON.stringify(valueSet, null, 2),\n        resourceType: 'ValueSet'\n      });\n    });\n\n    // Generate CodeSystems\n    definitions.codeSystems.forEach(cs => {\n      const csId = cs.id || cs.name.toLowerCase().replace(/\\s+/g, '-');\n      const codeSystem = {\n        resourceType: 'CodeSystem',\n        id: csId,\n        url: `${config.canonical}/CodeSystem/${csId}`,\n        name: cs.name,\n        title: cs.title || cs.name,\n        status: 'draft',\n        content: 'complete',\n        description: cs.description || `CodeSystem for ${cs.name}`,\n        concept: [\n          { code: 'concept1', display: 'Concept 1' },\n          { code: 'concept2', display: 'Concept 2' }\n        ]\n      };\n      \n      resources.push({\n        path: `CodeSystem-${csId}.json`,\n        content: JSON.stringify(codeSystem, null, 2),\n        resourceType: 'CodeSystem'\n      });\n    });\n\n    return resources;\n  }\n\n  async runSushi(config, fshFiles) {\n    if (!this.isInitialized) {\n      await this.initialize();\n    }\n\n    // Clear previous files and check memory\n    this.fs.clear();\n    \n    // Check total size of input files\n    const totalSize = fshFiles.reduce((sum, file) => sum + (file.content?.length || 0), 0);\n    if (totalSize > 15 * 1024 * 1024) { // Reduced to 15MB limit\n      throw new Error(`Input files too large (${(totalSize / 1024 / 1024).toFixed(1)}MB). Consider processing fewer files at once.`);\n    }\n\n    try {\n      // Write configuration\n      if (config) {\n        const configYaml = typeof config === 'string' ? config : \n          (await import('js-yaml')).default.dump(config);\n        this.fs.writeFile('sushi-config.yaml', configYaml);\n      }\n\n      // Write FSH files with size validation\n      for (const file of fshFiles) {\n        const filePath = file.path || `input/fsh/${file.name}`;\n        \n        // Skip very large files to prevent crashes\n        if (file.content && file.content.length > 2 * 1024 * 1024) { // Reduced to 2MB per file\n          console.warn(`Skipping large file ${file.name} (${(file.content.length / 1024 / 1024).toFixed(1)}MB)`);\n          continue;\n        }\n        \n        this.fs.writeFile(filePath, file.content || '');\n      }\n\n      // Execute SUSHI via WASM interface\n      const result = this.wasmModule.ccall(\n        'runSushi',           // Function name\n        'string',             // Return type\n        ['string'],           // Parameter types\n        ['/workspace']        // Parameters\n      );\n\n      // Handle both JSON string and object returns\n      if (typeof result === 'string') {\n        return JSON.parse(result);\n      } else {\n        return result; // Already an object\n      }\n      \n    } catch (error) {\n      // Clear memory on error\n      this.fs.clear();\n      throw error;\n    }\n  }\n}\n\n// Singleton instance\nconst sushiWasmService = new SushiWASMRunner();\n\nexport default sushiWasmService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}