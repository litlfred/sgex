{"ast":null,"code":"// @ts-check\n\nimport { register } from \"./lib/register.js\";\nimport { addHook } from \"./lib/add.js\";\nimport { removeHook } from \"./lib/remove.js\";\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nconst bind = Function.bind;\nconst bindable = bind.bind(bind);\nfunction bindApi(hook, state, name) {\n  const removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state]);\n  hook.api = {\n    remove: removeHookRef\n  };\n  hook.remove = removeHookRef;\n  [\"before\", \"error\", \"after\", \"wrap\"].forEach(kind => {\n    const args = name ? [state, kind, name] : [state, kind];\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);\n  });\n}\nfunction Singular() {\n  const singularHookName = Symbol(\"Singular\");\n  const singularHookState = {\n    registry: {}\n  };\n  const singularHook = register.bind(null, singularHookState, singularHookName);\n  bindApi(singularHook, singularHookState, singularHookName);\n  return singularHook;\n}\nfunction Collection() {\n  const state = {\n    registry: {}\n  };\n  const hook = register.bind(null, state);\n  bindApi(hook, state);\n  return hook;\n}\nexport default {\n  Singular,\n  Collection\n};","map":{"version":3,"names":["register","addHook","removeHook","bind","Function","bindable","bindApi","hook","state","name","removeHookRef","apply","api","remove","forEach","kind","args","Singular","singularHookName","Symbol","singularHookState","registry","singularHook","Collection"],"sources":["/home/runner/work/sgex/sgex/node_modules/before-after-hook/index.js"],"sourcesContent":["// @ts-check\n\nimport { register } from \"./lib/register.js\";\nimport { addHook } from \"./lib/add.js\";\nimport { removeHook } from \"./lib/remove.js\";\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nconst bind = Function.bind;\nconst bindable = bind.bind(bind);\n\nfunction bindApi(hook, state, name) {\n  const removeHookRef = bindable(removeHook, null).apply(\n    null,\n    name ? [state, name] : [state]\n  );\n  hook.api = { remove: removeHookRef };\n  hook.remove = removeHookRef;\n  [\"before\", \"error\", \"after\", \"wrap\"].forEach((kind) => {\n    const args = name ? [state, kind, name] : [state, kind];\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);\n  });\n}\n\nfunction Singular() {\n  const singularHookName = Symbol(\"Singular\");\n  const singularHookState = {\n    registry: {},\n  };\n  const singularHook = register.bind(null, singularHookState, singularHookName);\n  bindApi(singularHook, singularHookState, singularHookName);\n  return singularHook;\n}\n\nfunction Collection() {\n  const state = {\n    registry: {},\n  };\n\n  const hook = register.bind(null, state);\n  bindApi(hook, state);\n\n  return hook;\n}\n\nexport default { Singular, Collection };\n"],"mappings":"AAAA;;AAEA,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,UAAU,QAAQ,iBAAiB;;AAE5C;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAI;AAC1B,MAAME,QAAQ,GAAGF,IAAI,CAACA,IAAI,CAACA,IAAI,CAAC;AAEhC,SAASG,OAAOA,CAACC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAClC,MAAMC,aAAa,GAAGL,QAAQ,CAACH,UAAU,EAAE,IAAI,CAAC,CAACS,KAAK,CACpD,IAAI,EACJF,IAAI,GAAG,CAACD,KAAK,EAAEC,IAAI,CAAC,GAAG,CAACD,KAAK,CAC/B,CAAC;EACDD,IAAI,CAACK,GAAG,GAAG;IAAEC,MAAM,EAAEH;EAAc,CAAC;EACpCH,IAAI,CAACM,MAAM,GAAGH,aAAa;EAC3B,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAACI,OAAO,CAAEC,IAAI,IAAK;IACrD,MAAMC,IAAI,GAAGP,IAAI,GAAG,CAACD,KAAK,EAAEO,IAAI,EAAEN,IAAI,CAAC,GAAG,CAACD,KAAK,EAAEO,IAAI,CAAC;IACvDR,IAAI,CAACQ,IAAI,CAAC,GAAGR,IAAI,CAACK,GAAG,CAACG,IAAI,CAAC,GAAGV,QAAQ,CAACJ,OAAO,EAAE,IAAI,CAAC,CAACU,KAAK,CAAC,IAAI,EAAEK,IAAI,CAAC;EACzE,CAAC,CAAC;AACJ;AAEA,SAASC,QAAQA,CAAA,EAAG;EAClB,MAAMC,gBAAgB,GAAGC,MAAM,CAAC,UAAU,CAAC;EAC3C,MAAMC,iBAAiB,GAAG;IACxBC,QAAQ,EAAE,CAAC;EACb,CAAC;EACD,MAAMC,YAAY,GAAGtB,QAAQ,CAACG,IAAI,CAAC,IAAI,EAAEiB,iBAAiB,EAAEF,gBAAgB,CAAC;EAC7EZ,OAAO,CAACgB,YAAY,EAAEF,iBAAiB,EAAEF,gBAAgB,CAAC;EAC1D,OAAOI,YAAY;AACrB;AAEA,SAASC,UAAUA,CAAA,EAAG;EACpB,MAAMf,KAAK,GAAG;IACZa,QAAQ,EAAE,CAAC;EACb,CAAC;EAED,MAAMd,IAAI,GAAGP,QAAQ,CAACG,IAAI,CAAC,IAAI,EAAEK,KAAK,CAAC;EACvCF,OAAO,CAACC,IAAI,EAAEC,KAAK,CAAC;EAEpB,OAAOD,IAAI;AACb;AAEA,eAAe;EAAEU,QAAQ;EAAEM;AAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}