{"ast":null,"code":"import React,{useState,useEffect}from'react';import useThemeImage from'../hooks/useThemeImage';import'./HelpModal.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HelpModal=_ref=>{let{topic,helpTopic,contextData,onClose}=_ref;const[showMenu,setShowMenu]=useState(false);const[currentSlide,setCurrentSlide]=useState(0);// Theme-aware mascot image\nconst mascotImage=useThemeImage('sgex-mascot.png');// Set up global reference for inline onclick handlers\nuseEffect(()=>{const createContextualUrl=(baseUrl,params)=>{var _contextData$selected;const urlParams=new URLSearchParams(params);// Add contextual information\nif(contextData.pageId){urlParams.set('sgex_page',contextData.pageId);}const currentUrl=window.location.href;urlParams.set('sgex_current_url',currentUrl);if((_contextData$selected=contextData.selectedDak)!==null&&_contextData$selected!==void 0&&_contextData$selected.name){urlParams.set('sgex_selected_dak',contextData.selectedDak.name);}return`${baseUrl}?${urlParams.toString()}`;};window.helpModalInstance={openSgexIssue:issueType=>{const baseUrl=`https://github.com/litlfred/sgex/issues/new`;let params={};switch(issueType){case'bug':params.template='bug_report.yml';params.labels='bug';break;case'feature':params.template='feature_request.yml';params.labels='enhancement';break;case'question':params.template='question.yml';params.labels='question';break;case'documentation':params.template='documentation.yml';params.labels='documentation';break;case'blank':// No template specified - this will allow users to create a blank issue\nparams.labels='blank-issue';break;default:params.labels='needs-triage';}const url=createContextualUrl(baseUrl,params);// Try to open the GitHub issue, but handle cases where external links are blocked\ntry{const newWindow=window.open(url,'_blank');// Check if the window was blocked or failed to open\nif(!newWindow||newWindow.closed){var _window$helpModalInst,_window$helpModalInst2;// Fallback: show instructions to manually open the link\n(_window$helpModalInst=window.helpModalInstance)===null||_window$helpModalInst===void 0?void 0:(_window$helpModalInst2=_window$helpModalInst.showFallbackInstructions)===null||_window$helpModalInst2===void 0?void 0:_window$helpModalInst2.call(_window$helpModalInst,'github-blocked',url,issueType);}else{// Check if the window actually loaded after a brief delay\nsetTimeout(()=>{try{if(newWindow.closed||!newWindow.location||newWindow.location.href==='about:blank'){var _window$helpModalInst3,_window$helpModalInst4;newWindow.close();(_window$helpModalInst3=window.helpModalInstance)===null||_window$helpModalInst3===void 0?void 0:(_window$helpModalInst4=_window$helpModalInst3.showFallbackInstructions)===null||_window$helpModalInst4===void 0?void 0:_window$helpModalInst4.call(_window$helpModalInst3,'github-blocked',url,issueType);}}catch(e){// Cross-origin restriction means it probably loaded successfully\n// or the check failed due to security - either way, don't show fallback\n}},1000);}}catch(error){var _window$helpModalInst5,_window$helpModalInst6;console.warn('Failed to open GitHub issue:',error);(_window$helpModalInst5=window.helpModalInstance)===null||_window$helpModalInst5===void 0?void 0:(_window$helpModalInst6=_window$helpModalInst5.showFallbackInstructions)===null||_window$helpModalInst6===void 0?void 0:_window$helpModalInst6.call(_window$helpModalInst5,'github-blocked',url,issueType);}},openDakIssue:issueType=>{const repository=contextData.repository||contextData.selectedDak;if(!repository){console.warn('No DAK repository specified for feedback');return;}const baseUrl=`https://github.com/${repository.owner}/${repository.name}/issues/new`;let params={};switch(issueType){case'bug':params.template='dak_bug_report.yml';params.labels='bug,dak-issue';break;case'improvement':params.template='dak_feature_request.yml';params.labels='enhancement,dak-improvement';break;case'content':params.template='dak_content_error.yml';params.labels='content-issue,clinical-content';break;case'question':params.template='dak_question.yml';params.labels='question,dak-question';break;case'blank':// No template specified - this will allow users to create a blank issue\nparams.labels='blank-issue,dak-feedback';break;default:params.labels='dak-feedback';}// Add DAK-specific context\nif(repository.name){params.sgex_dak_repository=`${repository.owner}/${repository.name}`;}const url=createContextualUrl(baseUrl,params);// Try to open the GitHub issue, but handle cases where external links are blocked\ntry{const newWindow=window.open(url,'_blank');// Check if the window was blocked or failed to open\nif(!newWindow||newWindow.closed){var _window$helpModalInst7,_window$helpModalInst8;// Fallback: show instructions to manually open the link\n(_window$helpModalInst7=window.helpModalInstance)===null||_window$helpModalInst7===void 0?void 0:(_window$helpModalInst8=_window$helpModalInst7.showFallbackInstructions)===null||_window$helpModalInst8===void 0?void 0:_window$helpModalInst8.call(_window$helpModalInst7,'github-blocked',url,`dak-${issueType}`);}else{// Check if the window actually loaded after a brief delay\nsetTimeout(()=>{try{if(newWindow.closed||!newWindow.location||newWindow.location.href==='about:blank'){var _window$helpModalInst9,_window$helpModalInst0;newWindow.close();(_window$helpModalInst9=window.helpModalInstance)===null||_window$helpModalInst9===void 0?void 0:(_window$helpModalInst0=_window$helpModalInst9.showFallbackInstructions)===null||_window$helpModalInst0===void 0?void 0:_window$helpModalInst0.call(_window$helpModalInst9,'github-blocked',url,`dak-${issueType}`);}}catch(e){// Cross-origin restriction means it probably loaded successfully\n// or the check failed due to security - either way, don't show fallback\n}},1000);}}catch(error){var _window$helpModalInst1,_window$helpModalInst10;console.warn('Failed to open DAK issue:',error);(_window$helpModalInst1=window.helpModalInstance)===null||_window$helpModalInst1===void 0?void 0:(_window$helpModalInst10=_window$helpModalInst1.showFallbackInstructions)===null||_window$helpModalInst10===void 0?void 0:_window$helpModalInst10.call(_window$helpModalInst1,'github-blocked',url,`dak-${issueType}`);}},// Function to show fallback instructions when GitHub access is blocked\nshowFallbackInstructions:(reason,url,issueType)=>{const instructions={'github-blocked':{title:'GitHub Access Required',message:`\n              <div class=\"help-fallback-notice\">\n                <h4>🔗 GitHub Link Blocked</h4>\n                <p>It looks like GitHub access is restricted in your current environment.</p>\n                <h5>To report this issue:</h5>\n                <ol>\n                  <li>Copy the link below</li>\n                  <li>Open it in a browser with GitHub access</li>\n                  <li>Fill out the issue template</li>\n                </ol>\n                <div class=\"fallback-url\">\n                  <strong>Link to copy:</strong><br>\n                  <textarea readonly onclick=\"this.select()\" style=\"width: 100%; height: 60px; margin: 5px 0; padding: 5px; font-family: monospace; font-size: 12px;\">${url}</textarea>\n                </div>\n                <p><em>💡 Tip: You can also email us at <a href=\"mailto:smart@who.int\">smart@who.int</a> with your issue details.</em></p>\n              </div>\n            `}};const fallback=instructions[reason]||{title:'External Link Issue',message:`<p>Unable to open external link. Please copy and visit: <br><code>${url}</code></p>`};// Create a temporary modal-like alert for fallback instructions\nconst existingFallback=document.querySelector('.help-fallback-overlay');if(existingFallback){existingFallback.remove();}const fallbackOverlay=document.createElement('div');fallbackOverlay.className='help-fallback-overlay';fallbackOverlay.style.cssText=`\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.7);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 10000;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        `;const fallbackModal=document.createElement('div');fallbackModal.style.cssText=`\n          background: white;\n          border-radius: 8px;\n          padding: 20px;\n          max-width: 500px;\n          max-height: 80vh;\n          overflow-y: auto;\n          position: relative;\n          box-shadow: 0 10px 25px rgba(0,0,0,0.3);\n        `;fallbackModal.innerHTML=`\n          <button onclick=\"this.closest('.help-fallback-overlay').remove()\" style=\"\n            position: absolute;\n            top: 10px;\n            right: 15px;\n            background: none;\n            border: none;\n            font-size: 24px;\n            cursor: pointer;\n            color: #666;\n          \">×</button>\n          <h3 style=\"margin-top: 0; color: #333;\">${fallback.title}</h3>\n          <div style=\"color: #555; line-height: 1.5;\">${fallback.message}</div>\n        `;fallbackOverlay.appendChild(fallbackModal);document.body.appendChild(fallbackOverlay);// Click outside to close\nfallbackOverlay.addEventListener('click',e=>{if(e.target===fallbackOverlay){fallbackOverlay.remove();}});// Auto-remove after 30 seconds\nsetTimeout(()=>{if(document.body.contains(fallbackOverlay)){fallbackOverlay.remove();}},30000);}};return()=>{// Cleanup\ndelete window.helpModalInstance;};},[contextData]);const handleOverlayClick=e=>{if(e.target===e.currentTarget){onClose();}};const handleMenuToggle=()=>{setShowMenu(!showMenu);};const handleBugReport=()=>{var _window$helpModalInst11;// Use the new SGEX issue reporting system\nif((_window$helpModalInst11=window.helpModalInstance)!==null&&_window$helpModalInst11!==void 0&&_window$helpModalInst11.openSgexIssue){window.helpModalInstance.openSgexIssue('bug');}else{var _contextData$selected2;// Fallback to direct URL\nconst params=new URLSearchParams({template:'bug_report.yml',labels:'bug',sgex_page:contextData.pageId||'unknown',sgex_current_url:window.location.href});if((_contextData$selected2=contextData.selectedDak)!==null&&_contextData$selected2!==void 0&&_contextData$selected2.name){params.set('sgex_selected_dak',contextData.selectedDak.name);}const url=`https://github.com/litlfred/sgex/issues/new?${params.toString()}`;// Try to open with error handling\ntry{const newWindow=window.open(url,'_blank');if(!newWindow||newWindow.closed){var _window$helpModalInst12,_window$helpModalInst13;(_window$helpModalInst12=window.helpModalInstance)===null||_window$helpModalInst12===void 0?void 0:(_window$helpModalInst13=_window$helpModalInst12.showFallbackInstructions)===null||_window$helpModalInst13===void 0?void 0:_window$helpModalInst13.call(_window$helpModalInst12,'github-blocked',url,'bug');}}catch(error){var _window$helpModalInst14,_window$helpModalInst15;console.warn('Failed to open GitHub issue:',error);(_window$helpModalInst14=window.helpModalInstance)===null||_window$helpModalInst14===void 0?void 0:(_window$helpModalInst15=_window$helpModalInst14.showFallbackInstructions)===null||_window$helpModalInst15===void 0?void 0:_window$helpModalInst15.call(_window$helpModalInst14,'github-blocked',url,'bug');}}};const handleDAKFeedback=()=>{if(contextData.repository){var _window$helpModalInst16;// Default to opening content error as the primary DAK feedback type\nif((_window$helpModalInst16=window.helpModalInstance)!==null&&_window$helpModalInst16!==void 0&&_window$helpModalInst16.openDakIssue){window.helpModalInstance.openDakIssue('content');}}};const handleEmailSupport=()=>{const topicTitle=(helpTopic===null||helpTopic===void 0?void 0:helpTopic.title)||topic;const subject=encodeURIComponent(`SGEX Workbench Support: ${topicTitle}`);const body=encodeURIComponent(`\nHello SMART Guidelines Team,\n\nI need assistance with the SGEX Workbench.\n\nTopic: ${topicTitle}\nPage: ${window.location.pathname}\n\nPlease describe your question or issue:\n\n\nBest regards,\n    `.trim());window.open(`mailto:smart@who.int?subject=${subject}&body=${body}`);};const handleDocumentation=()=>{window.open('/sgex/docs/overview','_blank');};const handlePrevSlide=()=>{if(currentSlide>0){setCurrentSlide(currentSlide-1);}};const handleNextSlide=()=>{if(helpTopic!==null&&helpTopic!==void 0&&helpTopic.content&&currentSlide<helpTopic.content.length-1){setCurrentSlide(currentSlide+1);}};const renderSlideshow=()=>{if(!(helpTopic!==null&&helpTopic!==void 0&&helpTopic.content)||helpTopic.type!=='slideshow'){return null;}const slides=helpTopic.content;const currentSlideData=slides[currentSlide];// Handle DAK feedback buttons by replacing onclick handlers\nlet processedContent=currentSlideData.content;if(helpTopic.id==='provide-dak-feedback'){processedContent=processedContent.replace(/onclick=\"this\\.openDakIssue\\('([^']+)'\\)\"/g,`onclick=\"window.helpModalInstance?.openDakIssue('$1')\"`);}return/*#__PURE__*/_jsxs(\"div\",{className:\"help-slideshow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"slideshow-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:currentSlideData.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"slide-counter\",children:[currentSlide+1,\" of \",slides.length]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"slideshow-content\",dangerouslySetInnerHTML:{__html:processedContent}}),/*#__PURE__*/_jsxs(\"div\",{className:\"slideshow-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePrevSlide,disabled:currentSlide===0,className:\"slide-nav-btn\",children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsx(\"div\",{className:\"slide-dots\",children:slides.map((_,index)=>/*#__PURE__*/_jsx(\"button\",{className:`slide-dot ${index===currentSlide?'active':''}`,onClick:()=>setCurrentSlide(index),\"aria-label\":`Go to slide ${index+1}`},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextSlide,disabled:currentSlide===slides.length-1,className:\"slide-nav-btn\",children:\"Next \\u2192\"})]})]});};const getHelpContent=()=>{// If we have a specific help topic, use it\nif(helpTopic){return{title:helpTopic.title,content:helpTopic.type==='slideshow'?renderSlideshow():/*#__PURE__*/_jsx(\"div\",{className:\"help-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mascot-message\",children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Helper\",className:\"help-mascot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"message-bubble\",children:/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:helpTopic.content}})})]})})};}// Legacy support for old topic strings\nswitch(topic){case'github-token':case'pat-help':return{title:'GitHub Authentication Help',content:/*#__PURE__*/_jsx(\"div\",{className:\"help-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mascot-message\",children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Helper\",className:\"help-mascot\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-bubble\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"SGEX Workbench uses GitHub Personal Access Tokens for secure authentication!\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"How it works:\"})}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Create a Personal Access Token in your GitHub settings\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter the token in the login form\"}),/*#__PURE__*/_jsx(\"li\",{children:\"SGEX will securely connect to your GitHub repositories\"}),/*#__PURE__*/_jsx(\"li\",{children:\"No backend server required - works entirely in your browser!\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"This approach ensures compliance with our no-backend requirement while keeping your data secure.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"If you're having trouble, please use the menu above to get additional support.\"})]})]})})};default:return{title:'SGEX Workbench Help',content:/*#__PURE__*/_jsx(\"div\",{className:\"help-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mascot-message\",children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Helper\",className:\"help-mascot\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-bubble\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Hi! I'm here to help you with the SGEX Workbench.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Use the menu in the top right to get additional support options.\"})]})]})})};}};const{title,content}=getHelpContent();return/*#__PURE__*/_jsx(\"div\",{className:\"help-modal-overlay\",onClick:handleOverlayClick,children:/*#__PURE__*/_jsxs(\"div\",{className:\"help-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"help-modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsxs(\"div\",{className:\"help-modal-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"hamburger-menu-btn\",onClick:handleMenuToggle,\"aria-label\":\"More options\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:onClose,\"aria-label\":\"Close help\",children:\"\\xD7\"})]}),showMenu&&/*#__PURE__*/_jsxs(\"div\",{className:\"help-menu-dropdown\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:handleDocumentation,className:\"menu-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"menu-icon\",children:\"\\uD83D\\uDCD6\"}),\"Documentation\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleBugReport,className:\"menu-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/sgex/bug-report-icon.svg\",alt:\"Bug\",className:\"menu-icon\"}),\"File Bug Report\"]}),contextData.repository&&/*#__PURE__*/_jsxs(\"button\",{onClick:handleDAKFeedback,className:\"menu-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"menu-icon\",children:\"\\uD83D\\uDCDD\"}),\"Provide DAK Feedback\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleEmailSupport,className:\"menu-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"menu-icon\",children:\"\\uD83D\\uDCE7\"}),\"Email Support\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"help-modal-content\",children:content})]})});};export default HelpModal;","map":{"version":3,"names":["React","useState","useEffect","useThemeImage","jsx","_jsx","jsxs","_jsxs","HelpModal","_ref","topic","helpTopic","contextData","onClose","showMenu","setShowMenu","currentSlide","setCurrentSlide","mascotImage","createContextualUrl","baseUrl","params","_contextData$selected","urlParams","URLSearchParams","pageId","set","currentUrl","window","location","href","selectedDak","name","toString","helpModalInstance","openSgexIssue","issueType","template","labels","url","newWindow","open","closed","_window$helpModalInst","_window$helpModalInst2","showFallbackInstructions","call","setTimeout","_window$helpModalInst3","_window$helpModalInst4","close","e","error","_window$helpModalInst5","_window$helpModalInst6","console","warn","openDakIssue","repository","owner","sgex_dak_repository","_window$helpModalInst7","_window$helpModalInst8","_window$helpModalInst9","_window$helpModalInst0","_window$helpModalInst1","_window$helpModalInst10","reason","instructions","title","message","fallback","existingFallback","document","querySelector","remove","fallbackOverlay","createElement","className","style","cssText","fallbackModal","innerHTML","appendChild","body","addEventListener","target","contains","handleOverlayClick","currentTarget","handleMenuToggle","handleBugReport","_window$helpModalInst11","_contextData$selected2","sgex_page","sgex_current_url","_window$helpModalInst12","_window$helpModalInst13","_window$helpModalInst14","_window$helpModalInst15","handleDAKFeedback","_window$helpModalInst16","handleEmailSupport","topicTitle","subject","encodeURIComponent","pathname","trim","handleDocumentation","handlePrevSlide","handleNextSlide","content","length","renderSlideshow","type","slides","currentSlideData","processedContent","id","replace","children","dangerouslySetInnerHTML","__html","onClick","disabled","map","_","index","getHelpContent","src","alt"],"sources":["/home/runner/work/sgex/sgex/src/components/HelpModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useThemeImage from '../hooks/useThemeImage';\nimport './HelpModal.css';\n\nconst HelpModal = ({ topic, helpTopic, contextData, onClose }) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // Theme-aware mascot image\n  const mascotImage = useThemeImage('sgex-mascot.png');\n\n  // Set up global reference for inline onclick handlers\n  useEffect(() => {\n    const createContextualUrl = (baseUrl, params) => {\n      const urlParams = new URLSearchParams(params);\n      \n      // Add contextual information\n      if (contextData.pageId) {\n        urlParams.set('sgex_page', contextData.pageId);\n      }\n      \n      const currentUrl = window.location.href;\n      urlParams.set('sgex_current_url', currentUrl);\n      \n      if (contextData.selectedDak?.name) {\n        urlParams.set('sgex_selected_dak', contextData.selectedDak.name);\n      }\n      \n      return `${baseUrl}?${urlParams.toString()}`;\n    };\n\n    window.helpModalInstance = {\n      openSgexIssue: (issueType) => {\n        const baseUrl = `https://github.com/litlfred/sgex/issues/new`;\n        let params = {};\n\n        switch (issueType) {\n          case 'bug':\n            params.template = 'bug_report.yml';\n            params.labels = 'bug';\n            break;\n          case 'feature':\n            params.template = 'feature_request.yml';\n            params.labels = 'enhancement';\n            break;\n          case 'question':\n            params.template = 'question.yml';\n            params.labels = 'question';\n            break;\n          case 'documentation':\n            params.template = 'documentation.yml';\n            params.labels = 'documentation';\n            break;\n          case 'blank':\n            // No template specified - this will allow users to create a blank issue\n            params.labels = 'blank-issue';\n            break;\n          default:\n            params.labels = 'needs-triage';\n        }\n\n        const url = createContextualUrl(baseUrl, params);\n        \n        // Try to open the GitHub issue, but handle cases where external links are blocked\n        try {\n          const newWindow = window.open(url, '_blank');\n          \n          // Check if the window was blocked or failed to open\n          if (!newWindow || newWindow.closed) {\n            // Fallback: show instructions to manually open the link\n            window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, issueType);\n          } else {\n            // Check if the window actually loaded after a brief delay\n            setTimeout(() => {\n              try {\n                if (newWindow.closed || !newWindow.location || newWindow.location.href === 'about:blank') {\n                  newWindow.close();\n                  window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, issueType);\n                }\n              } catch (e) {\n                // Cross-origin restriction means it probably loaded successfully\n                // or the check failed due to security - either way, don't show fallback\n              }\n            }, 1000);\n          }\n        } catch (error) {\n          console.warn('Failed to open GitHub issue:', error);\n          window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, issueType);\n        }\n      },\n\n      openDakIssue: (issueType) => {\n        const repository = contextData.repository || contextData.selectedDak;\n        if (!repository) {\n          console.warn('No DAK repository specified for feedback');\n          return;\n        }\n\n        const baseUrl = `https://github.com/${repository.owner}/${repository.name}/issues/new`;\n        let params = {};\n\n        switch (issueType) {\n          case 'bug':\n            params.template = 'dak_bug_report.yml';\n            params.labels = 'bug,dak-issue';\n            break;\n          case 'improvement':\n            params.template = 'dak_feature_request.yml';\n            params.labels = 'enhancement,dak-improvement';\n            break;\n          case 'content':\n            params.template = 'dak_content_error.yml';\n            params.labels = 'content-issue,clinical-content';\n            break;\n          case 'question':\n            params.template = 'dak_question.yml';\n            params.labels = 'question,dak-question';\n            break;\n          case 'blank':\n            // No template specified - this will allow users to create a blank issue\n            params.labels = 'blank-issue,dak-feedback';\n            break;\n          default:\n            params.labels = 'dak-feedback';\n        }\n\n        // Add DAK-specific context\n        if (repository.name) {\n          params.sgex_dak_repository = `${repository.owner}/${repository.name}`;\n        }\n\n        const url = createContextualUrl(baseUrl, params);\n        \n        // Try to open the GitHub issue, but handle cases where external links are blocked\n        try {\n          const newWindow = window.open(url, '_blank');\n          \n          // Check if the window was blocked or failed to open\n          if (!newWindow || newWindow.closed) {\n            // Fallback: show instructions to manually open the link\n            window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, `dak-${issueType}`);\n          } else {\n            // Check if the window actually loaded after a brief delay\n            setTimeout(() => {\n              try {\n                if (newWindow.closed || !newWindow.location || newWindow.location.href === 'about:blank') {\n                  newWindow.close();\n                  window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, `dak-${issueType}`);\n                }\n              } catch (e) {\n                // Cross-origin restriction means it probably loaded successfully\n                // or the check failed due to security - either way, don't show fallback\n              }\n            }, 1000);\n          }\n        } catch (error) {\n          console.warn('Failed to open DAK issue:', error);\n          window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, `dak-${issueType}`);\n        }\n      },\n\n      // Function to show fallback instructions when GitHub access is blocked\n      showFallbackInstructions: (reason, url, issueType) => {\n        const instructions = {\n          'github-blocked': {\n            title: 'GitHub Access Required',\n            message: `\n              <div class=\"help-fallback-notice\">\n                <h4>🔗 GitHub Link Blocked</h4>\n                <p>It looks like GitHub access is restricted in your current environment.</p>\n                <h5>To report this issue:</h5>\n                <ol>\n                  <li>Copy the link below</li>\n                  <li>Open it in a browser with GitHub access</li>\n                  <li>Fill out the issue template</li>\n                </ol>\n                <div class=\"fallback-url\">\n                  <strong>Link to copy:</strong><br>\n                  <textarea readonly onclick=\"this.select()\" style=\"width: 100%; height: 60px; margin: 5px 0; padding: 5px; font-family: monospace; font-size: 12px;\">${url}</textarea>\n                </div>\n                <p><em>💡 Tip: You can also email us at <a href=\"mailto:smart@who.int\">smart@who.int</a> with your issue details.</em></p>\n              </div>\n            `\n          }\n        };\n\n        const fallback = instructions[reason] || {\n          title: 'External Link Issue',\n          message: `<p>Unable to open external link. Please copy and visit: <br><code>${url}</code></p>`\n        };\n\n        // Create a temporary modal-like alert for fallback instructions\n        const existingFallback = document.querySelector('.help-fallback-overlay');\n        if (existingFallback) {\n          existingFallback.remove();\n        }\n\n        const fallbackOverlay = document.createElement('div');\n        fallbackOverlay.className = 'help-fallback-overlay';\n        fallbackOverlay.style.cssText = `\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.7);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 10000;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        `;\n\n        const fallbackModal = document.createElement('div');\n        fallbackModal.style.cssText = `\n          background: white;\n          border-radius: 8px;\n          padding: 20px;\n          max-width: 500px;\n          max-height: 80vh;\n          overflow-y: auto;\n          position: relative;\n          box-shadow: 0 10px 25px rgba(0,0,0,0.3);\n        `;\n\n        fallbackModal.innerHTML = `\n          <button onclick=\"this.closest('.help-fallback-overlay').remove()\" style=\"\n            position: absolute;\n            top: 10px;\n            right: 15px;\n            background: none;\n            border: none;\n            font-size: 24px;\n            cursor: pointer;\n            color: #666;\n          \">×</button>\n          <h3 style=\"margin-top: 0; color: #333;\">${fallback.title}</h3>\n          <div style=\"color: #555; line-height: 1.5;\">${fallback.message}</div>\n        `;\n\n        fallbackOverlay.appendChild(fallbackModal);\n        document.body.appendChild(fallbackOverlay);\n\n        // Click outside to close\n        fallbackOverlay.addEventListener('click', (e) => {\n          if (e.target === fallbackOverlay) {\n            fallbackOverlay.remove();\n          }\n        });\n\n        // Auto-remove after 30 seconds\n        setTimeout(() => {\n          if (document.body.contains(fallbackOverlay)) {\n            fallbackOverlay.remove();\n          }\n        }, 30000);\n      }\n    };\n\n    return () => {\n      // Cleanup\n      delete window.helpModalInstance;\n    };\n  }, [contextData]);\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleMenuToggle = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const handleBugReport = () => {\n    // Use the new SGEX issue reporting system\n    if (window.helpModalInstance?.openSgexIssue) {\n      window.helpModalInstance.openSgexIssue('bug');\n    } else {\n      // Fallback to direct URL\n      const params = new URLSearchParams({\n        template: 'bug_report.yml',\n        labels: 'bug',\n        sgex_page: contextData.pageId || 'unknown',\n        sgex_current_url: window.location.href\n      });\n      \n      if (contextData.selectedDak?.name) {\n        params.set('sgex_selected_dak', contextData.selectedDak.name);\n      }\n      \n      const url = `https://github.com/litlfred/sgex/issues/new?${params.toString()}`;\n      \n      // Try to open with error handling\n      try {\n        const newWindow = window.open(url, '_blank');\n        if (!newWindow || newWindow.closed) {\n          window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, 'bug');\n        }\n      } catch (error) {\n        console.warn('Failed to open GitHub issue:', error);\n        window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, 'bug');\n      }\n    }\n  };\n\n  const handleDAKFeedback = () => {\n    if (contextData.repository) {\n      // Default to opening content error as the primary DAK feedback type\n      if (window.helpModalInstance?.openDakIssue) {\n        window.helpModalInstance.openDakIssue('content');\n      }\n    }\n  };\n\n  const handleEmailSupport = () => {\n    const topicTitle = helpTopic?.title || topic;\n    const subject = encodeURIComponent(`SGEX Workbench Support: ${topicTitle}`);\n    const body = encodeURIComponent(`\nHello SMART Guidelines Team,\n\nI need assistance with the SGEX Workbench.\n\nTopic: ${topicTitle}\nPage: ${window.location.pathname}\n\nPlease describe your question or issue:\n\n\nBest regards,\n    `.trim());\n    \n    window.open(`mailto:smart@who.int?subject=${subject}&body=${body}`);\n  };\n\n  const handleDocumentation = () => {\n    window.open('/sgex/docs/overview', '_blank');\n  };\n\n  const handlePrevSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  const handleNextSlide = () => {\n    if (helpTopic?.content && currentSlide < helpTopic.content.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  const renderSlideshow = () => {\n    if (!helpTopic?.content || helpTopic.type !== 'slideshow') {\n      return null;\n    }\n\n    const slides = helpTopic.content;\n    const currentSlideData = slides[currentSlide];\n\n    // Handle DAK feedback buttons by replacing onclick handlers\n    let processedContent = currentSlideData.content;\n    if (helpTopic.id === 'provide-dak-feedback') {\n      processedContent = processedContent.replace(\n        /onclick=\"this\\.openDakIssue\\('([^']+)'\\)\"/g,\n        `onclick=\"window.helpModalInstance?.openDakIssue('$1')\"`\n      );\n    }\n\n    return (\n      <div className=\"help-slideshow\">\n        <div className=\"slideshow-header\">\n          <h3>{currentSlideData.title}</h3>\n          <div className=\"slide-counter\">\n            {currentSlide + 1} of {slides.length}\n          </div>\n        </div>\n        \n        <div \n          className=\"slideshow-content\"\n          dangerouslySetInnerHTML={{ __html: processedContent }}\n        />\n        \n        <div className=\"slideshow-controls\">\n          <button \n            onClick={handlePrevSlide}\n            disabled={currentSlide === 0}\n            className=\"slide-nav-btn\"\n          >\n            ← Previous\n          </button>\n          \n          <div className=\"slide-dots\">\n            {slides.map((_, index) => (\n              <button\n                key={index}\n                className={`slide-dot ${index === currentSlide ? 'active' : ''}`}\n                onClick={() => setCurrentSlide(index)}\n                aria-label={`Go to slide ${index + 1}`}\n              />\n            ))}\n          </div>\n          \n          <button \n            onClick={handleNextSlide}\n            disabled={currentSlide === slides.length - 1}\n            className=\"slide-nav-btn\"\n          >\n            Next →\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const getHelpContent = () => {\n    // If we have a specific help topic, use it\n    if (helpTopic) {\n      return {\n        title: helpTopic.title,\n        content: helpTopic.type === 'slideshow' ? renderSlideshow() : (\n          <div className=\"help-content\">\n            <div className=\"mascot-message\">\n              <img src={mascotImage} alt=\"SGEX Helper\" className=\"help-mascot\" />\n              <div className=\"message-bubble\">\n                <div dangerouslySetInnerHTML={{ __html: helpTopic.content }} />\n              </div>\n            </div>\n          </div>\n        )\n      };\n    }\n\n    // Legacy support for old topic strings\n    switch (topic) {\n      case 'github-token':\n      case 'pat-help':\n        return {\n          title: 'GitHub Authentication Help',\n          content: (\n            <div className=\"help-content\">\n              <div className=\"mascot-message\">\n                <img src={mascotImage} alt=\"SGEX Helper\" className=\"help-mascot\" />\n                <div className=\"message-bubble\">\n                  <p>SGEX Workbench uses GitHub Personal Access Tokens for secure authentication!</p>\n                  <p><strong>How it works:</strong></p>\n                  <ul>\n                    <li>Create a Personal Access Token in your GitHub settings</li>\n                    <li>Enter the token in the login form</li>\n                    <li>SGEX will securely connect to your GitHub repositories</li>\n                    <li>No backend server required - works entirely in your browser!</li>\n                  </ul>\n                  <p>This approach ensures compliance with our no-backend requirement while keeping your data secure.</p>\n                  <p>If you're having trouble, please use the menu above to get additional support.</p>\n                </div>\n              </div>\n            </div>\n          )\n        };\n      default:\n        return {\n          title: 'SGEX Workbench Help',\n          content: (\n            <div className=\"help-content\">\n              <div className=\"mascot-message\">\n                <img src={mascotImage} alt=\"SGEX Helper\" className=\"help-mascot\" />\n                <div className=\"message-bubble\">\n                  <p>Hi! I'm here to help you with the SGEX Workbench.</p>\n                  <p>Use the menu in the top right to get additional support options.</p>\n                </div>\n              </div>\n            </div>\n          )\n        };\n    }\n  };\n\n  const { title, content } = getHelpContent();\n\n  return (\n    <div className=\"help-modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"help-modal\">\n        <div className=\"help-modal-header\">\n          <h2>{title}</h2>\n          <div className=\"help-modal-actions\">\n            <button \n              className=\"hamburger-menu-btn\"\n              onClick={handleMenuToggle}\n              aria-label=\"More options\"\n            >\n              <span></span>\n              <span></span>\n              <span></span>\n            </button>\n            <button \n              className=\"close-btn\"\n              onClick={onClose}\n              aria-label=\"Close help\"\n            >\n              ×\n            </button>\n          </div>\n          \n          {showMenu && (\n            <div className=\"help-menu-dropdown\">\n              <button onClick={handleDocumentation} className=\"menu-item\">\n                <span className=\"menu-icon\">📖</span>\n                Documentation\n              </button>\n              \n              <button onClick={handleBugReport} className=\"menu-item\">\n                <img src=\"/sgex/bug-report-icon.svg\" alt=\"Bug\" className=\"menu-icon\" />\n                File Bug Report\n              </button>\n              \n              {contextData.repository && (\n                <button onClick={handleDAKFeedback} className=\"menu-item\">\n                  <span className=\"menu-icon\">📝</span>\n                  Provide DAK Feedback\n                </button>\n              )}\n              \n              <button onClick={handleEmailSupport} className=\"menu-item\">\n                <span className=\"menu-icon\">📧</span>\n                Email Support\n              </button>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"help-modal-content\">\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelpModal;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,aAAa,KAAM,wBAAwB,CAClD,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAgD,IAA/C,CAAEC,KAAK,CAAEC,SAAS,CAAEC,WAAW,CAAEC,OAAQ,CAAC,CAAAJ,IAAA,CAC3D,KAAM,CAACK,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CAEnD;AACA,KAAM,CAAAiB,WAAW,CAAGf,aAAa,CAAC,iBAAiB,CAAC,CAEpD;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,mBAAmB,CAAGA,CAACC,OAAO,CAAEC,MAAM,GAAK,KAAAC,qBAAA,CAC/C,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,eAAe,CAACH,MAAM,CAAC,CAE7C;AACA,GAAIT,WAAW,CAACa,MAAM,CAAE,CACtBF,SAAS,CAACG,GAAG,CAAC,WAAW,CAAEd,WAAW,CAACa,MAAM,CAAC,CAChD,CAEA,KAAM,CAAAE,UAAU,CAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CACvCP,SAAS,CAACG,GAAG,CAAC,kBAAkB,CAAEC,UAAU,CAAC,CAE7C,IAAAL,qBAAA,CAAIV,WAAW,CAACmB,WAAW,UAAAT,qBAAA,WAAvBA,qBAAA,CAAyBU,IAAI,CAAE,CACjCT,SAAS,CAACG,GAAG,CAAC,mBAAmB,CAAEd,WAAW,CAACmB,WAAW,CAACC,IAAI,CAAC,CAClE,CAEA,MAAO,GAAGZ,OAAO,IAAIG,SAAS,CAACU,QAAQ,CAAC,CAAC,EAAE,CAC7C,CAAC,CAEDL,MAAM,CAACM,iBAAiB,CAAG,CACzBC,aAAa,CAAGC,SAAS,EAAK,CAC5B,KAAM,CAAAhB,OAAO,CAAG,6CAA6C,CAC7D,GAAI,CAAAC,MAAM,CAAG,CAAC,CAAC,CAEf,OAAQe,SAAS,EACf,IAAK,KAAK,CACRf,MAAM,CAACgB,QAAQ,CAAG,gBAAgB,CAClChB,MAAM,CAACiB,MAAM,CAAG,KAAK,CACrB,MACF,IAAK,SAAS,CACZjB,MAAM,CAACgB,QAAQ,CAAG,qBAAqB,CACvChB,MAAM,CAACiB,MAAM,CAAG,aAAa,CAC7B,MACF,IAAK,UAAU,CACbjB,MAAM,CAACgB,QAAQ,CAAG,cAAc,CAChChB,MAAM,CAACiB,MAAM,CAAG,UAAU,CAC1B,MACF,IAAK,eAAe,CAClBjB,MAAM,CAACgB,QAAQ,CAAG,mBAAmB,CACrChB,MAAM,CAACiB,MAAM,CAAG,eAAe,CAC/B,MACF,IAAK,OAAO,CACV;AACAjB,MAAM,CAACiB,MAAM,CAAG,aAAa,CAC7B,MACF,QACEjB,MAAM,CAACiB,MAAM,CAAG,cAAc,CAClC,CAEA,KAAM,CAAAC,GAAG,CAAGpB,mBAAmB,CAACC,OAAO,CAAEC,MAAM,CAAC,CAEhD;AACA,GAAI,CACF,KAAM,CAAAmB,SAAS,CAAGZ,MAAM,CAACa,IAAI,CAACF,GAAG,CAAE,QAAQ,CAAC,CAE5C;AACA,GAAI,CAACC,SAAS,EAAIA,SAAS,CAACE,MAAM,CAAE,KAAAC,qBAAA,CAAAC,sBAAA,CAClC;AACA,CAAAD,qBAAA,CAAAf,MAAM,CAACM,iBAAiB,UAAAS,qBAAA,kBAAAC,sBAAA,CAAxBD,qBAAA,CAA0BE,wBAAwB,UAAAD,sBAAA,iBAAlDA,sBAAA,CAAAE,IAAA,CAAAH,qBAAA,CAAqD,gBAAgB,CAAEJ,GAAG,CAAEH,SAAS,CAAC,CACxF,CAAC,IAAM,CACL;AACAW,UAAU,CAAC,IAAM,CACf,GAAI,CACF,GAAIP,SAAS,CAACE,MAAM,EAAI,CAACF,SAAS,CAACX,QAAQ,EAAIW,SAAS,CAACX,QAAQ,CAACC,IAAI,GAAK,aAAa,CAAE,KAAAkB,sBAAA,CAAAC,sBAAA,CACxFT,SAAS,CAACU,KAAK,CAAC,CAAC,CACjB,CAAAF,sBAAA,CAAApB,MAAM,CAACM,iBAAiB,UAAAc,sBAAA,kBAAAC,sBAAA,CAAxBD,sBAAA,CAA0BH,wBAAwB,UAAAI,sBAAA,iBAAlDA,sBAAA,CAAAH,IAAA,CAAAE,sBAAA,CAAqD,gBAAgB,CAAET,GAAG,CAAEH,SAAS,CAAC,CACxF,CACF,CAAE,MAAOe,CAAC,CAAE,CACV;AACA;AAAA,CAEJ,CAAC,CAAE,IAAI,CAAC,CACV,CACF,CAAE,MAAOC,KAAK,CAAE,KAAAC,sBAAA,CAAAC,sBAAA,CACdC,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAEJ,KAAK,CAAC,CACnD,CAAAC,sBAAA,CAAAzB,MAAM,CAACM,iBAAiB,UAAAmB,sBAAA,kBAAAC,sBAAA,CAAxBD,sBAAA,CAA0BR,wBAAwB,UAAAS,sBAAA,iBAAlDA,sBAAA,CAAAR,IAAA,CAAAO,sBAAA,CAAqD,gBAAgB,CAAEd,GAAG,CAAEH,SAAS,CAAC,CACxF,CACF,CAAC,CAEDqB,YAAY,CAAGrB,SAAS,EAAK,CAC3B,KAAM,CAAAsB,UAAU,CAAG9C,WAAW,CAAC8C,UAAU,EAAI9C,WAAW,CAACmB,WAAW,CACpE,GAAI,CAAC2B,UAAU,CAAE,CACfH,OAAO,CAACC,IAAI,CAAC,0CAA0C,CAAC,CACxD,OACF,CAEA,KAAM,CAAApC,OAAO,CAAG,sBAAsBsC,UAAU,CAACC,KAAK,IAAID,UAAU,CAAC1B,IAAI,aAAa,CACtF,GAAI,CAAAX,MAAM,CAAG,CAAC,CAAC,CAEf,OAAQe,SAAS,EACf,IAAK,KAAK,CACRf,MAAM,CAACgB,QAAQ,CAAG,oBAAoB,CACtChB,MAAM,CAACiB,MAAM,CAAG,eAAe,CAC/B,MACF,IAAK,aAAa,CAChBjB,MAAM,CAACgB,QAAQ,CAAG,yBAAyB,CAC3ChB,MAAM,CAACiB,MAAM,CAAG,6BAA6B,CAC7C,MACF,IAAK,SAAS,CACZjB,MAAM,CAACgB,QAAQ,CAAG,uBAAuB,CACzChB,MAAM,CAACiB,MAAM,CAAG,gCAAgC,CAChD,MACF,IAAK,UAAU,CACbjB,MAAM,CAACgB,QAAQ,CAAG,kBAAkB,CACpChB,MAAM,CAACiB,MAAM,CAAG,uBAAuB,CACvC,MACF,IAAK,OAAO,CACV;AACAjB,MAAM,CAACiB,MAAM,CAAG,0BAA0B,CAC1C,MACF,QACEjB,MAAM,CAACiB,MAAM,CAAG,cAAc,CAClC,CAEA;AACA,GAAIoB,UAAU,CAAC1B,IAAI,CAAE,CACnBX,MAAM,CAACuC,mBAAmB,CAAG,GAAGF,UAAU,CAACC,KAAK,IAAID,UAAU,CAAC1B,IAAI,EAAE,CACvE,CAEA,KAAM,CAAAO,GAAG,CAAGpB,mBAAmB,CAACC,OAAO,CAAEC,MAAM,CAAC,CAEhD;AACA,GAAI,CACF,KAAM,CAAAmB,SAAS,CAAGZ,MAAM,CAACa,IAAI,CAACF,GAAG,CAAE,QAAQ,CAAC,CAE5C;AACA,GAAI,CAACC,SAAS,EAAIA,SAAS,CAACE,MAAM,CAAE,KAAAmB,sBAAA,CAAAC,sBAAA,CAClC;AACA,CAAAD,sBAAA,CAAAjC,MAAM,CAACM,iBAAiB,UAAA2B,sBAAA,kBAAAC,sBAAA,CAAxBD,sBAAA,CAA0BhB,wBAAwB,UAAAiB,sBAAA,iBAAlDA,sBAAA,CAAAhB,IAAA,CAAAe,sBAAA,CAAqD,gBAAgB,CAAEtB,GAAG,CAAE,OAAOH,SAAS,EAAE,CAAC,CACjG,CAAC,IAAM,CACL;AACAW,UAAU,CAAC,IAAM,CACf,GAAI,CACF,GAAIP,SAAS,CAACE,MAAM,EAAI,CAACF,SAAS,CAACX,QAAQ,EAAIW,SAAS,CAACX,QAAQ,CAACC,IAAI,GAAK,aAAa,CAAE,KAAAiC,sBAAA,CAAAC,sBAAA,CACxFxB,SAAS,CAACU,KAAK,CAAC,CAAC,CACjB,CAAAa,sBAAA,CAAAnC,MAAM,CAACM,iBAAiB,UAAA6B,sBAAA,kBAAAC,sBAAA,CAAxBD,sBAAA,CAA0BlB,wBAAwB,UAAAmB,sBAAA,iBAAlDA,sBAAA,CAAAlB,IAAA,CAAAiB,sBAAA,CAAqD,gBAAgB,CAAExB,GAAG,CAAE,OAAOH,SAAS,EAAE,CAAC,CACjG,CACF,CAAE,MAAOe,CAAC,CAAE,CACV;AACA;AAAA,CAEJ,CAAC,CAAE,IAAI,CAAC,CACV,CACF,CAAE,MAAOC,KAAK,CAAE,KAAAa,sBAAA,CAAAC,uBAAA,CACdX,OAAO,CAACC,IAAI,CAAC,2BAA2B,CAAEJ,KAAK,CAAC,CAChD,CAAAa,sBAAA,CAAArC,MAAM,CAACM,iBAAiB,UAAA+B,sBAAA,kBAAAC,uBAAA,CAAxBD,sBAAA,CAA0BpB,wBAAwB,UAAAqB,uBAAA,iBAAlDA,uBAAA,CAAApB,IAAA,CAAAmB,sBAAA,CAAqD,gBAAgB,CAAE1B,GAAG,CAAE,OAAOH,SAAS,EAAE,CAAC,CACjG,CACF,CAAC,CAED;AACAS,wBAAwB,CAAEA,CAACsB,MAAM,CAAE5B,GAAG,CAAEH,SAAS,GAAK,CACpD,KAAM,CAAAgC,YAAY,CAAG,CACnB,gBAAgB,CAAE,CAChBC,KAAK,CAAE,wBAAwB,CAC/BC,OAAO,CAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wKAAwK/B,GAAG;AAC3K;AACA;AACA;AACA,aACU,CACF,CAAC,CAED,KAAM,CAAAgC,QAAQ,CAAGH,YAAY,CAACD,MAAM,CAAC,EAAI,CACvCE,KAAK,CAAE,qBAAqB,CAC5BC,OAAO,CAAE,qEAAqE/B,GAAG,aACnF,CAAC,CAED;AACA,KAAM,CAAAiC,gBAAgB,CAAGC,QAAQ,CAACC,aAAa,CAAC,wBAAwB,CAAC,CACzE,GAAIF,gBAAgB,CAAE,CACpBA,gBAAgB,CAACG,MAAM,CAAC,CAAC,CAC3B,CAEA,KAAM,CAAAC,eAAe,CAAGH,QAAQ,CAACI,aAAa,CAAC,KAAK,CAAC,CACrDD,eAAe,CAACE,SAAS,CAAG,uBAAuB,CACnDF,eAAe,CAACG,KAAK,CAACC,OAAO,CAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,CAED,KAAM,CAAAC,aAAa,CAAGR,QAAQ,CAACI,aAAa,CAAC,KAAK,CAAC,CACnDI,aAAa,CAACF,KAAK,CAACC,OAAO,CAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,CAEDC,aAAa,CAACC,SAAS,CAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoDX,QAAQ,CAACF,KAAK;AAClE,wDAAwDE,QAAQ,CAACD,OAAO;AACxE,SAAS,CAEDM,eAAe,CAACO,WAAW,CAACF,aAAa,CAAC,CAC1CR,QAAQ,CAACW,IAAI,CAACD,WAAW,CAACP,eAAe,CAAC,CAE1C;AACAA,eAAe,CAACS,gBAAgB,CAAC,OAAO,CAAGlC,CAAC,EAAK,CAC/C,GAAIA,CAAC,CAACmC,MAAM,GAAKV,eAAe,CAAE,CAChCA,eAAe,CAACD,MAAM,CAAC,CAAC,CAC1B,CACF,CAAC,CAAC,CAEF;AACA5B,UAAU,CAAC,IAAM,CACf,GAAI0B,QAAQ,CAACW,IAAI,CAACG,QAAQ,CAACX,eAAe,CAAC,CAAE,CAC3CA,eAAe,CAACD,MAAM,CAAC,CAAC,CAC1B,CACF,CAAC,CAAE,KAAK,CAAC,CACX,CACF,CAAC,CAED,MAAO,IAAM,CACX;AACA,MAAO,CAAA/C,MAAM,CAACM,iBAAiB,CACjC,CAAC,CACH,CAAC,CAAE,CAACtB,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAA4E,kBAAkB,CAAIrC,CAAC,EAAK,CAChC,GAAIA,CAAC,CAACmC,MAAM,GAAKnC,CAAC,CAACsC,aAAa,CAAE,CAChC5E,OAAO,CAAC,CAAC,CACX,CACF,CAAC,CAED,KAAM,CAAA6E,gBAAgB,CAAGA,CAAA,GAAM,CAC7B3E,WAAW,CAAC,CAACD,QAAQ,CAAC,CACxB,CAAC,CAED,KAAM,CAAA6E,eAAe,CAAGA,CAAA,GAAM,KAAAC,uBAAA,CAC5B;AACA,IAAAA,uBAAA,CAAIhE,MAAM,CAACM,iBAAiB,UAAA0D,uBAAA,WAAxBA,uBAAA,CAA0BzD,aAAa,CAAE,CAC3CP,MAAM,CAACM,iBAAiB,CAACC,aAAa,CAAC,KAAK,CAAC,CAC/C,CAAC,IAAM,KAAA0D,sBAAA,CACL;AACA,KAAM,CAAAxE,MAAM,CAAG,GAAI,CAAAG,eAAe,CAAC,CACjCa,QAAQ,CAAE,gBAAgB,CAC1BC,MAAM,CAAE,KAAK,CACbwD,SAAS,CAAElF,WAAW,CAACa,MAAM,EAAI,SAAS,CAC1CsE,gBAAgB,CAAEnE,MAAM,CAACC,QAAQ,CAACC,IACpC,CAAC,CAAC,CAEF,IAAA+D,sBAAA,CAAIjF,WAAW,CAACmB,WAAW,UAAA8D,sBAAA,WAAvBA,sBAAA,CAAyB7D,IAAI,CAAE,CACjCX,MAAM,CAACK,GAAG,CAAC,mBAAmB,CAAEd,WAAW,CAACmB,WAAW,CAACC,IAAI,CAAC,CAC/D,CAEA,KAAM,CAAAO,GAAG,CAAG,+CAA+ClB,MAAM,CAACY,QAAQ,CAAC,CAAC,EAAE,CAE9E;AACA,GAAI,CACF,KAAM,CAAAO,SAAS,CAAGZ,MAAM,CAACa,IAAI,CAACF,GAAG,CAAE,QAAQ,CAAC,CAC5C,GAAI,CAACC,SAAS,EAAIA,SAAS,CAACE,MAAM,CAAE,KAAAsD,uBAAA,CAAAC,uBAAA,CAClC,CAAAD,uBAAA,CAAApE,MAAM,CAACM,iBAAiB,UAAA8D,uBAAA,kBAAAC,uBAAA,CAAxBD,uBAAA,CAA0BnD,wBAAwB,UAAAoD,uBAAA,iBAAlDA,uBAAA,CAAAnD,IAAA,CAAAkD,uBAAA,CAAqD,gBAAgB,CAAEzD,GAAG,CAAE,KAAK,CAAC,CACpF,CACF,CAAE,MAAOa,KAAK,CAAE,KAAA8C,uBAAA,CAAAC,uBAAA,CACd5C,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAEJ,KAAK,CAAC,CACnD,CAAA8C,uBAAA,CAAAtE,MAAM,CAACM,iBAAiB,UAAAgE,uBAAA,kBAAAC,uBAAA,CAAxBD,uBAAA,CAA0BrD,wBAAwB,UAAAsD,uBAAA,iBAAlDA,uBAAA,CAAArD,IAAA,CAAAoD,uBAAA,CAAqD,gBAAgB,CAAE3D,GAAG,CAAE,KAAK,CAAC,CACpF,CACF,CACF,CAAC,CAED,KAAM,CAAA6D,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAIxF,WAAW,CAAC8C,UAAU,CAAE,KAAA2C,uBAAA,CAC1B;AACA,IAAAA,uBAAA,CAAIzE,MAAM,CAACM,iBAAiB,UAAAmE,uBAAA,WAAxBA,uBAAA,CAA0B5C,YAAY,CAAE,CAC1C7B,MAAM,CAACM,iBAAiB,CAACuB,YAAY,CAAC,SAAS,CAAC,CAClD,CACF,CACF,CAAC,CAED,KAAM,CAAA6C,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,UAAU,CAAG,CAAA5F,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAE0D,KAAK,GAAI3D,KAAK,CAC5C,KAAM,CAAA8F,OAAO,CAAGC,kBAAkB,CAAC,2BAA2BF,UAAU,EAAE,CAAC,CAC3E,KAAM,CAAAnB,IAAI,CAAGqB,kBAAkB,CAAC;AACpC;AACA;AACA;AACA;AACA,SAASF,UAAU;AACnB,QAAQ3E,MAAM,CAACC,QAAQ,CAAC6E,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAET/E,MAAM,CAACa,IAAI,CAAC,gCAAgC+D,OAAO,SAASpB,IAAI,EAAE,CAAC,CACrE,CAAC,CAED,KAAM,CAAAwB,mBAAmB,CAAGA,CAAA,GAAM,CAChChF,MAAM,CAACa,IAAI,CAAC,qBAAqB,CAAE,QAAQ,CAAC,CAC9C,CAAC,CAED,KAAM,CAAAoE,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI7F,YAAY,CAAG,CAAC,CAAE,CACpBC,eAAe,CAACD,YAAY,CAAG,CAAC,CAAC,CACnC,CACF,CAAC,CAED,KAAM,CAAA8F,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAInG,SAAS,SAATA,SAAS,WAATA,SAAS,CAAEoG,OAAO,EAAI/F,YAAY,CAAGL,SAAS,CAACoG,OAAO,CAACC,MAAM,CAAG,CAAC,CAAE,CACrE/F,eAAe,CAACD,YAAY,CAAG,CAAC,CAAC,CACnC,CACF,CAAC,CAED,KAAM,CAAAiG,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI,EAACtG,SAAS,SAATA,SAAS,WAATA,SAAS,CAAEoG,OAAO,GAAIpG,SAAS,CAACuG,IAAI,GAAK,WAAW,CAAE,CACzD,MAAO,KAAI,CACb,CAEA,KAAM,CAAAC,MAAM,CAAGxG,SAAS,CAACoG,OAAO,CAChC,KAAM,CAAAK,gBAAgB,CAAGD,MAAM,CAACnG,YAAY,CAAC,CAE7C;AACA,GAAI,CAAAqG,gBAAgB,CAAGD,gBAAgB,CAACL,OAAO,CAC/C,GAAIpG,SAAS,CAAC2G,EAAE,GAAK,sBAAsB,CAAE,CAC3CD,gBAAgB,CAAGA,gBAAgB,CAACE,OAAO,CACzC,4CAA4C,CAC5C,wDACF,CAAC,CACH,CAEA,mBACEhH,KAAA,QAAKuE,SAAS,CAAC,gBAAgB,CAAA0C,QAAA,eAC7BjH,KAAA,QAAKuE,SAAS,CAAC,kBAAkB,CAAA0C,QAAA,eAC/BnH,IAAA,OAAAmH,QAAA,CAAKJ,gBAAgB,CAAC/C,KAAK,CAAK,CAAC,cACjC9D,KAAA,QAAKuE,SAAS,CAAC,eAAe,CAAA0C,QAAA,EAC3BxG,YAAY,CAAG,CAAC,CAAC,MAAI,CAACmG,MAAM,CAACH,MAAM,EACjC,CAAC,EACH,CAAC,cAEN3G,IAAA,QACEyE,SAAS,CAAC,mBAAmB,CAC7B2C,uBAAuB,CAAE,CAAEC,MAAM,CAAEL,gBAAiB,CAAE,CACvD,CAAC,cAEF9G,KAAA,QAAKuE,SAAS,CAAC,oBAAoB,CAAA0C,QAAA,eACjCnH,IAAA,WACEsH,OAAO,CAAEd,eAAgB,CACzBe,QAAQ,CAAE5G,YAAY,GAAK,CAAE,CAC7B8D,SAAS,CAAC,eAAe,CAAA0C,QAAA,CAC1B,iBAED,CAAQ,CAAC,cAETnH,IAAA,QAAKyE,SAAS,CAAC,YAAY,CAAA0C,QAAA,CACxBL,MAAM,CAACU,GAAG,CAAC,CAACC,CAAC,CAAEC,KAAK,gBACnB1H,IAAA,WAEEyE,SAAS,CAAE,aAAaiD,KAAK,GAAK/G,YAAY,CAAG,QAAQ,CAAG,EAAE,EAAG,CACjE2G,OAAO,CAAEA,CAAA,GAAM1G,eAAe,CAAC8G,KAAK,CAAE,CACtC,aAAY,eAAeA,KAAK,CAAG,CAAC,EAAG,EAHlCA,KAIN,CACF,CAAC,CACC,CAAC,cAEN1H,IAAA,WACEsH,OAAO,CAAEb,eAAgB,CACzBc,QAAQ,CAAE5G,YAAY,GAAKmG,MAAM,CAACH,MAAM,CAAG,CAAE,CAC7ClC,SAAS,CAAC,eAAe,CAAA0C,QAAA,CAC1B,aAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED,KAAM,CAAAQ,cAAc,CAAGA,CAAA,GAAM,CAC3B;AACA,GAAIrH,SAAS,CAAE,CACb,MAAO,CACL0D,KAAK,CAAE1D,SAAS,CAAC0D,KAAK,CACtB0C,OAAO,CAAEpG,SAAS,CAACuG,IAAI,GAAK,WAAW,CAAGD,eAAe,CAAC,CAAC,cACzD5G,IAAA,QAAKyE,SAAS,CAAC,cAAc,CAAA0C,QAAA,cAC3BjH,KAAA,QAAKuE,SAAS,CAAC,gBAAgB,CAAA0C,QAAA,eAC7BnH,IAAA,QAAK4H,GAAG,CAAE/G,WAAY,CAACgH,GAAG,CAAC,aAAa,CAACpD,SAAS,CAAC,aAAa,CAAE,CAAC,cACnEzE,IAAA,QAAKyE,SAAS,CAAC,gBAAgB,CAAA0C,QAAA,cAC7BnH,IAAA,QAAKoH,uBAAuB,CAAE,CAAEC,MAAM,CAAE/G,SAAS,CAACoG,OAAQ,CAAE,CAAE,CAAC,CAC5D,CAAC,EACH,CAAC,CACH,CAET,CAAC,CACH,CAEA;AACA,OAAQrG,KAAK,EACX,IAAK,cAAc,CACnB,IAAK,UAAU,CACb,MAAO,CACL2D,KAAK,CAAE,4BAA4B,CACnC0C,OAAO,cACL1G,IAAA,QAAKyE,SAAS,CAAC,cAAc,CAAA0C,QAAA,cAC3BjH,KAAA,QAAKuE,SAAS,CAAC,gBAAgB,CAAA0C,QAAA,eAC7BnH,IAAA,QAAK4H,GAAG,CAAE/G,WAAY,CAACgH,GAAG,CAAC,aAAa,CAACpD,SAAS,CAAC,aAAa,CAAE,CAAC,cACnEvE,KAAA,QAAKuE,SAAS,CAAC,gBAAgB,CAAA0C,QAAA,eAC7BnH,IAAA,MAAAmH,QAAA,CAAG,8EAA4E,CAAG,CAAC,cACnFnH,IAAA,MAAAmH,QAAA,cAAGnH,IAAA,WAAAmH,QAAA,CAAQ,eAAa,CAAQ,CAAC,CAAG,CAAC,cACrCjH,KAAA,OAAAiH,QAAA,eACEnH,IAAA,OAAAmH,QAAA,CAAI,wDAAsD,CAAI,CAAC,cAC/DnH,IAAA,OAAAmH,QAAA,CAAI,mCAAiC,CAAI,CAAC,cAC1CnH,IAAA,OAAAmH,QAAA,CAAI,wDAAsD,CAAI,CAAC,cAC/DnH,IAAA,OAAAmH,QAAA,CAAI,8DAA4D,CAAI,CAAC,EACnE,CAAC,cACLnH,IAAA,MAAAmH,QAAA,CAAG,kGAAgG,CAAG,CAAC,cACvGnH,IAAA,MAAAmH,QAAA,CAAG,gFAA8E,CAAG,CAAC,EAClF,CAAC,EACH,CAAC,CACH,CAET,CAAC,CACH,QACE,MAAO,CACLnD,KAAK,CAAE,qBAAqB,CAC5B0C,OAAO,cACL1G,IAAA,QAAKyE,SAAS,CAAC,cAAc,CAAA0C,QAAA,cAC3BjH,KAAA,QAAKuE,SAAS,CAAC,gBAAgB,CAAA0C,QAAA,eAC7BnH,IAAA,QAAK4H,GAAG,CAAE/G,WAAY,CAACgH,GAAG,CAAC,aAAa,CAACpD,SAAS,CAAC,aAAa,CAAE,CAAC,cACnEvE,KAAA,QAAKuE,SAAS,CAAC,gBAAgB,CAAA0C,QAAA,eAC7BnH,IAAA,MAAAmH,QAAA,CAAG,mDAAiD,CAAG,CAAC,cACxDnH,IAAA,MAAAmH,QAAA,CAAG,kEAAgE,CAAG,CAAC,EACpE,CAAC,EACH,CAAC,CACH,CAET,CAAC,CACL,CACF,CAAC,CAED,KAAM,CAAEnD,KAAK,CAAE0C,OAAQ,CAAC,CAAGiB,cAAc,CAAC,CAAC,CAE3C,mBACE3H,IAAA,QAAKyE,SAAS,CAAC,oBAAoB,CAAC6C,OAAO,CAAEnC,kBAAmB,CAAAgC,QAAA,cAC9DjH,KAAA,QAAKuE,SAAS,CAAC,YAAY,CAAA0C,QAAA,eACzBjH,KAAA,QAAKuE,SAAS,CAAC,mBAAmB,CAAA0C,QAAA,eAChCnH,IAAA,OAAAmH,QAAA,CAAKnD,KAAK,CAAK,CAAC,cAChB9D,KAAA,QAAKuE,SAAS,CAAC,oBAAoB,CAAA0C,QAAA,eACjCjH,KAAA,WACEuE,SAAS,CAAC,oBAAoB,CAC9B6C,OAAO,CAAEjC,gBAAiB,CAC1B,aAAW,cAAc,CAAA8B,QAAA,eAEzBnH,IAAA,UAAY,CAAC,cACbA,IAAA,UAAY,CAAC,cACbA,IAAA,UAAY,CAAC,EACP,CAAC,cACTA,IAAA,WACEyE,SAAS,CAAC,WAAW,CACrB6C,OAAO,CAAE9G,OAAQ,CACjB,aAAW,YAAY,CAAA2G,QAAA,CACxB,MAED,CAAQ,CAAC,EACN,CAAC,CAEL1G,QAAQ,eACPP,KAAA,QAAKuE,SAAS,CAAC,oBAAoB,CAAA0C,QAAA,eACjCjH,KAAA,WAAQoH,OAAO,CAAEf,mBAAoB,CAAC9B,SAAS,CAAC,WAAW,CAAA0C,QAAA,eACzDnH,IAAA,SAAMyE,SAAS,CAAC,WAAW,CAAA0C,QAAA,CAAC,cAAE,CAAM,CAAC,gBAEvC,EAAQ,CAAC,cAETjH,KAAA,WAAQoH,OAAO,CAAEhC,eAAgB,CAACb,SAAS,CAAC,WAAW,CAAA0C,QAAA,eACrDnH,IAAA,QAAK4H,GAAG,CAAC,2BAA2B,CAACC,GAAG,CAAC,KAAK,CAACpD,SAAS,CAAC,WAAW,CAAE,CAAC,kBAEzE,EAAQ,CAAC,CAERlE,WAAW,CAAC8C,UAAU,eACrBnD,KAAA,WAAQoH,OAAO,CAAEvB,iBAAkB,CAACtB,SAAS,CAAC,WAAW,CAAA0C,QAAA,eACvDnH,IAAA,SAAMyE,SAAS,CAAC,WAAW,CAAA0C,QAAA,CAAC,cAAE,CAAM,CAAC,uBAEvC,EAAQ,CACT,cAEDjH,KAAA,WAAQoH,OAAO,CAAErB,kBAAmB,CAACxB,SAAS,CAAC,WAAW,CAAA0C,QAAA,eACxDnH,IAAA,SAAMyE,SAAS,CAAC,WAAW,CAAA0C,QAAA,CAAC,cAAE,CAAM,CAAC,gBAEvC,EAAQ,CAAC,EACN,CACN,EACE,CAAC,cAENnH,IAAA,QAAKyE,SAAS,CAAC,oBAAoB,CAAA0C,QAAA,CAChCT,OAAO,CACL,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvG,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}