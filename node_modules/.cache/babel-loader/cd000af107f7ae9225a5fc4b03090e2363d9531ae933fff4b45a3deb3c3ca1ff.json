{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import githubService from'../services/githubService';import'./PreviewBadge.css';/**\n * PreviewBadge component that displays when the app is deployed from a non-main branch\n * Shows branch name and links to the associated PR\n * Can expand to show detailed PR information, comments, and add new comments\n */import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const PreviewBadge=()=>{const[branchInfo,setBranchInfo]=useState(null);const[prInfo,setPrInfo]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[isExpanded,setIsExpanded]=useState(false);const[comments,setComments]=useState([]);const[loadingComments,setLoadingComments]=useState(false);const[newComment,setNewComment]=useState('');const[submittingComment,setSubmittingComment]=useState(false);const[canComment,setCanComment]=useState(false);const[expandedComments,setExpandedComments]=useState(new Set());const expandedRef=useRef(null);useEffect(()=>{const detectBranchAndPR=async()=>{try{setLoading(true);setError(null);// Detect current branch from environment or URL\nconst currentBranch=getCurrentBranch();if(!currentBranch||currentBranch==='main'){// Not a preview branch, don't show badge\nsetLoading(false);return;}setBranchInfo({name:currentBranch,safeName:currentBranch.replace(/\\//g,'-')});// Try to fetch PR information for this branch\ntry{const prData=await fetchPRForBranch(currentBranch);if(prData){setPrInfo(prData);// Check if user can comment (they need to be authenticated)\nsetCanComment(githubService.isAuth());}}catch(prError){console.debug('Could not fetch PR info:',prError);// Continue without PR info - still show branch badge\n}setLoading(false);}catch(err){console.error('Error detecting branch:',err);setError(err.message);setLoading(false);}};detectBranchAndPR();},[]);// Handle clicks outside the expanded panel to close it\nuseEffect(()=>{const handleClickOutside=event=>{if(expandedRef.current&&!expandedRef.current.contains(event.target)){setIsExpanded(false);}};if(isExpanded){document.addEventListener('mousedown',handleClickOutside);return()=>{document.removeEventListener('mousedown',handleClickOutside);};}},[isExpanded]);const getCurrentBranch=()=>{// First try environment variable (set during build)\nif(process.env.REACT_APP_GITHUB_REF_NAME){return process.env.REACT_APP_GITHUB_REF_NAME;}// Fallback: detect from URL path\nconst path=window.location.pathname;// Match pattern: /sgex/{branch-name}/\nconst match=path.match(/^\\/sgex\\/([^/]+)\\//);if(match&&match[1]!=='main'){const safeBranchName=match[1];// Convert safe branch name back to original branch name\n// This handles the common case where slashes are converted to dashes\n// Note: This is a heuristic and may not be perfect for all edge cases\nlet branchName=safeBranchName;// Common patterns: feature-name -> feature/name, fix-123 -> fix/123\nif(safeBranchName.includes('-')&&!safeBranchName.startsWith('v')&&!safeBranchName.match(/^\\d/)){// Try to detect if this looks like a feature branch\nif(safeBranchName.match(/^(feature|fix|hotfix|bugfix|chore|docs|style|refactor|test)-/)){branchName=safeBranchName.replace(/^([^-]+)-/,'$1/');}}return branchName;}return null;};const fetchPRForBranch=async branchName=>{try{// Get current repository context if available\n// For now, we'll use the main repository\nconst owner='litlfred';const repo='sgex';// Get PR for this specific branch\nconst pr=await githubService.getPullRequestForBranch(owner,repo,branchName);return pr;}catch(error){console.debug('Failed to fetch PR info:',error);return null;}};const fetchComments=async()=>{if(!prInfo)return;setLoadingComments(true);try{// Fetch both review comments and issue comments\nconst[reviewComments,issueComments]=await Promise.all([githubService.getPullRequestComments('litlfred','sgex',prInfo.number).catch(()=>[]),githubService.getPullRequestIssueComments('litlfred','sgex',prInfo.number).catch(()=>[])]);// Combine and sort comments by creation date\nconst allComments=[...reviewComments.map(c=>({...c,type:'review'})),...issueComments.map(c=>({...c,type:'issue'}))].sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));setComments(allComments);}catch(error){console.error('Failed to fetch comments:',error);}finally{setLoadingComments(false);}};const handleBadgeClick=event=>{event.stopPropagation();if(!prInfo){// No PR info, just open GitHub repo\nwindow.open(`https://github.com/litlfred/sgex/tree/${branchInfo.name}`,'_blank');return;}if(!isExpanded){// Expand and fetch comments\nsetIsExpanded(true);if(comments.length===0){fetchComments();}}else{// Already expanded, navigate to PR\nwindow.open(prInfo.html_url,'_blank');}};const handleSubmitComment=async event=>{event.preventDefault();if(!newComment.trim()||!prInfo||!canComment)return;setSubmittingComment(true);try{const comment=await githubService.createPullRequestComment('litlfred','sgex',prInfo.number,newComment.trim());// Add the new comment to the list\nsetComments(prev=>[...prev,{...comment,type:'issue'}]);setNewComment('');}catch(error){console.error('Failed to submit comment:',error);alert('Failed to submit comment. Please try again.');}finally{setSubmittingComment(false);}};const toggleCommentExpansion=commentId=>{setExpandedComments(prev=>{const newSet=new Set(prev);if(newSet.has(commentId)){newSet.delete(commentId);}else{newSet.add(commentId);}return newSet;});};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('en-US',{month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'});};const truncateText=function(text){let maxLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:100;if(text.length<=maxLength)return text;return text.substring(0,maxLength)+'...';};// Don't render anything if loading, error, or not a preview branch\nif(loading||error||!branchInfo){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-badge-container\",ref:expandedRef,children:[/*#__PURE__*/_jsx(\"div\",{className:`preview-badge ${prInfo?'clickable':''} ${isExpanded?'expanded':''}`,onClick:handleBadgeClick,title:isExpanded?\"Click to open PR in GitHub\":prInfo?`Click to expand PR details: ${prInfo.title}`:`Preview branch: ${branchInfo.name}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"badge-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"badge-label\",children:\"Preview:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"badge-branch\",children:branchInfo.name}),prInfo&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"badge-separator\",children:\"|\"}),/*#__PURE__*/_jsx(\"span\",{className:\"badge-pr-title\",children:prInfo.title})]}),prInfo&&/*#__PURE__*/_jsx(\"span\",{className:\"badge-expand-icon\",children:isExpanded?'▼':'▶'})]})}),isExpanded&&prInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"preview-badge-expanded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expanded-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsxs(\"a\",{href:prInfo.html_url,target:\"_blank\",rel:\"noopener noreferrer\",children:[\"#\",prInfo.number,\": \",prInfo.title]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-meta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"pr-state\",\"data-state\":prInfo.state,children:prInfo.state}),/*#__PURE__*/_jsxs(\"span\",{className:\"pr-author\",children:[\"by \",prInfo.user.login]}),/*#__PURE__*/_jsx(\"span\",{className:\"pr-date\",children:formatDate(prInfo.created_at)})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:e=>{e.stopPropagation();setIsExpanded(false);},title:\"Close expanded view\",children:\"\\xD7\"})]}),prInfo.body&&/*#__PURE__*/_jsxs(\"div\",{className:\"pr-description\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"div\",{className:\"pr-body\",children:prInfo.body})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comments-section\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Comments (\",comments.length,\")\"]}),loadingComments?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading comments...\"}):comments.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"comments-list\",children:comments.map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:\"comment\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:comment.user.avatar_url,alt:comment.user.login,className:\"comment-avatar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-author\",children:comment.user.login}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-date\",children:formatDate(comment.created_at)}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-type\",children:comment.type})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-body\",children:expandedComments.has(comment.id)?/*#__PURE__*/_jsxs(\"div\",{className:\"comment-full\",children:[comment.body,/*#__PURE__*/_jsx(\"button\",{className:\"comment-toggle\",onClick:()=>toggleCommentExpansion(comment.id),children:\"Show less\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"comment-preview\",children:[truncateText(comment.body),comment.body.length>100&&/*#__PURE__*/_jsx(\"button\",{className:\"comment-toggle\",onClick:()=>toggleCommentExpansion(comment.id),children:\"Show more\"})]})})]},comment.id))}):/*#__PURE__*/_jsx(\"div\",{className:\"no-comments\",children:\"No comments yet\"}),canComment&&/*#__PURE__*/_jsxs(\"form\",{className:\"comment-form\",onSubmit:handleSubmitComment,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Add Comment\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newComment,onChange:e=>setNewComment(e.target.value),placeholder:\"Write a comment...\",rows:3,disabled:submittingComment}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!newComment.trim()||submittingComment,className:\"submit-comment\",children:submittingComment?'Submitting...':'Comment'})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"expanded-footer\",children:/*#__PURE__*/_jsx(\"a\",{href:prInfo.html_url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"github-link\",children:\"View on GitHub \\u2192\"})})]})]});};export default PreviewBadge;","map":{"version":3,"names":["React","useState","useEffect","useRef","githubService","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PreviewBadge","branchInfo","setBranchInfo","prInfo","setPrInfo","loading","setLoading","error","setError","isExpanded","setIsExpanded","comments","setComments","loadingComments","setLoadingComments","newComment","setNewComment","submittingComment","setSubmittingComment","canComment","setCanComment","expandedComments","setExpandedComments","Set","expandedRef","detectBranchAndPR","currentBranch","getCurrentBranch","name","safeName","replace","prData","fetchPRForBranch","isAuth","prError","console","debug","err","message","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","process","env","REACT_APP_GITHUB_REF_NAME","path","window","location","pathname","match","safeBranchName","branchName","includes","startsWith","owner","repo","pr","getPullRequestForBranch","fetchComments","reviewComments","issueComments","Promise","all","getPullRequestComments","number","catch","getPullRequestIssueComments","allComments","map","c","type","sort","a","b","Date","created_at","handleBadgeClick","stopPropagation","open","length","html_url","handleSubmitComment","preventDefault","trim","comment","createPullRequestComment","prev","alert","toggleCommentExpansion","commentId","newSet","has","delete","add","formatDate","dateString","toLocaleDateString","month","day","hour","minute","truncateText","text","maxLength","arguments","undefined","substring","className","ref","children","onClick","title","href","rel","state","user","login","e","body","src","avatar_url","alt","id","onSubmit","value","onChange","placeholder","rows","disabled"],"sources":["/home/runner/work/sgex/sgex/src/components/PreviewBadge.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport githubService from '../services/githubService';\nimport './PreviewBadge.css';\n\n/**\n * PreviewBadge component that displays when the app is deployed from a non-main branch\n * Shows branch name and links to the associated PR\n * Can expand to show detailed PR information, comments, and add new comments\n */\nconst PreviewBadge = () => {\n  const [branchInfo, setBranchInfo] = useState(null);\n  const [prInfo, setPrInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [loadingComments, setLoadingComments] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [submittingComment, setSubmittingComment] = useState(false);\n  const [canComment, setCanComment] = useState(false);\n  const [expandedComments, setExpandedComments] = useState(new Set());\n  const expandedRef = useRef(null);\n\n  useEffect(() => {\n    const detectBranchAndPR = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Detect current branch from environment or URL\n        const currentBranch = getCurrentBranch();\n        \n        if (!currentBranch || currentBranch === 'main') {\n          // Not a preview branch, don't show badge\n          setLoading(false);\n          return;\n        }\n\n        setBranchInfo({\n          name: currentBranch,\n          safeName: currentBranch.replace(/\\//g, '-')\n        });\n\n        // Try to fetch PR information for this branch\n        try {\n          const prData = await fetchPRForBranch(currentBranch);\n          if (prData) {\n            setPrInfo(prData);\n            // Check if user can comment (they need to be authenticated)\n            setCanComment(githubService.isAuth());\n          }\n        } catch (prError) {\n          console.debug('Could not fetch PR info:', prError);\n          // Continue without PR info - still show branch badge\n        }\n\n        setLoading(false);\n      } catch (err) {\n        console.error('Error detecting branch:', err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    detectBranchAndPR();\n  }, []);\n\n  // Handle clicks outside the expanded panel to close it\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (expandedRef.current && !expandedRef.current.contains(event.target)) {\n        setIsExpanded(false);\n      }\n    };\n\n    if (isExpanded) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [isExpanded]);\n\n  const getCurrentBranch = () => {\n    // First try environment variable (set during build)\n    if (process.env.REACT_APP_GITHUB_REF_NAME) {\n      return process.env.REACT_APP_GITHUB_REF_NAME;\n    }\n    \n    // Fallback: detect from URL path\n    const path = window.location.pathname;\n    \n    // Match pattern: /sgex/{branch-name}/\n    const match = path.match(/^\\/sgex\\/([^/]+)\\//);\n    if (match && match[1] !== 'main') {\n      const safeBranchName = match[1];\n      \n      // Convert safe branch name back to original branch name\n      // This handles the common case where slashes are converted to dashes\n      // Note: This is a heuristic and may not be perfect for all edge cases\n      let branchName = safeBranchName;\n      \n      // Common patterns: feature-name -> feature/name, fix-123 -> fix/123\n      if (safeBranchName.includes('-') && !safeBranchName.startsWith('v') && !safeBranchName.match(/^\\d/)) {\n        // Try to detect if this looks like a feature branch\n        if (safeBranchName.match(/^(feature|fix|hotfix|bugfix|chore|docs|style|refactor|test)-/)) {\n          branchName = safeBranchName.replace(/^([^-]+)-/, '$1/');\n        }\n      }\n      \n      return branchName;\n    }\n\n    return null;\n  };\n\n  const fetchPRForBranch = async (branchName) => {\n    try {\n      // Get current repository context if available\n      // For now, we'll use the main repository\n      const owner = 'litlfred';\n      const repo = 'sgex';\n\n      // Get PR for this specific branch\n      const pr = await githubService.getPullRequestForBranch(owner, repo, branchName);\n      \n      return pr;\n    } catch (error) {\n      console.debug('Failed to fetch PR info:', error);\n      return null;\n    }\n  };\n\n  const fetchComments = async () => {\n    if (!prInfo) return;\n    \n    setLoadingComments(true);\n    try {\n      // Fetch both review comments and issue comments\n      const [reviewComments, issueComments] = await Promise.all([\n        githubService.getPullRequestComments('litlfred', 'sgex', prInfo.number).catch(() => []),\n        githubService.getPullRequestIssueComments('litlfred', 'sgex', prInfo.number).catch(() => [])\n      ]);\n\n      // Combine and sort comments by creation date\n      const allComments = [\n        ...reviewComments.map(c => ({ ...c, type: 'review' })),\n        ...issueComments.map(c => ({ ...c, type: 'issue' }))\n      ].sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n\n      setComments(allComments);\n    } catch (error) {\n      console.error('Failed to fetch comments:', error);\n    } finally {\n      setLoadingComments(false);\n    }\n  };\n\n  const handleBadgeClick = (event) => {\n    event.stopPropagation();\n    \n    if (!prInfo) {\n      // No PR info, just open GitHub repo\n      window.open(`https://github.com/litlfred/sgex/tree/${branchInfo.name}`, '_blank');\n      return;\n    }\n\n    if (!isExpanded) {\n      // Expand and fetch comments\n      setIsExpanded(true);\n      if (comments.length === 0) {\n        fetchComments();\n      }\n    } else {\n      // Already expanded, navigate to PR\n      window.open(prInfo.html_url, '_blank');\n    }\n  };\n\n  const handleSubmitComment = async (event) => {\n    event.preventDefault();\n    if (!newComment.trim() || !prInfo || !canComment) return;\n\n    setSubmittingComment(true);\n    try {\n      const comment = await githubService.createPullRequestComment(\n        'litlfred', \n        'sgex', \n        prInfo.number, \n        newComment.trim()\n      );\n      \n      // Add the new comment to the list\n      setComments(prev => [...prev, { ...comment, type: 'issue' }]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Failed to submit comment:', error);\n      alert('Failed to submit comment. Please try again.');\n    } finally {\n      setSubmittingComment(false);\n    }\n  };\n\n  const toggleCommentExpansion = (commentId) => {\n    setExpandedComments(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(commentId)) {\n        newSet.delete(commentId);\n      } else {\n        newSet.add(commentId);\n      }\n      return newSet;\n    });\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const truncateText = (text, maxLength = 100) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  // Don't render anything if loading, error, or not a preview branch\n  if (loading || error || !branchInfo) {\n    return null;\n  }\n\n  return (\n    <div className=\"preview-badge-container\" ref={expandedRef}>\n      <div \n        className={`preview-badge ${prInfo ? 'clickable' : ''} ${isExpanded ? 'expanded' : ''}`}\n        onClick={handleBadgeClick}\n        title={isExpanded ? \"Click to open PR in GitHub\" : prInfo ? `Click to expand PR details: ${prInfo.title}` : `Preview branch: ${branchInfo.name}`}\n      >\n        <div className=\"badge-content\">\n          <span className=\"badge-label\">Preview:</span>\n          <span className=\"badge-branch\">{branchInfo.name}</span>\n          {prInfo && (\n            <>\n              <span className=\"badge-separator\">|</span>\n              <span className=\"badge-pr-title\">{prInfo.title}</span>\n            </>\n          )}\n          {prInfo && (\n            <span className=\"badge-expand-icon\">{isExpanded ? '▼' : '▶'}</span>\n          )}\n        </div>\n      </div>\n\n      {isExpanded && prInfo && (\n        <div className=\"preview-badge-expanded\">\n          <div className=\"expanded-header\">\n            <div className=\"pr-info\">\n              <h3>\n                <a href={prInfo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  #{prInfo.number}: {prInfo.title}\n                </a>\n              </h3>\n              <div className=\"pr-meta\">\n                <span className=\"pr-state\" data-state={prInfo.state}>{prInfo.state}</span>\n                <span className=\"pr-author\">by {prInfo.user.login}</span>\n                <span className=\"pr-date\">{formatDate(prInfo.created_at)}</span>\n              </div>\n            </div>\n            <button \n              className=\"close-button\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setIsExpanded(false);\n              }}\n              title=\"Close expanded view\"\n            >\n              ×\n            </button>\n          </div>\n\n          {prInfo.body && (\n            <div className=\"pr-description\">\n              <h4>Description</h4>\n              <div className=\"pr-body\">{prInfo.body}</div>\n            </div>\n          )}\n\n          <div className=\"comments-section\">\n            <h4>Comments ({comments.length})</h4>\n            \n            {loadingComments ? (\n              <div className=\"loading\">Loading comments...</div>\n            ) : comments.length > 0 ? (\n              <div className=\"comments-list\">\n                {comments.map((comment) => (\n                  <div key={comment.id} className=\"comment\">\n                    <div className=\"comment-header\">\n                      <img \n                        src={comment.user.avatar_url} \n                        alt={comment.user.login}\n                        className=\"comment-avatar\"\n                      />\n                      <span className=\"comment-author\">{comment.user.login}</span>\n                      <span className=\"comment-date\">{formatDate(comment.created_at)}</span>\n                      <span className=\"comment-type\">{comment.type}</span>\n                    </div>\n                    <div className=\"comment-body\">\n                      {expandedComments.has(comment.id) ? (\n                        <div className=\"comment-full\">\n                          {comment.body}\n                          <button \n                            className=\"comment-toggle\"\n                            onClick={() => toggleCommentExpansion(comment.id)}\n                          >\n                            Show less\n                          </button>\n                        </div>\n                      ) : (\n                        <div className=\"comment-preview\">\n                          {truncateText(comment.body)}\n                          {comment.body.length > 100 && (\n                            <button \n                              className=\"comment-toggle\"\n                              onClick={() => toggleCommentExpansion(comment.id)}\n                            >\n                              Show more\n                            </button>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"no-comments\">No comments yet</div>\n            )}\n\n            {canComment && (\n              <form className=\"comment-form\" onSubmit={handleSubmitComment}>\n                <h4>Add Comment</h4>\n                <textarea\n                  value={newComment}\n                  onChange={(e) => setNewComment(e.target.value)}\n                  placeholder=\"Write a comment...\"\n                  rows={3}\n                  disabled={submittingComment}\n                />\n                <div className=\"comment-form-actions\">\n                  <button \n                    type=\"submit\" \n                    disabled={!newComment.trim() || submittingComment}\n                    className=\"submit-comment\"\n                  >\n                    {submittingComment ? 'Submitting...' : 'Comment'}\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n\n          <div className=\"expanded-footer\">\n            <a href={prInfo.html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-link\">\n              View on GitHub →\n            </a>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PreviewBadge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}