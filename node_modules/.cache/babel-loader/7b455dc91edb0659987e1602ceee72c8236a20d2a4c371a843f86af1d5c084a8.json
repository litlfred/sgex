{"ast":null,"code":"import { isNumber } from 'min-dash';\nimport { attr as svgAttr, create as svgCreate } from 'tiny-svg';\n\n/**\n * @typedef {(string|number)[]} Component\n *\n * @typedef {import('../util/Types').Point} Point\n */\n\n/**\n * @param {Component[] | Component[][]} elements\n *\n * @return {string}\n */\nexport function componentsToPath(elements) {\n  return elements.flat().join(',').replace(/,?([A-Za-z]),?/g, '$1');\n}\n\n/**\n * @param {Point[]} points\n *\n * @return {string}\n */\nexport function toSVGPoints(points) {\n  var result = '';\n  for (var i = 0, p; p = points[i]; i++) {\n    result += p.x + ',' + p.y + ' ';\n  }\n  return result;\n}\n\n/**\n * @param {Point} point\n *\n * @return {Component[]}\n */\nfunction move(point) {\n  return ['M', point.x, point.y];\n}\n\n/**\n * @param {Point} point\n *\n * @return {Component[]}\n */\nfunction lineTo(point) {\n  return ['L', point.x, point.y];\n}\n\n/**\n * @param {Point} p1\n * @param {Point} p2\n * @param {Point} p3\n *\n * @return {Component[]}\n */\nfunction curveTo(p1, p2, p3) {\n  return ['C', p1.x, p1.y, p2.x, p2.y, p3.x, p3.y];\n}\n\n/**\n * @param {Point[]} waypoints\n * @param {number} [cornerRadius]\n * @return {Component[][]}\n */\nfunction drawPath(waypoints, cornerRadius) {\n  const pointCount = waypoints.length;\n  const path = [move(waypoints[0])];\n  for (let i = 1; i < pointCount; i++) {\n    const pointBefore = waypoints[i - 1];\n    const point = waypoints[i];\n    const pointAfter = waypoints[i + 1];\n    if (!pointAfter || !cornerRadius) {\n      path.push(lineTo(point));\n      continue;\n    }\n    const effectiveRadius = Math.min(cornerRadius, vectorLength(point.x - pointBefore.x, point.y - pointBefore.y), vectorLength(pointAfter.x - point.x, pointAfter.y - point.y));\n    if (!effectiveRadius) {\n      path.push(lineTo(point));\n      continue;\n    }\n    const beforePoint = getPointAtLength(point, pointBefore, effectiveRadius);\n    const beforePoint2 = getPointAtLength(point, pointBefore, effectiveRadius * .5);\n    const afterPoint = getPointAtLength(point, pointAfter, effectiveRadius);\n    const afterPoint2 = getPointAtLength(point, pointAfter, effectiveRadius * .5);\n    path.push(lineTo(beforePoint));\n    path.push(curveTo(beforePoint2, afterPoint2, afterPoint));\n  }\n  return path;\n}\nfunction getPointAtLength(start, end, length) {\n  const deltaX = end.x - start.x;\n  const deltaY = end.y - start.y;\n  const totalLength = vectorLength(deltaX, deltaY);\n  const percent = length / totalLength;\n  return {\n    x: start.x + deltaX * percent,\n    y: start.y + deltaY * percent\n  };\n}\nfunction vectorLength(x, y) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n}\n\n/**\n * @param {Point[]} points\n * @param {number|Object} [attrs]\n * @param {number} [radius]\n *\n * @return {SVGElement}\n */\nexport function createLine(points, attrs, radius) {\n  if (isNumber(attrs)) {\n    radius = attrs;\n    attrs = null;\n  }\n  if (!attrs) {\n    attrs = {};\n  }\n  const line = svgCreate('path', attrs);\n  if (isNumber(radius)) {\n    line.dataset.cornerRadius = String(radius);\n  }\n  return updateLine(line, points);\n}\n\n/**\n * @param {SVGElement} gfx\n * @param {Point[]} points\n *\n * @return {SVGElement}\n */\nexport function updateLine(gfx, points) {\n  const cornerRadius = parseInt(gfx.dataset.cornerRadius, 10) || 0;\n  svgAttr(gfx, {\n    d: componentsToPath(drawPath(points, cornerRadius))\n  });\n  return gfx;\n}","map":{"version":3,"names":["isNumber","attr","svgAttr","create","svgCreate","componentsToPath","elements","flat","join","replace","toSVGPoints","points","result","i","p","x","y","move","point","lineTo","curveTo","p1","p2","p3","drawPath","waypoints","cornerRadius","pointCount","length","path","pointBefore","pointAfter","push","effectiveRadius","Math","min","vectorLength","beforePoint","getPointAtLength","beforePoint2","afterPoint","afterPoint2","start","end","deltaX","deltaY","totalLength","percent","sqrt","pow","createLine","attrs","radius","line","dataset","String","updateLine","gfx","parseInt","d"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/util/RenderUtil.js"],"sourcesContent":["import {\n  isNumber\n} from 'min-dash';\n\nimport {\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\n\n/**\n * @typedef {(string|number)[]} Component\n *\n * @typedef {import('../util/Types').Point} Point\n */\n\n/**\n * @param {Component[] | Component[][]} elements\n *\n * @return {string}\n */\nexport function componentsToPath(elements) {\n  return elements.flat().join(',').replace(/,?([A-Za-z]),?/g, '$1');\n}\n\n/**\n * @param {Point[]} points\n *\n * @return {string}\n */\nexport function toSVGPoints(points) {\n  var result = '';\n\n  for (var i = 0, p; (p = points[i]); i++) {\n    result += p.x + ',' + p.y + ' ';\n  }\n\n  return result;\n}\n\n/**\n * @param {Point} point\n *\n * @return {Component[]}\n */\nfunction move(point) {\n  return [ 'M', point.x, point.y ];\n}\n\n/**\n * @param {Point} point\n *\n * @return {Component[]}\n */\nfunction lineTo(point) {\n  return [ 'L', point.x, point.y ];\n}\n\n/**\n * @param {Point} p1\n * @param {Point} p2\n * @param {Point} p3\n *\n * @return {Component[]}\n */\nfunction curveTo(p1, p2, p3) {\n  return [ 'C', p1.x, p1.y, p2.x, p2.y, p3.x, p3.y ];\n}\n\n/**\n * @param {Point[]} waypoints\n * @param {number} [cornerRadius]\n * @return {Component[][]}\n */\nfunction drawPath(waypoints, cornerRadius) {\n  const pointCount = waypoints.length;\n\n  const path = [ move(waypoints[0]) ];\n\n  for (let i = 1; i < pointCount; i++) {\n\n    const pointBefore = waypoints[i - 1];\n    const point = waypoints[i];\n    const pointAfter = waypoints[i + 1];\n\n    if (!pointAfter || !cornerRadius) {\n      path.push(lineTo(point));\n\n      continue;\n    }\n\n    const effectiveRadius = Math.min(\n      cornerRadius,\n      vectorLength(point.x - pointBefore.x, point.y - pointBefore.y),\n      vectorLength(pointAfter.x - point.x, pointAfter.y - point.y)\n    );\n\n    if (!effectiveRadius) {\n      path.push(lineTo(point));\n\n      continue;\n    }\n\n    const beforePoint = getPointAtLength(point, pointBefore, effectiveRadius);\n    const beforePoint2 = getPointAtLength(point, pointBefore, effectiveRadius * .5);\n\n    const afterPoint = getPointAtLength(point, pointAfter, effectiveRadius);\n    const afterPoint2 = getPointAtLength(point, pointAfter, effectiveRadius * .5);\n\n    path.push(lineTo(beforePoint));\n    path.push(curveTo(beforePoint2, afterPoint2, afterPoint));\n  }\n\n  return path;\n}\n\nfunction getPointAtLength(start, end, length) {\n\n  const deltaX = end.x - start.x;\n  const deltaY = end.y - start.y;\n\n  const totalLength = vectorLength(deltaX, deltaY);\n\n  const percent = length / totalLength;\n\n  return {\n    x: start.x + deltaX * percent,\n    y: start.y + deltaY * percent\n  };\n}\n\nfunction vectorLength(x, y) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n}\n\n/**\n * @param {Point[]} points\n * @param {number|Object} [attrs]\n * @param {number} [radius]\n *\n * @return {SVGElement}\n */\nexport function createLine(points, attrs, radius) {\n\n  if (isNumber(attrs)) {\n    radius = attrs;\n    attrs = null;\n  }\n\n  if (!attrs) {\n    attrs = {};\n  }\n\n  const line = svgCreate('path', attrs);\n\n  if (isNumber(radius)) {\n    line.dataset.cornerRadius = String(radius);\n  }\n\n  return updateLine(line, points);\n}\n\n/**\n * @param {SVGElement} gfx\n * @param {Point[]} points\n *\n * @return {SVGElement}\n */\nexport function updateLine(gfx, points) {\n\n  const cornerRadius = parseInt(gfx.dataset.cornerRadius, 10) || 0;\n\n  svgAttr(gfx, {\n    d: componentsToPath(drawPath(points, cornerRadius))\n  });\n\n  return gfx;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}