{"ast":null,"code":"'use strict';\n\nconst UUID_REG = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nconst URN_REG = /([0-9a-z\\u017F\\u212A][\\x2D0-9a-z\\u017F\\u212A]{0,31}):((?:[!\\$'-\\.0-;=@-Z_a-z\\u017F\\u212A]|%[0-9a-f]{2})+)/i;\nfunction isSecure(wsComponents) {\n  return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === 'wss';\n}\nfunction httpParse(components) {\n  if (!components.host) {\n    components.error = components.error || 'HTTP URIs must have a host.';\n  }\n  return components;\n}\nfunction httpSerialize(components) {\n  const secure = String(components.scheme).toLowerCase() === 'https';\n\n  // normalize the default port\n  if (components.port === (secure ? 443 : 80) || components.port === '') {\n    components.port = undefined;\n  }\n\n  // normalize the empty path\n  if (!components.path) {\n    components.path = '/';\n  }\n\n  // NOTE: We do not parse query strings for HTTP URIs\n  // as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n  // and not the HTTP spec.\n\n  return components;\n}\nfunction wsParse(wsComponents) {\n  // indicate if the secure flag is set\n  wsComponents.secure = isSecure(wsComponents);\n\n  // construct resouce name\n  wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n  wsComponents.path = undefined;\n  wsComponents.query = undefined;\n  return wsComponents;\n}\nfunction wsSerialize(wsComponents) {\n  // normalize the default port\n  if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === '') {\n    wsComponents.port = undefined;\n  }\n\n  // ensure scheme matches secure flag\n  if (typeof wsComponents.secure === 'boolean') {\n    wsComponents.scheme = wsComponents.secure ? 'wss' : 'ws';\n    wsComponents.secure = undefined;\n  }\n\n  // reconstruct path from resource name\n  if (wsComponents.resourceName) {\n    const [path, query] = wsComponents.resourceName.split('?');\n    wsComponents.path = path && path !== '/' ? path : undefined;\n    wsComponents.query = query;\n    wsComponents.resourceName = undefined;\n  }\n\n  // forbid fragment component\n  wsComponents.fragment = undefined;\n  return wsComponents;\n}\nfunction urnParse(urnComponents, options) {\n  if (!urnComponents.path) {\n    urnComponents.error = 'URN can not be parsed';\n    return urnComponents;\n  }\n  const matches = urnComponents.path.match(URN_REG);\n  if (matches) {\n    const scheme = options.scheme || urnComponents.scheme || 'urn';\n    urnComponents.nid = matches[1].toLowerCase();\n    urnComponents.nss = matches[2];\n    const urnScheme = \"\".concat(scheme, \":\").concat(options.nid || urnComponents.nid);\n    const schemeHandler = SCHEMES[urnScheme];\n    urnComponents.path = undefined;\n    if (schemeHandler) {\n      urnComponents = schemeHandler.parse(urnComponents, options);\n    }\n  } else {\n    urnComponents.error = urnComponents.error || 'URN can not be parsed.';\n  }\n  return urnComponents;\n}\nfunction urnSerialize(urnComponents, options) {\n  const scheme = options.scheme || urnComponents.scheme || 'urn';\n  const nid = urnComponents.nid.toLowerCase();\n  const urnScheme = \"\".concat(scheme, \":\").concat(options.nid || nid);\n  const schemeHandler = SCHEMES[urnScheme];\n  if (schemeHandler) {\n    urnComponents = schemeHandler.serialize(urnComponents, options);\n  }\n  const uriComponents = urnComponents;\n  const nss = urnComponents.nss;\n  uriComponents.path = \"\".concat(nid || options.nid, \":\").concat(nss);\n  options.skipEscape = true;\n  return uriComponents;\n}\nfunction urnuuidParse(urnComponents, options) {\n  const uuidComponents = urnComponents;\n  uuidComponents.uuid = uuidComponents.nss;\n  uuidComponents.nss = undefined;\n  if (!options.tolerant && (!uuidComponents.uuid || !UUID_REG.test(uuidComponents.uuid))) {\n    uuidComponents.error = uuidComponents.error || 'UUID is not valid.';\n  }\n  return uuidComponents;\n}\nfunction urnuuidSerialize(uuidComponents) {\n  const urnComponents = uuidComponents;\n  // normalize UUID\n  urnComponents.nss = (uuidComponents.uuid || '').toLowerCase();\n  return urnComponents;\n}\nconst http = {\n  scheme: 'http',\n  domainHost: true,\n  parse: httpParse,\n  serialize: httpSerialize\n};\nconst https = {\n  scheme: 'https',\n  domainHost: http.domainHost,\n  parse: httpParse,\n  serialize: httpSerialize\n};\nconst ws = {\n  scheme: 'ws',\n  domainHost: true,\n  parse: wsParse,\n  serialize: wsSerialize\n};\nconst wss = {\n  scheme: 'wss',\n  domainHost: ws.domainHost,\n  parse: ws.parse,\n  serialize: ws.serialize\n};\nconst urn = {\n  scheme: 'urn',\n  parse: urnParse,\n  serialize: urnSerialize,\n  skipNormalize: true\n};\nconst urnuuid = {\n  scheme: 'urn:uuid',\n  parse: urnuuidParse,\n  serialize: urnuuidSerialize,\n  skipNormalize: true\n};\nconst SCHEMES = {\n  http,\n  https,\n  ws,\n  wss,\n  urn,\n  'urn:uuid': urnuuid\n};\nmodule.exports = SCHEMES;","map":{"version":3,"names":["UUID_REG","URN_REG","isSecure","wsComponents","secure","String","scheme","toLowerCase","httpParse","components","host","error","httpSerialize","port","undefined","path","wsParse","resourceName","query","wsSerialize","split","fragment","urnParse","urnComponents","options","matches","match","nid","nss","urnScheme","concat","schemeHandler","SCHEMES","parse","urnSerialize","serialize","uriComponents","skipEscape","urnuuidParse","uuidComponents","uuid","tolerant","test","urnuuidSerialize","http","domainHost","https","ws","wss","urn","skipNormalize","urnuuid","module","exports"],"sources":["/home/runner/work/sgex/sgex/node_modules/fast-uri/lib/schemes.js"],"sourcesContent":["'use strict'\n\nconst UUID_REG = /^[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}$/iu\nconst URN_REG = /([\\da-z][\\d\\-a-z]{0,31}):((?:[\\w!$'()*+,\\-.:;=@]|%[\\da-f]{2})+)/iu\n\nfunction isSecure (wsComponents) {\n  return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === 'wss'\n}\n\nfunction httpParse (components) {\n  if (!components.host) {\n    components.error = components.error || 'HTTP URIs must have a host.'\n  }\n\n  return components\n}\n\nfunction httpSerialize (components) {\n  const secure = String(components.scheme).toLowerCase() === 'https'\n\n  // normalize the default port\n  if (components.port === (secure ? 443 : 80) || components.port === '') {\n    components.port = undefined\n  }\n\n  // normalize the empty path\n  if (!components.path) {\n    components.path = '/'\n  }\n\n  // NOTE: We do not parse query strings for HTTP URIs\n  // as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n  // and not the HTTP spec.\n\n  return components\n}\n\nfunction wsParse (wsComponents) {\n// indicate if the secure flag is set\n  wsComponents.secure = isSecure(wsComponents)\n\n  // construct resouce name\n  wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '')\n  wsComponents.path = undefined\n  wsComponents.query = undefined\n\n  return wsComponents\n}\n\nfunction wsSerialize (wsComponents) {\n// normalize the default port\n  if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === '') {\n    wsComponents.port = undefined\n  }\n\n  // ensure scheme matches secure flag\n  if (typeof wsComponents.secure === 'boolean') {\n    wsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws')\n    wsComponents.secure = undefined\n  }\n\n  // reconstruct path from resource name\n  if (wsComponents.resourceName) {\n    const [path, query] = wsComponents.resourceName.split('?')\n    wsComponents.path = (path && path !== '/' ? path : undefined)\n    wsComponents.query = query\n    wsComponents.resourceName = undefined\n  }\n\n  // forbid fragment component\n  wsComponents.fragment = undefined\n\n  return wsComponents\n}\n\nfunction urnParse (urnComponents, options) {\n  if (!urnComponents.path) {\n    urnComponents.error = 'URN can not be parsed'\n    return urnComponents\n  }\n  const matches = urnComponents.path.match(URN_REG)\n  if (matches) {\n    const scheme = options.scheme || urnComponents.scheme || 'urn'\n    urnComponents.nid = matches[1].toLowerCase()\n    urnComponents.nss = matches[2]\n    const urnScheme = `${scheme}:${options.nid || urnComponents.nid}`\n    const schemeHandler = SCHEMES[urnScheme]\n    urnComponents.path = undefined\n\n    if (schemeHandler) {\n      urnComponents = schemeHandler.parse(urnComponents, options)\n    }\n  } else {\n    urnComponents.error = urnComponents.error || 'URN can not be parsed.'\n  }\n\n  return urnComponents\n}\n\nfunction urnSerialize (urnComponents, options) {\n  const scheme = options.scheme || urnComponents.scheme || 'urn'\n  const nid = urnComponents.nid.toLowerCase()\n  const urnScheme = `${scheme}:${options.nid || nid}`\n  const schemeHandler = SCHEMES[urnScheme]\n\n  if (schemeHandler) {\n    urnComponents = schemeHandler.serialize(urnComponents, options)\n  }\n\n  const uriComponents = urnComponents\n  const nss = urnComponents.nss\n  uriComponents.path = `${nid || options.nid}:${nss}`\n\n  options.skipEscape = true\n  return uriComponents\n}\n\nfunction urnuuidParse (urnComponents, options) {\n  const uuidComponents = urnComponents\n  uuidComponents.uuid = uuidComponents.nss\n  uuidComponents.nss = undefined\n\n  if (!options.tolerant && (!uuidComponents.uuid || !UUID_REG.test(uuidComponents.uuid))) {\n    uuidComponents.error = uuidComponents.error || 'UUID is not valid.'\n  }\n\n  return uuidComponents\n}\n\nfunction urnuuidSerialize (uuidComponents) {\n  const urnComponents = uuidComponents\n  // normalize UUID\n  urnComponents.nss = (uuidComponents.uuid || '').toLowerCase()\n  return urnComponents\n}\n\nconst http = {\n  scheme: 'http',\n  domainHost: true,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst https = {\n  scheme: 'https',\n  domainHost: http.domainHost,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst ws = {\n  scheme: 'ws',\n  domainHost: true,\n  parse: wsParse,\n  serialize: wsSerialize\n}\n\nconst wss = {\n  scheme: 'wss',\n  domainHost: ws.domainHost,\n  parse: ws.parse,\n  serialize: ws.serialize\n}\n\nconst urn = {\n  scheme: 'urn',\n  parse: urnParse,\n  serialize: urnSerialize,\n  skipNormalize: true\n}\n\nconst urnuuid = {\n  scheme: 'urn:uuid',\n  parse: urnuuidParse,\n  serialize: urnuuidSerialize,\n  skipNormalize: true\n}\n\nconst SCHEMES = {\n  http,\n  https,\n  ws,\n  wss,\n  urn,\n  'urn:uuid': urnuuid\n}\n\nmodule.exports = SCHEMES\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}