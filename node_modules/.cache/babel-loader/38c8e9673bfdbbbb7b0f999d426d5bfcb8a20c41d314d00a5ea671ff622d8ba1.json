{"ast":null,"code":"import { assign } from 'min-dash';\nimport ICONS from './AlignElementsIcons';\n\n/**\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\n * @typedef {import('diagram-js/lib/features/context-pad/ContextPad').default} ContextPad\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenu').default} PopupMenu\n * @typedef {import('diagram-js/lib/i18n/translate/translate').default} Translate\n *\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('diagram-js/lib/features/context-pad/ContextPad').ContextPadEntries} ContextPadEntries\n * @typedef {import('diagram-js/lib/features/context-pad/ContextPadProvider').default<Element>} ContextPadProvider\n */\n\nvar LOW_PRIORITY = 900;\n\n/**\n * A provider for the `Align elements` context pad entry.\n *\n * @implements {ContextPadProvider}\n *\n * @param {ContextPad} contextPad\n * @param {PopupMenu} popupMenu\n * @param {Translate} translate\n * @param {Canvas} canvas\n */\nexport default function AlignElementsContextPadProvider(contextPad, popupMenu, translate, canvas) {\n  contextPad.registerProvider(LOW_PRIORITY, this);\n  this._contextPad = contextPad;\n  this._popupMenu = popupMenu;\n  this._translate = translate;\n  this._canvas = canvas;\n}\nAlignElementsContextPadProvider.$inject = ['contextPad', 'popupMenu', 'translate', 'canvas'];\n\n/**\n * @param {Element[]} elements\n *\n * @return {ContextPadEntries}\n */\nAlignElementsContextPadProvider.prototype.getMultiElementContextPadEntries = function (elements) {\n  var actions = {};\n  if (this._isAllowed(elements)) {\n    assign(actions, this._getEntries(elements));\n  }\n  return actions;\n};\nAlignElementsContextPadProvider.prototype._isAllowed = function (elements) {\n  return !this._popupMenu.isEmpty(elements, 'align-elements');\n};\nAlignElementsContextPadProvider.prototype._getEntries = function () {\n  var self = this;\n  return {\n    'align-elements': {\n      group: 'align-elements',\n      title: self._translate('Align elements'),\n      html: \"<div class=\\\"entry\\\">\".concat(ICONS['align'], \"</div>\"),\n      action: {\n        click: function (event, target) {\n          var position = self._getMenuPosition(target);\n          assign(position, {\n            cursor: {\n              x: event.x,\n              y: event.y\n            }\n          });\n          self._popupMenu.open(target, 'align-elements', position);\n        }\n      }\n    }\n  };\n};\nAlignElementsContextPadProvider.prototype._getMenuPosition = function (elements) {\n  var Y_OFFSET = 5;\n  var pad = this._contextPad.getPad(elements).html;\n  var padRect = pad.getBoundingClientRect();\n  var pos = {\n    x: padRect.left,\n    y: padRect.bottom + Y_OFFSET\n  };\n  return pos;\n};","map":{"version":3,"names":["assign","ICONS","LOW_PRIORITY","AlignElementsContextPadProvider","contextPad","popupMenu","translate","canvas","registerProvider","_contextPad","_popupMenu","_translate","_canvas","$inject","prototype","getMultiElementContextPadEntries","elements","actions","_isAllowed","_getEntries","isEmpty","self","group","title","html","concat","action","click","event","target","position","_getMenuPosition","cursor","x","y","open","Y_OFFSET","pad","getPad","padRect","getBoundingClientRect","pos","left","bottom"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/align-elements/AlignElementsContextPadProvider.js"],"sourcesContent":["import {\n  assign\n} from 'min-dash';\n\nimport ICONS from './AlignElementsIcons';\n\n/**\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\n * @typedef {import('diagram-js/lib/features/context-pad/ContextPad').default} ContextPad\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenu').default} PopupMenu\n * @typedef {import('diagram-js/lib/i18n/translate/translate').default} Translate\n *\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('diagram-js/lib/features/context-pad/ContextPad').ContextPadEntries} ContextPadEntries\n * @typedef {import('diagram-js/lib/features/context-pad/ContextPadProvider').default<Element>} ContextPadProvider\n */\n\nvar LOW_PRIORITY = 900;\n\n/**\n * A provider for the `Align elements` context pad entry.\n *\n * @implements {ContextPadProvider}\n *\n * @param {ContextPad} contextPad\n * @param {PopupMenu} popupMenu\n * @param {Translate} translate\n * @param {Canvas} canvas\n */\nexport default function AlignElementsContextPadProvider(contextPad, popupMenu, translate, canvas) {\n\n  contextPad.registerProvider(LOW_PRIORITY, this);\n\n  this._contextPad = contextPad;\n  this._popupMenu = popupMenu;\n  this._translate = translate;\n  this._canvas = canvas;\n}\n\nAlignElementsContextPadProvider.$inject = [\n  'contextPad',\n  'popupMenu',\n  'translate',\n  'canvas'\n];\n\n/**\n * @param {Element[]} elements\n *\n * @return {ContextPadEntries}\n */\nAlignElementsContextPadProvider.prototype.getMultiElementContextPadEntries = function(elements) {\n  var actions = {};\n\n  if (this._isAllowed(elements)) {\n    assign(actions, this._getEntries(elements));\n  }\n\n  return actions;\n};\n\nAlignElementsContextPadProvider.prototype._isAllowed = function(elements) {\n  return !this._popupMenu.isEmpty(elements, 'align-elements');\n};\n\nAlignElementsContextPadProvider.prototype._getEntries = function() {\n  var self = this;\n\n  return {\n    'align-elements': {\n      group: 'align-elements',\n      title: self._translate('Align elements'),\n      html: `<div class=\"entry\">${ICONS['align']}</div>`,\n      action: {\n        click: function(event, target) {\n          var position = self._getMenuPosition(target);\n\n          assign(position, {\n            cursor: {\n              x: event.x,\n              y: event.y\n            }\n          });\n\n          self._popupMenu.open(target, 'align-elements', position);\n        }\n      }\n    }\n  };\n};\n\nAlignElementsContextPadProvider.prototype._getMenuPosition = function(elements) {\n  var Y_OFFSET = 5;\n\n  var pad = this._contextPad.getPad(elements).html;\n\n  var padRect = pad.getBoundingClientRect();\n\n  var pos = {\n    x: padRect.left,\n    y: padRect.bottom + Y_OFFSET\n  };\n\n  return pos;\n};\n"],"mappings":"AAAA,SACEA,MAAM,QACD,UAAU;AAEjB,OAAOC,KAAK,MAAM,sBAAsB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAG,GAAG;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,+BAA+BA,CAACC,UAAU,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE;EAEhGH,UAAU,CAACI,gBAAgB,CAACN,YAAY,EAAE,IAAI,CAAC;EAE/C,IAAI,CAACO,WAAW,GAAGL,UAAU;EAC7B,IAAI,CAACM,UAAU,GAAGL,SAAS;EAC3B,IAAI,CAACM,UAAU,GAAGL,SAAS;EAC3B,IAAI,CAACM,OAAO,GAAGL,MAAM;AACvB;AAEAJ,+BAA+B,CAACU,OAAO,GAAG,CACxC,YAAY,EACZ,WAAW,EACX,WAAW,EACX,QAAQ,CACT;;AAED;AACA;AACA;AACA;AACA;AACAV,+BAA+B,CAACW,SAAS,CAACC,gCAAgC,GAAG,UAASC,QAAQ,EAAE;EAC9F,IAAIC,OAAO,GAAG,CAAC,CAAC;EAEhB,IAAI,IAAI,CAACC,UAAU,CAACF,QAAQ,CAAC,EAAE;IAC7BhB,MAAM,CAACiB,OAAO,EAAE,IAAI,CAACE,WAAW,CAACH,QAAQ,CAAC,CAAC;EAC7C;EAEA,OAAOC,OAAO;AAChB,CAAC;AAEDd,+BAA+B,CAACW,SAAS,CAACI,UAAU,GAAG,UAASF,QAAQ,EAAE;EACxE,OAAO,CAAC,IAAI,CAACN,UAAU,CAACU,OAAO,CAACJ,QAAQ,EAAE,gBAAgB,CAAC;AAC7D,CAAC;AAEDb,+BAA+B,CAACW,SAAS,CAACK,WAAW,GAAG,YAAW;EACjE,IAAIE,IAAI,GAAG,IAAI;EAEf,OAAO;IACL,gBAAgB,EAAE;MAChBC,KAAK,EAAE,gBAAgB;MACvBC,KAAK,EAAEF,IAAI,CAACV,UAAU,CAAC,gBAAgB,CAAC;MACxCa,IAAI,0BAAAC,MAAA,CAAwBxB,KAAK,CAAC,OAAO,CAAC,WAAQ;MAClDyB,MAAM,EAAE;QACNC,KAAK,EAAE,SAAAA,CAASC,KAAK,EAAEC,MAAM,EAAE;UAC7B,IAAIC,QAAQ,GAAGT,IAAI,CAACU,gBAAgB,CAACF,MAAM,CAAC;UAE5C7B,MAAM,CAAC8B,QAAQ,EAAE;YACfE,MAAM,EAAE;cACNC,CAAC,EAAEL,KAAK,CAACK,CAAC;cACVC,CAAC,EAAEN,KAAK,CAACM;YACX;UACF,CAAC,CAAC;UAEFb,IAAI,CAACX,UAAU,CAACyB,IAAI,CAACN,MAAM,EAAE,gBAAgB,EAAEC,QAAQ,CAAC;QAC1D;MACF;IACF;EACF,CAAC;AACH,CAAC;AAED3B,+BAA+B,CAACW,SAAS,CAACiB,gBAAgB,GAAG,UAASf,QAAQ,EAAE;EAC9E,IAAIoB,QAAQ,GAAG,CAAC;EAEhB,IAAIC,GAAG,GAAG,IAAI,CAAC5B,WAAW,CAAC6B,MAAM,CAACtB,QAAQ,CAAC,CAACQ,IAAI;EAEhD,IAAIe,OAAO,GAAGF,GAAG,CAACG,qBAAqB,CAAC,CAAC;EAEzC,IAAIC,GAAG,GAAG;IACRR,CAAC,EAAEM,OAAO,CAACG,IAAI;IACfR,CAAC,EAAEK,OAAO,CAACI,MAAM,GAAGP;EACtB,CAAC;EAED,OAAOK,GAAG;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}