{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { getDi, is } from '../../../util/ModelUtil';\nimport { computeChildrenBBox } from 'diagram-js/lib/features/resize/ResizeUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../ElementFactory').default} ElementFactory\n * @typedef {import('../Modeling').default} Modeling\n */\n\nvar LOW_PRIORITY = 500;\n\n/**\n * @param {EventBus} eventBus\n * @param {ElementFactory} elementFactory\n * @param {Modeling} modeling\n */\nexport default function ToggleElementCollapseBehaviour(eventBus, elementFactory, modeling) {\n  CommandInterceptor.call(this, eventBus);\n  function hideEmptyLabels(children) {\n    if (children.length) {\n      children.forEach(function (child) {\n        if (child.type === 'label' && !child.businessObject.name) {\n          child.hidden = true;\n        }\n      });\n    }\n  }\n  function expandedBounds(shape, defaultSize) {\n    var children = shape.children,\n      newBounds = defaultSize,\n      visibleElements,\n      visibleBBox;\n    visibleElements = filterVisible(children).concat([shape]);\n    visibleBBox = computeChildrenBBox(visibleElements);\n    if (visibleBBox) {\n      // center to visibleBBox with max(defaultSize, childrenBounds)\n      newBounds.width = Math.max(visibleBBox.width, newBounds.width);\n      newBounds.height = Math.max(visibleBBox.height, newBounds.height);\n      newBounds.x = visibleBBox.x + (visibleBBox.width - newBounds.width) / 2;\n      newBounds.y = visibleBBox.y + (visibleBBox.height - newBounds.height) / 2;\n    } else {\n      // center to collapsed shape with defaultSize\n      newBounds.x = shape.x + (shape.width - newBounds.width) / 2;\n      newBounds.y = shape.y + (shape.height - newBounds.height) / 2;\n    }\n    return newBounds;\n  }\n  function collapsedBounds(shape, defaultSize) {\n    return {\n      x: shape.x + (shape.width - defaultSize.width) / 2,\n      y: shape.y + (shape.height - defaultSize.height) / 2,\n      width: defaultSize.width,\n      height: defaultSize.height\n    };\n  }\n  this.executed(['shape.toggleCollapse'], LOW_PRIORITY, function (e) {\n    var context = e.context,\n      shape = context.shape;\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n    if (!shape.collapsed) {\n      // all children got made visible through djs, hide empty labels\n      hideEmptyLabels(shape.children);\n\n      // remove collapsed marker\n      getDi(shape).isExpanded = true;\n    } else {\n      // place collapsed marker\n      getDi(shape).isExpanded = false;\n    }\n  });\n  this.reverted(['shape.toggleCollapse'], LOW_PRIORITY, function (e) {\n    var context = e.context;\n    var shape = context.shape;\n\n    // revert removing/placing collapsed marker\n    if (!shape.collapsed) {\n      getDi(shape).isExpanded = true;\n    } else {\n      getDi(shape).isExpanded = false;\n    }\n  });\n  this.postExecuted(['shape.toggleCollapse'], LOW_PRIORITY, function (e) {\n    var shape = e.context.shape,\n      defaultSize = elementFactory.getDefaultSize(shape),\n      newBounds;\n    if (shape.collapsed) {\n      // resize to default size of collapsed shapes\n      newBounds = collapsedBounds(shape, defaultSize);\n    } else {\n      // resize to bounds of max(visible children, defaultSize)\n      newBounds = expandedBounds(shape, defaultSize);\n    }\n    modeling.resizeShape(shape, newBounds, null, {\n      autoResize: shape.collapsed ? false : 'nwse'\n    });\n  });\n}\ninherits(ToggleElementCollapseBehaviour, CommandInterceptor);\nToggleElementCollapseBehaviour.$inject = ['eventBus', 'elementFactory', 'modeling'];\n\n// helpers //////////////////////\n\nfunction filterVisible(elements) {\n  return elements.filter(function (e) {\n    return !e.hidden;\n  });\n}","map":{"version":3,"names":["inherits","CommandInterceptor","getDi","is","computeChildrenBBox","LOW_PRIORITY","ToggleElementCollapseBehaviour","eventBus","elementFactory","modeling","call","hideEmptyLabels","children","length","forEach","child","type","businessObject","name","hidden","expandedBounds","shape","defaultSize","newBounds","visibleElements","visibleBBox","filterVisible","concat","width","Math","max","height","x","y","collapsedBounds","executed","e","context","collapsed","isExpanded","reverted","postExecuted","getDefaultSize","resizeShape","autoResize","$inject","elements","filter"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/ToggleElementCollapseBehaviour.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getDi,\n  is\n} from '../../../util/ModelUtil';\n\nimport {\n  computeChildrenBBox\n} from 'diagram-js/lib/features/resize/ResizeUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../ElementFactory').default} ElementFactory\n * @typedef {import('../Modeling').default} Modeling\n */\n\nvar LOW_PRIORITY = 500;\n\n/**\n * @param {EventBus} eventBus\n * @param {ElementFactory} elementFactory\n * @param {Modeling} modeling\n */\nexport default function ToggleElementCollapseBehaviour(\n    eventBus, elementFactory, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n\n  function hideEmptyLabels(children) {\n    if (children.length) {\n      children.forEach(function(child) {\n        if (child.type === 'label' && !child.businessObject.name) {\n          child.hidden = true;\n        }\n      });\n    }\n  }\n\n  function expandedBounds(shape, defaultSize) {\n    var children = shape.children,\n        newBounds = defaultSize,\n        visibleElements,\n        visibleBBox;\n\n    visibleElements = filterVisible(children).concat([ shape ]);\n\n    visibleBBox = computeChildrenBBox(visibleElements);\n\n    if (visibleBBox) {\n\n      // center to visibleBBox with max(defaultSize, childrenBounds)\n      newBounds.width = Math.max(visibleBBox.width, newBounds.width);\n      newBounds.height = Math.max(visibleBBox.height, newBounds.height);\n\n      newBounds.x = visibleBBox.x + (visibleBBox.width - newBounds.width) / 2;\n      newBounds.y = visibleBBox.y + (visibleBBox.height - newBounds.height) / 2;\n    } else {\n\n      // center to collapsed shape with defaultSize\n      newBounds.x = shape.x + (shape.width - newBounds.width) / 2;\n      newBounds.y = shape.y + (shape.height - newBounds.height) / 2;\n    }\n\n    return newBounds;\n  }\n\n  function collapsedBounds(shape, defaultSize) {\n\n    return {\n      x: shape.x + (shape.width - defaultSize.width) / 2,\n      y: shape.y + (shape.height - defaultSize.height) / 2,\n      width: defaultSize.width,\n      height: defaultSize.height\n    };\n  }\n\n  this.executed([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\n\n    var context = e.context,\n        shape = context.shape;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    if (!shape.collapsed) {\n\n      // all children got made visible through djs, hide empty labels\n      hideEmptyLabels(shape.children);\n\n      // remove collapsed marker\n      getDi(shape).isExpanded = true;\n    } else {\n\n      // place collapsed marker\n      getDi(shape).isExpanded = false;\n    }\n  });\n\n  this.reverted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\n\n    var context = e.context;\n    var shape = context.shape;\n\n\n    // revert removing/placing collapsed marker\n    if (!shape.collapsed) {\n      getDi(shape).isExpanded = true;\n\n    } else {\n      getDi(shape).isExpanded = false;\n    }\n  });\n\n  this.postExecuted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\n    var shape = e.context.shape,\n        defaultSize = elementFactory.getDefaultSize(shape),\n        newBounds;\n\n    if (shape.collapsed) {\n\n      // resize to default size of collapsed shapes\n      newBounds = collapsedBounds(shape, defaultSize);\n    } else {\n\n      // resize to bounds of max(visible children, defaultSize)\n      newBounds = expandedBounds(shape, defaultSize);\n    }\n\n    modeling.resizeShape(shape, newBounds, null, {\n      autoResize: shape.collapsed ? false : 'nwse'\n    });\n  });\n\n}\n\n\ninherits(ToggleElementCollapseBehaviour, CommandInterceptor);\n\nToggleElementCollapseBehaviour.$inject = [\n  'eventBus',\n  'elementFactory',\n  'modeling'\n];\n\n\n// helpers //////////////////////\n\nfunction filterVisible(elements) {\n  return elements.filter(function(e) {\n    return !e.hidden;\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}