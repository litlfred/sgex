{"ast":null,"code":"import React from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import'./i18n';// Initialize i18n\nimport WelcomePage from'./components/WelcomePage';import SelectProfilePage from'./components/SelectProfilePage';import DAKActionSelection from'./components/DAKActionSelection';import DAKSelection from'./components/DAKSelection';import OrganizationSelection from'./components/OrganizationSelection';import DAKConfiguration from'./components/DAKConfiguration';import RepositorySelection from'./components/RepositorySelection';import ComponentEditor from'./components/ComponentEditor';import CoreDataDictionaryViewer from'./components/CoreDataDictionaryViewer';import ActorEditor from'./components/ActorEditor';import BPMNEditor from'./components/BPMNEditor';import BusinessProcessSelection from'./components/BusinessProcessSelection';import BPMNViewer from'./components/BPMNViewer';import BPMNSource from'./components/BPMNSource';import BPMNViewerTestComponent from'./components/BPMNViewerTestComponent';import DocumentationViewer from'./components/DocumentationViewer';import DecisionSupportLogicView from'./components/DecisionSupportLogicView';import TestDashboard from'./components/TestDashboard';import TestingViewer from'./components/TestingViewer';import PagesManager from'./components/PagesManager';import NotFound from'./components/NotFound';import LandingPageWithFramework from'./components/LandingPageWithFramework';import DAKDashboardWithFramework from'./components/DAKDashboardWithFramework';import DashboardRedirect from'./components/DashboardRedirect';import TestDocumentationPage from'./components/TestDocumentationPage';import AssetEditorTest from'./components/AssetEditorTest';import logger from'./utils/logger';import{generateDAKRoutes}from'./utils/routeUtils';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const appLogger=logger.getLogger('App');// Get basename from PUBLIC_URL or default to /sgex\nconst basename=process.env.PUBLIC_URL||'/sgex';// Pass all imported components to generateDAKRoutes - it will automatically\n// match them to the component names defined in routes-config.js\nconst importedComponents={DAKDashboardWithFramework,TestingViewer,CoreDataDictionaryViewer,ComponentEditor,ActorEditor,BusinessProcessSelection,BPMNEditor,BPMNViewer,BPMNSource,DecisionSupportLogicView};// Generate DAK component routes dynamically from route configuration\nconst dakRoutes=generateDAKRoutes(importedComponents);React.useEffect(()=>{appLogger.componentMount();appLogger.info('SGEX Workbench application started',{environment:process.env.NODE_ENV,basename:basename,dakRoutesGenerated:dakRoutes.length});return()=>{appLogger.componentUnmount();};},[appLogger,basename,dakRoutes.length]);return/*#__PURE__*/_jsx(Router,{basename:basename,children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(WelcomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/select_profile\",element:/*#__PURE__*/_jsx(SelectProfilePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dak-action/:user\",element:/*#__PURE__*/_jsx(DAKActionSelection,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dak-action\",element:/*#__PURE__*/_jsx(DAKActionSelection,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dak-selection/:user\",element:/*#__PURE__*/_jsx(DAKSelection,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dak-selection\",element:/*#__PURE__*/_jsx(DAKSelection,{})}),/*#__PURE__*/_jsx(Route,{path:\"/organization-selection\",element:/*#__PURE__*/_jsx(OrganizationSelection,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dak-configuration\",element:/*#__PURE__*/_jsx(DAKConfiguration,{})}),/*#__PURE__*/_jsx(Route,{path:\"/repositories\",element:/*#__PURE__*/_jsx(RepositorySelection,{})}),/*#__PURE__*/_jsx(Route,{path:\"/repositories/:user\",element:/*#__PURE__*/_jsx(RepositorySelection,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(DashboardRedirect,{})}),/*#__PURE__*/_jsx(Route,{path:\"/test-dashboard\",element:/*#__PURE__*/_jsx(TestDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/editor/:componentId\",element:/*#__PURE__*/_jsx(ComponentEditor,{})}),/*#__PURE__*/_jsx(Route,{path:\"/editor-health-interventions\",element:/*#__PURE__*/_jsx(ComponentEditor,{})}),/*#__PURE__*/_jsx(Route,{path:\"/docs/:docId\",element:/*#__PURE__*/_jsx(DocumentationViewer,{})}),/*#__PURE__*/_jsx(Route,{path:\"/pages\",element:/*#__PURE__*/_jsx(PagesManager,{})}),/*#__PURE__*/_jsx(Route,{path:\"/test-bpmn-viewer\",element:/*#__PURE__*/_jsx(BPMNViewerTestComponent,{})}),/*#__PURE__*/_jsx(Route,{path:\"/test-framework\",element:/*#__PURE__*/_jsx(LandingPageWithFramework,{})}),/*#__PURE__*/_jsx(Route,{path:\"/test-framework-dashboard/:user/:repo\",element:/*#__PURE__*/_jsx(DAKDashboardWithFramework,{})}),/*#__PURE__*/_jsx(Route,{path:\"/test-framework-dashboard/:user/:repo/:branch\",element:/*#__PURE__*/_jsx(DAKDashboardWithFramework,{})}),/*#__PURE__*/_jsx(Route,{path:\"/test-documentation\",element:/*#__PURE__*/_jsx(TestDocumentationPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/test-asset-editor\",element:/*#__PURE__*/_jsx(AssetEditorTest,{})}),dakRoutes.map(route=>/*#__PURE__*/_jsx(Route,{path:route.path,element:route.element},route.key)),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NotFound,{})})]})})});}export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","WelcomePage","SelectProfilePage","DAKActionSelection","DAKSelection","OrganizationSelection","DAKConfiguration","RepositorySelection","ComponentEditor","CoreDataDictionaryViewer","ActorEditor","BPMNEditor","BusinessProcessSelection","BPMNViewer","BPMNSource","BPMNViewerTestComponent","DocumentationViewer","DecisionSupportLogicView","TestDashboard","TestingViewer","PagesManager","NotFound","LandingPageWithFramework","DAKDashboardWithFramework","DashboardRedirect","TestDocumentationPage","AssetEditorTest","logger","generateDAKRoutes","jsx","_jsx","jsxs","_jsxs","App","appLogger","getLogger","basename","process","env","PUBLIC_URL","importedComponents","dakRoutes","useEffect","componentMount","info","environment","NODE_ENV","dakRoutesGenerated","length","componentUnmount","children","className","path","element","map","route","key"],"sources":["/home/runner/work/sgex/sgex/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './i18n'; // Initialize i18n\nimport WelcomePage from './components/WelcomePage';\nimport SelectProfilePage from './components/SelectProfilePage';\nimport DAKActionSelection from './components/DAKActionSelection';\nimport DAKSelection from './components/DAKSelection';\nimport OrganizationSelection from './components/OrganizationSelection';\nimport DAKConfiguration from './components/DAKConfiguration';\nimport RepositorySelection from './components/RepositorySelection';\nimport ComponentEditor from './components/ComponentEditor';\nimport CoreDataDictionaryViewer from './components/CoreDataDictionaryViewer';\nimport ActorEditor from './components/ActorEditor';\nimport BPMNEditor from './components/BPMNEditor';\nimport BusinessProcessSelection from './components/BusinessProcessSelection';\nimport BPMNViewer from './components/BPMNViewer';\nimport BPMNSource from './components/BPMNSource';\nimport BPMNViewerTestComponent from './components/BPMNViewerTestComponent';\nimport DocumentationViewer from './components/DocumentationViewer';\nimport DecisionSupportLogicView from './components/DecisionSupportLogicView';\nimport TestDashboard from './components/TestDashboard';\nimport TestingViewer from './components/TestingViewer';\nimport PagesManager from './components/PagesManager';\nimport NotFound from './components/NotFound';\nimport LandingPageWithFramework from './components/LandingPageWithFramework';\nimport DAKDashboardWithFramework from './components/DAKDashboardWithFramework';\nimport DashboardRedirect from './components/DashboardRedirect';\nimport TestDocumentationPage from './components/TestDocumentationPage';\nimport AssetEditorTest from './components/AssetEditorTest';\nimport logger from './utils/logger';\nimport { generateDAKRoutes } from './utils/routeUtils';\nimport './App.css';\n\nfunction App() {\n  const appLogger = logger.getLogger('App');\n  \n  // Get basename from PUBLIC_URL or default to /sgex\n  const basename = process.env.PUBLIC_URL || '/sgex';\n  \n  // Pass all imported components to generateDAKRoutes - it will automatically\n  // match them to the component names defined in routes-config.js\n  const importedComponents = {\n    DAKDashboardWithFramework,\n    TestingViewer,\n    CoreDataDictionaryViewer,\n    ComponentEditor,\n    ActorEditor,\n    BusinessProcessSelection,\n    BPMNEditor,\n    BPMNViewer,\n    BPMNSource,\n    DecisionSupportLogicView\n  };\n  \n  // Generate DAK component routes dynamically from route configuration\n  const dakRoutes = generateDAKRoutes(importedComponents);\n  \n  React.useEffect(() => {\n    appLogger.componentMount();\n    appLogger.info('SGEX Workbench application started', { \n      environment: process.env.NODE_ENV,\n      basename: basename,\n      dakRoutesGenerated: dakRoutes.length\n    });\n    \n    return () => {\n      appLogger.componentUnmount();\n    };\n  }, [appLogger, basename, dakRoutes.length]);\n\n  return (\n    <Router basename={basename}>\n      <div className=\"App\">\n          <Routes>\n            {/* Navigation and selection routes */}\n            <Route path=\"/\" element={<WelcomePage />} />\n            <Route path=\"/select_profile\" element={<SelectProfilePage />} />\n            <Route path=\"/dak-action/:user\" element={<DAKActionSelection />} />\n            <Route path=\"/dak-action\" element={<DAKActionSelection />} />\n            <Route path=\"/dak-selection/:user\" element={<DAKSelection />} />\n            <Route path=\"/dak-selection\" element={<DAKSelection />} />\n            <Route path=\"/organization-selection\" element={<OrganizationSelection />} />\n            <Route path=\"/dak-configuration\" element={<DAKConfiguration />} />\n            <Route path=\"/repositories\" element={<RepositorySelection />} />\n            <Route path=\"/repositories/:user\" element={<RepositorySelection />} />\n            \n            {/* Special dashboard routes */}\n            <Route path=\"/dashboard\" element={<DashboardRedirect />} />\n            <Route path=\"/test-dashboard\" element={<TestDashboard />} />\n            \n            {/* Legacy routes */}\n            <Route path=\"/editor/:componentId\" element={<ComponentEditor />} />\n            <Route path=\"/editor-health-interventions\" element={<ComponentEditor />} />\n            \n            {/* Documentation and utilities */}\n            <Route path=\"/docs/:docId\" element={<DocumentationViewer />} />\n            <Route path=\"/pages\" element={<PagesManager />} />\n            \n            {/* Test routes */}\n            <Route path=\"/test-bpmn-viewer\" element={<BPMNViewerTestComponent />} />\n            <Route path=\"/test-framework\" element={<LandingPageWithFramework />} />\n            <Route path=\"/test-framework-dashboard/:user/:repo\" element={<DAKDashboardWithFramework />} />\n            <Route path=\"/test-framework-dashboard/:user/:repo/:branch\" element={<DAKDashboardWithFramework />} />\n            <Route path=\"/test-documentation\" element={<TestDocumentationPage />} />\n            <Route path=\"/test-asset-editor\" element={<AssetEditorTest />} />\n            \n            {/* Dynamically generated DAK component routes */}\n            {dakRoutes.map((route) => (\n              <Route \n                key={route.key} \n                path={route.path} \n                element={route.element} \n              />\n            ))}\n            \n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}