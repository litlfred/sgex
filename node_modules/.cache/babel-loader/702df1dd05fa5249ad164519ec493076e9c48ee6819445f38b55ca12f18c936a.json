{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/runner/work/sgex/sgex/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst ucs2length_1 = require(\"../../runtime/ucs2length\");\nconst error = {\n  message(_ref) {\n    let {\n      keyword,\n      schemaCode\n    } = _ref;\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n    return (0, codegen_1.str)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"must NOT have \", \" than \", \" characters\"])), comp, schemaCode);\n  },\n  params: _ref2 => {\n    let {\n      schemaCode\n    } = _ref2;\n    return (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{limit: \", \"}\"])), schemaCode);\n  }\n};\nconst def = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {\n      keyword,\n      data,\n      schemaCode,\n      it\n    } = cxt;\n    const op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n    const len = it.opts.unicode === false ? (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \".length\"])), data) : (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \"(\", \")\"])), (0, util_1.useFunc)(cxt.gen, ucs2length_1.default), data);\n    cxt.fail$data((0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \" \", \" \", \"\"])), len, op, schemaCode));\n  }\n};\nexports.default = def;","map":{"version":3,"names":["codegen_1","require","util_1","ucs2length_1","error","message","_ref","keyword","schemaCode","comp","str","_templateObject","_taggedTemplateLiteral","params","_ref2","_","_templateObject2","def","type","schemaType","$data","code","cxt","data","it","op","operators","GT","LT","len","opts","unicode","_templateObject3","_templateObject4","useFunc","gen","default","fail$data","_templateObject5","exports"],"sources":["/home/runner/work/sgex/sgex/node_modules/ajv/lib/vocabularies/validation/limitLength.ts"],"sourcesContent":["import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n"],"mappings":";;;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AAEA,MAAMG,KAAK,GAA2B;EACpCC,OAAOA,CAAAC,IAAA,EAAsB;IAAA,IAArB;MAACC,OAAO;MAAEC;IAAU,CAAC,GAAAF,IAAA;IAC3B,MAAMG,IAAI,GAAGF,OAAO,KAAK,WAAW,GAAG,MAAM,GAAG,OAAO;IACvD,QAAO,GAAAP,SAAA,CAAAU,GAAG,EAAAC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,gDAAiBH,IAAI,EAASD,UAAU;EACpD,CAAC;EACDK,MAAM,EAAEC,KAAA;IAAA,IAAC;MAACN;IAAU,CAAC,GAAAM,KAAA;IAAA,QAAK,GAAAd,SAAA,CAAAe,CAAC,EAAAC,gBAAA,KAAAA,gBAAA,GAAAJ,sBAAA,sBAAWJ,UAAU;EAAA;CACjD;AAED,MAAMS,GAAG,GAA0B;EACjCV,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;EACnCW,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE,QAAQ;EACpBC,KAAK,EAAE,IAAI;EACXhB,KAAK;EACLiB,IAAIA,CAACC,GAAe;IAClB,MAAM;MAACf,OAAO;MAAEgB,IAAI;MAAEf,UAAU;MAAEgB;IAAE,CAAC,GAAGF,GAAG;IAC3C,MAAMG,EAAE,GAAGlB,OAAO,KAAK,WAAW,GAAGP,SAAA,CAAA0B,SAAS,CAACC,EAAE,GAAG3B,SAAA,CAAA0B,SAAS,CAACE,EAAE;IAChE,MAAMC,GAAG,GACPL,EAAE,CAACM,IAAI,CAACC,OAAO,KAAK,KAAK,IAAG,GAAA/B,SAAA,CAAAe,CAAC,EAAAiB,gBAAA,KAAAA,gBAAA,GAAApB,sBAAA,oBAAGW,IAAI,KAAY,GAAAvB,SAAA,CAAAe,CAAC,EAAAkB,gBAAA,KAAAA,gBAAA,GAAArB,sBAAA,mBAAG,IAAAV,MAAA,CAAAgC,OAAO,EAACZ,GAAG,CAACa,GAAG,EAAEhC,YAAA,CAAAiC,OAAU,CAAC,EAAIb,IAAI,CAAG;IAC7FD,GAAG,CAACe,SAAS,EAAC,GAAArC,SAAA,CAAAe,CAAC,EAAAuB,gBAAA,KAAAA,gBAAA,GAAA1B,sBAAA,uBAAGiB,GAAG,EAAIJ,EAAE,EAAIjB,UAAU,CAAE,CAAC;EAC9C;CACD;AAED+B,OAAA,CAAAH,OAAA,GAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}