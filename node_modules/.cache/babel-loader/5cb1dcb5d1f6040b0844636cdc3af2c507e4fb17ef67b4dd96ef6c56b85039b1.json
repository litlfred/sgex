{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{PageLayout}from'./framework';import HelpModal from'./HelpModal';import'./BranchListing.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BranchListing=()=>{const[branches,setBranches]=useState([]);const[pullRequests,setPullRequests]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState('prs');// Start with PR preview section\nconst[prPage,setPrPage]=useState(1);const[prSearchTerm,setPrSearchTerm]=useState('');const[branchSearchTerm,setBranchSearchTerm]=useState('');const[prSortBy,setPrSortBy]=useState('updated');// updated, number, alphabetical\nconst[branchSortBy,setBranchSortBy]=useState('updated');// updated, alphabetical\nconst[showContributeModal,setShowContributeModal]=useState(false);const[deploymentStatuses,setDeploymentStatuses]=useState({});const[checkingStatuses,setCheckingStatuses]=useState(false);const ITEMS_PER_PAGE=5;// Function to check deployment status\nconst checkDeploymentStatus=async url=>{try{const response=await fetch(url,{method:'HEAD'});if(response.ok){return'active';}else if(response.status===404){return'not-found';}else{return'errored';}}catch(error){return'errored';}};// Function to check deployment statuses for all items\nconst checkAllDeploymentStatuses=useCallback(async(branchData,prData)=>{setCheckingStatuses(true);const statuses={};// Check branches\nfor(const branch of branchData){const status=await checkDeploymentStatus(branch.url);statuses[`branch-${branch.name}`]=status;}// Check PRs\nfor(const pr of prData){const status=await checkDeploymentStatus(pr.url);statuses[`pr-${pr.id}`]=status;}setDeploymentStatuses(statuses);setCheckingStatuses(false);},[]);// Function to copy URL to clipboard\nconst copyToClipboard=async(url,type,name)=>{try{await navigator.clipboard.writeText(url);// You could add a toast notification here\nconsole.log(`Copied ${type} URL for ${name} to clipboard`);}catch(error){// Fallback for browsers that don't support clipboard API\nconst textArea=document.createElement('textarea');textArea.value=url;document.body.appendChild(textArea);textArea.select();document.execCommand('copy');document.body.removeChild(textArea);console.log(`Copied ${type} URL for ${name} to clipboard (fallback)`);}};// Sorting functions\nconst sortBranches=(branches,sortBy)=>{return[...branches].sort((a,b)=>{switch(sortBy){case'alphabetical':return a.name.localeCompare(b.name);case'updated':default:const dateA=new Date(a.lastModified);const dateB=new Date(b.lastModified);return dateB-dateA;// Most recent first\n}});};const sortPRs=(prs,sortBy)=>{return[...prs].sort((a,b)=>{switch(sortBy){case'number':return b.number-a.number;// Highest number first\ncase'alphabetical':return a.title.localeCompare(b.title);case'updated':default:const dateA=new Date(a.updatedAt);const dateB=new Date(b.updatedAt);return dateB-dateA;// Most recent first\n}});};// \"How to contribute\" slideshow content\nconst contributeHelpTopic={id:'how-to-contribute',title:'How to Contribute to SGEX',type:'slideshow',content:[{title:'Welcome to SGEX - A Collaborative Workbench',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot\" class=\"contribute-mascot\" />\n            </div>\n            <h3>What is SGEX?</h3>\n            <p>SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits.</p>\n            <p>Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.</p>\n          </div>\n        `},{title:'Step 1: Report a Bug or Make a Feature Request',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot examining a bug\" class=\"contribute-mascot bug-report\" />\n            </div>\n            <h3>üêõ Found something that needs fixing?</h3>\n            <p>Every great contribution starts with identifying what can be improved:</p>\n            <ul>\n              <li><strong>Bug reports:</strong> Help us identify and fix issues</li>\n              <li><strong>Feature requests:</strong> Share ideas for new functionality</li>\n              <li><strong>Documentation improvements:</strong> Make our guides clearer</li>\n              <li><strong>User experience feedback:</strong> Tell us what's confusing</li>\n            </ul>\n            <p>Click the mascot's help button on any page to quickly report issues!</p>\n          </div>\n        `},{title:'Step 2: Assignment to a Coding Agent',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"Robotic SGEX Mascot\" class=\"contribute-mascot coding-agent\" />\n            </div>\n            <h3>ü§ñ AI-Powered Development</h3>\n            <p>Once your issue is triaged, it may be assigned to one of our coding agents:</p>\n            <ul>\n              <li><strong>Automated analysis:</strong> AI agents analyze the requirements</li>\n              <li><strong>Code generation:</strong> Initial implementations are created</li>\n              <li><strong>Testing integration:</strong> Automated tests validate changes</li>\n              <li><strong>Documentation updates:</strong> Keep documentation in sync</li>\n            </ul>\n            <p>This hybrid approach combines human insight with AI efficiency.</p>\n          </div>\n        `},{title:'Step 3: Community Collaboration',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <div class=\"mascot-group\">\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 1\" class=\"contribute-mascot community\" />\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 2\" class=\"contribute-mascot community\" />\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 3\" class=\"contribute-mascot community\" />\n              </div>\n              <div class=\"thought-bubble\">üí´</div>\n            </div>\n            <h3>üåü Real-time Evolution</h3>\n            <p>The community drives continuous improvement through collaborative discussion:</p>\n            <ul>\n              <li><strong>Code reviews:</strong> Community members review and suggest improvements</li>\n              <li><strong>Testing feedback:</strong> Real-world testing by healthcare professionals</li>\n              <li><strong>Knowledge sharing:</strong> Best practices emerge from collective experience</li>\n              <li><strong>Iterative refinement:</strong> The workbench evolves based on actual usage</li>\n            </ul>\n            <p>Together, we're building the future of digital health tooling!</p>\n          </div>\n        `},{title:'Get Started Today!',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot celebrating\" class=\"contribute-mascot celebrate\" />\n            </div>\n            <h3>üöÄ Ready to Contribute?</h3>\n            <div class=\"action-buttons\">\n              <a href=\"https://github.com/litlfred/sgex/issues/new\" target=\"_blank\" class=\"contribute-btn primary\">\n                üêõ Report a Bug\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/issues/new?template=feature_request.md\" target=\"_blank\" class=\"contribute-btn secondary\">\n                ‚ú® Request a Feature  \n              </a>\n              <a href=\"/sgex/main/docs/\" target=\"_blank\" class=\"contribute-btn tertiary\">\n                üìö Read Documentation\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/tree/main/public/docs\" target=\"_blank\" class=\"contribute-btn tertiary-alt\">\n                üìñ Docs on GitHub\n              </a>\n            </div>\n            <p class=\"contribute-footer\">\n              <strong>Every contribution matters!</strong> Whether you're reporting a bug, testing a feature, or sharing feedback, you're helping improve digital health tools for healthcare workers worldwide.\n            </p>\n          </div>\n        `}]};useEffect(()=>{const fetchData=async()=>{try{setLoading(true);// Use GitHub API to fetch branches and PRs for the sgex repository\nconst owner='litlfred';const repo='sgex';// Fetch branches\nconst branchResponse=await fetch(`https://api.github.com/repos/${owner}/${repo}/branches`);if(!branchResponse.ok){throw new Error(`Failed to fetch branches: ${branchResponse.status}`);}const branchData=await branchResponse.json();// Fetch pull requests\nconst prResponse=await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=all&sort=updated&per_page=100`);if(!prResponse.ok){throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);}const prData=await prResponse.json();// Filter out gh-pages branch and format data\nconst filteredBranches=branchData.filter(branch=>branch.name!=='gh-pages').map(branch=>{var _branch$commit$commit,_branch$commit$commit2;// Convert branch name to safe directory name (replace slashes with dashes)\nconst safeName=branch.name.replace(/\\//g,'-');return{name:branch.name,safeName:safeName,commit:branch.commit,url:`./sgex/${safeName}/index.html`,lastModified:(_branch$commit$commit=branch.commit.commit)!==null&&_branch$commit$commit!==void 0&&(_branch$commit$commit2=_branch$commit$commit.committer)!==null&&_branch$commit$commit2!==void 0&&_branch$commit$commit2.date?new Date(branch.commit.commit.committer.date).toLocaleDateString():'Unknown'};});// Format PR data\nconst formattedPRs=prData.map(pr=>{const safeBranchName=pr.head.ref.replace(/\\//g,'-');return{id:pr.id,number:pr.number,title:pr.title,state:pr.state,author:pr.user.login,branchName:pr.head.ref,safeBranchName:safeBranchName,url:`./sgex/${safeBranchName}/index.html`,prUrl:pr.html_url,updatedAt:new Date(pr.updated_at).toLocaleDateString(),createdAt:new Date(pr.created_at).toLocaleDateString()};});setBranches(filteredBranches);setPullRequests(formattedPRs);// Check deployment statuses\nawait checkAllDeploymentStatuses(filteredBranches,formattedPRs);}catch(err){console.error('Error fetching data:',err);setError(err.message);// Only use fallback data in development or when GitHub API is blocked\nif(process.env.NODE_ENV==='development'||err.message.includes('Failed to fetch')){console.log('Using fallback mock data for demonstration...');const mockBranches=[{name:'main',safeName:'main',commit:{sha:'abc1234'},url:'./sgex/main/index.html',lastModified:new Date().toLocaleDateString()},{name:'feature/user-auth',safeName:'feature-user-auth',commit:{sha:'def5678'},url:'./sgex/feature-user-auth/index.html',lastModified:new Date(Date.now()-86400000).toLocaleDateString()},{name:'fix/api-endpoints',safeName:'fix-api-endpoints',commit:{sha:'ghi9012'},url:'./sgex/fix-api-endpoints/index.html',lastModified:new Date(Date.now()-172800000).toLocaleDateString()}];const mockPRs=[{id:1,number:123,title:'Improve multi-page selector landing page for GitHub deployment',state:'open',author:'copilot',branchName:'copilot/fix-459',safeBranchName:'copilot-fix-459',url:'./sgex/copilot-fix-459/index.html',prUrl:'https://github.com/litlfred/sgex/pull/123',updatedAt:new Date().toLocaleDateString(),createdAt:new Date(Date.now()-86400000).toLocaleDateString()},{id:2,number:122,title:'Add dark mode support',state:'closed',author:'developer',branchName:'feature/dark-mode',safeBranchName:'feature-dark-mode',url:'./sgex/feature-dark-mode/index.html',prUrl:'https://github.com/litlfred/sgex/pull/122',updatedAt:new Date(Date.now()-172800000).toLocaleDateString(),createdAt:new Date(Date.now()-345600000).toLocaleDateString()},{id:3,number:121,title:'Fix authentication flow',state:'open',author:'contributor',branchName:'fix/auth-flow',safeBranchName:'fix-auth-flow',url:'./sgex/fix-auth-flow/index.html',prUrl:'https://github.com/litlfred/sgex/pull/121',updatedAt:new Date(Date.now()-259200000).toLocaleDateString(),createdAt:new Date(Date.now()-432000000).toLocaleDateString()}];setBranches(mockBranches);setPullRequests(mockPRs);setError(null);// Clear error since we have fallback data\n}}finally{setLoading(false);}};fetchData();},[checkAllDeploymentStatuses]);// Filter and sort PRs based on search and sorting\nconst filteredPRs=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const sortedPRs=sortPRs(filteredPRs,prSortBy);const paginatedPRs=sortedPRs.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);const totalPRPages=Math.ceil(sortedPRs.length/ITEMS_PER_PAGE);// Filter and sort branches based on search and sorting\nconst filteredBranches=branches.filter(branch=>branch.name.toLowerCase().includes(branchSearchTerm.toLowerCase()));const sortedBranches=sortBranches(filteredBranches,branchSortBy);if(loading){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,showHeader:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"/sgex-mascot.png\",alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading previews...\"})]})});}if(error){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,showHeader:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"/sgex-mascot.png\",alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Failed to load previews: \",error]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please try refreshing the page or check back later.\"})]})]})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,showHeader:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"/sgex-mascot.png\",alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"prominent-info\",children:/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"\\uD83D\\uDC3E This landing page lists all available previews. Each branch and PR is automatically deployed to its own preview environment.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"contribute-btn primary\",onClick:()=>setShowContributeModal(true),children:\"\\uD83C\\uDF1F How to Contribute\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/sgex/main/docs/\",className:\"contribute-btn secondary\",target:\"_blank\",rel:\"noopener noreferrer\",onError:e=>{// Fallback to GitHub docs if main branch docs not available\ne.target.href=\"https://github.com/litlfred/sgex/tree/main/public/docs\";},children:\"\\uD83D\\uDCDA Documentation\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex/issues/new\",className:\"contribute-btn tertiary\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDC1B Report a Bug\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-tabs\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='branches'?'active':''}`,onClick:()=>setActiveTab('branches'),children:[\"\\uD83C\\uDF3F Branch Previews (\",sortedBranches.length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='prs'?'active':''}`,onClick:()=>setActiveTab('prs'),children:[\"\\uD83D\\uDD04 Pull Request Previews (\",sortedPRs.length,\")\"]})]}),activeTab==='branches'&&/*#__PURE__*/_jsxs(\"div\",{className:\"branch-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"branch-controls\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search branches by name...\",value:branchSearchTerm,onChange:e=>setBranchSearchTerm(e.target.value),className:\"branch-search\"}),/*#__PURE__*/_jsxs(\"select\",{value:branchSortBy,onChange:e=>setBranchSortBy(e.target.value),className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"updated\",children:\"Sort by Recent Updates\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alphabetical\",children:\"Sort Alphabetically\"})]}),checkingStatuses&&/*#__PURE__*/_jsx(\"span\",{className:\"status-checking\",children:\"\\uD83D\\uDD04 Checking deployment status...\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"branch-cards\",children:sortedBranches.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-items\",children:branchSearchTerm?/*#__PURE__*/_jsxs(\"p\",{children:[\"No branches match your search \\\"\",branchSearchTerm,\"\\\".\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"No branch previews available at the moment.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Branch previews will appear here when code is pushed to branches.\"})]})}):sortedBranches.map(branch=>{const statusKey=`branch-${branch.name}`;const deploymentStatus=deploymentStatuses[statusKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"item-name\",children:branch.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-badges\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"commit-badge\",children:branch.commit.sha.substring(0,7)}),deploymentStatus&&/*#__PURE__*/_jsxs(\"span\",{className:`status-badge ${deploymentStatus}`,children:[deploymentStatus==='active'&&'üü¢ Active',deploymentStatus==='not-found'&&'üü° Building',deploymentStatus==='errored'&&'üî¥ Error']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Last updated: \",branch.lastModified]}),/*#__PURE__*/_jsxs(\"div\",{className:\"branch-actions\",children:[deploymentStatus==='active'?/*#__PURE__*/_jsx(\"a\",{href:branch.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}):deploymentStatus==='not-found'?/*#__PURE__*/_jsx(\"div\",{className:\"deployment-message\",children:/*#__PURE__*/_jsx(\"span\",{className:\"building-message\",children:\"\\uD83D\\uDD04 Deployment in progress. Please check back in a few minutes.\"})}):deploymentStatus==='errored'?/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:\"\\u274C Deployment failed. Please check the GitHub Actions logs or contact support.\"}),/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/litlfred/sgex/actions`,className:\"actions-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"View Actions Log\"})]}):/*#__PURE__*/_jsx(\"a\",{href:branch.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>copyToClipboard(branch.url,'branch',branch.name),title:\"Copy URL to clipboard\",children:\"\\uD83D\\uDCCB Copy URL\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",branch.url]})})]},branch.name);})})]}),activeTab==='prs'&&/*#__PURE__*/_jsxs(\"div\",{className:\"pr-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-controls\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search pull requests by title or author...\",value:prSearchTerm,onChange:e=>{setPrSearchTerm(e.target.value);setPrPage(1);// Reset to first page when searching\n},className:\"pr-search\"}),/*#__PURE__*/_jsxs(\"select\",{value:prSortBy,onChange:e=>{setPrSortBy(e.target.value);setPrPage(1);// Reset to first page when sorting\n},className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"updated\",children:\"Sort by Recent Updates\"}),/*#__PURE__*/_jsx(\"option\",{value:\"number\",children:\"Sort by PR Number\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alphabetical\",children:\"Sort Alphabetically\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pr-cards\",children:paginatedPRs.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-items\",children:prSearchTerm?/*#__PURE__*/_jsxs(\"p\",{children:[\"No pull requests match your search \\\"\",prSearchTerm,\"\\\".\"]}):/*#__PURE__*/_jsx(\"p\",{children:\"No pull request previews available at the moment.\"})}):paginatedPRs.map(pr=>{const statusKey=`pr-${pr.id}`;const deploymentStatus=deploymentStatuses[statusKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card pr-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"item-name\",children:[\"#\",pr.number,\": \",pr.title]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-badges\",children:[/*#__PURE__*/_jsxs(\"span\",{className:`state-badge ${pr.state}`,children:[pr.state==='open'?'üü¢':'üî¥',\" \",pr.state]}),deploymentStatus&&/*#__PURE__*/_jsxs(\"span\",{className:`status-badge ${deploymentStatus}`,children:[deploymentStatus==='active'&&'üü¢ Active',deploymentStatus==='not-found'&&'üü° Building',deploymentStatus==='errored'&&'üî¥ Error']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"pr-meta\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Branch:\"}),\" \",pr.branchName,\" \\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Author:\"}),\" \",pr.author]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Created: \",pr.createdAt,\" \\u2022 Updated: \",pr.updatedAt]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-actions\",children:[deploymentStatus==='active'?/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}):deploymentStatus==='not-found'?/*#__PURE__*/_jsx(\"div\",{className:\"deployment-message\",children:/*#__PURE__*/_jsx(\"span\",{className:\"building-message\",children:\"\\uD83D\\uDD04 Deployment in progress. Please check back in a few minutes.\"})}):deploymentStatus==='errored'?/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:\"\\u274C Deployment failed. Please check the GitHub Actions logs or contact support.\"}),/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/litlfred/sgex/actions`,className:\"actions-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"View Actions Log\"})]}):/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>copyToClipboard(pr.url,'PR',`#${pr.number}`),title:\"Copy URL to clipboard\",children:\"\\uD83D\\uDCCB Copy URL\"}),/*#__PURE__*/_jsx(\"a\",{href:pr.prUrl,className:\"pr-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCB View PR\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",pr.url]})})]},pr.id);})}),totalPRPages>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.max(1,prPage-1)),disabled:prPage===1,children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"pagination-info\",children:[\"Page \",prPage,\" of \",totalPRPages,\" (\",sortedPRs.length,\" total)\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.min(totalPRPages,prPage+1)),disabled:prPage===totalPRPages,children:\"Next \\u2192\"})]})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"branch-listing-footer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"footer-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"footer-left\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"source-link\",children:\"\\uD83D\\uDCE6 Source Code\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"footer-center\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Main Application:\"}),\" \",/*#__PURE__*/_jsx(\"a\",{href:\"./sgex/main/index.html\",children:\"View Main Branch \\u2192\"})]})})]})}),showContributeModal&&/*#__PURE__*/_jsx(HelpModal,{helpTopic:contributeHelpTopic,onClose:()=>setShowContributeModal(false)})]})});};export default BranchListing;","map":{"version":3,"names":["React","useState","useEffect","useCallback","PageLayout","HelpModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BranchListing","branches","setBranches","pullRequests","setPullRequests","loading","setLoading","error","setError","activeTab","setActiveTab","prPage","setPrPage","prSearchTerm","setPrSearchTerm","branchSearchTerm","setBranchSearchTerm","prSortBy","setPrSortBy","branchSortBy","setBranchSortBy","showContributeModal","setShowContributeModal","deploymentStatuses","setDeploymentStatuses","checkingStatuses","setCheckingStatuses","ITEMS_PER_PAGE","checkDeploymentStatus","url","response","fetch","method","ok","status","checkAllDeploymentStatuses","branchData","prData","statuses","branch","name","pr","id","copyToClipboard","type","navigator","clipboard","writeText","console","log","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","sortBranches","sortBy","sort","a","b","localeCompare","dateA","Date","lastModified","dateB","sortPRs","prs","number","title","updatedAt","contributeHelpTopic","content","fetchData","owner","repo","branchResponse","Error","json","prResponse","filteredBranches","filter","map","_branch$commit$commit","_branch$commit$commit2","safeName","replace","commit","committer","date","toLocaleDateString","formattedPRs","safeBranchName","head","ref","state","author","user","login","branchName","prUrl","html_url","updated_at","createdAt","created_at","err","message","process","env","NODE_ENV","includes","mockBranches","sha","now","mockPRs","filteredPRs","toLowerCase","sortedPRs","paginatedPRs","slice","totalPRPages","Math","ceil","length","sortedBranches","pageName","showMascot","showHeader","children","className","src","alt","onClick","href","target","rel","onError","e","placeholder","onChange","statusKey","deploymentStatus","substring","max","disabled","min","helpTopic","onClose"],"sources":["/home/runner/work/sgex/sgex/src/components/BranchListing.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { PageLayout } from './framework';\nimport HelpModal from './HelpModal';\nimport './BranchListing.css';\n\nconst BranchListing = () => {\n  const [branches, setBranches] = useState([]);\n  const [pullRequests, setPullRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('prs'); // Start with PR preview section\n  const [prPage, setPrPage] = useState(1);\n  const [prSearchTerm, setPrSearchTerm] = useState('');\n  const [branchSearchTerm, setBranchSearchTerm] = useState('');\n  const [prSortBy, setPrSortBy] = useState('updated'); // updated, number, alphabetical\n  const [branchSortBy, setBranchSortBy] = useState('updated'); // updated, alphabetical\n  const [showContributeModal, setShowContributeModal] = useState(false);\n  const [deploymentStatuses, setDeploymentStatuses] = useState({});\n  const [checkingStatuses, setCheckingStatuses] = useState(false);\n\n  const ITEMS_PER_PAGE = 5;\n\n  // Function to check deployment status\n  const checkDeploymentStatus = async (url) => {\n    try {\n      const response = await fetch(url, { method: 'HEAD' });\n      if (response.ok) {\n        return 'active';\n      } else if (response.status === 404) {\n        return 'not-found';\n      } else {\n        return 'errored';\n      }\n    } catch (error) {\n      return 'errored';\n    }\n  };\n\n  // Function to check deployment statuses for all items\n  const checkAllDeploymentStatuses = useCallback(async (branchData, prData) => {\n    setCheckingStatuses(true);\n    const statuses = {};\n    \n    // Check branches\n    for (const branch of branchData) {\n      const status = await checkDeploymentStatus(branch.url);\n      statuses[`branch-${branch.name}`] = status;\n    }\n    \n    // Check PRs\n    for (const pr of prData) {\n      const status = await checkDeploymentStatus(pr.url);\n      statuses[`pr-${pr.id}`] = status;\n    }\n    \n    setDeploymentStatuses(statuses);\n    setCheckingStatuses(false);\n  }, []);\n\n  // Function to copy URL to clipboard\n  const copyToClipboard = async (url, type, name) => {\n    try {\n      await navigator.clipboard.writeText(url);\n      // You could add a toast notification here\n      console.log(`Copied ${type} URL for ${name} to clipboard`);\n    } catch (error) {\n      // Fallback for browsers that don't support clipboard API\n      const textArea = document.createElement('textarea');\n      textArea.value = url;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      console.log(`Copied ${type} URL for ${name} to clipboard (fallback)`);\n    }\n  };\n\n  // Sorting functions\n  const sortBranches = (branches, sortBy) => {\n    return [...branches].sort((a, b) => {\n      switch (sortBy) {\n        case 'alphabetical':\n          return a.name.localeCompare(b.name);\n        case 'updated':\n        default:\n          const dateA = new Date(a.lastModified);\n          const dateB = new Date(b.lastModified);\n          return dateB - dateA; // Most recent first\n      }\n    });\n  };\n\n  const sortPRs = (prs, sortBy) => {\n    return [...prs].sort((a, b) => {\n      switch (sortBy) {\n        case 'number':\n          return b.number - a.number; // Highest number first\n        case 'alphabetical':\n          return a.title.localeCompare(b.title);\n        case 'updated':\n        default:\n          const dateA = new Date(a.updatedAt);\n          const dateB = new Date(b.updatedAt);\n          return dateB - dateA; // Most recent first\n      }\n    });\n  };\n\n  // \"How to contribute\" slideshow content\n  const contributeHelpTopic = {\n    id: 'how-to-contribute',\n    title: 'How to Contribute to SGEX',\n    type: 'slideshow',\n    content: [\n      {\n        title: 'Welcome to SGEX - A Collaborative Workbench',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot\" class=\"contribute-mascot\" />\n            </div>\n            <h3>What is SGEX?</h3>\n            <p>SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits.</p>\n            <p>Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 1: Report a Bug or Make a Feature Request',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot examining a bug\" class=\"contribute-mascot bug-report\" />\n            </div>\n            <h3>üêõ Found something that needs fixing?</h3>\n            <p>Every great contribution starts with identifying what can be improved:</p>\n            <ul>\n              <li><strong>Bug reports:</strong> Help us identify and fix issues</li>\n              <li><strong>Feature requests:</strong> Share ideas for new functionality</li>\n              <li><strong>Documentation improvements:</strong> Make our guides clearer</li>\n              <li><strong>User experience feedback:</strong> Tell us what's confusing</li>\n            </ul>\n            <p>Click the mascot's help button on any page to quickly report issues!</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 2: Assignment to a Coding Agent',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"Robotic SGEX Mascot\" class=\"contribute-mascot coding-agent\" />\n            </div>\n            <h3>ü§ñ AI-Powered Development</h3>\n            <p>Once your issue is triaged, it may be assigned to one of our coding agents:</p>\n            <ul>\n              <li><strong>Automated analysis:</strong> AI agents analyze the requirements</li>\n              <li><strong>Code generation:</strong> Initial implementations are created</li>\n              <li><strong>Testing integration:</strong> Automated tests validate changes</li>\n              <li><strong>Documentation updates:</strong> Keep documentation in sync</li>\n            </ul>\n            <p>This hybrid approach combines human insight with AI efficiency.</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 3: Community Collaboration',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <div class=\"mascot-group\">\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 1\" class=\"contribute-mascot community\" />\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 2\" class=\"contribute-mascot community\" />\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 3\" class=\"contribute-mascot community\" />\n              </div>\n              <div class=\"thought-bubble\">üí´</div>\n            </div>\n            <h3>üåü Real-time Evolution</h3>\n            <p>The community drives continuous improvement through collaborative discussion:</p>\n            <ul>\n              <li><strong>Code reviews:</strong> Community members review and suggest improvements</li>\n              <li><strong>Testing feedback:</strong> Real-world testing by healthcare professionals</li>\n              <li><strong>Knowledge sharing:</strong> Best practices emerge from collective experience</li>\n              <li><strong>Iterative refinement:</strong> The workbench evolves based on actual usage</li>\n            </ul>\n            <p>Together, we're building the future of digital health tooling!</p>\n          </div>\n        `\n      },\n      {\n        title: 'Get Started Today!',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot celebrating\" class=\"contribute-mascot celebrate\" />\n            </div>\n            <h3>üöÄ Ready to Contribute?</h3>\n            <div class=\"action-buttons\">\n              <a href=\"https://github.com/litlfred/sgex/issues/new\" target=\"_blank\" class=\"contribute-btn primary\">\n                üêõ Report a Bug\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/issues/new?template=feature_request.md\" target=\"_blank\" class=\"contribute-btn secondary\">\n                ‚ú® Request a Feature  \n              </a>\n              <a href=\"/sgex/main/docs/\" target=\"_blank\" class=\"contribute-btn tertiary\">\n                üìö Read Documentation\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/tree/main/public/docs\" target=\"_blank\" class=\"contribute-btn tertiary-alt\">\n                üìñ Docs on GitHub\n              </a>\n            </div>\n            <p class=\"contribute-footer\">\n              <strong>Every contribution matters!</strong> Whether you're reporting a bug, testing a feature, or sharing feedback, you're helping improve digital health tools for healthcare workers worldwide.\n            </p>\n          </div>\n        `\n      }\n    ]\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        \n        // Use GitHub API to fetch branches and PRs for the sgex repository\n        const owner = 'litlfred';\n        const repo = 'sgex';\n        \n        // Fetch branches\n        const branchResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/branches`);\n        if (!branchResponse.ok) {\n          throw new Error(`Failed to fetch branches: ${branchResponse.status}`);\n        }\n        const branchData = await branchResponse.json();\n        \n        // Fetch pull requests\n        const prResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=all&sort=updated&per_page=100`);\n        if (!prResponse.ok) {\n          throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);\n        }\n        const prData = await prResponse.json();\n        \n        // Filter out gh-pages branch and format data\n        const filteredBranches = branchData\n          .filter(branch => branch.name !== 'gh-pages')\n          .map(branch => {\n            // Convert branch name to safe directory name (replace slashes with dashes)\n            const safeName = branch.name.replace(/\\//g, '-');\n            return {\n              name: branch.name,\n              safeName: safeName,\n              commit: branch.commit,\n              url: `./sgex/${safeName}/index.html`,\n              lastModified: branch.commit.commit?.committer?.date \n                ? new Date(branch.commit.commit.committer.date).toLocaleDateString()\n                : 'Unknown'\n            };\n          });\n        \n        // Format PR data\n        const formattedPRs = prData.map(pr => {\n          const safeBranchName = pr.head.ref.replace(/\\//g, '-');\n          return {\n            id: pr.id,\n            number: pr.number,\n            title: pr.title,\n            state: pr.state,\n            author: pr.user.login,\n            branchName: pr.head.ref,\n            safeBranchName: safeBranchName,\n            url: `./sgex/${safeBranchName}/index.html`,\n            prUrl: pr.html_url,\n            updatedAt: new Date(pr.updated_at).toLocaleDateString(),\n            createdAt: new Date(pr.created_at).toLocaleDateString()\n          };\n        });\n        \n        setBranches(filteredBranches);\n        setPullRequests(formattedPRs);\n        \n        // Check deployment statuses\n        await checkAllDeploymentStatuses(filteredBranches, formattedPRs);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message);\n        \n        // Only use fallback data in development or when GitHub API is blocked\n        if (process.env.NODE_ENV === 'development' || err.message.includes('Failed to fetch')) {\n          console.log('Using fallback mock data for demonstration...');\n          const mockBranches = [\n            {\n              name: 'main',\n              safeName: 'main',\n              commit: { sha: 'abc1234' },\n              url: './sgex/main/index.html',\n              lastModified: new Date().toLocaleDateString()\n            },\n            {\n              name: 'feature/user-auth',\n              safeName: 'feature-user-auth',\n              commit: { sha: 'def5678' },\n              url: './sgex/feature-user-auth/index.html',\n              lastModified: new Date(Date.now() - 86400000).toLocaleDateString()\n            },\n            {\n              name: 'fix/api-endpoints',\n              safeName: 'fix-api-endpoints',\n              commit: { sha: 'ghi9012' },\n              url: './sgex/fix-api-endpoints/index.html',\n              lastModified: new Date(Date.now() - 172800000).toLocaleDateString()\n            }\n          ];\n\n          const mockPRs = [\n            {\n              id: 1,\n              number: 123,\n              title: 'Improve multi-page selector landing page for GitHub deployment',\n              state: 'open',\n              author: 'copilot',\n              branchName: 'copilot/fix-459',\n              safeBranchName: 'copilot-fix-459',\n              url: './sgex/copilot-fix-459/index.html',\n              prUrl: 'https://github.com/litlfred/sgex/pull/123',\n              updatedAt: new Date().toLocaleDateString(),\n              createdAt: new Date(Date.now() - 86400000).toLocaleDateString()\n            },\n            {\n              id: 2,\n              number: 122,\n              title: 'Add dark mode support',\n              state: 'closed',\n              author: 'developer',\n              branchName: 'feature/dark-mode',\n              safeBranchName: 'feature-dark-mode',\n              url: './sgex/feature-dark-mode/index.html',\n              prUrl: 'https://github.com/litlfred/sgex/pull/122',\n              updatedAt: new Date(Date.now() - 172800000).toLocaleDateString(),\n              createdAt: new Date(Date.now() - 345600000).toLocaleDateString()\n            },\n            {\n              id: 3,\n              number: 121,\n              title: 'Fix authentication flow',\n              state: 'open',\n              author: 'contributor',\n              branchName: 'fix/auth-flow',\n              safeBranchName: 'fix-auth-flow',\n              url: './sgex/fix-auth-flow/index.html',\n              prUrl: 'https://github.com/litlfred/sgex/pull/121',\n              updatedAt: new Date(Date.now() - 259200000).toLocaleDateString(),\n              createdAt: new Date(Date.now() - 432000000).toLocaleDateString()\n            }\n          ];\n\n          setBranches(mockBranches);\n          setPullRequests(mockPRs);\n          setError(null); // Clear error since we have fallback data\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [checkAllDeploymentStatuses]);\n\n  // Filter and sort PRs based on search and sorting\n  const filteredPRs = pullRequests.filter(pr => \n    pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n    pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n  );\n  const sortedPRs = sortPRs(filteredPRs, prSortBy);\n  const paginatedPRs = sortedPRs.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n  const totalPRPages = Math.ceil(sortedPRs.length / ITEMS_PER_PAGE);\n\n  // Filter and sort branches based on search and sorting\n  const filteredBranches = branches.filter(branch => \n    branch.name.toLowerCase().includes(branchSearchTerm.toLowerCase())\n  );\n  const sortedBranches = sortBranches(filteredBranches, branchSortBy);\n\n  if (loading) {\n    return (\n      <PageLayout pageName=\"branch-listing\" showMascot={true} showHeader={false}>\n        <div className=\"branch-listing\">\n          <h1><img src=\"/sgex-mascot.png\" alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          <div className=\"loading\">Loading previews...</div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <PageLayout pageName=\"branch-listing\" showMascot={true} showHeader={false}>\n        <div className=\"branch-listing\">\n          <h1><img src=\"/sgex-mascot.png\" alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          <div className=\"error\">\n            <p>Failed to load previews: {error}</p>\n            <p>Please try refreshing the page or check back later.</p>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout pageName=\"branch-listing\" showMascot={true} showHeader={false}>\n      <div className=\"branch-listing\">\n        <header className=\"branch-listing-header\">\n          <h1><img src=\"/sgex-mascot.png\" alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          \n          <div className=\"prominent-info\">\n            <p className=\"info-text\">\n              üêæ This landing page lists all available previews. \n              Each branch and PR is automatically deployed to its own preview environment.\n            </p>\n          </div>\n        </header>\n\n        <div className=\"main-actions\">\n          <button \n            className=\"contribute-btn primary\"\n            onClick={() => setShowContributeModal(true)}\n          >\n            üåü How to Contribute\n          </button>\n          <a \n            href=\"/sgex/main/docs/\" \n            className=\"contribute-btn secondary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            onError={(e) => {\n              // Fallback to GitHub docs if main branch docs not available\n              e.target.href = \"https://github.com/litlfred/sgex/tree/main/public/docs\";\n            }}\n          >\n            üìö Documentation\n          </a>\n          <a \n            href=\"https://github.com/litlfred/sgex/issues/new\" \n            className=\"contribute-btn tertiary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            üêõ Report a Bug\n          </a>\n        </div>\n\n        <div className=\"preview-tabs\">\n          <button \n            className={`tab-button ${activeTab === 'branches' ? 'active' : ''}`}\n            onClick={() => setActiveTab('branches')}\n          >\n            üåø Branch Previews ({sortedBranches.length})\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'prs' ? 'active' : ''}`}\n            onClick={() => setActiveTab('prs')}\n          >\n            üîÑ Pull Request Previews ({sortedPRs.length})\n          </button>\n        </div>\n\n        {activeTab === 'branches' && (\n          <div className=\"branch-section\">\n            <div className=\"branch-controls\">\n              <input\n                type=\"text\"\n                placeholder=\"Search branches by name...\"\n                value={branchSearchTerm}\n                onChange={(e) => setBranchSearchTerm(e.target.value)}\n                className=\"branch-search\"\n              />\n              <select\n                value={branchSortBy}\n                onChange={(e) => setBranchSortBy(e.target.value)}\n                className=\"sort-select\"\n              >\n                <option value=\"updated\">Sort by Recent Updates</option>\n                <option value=\"alphabetical\">Sort Alphabetically</option>\n              </select>\n              {checkingStatuses && (\n                <span className=\"status-checking\">\n                  üîÑ Checking deployment status...\n                </span>\n              )}\n            </div>\n\n            <div className=\"branch-cards\">\n              {sortedBranches.length === 0 ? (\n                <div className=\"no-items\">\n                  {branchSearchTerm ? (\n                    <p>No branches match your search \"{branchSearchTerm}\".</p>\n                  ) : (\n                    <>\n                      <p>No branch previews available at the moment.</p>\n                      <p>Branch previews will appear here when code is pushed to branches.</p>\n                    </>\n                  )}\n                </div>\n              ) : (\n                sortedBranches.map((branch) => {\n                  const statusKey = `branch-${branch.name}`;\n                  const deploymentStatus = deploymentStatuses[statusKey];\n                  \n                  return (\n                    <div key={branch.name} className=\"preview-card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"item-name\">{branch.name}</h3>\n                        <div className=\"card-badges\">\n                          <span className=\"commit-badge\">\n                            {branch.commit.sha.substring(0, 7)}\n                          </span>\n                          {deploymentStatus && (\n                            <span className={`status-badge ${deploymentStatus}`}>\n                              {deploymentStatus === 'active' && 'üü¢ Active'}\n                              {deploymentStatus === 'not-found' && 'üü° Building'}\n                              {deploymentStatus === 'errored' && 'üî¥ Error'}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"card-body\">\n                        <p className=\"item-date\">\n                          Last updated: {branch.lastModified}\n                        </p>\n                        \n                        <div className=\"branch-actions\">\n                          {deploymentStatus === 'active' ? (\n                            <a \n                              href={branch.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>üöÄ View Preview</span>\n                            </a>\n                          ) : deploymentStatus === 'not-found' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"building-message\">\n                                üîÑ Deployment in progress. Please check back in a few minutes.\n                              </span>\n                            </div>\n                          ) : deploymentStatus === 'errored' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"error-message\">\n                                ‚ùå Deployment failed. Please check the GitHub Actions logs or contact support.\n                              </span>\n                              <a \n                                href={`https://github.com/litlfred/sgex/actions`}\n                                className=\"actions-link\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                View Actions Log\n                              </a>\n                            </div>\n                          ) : (\n                            <a \n                              href={branch.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>üöÄ View Preview</span>\n                            </a>\n                          )}\n                          \n                          <button \n                            className=\"copy-btn\"\n                            onClick={() => copyToClipboard(branch.url, 'branch', branch.name)}\n                            title=\"Copy URL to clipboard\"\n                          >\n                            üìã Copy URL\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className=\"card-footer\">\n                        <small className=\"preview-path\">\n                          Preview URL: {branch.url}\n                        </small>\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'prs' && (\n          <div className=\"pr-section\">\n            <div className=\"pr-controls\">\n              <input\n                type=\"text\"\n                placeholder=\"Search pull requests by title or author...\"\n                value={prSearchTerm}\n                onChange={(e) => {\n                  setPrSearchTerm(e.target.value);\n                  setPrPage(1); // Reset to first page when searching\n                }}\n                className=\"pr-search\"\n              />\n              <select\n                value={prSortBy}\n                onChange={(e) => {\n                  setPrSortBy(e.target.value);\n                  setPrPage(1); // Reset to first page when sorting\n                }}\n                className=\"sort-select\"\n              >\n                <option value=\"updated\">Sort by Recent Updates</option>\n                <option value=\"number\">Sort by PR Number</option>\n                <option value=\"alphabetical\">Sort Alphabetically</option>\n              </select>\n            </div>\n\n            <div className=\"pr-cards\">\n              {paginatedPRs.length === 0 ? (\n                <div className=\"no-items\">\n                  {prSearchTerm ? (\n                    <p>No pull requests match your search \"{prSearchTerm}\".</p>\n                  ) : (\n                    <p>No pull request previews available at the moment.</p>\n                  )}\n                </div>\n              ) : (\n                paginatedPRs.map((pr) => {\n                  const statusKey = `pr-${pr.id}`;\n                  const deploymentStatus = deploymentStatuses[statusKey];\n                  \n                  return (\n                    <div key={pr.id} className=\"preview-card pr-card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"item-name\">#{pr.number}: {pr.title}</h3>\n                        <div className=\"card-badges\">\n                          <span className={`state-badge ${pr.state}`}>\n                            {pr.state === 'open' ? 'üü¢' : 'üî¥'} {pr.state}\n                          </span>\n                          {deploymentStatus && (\n                            <span className={`status-badge ${deploymentStatus}`}>\n                              {deploymentStatus === 'active' && 'üü¢ Active'}\n                              {deploymentStatus === 'not-found' && 'üü° Building'}\n                              {deploymentStatus === 'errored' && 'üî¥ Error'}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"card-body\">\n                        <p className=\"pr-meta\">\n                          <strong>Branch:</strong> {pr.branchName} ‚Ä¢ <strong>Author:</strong> {pr.author}\n                        </p>\n                        <p className=\"item-date\">\n                          Created: {pr.createdAt} ‚Ä¢ Updated: {pr.updatedAt}\n                        </p>\n                        \n                        <div className=\"pr-actions\">\n                          {deploymentStatus === 'active' ? (\n                            <a \n                              href={pr.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>üöÄ View Preview</span>\n                            </a>\n                          ) : deploymentStatus === 'not-found' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"building-message\">\n                                üîÑ Deployment in progress. Please check back in a few minutes.\n                              </span>\n                            </div>\n                          ) : deploymentStatus === 'errored' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"error-message\">\n                                ‚ùå Deployment failed. Please check the GitHub Actions logs or contact support.\n                              </span>\n                              <a \n                                href={`https://github.com/litlfred/sgex/actions`}\n                                className=\"actions-link\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                View Actions Log\n                              </a>\n                            </div>\n                          ) : (\n                            <a \n                              href={pr.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>üöÄ View Preview</span>\n                            </a>\n                          )}\n                          \n                          <button \n                            className=\"copy-btn\"\n                            onClick={() => copyToClipboard(pr.url, 'PR', `#${pr.number}`)}\n                            title=\"Copy URL to clipboard\"\n                          >\n                            üìã Copy URL\n                          </button>\n                          \n                          <a \n                            href={pr.prUrl} \n                            className=\"pr-link\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <span>üìã View PR</span>\n                          </a>\n                        </div>\n                      </div>\n\n                      <div className=\"card-footer\">\n                        <small className=\"preview-path\">\n                          Preview URL: {pr.url}\n                        </small>\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n            </div>\n\n            {totalPRPages > 1 && (\n              <div className=\"pagination\">\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => setPrPage(Math.max(1, prPage - 1))}\n                  disabled={prPage === 1}\n                >\n                  ‚Üê Previous\n                </button>\n                <span className=\"pagination-info\">\n                  Page {prPage} of {totalPRPages} ({sortedPRs.length} total)\n                </span>\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => setPrPage(Math.min(totalPRPages, prPage + 1))}\n                  disabled={prPage === totalPRPages}\n                >\n                  Next ‚Üí\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        <footer className=\"branch-listing-footer\">\n          <div className=\"footer-content\">\n            <div className=\"footer-left\">\n              <a \n                href=\"https://github.com/litlfred/sgex\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"source-link\"\n              >\n                üì¶ Source Code\n              </a>\n            </div>\n            <div className=\"footer-center\">\n              <p>\n                <strong>Main Application:</strong> <a href=\"./sgex/main/index.html\">View Main Branch ‚Üí</a>\n              </p>\n            </div>\n          </div>\n        </footer>\n\n        {showContributeModal && (\n          <HelpModal\n            helpTopic={contributeHelpTopic}\n            onClose={() => setShowContributeModal(false)}\n          />\n        )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default BranchListing;"],"mappings":"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AS,CAAC,CACnC,KAAM,CAAAL,KAAK,CAAG,GAAI,CAAAF,IAAI,CAACH,CAAC,CAACU,SAAS,CAAC,CACnC,MAAO,CAAAL,KAAK,CAAGH,KAAK,CAAE;AAC1B,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAS,mBAAmB,CAAG,CAC1BhC,EAAE,CAAE,mBAAmB,CACvB8B,KAAK,CAAE,2BAA2B,CAClC5B,IAAI,CAAE,WAAW,CACjB+B,OAAO,CAAE,CACP,CACEH,KAAK,CAAE,6CAA6C,CACpDG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEH,KAAK,CAAE,gDAAgD,CACvDG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEH,KAAK,CAAE,sCAAsC,CAC7CG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEH,KAAK,CAAE,iCAAiC,CACxCG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEH,KAAK,CAAE,oBAAoB,CAC3BG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CAEL,CAAC,CAEDrF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsF,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACFtE,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,KAAM,CAAAuE,KAAK,CAAG,UAAU,CACxB,KAAM,CAAAC,IAAI,CAAG,MAAM,CAEnB;AACA,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAhD,KAAK,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}