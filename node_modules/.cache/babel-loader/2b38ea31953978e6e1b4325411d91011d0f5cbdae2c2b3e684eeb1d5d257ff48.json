{"ast":null,"code":"import _objectSpread from\"/home/runner/work/sgex/sgex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{PageLayout}from'./framework';import PATLogin from'./PATLogin';import githubService from'../services/githubService';import secureTokenStorage from'../services/secureTokenStorage';import useThemeImage from'../hooks/useThemeImage';import'./BranchListingPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BranchListingPage=()=>{const[pullRequests,setPullRequests]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[prPage,setPrPage]=useState(1);const[prSearchTerm,setPrSearchTerm]=useState('');const[prSortBy,setPrSortBy]=useState('updated');const[prSortOrder,setPrSortOrder]=useState('desc');const[deploymentStatuses,setDeploymentStatuses]=useState({});const[prFilter,setPrFilter]=useState('open');const[isAuthenticated,setIsAuthenticated]=useState(false);const[githubToken,setGithubToken]=useState(null);const[prComments,setPrComments]=useState({});const[loadingComments]=useState(false);// Removed setLoadingComments as it's not used\nconst[commentInputs,setCommentInputs]=useState({});const[submittingComments,setSubmittingComments]=useState({});const[expandedDiscussions,setExpandedDiscussions]=useState({});const[discussionSummaries,setDiscussionSummaries]=useState({});const[loadingSummaries,setLoadingSummaries]=useState(false);const ITEMS_PER_PAGE=10;// Theme-aware image paths\nconst mascotImage=useThemeImage('sgex-mascot.png');// GitHub authentication functions\nconst handleAuthSuccess=token=>{// Authenticate using githubService which will handle secure storage\nconst success=githubService.authenticate(token);if(success){setGithubToken(token);setIsAuthenticated(true);}};const handleLogout=()=>{setGithubToken(null);setIsAuthenticated(false);githubService.logout();// Use secure logout method\nsetPrComments({});};// Function to fetch PR comments summary\nconst fetchPRCommentsSummary=async prNumber=>{try{const headers={'Accept':'application/vnd.github.v3+json'};// Add auth header if available for better rate limits\nif(githubToken){headers['Authorization']=\"token \".concat(githubToken);}const response=await fetch(\"https://api.github.com/repos/litlfred/sgex/issues/\".concat(prNumber,\"/comments\"),{headers});if(!response.ok){console.warn(\"Failed to fetch comments for PR \".concat(prNumber,\": \").concat(response.status));return{count:0,lastComment:null,error:true};}const comments=await response.json();if(comments.length===0){return{count:0,lastComment:null};}const lastComment=comments[comments.length-1];return{count:comments.length,lastComment:{author:lastComment.user.login,created_at:new Date(lastComment.created_at),avatar_url:lastComment.user.avatar_url}};}catch(error){console.warn(\"Error fetching comment summary for PR \".concat(prNumber,\":\"),error);return{count:0,lastComment:null,error:true};}};// Function to fetch all PR comments (for expanded view)\nconst fetchAllPRComments=async prNumber=>{try{const headers={'Accept':'application/vnd.github.v3+json'};// Add auth header if available for better rate limits\nif(githubToken){headers['Authorization']=\"token \".concat(githubToken);}const response=await fetch(\"https://api.github.com/repos/litlfred/sgex/issues/\".concat(prNumber,\"/comments\"),{headers});if(!response.ok){console.warn(\"Failed to fetch comments for PR \".concat(prNumber,\": \").concat(response.status));return[];}const comments=await response.json();return comments.map(comment=>({id:comment.id,author:comment.user.login,body:comment.body,created_at:new Date(comment.created_at).toLocaleDateString(),avatar_url:comment.user.avatar_url}));}catch(error){console.warn(\"Error fetching all comments for PR \".concat(prNumber,\":\"),error);return[];}};// Function to load discussion summaries for visible PRs\nconst loadDiscussionSummaries=useCallback(async prs=>{if(prs.length===0)return;setLoadingSummaries(true);const summaries={};for(const pr of prs){summaries[pr.number]=await fetchPRCommentsSummary(pr.number);}setDiscussionSummaries(summaries);setLoadingSummaries(false);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[githubToken]);// Function to toggle discussion expansion\nconst toggleDiscussion=async prNumber=>{const isExpanded=expandedDiscussions[prNumber];if(!isExpanded){// Load all comments when expanding\nconst comments=await fetchAllPRComments(prNumber);setPrComments(prev=>_objectSpread(_objectSpread({},prev),{},{[prNumber]:comments}));}setExpandedDiscussions(prev=>_objectSpread(_objectSpread({},prev),{},{[prNumber]:!isExpanded}));};// Function to get discussion summary text\nconst getDiscussionSummaryText=prNumber=>{const summary=discussionSummaries[prNumber];if(loadingSummaries){return\"Loading discussion...\";}if(!summary){return\"No comments yet\";}if(summary.error){return\"Unable to load comments\";}if(summary.count===0){return\"No comments yet\";}const{count,lastComment}=summary;const timeAgo=lastComment?getTimeAgo(lastComment.created_at):'';return\"\".concat(count,\" comment\").concat(count>1?'s':'',\", last by \").concat(lastComment.author,\" \").concat(timeAgo);};// Helper function to get relative time\nconst getTimeAgo=date=>{const now=new Date();const diffMs=now-date;const diffDays=Math.floor(diffMs/(1000*60*60*24));if(diffDays===0)return'today';if(diffDays===1)return'1 day ago';if(diffDays<7)return\"\".concat(diffDays,\" days ago\");if(diffDays<30)return\"\".concat(Math.floor(diffDays/7),\" week\").concat(Math.floor(diffDays/7)>1?'s':'',\" ago\");return\"\".concat(Math.floor(diffDays/30),\" month\").concat(Math.floor(diffDays/30)>1?'s':'',\" ago\");};// Function to submit a comment\nconst submitComment=async(prNumber,commentText)=>{if(!githubToken||!commentText.trim())return false;setSubmittingComments(prev=>_objectSpread(_objectSpread({},prev),{},{[prNumber]:true}));try{const response=await fetch(\"https://api.github.com/repos/litlfred/sgex/issues/\".concat(prNumber,\"/comments\"),{method:'POST',headers:{'Authorization':\"token \".concat(githubToken),'Accept':'application/vnd.github.v3+json','Content-Type':'application/json'},body:JSON.stringify({body:commentText})});if(!response.ok){throw new Error(\"Failed to submit comment: \".concat(response.status));}setCommentInputs(prev=>_objectSpread(_objectSpread({},prev),{},{[prNumber]:''}));// Refresh both full comments (if expanded) and summary\nif(expandedDiscussions[prNumber]){const updatedComments=await fetchAllPRComments(prNumber);setPrComments(prev=>_objectSpread(_objectSpread({},prev),{},{[prNumber]:updatedComments}));}// Refresh the discussion summary\nconst updatedSummary=await fetchPRCommentsSummary(prNumber);setDiscussionSummaries(prev=>_objectSpread(_objectSpread({},prev),{},{[prNumber]:updatedSummary}));return true;}catch(error){console.error(\"Error submitting comment for PR \".concat(prNumber,\":\"),error);return false;}finally{setSubmittingComments(prev=>_objectSpread(_objectSpread({},prev),{},{[prNumber]:false}));}};// Function to check deployment status for a branch\nconst checkDeploymentStatus=async safeBranchName=>{try{const response=await fetch(\"https://api.github.com/repos/litlfred/sgex/actions/workflows/deploy.yml/runs?branch=\".concat(safeBranchName,\"&per_page=1\"),{headers:githubToken?{'Authorization':\"token \".concat(githubToken),'Accept':'application/vnd.github.v3+json'}:{'Accept':'application/vnd.github.v3+json'}});if(!response.ok){throw new Error(\"Failed to fetch deployment status: \".concat(response.status));}const data=await response.json();if(data.workflow_runs&&data.workflow_runs.length>0){const latestRun=data.workflow_runs[0];return{status:latestRun.status,conclusion:latestRun.conclusion,html_url:latestRun.html_url,created_at:latestRun.created_at};}return{status:'unknown',conclusion:null};}catch(error){console.error(\"Error checking deployment status for \".concat(safeBranchName,\":\"),error);return{status:'error',conclusion:'error'};}};// Function to update deployment statuses for visible PRs\nconst updateDeploymentStatuses=useCallback(async prs=>{if(prs.length===0)return;const statuses={};for(const pr of prs){statuses[pr.safeBranchName]=await checkDeploymentStatus(pr.safeBranchName);}setDeploymentStatuses(prev=>_objectSpread(_objectSpread({},prev),statuses));// eslint-disable-next-line react-hooks/exhaustive-deps\n},[githubToken]);// Function to get deployment status display info\nconst getDeploymentStatusInfo=safeBranchName=>{const status=deploymentStatuses[safeBranchName];if(!status)return{text:'Checking...',class:'unknown'};if(status.status==='completed'&&status.conclusion==='success'){return{text:'✅ Deployed',class:'success'};}else if(status.status==='completed'&&status.conclusion==='failure'){return{text:'❌ Failed',class:'failed'};}else if(status.status==='in_progress'){return{text:'🔄 Deploying',class:'in-progress'};}else if(status.status==='queued'){return{text:'⏳ Queued',class:'queued'};}else if(status.status==='error'){return{text:'⚠️ Error',class:'error'};}else{return{text:'❓ Unknown',class:'unknown'};}};// Sorting functions\nconst sortPRs=function(prs,sortBy){let sortOrder=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'desc';return[...prs].sort((a,b)=>{let comparison=0;switch(sortBy){case'number':comparison=b.number-a.number;break;case'alphabetical':comparison=a.title.localeCompare(b.title);break;case'updated':default:const dateA=new Date(a.updatedAt);const dateB=new Date(b.updatedAt);comparison=dateB-dateA;break;}// Reverse comparison for ascending order\nreturn sortOrder==='asc'?-comparison:comparison;});};// Check for existing authentication on component mount\nuseEffect(()=>{const success=githubService.initializeFromStoredToken();if(success){const tokenInfo=githubService.getStoredTokenInfo();if(tokenInfo){const tokenData=secureTokenStorage.retrieveToken();if(tokenData){setGithubToken(tokenData.token);setIsAuthenticated(true);}}}},[]);// Fetch data\nuseEffect(()=>{const fetchData=async()=>{try{setLoading(true);const owner='litlfred';const repo='sgex';const prState=prFilter==='all'?'all':prFilter;const prResponse=await fetch(\"https://api.github.com/repos/\".concat(owner,\"/\").concat(repo,\"/pulls?state=\").concat(prState,\"&sort=updated&per_page=100\"));if(!prResponse.ok){throw new Error(\"Failed to fetch pull requests: \".concat(prResponse.status));}const prData=await prResponse.json();const formattedPRs=prData.map(pr=>{const safeBranchName=pr.head.ref.replace(/\\//g,'-');return{id:pr.id,number:pr.number,title:pr.title,state:pr.state,author:pr.user.login,branchName:pr.head.ref,safeBranchName:safeBranchName,url:\"./\".concat(safeBranchName,\"/index.html\"),prUrl:pr.html_url,updatedAt:new Date(pr.updated_at).toLocaleDateString(),createdAt:new Date(pr.created_at).toLocaleDateString()};});setPullRequests(formattedPRs);// Always try to load discussion summaries\nawait loadDiscussionSummaries(formattedPRs.slice(0,ITEMS_PER_PAGE));}catch(err){console.error('Error fetching data:',err);setError(err.message);// Fallback mock data\nif(err.message.includes('Failed to fetch')){console.log('Using fallback mock data...');const mockPRs=[{id:1,number:460,title:'Improve multi-page selector landing page for GitHub deployment',state:'open',author:'copilot',branchName:'copilot/fix-459',safeBranchName:'copilot-fix-459',url:'./sgex/copilot-fix-459/index.html',prUrl:'https://github.com/litlfred/sgex/pull/460',updatedAt:new Date().toLocaleDateString(),createdAt:new Date(Date.now()-86400000).toLocaleDateString()},{id:2,number:459,title:'Add enhanced PR preview functionality',state:'open',author:'developer',branchName:'feature/pr-preview',safeBranchName:'feature-pr-preview',url:'./sgex/feature-pr-preview/index.html',prUrl:'https://github.com/litlfred/sgex/pull/459',updatedAt:new Date(Date.now()-172800000).toLocaleDateString(),createdAt:new Date(Date.now()-345600000).toLocaleDateString()}];setPullRequests(mockPRs);setError(null);}}finally{setLoading(false);}};fetchData();},[prFilter,githubToken,loadDiscussionSummaries]);// Poll deployment statuses every 7 seconds for visible PRs\nuseEffect(()=>{if(pullRequests.length===0)return;const filtered=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.branchName.toLowerCase().includes(prSearchTerm.toLowerCase()));const sorted=sortPRs(filtered,prSortBy,prSortOrder);const paginated=sorted.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);// Initial status check\nupdateDeploymentStatuses(paginated);// Set up polling every 7 seconds\nconst interval=setInterval(()=>{updateDeploymentStatuses(paginated);},7000);return()=>clearInterval(interval);},[pullRequests,prSearchTerm,prSortBy,prSortOrder,prPage,updateDeploymentStatuses]);// Load comments when pagination changes\nuseEffect(()=>{if(pullRequests.length>0){const filtered=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.branchName.toLowerCase().includes(prSearchTerm.toLowerCase()));const sorted=sortPRs(filtered,prSortBy,prSortOrder);const paginated=sorted.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);loadDiscussionSummaries(paginated);}},[prPage,prSearchTerm,prSortBy,prSortOrder,pullRequests,loadDiscussionSummaries]);// Filter and sort PRs\nconst filteredPRs=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.branchName.toLowerCase().includes(prSearchTerm.toLowerCase()));const sortedPRs=sortPRs(filteredPRs,prSortBy,prSortOrder);const paginatedPRs=sortedPRs.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);const totalPRPages=Math.ceil(sortedPRs.length/ITEMS_PER_PAGE);if(loading){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing-loading\",showBreadcrumbs:false,children:/*#__PURE__*/_jsx(\"div\",{className:\"branch-listing-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading previews...\"})]})})});}if(error){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing-error\",showBreadcrumbs:false,children:/*#__PURE__*/_jsx(\"div\",{className:\"branch-listing-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Failed to load previews: \",error]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please try refreshing the page or check back later.\"})]})]})})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showBreadcrumbs:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing-content\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"prominent-info\",children:/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"\\uD83D\\uDC3E This landing page lists all available previews. Each branch and PR is automatically deployed to its own preview environment.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-cards\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"action-card main-site-card\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://litlfred.github.io/sgex/main\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"card-link\",children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Mascot\",className:\"card-icon\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"View Main Site\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Access the main SGEX workbench\"})]})}),!isAuthenticated&&/*#__PURE__*/_jsx(\"div\",{className:\"action-card login-card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"login-icon\",children:\"\\uD83D\\uDD10\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"GitHub Login\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Login to view and add comments\"}),/*#__PURE__*/_jsx(PATLogin,{onAuthSuccess:handleAuthSuccess})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"preview-tabs\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"tab-button active\",children:[\"\\uD83D\\uDD04 Pull Request Previews (\",sortedPRs.length,\")\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-filter-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pr-filter\",children:\"Filter PRs:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"pr-filter\",value:prFilter,onChange:e=>{setPrFilter(e.target.value);setPrPage(1);},className:\"filter-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"open\",children:\"Open PRs Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"closed\",children:\"Closed PRs Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All PRs\"})]})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search pull requests by title, author, or branch name...\",value:prSearchTerm,onChange:e=>{setPrSearchTerm(e.target.value);setPrPage(1);},className:\"pr-search\"}),/*#__PURE__*/_jsxs(\"select\",{value:prSortBy,onChange:e=>{setPrSortBy(e.target.value);setPrPage(1);},className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"updated\",children:\"Sort by Recent Updates\"}),/*#__PURE__*/_jsx(\"option\",{value:\"number\",children:\"Sort by PR Number\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alphabetical\",children:\"Sort Alphabetically\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:prSortOrder,onChange:e=>{setPrSortOrder(e.target.value);setPrPage(1);},className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"desc\",children:\"Descending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"asc\",children:\"Ascending\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pr-cards\",children:paginatedPRs.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-items\",children:prSearchTerm?/*#__PURE__*/_jsxs(\"p\",{children:[\"No pull requests match your search \\\"\",prSearchTerm,\"\\\".\"]}):/*#__PURE__*/_jsx(\"p\",{children:\"No pull request previews available at the moment.\"})}):paginatedPRs.map(pr=>{var _commentInputs$pr$num;return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card pr-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"item-name\",children:[\"#\",pr.number,\": \",pr.title]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-badges\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"state-badge \".concat(pr.state),children:[pr.state==='open'?'🟢':'🔴',\" \",pr.state]}),/*#__PURE__*/_jsx(\"span\",{className:\"deployment-status \".concat(getDeploymentStatusInfo(pr.safeBranchName).class),children:getDeploymentStatusInfo(pr.safeBranchName).text})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"pr-meta\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Branch:\"}),\" \",pr.branchName,\" \\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Author:\"}),\" \",pr.author]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Created: \",pr.createdAt,\" \\u2022 Updated: \",pr.updatedAt]}),/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-summary-bar\",onClick:()=>toggleDiscussion(pr.number),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-summary-text\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"discussion-summary-icon\",children:\"\\uD83D\\uDCAC\"}),getDiscussionSummaryText(pr.number)]}),/*#__PURE__*/_jsx(\"span\",{className:\"discussion-expand-icon \".concat(expandedDiscussions[pr.number]?'expanded':''),children:\"\\u25B6\"})]}),expandedDiscussions[pr.number]&&/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-expanded-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"discussion-title\",children:\"Discussion\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"discussion-actions\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex/pull/\".concat(pr.number,\"/files\"),target:\"_blank\",rel:\"noopener noreferrer\",className:\"discussion-action-btn\",children:\"\\uD83D\\uDCC1 View Files\"}),/*#__PURE__*/_jsx(\"a\",{href:pr.prUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"discussion-action-btn secondary\",children:\"\\uD83D\\uDD17 View PR\"})]})]}),isAuthenticated&&/*#__PURE__*/_jsxs(\"div\",{className:\"comment-input-section\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:commentInputs[pr.number]||'',onChange:e=>setCommentInputs(prev=>_objectSpread(_objectSpread({},prev),{},{[pr.number]:e.target.value})),placeholder:\"Add a comment...\",className:\"comment-input\",rows:3}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>submitComment(pr.number,commentInputs[pr.number]),disabled:!((_commentInputs$pr$num=commentInputs[pr.number])!==null&&_commentInputs$pr$num!==void 0&&_commentInputs$pr$num.trim())||submittingComments[pr.number],className:\"submit-comment-btn\",children:submittingComments[pr.number]?'Submitting...':'Add Comment'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"discussion-scroll-area\",children:loadingComments?/*#__PURE__*/_jsx(\"div\",{className:\"comments-loading\",children:\"Loading full discussion...\"}):prComments[pr.number]&&prComments[pr.number].length>0?/*#__PURE__*/_jsx(\"div\",{className:\"comments-list\",children:prComments[pr.number].slice(-5).map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:\"comment-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:comment.avatar_url,alt:comment.author,className:\"comment-avatar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-author\",children:comment.author}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-date\",children:comment.created_at})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-body\",children:comment.body.length>200?\"\".concat(comment.body.substring(0,200),\"...\"):comment.body})]},comment.id))}):/*#__PURE__*/_jsx(\"div\",{className:\"no-comments\",children:!isAuthenticated?\"No comments yet. Login to add the first comment!\":\"No comments yet. Be the first to comment!\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-actions\",children:[/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}),/*#__PURE__*/_jsx(\"a\",{href:pr.prUrl,className:\"pr-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCB View PR\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",pr.url]})})]},pr.id);})}),totalPRPages>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.max(1,prPage-1)),disabled:prPage===1,children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"pagination-info\",children:[\"Page \",prPage,\" of \",totalPRPages,\" (\",sortedPRs.length,\" total)\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.min(totalPRPages,prPage+1)),disabled:prPage===totalPRPages,children:\"Next \\u2192\"})]})]})]})});};export default BranchListingPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","PageLayout","PATLogin","githubService","secureTokenStorage","useThemeImage","jsx","_jsx","jsxs","_jsxs","BranchListingPage","pullRequests","setPullRequests","loading","setLoading","error","setError","prPage","setPrPage","prSearchTerm","setPrSearchTerm","prSortBy","setPrSortBy","prSortOrder","setPrSortOrder","deploymentStatuses","setDeploymentStatuses","prFilter","setPrFilter","isAuthenticated","setIsAuthenticated","githubToken","setGithubToken","prComments","setPrComments","loadingComments","commentInputs","setCommentInputs","submittingComments","setSubmittingComments","expandedDiscussions","setExpandedDiscussions","discussionSummaries","setDiscussionSummaries","loadingSummaries","setLoadingSummaries","ITEMS_PER_PAGE","mascotImage","handleAuthSuccess","token","success","authenticate","handleLogout","logout","fetchPRCommentsSummary","prNumber","headers","concat","response","fetch","ok","console","warn","status","count","lastComment","comments","json","length","author","user","login","created_at","Date","avatar_url","fetchAllPRComments","map","comment","id","body","toLocaleDateString","loadDiscussionSummaries","prs","summaries","pr","number","toggleDiscussion","isExpanded","prev","_objectSpread","getDiscussionSummaryText","summary","timeAgo","getTimeAgo","date","now","diffMs","diffDays","Math","floor","submitComment","commentText","trim","method","JSON","stringify","Error","updatedComments","updatedSummary","checkDeploymentStatus","safeBranchName","data","workflow_runs","latestRun","conclusion","html_url","updateDeploymentStatuses","statuses","getDeploymentStatusInfo","text","class","sortPRs","sortBy","sortOrder","arguments","undefined","sort","a","b","comparison","title","localeCompare","dateA","updatedAt","dateB","initializeFromStoredToken","tokenInfo","getStoredTokenInfo","tokenData","retrieveToken","fetchData","owner","repo","prState","prResponse","prData","formattedPRs","head","ref","replace","state","branchName","url","prUrl","updated_at","createdAt","slice","err","message","includes","log","mockPRs","filtered","filter","toLowerCase","sorted","paginated","interval","setInterval","clearInterval","filteredPRs","sortedPRs","paginatedPRs","totalPRPages","ceil","pageName","showBreadcrumbs","children","className","src","alt","href","target","rel","onAuthSuccess","htmlFor","value","onChange","e","type","placeholder","_commentInputs$pr$num","onClick","rows","disabled","substring","max","min"],"sources":["/home/runner/work/sgex/sgex/src/components/BranchListingPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { PageLayout } from './framework';\nimport PATLogin from './PATLogin';\nimport githubService from '../services/githubService';\nimport secureTokenStorage from '../services/secureTokenStorage';\nimport useThemeImage from '../hooks/useThemeImage';\nimport './BranchListingPage.css';\n\nconst BranchListingPage = () => {\n    const [pullRequests, setPullRequests] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [prPage, setPrPage] = useState(1);\n    const [prSearchTerm, setPrSearchTerm] = useState('');\n    const [prSortBy, setPrSortBy] = useState('updated');\n    const [prSortOrder, setPrSortOrder] = useState('desc');\n    const [deploymentStatuses, setDeploymentStatuses] = useState({});\n    const [prFilter, setPrFilter] = useState('open');\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [githubToken, setGithubToken] = useState(null);\n    const [prComments, setPrComments] = useState({});\n    const [loadingComments] = useState(false); // Removed setLoadingComments as it's not used\n    const [commentInputs, setCommentInputs] = useState({});\n    const [submittingComments, setSubmittingComments] = useState({});\n    const [expandedDiscussions, setExpandedDiscussions] = useState({});\n    const [discussionSummaries, setDiscussionSummaries] = useState({});\n    const [loadingSummaries, setLoadingSummaries] = useState(false);\n\n    const ITEMS_PER_PAGE = 10;\n\n    // Theme-aware image paths\n    const mascotImage = useThemeImage('sgex-mascot.png');\n\n    // GitHub authentication functions\n    const handleAuthSuccess = (token) => {\n        // Authenticate using githubService which will handle secure storage\n        const success = githubService.authenticate(token);\n        if (success) {\n            setGithubToken(token);\n            setIsAuthenticated(true);\n        }\n    };\n\n\n    const handleLogout = () => {\n        setGithubToken(null);\n        setIsAuthenticated(false);\n        githubService.logout(); // Use secure logout method\n        setPrComments({});\n    };\n\n\n    // Function to fetch PR comments summary\n    const fetchPRCommentsSummary = async (prNumber) => {\n        try {\n            const headers = {\n                'Accept': 'application/vnd.github.v3+json'\n            };\n            \n            // Add auth header if available for better rate limits\n            if (githubToken) {\n                headers['Authorization'] = `token ${githubToken}`;\n            }\n            \n            const response = await fetch(\n                `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n                { headers }\n            );\n            \n            if (!response.ok) {\n                console.warn(`Failed to fetch comments for PR ${prNumber}: ${response.status}`);\n                return { count: 0, lastComment: null, error: true };\n            }\n            \n            const comments = await response.json();\n            if (comments.length === 0) {\n                return { count: 0, lastComment: null };\n            }\n            \n            const lastComment = comments[comments.length - 1];\n            return {\n                count: comments.length,\n                lastComment: {\n                    author: lastComment.user.login,\n                    created_at: new Date(lastComment.created_at),\n                    avatar_url: lastComment.user.avatar_url\n                }\n            };\n        } catch (error) {\n            console.warn(`Error fetching comment summary for PR ${prNumber}:`, error);\n            return { count: 0, lastComment: null, error: true };\n        }\n    };\n\n    // Function to fetch all PR comments (for expanded view)\n    const fetchAllPRComments = async (prNumber) => {\n        try {\n            const headers = {\n                'Accept': 'application/vnd.github.v3+json'\n            };\n            \n            // Add auth header if available for better rate limits\n            if (githubToken) {\n                headers['Authorization'] = `token ${githubToken}`;\n            }\n            \n            const response = await fetch(\n                `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n                { headers }\n            );\n            \n            if (!response.ok) {\n                console.warn(`Failed to fetch comments for PR ${prNumber}: ${response.status}`);\n                return [];\n            }\n            \n            const comments = await response.json();\n            return comments.map(comment => ({\n                id: comment.id,\n                author: comment.user.login,\n                body: comment.body,\n                created_at: new Date(comment.created_at).toLocaleDateString(),\n                avatar_url: comment.user.avatar_url\n            }));\n        } catch (error) {\n            console.warn(`Error fetching all comments for PR ${prNumber}:`, error);\n            return [];\n        }\n    };\n\n    // Function to load discussion summaries for visible PRs\n    const loadDiscussionSummaries = useCallback(async (prs) => {\n        if (prs.length === 0) return;\n        \n        setLoadingSummaries(true);\n        const summaries = {};\n        \n        for (const pr of prs) {\n            summaries[pr.number] = await fetchPRCommentsSummary(pr.number);\n        }\n        \n        setDiscussionSummaries(summaries);\n        setLoadingSummaries(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [githubToken]);\n\n    // Function to toggle discussion expansion\n    const toggleDiscussion = async (prNumber) => {\n        const isExpanded = expandedDiscussions[prNumber];\n        \n        if (!isExpanded) {\n            // Load all comments when expanding\n            const comments = await fetchAllPRComments(prNumber);\n            setPrComments(prev => ({ ...prev, [prNumber]: comments }));\n        }\n        \n        setExpandedDiscussions(prev => ({\n            ...prev,\n            [prNumber]: !isExpanded\n        }));\n    };\n\n    // Function to get discussion summary text\n    const getDiscussionSummaryText = (prNumber) => {\n        const summary = discussionSummaries[prNumber];\n        \n        if (loadingSummaries) {\n            return \"Loading discussion...\";\n        }\n        \n        if (!summary) {\n            return \"No comments yet\";\n        }\n        \n        if (summary.error) {\n            return \"Unable to load comments\";\n        }\n        \n        if (summary.count === 0) {\n            return \"No comments yet\";\n        }\n        \n        const { count, lastComment } = summary;\n        const timeAgo = lastComment ? getTimeAgo(lastComment.created_at) : '';\n        \n        return `${count} comment${count > 1 ? 's' : ''}, last by ${lastComment.author} ${timeAgo}`;\n    };\n\n    // Helper function to get relative time\n    const getTimeAgo = (date) => {\n        const now = new Date();\n        const diffMs = now - date;\n        const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n        \n        if (diffDays === 0) return 'today';\n        if (diffDays === 1) return '1 day ago';\n        if (diffDays < 7) return `${diffDays} days ago`;\n        if (diffDays < 30) return `${Math.floor(diffDays / 7)} week${Math.floor(diffDays / 7) > 1 ? 's' : ''} ago`;\n        return `${Math.floor(diffDays / 30)} month${Math.floor(diffDays / 30) > 1 ? 's' : ''} ago`;\n    };\n\n    // Function to submit a comment\n    const submitComment = async (prNumber, commentText) => {\n        if (!githubToken || !commentText.trim()) return false;\n        \n        setSubmittingComments(prev => ({ ...prev, [prNumber]: true }));\n        \n        try {\n            const response = await fetch(\n                `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `token ${githubToken}`,\n                        'Accept': 'application/vnd.github.v3+json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        body: commentText\n                    })\n                }\n            );\n            \n            if (!response.ok) {\n                throw new Error(`Failed to submit comment: ${response.status}`);\n            }\n            \n            setCommentInputs(prev => ({ ...prev, [prNumber]: '' }));\n            \n            // Refresh both full comments (if expanded) and summary\n            if (expandedDiscussions[prNumber]) {\n                const updatedComments = await fetchAllPRComments(prNumber);\n                setPrComments(prev => ({ ...prev, [prNumber]: updatedComments }));\n            }\n            \n            // Refresh the discussion summary\n            const updatedSummary = await fetchPRCommentsSummary(prNumber);\n            setDiscussionSummaries(prev => ({ ...prev, [prNumber]: updatedSummary }));\n            \n            return true;\n        } catch (error) {\n            console.error(`Error submitting comment for PR ${prNumber}:`, error);\n            return false;\n        } finally {\n            setSubmittingComments(prev => ({ ...prev, [prNumber]: false }));\n        }\n    };\n\n    // Function to check deployment status for a branch\n    const checkDeploymentStatus = async (safeBranchName) => {\n        try {\n            const response = await fetch(\n                `https://api.github.com/repos/litlfred/sgex/actions/workflows/deploy.yml/runs?branch=${safeBranchName}&per_page=1`,\n                {\n                    headers: githubToken ? {\n                        'Authorization': `token ${githubToken}`,\n                        'Accept': 'application/vnd.github.v3+json'\n                    } : {\n                        'Accept': 'application/vnd.github.v3+json'\n                    }\n                }\n            );\n            \n            if (!response.ok) {\n                throw new Error(`Failed to fetch deployment status: ${response.status}`);\n            }\n            \n            const data = await response.json();\n            if (data.workflow_runs && data.workflow_runs.length > 0) {\n                const latestRun = data.workflow_runs[0];\n                return {\n                    status: latestRun.status,\n                    conclusion: latestRun.conclusion,\n                    html_url: latestRun.html_url,\n                    created_at: latestRun.created_at\n                };\n            }\n            \n            return { status: 'unknown', conclusion: null };\n        } catch (error) {\n            console.error(`Error checking deployment status for ${safeBranchName}:`, error);\n            return { status: 'error', conclusion: 'error' };\n        }\n    };\n\n    // Function to update deployment statuses for visible PRs\n    const updateDeploymentStatuses = useCallback(async (prs) => {\n        if (prs.length === 0) return;\n        \n        const statuses = {};\n        for (const pr of prs) {\n            statuses[pr.safeBranchName] = await checkDeploymentStatus(pr.safeBranchName);\n        }\n        \n        setDeploymentStatuses(prev => ({ ...prev, ...statuses }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [githubToken]);\n\n    // Function to get deployment status display info\n    const getDeploymentStatusInfo = (safeBranchName) => {\n        const status = deploymentStatuses[safeBranchName];\n        if (!status) return { text: 'Checking...', class: 'unknown' };\n        \n        if (status.status === 'completed' && status.conclusion === 'success') {\n            return { text: '✅ Deployed', class: 'success' };\n        } else if (status.status === 'completed' && status.conclusion === 'failure') {\n            return { text: '❌ Failed', class: 'failed' };\n        } else if (status.status === 'in_progress') {\n            return { text: '🔄 Deploying', class: 'in-progress' };\n        } else if (status.status === 'queued') {\n            return { text: '⏳ Queued', class: 'queued' };\n        } else if (status.status === 'error') {\n            return { text: '⚠️ Error', class: 'error' };\n        } else {\n            return { text: '❓ Unknown', class: 'unknown' };\n        }\n    };\n\n    // Sorting functions\n    const sortPRs = (prs, sortBy, sortOrder = 'desc') => {\n        return [...prs].sort((a, b) => {\n            let comparison = 0;\n            switch (sortBy) {\n                case 'number':\n                    comparison = b.number - a.number;\n                    break;\n                case 'alphabetical':\n                    comparison = a.title.localeCompare(b.title);\n                    break;\n                case 'updated':\n                default:\n                    const dateA = new Date(a.updatedAt);\n                    const dateB = new Date(b.updatedAt);\n                    comparison = dateB - dateA;\n                    break;\n            }\n            \n            // Reverse comparison for ascending order\n            return sortOrder === 'asc' ? -comparison : comparison;\n        });\n    };\n\n    // Check for existing authentication on component mount\n    useEffect(() => {\n        const success = githubService.initializeFromStoredToken();\n        if (success) {\n            const tokenInfo = githubService.getStoredTokenInfo();\n            if (tokenInfo) {\n                const tokenData = secureTokenStorage.retrieveToken();\n                if (tokenData) {\n                    setGithubToken(tokenData.token);\n                    setIsAuthenticated(true);\n                }\n            }\n        }\n    }, []);\n\n    // Fetch data\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                \n                const owner = 'litlfred';\n                const repo = 'sgex';\n                \n                const prState = prFilter === 'all' ? 'all' : prFilter;\n                const prResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=${prState}&sort=updated&per_page=100`);\n                if (!prResponse.ok) {\n                    throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);\n                }\n                const prData = await prResponse.json();\n                \n                const formattedPRs = prData.map(pr => {\n                    const safeBranchName = pr.head.ref.replace(/\\//g, '-');\n                    return {\n                        id: pr.id,\n                        number: pr.number,\n                        title: pr.title,\n                        state: pr.state,\n                        author: pr.user.login,\n                        branchName: pr.head.ref,\n                        safeBranchName: safeBranchName,\n                        url: `./${safeBranchName}/index.html`,\n                        prUrl: pr.html_url,\n                        updatedAt: new Date(pr.updated_at).toLocaleDateString(),\n                        createdAt: new Date(pr.created_at).toLocaleDateString()\n                    };\n                });\n                \n                setPullRequests(formattedPRs);\n                \n                // Always try to load discussion summaries\n                await loadDiscussionSummaries(formattedPRs.slice(0, ITEMS_PER_PAGE));\n            } catch (err) {\n                console.error('Error fetching data:', err);\n                setError(err.message);\n                \n                // Fallback mock data\n                if (err.message.includes('Failed to fetch')) {\n                    console.log('Using fallback mock data...');\n                    const mockPRs = [\n                        {\n                            id: 1,\n                            number: 460,\n                            title: 'Improve multi-page selector landing page for GitHub deployment',\n                            state: 'open',\n                            author: 'copilot',\n                            branchName: 'copilot/fix-459',\n                            safeBranchName: 'copilot-fix-459',\n                            url: './sgex/copilot-fix-459/index.html',\n                            prUrl: 'https://github.com/litlfred/sgex/pull/460',\n                            updatedAt: new Date().toLocaleDateString(),\n                            createdAt: new Date(Date.now() - 86400000).toLocaleDateString()\n                        },\n                        {\n                            id: 2,\n                            number: 459,\n                            title: 'Add enhanced PR preview functionality',\n                            state: 'open',\n                            author: 'developer',\n                            branchName: 'feature/pr-preview',\n                            safeBranchName: 'feature-pr-preview',\n                            url: './sgex/feature-pr-preview/index.html',\n                            prUrl: 'https://github.com/litlfred/sgex/pull/459',\n                            updatedAt: new Date(Date.now() - 172800000).toLocaleDateString(),\n                            createdAt: new Date(Date.now() - 345600000).toLocaleDateString()\n                        }\n                    ];\n                    setPullRequests(mockPRs);\n                    setError(null);\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [prFilter, githubToken, loadDiscussionSummaries]);\n\n    // Poll deployment statuses every 7 seconds for visible PRs\n    useEffect(() => {\n        if (pullRequests.length === 0) return;\n        \n        const filtered = pullRequests.filter(pr => \n            pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n            pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n            pr.branchName.toLowerCase().includes(prSearchTerm.toLowerCase())\n        );\n        const sorted = sortPRs(filtered, prSortBy, prSortOrder);\n        const paginated = sorted.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n        \n        // Initial status check\n        updateDeploymentStatuses(paginated);\n        \n        // Set up polling every 7 seconds\n        const interval = setInterval(() => {\n            updateDeploymentStatuses(paginated);\n        }, 7000);\n        \n        return () => clearInterval(interval);\n    }, [pullRequests, prSearchTerm, prSortBy, prSortOrder, prPage, updateDeploymentStatuses]);\n\n    // Load comments when pagination changes\n    useEffect(() => {\n        if (pullRequests.length > 0) {\n            const filtered = pullRequests.filter(pr => \n                pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n                pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n                pr.branchName.toLowerCase().includes(prSearchTerm.toLowerCase())\n            );\n            const sorted = sortPRs(filtered, prSortBy, prSortOrder);\n            const paginated = sorted.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n            loadDiscussionSummaries(paginated);\n        }\n    }, [prPage, prSearchTerm, prSortBy, prSortOrder, pullRequests, loadDiscussionSummaries]);\n\n    // Filter and sort PRs\n    const filteredPRs = pullRequests.filter(pr => \n        pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n        pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n        pr.branchName.toLowerCase().includes(prSearchTerm.toLowerCase())\n    );\n    const sortedPRs = sortPRs(filteredPRs, prSortBy, prSortOrder);\n    const paginatedPRs = sortedPRs.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n    const totalPRPages = Math.ceil(sortedPRs.length / ITEMS_PER_PAGE);\n\n    if (loading) {\n        return (\n            <PageLayout pageName=\"branch-listing-loading\" showBreadcrumbs={false}>\n                <div className=\"branch-listing-content\">\n                    <div className=\"branch-listing-header\">\n                        <h1><img src={mascotImage} alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n                        <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n                        <div className=\"loading\">Loading previews...</div>\n                    </div>\n                </div>\n            </PageLayout>\n        );\n    }\n\n    if (error) {\n        return (\n            <PageLayout pageName=\"branch-listing-error\" showBreadcrumbs={false}>\n                <div className=\"branch-listing-content\">\n                    <div className=\"branch-listing-header\">\n                        <h1><img src={mascotImage} alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n                        <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n                        <div className=\"error\">\n                            <p>Failed to load previews: {error}</p>\n                            <p>Please try refreshing the page or check back later.</p>\n                        </div>\n                    </div>\n                </div>\n            </PageLayout>\n        );\n    }\n\n    return (\n        <PageLayout pageName=\"branch-listing\" showBreadcrumbs={false}>\n            <div className=\"branch-listing-content\">\n                <header className=\"branch-listing-header\">\n                    <h1><img src={mascotImage} alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n                    <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n                    \n                    <div className=\"prominent-info\">\n                        <p className=\"info-text\">\n                            🐾 This landing page lists all available previews. \n                            Each branch and PR is automatically deployed to its own preview environment.\n                        </p>\n                    </div>\n                </header>\n\n                <div className=\"action-cards\">\n                    <div className=\"action-card main-site-card\">\n                        <a \n                            href=\"https://litlfred.github.io/sgex/main\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"card-link\"\n                        >\n                            <img src={mascotImage} alt=\"SGEX Mascot\" className=\"card-icon\" />\n                            <h3>View Main Site</h3>\n                            <p>Access the main SGEX workbench</p>\n                        </a>\n                    </div>\n                    \n                    {!isAuthenticated && (\n                        <div className=\"action-card login-card\">\n                            <div className=\"card-content\">\n                                <div className=\"login-icon\">🔐</div>\n                                <h3>GitHub Login</h3>\n                                <p>Login to view and add comments</p>\n                                <PATLogin onAuthSuccess={handleAuthSuccess} />\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n                <div className=\"preview-tabs\">\n                    <button className=\"tab-button active\">\n                        🔄 Pull Request Previews ({sortedPRs.length})\n                    </button>\n                </div>\n\n                <div className=\"pr-section\">\n                    <div className=\"pr-controls\">\n                        <div className=\"pr-filter-section\">\n                            <label htmlFor=\"pr-filter\">Filter PRs:</label>\n                            <select\n                                id=\"pr-filter\"\n                                value={prFilter}\n                                onChange={(e) => {\n                                    setPrFilter(e.target.value);\n                                    setPrPage(1);\n                                }}\n                                className=\"filter-select\"\n                            >\n                                <option value=\"open\">Open PRs Only</option>\n                                <option value=\"closed\">Closed PRs Only</option>\n                                <option value=\"all\">All PRs</option>\n                            </select>\n                        </div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search pull requests by title, author, or branch name...\"\n                            value={prSearchTerm}\n                            onChange={(e) => {\n                                setPrSearchTerm(e.target.value);\n                                setPrPage(1);\n                            }}\n                            className=\"pr-search\"\n                        />\n                        <select\n                            value={prSortBy}\n                            onChange={(e) => {\n                                setPrSortBy(e.target.value);\n                                setPrPage(1);\n                            }}\n                            className=\"sort-select\"\n                        >\n                            <option value=\"updated\">Sort by Recent Updates</option>\n                            <option value=\"number\">Sort by PR Number</option>\n                            <option value=\"alphabetical\">Sort Alphabetically</option>\n                        </select>\n                        <select\n                            value={prSortOrder}\n                            onChange={(e) => {\n                                setPrSortOrder(e.target.value);\n                                setPrPage(1);\n                            }}\n                            className=\"sort-select\"\n                        >\n                            <option value=\"desc\">Descending</option>\n                            <option value=\"asc\">Ascending</option>\n                        </select>\n                    </div>\n\n                    <div className=\"pr-cards\">\n                        {paginatedPRs.length === 0 ? (\n                            <div className=\"no-items\">\n                                {prSearchTerm ? (\n                                    <p>No pull requests match your search \"{prSearchTerm}\".</p>\n                                ) : (\n                                    <p>No pull request previews available at the moment.</p>\n                                )}\n                            </div>\n                        ) : (\n                            paginatedPRs.map((pr) => (\n                                <div key={pr.id} className=\"preview-card pr-card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"item-name\">#{pr.number}: {pr.title}</h3>\n                                        <div className=\"card-badges\">\n                                            <span className={`state-badge ${pr.state}`}>\n                                                {pr.state === 'open' ? '🟢' : '🔴'} {pr.state}\n                                            </span>\n                                            <span className={`deployment-status ${getDeploymentStatusInfo(pr.safeBranchName).class}`}>\n                                                {getDeploymentStatusInfo(pr.safeBranchName).text}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    \n                                    <div className=\"card-body\">\n                                        <p className=\"pr-meta\">\n                                            <strong>Branch:</strong> {pr.branchName} • <strong>Author:</strong> {pr.author}\n                                        </p>\n                                        <p className=\"item-date\">\n                                            Created: {pr.createdAt} • Updated: {pr.updatedAt}\n                                        </p>\n                                        \n                                        {/* Discussion Summary Status Bar - Always show */}\n                                        <div \n                                            className=\"discussion-summary-bar\"\n                                            onClick={() => toggleDiscussion(pr.number)}\n                                        >\n                                            <div className=\"discussion-summary-text\">\n                                                <span className=\"discussion-summary-icon\">💬</span>\n                                                {getDiscussionSummaryText(pr.number)}\n                                            </div>\n                                            <span className={`discussion-expand-icon ${expandedDiscussions[pr.number] ? 'expanded' : ''}`}>\n                                                ▶\n                                            </span>\n                                        </div>\n\n                                        {/* Expanded Discussion Section */}\n                                        {expandedDiscussions[pr.number] && (\n                                            <div className=\"discussion-expanded-section\">\n                                                <div className=\"discussion-header\">\n                                                    <h4 className=\"discussion-title\">Discussion</h4>\n                                                    <div className=\"discussion-actions\">\n                                                        <a \n                                                            href={`https://github.com/litlfred/sgex/pull/${pr.number}/files`}\n                                                            target=\"_blank\"\n                                                            rel=\"noopener noreferrer\"\n                                                            className=\"discussion-action-btn\"\n                                                        >\n                                                            📁 View Files\n                                                        </a>\n                                                        <a \n                                                            href={pr.prUrl}\n                                                            target=\"_blank\"\n                                                            rel=\"noopener noreferrer\"\n                                                            className=\"discussion-action-btn secondary\"\n                                                        >\n                                                            🔗 View PR\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                                \n                                                {/* Comment Input at Top - Only for authenticated users */}\n                                                {isAuthenticated && (\n                                                    <div className=\"comment-input-section\">\n                                                        <textarea\n                                                            value={commentInputs[pr.number] || ''}\n                                                            onChange={(e) => setCommentInputs(prev => ({\n                                                                ...prev,\n                                                                [pr.number]: e.target.value\n                                                            }))}\n                                                            placeholder=\"Add a comment...\"\n                                                            className=\"comment-input\"\n                                                            rows={3}\n                                                        />\n                                                        <button\n                                                            onClick={() => submitComment(pr.number, commentInputs[pr.number])}\n                                                            disabled={!commentInputs[pr.number]?.trim() || submittingComments[pr.number]}\n                                                            className=\"submit-comment-btn\"\n                                                        >\n                                                            {submittingComments[pr.number] ? 'Submitting...' : 'Add Comment'}\n                                                        </button>\n                                                    </div>\n                                                )}\n                                                \n                                                {/* Scrollable Comments Area - Show for everyone */}\n                                                <div className=\"discussion-scroll-area\">\n                                                    {loadingComments ? (\n                                                        <div className=\"comments-loading\">Loading full discussion...</div>\n                                                    ) : prComments[pr.number] && prComments[pr.number].length > 0 ? (\n                                                        <div className=\"comments-list\">\n                                                            {prComments[pr.number].slice(-5).map((comment) => (\n                                                                <div key={comment.id} className=\"comment-item\">\n                                                                    <div className=\"comment-header\">\n                                                                        <img \n                                                                            src={comment.avatar_url} \n                                                                            alt={comment.author} \n                                                                            className=\"comment-avatar\"\n                                                                        />\n                                                                        <span className=\"comment-author\">{comment.author}</span>\n                                                                        <span className=\"comment-date\">{comment.created_at}</span>\n                                                                    </div>\n                                                                    <div className=\"comment-body\">\n                                                                        {comment.body.length > 200 ? \n                                                                            `${comment.body.substring(0, 200)}...` : \n                                                                            comment.body\n                                                                        }\n                                                                    </div>\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"no-comments\">\n                                                            {!isAuthenticated ? \n                                                                \"No comments yet. Login to add the first comment!\" :\n                                                                \"No comments yet. Be the first to comment!\"\n                                                            }\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        )}\n                                        \n                                        <div className=\"pr-actions\">\n                                            <a \n                                                href={pr.url} \n                                                className=\"preview-link\"\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <span>🚀 View Preview</span>\n                                            </a>\n                                            \n                                            <a \n                                                href={pr.prUrl} \n                                                className=\"pr-link\"\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <span>📋 View PR</span>\n                                            </a>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"card-footer\">\n                                        <small className=\"preview-path\">\n                                            Preview URL: {pr.url}\n                                        </small>\n                                    </div>\n                                </div>\n                            ))\n                        )}\n                    </div>\n\n                    {totalPRPages > 1 && (\n                        <div className=\"pagination\">\n                            <button \n                                className=\"pagination-btn\"\n                                onClick={() => setPrPage(Math.max(1, prPage - 1))}\n                                disabled={prPage === 1}\n                            >\n                                ← Previous\n                            </button>\n                            <span className=\"pagination-info\">\n                                Page {prPage} of {totalPRPages} ({sortedPRs.length} total)\n                            </span>\n                            <button \n                                className=\"pagination-btn\"\n                                onClick={() => setPrPage(Math.min(totalPRPages, prPage + 1))}\n                                disabled={prPage === totalPRPages}\n                            >\n                                Next →\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </PageLayout>\n    );\n};\n\nexport default BranchListingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}