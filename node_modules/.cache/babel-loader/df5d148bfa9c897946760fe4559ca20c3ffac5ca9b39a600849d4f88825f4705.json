{"ast":null,"code":"import React,{useState,useMemo}from'react';import{useTranslation}from'react-i18next';import'./LanguageSelector.css';// Default UN languages\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UN_LANGUAGES=[{code:'en',name:'language.english',flag:'🇺🇸'},{code:'fr',name:'language.french',flag:'🇫🇷'},{code:'es',name:'language.spanish',flag:'🇪🇸'},{code:'ar',name:'language.arabic',flag:'🇸🇦'},{code:'zh',name:'language.chinese',flag:'🇨🇳'},{code:'ru',name:'language.russian',flag:'🇷🇺'}];// Comprehensive ISO 639-1 language list with native names and English names for searchability\nconst ADDITIONAL_LANGUAGES=[// European languages\n{code:'de',name:'Deutsch',englishName:'German',flag:'🇩🇪'},{code:'it',name:'Italiano',englishName:'Italian',flag:'🇮🇹'},{code:'pt',name:'Português',englishName:'Portuguese',flag:'🇵🇹'},{code:'nl',name:'Nederlands',englishName:'Dutch',flag:'🇳🇱'},{code:'sv',name:'Svenska',englishName:'Swedish',flag:'🇸🇪'},{code:'no',name:'Norsk',englishName:'Norwegian',flag:'🇳🇴'},{code:'da',name:'Dansk',englishName:'Danish',flag:'🇩🇰'},{code:'fi',name:'Suomi',englishName:'Finnish',flag:'🇫🇮'},{code:'pl',name:'Polski',englishName:'Polish',flag:'🇵🇱'},{code:'cs',name:'Čeština',englishName:'Czech',flag:'🇨🇿'},{code:'sk',name:'Slovenčina',englishName:'Slovak',flag:'🇸🇰'},{code:'hu',name:'Magyar',englishName:'Hungarian',flag:'🇭🇺'},{code:'ro',name:'Română',englishName:'Romanian',flag:'🇷🇴'},{code:'bg',name:'Български',englishName:'Bulgarian',flag:'🇧🇬'},{code:'hr',name:'Hrvatski',englishName:'Croatian',flag:'🇭🇷'},{code:'el',name:'Ελληνικά',englishName:'Greek',flag:'🇬🇷'},{code:'sr',name:'Српски',englishName:'Serbian',flag:'🇷🇸'},{code:'sl',name:'Slovenščina',englishName:'Slovenian',flag:'🇸🇮'},{code:'lv',name:'Latviešu',englishName:'Latvian',flag:'🇱🇻'},{code:'lt',name:'Lietuvių',englishName:'Lithuanian',flag:'🇱🇹'},{code:'et',name:'Eesti',englishName:'Estonian',flag:'🇪🇪'},{code:'mt',name:'Malti',englishName:'Maltese',flag:'🇲🇹'},{code:'is',name:'Íslenska',englishName:'Icelandic',flag:'🇮🇸'},{code:'ga',name:'Gaeilge',englishName:'Irish',flag:'🇮🇪'},{code:'cy',name:'Cymraeg',englishName:'Welsh',flag:'🏴'},{code:'eu',name:'Euskera',englishName:'Basque',flag:'🇪🇸'},{code:'ca',name:'Català',englishName:'Catalan',flag:'🇪🇸'},{code:'gl',name:'Galego',englishName:'Galician',flag:'🇪🇸'},// Middle Eastern & Turkic languages\n{code:'tr',name:'Türkçe',englishName:'Turkish',flag:'🇹🇷'},{code:'he',name:'עברית',englishName:'Hebrew',flag:'🇮🇱'},{code:'fa',name:'فارسی',englishName:'Persian',flag:'🇮🇷'},{code:'ur',name:'اردو',englishName:'Urdu',flag:'🇵🇰'},{code:'ku',name:'Kurdî',englishName:'Kurdish',flag:'🇹🇷'},{code:'az',name:'Azərbaycan',englishName:'Azerbaijani',flag:'🇦🇿'},{code:'hy',name:'Հայերեն',englishName:'Armenian',flag:'🇦🇲'},{code:'ka',name:'ქართული',englishName:'Georgian',flag:'🇬🇪'},// Asian languages\n{code:'ja',name:'日本語',englishName:'Japanese',flag:'🇯🇵'},{code:'ko',name:'한국어',englishName:'Korean',flag:'🇰🇷'},{code:'hi',name:'हिन्दी',englishName:'Hindi',flag:'🇮🇳'},{code:'th',name:'ไทย',englishName:'Thai',flag:'🇹🇭'},{code:'vi',name:'Tiếng Việt',englishName:'Vietnamese',flag:'🇻🇳'},{code:'bn',name:'বাংলা',englishName:'Bengali',flag:'🇧🇩'},{code:'ta',name:'தமிழ்',englishName:'Tamil',flag:'🇮🇳'},{code:'te',name:'తెలుగు',englishName:'Telugu',flag:'🇮🇳'},{code:'ml',name:'മലയാളം',englishName:'Malayalam',flag:'🇮🇳'},{code:'kn',name:'ಕನ್ನಡ',englishName:'Kannada',flag:'🇮🇳'},{code:'gu',name:'ગુજરાતી',englishName:'Gujarati',flag:'🇮🇳'},{code:'mr',name:'मराठी',englishName:'Marathi',flag:'🇮🇳'},{code:'pa',name:'ਪੰਜਾਬੀ',englishName:'Punjabi',flag:'🇮🇳'},{code:'or',name:'ଓଡ଼ିଆ',englishName:'Odia',flag:'🇮🇳'},{code:'as',name:'অসমীয়া',englishName:'Assamese',flag:'🇮🇳'},{code:'ne',name:'नेपाली',englishName:'Nepali',flag:'🇳🇵'},{code:'si',name:'සිංහල',englishName:'Sinhala',flag:'🇱🇰'},{code:'my',name:'မြန်မာ',englishName:'Myanmar',flag:'🇲🇲'},{code:'km',name:'ខ្មែរ',englishName:'Khmer',flag:'🇰🇭'},{code:'lo',name:'ລາວ',englishName:'Lao',flag:'🇱🇦'},{code:'mn',name:'Монгол',englishName:'Mongolian',flag:'🇲🇳'},{code:'bo',name:'བོད་ཡིག',englishName:'Tibetan',flag:'🇨🇳'},{code:'dz',name:'རྫོང་ཁ',englishName:'Dzongkha',flag:'🇧🇹'},// Southeast Asian languages\n{code:'id',name:'Bahasa Indonesia',englishName:'Indonesian',flag:'🇮🇩'},{code:'ms',name:'Bahasa Melayu',englishName:'Malay',flag:'🇲🇾'},{code:'tl',name:'Filipino',englishName:'Filipino',flag:'🇵🇭'},{code:'ceb',name:'Cebuano',englishName:'Cebuano',flag:'🇵🇭'},{code:'jv',name:'Basa Jawa',englishName:'Javanese',flag:'🇮🇩'},// African languages\n{code:'sw',name:'Kiswahili',englishName:'Swahili',flag:'🇰🇪'},{code:'am',name:'አማርኛ',englishName:'Amharic',flag:'🇪🇹'},{code:'yo',name:'Yorùbá',englishName:'Yoruba',flag:'🇳🇬'},{code:'ig',name:'Igbo',englishName:'Igbo',flag:'🇳🇬'},{code:'ha',name:'Hausa',englishName:'Hausa',flag:'🇳🇬'},{code:'zu',name:'isiZulu',englishName:'Zulu',flag:'🇿🇦'},{code:'af',name:'Afrikaans',englishName:'Afrikaans',flag:'🇿🇦'},{code:'xh',name:'isiXhosa',englishName:'Xhosa',flag:'🇿🇦'},{code:'st',name:'Sesotho',englishName:'Sotho',flag:'🇱🇸'},{code:'tn',name:'Setswana',englishName:'Tswana',flag:'🇧🇼'},{code:'ss',name:'SiSwati',englishName:'Swati',flag:'🇸🇿'},{code:'ve',name:'Tshivenḓa',englishName:'Venda',flag:'🇿🇦'},{code:'ts',name:'Xitsonga',englishName:'Tsonga',flag:'🇿🇦'},{code:'sn',name:'ChiShona',englishName:'Shona',flag:'🇿🇼'},{code:'ny',name:'ChiCheŵa',englishName:'Chewa',flag:'🇲🇼'},{code:'rw',name:'Kinyarwanda',englishName:'Kinyarwanda',flag:'🇷🇼'},{code:'rn',name:'Kirundi',englishName:'Kirundi',flag:'🇧🇮'},{code:'lg',name:'Luganda',englishName:'Luganda',flag:'🇺🇬'},{code:'so',name:'Soomaali',englishName:'Somali',flag:'🇸🇴'},{code:'om',name:'Afaan Oromoo',englishName:'Oromo',flag:'🇪🇹'},{code:'ti',name:'ትግርኛ',englishName:'Tigrinya',flag:'🇪🇷'},// Latin American indigenous languages\n{code:'qu',name:'Quechua',englishName:'Quechua',flag:'🇵🇪'},{code:'gn',name:'Guaraní',englishName:'Guarani',flag:'🇵🇾'},{code:'ay',name:'Aymará',englishName:'Aymara',flag:'🇧🇴'},// Pacific languages\n{code:'mi',name:'Te Reo Māori',englishName:'Maori',flag:'🇳🇿'},{code:'sm',name:'Gagana Samoa',englishName:'Samoan',flag:'🇼🇸'},{code:'to',name:'Lea Faka-Tonga',englishName:'Tongan',flag:'🇹🇴'},{code:'fj',name:'Na Vosa Vakaviti',englishName:'Fijian',flag:'🇫🇯'},// Additional European languages\n{code:'fo',name:'Føroyskt',englishName:'Faroese',flag:'🇫🇴'},{code:'kl',name:'Kalaallisut',englishName:'Greenlandic',flag:'🇬🇱'},{code:'se',name:'Davvisámegiella',englishName:'Northern Sami',flag:'🇳🇴'},// Other languages\n{code:'eo',name:'Esperanto',englishName:'Esperanto',flag:'🌍'},{code:'la',name:'Latina',englishName:'Latin',flag:'🇻🇦'},{code:'sa',name:'संस्कृतम्',englishName:'Sanskrit',flag:'🇮🇳'}];const LanguageSelector=_ref=>{let{className=''}=_ref;const{i18n,t}=useTranslation();const[isOpen,setIsOpen]=useState(false);const[searchTerm,setSearchTerm]=useState('');const[selectedLanguages,setSelectedLanguages]=useState(()=>{// Get selected languages from localStorage or default to UN languages\nconst saved=localStorage.getItem('sgex-selected-languages');return saved?JSON.parse(saved):UN_LANGUAGES.map(lang=>lang.code);});// Get available languages (UN languages + any additional selected languages)\nconst availableLanguages=useMemo(()=>{// Start with all UN languages\nconst languages=[...UN_LANGUAGES];// Add any additional languages that have been selected\nselectedLanguages.forEach(langCode=>{// If this language code is not already in UN_LANGUAGES, find it in ADDITIONAL_LANGUAGES\nif(!UN_LANGUAGES.some(unLang=>unLang.code===langCode)){const additionalLang=ADDITIONAL_LANGUAGES.find(addLang=>addLang.code===langCode);if(additionalLang){languages.push({code:additionalLang.code,name:additionalLang.name,// Use the native name for additional languages\nenglishName:additionalLang.englishName,// Include English name for consistency\nflag:additionalLang.flag});}}});// Map the languages to include translated names for UN languages\nreturn languages.map(lang=>({...lang,name:UN_LANGUAGES.some(unLang=>unLang.code===lang.code)?t(lang.name):lang.name}));},[selectedLanguages,t]);// Get searchable languages (excluding already selected ones)\nconst searchableLanguages=useMemo(()=>{if(!searchTerm)return[];const searchLower=searchTerm.toLowerCase();return ADDITIONAL_LANGUAGES.filter(lang=>!selectedLanguages.includes(lang.code)&&(lang.name.toLowerCase().includes(searchLower)||lang.englishName.toLowerCase().includes(searchLower)||lang.code.toLowerCase().includes(searchLower))).slice(0,10);// Limit to 10 results\n},[searchTerm,selectedLanguages]);const currentLanguage=availableLanguages.find(lang=>lang.code===i18n.language)||availableLanguages[0];const handleLanguageChange=langCode=>{i18n.changeLanguage(langCode);setIsOpen(false);setSearchTerm('');};const handleAddLanguage=langCode=>{const newSelectedLanguages=[...selectedLanguages,langCode];setSelectedLanguages(newSelectedLanguages);localStorage.setItem('sgex-selected-languages',JSON.stringify(newSelectedLanguages));// Optionally switch to the newly added language\ni18n.changeLanguage(langCode);setIsOpen(false);setSearchTerm('');};const handleSearchChange=e=>{setSearchTerm(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:`language-selector ${className}`,children:[/*#__PURE__*/_jsxs(\"button\",{className:\"language-toggle\",onClick:()=>setIsOpen(!isOpen),\"aria-label\":t('language.select'),title:t('language.select'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"language-icon\",children:\"\\uD83D\\uDC3E\\uD83C\\uDFA7\"}),/*#__PURE__*/_jsx(\"span\",{className:\"language-name\",children:currentLanguage===null||currentLanguage===void 0?void 0:currentLanguage.name}),/*#__PURE__*/_jsx(\"span\",{className:`dropdown-arrow ${isOpen?'open':''}`,children:\"\\u25BC\"})]}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"language-dropdown\",children:[availableLanguages.map(language=>/*#__PURE__*/_jsxs(\"button\",{className:`language-option ${i18n.language===language.code?'active':''}`,onClick:()=>handleLanguageChange(language.code),children:[/*#__PURE__*/_jsx(\"span\",{className:\"language-flag\",children:language.flag}),/*#__PURE__*/_jsx(\"span\",{className:\"language-name\",children:language.name}),i18n.language===language.code&&/*#__PURE__*/_jsx(\"span\",{className:\"language-checkmark\",children:\"\\u2713\"})]},language.code)),/*#__PURE__*/_jsxs(\"div\",{className:\"language-search-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"language-search-divider\"}),/*#__PURE__*/_jsx(\"div\",{className:\"language-search-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:t('language.search'),value:searchTerm,onChange:handleSearchChange,className:\"language-search\",autoFocus:false})}),searchableLanguages.map(language=>/*#__PURE__*/_jsxs(\"button\",{className:\"language-option language-option-addable\",onClick:()=>handleAddLanguage(language.code),children:[/*#__PURE__*/_jsx(\"span\",{className:\"language-flag\",children:language.flag}),/*#__PURE__*/_jsxs(\"span\",{className:\"language-name\",children:[language.name,language.englishName!==language.name&&/*#__PURE__*/_jsxs(\"span\",{className:\"language-english-name\",children:[\" (\",language.englishName,\")\"]})]}),/*#__PURE__*/_jsx(\"span\",{className:\"language-add-icon\",children:\"+\"})]},language.code)),searchTerm&&searchableLanguages.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"language-no-results\",children:[\"No languages found for \\\"\",searchTerm,\"\\\"\"]})]})]})]});};export default LanguageSelector;","map":{"version":3,"names":["React","useState","useMemo","useTranslation","jsx","_jsx","jsxs","_jsxs","UN_LANGUAGES","code","name","flag","ADDITIONAL_LANGUAGES","englishName","LanguageSelector","_ref","className","i18n","t","isOpen","setIsOpen","searchTerm","setSearchTerm","selectedLanguages","setSelectedLanguages","saved","localStorage","getItem","JSON","parse","map","lang","availableLanguages","languages","forEach","langCode","some","unLang","additionalLang","find","addLang","push","searchableLanguages","searchLower","toLowerCase","filter","includes","slice","currentLanguage","language","handleLanguageChange","changeLanguage","handleAddLanguage","newSelectedLanguages","setItem","stringify","handleSearchChange","e","target","value","children","onClick","title","type","placeholder","onChange","autoFocus","length"],"sources":["/home/runner/work/sgex/sgex/src/components/LanguageSelector.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './LanguageSelector.css';\n\n// Default UN languages\nconst UN_LANGUAGES = [\n  { code: 'en', name: 'language.english', flag: '🇺🇸' },\n  { code: 'fr', name: 'language.french', flag: '🇫🇷' },\n  { code: 'es', name: 'language.spanish', flag: '🇪🇸' },\n  { code: 'ar', name: 'language.arabic', flag: '🇸🇦' },\n  { code: 'zh', name: 'language.chinese', flag: '🇨🇳' },\n  { code: 'ru', name: 'language.russian', flag: '🇷🇺' }\n];\n\n// Comprehensive ISO 639-1 language list with native names and English names for searchability\nconst ADDITIONAL_LANGUAGES = [\n  // European languages\n  { code: 'de', name: 'Deutsch', englishName: 'German', flag: '🇩🇪' },\n  { code: 'it', name: 'Italiano', englishName: 'Italian', flag: '🇮🇹' },\n  { code: 'pt', name: 'Português', englishName: 'Portuguese', flag: '🇵🇹' },\n  { code: 'nl', name: 'Nederlands', englishName: 'Dutch', flag: '🇳🇱' },\n  { code: 'sv', name: 'Svenska', englishName: 'Swedish', flag: '🇸🇪' },\n  { code: 'no', name: 'Norsk', englishName: 'Norwegian', flag: '🇳🇴' },\n  { code: 'da', name: 'Dansk', englishName: 'Danish', flag: '🇩🇰' },\n  { code: 'fi', name: 'Suomi', englishName: 'Finnish', flag: '🇫🇮' },\n  { code: 'pl', name: 'Polski', englishName: 'Polish', flag: '🇵🇱' },\n  { code: 'cs', name: 'Čeština', englishName: 'Czech', flag: '🇨🇿' },\n  { code: 'sk', name: 'Slovenčina', englishName: 'Slovak', flag: '🇸🇰' },\n  { code: 'hu', name: 'Magyar', englishName: 'Hungarian', flag: '🇭🇺' },\n  { code: 'ro', name: 'Română', englishName: 'Romanian', flag: '🇷🇴' },\n  { code: 'bg', name: 'Български', englishName: 'Bulgarian', flag: '🇧🇬' },\n  { code: 'hr', name: 'Hrvatski', englishName: 'Croatian', flag: '🇭🇷' },\n  { code: 'el', name: 'Ελληνικά', englishName: 'Greek', flag: '🇬🇷' },\n  { code: 'sr', name: 'Српски', englishName: 'Serbian', flag: '🇷🇸' },\n  { code: 'sl', name: 'Slovenščina', englishName: 'Slovenian', flag: '🇸🇮' },\n  { code: 'lv', name: 'Latviešu', englishName: 'Latvian', flag: '🇱🇻' },\n  { code: 'lt', name: 'Lietuvių', englishName: 'Lithuanian', flag: '🇱🇹' },\n  { code: 'et', name: 'Eesti', englishName: 'Estonian', flag: '🇪🇪' },\n  { code: 'mt', name: 'Malti', englishName: 'Maltese', flag: '🇲🇹' },\n  { code: 'is', name: 'Íslenska', englishName: 'Icelandic', flag: '🇮🇸' },\n  { code: 'ga', name: 'Gaeilge', englishName: 'Irish', flag: '🇮🇪' },\n  { code: 'cy', name: 'Cymraeg', englishName: 'Welsh', flag: '🏴' },\n  { code: 'eu', name: 'Euskera', englishName: 'Basque', flag: '🇪🇸' },\n  { code: 'ca', name: 'Català', englishName: 'Catalan', flag: '🇪🇸' },\n  { code: 'gl', name: 'Galego', englishName: 'Galician', flag: '🇪🇸' },\n\n  // Middle Eastern & Turkic languages\n  { code: 'tr', name: 'Türkçe', englishName: 'Turkish', flag: '🇹🇷' },\n  { code: 'he', name: 'עברית', englishName: 'Hebrew', flag: '🇮🇱' },\n  { code: 'fa', name: 'فارسی', englishName: 'Persian', flag: '🇮🇷' },\n  { code: 'ur', name: 'اردو', englishName: 'Urdu', flag: '🇵🇰' },\n  { code: 'ku', name: 'Kurdî', englishName: 'Kurdish', flag: '🇹🇷' },\n  { code: 'az', name: 'Azərbaycan', englishName: 'Azerbaijani', flag: '🇦🇿' },\n  { code: 'hy', name: 'Հայերեն', englishName: 'Armenian', flag: '🇦🇲' },\n  { code: 'ka', name: 'ქართული', englishName: 'Georgian', flag: '🇬🇪' },\n\n  // Asian languages\n  { code: 'ja', name: '日本語', englishName: 'Japanese', flag: '🇯🇵' },\n  { code: 'ko', name: '한국어', englishName: 'Korean', flag: '🇰🇷' },\n  { code: 'hi', name: 'हिन्दी', englishName: 'Hindi', flag: '🇮🇳' },\n  { code: 'th', name: 'ไทย', englishName: 'Thai', flag: '🇹🇭' },\n  { code: 'vi', name: 'Tiếng Việt', englishName: 'Vietnamese', flag: '🇻🇳' },\n  { code: 'bn', name: 'বাংলা', englishName: 'Bengali', flag: '🇧🇩' },\n  { code: 'ta', name: 'தமிழ்', englishName: 'Tamil', flag: '🇮🇳' },\n  { code: 'te', name: 'తెలుగు', englishName: 'Telugu', flag: '🇮🇳' },\n  { code: 'ml', name: 'മലയാളം', englishName: 'Malayalam', flag: '🇮🇳' },\n  { code: 'kn', name: 'ಕನ್ನಡ', englishName: 'Kannada', flag: '🇮🇳' },\n  { code: 'gu', name: 'ગુજરાતી', englishName: 'Gujarati', flag: '🇮🇳' },\n  { code: 'mr', name: 'मराठी', englishName: 'Marathi', flag: '🇮🇳' },\n  { code: 'pa', name: 'ਪੰਜਾਬੀ', englishName: 'Punjabi', flag: '🇮🇳' },\n  { code: 'or', name: 'ଓଡ଼ିଆ', englishName: 'Odia', flag: '🇮🇳' },\n  { code: 'as', name: 'অসমীয়া', englishName: 'Assamese', flag: '🇮🇳' },\n  { code: 'ne', name: 'नेपाली', englishName: 'Nepali', flag: '🇳🇵' },\n  { code: 'si', name: 'සිංහල', englishName: 'Sinhala', flag: '🇱🇰' },\n  { code: 'my', name: 'မြန်မာ', englishName: 'Myanmar', flag: '🇲🇲' },\n  { code: 'km', name: 'ខ្មែរ', englishName: 'Khmer', flag: '🇰🇭' },\n  { code: 'lo', name: 'ລາວ', englishName: 'Lao', flag: '🇱🇦' },\n  { code: 'mn', name: 'Монгол', englishName: 'Mongolian', flag: '🇲🇳' },\n  { code: 'bo', name: 'བོད་ཡིག', englishName: 'Tibetan', flag: '🇨🇳' },\n  { code: 'dz', name: 'རྫོང་ཁ', englishName: 'Dzongkha', flag: '🇧🇹' },\n\n  // Southeast Asian languages\n  { code: 'id', name: 'Bahasa Indonesia', englishName: 'Indonesian', flag: '🇮🇩' },\n  { code: 'ms', name: 'Bahasa Melayu', englishName: 'Malay', flag: '🇲🇾' },\n  { code: 'tl', name: 'Filipino', englishName: 'Filipino', flag: '🇵🇭' },\n  { code: 'ceb', name: 'Cebuano', englishName: 'Cebuano', flag: '🇵🇭' },\n  { code: 'jv', name: 'Basa Jawa', englishName: 'Javanese', flag: '🇮🇩' },\n\n  // African languages\n  { code: 'sw', name: 'Kiswahili', englishName: 'Swahili', flag: '🇰🇪' },\n  { code: 'am', name: 'አማርኛ', englishName: 'Amharic', flag: '🇪🇹' },\n  { code: 'yo', name: 'Yorùbá', englishName: 'Yoruba', flag: '🇳🇬' },\n  { code: 'ig', name: 'Igbo', englishName: 'Igbo', flag: '🇳🇬' },\n  { code: 'ha', name: 'Hausa', englishName: 'Hausa', flag: '🇳🇬' },\n  { code: 'zu', name: 'isiZulu', englishName: 'Zulu', flag: '🇿🇦' },\n  { code: 'af', name: 'Afrikaans', englishName: 'Afrikaans', flag: '🇿🇦' },\n  { code: 'xh', name: 'isiXhosa', englishName: 'Xhosa', flag: '🇿🇦' },\n  { code: 'st', name: 'Sesotho', englishName: 'Sotho', flag: '🇱🇸' },\n  { code: 'tn', name: 'Setswana', englishName: 'Tswana', flag: '🇧🇼' },\n  { code: 'ss', name: 'SiSwati', englishName: 'Swati', flag: '🇸🇿' },\n  { code: 've', name: 'Tshivenḓa', englishName: 'Venda', flag: '🇿🇦' },\n  { code: 'ts', name: 'Xitsonga', englishName: 'Tsonga', flag: '🇿🇦' },\n  { code: 'sn', name: 'ChiShona', englishName: 'Shona', flag: '🇿🇼' },\n  { code: 'ny', name: 'ChiCheŵa', englishName: 'Chewa', flag: '🇲🇼' },\n  { code: 'rw', name: 'Kinyarwanda', englishName: 'Kinyarwanda', flag: '🇷🇼' },\n  { code: 'rn', name: 'Kirundi', englishName: 'Kirundi', flag: '🇧🇮' },\n  { code: 'lg', name: 'Luganda', englishName: 'Luganda', flag: '🇺🇬' },\n  { code: 'so', name: 'Soomaali', englishName: 'Somali', flag: '🇸🇴' },\n  { code: 'om', name: 'Afaan Oromoo', englishName: 'Oromo', flag: '🇪🇹' },\n  { code: 'ti', name: 'ትግርኛ', englishName: 'Tigrinya', flag: '🇪🇷' },\n\n  // Latin American indigenous languages\n  { code: 'qu', name: 'Quechua', englishName: 'Quechua', flag: '🇵🇪' },\n  { code: 'gn', name: 'Guaraní', englishName: 'Guarani', flag: '🇵🇾' },\n  { code: 'ay', name: 'Aymará', englishName: 'Aymara', flag: '🇧🇴' },\n\n  // Pacific languages\n  { code: 'mi', name: 'Te Reo Māori', englishName: 'Maori', flag: '🇳🇿' },\n  { code: 'sm', name: 'Gagana Samoa', englishName: 'Samoan', flag: '🇼🇸' },\n  { code: 'to', name: 'Lea Faka-Tonga', englishName: 'Tongan', flag: '🇹🇴' },\n  { code: 'fj', name: 'Na Vosa Vakaviti', englishName: 'Fijian', flag: '🇫🇯' },\n\n  // Additional European languages\n  { code: 'fo', name: 'Føroyskt', englishName: 'Faroese', flag: '🇫🇴' },\n  { code: 'kl', name: 'Kalaallisut', englishName: 'Greenlandic', flag: '🇬🇱' },\n  { code: 'se', name: 'Davvisámegiella', englishName: 'Northern Sami', flag: '🇳🇴' },\n\n  // Other languages\n  { code: 'eo', name: 'Esperanto', englishName: 'Esperanto', flag: '🌍' },\n  { code: 'la', name: 'Latina', englishName: 'Latin', flag: '🇻🇦' },\n  { code: 'sa', name: 'संस्कृतम्', englishName: 'Sanskrit', flag: '🇮🇳' }\n];\n\nconst LanguageSelector = ({ className = '' }) => {\n  const { i18n, t } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedLanguages, setSelectedLanguages] = useState(() => {\n    // Get selected languages from localStorage or default to UN languages\n    const saved = localStorage.getItem('sgex-selected-languages');\n    return saved ? JSON.parse(saved) : UN_LANGUAGES.map(lang => lang.code);\n  });\n\n  // Get available languages (UN languages + any additional selected languages)\n  const availableLanguages = useMemo(() => {\n    // Start with all UN languages\n    const languages = [...UN_LANGUAGES];\n    \n    // Add any additional languages that have been selected\n    selectedLanguages.forEach(langCode => {\n      // If this language code is not already in UN_LANGUAGES, find it in ADDITIONAL_LANGUAGES\n      if (!UN_LANGUAGES.some(unLang => unLang.code === langCode)) {\n        const additionalLang = ADDITIONAL_LANGUAGES.find(addLang => addLang.code === langCode);\n        if (additionalLang) {\n          languages.push({\n            code: additionalLang.code,\n            name: additionalLang.name, // Use the native name for additional languages\n            englishName: additionalLang.englishName, // Include English name for consistency\n            flag: additionalLang.flag\n          });\n        }\n      }\n    });\n    \n    // Map the languages to include translated names for UN languages\n    return languages.map(lang => ({\n      ...lang,\n      name: UN_LANGUAGES.some(unLang => unLang.code === lang.code) ? t(lang.name) : lang.name\n    }));\n  }, [selectedLanguages, t]);\n\n  // Get searchable languages (excluding already selected ones)\n  const searchableLanguages = useMemo(() => {\n    if (!searchTerm) return [];\n    \n    const searchLower = searchTerm.toLowerCase();\n    return ADDITIONAL_LANGUAGES.filter(lang => \n      !selectedLanguages.includes(lang.code) &&\n      (lang.name.toLowerCase().includes(searchLower) || \n       lang.englishName.toLowerCase().includes(searchLower) ||\n       lang.code.toLowerCase().includes(searchLower))\n    ).slice(0, 10); // Limit to 10 results\n  }, [searchTerm, selectedLanguages]);\n\n  const currentLanguage = availableLanguages.find(lang => lang.code === i18n.language) || availableLanguages[0];\n\n  const handleLanguageChange = (langCode) => {\n    i18n.changeLanguage(langCode);\n    setIsOpen(false);\n    setSearchTerm('');\n  };\n\n  const handleAddLanguage = (langCode) => {\n    const newSelectedLanguages = [...selectedLanguages, langCode];\n    setSelectedLanguages(newSelectedLanguages);\n    localStorage.setItem('sgex-selected-languages', JSON.stringify(newSelectedLanguages));\n    \n    // Optionally switch to the newly added language\n    i18n.changeLanguage(langCode);\n    setIsOpen(false);\n    setSearchTerm('');\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div className={`language-selector ${className}`}>\n      <button\n        className=\"language-toggle\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label={t('language.select')}\n        title={t('language.select')}\n      >\n        <span className=\"language-icon\">🐾🎧</span>\n        <span className=\"language-name\">{currentLanguage?.name}</span>\n        <span className={`dropdown-arrow ${isOpen ? 'open' : ''}`}>▼</span>\n      </button>\n      \n      {isOpen && (\n        <div className=\"language-dropdown\">\n          {/* Available Languages */}\n          {availableLanguages.map((language) => (\n            <button\n              key={language.code}\n              className={`language-option ${i18n.language === language.code ? 'active' : ''}`}\n              onClick={() => handleLanguageChange(language.code)}\n            >\n              <span className=\"language-flag\">{language.flag}</span>\n              <span className=\"language-name\">{language.name}</span>\n              {i18n.language === language.code && (\n                <span className=\"language-checkmark\">✓</span>\n              )}\n            </button>\n          ))}\n          \n          {/* Search Section */}\n          <div className=\"language-search-section\">\n            <div className=\"language-search-divider\"></div>\n            <div className=\"language-search-input\">\n              <input\n                type=\"text\"\n                placeholder={t('language.search')}\n                value={searchTerm}\n                onChange={handleSearchChange}\n                className=\"language-search\"\n                autoFocus={false}\n              />\n            </div>\n            \n            {/* Search Results */}\n            {searchableLanguages.map((language) => (\n              <button\n                key={language.code}\n                className=\"language-option language-option-addable\"\n                onClick={() => handleAddLanguage(language.code)}\n              >\n                <span className=\"language-flag\">{language.flag}</span>\n                <span className=\"language-name\">\n                  {language.name}\n                  {language.englishName !== language.name && (\n                    <span className=\"language-english-name\"> ({language.englishName})</span>\n                  )}\n                </span>\n                <span className=\"language-add-icon\">+</span>\n              </button>\n            ))}\n            \n            {searchTerm && searchableLanguages.length === 0 && (\n              <div className=\"language-no-results\">\n                No languages found for \"{searchTerm}\"\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LanguageSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}