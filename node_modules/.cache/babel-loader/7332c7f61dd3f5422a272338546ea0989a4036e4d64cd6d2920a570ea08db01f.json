{"ast":null,"code":"/**\n * Utility function to get the appropriate image path based on the current theme\n * This can be used outside React components\n * @param {string} baseImagePath - The base image path (e.g., \"/sgex-mascot.png\")\n * @returns {string} The theme-appropriate image path\n */export const getThemeImagePath=baseImagePath=>{const isDarkMode=document.body.classList.contains('theme-dark');if(isDarkMode){// Convert base image to dark mode version\n// e.g., \"/sgex-mascot.png\" -> \"/sgex-mascot_grey_tabby.png\"\nreturn baseImagePath.replace(/\\.png$/,'_grey_tabby.png');}else{// Use original image for light mode\nreturn baseImagePath;}};export default getThemeImagePath;","map":{"version":3,"names":["getThemeImagePath","baseImagePath","isDarkMode","document","body","classList","contains","replace"],"sources":["/home/runner/work/sgex/sgex/src/utils/themeUtils.js"],"sourcesContent":["/**\n * Utility function to get the appropriate image path based on the current theme\n * This can be used outside React components\n * @param {string} baseImagePath - The base image path (e.g., \"/sgex-mascot.png\")\n * @returns {string} The theme-appropriate image path\n */\nexport const getThemeImagePath = (baseImagePath) => {\n  const isDarkMode = document.body.classList.contains('theme-dark');\n  \n  if (isDarkMode) {\n    // Convert base image to dark mode version\n    // e.g., \"/sgex-mascot.png\" -> \"/sgex-mascot_grey_tabby.png\"\n    return baseImagePath.replace(/\\.png$/, '_grey_tabby.png');\n  } else {\n    // Use original image for light mode\n    return baseImagePath;\n  }\n};\n\nexport default getThemeImagePath;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAA,iBAAiB,CAAIC,aAAa,EAAK,CAClD,KAAM,CAAAC,UAAU,CAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,YAAY,CAAC,CAEjE,GAAIJ,UAAU,CAAE,CACd;AACA;AACA,MAAO,CAAAD,aAAa,CAACM,OAAO,CAAC,QAAQ,CAAE,iBAAiB,CAAC,CAC3D,CAAC,IAAM,CACL;AACA,MAAO,CAAAN,aAAa,CACtB,CACF,CAAC,CAED,cAAe,CAAAD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}