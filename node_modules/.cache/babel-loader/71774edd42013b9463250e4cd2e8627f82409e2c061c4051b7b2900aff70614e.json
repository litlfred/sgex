{"ast":null,"code":"import { forEach } from 'min-dash';\nvar MARKER_DRAGGING = 'djs-dragging',\n  MARKER_RESIZING = 'djs-resizing';\nvar LOW_PRIORITY = 250;\nimport { append as svgAppend, attr as svgAttr, classes as svgClasses, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nimport { translate } from '../../util/SvgTransformUtil';\nimport { isConnection } from '../../util/ModelUtil';\n\n/**\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/ElementRegistry').default} ElementRegistry\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('../../draw/Styles').default} Styles\n */\n\nvar max = Math.max;\n\n/**\n * Provides previews for selecting/moving/resizing shapes when creating/removing space.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Canvas} canvas\n * @param {Styles} styles\n */\nexport default function SpaceToolPreview(eventBus, elementRegistry, canvas, styles, previewSupport) {\n  function addPreviewGfx(collection, dragGroup) {\n    forEach(collection, function (element) {\n      previewSupport.addDragger(element, dragGroup);\n      canvas.addMarker(element, MARKER_DRAGGING);\n    });\n  }\n\n  // add crosshair\n  eventBus.on('spaceTool.selection.start', function (event) {\n    var space = canvas.getLayer('space'),\n      context = event.context;\n    var orientation = {\n      x: 'M 0,-10000 L 0,10000',\n      y: 'M -10000,0 L 10000,0'\n    };\n    var crosshairGroup = svgCreate('g');\n    svgAttr(crosshairGroup, styles.cls('djs-crosshair-group', ['no-events']));\n    svgAppend(space, crosshairGroup);\n\n    // horizontal path\n    var pathX = svgCreate('path');\n    svgAttr(pathX, 'd', orientation.x);\n    svgClasses(pathX).add('djs-crosshair');\n    svgAppend(crosshairGroup, pathX);\n\n    // vertical path\n    var pathY = svgCreate('path');\n    svgAttr(pathY, 'd', orientation.y);\n    svgClasses(pathY).add('djs-crosshair');\n    svgAppend(crosshairGroup, pathY);\n    context.crosshairGroup = crosshairGroup;\n  });\n\n  // update crosshair\n  eventBus.on('spaceTool.selection.move', function (event) {\n    var crosshairGroup = event.context.crosshairGroup;\n    translate(crosshairGroup, event.x, event.y);\n  });\n\n  // remove crosshair\n  eventBus.on('spaceTool.selection.cleanup', function (event) {\n    var context = event.context,\n      crosshairGroup = context.crosshairGroup;\n    if (crosshairGroup) {\n      svgRemove(crosshairGroup);\n    }\n  });\n\n  // add and update move/resize previews\n  eventBus.on('spaceTool.move', LOW_PRIORITY, function (event) {\n    var context = event.context,\n      line = context.line,\n      axis = context.axis,\n      movingShapes = context.movingShapes,\n      resizingShapes = context.resizingShapes;\n    if (!context.initialized) {\n      return;\n    }\n    if (!context.dragGroup) {\n      var spaceLayer = canvas.getLayer('space');\n      line = svgCreate('path');\n      svgAttr(line, 'd', 'M0,0 L0,0');\n      svgClasses(line).add('djs-crosshair');\n      svgAppend(spaceLayer, line);\n      context.line = line;\n      var dragGroup = svgCreate('g');\n      svgAttr(dragGroup, styles.cls('djs-drag-group', ['no-events']));\n      svgAppend(canvas.getActiveLayer(), dragGroup);\n\n      // shapes\n      addPreviewGfx(movingShapes, dragGroup);\n\n      // connections\n      var movingConnections = context.movingConnections = elementRegistry.filter(function (element) {\n        var sourceIsMoving = false;\n        forEach(movingShapes, function (shape) {\n          forEach(shape.outgoing, function (connection) {\n            if (element === connection) {\n              sourceIsMoving = true;\n            }\n          });\n        });\n        var targetIsMoving = false;\n        forEach(movingShapes, function (shape) {\n          forEach(shape.incoming, function (connection) {\n            if (element === connection) {\n              targetIsMoving = true;\n            }\n          });\n        });\n        var sourceIsResizing = false;\n        forEach(resizingShapes, function (shape) {\n          forEach(shape.outgoing, function (connection) {\n            if (element === connection) {\n              sourceIsResizing = true;\n            }\n          });\n        });\n        var targetIsResizing = false;\n        forEach(resizingShapes, function (shape) {\n          forEach(shape.incoming, function (connection) {\n            if (element === connection) {\n              targetIsResizing = true;\n            }\n          });\n        });\n        return isConnection(element) && (sourceIsMoving || sourceIsResizing) && (targetIsMoving || targetIsResizing);\n      });\n      addPreviewGfx(movingConnections, dragGroup);\n      context.dragGroup = dragGroup;\n    }\n    if (!context.frameGroup) {\n      var frameGroup = svgCreate('g');\n      svgAttr(frameGroup, styles.cls('djs-frame-group', ['no-events']));\n      svgAppend(canvas.getActiveLayer(), frameGroup);\n      var frames = [];\n      forEach(resizingShapes, function (shape) {\n        var frame = previewSupport.addFrame(shape, frameGroup);\n        var initialBounds = frame.getBBox();\n        frames.push({\n          element: frame,\n          initialBounds: initialBounds\n        });\n        canvas.addMarker(shape, MARKER_RESIZING);\n      });\n      context.frameGroup = frameGroup;\n      context.frames = frames;\n    }\n    var orientation = {\n      x: 'M' + event.x + ', -10000 L' + event.x + ', 10000',\n      y: 'M -10000, ' + event.y + ' L 10000, ' + event.y\n    };\n    svgAttr(line, {\n      d: orientation[axis]\n    });\n    var opposite = {\n      x: 'y',\n      y: 'x'\n    };\n    var delta = {\n      x: event.dx,\n      y: event.dy\n    };\n    delta[opposite[context.axis]] = 0;\n\n    // update move previews\n    translate(context.dragGroup, delta.x, delta.y);\n\n    // update resize previews\n    forEach(context.frames, function (frame) {\n      var element = frame.element,\n        initialBounds = frame.initialBounds,\n        width,\n        height;\n      if (context.direction === 'e') {\n        svgAttr(element, {\n          width: max(initialBounds.width + delta.x, 5)\n        });\n      } else {\n        width = max(initialBounds.width - delta.x, 5);\n        svgAttr(element, {\n          width: width,\n          x: initialBounds.x + initialBounds.width - width\n        });\n      }\n      if (context.direction === 's') {\n        svgAttr(element, {\n          height: max(initialBounds.height + delta.y, 5)\n        });\n      } else {\n        height = max(initialBounds.height - delta.y, 5);\n        svgAttr(element, {\n          height: height,\n          y: initialBounds.y + initialBounds.height - height\n        });\n      }\n    });\n  });\n\n  // remove move/resize previews\n  eventBus.on('spaceTool.cleanup', function (event) {\n    var context = event.context,\n      movingShapes = context.movingShapes,\n      movingConnections = context.movingConnections,\n      resizingShapes = context.resizingShapes,\n      line = context.line,\n      dragGroup = context.dragGroup,\n      frameGroup = context.frameGroup;\n\n    // moving shapes\n    forEach(movingShapes, function (shape) {\n      canvas.removeMarker(shape, MARKER_DRAGGING);\n    });\n\n    // moving connections\n    forEach(movingConnections, function (connection) {\n      canvas.removeMarker(connection, MARKER_DRAGGING);\n    });\n    if (dragGroup) {\n      svgRemove(line);\n      svgRemove(dragGroup);\n    }\n    forEach(resizingShapes, function (shape) {\n      canvas.removeMarker(shape, MARKER_RESIZING);\n    });\n    if (frameGroup) {\n      svgRemove(frameGroup);\n    }\n  });\n}\nSpaceToolPreview.$inject = ['eventBus', 'elementRegistry', 'canvas', 'styles', 'previewSupport'];","map":{"version":3,"names":["forEach","MARKER_DRAGGING","MARKER_RESIZING","LOW_PRIORITY","append","svgAppend","attr","svgAttr","classes","svgClasses","create","svgCreate","remove","svgRemove","translate","isConnection","max","Math","SpaceToolPreview","eventBus","elementRegistry","canvas","styles","previewSupport","addPreviewGfx","collection","dragGroup","element","addDragger","addMarker","on","event","space","getLayer","context","orientation","x","y","crosshairGroup","cls","pathX","add","pathY","line","axis","movingShapes","resizingShapes","initialized","spaceLayer","getActiveLayer","movingConnections","filter","sourceIsMoving","shape","outgoing","connection","targetIsMoving","incoming","sourceIsResizing","targetIsResizing","frameGroup","frames","frame","addFrame","initialBounds","getBBox","push","d","opposite","delta","dx","dy","width","height","direction","removeMarker","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/space-tool/SpaceToolPreview.js"],"sourcesContent":["import {\n  forEach\n} from 'min-dash';\n\nvar MARKER_DRAGGING = 'djs-dragging',\n    MARKER_RESIZING = 'djs-resizing';\n\nvar LOW_PRIORITY = 250;\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  translate\n} from '../../util/SvgTransformUtil';\n\nimport { isConnection } from '../../util/ModelUtil';\n\n/**\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/ElementRegistry').default} ElementRegistry\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('../../draw/Styles').default} Styles\n */\n\nvar max = Math.max;\n\n\n/**\n * Provides previews for selecting/moving/resizing shapes when creating/removing space.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Canvas} canvas\n * @param {Styles} styles\n */\nexport default function SpaceToolPreview(\n    eventBus, elementRegistry, canvas,\n    styles, previewSupport) {\n\n  function addPreviewGfx(collection, dragGroup) {\n    forEach(collection, function(element) {\n      previewSupport.addDragger(element, dragGroup);\n\n      canvas.addMarker(element, MARKER_DRAGGING);\n    });\n  }\n\n  // add crosshair\n  eventBus.on('spaceTool.selection.start', function(event) {\n    var space = canvas.getLayer('space'),\n        context = event.context;\n\n    var orientation = {\n      x: 'M 0,-10000 L 0,10000',\n      y: 'M -10000,0 L 10000,0'\n    };\n\n    var crosshairGroup = svgCreate('g');\n    svgAttr(crosshairGroup, styles.cls('djs-crosshair-group', [ 'no-events' ]));\n\n    svgAppend(space, crosshairGroup);\n\n    // horizontal path\n    var pathX = svgCreate('path');\n    svgAttr(pathX, 'd', orientation.x);\n    svgClasses(pathX).add('djs-crosshair');\n\n    svgAppend(crosshairGroup, pathX);\n\n    // vertical path\n    var pathY = svgCreate('path');\n    svgAttr(pathY, 'd', orientation.y);\n    svgClasses(pathY).add('djs-crosshair');\n\n    svgAppend(crosshairGroup, pathY);\n\n    context.crosshairGroup = crosshairGroup;\n  });\n\n  // update crosshair\n  eventBus.on('spaceTool.selection.move', function(event) {\n    var crosshairGroup = event.context.crosshairGroup;\n\n    translate(crosshairGroup, event.x, event.y);\n  });\n\n  // remove crosshair\n  eventBus.on('spaceTool.selection.cleanup', function(event) {\n    var context = event.context,\n        crosshairGroup = context.crosshairGroup;\n\n    if (crosshairGroup) {\n      svgRemove(crosshairGroup);\n    }\n  });\n\n  // add and update move/resize previews\n  eventBus.on('spaceTool.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        line = context.line,\n        axis = context.axis,\n        movingShapes = context.movingShapes,\n        resizingShapes = context.resizingShapes;\n\n    if (!context.initialized) {\n      return;\n    }\n\n    if (!context.dragGroup) {\n      var spaceLayer = canvas.getLayer('space');\n\n      line = svgCreate('path');\n      svgAttr(line, 'd', 'M0,0 L0,0');\n      svgClasses(line).add('djs-crosshair');\n\n      svgAppend(spaceLayer, line);\n\n      context.line = line;\n\n      var dragGroup = svgCreate('g');\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\n\n      svgAppend(canvas.getActiveLayer(), dragGroup);\n\n      // shapes\n      addPreviewGfx(movingShapes, dragGroup);\n\n      // connections\n      var movingConnections = context.movingConnections = elementRegistry.filter(function(element) {\n        var sourceIsMoving = false;\n\n        forEach(movingShapes, function(shape) {\n          forEach(shape.outgoing, function(connection) {\n            if (element === connection) {\n              sourceIsMoving = true;\n            }\n          });\n        });\n\n        var targetIsMoving = false;\n\n        forEach(movingShapes, function(shape) {\n          forEach(shape.incoming, function(connection) {\n            if (element === connection) {\n              targetIsMoving = true;\n            }\n          });\n        });\n\n        var sourceIsResizing = false;\n\n        forEach(resizingShapes, function(shape) {\n          forEach(shape.outgoing, function(connection) {\n            if (element === connection) {\n              sourceIsResizing = true;\n            }\n          });\n        });\n\n        var targetIsResizing = false;\n\n        forEach(resizingShapes, function(shape) {\n          forEach(shape.incoming, function(connection) {\n            if (element === connection) {\n              targetIsResizing = true;\n            }\n          });\n        });\n\n        return isConnection(element)\n          && (sourceIsMoving || sourceIsResizing)\n          && (targetIsMoving || targetIsResizing);\n      });\n\n\n      addPreviewGfx(movingConnections, dragGroup);\n\n      context.dragGroup = dragGroup;\n    }\n\n    if (!context.frameGroup) {\n      var frameGroup = svgCreate('g');\n      svgAttr(frameGroup, styles.cls('djs-frame-group', [ 'no-events' ]));\n\n      svgAppend(canvas.getActiveLayer(), frameGroup);\n\n      var frames = [];\n\n      forEach(resizingShapes, function(shape) {\n        var frame = previewSupport.addFrame(shape, frameGroup);\n\n        var initialBounds = frame.getBBox();\n\n        frames.push({\n          element: frame,\n          initialBounds: initialBounds\n        });\n\n        canvas.addMarker(shape, MARKER_RESIZING);\n      });\n\n      context.frameGroup = frameGroup;\n      context.frames = frames;\n    }\n\n    var orientation = {\n      x: 'M' + event.x + ', -10000 L' + event.x + ', 10000',\n      y: 'M -10000, ' + event.y + ' L 10000, ' + event.y\n    };\n\n    svgAttr(line, { d: orientation[ axis ] });\n\n    var opposite = { x: 'y', y: 'x' };\n    var delta = { x: event.dx, y: event.dy };\n    delta[ opposite[ context.axis ] ] = 0;\n\n    // update move previews\n    translate(context.dragGroup, delta.x, delta.y);\n\n    // update resize previews\n    forEach(context.frames, function(frame) {\n      var element = frame.element,\n          initialBounds = frame.initialBounds,\n          width,\n          height;\n\n      if (context.direction === 'e') {\n        svgAttr(element, {\n          width: max(initialBounds.width + delta.x, 5)\n        });\n      } else {\n        width = max(initialBounds.width - delta.x, 5);\n\n        svgAttr(element, {\n          width: width,\n          x: initialBounds.x + initialBounds.width - width\n        });\n      }\n\n      if (context.direction === 's') {\n        svgAttr(element, {\n          height: max(initialBounds.height + delta.y, 5)\n        });\n      } else {\n        height = max(initialBounds.height - delta.y, 5);\n\n        svgAttr(element, {\n          height: height,\n          y: initialBounds.y + initialBounds.height - height\n        });\n      }\n    });\n\n  });\n\n  // remove move/resize previews\n  eventBus.on('spaceTool.cleanup', function(event) {\n\n    var context = event.context,\n        movingShapes = context.movingShapes,\n        movingConnections = context.movingConnections,\n        resizingShapes = context.resizingShapes,\n        line = context.line,\n        dragGroup = context.dragGroup,\n        frameGroup = context.frameGroup;\n\n    // moving shapes\n    forEach(movingShapes, function(shape) {\n      canvas.removeMarker(shape, MARKER_DRAGGING);\n    });\n\n    // moving connections\n    forEach(movingConnections, function(connection) {\n      canvas.removeMarker(connection, MARKER_DRAGGING);\n    });\n\n    if (dragGroup) {\n      svgRemove(line);\n      svgRemove(dragGroup);\n    }\n\n    forEach(resizingShapes, function(shape) {\n      canvas.removeMarker(shape, MARKER_RESIZING);\n    });\n\n    if (frameGroup) {\n      svgRemove(frameGroup);\n    }\n  });\n}\n\nSpaceToolPreview.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'canvas',\n  'styles',\n  'previewSupport'\n];\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}