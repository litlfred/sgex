{"ast":null,"code":"import React,{useState,useEffect}from'react';import{PageLayout}from'./framework';import HelpModal from'./HelpModal';import'./BranchListing.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BranchListing=()=>{const[branches,setBranches]=useState([]);const[pullRequests,setPullRequests]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState('branches');const[prPage,setPrPage]=useState(1);const[prSearchTerm,setPrSearchTerm]=useState('');const[showContributeModal,setShowContributeModal]=useState(false);const ITEMS_PER_PAGE=5;// \"How to contribute\" slideshow content\nconst contributeHelpTopic={id:'how-to-contribute',title:'How to Contribute to SGEX',type:'slideshow',content:[{title:'Welcome to SGEX - A Collaborative Workbench',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot\" class=\"contribute-mascot\" />\n            </div>\n            <h3>What is SGEX?</h3>\n            <p>SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits.</p>\n            <p>Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.</p>\n          </div>\n        `},{title:'Step 1: Report a Bug or Make a Feature Request',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot examining a bug\" class=\"contribute-mascot bug-report\" />\n            </div>\n            <h3>üêõ Found something that needs fixing?</h3>\n            <p>Every great contribution starts with identifying what can be improved:</p>\n            <ul>\n              <li><strong>Bug reports:</strong> Help us identify and fix issues</li>\n              <li><strong>Feature requests:</strong> Share ideas for new functionality</li>\n              <li><strong>Documentation improvements:</strong> Make our guides clearer</li>\n              <li><strong>User experience feedback:</strong> Tell us what's confusing</li>\n            </ul>\n            <p>Click the mascot's help button on any page to quickly report issues!</p>\n          </div>\n        `},{title:'Step 2: Assignment to a Coding Agent',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"Robotic SGEX Mascot\" class=\"contribute-mascot coding-agent\" />\n            </div>\n            <h3>ü§ñ AI-Powered Development</h3>\n            <p>Once your issue is triaged, it may be assigned to one of our coding agents:</p>\n            <ul>\n              <li><strong>Automated analysis:</strong> AI agents analyze the requirements</li>\n              <li><strong>Code generation:</strong> Initial implementations are created</li>\n              <li><strong>Testing integration:</strong> Automated tests validate changes</li>\n              <li><strong>Documentation updates:</strong> Keep documentation in sync</li>\n            </ul>\n            <p>This hybrid approach combines human insight with AI efficiency.</p>\n          </div>\n        `},{title:'Step 3: Community Collaboration',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <div class=\"mascot-group\">\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 1\" class=\"contribute-mascot community\" />\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 2\" class=\"contribute-mascot community\" />\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 3\" class=\"contribute-mascot community\" />\n              </div>\n              <div class=\"thought-bubble\">üí´</div>\n            </div>\n            <h3>üåü Real-time Evolution</h3>\n            <p>The community drives continuous improvement through collaborative discussion:</p>\n            <ul>\n              <li><strong>Code reviews:</strong> Community members review and suggest improvements</li>\n              <li><strong>Testing feedback:</strong> Real-world testing by healthcare professionals</li>\n              <li><strong>Knowledge sharing:</strong> Best practices emerge from collective experience</li>\n              <li><strong>Iterative refinement:</strong> The workbench evolves based on actual usage</li>\n            </ul>\n            <p>Together, we're building the future of digital health tooling!</p>\n          </div>\n        `},{title:'Get Started Today!',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot celebrating\" class=\"contribute-mascot celebrate\" />\n            </div>\n            <h3>üöÄ Ready to Contribute?</h3>\n            <div class=\"action-buttons\">\n              <a href=\"https://github.com/litlfred/sgex/issues/new\" target=\"_blank\" class=\"contribute-btn primary\">\n                üêõ Report a Bug\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/issues/new?template=feature_request.md\" target=\"_blank\" class=\"contribute-btn secondary\">\n                ‚ú® Request a Feature  \n              </a>\n              <a href=\"/sgex/main/docs/\" target=\"_blank\" class=\"contribute-btn tertiary\">\n                üìö Read Documentation\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/tree/main/public/docs\" target=\"_blank\" class=\"contribute-btn tertiary-alt\">\n                üìñ Docs on GitHub\n              </a>\n            </div>\n            <p class=\"contribute-footer\">\n              <strong>Every contribution matters!</strong> Whether you're reporting a bug, testing a feature, or sharing feedback, you're helping improve digital health tools for healthcare workers worldwide.\n            </p>\n          </div>\n        `}]};useEffect(()=>{const fetchData=async()=>{try{setLoading(true);// Use GitHub API to fetch branches and PRs for the sgex repository\nconst owner='litlfred';const repo='sgex';// Fetch branches\nconst branchResponse=await fetch(`https://api.github.com/repos/${owner}/${repo}/branches`);if(!branchResponse.ok){throw new Error(`Failed to fetch branches: ${branchResponse.status}`);}const branchData=await branchResponse.json();// Fetch pull requests\nconst prResponse=await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=all&sort=updated&per_page=100`);if(!prResponse.ok){throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);}const prData=await prResponse.json();// Filter out gh-pages branch and format data\nconst filteredBranches=branchData.filter(branch=>branch.name!=='gh-pages').map(branch=>{var _branch$commit$commit,_branch$commit$commit2;// Convert branch name to safe directory name (replace slashes with dashes)\nconst safeName=branch.name.replace(/\\//g,'-');return{name:branch.name,safeName:safeName,commit:branch.commit,url:`./sgex/${safeName}/index.html`,lastModified:(_branch$commit$commit=branch.commit.commit)!==null&&_branch$commit$commit!==void 0&&(_branch$commit$commit2=_branch$commit$commit.committer)!==null&&_branch$commit$commit2!==void 0&&_branch$commit$commit2.date?new Date(branch.commit.commit.committer.date).toLocaleDateString():'Unknown'};});// Format PR data\nconst formattedPRs=prData.map(pr=>{const safeBranchName=pr.head.ref.replace(/\\//g,'-');return{id:pr.id,number:pr.number,title:pr.title,state:pr.state,author:pr.user.login,branchName:pr.head.ref,safeBranchName:safeBranchName,url:`./sgex/${safeBranchName}/index.html`,prUrl:pr.html_url,updatedAt:new Date(pr.updated_at).toLocaleDateString(),createdAt:new Date(pr.created_at).toLocaleDateString()};});setBranches(filteredBranches);setPullRequests(formattedPRs);}catch(err){console.error('Error fetching data:',err);setError(err.message);}finally{setLoading(false);}};fetchData();},[]);// Filter and paginate PRs based on search\nconst filteredPRs=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const paginatedPRs=filteredPRs.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);const totalPRPages=Math.ceil(filteredPRs.length/ITEMS_PER_PAGE);if(loading){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"/sgex-mascot.png\",alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading previews...\"})]})});}if(error){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"/sgex-mascot.png\",alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Failed to load previews: \",error]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please try refreshing the page or check back later.\"})]})]})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"/sgex-mascot.png\",alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"contribute-btn primary\",onClick:()=>setShowContributeModal(true),children:\"\\uD83C\\uDF1F How to Contribute\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/sgex/main/docs/\",className:\"contribute-btn secondary\",target:\"_blank\",rel:\"noopener noreferrer\",onError:e=>{// Fallback to GitHub docs if main branch docs not available\ne.target.href=\"https://github.com/litlfred/sgex/tree/main/public/docs\";},children:\"\\uD83D\\uDCDA Documentation\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex/issues/new\",className:\"contribute-btn tertiary\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDC1B Report a Bug\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-tabs\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='branches'?'active':''}`,onClick:()=>setActiveTab('branches'),children:[\"\\uD83C\\uDF3F Branch Previews (\",branches.length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='prs'?'active':''}`,onClick:()=>setActiveTab('prs'),children:[\"\\uD83D\\uDD04 Pull Request Previews (\",pullRequests.length,\")\"]})]}),activeTab==='branches'&&/*#__PURE__*/_jsx(\"div\",{className:\"branch-cards\",children:branches.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-items\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No branch previews available at the moment.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Branch previews will appear here when code is pushed to branches.\"})]}):branches.map(branch=>/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"item-name\",children:branch.name}),/*#__PURE__*/_jsx(\"span\",{className:\"commit-badge\",children:branch.commit.sha.substring(0,7)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Last updated: \",branch.lastModified]}),/*#__PURE__*/_jsx(\"a\",{href:branch.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",branch.url]})})]},branch.name))}),activeTab==='prs'&&/*#__PURE__*/_jsxs(\"div\",{className:\"pr-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pr-controls\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search pull requests by title or author...\",value:prSearchTerm,onChange:e=>{setPrSearchTerm(e.target.value);setPrPage(1);// Reset to first page when searching\n},className:\"pr-search\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"pr-cards\",children:paginatedPRs.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-items\",children:prSearchTerm?/*#__PURE__*/_jsxs(\"p\",{children:[\"No pull requests match your search \\\"\",prSearchTerm,\"\\\".\"]}):/*#__PURE__*/_jsx(\"p\",{children:\"No pull request previews available at the moment.\"})}):paginatedPRs.map(pr=>/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card pr-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"item-name\",children:[\"#\",pr.number,\": \",pr.title]}),/*#__PURE__*/_jsxs(\"span\",{className:`state-badge ${pr.state}`,children:[pr.state==='open'?'üü¢':'üî¥',\" \",pr.state]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"pr-meta\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Branch:\"}),\" \",pr.branchName,\" \\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Author:\"}),\" \",pr.author]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Created: \",pr.createdAt,\" \\u2022 Updated: \",pr.updatedAt]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-actions\",children:[/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}),/*#__PURE__*/_jsx(\"a\",{href:pr.prUrl,className:\"pr-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCB View PR\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",pr.url]})})]},pr.id))}),totalPRPages>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.max(1,prPage-1)),disabled:prPage===1,children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"pagination-info\",children:[\"Page \",prPage,\" of \",totalPRPages,\" (\",filteredPRs.length,\" total)\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.min(totalPRPages,prPage+1)),disabled:prPage===totalPRPages,children:\"Next \\u2192\"})]})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"branch-listing-footer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"footer-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"footer-left\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"source-link\",children:\"\\uD83D\\uDCE6 Source Code\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-center\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDC3E This landing page lists all available previews. Each branch and PR is automatically deployed to its own preview environment.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Main Application:\"}),\" \",/*#__PURE__*/_jsx(\"a\",{href:\"./sgex/main/index.html\",children:\"View Main Branch \\u2192\"})]})]})]})}),showContributeModal&&/*#__PURE__*/_jsx(HelpModal,{helpTopic:contributeHelpTopic,onClose:()=>setShowContributeModal(false)})]})});};export default BranchListing;","map":{"version":3,"names":["React","useState","useEffect","PageLayout","HelpModal","jsx","_jsx","jsxs","_jsxs","BranchListing","branches","setBranches","pullRequests","setPullRequests","loading","setLoading","error","setError","activeTab","setActiveTab","prPage","setPrPage","prSearchTerm","setPrSearchTerm","showContributeModal","setShowContributeModal","ITEMS_PER_PAGE","contributeHelpTopic","id","title","type","content","fetchData","owner","repo","branchResponse","fetch","ok","Error","status","branchData","json","prResponse","prData","filteredBranches","filter","branch","name","map","_branch$commit$commit","_branch$commit$commit2","safeName","replace","commit","url","lastModified","committer","date","Date","toLocaleDateString","formattedPRs","pr","safeBranchName","head","ref","number","state","author","user","login","branchName","prUrl","html_url","updatedAt","updated_at","createdAt","created_at","err","console","message","filteredPRs","toLowerCase","includes","paginatedPRs","slice","totalPRPages","Math","ceil","length","pageName","showMascot","children","className","src","alt","onClick","href","target","rel","onError","e","sha","substring","placeholder","value","onChange","max","disabled","min","helpTopic","onClose"],"sources":["/home/runner/work/sgex/sgex/src/components/BranchListing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PageLayout } from './framework';\nimport HelpModal from './HelpModal';\nimport './BranchListing.css';\n\nconst BranchListing = () => {\n  const [branches, setBranches] = useState([]);\n  const [pullRequests, setPullRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('branches');\n  const [prPage, setPrPage] = useState(1);\n  const [prSearchTerm, setPrSearchTerm] = useState('');\n  const [showContributeModal, setShowContributeModal] = useState(false);\n\n  const ITEMS_PER_PAGE = 5;\n\n  // \"How to contribute\" slideshow content\n  const contributeHelpTopic = {\n    id: 'how-to-contribute',\n    title: 'How to Contribute to SGEX',\n    type: 'slideshow',\n    content: [\n      {\n        title: 'Welcome to SGEX - A Collaborative Workbench',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot\" class=\"contribute-mascot\" />\n            </div>\n            <h3>What is SGEX?</h3>\n            <p>SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits.</p>\n            <p>Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 1: Report a Bug or Make a Feature Request',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot examining a bug\" class=\"contribute-mascot bug-report\" />\n            </div>\n            <h3>üêõ Found something that needs fixing?</h3>\n            <p>Every great contribution starts with identifying what can be improved:</p>\n            <ul>\n              <li><strong>Bug reports:</strong> Help us identify and fix issues</li>\n              <li><strong>Feature requests:</strong> Share ideas for new functionality</li>\n              <li><strong>Documentation improvements:</strong> Make our guides clearer</li>\n              <li><strong>User experience feedback:</strong> Tell us what's confusing</li>\n            </ul>\n            <p>Click the mascot's help button on any page to quickly report issues!</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 2: Assignment to a Coding Agent',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"Robotic SGEX Mascot\" class=\"contribute-mascot coding-agent\" />\n            </div>\n            <h3>ü§ñ AI-Powered Development</h3>\n            <p>Once your issue is triaged, it may be assigned to one of our coding agents:</p>\n            <ul>\n              <li><strong>Automated analysis:</strong> AI agents analyze the requirements</li>\n              <li><strong>Code generation:</strong> Initial implementations are created</li>\n              <li><strong>Testing integration:</strong> Automated tests validate changes</li>\n              <li><strong>Documentation updates:</strong> Keep documentation in sync</li>\n            </ul>\n            <p>This hybrid approach combines human insight with AI efficiency.</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 3: Community Collaboration',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <div class=\"mascot-group\">\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 1\" class=\"contribute-mascot community\" />\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 2\" class=\"contribute-mascot community\" />\n                <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot 3\" class=\"contribute-mascot community\" />\n              </div>\n              <div class=\"thought-bubble\">üí´</div>\n            </div>\n            <h3>üåü Real-time Evolution</h3>\n            <p>The community drives continuous improvement through collaborative discussion:</p>\n            <ul>\n              <li><strong>Code reviews:</strong> Community members review and suggest improvements</li>\n              <li><strong>Testing feedback:</strong> Real-world testing by healthcare professionals</li>\n              <li><strong>Knowledge sharing:</strong> Best practices emerge from collective experience</li>\n              <li><strong>Iterative refinement:</strong> The workbench evolves based on actual usage</li>\n            </ul>\n            <p>Together, we're building the future of digital health tooling!</p>\n          </div>\n        `\n      },\n      {\n        title: 'Get Started Today!',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"/sgex-mascot.png\" alt=\"SGEX Mascot celebrating\" class=\"contribute-mascot celebrate\" />\n            </div>\n            <h3>üöÄ Ready to Contribute?</h3>\n            <div class=\"action-buttons\">\n              <a href=\"https://github.com/litlfred/sgex/issues/new\" target=\"_blank\" class=\"contribute-btn primary\">\n                üêõ Report a Bug\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/issues/new?template=feature_request.md\" target=\"_blank\" class=\"contribute-btn secondary\">\n                ‚ú® Request a Feature  \n              </a>\n              <a href=\"/sgex/main/docs/\" target=\"_blank\" class=\"contribute-btn tertiary\">\n                üìö Read Documentation\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/tree/main/public/docs\" target=\"_blank\" class=\"contribute-btn tertiary-alt\">\n                üìñ Docs on GitHub\n              </a>\n            </div>\n            <p class=\"contribute-footer\">\n              <strong>Every contribution matters!</strong> Whether you're reporting a bug, testing a feature, or sharing feedback, you're helping improve digital health tools for healthcare workers worldwide.\n            </p>\n          </div>\n        `\n      }\n    ]\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        \n        // Use GitHub API to fetch branches and PRs for the sgex repository\n        const owner = 'litlfred';\n        const repo = 'sgex';\n        \n        // Fetch branches\n        const branchResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/branches`);\n        if (!branchResponse.ok) {\n          throw new Error(`Failed to fetch branches: ${branchResponse.status}`);\n        }\n        const branchData = await branchResponse.json();\n        \n        // Fetch pull requests\n        const prResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=all&sort=updated&per_page=100`);\n        if (!prResponse.ok) {\n          throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);\n        }\n        const prData = await prResponse.json();\n        \n        // Filter out gh-pages branch and format data\n        const filteredBranches = branchData\n          .filter(branch => branch.name !== 'gh-pages')\n          .map(branch => {\n            // Convert branch name to safe directory name (replace slashes with dashes)\n            const safeName = branch.name.replace(/\\//g, '-');\n            return {\n              name: branch.name,\n              safeName: safeName,\n              commit: branch.commit,\n              url: `./sgex/${safeName}/index.html`,\n              lastModified: branch.commit.commit?.committer?.date \n                ? new Date(branch.commit.commit.committer.date).toLocaleDateString()\n                : 'Unknown'\n            };\n          });\n        \n        // Format PR data\n        const formattedPRs = prData.map(pr => {\n          const safeBranchName = pr.head.ref.replace(/\\//g, '-');\n          return {\n            id: pr.id,\n            number: pr.number,\n            title: pr.title,\n            state: pr.state,\n            author: pr.user.login,\n            branchName: pr.head.ref,\n            safeBranchName: safeBranchName,\n            url: `./sgex/${safeBranchName}/index.html`,\n            prUrl: pr.html_url,\n            updatedAt: new Date(pr.updated_at).toLocaleDateString(),\n            createdAt: new Date(pr.created_at).toLocaleDateString()\n          };\n        });\n        \n        setBranches(filteredBranches);\n        setPullRequests(formattedPRs);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Filter and paginate PRs based on search\n  const filteredPRs = pullRequests.filter(pr => \n    pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n    pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n  );\n  const paginatedPRs = filteredPRs.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n  const totalPRPages = Math.ceil(filteredPRs.length / ITEMS_PER_PAGE);\n\n  if (loading) {\n    return (\n      <PageLayout pageName=\"branch-listing\" showMascot={true}>\n        <div className=\"branch-listing\">\n          <h1><img src=\"/sgex-mascot.png\" alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          <div className=\"loading\">Loading previews...</div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <PageLayout pageName=\"branch-listing\" showMascot={true}>\n        <div className=\"branch-listing\">\n          <h1><img src=\"/sgex-mascot.png\" alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          <div className=\"error\">\n            <p>Failed to load previews: {error}</p>\n            <p>Please try refreshing the page or check back later.</p>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout pageName=\"branch-listing\" showMascot={true}>\n      <div className=\"branch-listing\">\n        <header className=\"branch-listing-header\">\n          <h1><img src=\"/sgex-mascot.png\" alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n        </header>\n\n        <div className=\"main-actions\">\n          <button \n            className=\"contribute-btn primary\"\n            onClick={() => setShowContributeModal(true)}\n          >\n            üåü How to Contribute\n          </button>\n          <a \n            href=\"/sgex/main/docs/\" \n            className=\"contribute-btn secondary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            onError={(e) => {\n              // Fallback to GitHub docs if main branch docs not available\n              e.target.href = \"https://github.com/litlfred/sgex/tree/main/public/docs\";\n            }}\n          >\n            üìö Documentation\n          </a>\n          <a \n            href=\"https://github.com/litlfred/sgex/issues/new\" \n            className=\"contribute-btn tertiary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            üêõ Report a Bug\n          </a>\n        </div>\n\n        <div className=\"preview-tabs\">\n          <button \n            className={`tab-button ${activeTab === 'branches' ? 'active' : ''}`}\n            onClick={() => setActiveTab('branches')}\n          >\n            üåø Branch Previews ({branches.length})\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'prs' ? 'active' : ''}`}\n            onClick={() => setActiveTab('prs')}\n          >\n            üîÑ Pull Request Previews ({pullRequests.length})\n          </button>\n        </div>\n\n        {activeTab === 'branches' && (\n          <div className=\"branch-cards\">\n            {branches.length === 0 ? (\n              <div className=\"no-items\">\n                <p>No branch previews available at the moment.</p>\n                <p>Branch previews will appear here when code is pushed to branches.</p>\n              </div>\n            ) : (\n              branches.map((branch) => (\n                <div key={branch.name} className=\"preview-card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"item-name\">{branch.name}</h3>\n                    <span className=\"commit-badge\">\n                      {branch.commit.sha.substring(0, 7)}\n                    </span>\n                  </div>\n                  \n                  <div className=\"card-body\">\n                    <p className=\"item-date\">\n                      Last updated: {branch.lastModified}\n                    </p>\n                    \n                    <a \n                      href={branch.url} \n                      className=\"preview-link\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <span>üöÄ View Preview</span>\n                    </a>\n                  </div>\n\n                  <div className=\"card-footer\">\n                    <small className=\"preview-path\">\n                      Preview URL: {branch.url}\n                    </small>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        )}\n\n        {activeTab === 'prs' && (\n          <div className=\"pr-section\">\n            <div className=\"pr-controls\">\n              <input\n                type=\"text\"\n                placeholder=\"Search pull requests by title or author...\"\n                value={prSearchTerm}\n                onChange={(e) => {\n                  setPrSearchTerm(e.target.value);\n                  setPrPage(1); // Reset to first page when searching\n                }}\n                className=\"pr-search\"\n              />\n            </div>\n\n            <div className=\"pr-cards\">\n              {paginatedPRs.length === 0 ? (\n                <div className=\"no-items\">\n                  {prSearchTerm ? (\n                    <p>No pull requests match your search \"{prSearchTerm}\".</p>\n                  ) : (\n                    <p>No pull request previews available at the moment.</p>\n                  )}\n                </div>\n              ) : (\n                paginatedPRs.map((pr) => (\n                  <div key={pr.id} className=\"preview-card pr-card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"item-name\">#{pr.number}: {pr.title}</h3>\n                      <span className={`state-badge ${pr.state}`}>\n                        {pr.state === 'open' ? 'üü¢' : 'üî¥'} {pr.state}\n                      </span>\n                    </div>\n                    \n                    <div className=\"card-body\">\n                      <p className=\"pr-meta\">\n                        <strong>Branch:</strong> {pr.branchName} ‚Ä¢ <strong>Author:</strong> {pr.author}\n                      </p>\n                      <p className=\"item-date\">\n                        Created: {pr.createdAt} ‚Ä¢ Updated: {pr.updatedAt}\n                      </p>\n                      \n                      <div className=\"pr-actions\">\n                        <a \n                          href={pr.url} \n                          className=\"preview-link\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <span>üöÄ View Preview</span>\n                        </a>\n                        <a \n                          href={pr.prUrl} \n                          className=\"pr-link\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <span>üìã View PR</span>\n                        </a>\n                      </div>\n                    </div>\n\n                    <div className=\"card-footer\">\n                      <small className=\"preview-path\">\n                        Preview URL: {pr.url}\n                      </small>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n\n            {totalPRPages > 1 && (\n              <div className=\"pagination\">\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => setPrPage(Math.max(1, prPage - 1))}\n                  disabled={prPage === 1}\n                >\n                  ‚Üê Previous\n                </button>\n                <span className=\"pagination-info\">\n                  Page {prPage} of {totalPRPages} ({filteredPRs.length} total)\n                </span>\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => setPrPage(Math.min(totalPRPages, prPage + 1))}\n                  disabled={prPage === totalPRPages}\n                >\n                  Next ‚Üí\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        <footer className=\"branch-listing-footer\">\n          <div className=\"footer-content\">\n            <div className=\"footer-left\">\n              <a \n                href=\"https://github.com/litlfred/sgex\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"source-link\"\n              >\n                üì¶ Source Code\n              </a>\n            </div>\n            <div className=\"footer-center\">\n              <p>\n                üêæ This landing page lists all available previews. \n                Each branch and PR is automatically deployed to its own preview environment.\n              </p>\n              <p>\n                <strong>Main Application:</strong> <a href=\"./sgex/main/index.html\">View Main Branch ‚Üí</a>\n              </p>\n            </div>\n          </div>\n        </footer>\n\n        {showContributeModal && (\n          <HelpModal\n            helpTopic={contributeHelpTopic}\n            onClose={() => setShowContributeModal(false)}\n          />\n        )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default BranchListing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}