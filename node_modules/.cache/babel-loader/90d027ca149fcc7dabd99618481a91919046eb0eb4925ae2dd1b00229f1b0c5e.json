{"ast":null,"code":"import { isArray, isString, isObject, assign, forEach, find, filter, matchPattern, isDefined } from 'min-dash';\nimport { assignStyle, domify, classes as domClasses, attr as domAttr, remove as domRemove, clear as domClear } from 'min-dom';\nimport { getBBox } from '../../util/Elements';\nimport Ids from '../../util/IdGenerator';\n\n// document wide unique overlay ids\nvar ids = new Ids('ov');\nvar LOW_PRIORITY = 500;\n\n/**\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/ElementRegistry').default} ElementRegistry\n * @typedef {import('../../core/EventBus').default} EventBus\n *\n * @typedef {import('../../model/Types').Element} Element\n *\n * @typedef { {\n *   minZoom?: number,\n *   maxZoom?: number\n * } } OverlaysConfigShow\n *\n * @typedef { {\n *   min?: number,\n *   max?: number\n * } } OverlaysConfigScale\n *\n * @typedef { {\n*   id: string,\n*   type: string | null,\n*   element: Element | string\n* } & OverlayAttrs } Overlay\n*\n * @typedef { {\n *   html: HTMLElement | string,\n *   position: {\n *     top?: number,\n *     right?: number,\n *     bottom?: number,\n *     left?: number\n *   }\n * } & OverlaysConfigDefault } OverlayAttrs\n *\n * @typedef { {\n *   html: HTMLElement,\n *   element: Element,\n *   overlays: Overlay[]\n * } } OverlayContainer\n *\n * @typedef {{\n *   defaults?: OverlaysConfigDefault\n * }} OverlaysConfig\n *\n * @typedef { {\n *  show?: OverlaysConfigShow,\n *  scale?: OverlaysConfigScale | boolean\n * } } OverlaysConfigDefault\n *\n * @typedef { {\n *   id?: string;\n *   element?: Element | string;\n *   type?: string;\n * } | string } OverlaysFilter\n */\n\n/**\n * A service that allows users to attach overlays to diagram elements.\n *\n * The overlay service will take care of overlay positioning during updates.\n *\n * @example\n *\n * ```javascript\n * // add a pink badge on the top left of the shape\n *\n * overlays.add(someShape, {\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add via shape id\n *\n * overlays.add('some-element-id', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add with optional type\n *\n * overlays.add(someShape, 'badge', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n * ```\n *\n * ```javascript\n * // remove an overlay\n *\n * var id = overlays.add(...);\n * overlays.remove(id);\n *\n *\n * You may configure overlay defaults during tool by providing a `config` module\n * with `overlays.defaults` as an entry:\n *\n * {\n *   overlays: {\n *     defaults: {\n *       show: {\n *         minZoom: 0.7,\n *         maxZoom: 5.0\n *       },\n *       scale: {\n *         min: 1\n *       }\n *     }\n * }\n * ```\n *\n * @param {OverlaysConfig} config\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Overlays(config, eventBus, canvas, elementRegistry) {\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n  this._ids = ids;\n\n  /**\n   * @type {OverlaysConfigDefault}\n   */\n  this._overlayDefaults = assign({\n    // no show constraints\n    show: null,\n    // always scale\n    scale: true\n  }, config && config.defaults);\n\n  /**\n   * @type {Record<string, Overlay>}\n   */\n  this._overlays = {};\n\n  /**\n   * @type {OverlayContainer[]}\n   */\n  this._overlayContainers = [];\n\n  /**\n   * @type {HTMLElement}\n   */\n  this._overlayRoot = createRoot(canvas.getContainer());\n  this._init();\n}\nOverlays.$inject = ['config.overlays', 'eventBus', 'canvas', 'elementRegistry'];\n\n/**\n * Returns the overlay with the specified ID or a list of overlays\n * for an element with a given type.\n *\n * @example\n *\n * ```javascript\n * // return the single overlay with the given ID\n * overlays.get('some-id');\n *\n * // return all overlays for the shape\n * overlays.get({ element: someShape });\n *\n * // return all overlays on shape with type 'badge'\n * overlays.get({ element: someShape, type: 'badge' });\n *\n * // shape can also be specified as ID\n * overlays.get({ element: 'element-id', type: 'badge' });\n * ```\n *\n * @param {OverlaysFilter} search The filter to be used to find the overlay(s).\n *\n * @return {Overlay|Overlay[]} The overlay(s).\n */\nOverlays.prototype.get = function (search) {\n  if (isString(search)) {\n    search = {\n      id: search\n    };\n  }\n  if (isString(search.element)) {\n    search.element = this._elementRegistry.get(search.element);\n  }\n  if (search.element) {\n    var container = this._getOverlayContainer(search.element, true);\n\n    // return a list of overlays when searching by element (+type)\n    if (container) {\n      return search.type ? filter(container.overlays, matchPattern({\n        type: search.type\n      })) : container.overlays.slice();\n    } else {\n      return [];\n    }\n  } else if (search.type) {\n    return filter(this._overlays, matchPattern({\n      type: search.type\n    }));\n  } else {\n    // return single element when searching by id\n    return search.id ? this._overlays[search.id] : null;\n  }\n};\n\n/**\n * Adds an HTML overlay to an element.\n *\n * @param {Element|string} element The element to add the overlay to.\n * @param {string} [type] An optional type that can be used to filter.\n * @param {OverlayAttrs} overlay The overlay.\n *\n * @return {string} The overlay's ID that can be used to get or remove it.\n */\nOverlays.prototype.add = function (element, type, overlay) {\n  if (isObject(type)) {\n    overlay = type;\n    type = null;\n  }\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n  if (!overlay.position) {\n    throw new Error('must specifiy overlay position');\n  }\n  if (!overlay.html) {\n    throw new Error('must specifiy overlay html');\n  }\n  if (!element) {\n    throw new Error('invalid element specified');\n  }\n  var id = this._ids.next();\n  overlay = assign({}, this._overlayDefaults, overlay, {\n    id: id,\n    type: type,\n    element: element,\n    html: overlay.html\n  });\n  this._addOverlay(overlay);\n  return id;\n};\n\n/**\n * Remove an overlay with the given ID or all overlays matching the given filter.\n *\n * @see Overlays#get for filter options.\n *\n * @param {OverlaysFilter} filter The filter to be used to find the overlay.\n */\nOverlays.prototype.remove = function (filter) {\n  var overlays = this.get(filter) || [];\n  if (!isArray(overlays)) {\n    overlays = [overlays];\n  }\n  var self = this;\n  forEach(overlays, function (overlay) {\n    var container = self._getOverlayContainer(overlay.element, true);\n    if (overlay) {\n      domRemove(overlay.html);\n      domRemove(overlay.htmlContainer);\n      delete overlay.htmlContainer;\n      delete overlay.element;\n      delete self._overlays[overlay.id];\n    }\n    if (container) {\n      var idx = container.overlays.indexOf(overlay);\n      if (idx !== -1) {\n        container.overlays.splice(idx, 1);\n      }\n    }\n  });\n};\n\n/**\n * Checks whether overlays are shown.\n *\n * @return {boolean} Whether overlays are shown.\n */\nOverlays.prototype.isShown = function () {\n  return this._overlayRoot.style.display !== 'none';\n};\n\n/**\n * Show all overlays.\n */\nOverlays.prototype.show = function () {\n  setVisible(this._overlayRoot);\n};\n\n/**\n * Hide all overlays.\n */\nOverlays.prototype.hide = function () {\n  setVisible(this._overlayRoot, false);\n};\n\n/**\n * Remove all overlays and their container.\n */\nOverlays.prototype.clear = function () {\n  this._overlays = {};\n  this._overlayContainers = [];\n  domClear(this._overlayRoot);\n};\nOverlays.prototype._updateOverlayContainer = function (container) {\n  var element = container.element,\n    html = container.html;\n\n  // update container left,top according to the elements x,y coordinates\n  // this ensures we can attach child elements relative to this container\n\n  var x = element.x,\n    y = element.y;\n  if (element.waypoints) {\n    var bbox = getBBox(element);\n    x = bbox.x;\n    y = bbox.y;\n  }\n  setPosition(html, x, y);\n  domAttr(container.html, 'data-container-id', element.id);\n};\nOverlays.prototype._updateOverlay = function (overlay) {\n  var position = overlay.position,\n    htmlContainer = overlay.htmlContainer,\n    element = overlay.element;\n\n  // update overlay html relative to shape because\n  // it is already positioned on the element\n\n  // update relative\n  var left = position.left,\n    top = position.top;\n  if (position.right !== undefined) {\n    var width;\n    if (element.waypoints) {\n      width = getBBox(element).width;\n    } else {\n      width = element.width;\n    }\n    left = position.right * -1 + width;\n  }\n  if (position.bottom !== undefined) {\n    var height;\n    if (element.waypoints) {\n      height = getBBox(element).height;\n    } else {\n      height = element.height;\n    }\n    top = position.bottom * -1 + height;\n  }\n  setPosition(htmlContainer, left || 0, top || 0);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\nOverlays.prototype._createOverlayContainer = function (element) {\n  var html = domify('<div class=\"djs-overlays\" />');\n  assignStyle(html, {\n    position: 'absolute'\n  });\n  this._overlayRoot.appendChild(html);\n  var container = {\n    html: html,\n    element: element,\n    overlays: []\n  };\n  this._updateOverlayContainer(container);\n  this._overlayContainers.push(container);\n  return container;\n};\nOverlays.prototype._updateRoot = function (viewbox) {\n  var scale = viewbox.scale || 1;\n  var matrix = 'matrix(' + [scale, 0, 0, scale, -1 * viewbox.x * scale, -1 * viewbox.y * scale].join(',') + ')';\n  setTransform(this._overlayRoot, matrix);\n};\nOverlays.prototype._getOverlayContainer = function (element, raw) {\n  var container = find(this._overlayContainers, function (c) {\n    return c.element === element;\n  });\n  if (!container && !raw) {\n    return this._createOverlayContainer(element);\n  }\n  return container;\n};\nOverlays.prototype._addOverlay = function (overlay) {\n  var id = overlay.id,\n    element = overlay.element,\n    html = overlay.html,\n    htmlContainer,\n    overlayContainer;\n\n  // unwrap jquery (for those who need it)\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // overlay HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n  overlayContainer = this._getOverlayContainer(element);\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\">');\n  assignStyle(htmlContainer, {\n    position: 'absolute'\n  });\n  htmlContainer.appendChild(html);\n  if (overlay.type) {\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\n  }\n  var elementRoot = this._canvas.findRoot(element);\n  var activeRoot = this._canvas.getRootElement();\n  setVisible(htmlContainer, elementRoot === activeRoot);\n  overlay.htmlContainer = htmlContainer;\n  overlayContainer.overlays.push(overlay);\n  overlayContainer.html.appendChild(htmlContainer);\n  this._overlays[id] = overlay;\n  this._updateOverlay(overlay);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\nOverlays.prototype._updateOverlayVisibilty = function (overlay, viewbox) {\n  var show = overlay.show,\n    rootElement = this._canvas.findRoot(overlay.element),\n    minZoom = show && show.minZoom,\n    maxZoom = show && show.maxZoom,\n    htmlContainer = overlay.htmlContainer,\n    activeRootElement = this._canvas.getRootElement(),\n    visible = true;\n  if (rootElement !== activeRootElement) {\n    visible = false;\n  } else if (show) {\n    if (isDefined(minZoom) && minZoom > viewbox.scale || isDefined(maxZoom) && maxZoom < viewbox.scale) {\n      visible = false;\n    }\n  }\n  setVisible(htmlContainer, visible);\n  this._updateOverlayScale(overlay, viewbox);\n};\nOverlays.prototype._updateOverlayScale = function (overlay, viewbox) {\n  var shouldScale = overlay.scale,\n    minScale,\n    maxScale,\n    htmlContainer = overlay.htmlContainer;\n  var scale,\n    transform = '';\n  if (shouldScale !== true) {\n    if (shouldScale === false) {\n      minScale = 1;\n      maxScale = 1;\n    } else {\n      minScale = shouldScale.min;\n      maxScale = shouldScale.max;\n    }\n    if (isDefined(minScale) && viewbox.scale < minScale) {\n      scale = (1 / viewbox.scale || 1) * minScale;\n    }\n    if (isDefined(maxScale) && viewbox.scale > maxScale) {\n      scale = (1 / viewbox.scale || 1) * maxScale;\n    }\n  }\n  if (isDefined(scale)) {\n    transform = 'scale(' + scale + ',' + scale + ')';\n  }\n  setTransform(htmlContainer, transform);\n};\nOverlays.prototype._updateOverlaysVisibilty = function (viewbox) {\n  var self = this;\n  forEach(this._overlays, function (overlay) {\n    self._updateOverlayVisibilty(overlay, viewbox);\n  });\n};\nOverlays.prototype._init = function () {\n  var eventBus = this._eventBus;\n  var self = this;\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateOverlaysVisibilty(viewbox);\n    self.show();\n  }\n  eventBus.on('canvas.viewbox.changing', function (event) {\n    self.hide();\n  });\n  eventBus.on('canvas.viewbox.changed', function (event) {\n    updateViewbox(event.viewbox);\n  });\n\n  // remove integration\n\n  eventBus.on(['shape.remove', 'connection.remove'], function (e) {\n    var element = e.element;\n    var overlays = self.get({\n      element: element\n    });\n    forEach(overlays, function (o) {\n      self.remove(o.id);\n    });\n    var container = self._getOverlayContainer(element);\n    if (container) {\n      domRemove(container.html);\n      var i = self._overlayContainers.indexOf(container);\n      if (i !== -1) {\n        self._overlayContainers.splice(i, 1);\n      }\n    }\n  });\n\n  // move integration\n\n  eventBus.on('element.changed', LOW_PRIORITY, function (e) {\n    var element = e.element;\n    var container = self._getOverlayContainer(element, true);\n    if (container) {\n      forEach(container.overlays, function (overlay) {\n        self._updateOverlay(overlay);\n      });\n      self._updateOverlayContainer(container);\n    }\n  });\n\n  // marker integration, simply add them on the overlays as classes, too.\n\n  eventBus.on('element.marker.update', function (e) {\n    var container = self._getOverlayContainer(e.element, true);\n    if (container) {\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\n    }\n  });\n  eventBus.on('root.set', function () {\n    self._updateOverlaysVisibilty(self._canvas.viewbox());\n  });\n\n  // clear overlays with diagram\n\n  eventBus.on('diagram.clear', this.clear, this);\n};\n\n// helpers /////////////////////////////\n\nfunction createRoot(parentNode) {\n  var root = domify('<div class=\"djs-overlay-container\" />');\n  assignStyle(root, {\n    position: 'absolute',\n    width: 0,\n    height: 0\n  });\n  parentNode.insertBefore(root, parentNode.firstChild);\n  return root;\n}\nfunction setPosition(el, x, y) {\n  assignStyle(el, {\n    left: x + 'px',\n    top: y + 'px'\n  });\n}\n\n/**\n * Set element visible\n *\n * @param {DOMElement} el\n * @param {boolean} [visible=true]\n */\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\nfunction setTransform(el, transform) {\n  el.style['transform-origin'] = 'top left';\n  ['', '-ms-', '-webkit-'].forEach(function (prefix) {\n    el.style[prefix + 'transform'] = transform;\n  });\n}","map":{"version":3,"names":["isArray","isString","isObject","assign","forEach","find","filter","matchPattern","isDefined","assignStyle","domify","classes","domClasses","attr","domAttr","remove","domRemove","clear","domClear","getBBox","Ids","ids","LOW_PRIORITY","Overlays","config","eventBus","canvas","elementRegistry","_eventBus","_canvas","_elementRegistry","_ids","_overlayDefaults","show","scale","defaults","_overlays","_overlayContainers","_overlayRoot","createRoot","getContainer","_init","$inject","prototype","get","search","id","element","container","_getOverlayContainer","type","overlays","slice","add","overlay","position","Error","html","next","_addOverlay","self","htmlContainer","idx","indexOf","splice","isShown","style","display","setVisible","hide","_updateOverlayContainer","x","y","waypoints","bbox","setPosition","_updateOverlay","left","top","right","undefined","width","bottom","height","_updateOverlayVisibilty","viewbox","_createOverlayContainer","appendChild","push","_updateRoot","matrix","join","setTransform","raw","c","overlayContainer","constructor","jquery","elementRoot","findRoot","activeRoot","getRootElement","rootElement","minZoom","maxZoom","activeRootElement","visible","_updateOverlayScale","shouldScale","minScale","maxScale","transform","min","max","_updateOverlaysVisibilty","updateViewbox","on","event","e","o","i","marker","parentNode","root","insertBefore","firstChild","el","prefix"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/overlays/Overlays.js"],"sourcesContent":["import {\n  isArray,\n  isString,\n  isObject,\n  assign,\n  forEach,\n  find,\n  filter,\n  matchPattern,\n  isDefined\n} from 'min-dash';\n\nimport {\n  assignStyle,\n  domify,\n  classes as domClasses,\n  attr as domAttr,\n  remove as domRemove,\n  clear as domClear\n} from 'min-dom';\n\nimport {\n  getBBox\n} from '../../util/Elements';\n\nimport Ids from '../../util/IdGenerator';\n\n// document wide unique overlay ids\nvar ids = new Ids('ov');\n\nvar LOW_PRIORITY = 500;\n\n/**\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/ElementRegistry').default} ElementRegistry\n * @typedef {import('../../core/EventBus').default} EventBus\n *\n * @typedef {import('../../model/Types').Element} Element\n *\n * @typedef { {\n *   minZoom?: number,\n *   maxZoom?: number\n * } } OverlaysConfigShow\n *\n * @typedef { {\n *   min?: number,\n *   max?: number\n * } } OverlaysConfigScale\n *\n * @typedef { {\n*   id: string,\n*   type: string | null,\n*   element: Element | string\n* } & OverlayAttrs } Overlay\n*\n * @typedef { {\n *   html: HTMLElement | string,\n *   position: {\n *     top?: number,\n *     right?: number,\n *     bottom?: number,\n *     left?: number\n *   }\n * } & OverlaysConfigDefault } OverlayAttrs\n *\n * @typedef { {\n *   html: HTMLElement,\n *   element: Element,\n *   overlays: Overlay[]\n * } } OverlayContainer\n *\n * @typedef {{\n *   defaults?: OverlaysConfigDefault\n * }} OverlaysConfig\n *\n * @typedef { {\n *  show?: OverlaysConfigShow,\n *  scale?: OverlaysConfigScale | boolean\n * } } OverlaysConfigDefault\n *\n * @typedef { {\n *   id?: string;\n *   element?: Element | string;\n *   type?: string;\n * } | string } OverlaysFilter\n */\n\n/**\n * A service that allows users to attach overlays to diagram elements.\n *\n * The overlay service will take care of overlay positioning during updates.\n *\n * @example\n *\n * ```javascript\n * // add a pink badge on the top left of the shape\n *\n * overlays.add(someShape, {\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add via shape id\n *\n * overlays.add('some-element-id', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add with optional type\n *\n * overlays.add(someShape, 'badge', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n * ```\n *\n * ```javascript\n * // remove an overlay\n *\n * var id = overlays.add(...);\n * overlays.remove(id);\n *\n *\n * You may configure overlay defaults during tool by providing a `config` module\n * with `overlays.defaults` as an entry:\n *\n * {\n *   overlays: {\n *     defaults: {\n *       show: {\n *         minZoom: 0.7,\n *         maxZoom: 5.0\n *       },\n *       scale: {\n *         min: 1\n *       }\n *     }\n * }\n * ```\n *\n * @param {OverlaysConfig} config\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Overlays(config, eventBus, canvas, elementRegistry) {\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n\n  this._ids = ids;\n\n  /**\n   * @type {OverlaysConfigDefault}\n   */\n  this._overlayDefaults = assign({\n\n    // no show constraints\n    show: null,\n\n    // always scale\n    scale: true\n  }, config && config.defaults);\n\n  /**\n   * @type {Record<string, Overlay>}\n   */\n  this._overlays = {};\n\n  /**\n   * @type {OverlayContainer[]}\n   */\n  this._overlayContainers = [];\n\n  /**\n   * @type {HTMLElement}\n   */\n  this._overlayRoot = createRoot(canvas.getContainer());\n\n  this._init();\n}\n\n\nOverlays.$inject = [\n  'config.overlays',\n  'eventBus',\n  'canvas',\n  'elementRegistry'\n];\n\n\n/**\n * Returns the overlay with the specified ID or a list of overlays\n * for an element with a given type.\n *\n * @example\n *\n * ```javascript\n * // return the single overlay with the given ID\n * overlays.get('some-id');\n *\n * // return all overlays for the shape\n * overlays.get({ element: someShape });\n *\n * // return all overlays on shape with type 'badge'\n * overlays.get({ element: someShape, type: 'badge' });\n *\n * // shape can also be specified as ID\n * overlays.get({ element: 'element-id', type: 'badge' });\n * ```\n *\n * @param {OverlaysFilter} search The filter to be used to find the overlay(s).\n *\n * @return {Overlay|Overlay[]} The overlay(s).\n */\nOverlays.prototype.get = function(search) {\n\n  if (isString(search)) {\n    search = { id: search };\n  }\n\n  if (isString(search.element)) {\n    search.element = this._elementRegistry.get(search.element);\n  }\n\n  if (search.element) {\n    var container = this._getOverlayContainer(search.element, true);\n\n    // return a list of overlays when searching by element (+type)\n    if (container) {\n      return search.type ? filter(container.overlays, matchPattern({ type: search.type })) : container.overlays.slice();\n    } else {\n      return [];\n    }\n  } else if (search.type) {\n    return filter(this._overlays, matchPattern({ type: search.type }));\n  } else {\n\n    // return single element when searching by id\n    return search.id ? this._overlays[search.id] : null;\n  }\n};\n\n/**\n * Adds an HTML overlay to an element.\n *\n * @param {Element|string} element The element to add the overlay to.\n * @param {string} [type] An optional type that can be used to filter.\n * @param {OverlayAttrs} overlay The overlay.\n *\n * @return {string} The overlay's ID that can be used to get or remove it.\n */\nOverlays.prototype.add = function(element, type, overlay) {\n\n  if (isObject(type)) {\n    overlay = type;\n    type = null;\n  }\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  if (!overlay.position) {\n    throw new Error('must specifiy overlay position');\n  }\n\n  if (!overlay.html) {\n    throw new Error('must specifiy overlay html');\n  }\n\n  if (!element) {\n    throw new Error('invalid element specified');\n  }\n\n  var id = this._ids.next();\n\n  overlay = assign({}, this._overlayDefaults, overlay, {\n    id: id,\n    type: type,\n    element: element,\n    html: overlay.html\n  });\n\n  this._addOverlay(overlay);\n\n  return id;\n};\n\n\n/**\n * Remove an overlay with the given ID or all overlays matching the given filter.\n *\n * @see Overlays#get for filter options.\n *\n * @param {OverlaysFilter} filter The filter to be used to find the overlay.\n */\nOverlays.prototype.remove = function(filter) {\n\n  var overlays = this.get(filter) || [];\n\n  if (!isArray(overlays)) {\n    overlays = [ overlays ];\n  }\n\n  var self = this;\n\n  forEach(overlays, function(overlay) {\n\n    var container = self._getOverlayContainer(overlay.element, true);\n\n    if (overlay) {\n      domRemove(overlay.html);\n      domRemove(overlay.htmlContainer);\n\n      delete overlay.htmlContainer;\n      delete overlay.element;\n\n      delete self._overlays[overlay.id];\n    }\n\n    if (container) {\n      var idx = container.overlays.indexOf(overlay);\n      if (idx !== -1) {\n        container.overlays.splice(idx, 1);\n      }\n    }\n  });\n\n};\n\n/**\n * Checks whether overlays are shown.\n *\n * @return {boolean} Whether overlays are shown.\n */\nOverlays.prototype.isShown = function() {\n  return this._overlayRoot.style.display !== 'none';\n};\n\n/**\n * Show all overlays.\n */\nOverlays.prototype.show = function() {\n  setVisible(this._overlayRoot);\n};\n\n/**\n * Hide all overlays.\n */\nOverlays.prototype.hide = function() {\n  setVisible(this._overlayRoot, false);\n};\n\n/**\n * Remove all overlays and their container.\n */\nOverlays.prototype.clear = function() {\n  this._overlays = {};\n\n  this._overlayContainers = [];\n\n  domClear(this._overlayRoot);\n};\n\nOverlays.prototype._updateOverlayContainer = function(container) {\n  var element = container.element,\n      html = container.html;\n\n  // update container left,top according to the elements x,y coordinates\n  // this ensures we can attach child elements relative to this container\n\n  var x = element.x,\n      y = element.y;\n\n  if (element.waypoints) {\n    var bbox = getBBox(element);\n    x = bbox.x;\n    y = bbox.y;\n  }\n\n  setPosition(html, x, y);\n\n  domAttr(container.html, 'data-container-id', element.id);\n};\n\n\nOverlays.prototype._updateOverlay = function(overlay) {\n\n  var position = overlay.position,\n      htmlContainer = overlay.htmlContainer,\n      element = overlay.element;\n\n  // update overlay html relative to shape because\n  // it is already positioned on the element\n\n  // update relative\n  var left = position.left,\n      top = position.top;\n\n  if (position.right !== undefined) {\n\n    var width;\n\n    if (element.waypoints) {\n      width = getBBox(element).width;\n    } else {\n      width = element.width;\n    }\n\n    left = position.right * -1 + width;\n  }\n\n  if (position.bottom !== undefined) {\n\n    var height;\n\n    if (element.waypoints) {\n      height = getBBox(element).height;\n    } else {\n      height = element.height;\n    }\n\n    top = position.bottom * -1 + height;\n  }\n\n  setPosition(htmlContainer, left || 0, top || 0);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\n\n\nOverlays.prototype._createOverlayContainer = function(element) {\n  var html = domify('<div class=\"djs-overlays\" />');\n  assignStyle(html, { position: 'absolute' });\n\n  this._overlayRoot.appendChild(html);\n\n  var container = {\n    html: html,\n    element: element,\n    overlays: []\n  };\n\n  this._updateOverlayContainer(container);\n\n  this._overlayContainers.push(container);\n\n  return container;\n};\n\n\nOverlays.prototype._updateRoot = function(viewbox) {\n  var scale = viewbox.scale || 1;\n\n  var matrix = 'matrix(' +\n  [\n    scale,\n    0,\n    0,\n    scale,\n    -1 * viewbox.x * scale,\n    -1 * viewbox.y * scale\n  ].join(',') +\n  ')';\n\n  setTransform(this._overlayRoot, matrix);\n};\n\n\nOverlays.prototype._getOverlayContainer = function(element, raw) {\n  var container = find(this._overlayContainers, function(c) {\n    return c.element === element;\n  });\n\n\n  if (!container && !raw) {\n    return this._createOverlayContainer(element);\n  }\n\n  return container;\n};\n\n\nOverlays.prototype._addOverlay = function(overlay) {\n\n  var id = overlay.id,\n      element = overlay.element,\n      html = overlay.html,\n      htmlContainer,\n      overlayContainer;\n\n  // unwrap jquery (for those who need it)\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // overlay HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  overlayContainer = this._getOverlayContainer(element);\n\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\">');\n  assignStyle(htmlContainer, { position: 'absolute' });\n\n  htmlContainer.appendChild(html);\n\n  if (overlay.type) {\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\n  }\n\n  var elementRoot = this._canvas.findRoot(element);\n  var activeRoot = this._canvas.getRootElement();\n\n  setVisible(htmlContainer, elementRoot === activeRoot);\n\n  overlay.htmlContainer = htmlContainer;\n\n  overlayContainer.overlays.push(overlay);\n  overlayContainer.html.appendChild(htmlContainer);\n\n  this._overlays[id] = overlay;\n\n  this._updateOverlay(overlay);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\n\n\nOverlays.prototype._updateOverlayVisibilty = function(overlay, viewbox) {\n  var show = overlay.show,\n      rootElement = this._canvas.findRoot(overlay.element),\n      minZoom = show && show.minZoom,\n      maxZoom = show && show.maxZoom,\n      htmlContainer = overlay.htmlContainer,\n      activeRootElement = this._canvas.getRootElement(),\n      visible = true;\n\n  if (rootElement !== activeRootElement) {\n    visible = false;\n  } else if (show) {\n    if (\n      (isDefined(minZoom) && minZoom > viewbox.scale) ||\n      (isDefined(maxZoom) && maxZoom < viewbox.scale)\n    ) {\n      visible = false;\n    }\n  }\n\n  setVisible(htmlContainer, visible);\n\n  this._updateOverlayScale(overlay, viewbox);\n};\n\n\nOverlays.prototype._updateOverlayScale = function(overlay, viewbox) {\n  var shouldScale = overlay.scale,\n      minScale,\n      maxScale,\n      htmlContainer = overlay.htmlContainer;\n\n  var scale, transform = '';\n\n  if (shouldScale !== true) {\n\n    if (shouldScale === false) {\n      minScale = 1;\n      maxScale = 1;\n    } else {\n      minScale = shouldScale.min;\n      maxScale = shouldScale.max;\n    }\n\n    if (isDefined(minScale) && viewbox.scale < minScale) {\n      scale = (1 / viewbox.scale || 1) * minScale;\n    }\n\n    if (isDefined(maxScale) && viewbox.scale > maxScale) {\n      scale = (1 / viewbox.scale || 1) * maxScale;\n    }\n  }\n\n  if (isDefined(scale)) {\n    transform = 'scale(' + scale + ',' + scale + ')';\n  }\n\n  setTransform(htmlContainer, transform);\n};\n\n\nOverlays.prototype._updateOverlaysVisibilty = function(viewbox) {\n\n  var self = this;\n\n  forEach(this._overlays, function(overlay) {\n    self._updateOverlayVisibilty(overlay, viewbox);\n  });\n};\n\n\nOverlays.prototype._init = function() {\n\n  var eventBus = this._eventBus;\n\n  var self = this;\n\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateOverlaysVisibilty(viewbox);\n\n    self.show();\n  }\n\n  eventBus.on('canvas.viewbox.changing', function(event) {\n    self.hide();\n  });\n\n  eventBus.on('canvas.viewbox.changed', function(event) {\n    updateViewbox(event.viewbox);\n  });\n\n\n  // remove integration\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    var overlays = self.get({ element: element });\n\n    forEach(overlays, function(o) {\n      self.remove(o.id);\n    });\n\n    var container = self._getOverlayContainer(element);\n\n    if (container) {\n      domRemove(container.html);\n      var i = self._overlayContainers.indexOf(container);\n      if (i !== -1) {\n        self._overlayContainers.splice(i, 1);\n      }\n    }\n  });\n\n\n  // move integration\n\n  eventBus.on('element.changed', LOW_PRIORITY, function(e) {\n    var element = e.element;\n\n    var container = self._getOverlayContainer(element, true);\n\n    if (container) {\n      forEach(container.overlays, function(overlay) {\n        self._updateOverlay(overlay);\n      });\n\n      self._updateOverlayContainer(container);\n    }\n  });\n\n\n  // marker integration, simply add them on the overlays as classes, too.\n\n  eventBus.on('element.marker.update', function(e) {\n    var container = self._getOverlayContainer(e.element, true);\n    if (container) {\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\n    }\n  });\n\n\n  eventBus.on('root.set', function() {\n    self._updateOverlaysVisibilty(self._canvas.viewbox());\n  });\n\n  // clear overlays with diagram\n\n  eventBus.on('diagram.clear', this.clear, this);\n};\n\n\n\n// helpers /////////////////////////////\n\nfunction createRoot(parentNode) {\n  var root = domify(\n    '<div class=\"djs-overlay-container\" />'\n  );\n\n  assignStyle(root, {\n    position: 'absolute',\n    width: 0,\n    height: 0\n  });\n\n  parentNode.insertBefore(root, parentNode.firstChild);\n\n  return root;\n}\n\nfunction setPosition(el, x, y) {\n  assignStyle(el, { left: x + 'px', top: y + 'px' });\n}\n\n/**\n * Set element visible\n *\n * @param {DOMElement} el\n * @param {boolean} [visible=true]\n */\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\nfunction setTransform(el, transform) {\n\n  el.style['transform-origin'] = 'top left';\n\n  [ '', '-ms-', '-webkit-' ].forEach(function(prefix) {\n    el.style[prefix + 'transform'] = transform;\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}