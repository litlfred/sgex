{"ast":null,"code":"import { forEach, isDefined } from 'min-dash';\n\n/**\n * @typedef {import('../../../core/Canvas').default} Canvas\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A handler that align elements in a certain way.\n *\n * @param {Modeling} modeling\n * @param {Canvas} canvas\n */\nexport default function AlignElements(modeling, canvas) {\n  this._modeling = modeling;\n  this._canvas = canvas;\n}\nAlignElements.$inject = ['modeling', 'canvas'];\nAlignElements.prototype.preExecute = function (context) {\n  var modeling = this._modeling;\n  var elements = context.elements,\n    alignment = context.alignment;\n  forEach(elements, function (element) {\n    var delta = {\n      x: 0,\n      y: 0\n    };\n    if (isDefined(alignment.left)) {\n      delta.x = alignment.left - element.x;\n    } else if (isDefined(alignment.right)) {\n      delta.x = alignment.right - element.width - element.x;\n    } else if (isDefined(alignment.center)) {\n      delta.x = alignment.center - Math.round(element.width / 2) - element.x;\n    } else if (isDefined(alignment.top)) {\n      delta.y = alignment.top - element.y;\n    } else if (isDefined(alignment.bottom)) {\n      delta.y = alignment.bottom - element.height - element.y;\n    } else if (isDefined(alignment.middle)) {\n      delta.y = alignment.middle - Math.round(element.height / 2) - element.y;\n    }\n    modeling.moveElements([element], delta, element.parent);\n  });\n};\nAlignElements.prototype.postExecute = function (context) {};","map":{"version":3,"names":["forEach","isDefined","AlignElements","modeling","canvas","_modeling","_canvas","$inject","prototype","preExecute","context","elements","alignment","element","delta","x","y","left","right","width","center","Math","round","top","bottom","height","middle","moveElements","parent","postExecute"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/modeling/cmd/AlignElementsHandler.js"],"sourcesContent":["import { forEach, isDefined } from 'min-dash';\n\n/**\n * @typedef {import('../../../core/Canvas').default} Canvas\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A handler that align elements in a certain way.\n *\n * @param {Modeling} modeling\n * @param {Canvas} canvas\n */\nexport default function AlignElements(modeling, canvas) {\n  this._modeling = modeling;\n  this._canvas = canvas;\n}\n\nAlignElements.$inject = [ 'modeling', 'canvas' ];\n\n\nAlignElements.prototype.preExecute = function(context) {\n  var modeling = this._modeling;\n\n  var elements = context.elements,\n      alignment = context.alignment;\n\n\n  forEach(elements, function(element) {\n    var delta = {\n      x: 0,\n      y: 0\n    };\n\n    if (isDefined(alignment.left)) {\n      delta.x = alignment.left - element.x;\n\n    } else if (isDefined(alignment.right)) {\n      delta.x = (alignment.right - element.width) - element.x;\n\n    } else if (isDefined(alignment.center)) {\n      delta.x = (alignment.center - Math.round(element.width / 2)) - element.x;\n\n    } else if (isDefined(alignment.top)) {\n      delta.y = alignment.top - element.y;\n\n    } else if (isDefined(alignment.bottom)) {\n      delta.y = (alignment.bottom - element.height) - element.y;\n\n    } else if (isDefined(alignment.middle)) {\n      delta.y = (alignment.middle - Math.round(element.height / 2)) - element.y;\n    }\n\n    modeling.moveElements([ element ], delta, element.parent);\n  });\n};\n\nAlignElements.prototype.postExecute = function(context) {\n\n};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,SAAS,QAAQ,UAAU;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,aAAaA,CAACC,QAAQ,EAAEC,MAAM,EAAE;EACtD,IAAI,CAACC,SAAS,GAAGF,QAAQ;EACzB,IAAI,CAACG,OAAO,GAAGF,MAAM;AACvB;AAEAF,aAAa,CAACK,OAAO,GAAG,CAAE,UAAU,EAAE,QAAQ,CAAE;AAGhDL,aAAa,CAACM,SAAS,CAACC,UAAU,GAAG,UAASC,OAAO,EAAE;EACrD,IAAIP,QAAQ,GAAG,IAAI,CAACE,SAAS;EAE7B,IAAIM,QAAQ,GAAGD,OAAO,CAACC,QAAQ;IAC3BC,SAAS,GAAGF,OAAO,CAACE,SAAS;EAGjCZ,OAAO,CAACW,QAAQ,EAAE,UAASE,OAAO,EAAE;IAClC,IAAIC,KAAK,GAAG;MACVC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACL,CAAC;IAED,IAAIf,SAAS,CAACW,SAAS,CAACK,IAAI,CAAC,EAAE;MAC7BH,KAAK,CAACC,CAAC,GAAGH,SAAS,CAACK,IAAI,GAAGJ,OAAO,CAACE,CAAC;IAEtC,CAAC,MAAM,IAAId,SAAS,CAACW,SAAS,CAACM,KAAK,CAAC,EAAE;MACrCJ,KAAK,CAACC,CAAC,GAAIH,SAAS,CAACM,KAAK,GAAGL,OAAO,CAACM,KAAK,GAAIN,OAAO,CAACE,CAAC;IAEzD,CAAC,MAAM,IAAId,SAAS,CAACW,SAAS,CAACQ,MAAM,CAAC,EAAE;MACtCN,KAAK,CAACC,CAAC,GAAIH,SAAS,CAACQ,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACT,OAAO,CAACM,KAAK,GAAG,CAAC,CAAC,GAAIN,OAAO,CAACE,CAAC;IAE1E,CAAC,MAAM,IAAId,SAAS,CAACW,SAAS,CAACW,GAAG,CAAC,EAAE;MACnCT,KAAK,CAACE,CAAC,GAAGJ,SAAS,CAACW,GAAG,GAAGV,OAAO,CAACG,CAAC;IAErC,CAAC,MAAM,IAAIf,SAAS,CAACW,SAAS,CAACY,MAAM,CAAC,EAAE;MACtCV,KAAK,CAACE,CAAC,GAAIJ,SAAS,CAACY,MAAM,GAAGX,OAAO,CAACY,MAAM,GAAIZ,OAAO,CAACG,CAAC;IAE3D,CAAC,MAAM,IAAIf,SAAS,CAACW,SAAS,CAACc,MAAM,CAAC,EAAE;MACtCZ,KAAK,CAACE,CAAC,GAAIJ,SAAS,CAACc,MAAM,GAAGL,IAAI,CAACC,KAAK,CAACT,OAAO,CAACY,MAAM,GAAG,CAAC,CAAC,GAAIZ,OAAO,CAACG,CAAC;IAC3E;IAEAb,QAAQ,CAACwB,YAAY,CAAC,CAAEd,OAAO,CAAE,EAAEC,KAAK,EAAED,OAAO,CAACe,MAAM,CAAC;EAC3D,CAAC,CAAC;AACJ,CAAC;AAED1B,aAAa,CAACM,SAAS,CAACqB,WAAW,GAAG,UAASnB,OAAO,EAAE,CAExD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}