{"ast":null,"code":"import React,{useState,useCallback,useMemo}from'react';import githubService from'../services/githubService';import'./SushiRunner.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SushiRunner=_ref=>{var _repository$owner;let{repository,selectedBranch,profile,stagingFiles=[]}=_ref;const[isExpanded,setIsExpanded]=useState(false);const[isRunning,setIsRunning]=useState(false);const[showModal,setShowModal]=useState(false);const[logs,setLogs]=useState([]);const[logLevelToggles,setLogLevelToggles]=useState({info:true,success:true,warning:true,error:true});const[searchText,setSearchText]=useState('');const[sushiConfig,setSushiConfig]=useState(null);const[fshFiles,setFshFiles]=useState([]);const[includeStagingFiles,setIncludeStagingFiles]=useState(false);const[error,setError]=useState(null);const owner=((_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login)||repository.full_name.split('/')[0];const repoName=repository.name;const addLog=useCallback(function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';setLogs(prev=>[...prev,{id:Date.now()+Math.random(),message,type,timestamp:new Date().toISOString()}]);},[]);const fetchRepositoryFiles=async()=>{try{addLog('🔍 Fetching sushi-config.yaml...','info');let config=null;try{const configContent=await githubService.getFileContent(owner,repoName,'sushi-config.yaml',selectedBranch);config=configContent;setSushiConfig(config);addLog('✅ Found sushi-config.yaml','success');}catch(err){addLog('⚠️ sushi-config.yaml not found in repository','warning');}addLog('🔍 Scanning input/fsh directory recursively...','info');const fshFiles=[];try{// Recursively scan for FSH files\nconst scanDirectory=async function(dirPath){let depth=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;const maxDepth=5;// Prevent infinite recursion\nif(depth>maxDepth){addLog(`⚠️ Maximum directory depth reached for ${dirPath}`,'warning');return;}try{const contents=await githubService.getDirectoryContents(owner,repoName,dirPath,selectedBranch);for(const item of contents){if(item.type==='file'&&item.name.endsWith('.fsh')){try{const fileContent=await githubService.getFileContent(owner,repoName,item.path,selectedBranch);fshFiles.push({name:item.name,path:item.path,content:fileContent});addLog(`📄 Found ${item.path}`,'success');}catch(err){addLog(`❌ Failed to fetch ${item.path}: ${err.message}`,'error');}}else if(item.type==='dir'){// Recursively scan subdirectories\naddLog(`📁 Scanning subdirectory: ${item.path}`,'info');await scanDirectory(item.path,depth+1);}}}catch(err){addLog(`⚠️ Could not scan directory ${dirPath}: ${err.message}`,'warning');}};await scanDirectory('input/fsh');}catch(err){addLog('⚠️ input/fsh directory not found or empty','warning');}setFshFiles(fshFiles);addLog(`📊 Found ${fshFiles.length} FSH files in repository`,'info');return{config,fshFiles};}catch(err){addLog(`❌ Error fetching repository files: ${err.message}`,'error');throw err;}};const integrateStagingFiles=repoFshFiles=>{// Start with repository files\nconst integratedFiles=[...repoFshFiles];// Override/add staging files\nstagingFiles.forEach(stagingFile=>{if(stagingFile.path&&stagingFile.path.endsWith('.fsh')){const fileName=stagingFile.path.split('/').pop();const existingIndex=integratedFiles.findIndex(f=>f.name===fileName);if(existingIndex>=0){// Override existing file\nintegratedFiles[existingIndex]={...integratedFiles[existingIndex],content:stagingFile.content,isFromStaging:true};addLog(`🔄 Overriding ${fileName} with staging version`,'info');}else{// Add new file from staging\nintegratedFiles.push({name:fileName,path:stagingFile.path,content:stagingFile.content,isFromStaging:true});addLog(`➕ Adding ${fileName} from staging`,'info');}}});return integratedFiles;};const runSushiInBrowser=async(config,files)=>{try{addLog('🚀 Initializing SUSHI in browser environment...','info');// This is where we would integrate the actual sushi library\n// For now, we'll simulate the process with detailed logging\naddLog('📝 Creating virtual file system...','info');const virtualFs={'sushi-config.yaml':config,'input/fsh/':{}};files.forEach(file=>{virtualFs['input/fsh/'][file.name]=file.content;addLog(`📁 Added ${file.name} to virtual FS`,'info');});addLog('⚙️ Parsing SUSHI configuration...','info');// Simulate configuration parsing\nawait new Promise(resolve=>setTimeout(resolve,500));if(config){try{const configObj=typeof config==='string'?await import('js-yaml').then(yaml=>yaml.default.load(config)):config;addLog(`📋 Package: ${configObj.name||'Unknown'}`,'success');addLog(`📋 Version: ${configObj.version||'Unknown'}`,'success');addLog(`📋 FHIR Version: ${configObj.fhirVersion||'Unknown'}`,'success');}catch(err){addLog(`⚠️ Could not parse config: ${err.message}`,'warning');}}addLog('🔍 Analyzing FSH files...','info');await new Promise(resolve=>setTimeout(resolve,1000));// Simulate FSH parsing and analysis\nfor(const file of files){addLog(`🔍 Parsing ${file.name}...`,'info');await new Promise(resolve=>setTimeout(resolve,200));// Simple FSH content analysis\nconst lines=file.content.split('\\n');const profiles=lines.filter(line=>line.trim().startsWith('Profile:')).length;const instances=lines.filter(line=>line.trim().startsWith('Instance:')).length;const valueSets=lines.filter(line=>line.trim().startsWith('ValueSet:')).length;if(profiles>0)addLog(`  📊 Found ${profiles} Profile(s)`,'success');if(instances>0)addLog(`  📊 Found ${instances} Instance(s)`,'success');if(valueSets>0)addLog(`  📊 Found ${valueSets} ValueSet(s)`,'success');if(file.isFromStaging){addLog(`  🏗️ File from staging ground`,'info');}}addLog('✨ SUSHI compilation completed successfully!','success');addLog('📦 Generated FHIR resources (simulated)','success');addLog('📝 Implementation Guide structure created','success');// Simulate some warnings or notes\nif(files.length===0){addLog('⚠️ No FSH files found to process','warning');}if(!config){addLog('⚠️ No sushi-config.yaml found - using defaults','warning');}return{success:true,resourceCount:files.length*2,// Simulate generated resources\nwarnings:[],errors:[]};}catch(err){addLog(`❌ SUSHI compilation failed: ${err.message}`,'error');throw err;}};const handleRunSushi=async function(){let withStagingFiles=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;setIsRunning(true);setShowModal(true);setLogs([]);setError(null);setIncludeStagingFiles(withStagingFiles);try{addLog('🏁 Starting SUSHI client-side execution...','info');if(withStagingFiles&&stagingFiles.length>0){addLog(`🗂️ Including ${stagingFiles.length} staging files`,'info');}// Fetch repository files\nconst{config,fshFiles:repoFiles}=await fetchRepositoryFiles();// Integrate staging files if requested\nconst finalFiles=withStagingFiles?integrateStagingFiles(repoFiles):repoFiles;if(withStagingFiles){addLog(`📊 Final file count: ${finalFiles.length} FSH files`,'info');}// Run SUSHI\nawait runSushiInBrowser(config,finalFiles);addLog('🎉 SUSHI execution completed successfully!','success');}catch(err){setError(err.message);addLog(`💥 Execution failed: ${err.message}`,'error');}finally{setIsRunning(false);}};const toggleLogLevel=useCallback(level=>{setLogLevelToggles(prev=>({...prev,[level]:!prev[level]}));},[]);const clearLogs=useCallback(()=>{setLogs([]);setLogLevelToggles({info:true,success:true,warning:true,error:true});setSearchText('');},[]);const copyAllLogs=useCallback(async()=>{const logText=logs.map(log=>`[${new Date(log.timestamp).toLocaleTimeString()}] ${log.message}`).join('\\n');try{await navigator.clipboard.writeText(logText);}catch(err){console.error('Failed to copy logs:',err);}},[logs]);const copyLogMessage=useCallback(async message=>{try{await navigator.clipboard.writeText(message);}catch(err){console.error('Failed to copy log message:',err);}},[]);// Function to detect and create links for files mentioned in log messages\nconst parseLogMessage=useCallback((message,logId)=>{// Regex to find file paths (ending with .fsh, .yaml, .yml, etc.)\nconst filePathRegex=/([a-zA-Z0-9_/-]+\\.(?:fsh|yaml|yml|json))/g;const matches=message.match(filePathRegex);if(!matches){return/*#__PURE__*/_jsx(\"span\",{children:message});}let lastIndex=0;const elements=[];matches.forEach((filePath,index)=>{const matchIndex=message.indexOf(filePath,lastIndex);// Add text before the match\nif(matchIndex>lastIndex){elements.push(/*#__PURE__*/_jsx(\"span\",{children:message.substring(lastIndex,matchIndex)},`${logId}-text-${index}`));}// Determine link type based on file location\nconst createFileLink=(path,text)=>{const isFromStaging=stagingFiles.some(f=>f.path&&f.path.includes(path));if(isFromStaging){// Link to staging ground\nreturn/*#__PURE__*/_jsxs(\"span\",{className:\"file-link staging-link\",title:\"Open in Staging Ground\",children:[\"\\uD83D\\uDCDD \",text]},`${logId}-link-${index}`);}else if(path.startsWith('input/fsh/')){// Determine DAK component based on directory structure\nconst getDakComponentLink=fshPath=>{const pathParts=fshPath.split('/');if(pathParts.length>2){const subDir=pathParts[2];switch(subDir){case'profiles':return{component:'Profiles',icon:'👤'};case'examples':return{component:'Examples',icon:'📋'};case'valuesets':return{component:'ValueSets',icon:'📊'};case'codesystems':return{component:'CodeSystems',icon:'🔢'};case'extensions':return{component:'Extensions',icon:'🔧'};default:return{component:'FSH Files',icon:'📄'};}}return{component:'FSH Files',icon:'📄'};};const dakInfo=getDakComponentLink(path);return/*#__PURE__*/_jsxs(\"span\",{className:\"file-link dak-link\",title:`View in DAK ${dakInfo.component}`,children:[dakInfo.icon,\" \",text]},`${logId}-link-${index}`);}else{// Link to GitHub source\nconst githubUrl=`https://github.com/${owner}/${repoName}/blob/${selectedBranch}/${path}`;return/*#__PURE__*/_jsxs(\"a\",{href:githubUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"file-link github-link\",title:\"Open in GitHub\",children:[\"\\uD83D\\uDD17 \",text]},`${logId}-link-${index}`);}};elements.push(createFileLink(filePath,filePath));lastIndex=matchIndex+filePath.length;});// Add remaining text\nif(lastIndex<message.length){elements.push(/*#__PURE__*/_jsx(\"span\",{children:message.substring(lastIndex)},`${logId}-text-end`));}return/*#__PURE__*/_jsx(\"span\",{children:elements});},[owner,repoName,selectedBranch,stagingFiles]);// Optimized filtered logs with useMemo to prevent unnecessary re-computations\nconst filteredLogs=useMemo(()=>{return logs.filter(log=>{// Filter by log level toggles\nconst isLevelEnabled=logLevelToggles[log.type];// Filter by search text\nconst matchesSearch=searchText===''||log.message.toLowerCase().includes(searchText.toLowerCase());return isLevelEnabled&&matchesSearch;});},[logs,logLevelToggles,searchText]);// Separate component for log controls to prevent re-renders\nconst LogControls=/*#__PURE__*/React.memo(_ref2=>{let{logLevelToggles,onToggleLogLevel,searchText,onSearchChange,filteredCount,totalCount}=_ref2;const handleSearchChange=useCallback(e=>{onSearchChange(e.target.value);},[onSearchChange]);return/*#__PURE__*/_jsxs(\"div\",{className:\"log-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"log-level-toggles\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"toggle-group-label\",children:\"Show levels:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"toggle-buttons\",children:[{key:'info',label:'Info',icon:'ℹ️'},{key:'success',label:'Success',icon:'✅'},{key:'warning',label:'Warning',icon:'⚠️'},{key:'error',label:'Error',icon:'❌'}].map(_ref3=>{let{key,label,icon}=_ref3;return/*#__PURE__*/_jsxs(\"button\",{className:`log-toggle-btn ${logLevelToggles[key]?'active':'inactive'}`,onClick:()=>onToggleLogLevel(key),title:`Toggle ${label} messages`,children:[icon,\" \",label]},key);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-search-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"log-search\",children:\"Search logs:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"log-search\",type:\"text\",value:searchText,onChange:handleSearchChange,placeholder:\"Search log messages...\",className:\"log-search-input\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"log-stats\",children:searchText||Object.values(logLevelToggles).some(v=>!v)?/*#__PURE__*/_jsxs(\"span\",{children:[\"Showing \",filteredCount,\" of \",totalCount,\" logs\"]}):/*#__PURE__*/_jsxs(\"span\",{children:[totalCount,\" logs\"]})})]});});const handleSearchChange=useCallback(value=>{setSearchText(value);},[]);const LogModal=()=>/*#__PURE__*/_jsx(\"div\",{className:\"sushi-modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"sushi-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sushi-modal-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83C\\uDF63 SUSHI Client-Side Execution\",includeStagingFiles&&/*#__PURE__*/_jsx(\"span\",{className:\"staging-badge\",children:\"+ Staging\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:copyAllLogs,className:\"copy-all-btn\",disabled:logs.length===0,title:\"Copy all logs to clipboard\",children:\"\\uD83D\\uDCCB Copy All\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearLogs,className:\"clear-logs-btn\",disabled:isRunning,children:\"\\uD83D\\uDDD1\\uFE0F Clear\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowModal(false),className:\"close-modal-btn\",children:\"\\u2715\"})]})]}),/*#__PURE__*/_jsx(LogControls,{logLevelToggles:logLevelToggles,onToggleLogLevel:toggleLogLevel,searchText:searchText,onSearchChange:handleSearchChange,filteredCount:filteredLogs.length,totalCount:logs.length}),/*#__PURE__*/_jsxs(\"div\",{className:\"sushi-modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"log-container\",children:[filteredLogs.map(log=>/*#__PURE__*/_jsxs(\"div\",{className:`log-entry log-${log.type}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"log-timestamp\",children:new Date(log.timestamp).toLocaleTimeString()}),/*#__PURE__*/_jsx(\"span\",{className:\"log-message\",children:parseLogMessage(log.message,log.id)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>copyLogMessage(log.message),className:\"copy-log-btn\",title:\"Copy this message to clipboard\",children:\"\\uD83D\\uDCCB\"})]},log.id)),isRunning&&/*#__PURE__*/_jsxs(\"div\",{className:\"log-entry log-running\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"log-timestamp\",children:new Date().toLocaleTimeString()}),/*#__PURE__*/_jsxs(\"span\",{className:\"log-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner\",children:\"\\u23F3\"}),\" Processing...\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"copy-log-btn-placeholder\"})]}),filteredLogs.length===0&&!isRunning&&logs.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"log-placeholder\",children:\"No logs match the current filter criteria...\"}),logs.length===0&&!isRunning&&/*#__PURE__*/_jsx(\"div\",{className:\"log-placeholder\",children:\"Logs will appear here during SUSHI execution...\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u274C Execution Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sushi-modal-footer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"execution-info\",children:isRunning?/*#__PURE__*/_jsx(\"span\",{className:\"status-running\",children:\"\\uD83D\\uDD04 Running SUSHI...\"}):logs.length>0?/*#__PURE__*/_jsx(\"span\",{className:\"status-complete\",children:\"\\u2705 Execution complete\"}):/*#__PURE__*/_jsx(\"span\",{className:\"status-ready\",children:\"\\uD83C\\uDF63 Ready to run SUSHI\"})})})]})});return/*#__PURE__*/_jsxs(\"div\",{className:\"sushi-runner-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`sushi-status-bar ${isExpanded?'expanded':'collapsed'}`,onClick:()=>setIsExpanded(!isExpanded),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-bar-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-icon\",children:\"\\uD83C\\uDF63\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-title\",children:\"SUSHI (FHIR Shorthand)\"}),/*#__PURE__*/_jsx(\"span\",{className:\"expand-icon\",children:isExpanded?'▼':'▶'})]}),!isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"status-summary\",children:\"Client-side FHIR Implementation Guide compilation\"})]}),isExpanded&&/*#__PURE__*/_jsxs(\"div\",{className:\"sushi-controls\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sushi-description\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Run SUSHI (FHIR Shorthand) compilation directly in your browser to generate FHIR Implementation Guide resources from FSH files.\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"execution-options\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-group\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCC2 Repository Files Only\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Compile using sushi-config.yaml and input/fsh files from the GitHub repository (\",selectedBranch,\" branch).\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"run-sushi-btn primary\",onClick:()=>handleRunSushi(false),disabled:isRunning,children:isRunning?'⏳ Running...':'🚀 Run SUSHI'})]}),stagingFiles.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"option-group\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83C\\uDFD7\\uFE0F Repository + Staging Files\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Compile using repository files, with staging ground files (\",stagingFiles.length,\" files) overriding any repository files with the same name.\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"run-sushi-btn secondary\",onClick:()=>handleRunSushi(true),disabled:isRunning,children:isRunning?'⏳ Running...':'🚀 Run SUSHI + Staging'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sushi-status\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Config:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:sushiConfig?'✅ Found':'❓ Unknown'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"FSH Files:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[fshFiles.length,\" in repository\"]})]}),stagingFiles.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Staging:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[stagingFiles.filter(f=>f.path&&f.path.endsWith('.fsh')).length,\" FSH files\"]})]})]})]}),showModal&&/*#__PURE__*/_jsx(LogModal,{})]});};export default SushiRunner;","map":{"version":3,"names":["React","useState","useCallback","useMemo","githubService","jsx","_jsx","jsxs","_jsxs","SushiRunner","_ref","_repository$owner","repository","selectedBranch","profile","stagingFiles","isExpanded","setIsExpanded","isRunning","setIsRunning","showModal","setShowModal","logs","setLogs","logLevelToggles","setLogLevelToggles","info","success","warning","error","searchText","setSearchText","sushiConfig","setSushiConfig","fshFiles","setFshFiles","includeStagingFiles","setIncludeStagingFiles","setError","owner","login","full_name","split","repoName","name","addLog","message","type","arguments","length","undefined","prev","id","Date","now","Math","random","timestamp","toISOString","fetchRepositoryFiles","config","configContent","getFileContent","err","scanDirectory","dirPath","depth","maxDepth","contents","getDirectoryContents","item","endsWith","fileContent","path","push","content","integrateStagingFiles","repoFshFiles","integratedFiles","forEach","stagingFile","fileName","pop","existingIndex","findIndex","f","isFromStaging","runSushiInBrowser","files","virtualFs","file","Promise","resolve","setTimeout","configObj","then","yaml","default","load","version","fhirVersion","lines","profiles","filter","line","trim","startsWith","instances","valueSets","resourceCount","warnings","errors","handleRunSushi","withStagingFiles","repoFiles","finalFiles","toggleLogLevel","level","clearLogs","copyAllLogs","logText","map","log","toLocaleTimeString","join","navigator","clipboard","writeText","console","copyLogMessage","parseLogMessage","logId","filePathRegex","matches","match","children","lastIndex","elements","filePath","index","matchIndex","indexOf","substring","createFileLink","text","some","includes","className","title","getDakComponentLink","fshPath","pathParts","subDir","component","icon","dakInfo","githubUrl","href","target","rel","filteredLogs","isLevelEnabled","matchesSearch","toLowerCase","LogControls","memo","_ref2","onToggleLogLevel","onSearchChange","filteredCount","totalCount","handleSearchChange","e","value","key","label","_ref3","onClick","htmlFor","onChange","placeholder","Object","values","v","LogModal","disabled"],"sources":["/home/runner/work/sgex/sgex/src/components/SushiRunner.js"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport githubService from '../services/githubService';\nimport './SushiRunner.css';\n\nconst SushiRunner = ({ repository, selectedBranch, profile, stagingFiles = [] }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [logs, setLogs] = useState([]);\n  const [logLevelToggles, setLogLevelToggles] = useState({\n    info: true,\n    success: true,\n    warning: true,\n    error: true\n  });\n  const [searchText, setSearchText] = useState('');\n  const [sushiConfig, setSushiConfig] = useState(null);\n  const [fshFiles, setFshFiles] = useState([]);\n  const [includeStagingFiles, setIncludeStagingFiles] = useState(false);\n  const [error, setError] = useState(null);\n\n  const owner = repository.owner?.login || repository.full_name.split('/')[0];\n  const repoName = repository.name;\n\n  const addLog = useCallback((message, type = 'info') => {\n    setLogs(prev => [...prev, {\n      id: Date.now() + Math.random(),\n      message,\n      type,\n      timestamp: new Date().toISOString()\n    }]);\n  }, []);\n\n  const fetchRepositoryFiles = async () => {\n    try {\n      addLog('🔍 Fetching sushi-config.yaml...', 'info');\n      \n      let config = null;\n      try {\n        const configContent = await githubService.getFileContent(\n          owner, \n          repoName, \n          'sushi-config.yaml', \n          selectedBranch\n        );\n        config = configContent;\n        setSushiConfig(config);\n        addLog('✅ Found sushi-config.yaml', 'success');\n      } catch (err) {\n        addLog('⚠️ sushi-config.yaml not found in repository', 'warning');\n      }\n\n      addLog('🔍 Scanning input/fsh directory recursively...', 'info');\n      \n      const fshFiles = [];\n      try {\n        // Recursively scan for FSH files\n        const scanDirectory = async (dirPath, depth = 0) => {\n          const maxDepth = 5; // Prevent infinite recursion\n          if (depth > maxDepth) {\n            addLog(`⚠️ Maximum directory depth reached for ${dirPath}`, 'warning');\n            return;\n          }\n\n          try {\n            const contents = await githubService.getDirectoryContents(\n              owner,\n              repoName,\n              dirPath,\n              selectedBranch\n            );\n            \n            for (const item of contents) {\n              if (item.type === 'file' && item.name.endsWith('.fsh')) {\n                try {\n                  const fileContent = await githubService.getFileContent(\n                    owner,\n                    repoName,\n                    item.path,\n                    selectedBranch\n                  );\n                  fshFiles.push({\n                    name: item.name,\n                    path: item.path,\n                    content: fileContent\n                  });\n                  addLog(`📄 Found ${item.path}`, 'success');\n                } catch (err) {\n                  addLog(`❌ Failed to fetch ${item.path}: ${err.message}`, 'error');\n                }\n              } else if (item.type === 'dir') {\n                // Recursively scan subdirectories\n                addLog(`📁 Scanning subdirectory: ${item.path}`, 'info');\n                await scanDirectory(item.path, depth + 1);\n              }\n            }\n          } catch (err) {\n            addLog(`⚠️ Could not scan directory ${dirPath}: ${err.message}`, 'warning');\n          }\n        };\n\n        await scanDirectory('input/fsh');\n      } catch (err) {\n        addLog('⚠️ input/fsh directory not found or empty', 'warning');\n      }\n\n      setFshFiles(fshFiles);\n      addLog(`📊 Found ${fshFiles.length} FSH files in repository`, 'info');\n      \n      return { config, fshFiles };\n    } catch (err) {\n      addLog(`❌ Error fetching repository files: ${err.message}`, 'error');\n      throw err;\n    }\n  };\n\n  const integrateStagingFiles = (repoFshFiles) => {\n    // Start with repository files\n    const integratedFiles = [...repoFshFiles];\n    \n    // Override/add staging files\n    stagingFiles.forEach(stagingFile => {\n      if (stagingFile.path && stagingFile.path.endsWith('.fsh')) {\n        const fileName = stagingFile.path.split('/').pop();\n        const existingIndex = integratedFiles.findIndex(f => f.name === fileName);\n        \n        if (existingIndex >= 0) {\n          // Override existing file\n          integratedFiles[existingIndex] = {\n            ...integratedFiles[existingIndex],\n            content: stagingFile.content,\n            isFromStaging: true\n          };\n          addLog(`🔄 Overriding ${fileName} with staging version`, 'info');\n        } else {\n          // Add new file from staging\n          integratedFiles.push({\n            name: fileName,\n            path: stagingFile.path,\n            content: stagingFile.content,\n            isFromStaging: true\n          });\n          addLog(`➕ Adding ${fileName} from staging`, 'info');\n        }\n      }\n    });\n\n    return integratedFiles;\n  };\n\n  const runSushiInBrowser = async (config, files) => {\n    try {\n      addLog('🚀 Initializing SUSHI in browser environment...', 'info');\n      \n      // This is where we would integrate the actual sushi library\n      // For now, we'll simulate the process with detailed logging\n      \n      addLog('📝 Creating virtual file system...', 'info');\n      const virtualFs = {\n        'sushi-config.yaml': config,\n        'input/fsh/': {}\n      };\n      \n      files.forEach(file => {\n        virtualFs['input/fsh/'][file.name] = file.content;\n        addLog(`📁 Added ${file.name} to virtual FS`, 'info');\n      });\n\n      addLog('⚙️ Parsing SUSHI configuration...', 'info');\n      // Simulate configuration parsing\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      if (config) {\n        try {\n          const configObj = typeof config === 'string' ? \n            await import('js-yaml').then(yaml => yaml.default.load(config)) : \n            config;\n          addLog(`📋 Package: ${configObj.name || 'Unknown'}`, 'success');\n          addLog(`📋 Version: ${configObj.version || 'Unknown'}`, 'success');\n          addLog(`📋 FHIR Version: ${configObj.fhirVersion || 'Unknown'}`, 'success');\n        } catch (err) {\n          addLog(`⚠️ Could not parse config: ${err.message}`, 'warning');\n        }\n      }\n\n      addLog('🔍 Analyzing FSH files...', 'info');\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Simulate FSH parsing and analysis\n      for (const file of files) {\n        addLog(`🔍 Parsing ${file.name}...`, 'info');\n        await new Promise(resolve => setTimeout(resolve, 200));\n        \n        // Simple FSH content analysis\n        const lines = file.content.split('\\n');\n        const profiles = lines.filter(line => line.trim().startsWith('Profile:')).length;\n        const instances = lines.filter(line => line.trim().startsWith('Instance:')).length;\n        const valueSets = lines.filter(line => line.trim().startsWith('ValueSet:')).length;\n        \n        if (profiles > 0) addLog(`  📊 Found ${profiles} Profile(s)`, 'success');\n        if (instances > 0) addLog(`  📊 Found ${instances} Instance(s)`, 'success');\n        if (valueSets > 0) addLog(`  📊 Found ${valueSets} ValueSet(s)`, 'success');\n        \n        if (file.isFromStaging) {\n          addLog(`  🏗️ File from staging ground`, 'info');\n        }\n      }\n\n      addLog('✨ SUSHI compilation completed successfully!', 'success');\n      addLog('📦 Generated FHIR resources (simulated)', 'success');\n      addLog('📝 Implementation Guide structure created', 'success');\n      \n      // Simulate some warnings or notes\n      if (files.length === 0) {\n        addLog('⚠️ No FSH files found to process', 'warning');\n      }\n      \n      if (!config) {\n        addLog('⚠️ No sushi-config.yaml found - using defaults', 'warning');\n      }\n\n      return {\n        success: true,\n        resourceCount: files.length * 2, // Simulate generated resources\n        warnings: [],\n        errors: []\n      };\n      \n    } catch (err) {\n      addLog(`❌ SUSHI compilation failed: ${err.message}`, 'error');\n      throw err;\n    }\n  };\n\n  const handleRunSushi = async (withStagingFiles = false) => {\n    setIsRunning(true);\n    setShowModal(true);\n    setLogs([]);\n    setError(null);\n    setIncludeStagingFiles(withStagingFiles);\n\n    try {\n      addLog('🏁 Starting SUSHI client-side execution...', 'info');\n      \n      if (withStagingFiles && stagingFiles.length > 0) {\n        addLog(`🗂️ Including ${stagingFiles.length} staging files`, 'info');\n      }\n\n      // Fetch repository files\n      const { config, fshFiles: repoFiles } = await fetchRepositoryFiles();\n      \n      // Integrate staging files if requested\n      const finalFiles = withStagingFiles ? \n        integrateStagingFiles(repoFiles) : \n        repoFiles;\n\n      if (withStagingFiles) {\n        addLog(`📊 Final file count: ${finalFiles.length} FSH files`, 'info');\n      }\n\n      // Run SUSHI\n      await runSushiInBrowser(config, finalFiles);\n      \n      addLog('🎉 SUSHI execution completed successfully!', 'success');\n      \n    } catch (err) {\n      setError(err.message);\n      addLog(`💥 Execution failed: ${err.message}`, 'error');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const toggleLogLevel = useCallback((level) => {\n    setLogLevelToggles(prev => ({\n      ...prev,\n      [level]: !prev[level]\n    }));\n  }, []);\n\n  const clearLogs = useCallback(() => {\n    setLogs([]);\n    setLogLevelToggles({\n      info: true,\n      success: true,\n      warning: true,\n      error: true\n    });\n    setSearchText('');\n  }, []);\n\n  const copyAllLogs = useCallback(async () => {\n    const logText = logs.map(log => \n      `[${new Date(log.timestamp).toLocaleTimeString()}] ${log.message}`\n    ).join('\\n');\n    \n    try {\n      await navigator.clipboard.writeText(logText);\n    } catch (err) {\n      console.error('Failed to copy logs:', err);\n    }\n  }, [logs]);\n\n  const copyLogMessage = useCallback(async (message) => {\n    try {\n      await navigator.clipboard.writeText(message);\n    } catch (err) {\n      console.error('Failed to copy log message:', err);\n    }\n  }, []);\n\n  // Function to detect and create links for files mentioned in log messages\n  const parseLogMessage = useCallback((message, logId) => {\n    // Regex to find file paths (ending with .fsh, .yaml, .yml, etc.)\n    const filePathRegex = /([a-zA-Z0-9_/-]+\\.(?:fsh|yaml|yml|json))/g;\n    const matches = message.match(filePathRegex);\n    \n    if (!matches) {\n      return <span>{message}</span>;\n    }\n    \n    let lastIndex = 0;\n    const elements = [];\n    \n    matches.forEach((filePath, index) => {\n      const matchIndex = message.indexOf(filePath, lastIndex);\n      \n      // Add text before the match\n      if (matchIndex > lastIndex) {\n        elements.push(\n          <span key={`${logId}-text-${index}`}>\n            {message.substring(lastIndex, matchIndex)}\n          </span>\n        );\n      }\n      \n      // Determine link type based on file location\n      const createFileLink = (path, text) => {\n        const isFromStaging = stagingFiles.some(f => f.path && f.path.includes(path));\n        \n        if (isFromStaging) {\n          // Link to staging ground\n          return (\n            <span key={`${logId}-link-${index}`} className=\"file-link staging-link\" title=\"Open in Staging Ground\">\n              📝 {text}\n            </span>\n          );\n        } else if (path.startsWith('input/fsh/')) {\n          // Determine DAK component based on directory structure\n          const getDakComponentLink = (fshPath) => {\n            const pathParts = fshPath.split('/');\n            if (pathParts.length > 2) {\n              const subDir = pathParts[2];\n              switch (subDir) {\n                case 'profiles':\n                  return { component: 'Profiles', icon: '👤' };\n                case 'examples':\n                  return { component: 'Examples', icon: '📋' };\n                case 'valuesets':\n                  return { component: 'ValueSets', icon: '📊' };\n                case 'codesystems':\n                  return { component: 'CodeSystems', icon: '🔢' };\n                case 'extensions':\n                  return { component: 'Extensions', icon: '🔧' };\n                default:\n                  return { component: 'FSH Files', icon: '📄' };\n              }\n            }\n            return { component: 'FSH Files', icon: '📄' };\n          };\n          \n          const dakInfo = getDakComponentLink(path);\n          return (\n            <span key={`${logId}-link-${index}`} className=\"file-link dak-link\" title={`View in DAK ${dakInfo.component}`}>\n              {dakInfo.icon} {text}\n            </span>\n          );\n        } else {\n          // Link to GitHub source\n          const githubUrl = `https://github.com/${owner}/${repoName}/blob/${selectedBranch}/${path}`;\n          return (\n            <a \n              key={`${logId}-link-${index}`}\n              href={githubUrl} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\" \n              className=\"file-link github-link\"\n              title=\"Open in GitHub\"\n            >\n              🔗 {text}\n            </a>\n          );\n        }\n      };\n      \n      elements.push(createFileLink(filePath, filePath));\n      lastIndex = matchIndex + filePath.length;\n    });\n    \n    // Add remaining text\n    if (lastIndex < message.length) {\n      elements.push(\n        <span key={`${logId}-text-end`}>\n          {message.substring(lastIndex)}\n        </span>\n      );\n    }\n    \n    return <span>{elements}</span>;\n  }, [owner, repoName, selectedBranch, stagingFiles]);\n\n  // Optimized filtered logs with useMemo to prevent unnecessary re-computations\n  const filteredLogs = useMemo(() => {\n    return logs.filter(log => {\n      // Filter by log level toggles\n      const isLevelEnabled = logLevelToggles[log.type];\n      \n      // Filter by search text\n      const matchesSearch = searchText === '' || \n        log.message.toLowerCase().includes(searchText.toLowerCase());\n      \n      return isLevelEnabled && matchesSearch;\n    });\n  }, [logs, logLevelToggles, searchText]);\n\n  // Separate component for log controls to prevent re-renders\n  const LogControls = React.memo(({ \n    logLevelToggles, \n    onToggleLogLevel, \n    searchText, \n    onSearchChange, \n    filteredCount, \n    totalCount \n  }) => {\n    const handleSearchChange = useCallback((e) => {\n      onSearchChange(e.target.value);\n    }, [onSearchChange]);\n\n    return (\n      <div className=\"log-controls\">\n        <div className=\"log-level-toggles\">\n          <label className=\"toggle-group-label\">Show levels:</label>\n          <div className=\"toggle-buttons\">\n            {[\n              { key: 'info', label: 'Info', icon: 'ℹ️' },\n              { key: 'success', label: 'Success', icon: '✅' },\n              { key: 'warning', label: 'Warning', icon: '⚠️' },\n              { key: 'error', label: 'Error', icon: '❌' }\n            ].map(({ key, label, icon }) => (\n              <button\n                key={key}\n                className={`log-toggle-btn ${logLevelToggles[key] ? 'active' : 'inactive'}`}\n                onClick={() => onToggleLogLevel(key)}\n                title={`Toggle ${label} messages`}\n              >\n                {icon} {label}\n              </button>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"log-search-group\">\n          <label htmlFor=\"log-search\">Search logs:</label>\n          <input\n            id=\"log-search\"\n            type=\"text\"\n            value={searchText}\n            onChange={handleSearchChange}\n            placeholder=\"Search log messages...\"\n            className=\"log-search-input\"\n          />\n        </div>\n        \n        <div className=\"log-stats\">\n          {searchText || Object.values(logLevelToggles).some(v => !v) ? (\n            <span>Showing {filteredCount} of {totalCount} logs</span>\n          ) : (\n            <span>{totalCount} logs</span>\n          )}\n        </div>\n      </div>\n    );\n  });\n\n  const handleSearchChange = useCallback((value) => {\n    setSearchText(value);\n  }, []);\n\n  const LogModal = () => (\n    <div className=\"sushi-modal-overlay\">\n      <div className=\"sushi-modal\">\n        <div className=\"sushi-modal-header\">\n          <h3>\n            🍣 SUSHI Client-Side Execution \n            {includeStagingFiles && <span className=\"staging-badge\">+ Staging</span>}\n          </h3>\n          <div className=\"modal-actions\">\n            <button \n              onClick={copyAllLogs}\n              className=\"copy-all-btn\"\n              disabled={logs.length === 0}\n              title=\"Copy all logs to clipboard\"\n            >\n              📋 Copy All\n            </button>\n            <button \n              onClick={clearLogs}\n              className=\"clear-logs-btn\"\n              disabled={isRunning}\n            >\n              🗑️ Clear\n            </button>\n            <button \n              onClick={() => setShowModal(false)}\n              className=\"close-modal-btn\"\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n        \n        <LogControls\n          logLevelToggles={logLevelToggles}\n          onToggleLogLevel={toggleLogLevel}\n          searchText={searchText}\n          onSearchChange={handleSearchChange}\n          filteredCount={filteredLogs.length}\n          totalCount={logs.length}\n        />\n        \n        <div className=\"sushi-modal-content\">\n          <div className=\"log-container\">\n            {filteredLogs.map(log => (\n              <div key={log.id} className={`log-entry log-${log.type}`}>\n                <span className=\"log-timestamp\">\n                  {new Date(log.timestamp).toLocaleTimeString()}\n                </span>\n                <span className=\"log-message\">\n                  {parseLogMessage(log.message, log.id)}\n                </span>\n                <button \n                  onClick={() => copyLogMessage(log.message)}\n                  className=\"copy-log-btn\"\n                  title=\"Copy this message to clipboard\"\n                >\n                  📋\n                </button>\n              </div>\n            ))}\n            \n            {isRunning && (\n              <div className=\"log-entry log-running\">\n                <span className=\"log-timestamp\">\n                  {new Date().toLocaleTimeString()}\n                </span>\n                <span className=\"log-message\">\n                  <span className=\"spinner\">⏳</span> Processing...\n                </span>\n                <div className=\"copy-log-btn-placeholder\"></div>\n              </div>\n            )}\n            \n            {filteredLogs.length === 0 && !isRunning && logs.length > 0 && (\n              <div className=\"log-placeholder\">\n                No logs match the current filter criteria...\n              </div>\n            )}\n            \n            {logs.length === 0 && !isRunning && (\n              <div className=\"log-placeholder\">\n                Logs will appear here during SUSHI execution...\n              </div>\n            )}\n          </div>\n          \n          {error && (\n            <div className=\"error-summary\">\n              <h4>❌ Execution Error</h4>\n              <p>{error}</p>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"sushi-modal-footer\">\n          <div className=\"execution-info\">\n            {isRunning ? (\n              <span className=\"status-running\">🔄 Running SUSHI...</span>\n            ) : logs.length > 0 ? (\n              <span className=\"status-complete\">✅ Execution complete</span>\n            ) : (\n              <span className=\"status-ready\">🍣 Ready to run SUSHI</span>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"sushi-runner-section\">\n      <div \n        className={`sushi-status-bar ${isExpanded ? 'expanded' : 'collapsed'}`}\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"status-bar-header\">\n          <span className=\"status-icon\">🍣</span>\n          <span className=\"status-title\">SUSHI (FHIR Shorthand)</span>\n          <span className=\"expand-icon\">{isExpanded ? '▼' : '▶'}</span>\n        </div>\n        \n        {!isExpanded && (\n          <div className=\"status-summary\">\n            Client-side FHIR Implementation Guide compilation\n          </div>\n        )}\n      </div>\n\n      {isExpanded && (\n        <div className=\"sushi-controls\">\n          <div className=\"sushi-description\">\n            <p>\n              Run SUSHI (FHIR Shorthand) compilation directly in your browser to generate \n              FHIR Implementation Guide resources from FSH files.\n            </p>\n          </div>\n\n          <div className=\"execution-options\">\n            <div className=\"option-group\">\n              <h4>📂 Repository Files Only</h4>\n              <p>\n                Compile using sushi-config.yaml and input/fsh files from the GitHub repository ({selectedBranch} branch).\n              </p>\n              <button\n                className=\"run-sushi-btn primary\"\n                onClick={() => handleRunSushi(false)}\n                disabled={isRunning}\n              >\n                {isRunning ? '⏳ Running...' : '🚀 Run SUSHI'}\n              </button>\n            </div>\n\n            {stagingFiles.length > 0 && (\n              <div className=\"option-group\">\n                <h4>🏗️ Repository + Staging Files</h4>\n                <p>\n                  Compile using repository files, with staging ground files ({stagingFiles.length} files) \n                  overriding any repository files with the same name.\n                </p>\n                <button\n                  className=\"run-sushi-btn secondary\"\n                  onClick={() => handleRunSushi(true)}\n                  disabled={isRunning}\n                >\n                  {isRunning ? '⏳ Running...' : '🚀 Run SUSHI + Staging'}\n                </button>\n              </div>\n            )}\n          </div>\n\n          <div className=\"sushi-status\">\n            <div className=\"status-item\">\n              <span className=\"label\">Config:</span>\n              <span className=\"value\">{sushiConfig ? '✅ Found' : '❓ Unknown'}</span>\n            </div>\n            <div className=\"status-item\">\n              <span className=\"label\">FSH Files:</span>\n              <span className=\"value\">{fshFiles.length} in repository</span>\n            </div>\n            {stagingFiles.length > 0 && (\n              <div className=\"status-item\">\n                <span className=\"label\">Staging:</span>\n                <span className=\"value\">{stagingFiles.filter(f => f.path && f.path.endsWith('.fsh')).length} FSH files</span>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {showModal && <LogModal />}\n    </div>\n  );\n};\n\nexport default SushiRunner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}