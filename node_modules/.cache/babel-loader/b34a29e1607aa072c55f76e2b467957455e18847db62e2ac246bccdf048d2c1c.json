{"ast":null,"code":"import { clear as svgClear, create as svgCreate } from 'tiny-svg';\nimport { getVisual } from '../../util/GraphicsUtil';\nimport { isConnection } from '../../util/ModelUtil';\nimport { translate } from '../../util/SvgTransformUtil';\n\n/**\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('../../model/Types').Shape} Shape\n * @typedef {import('../../util/Types').Point} Point\n * @typedef {import('../../util/Types').Rect} Rect\n *\n * @typedef { { element: Element, delta: Point } } MovedOption\n * @typedef { { shape: Shape, bounds: Rect } } ResizedOption\n *\n * @typedef { {\n *   created?: Element[],\n *   removed?: Element[],\n *   moved?: MovedOption[],\n *   resized?: ResizedOption[]\n * } } CreateOptions\n */\n\nconst LAYER_NAME = 'complex-preview';\n\n/**\n * Complex preview for shapes and connections.\n */\nexport default class ComplexPreview {\n  constructor(canvas, graphicsFactory, previewSupport) {\n    this._canvas = canvas;\n    this._graphicsFactory = graphicsFactory;\n    this._previewSupport = previewSupport;\n    this._markers = [];\n  }\n\n  /**\n   * Create complex preview.\n   *\n   * @param {CreateOptions} options\n   */\n  create(options) {\n    // there can only be one complex preview at a time\n    this.cleanUp();\n    const {\n      created = [],\n      moved = [],\n      removed = [],\n      resized = []\n    } = options;\n    const layer = this._canvas.getLayer(LAYER_NAME);\n\n    // shapes and connections to be created\n    created.filter(element => !isHidden(element)).forEach(element => {\n      let gfx;\n      if (isConnection(element)) {\n        gfx = this._graphicsFactory._createContainer('connection', svgCreate('g'));\n        this._graphicsFactory.drawConnection(getVisual(gfx), element);\n      } else {\n        gfx = this._graphicsFactory._createContainer('shape', svgCreate('g'));\n        this._graphicsFactory.drawShape(getVisual(gfx), element);\n        translate(gfx, element.x, element.y);\n      }\n      this._previewSupport.addDragger(element, layer, gfx);\n    });\n\n    // elements to be moved\n    moved.forEach(_ref => {\n      let {\n        element,\n        delta\n      } = _ref;\n      this._previewSupport.addDragger(element, layer, undefined, 'djs-dragging');\n      this._canvas.addMarker(element, 'djs-element-hidden');\n      this._markers.push([element, 'djs-element-hidden']);\n      const dragger = this._previewSupport.addDragger(element, layer);\n      if (isConnection(element)) {\n        translate(dragger, delta.x, delta.y);\n      } else {\n        translate(dragger, element.x + delta.x, element.y + delta.y);\n      }\n    });\n\n    // elements to be removed\n    removed.forEach(element => {\n      this._previewSupport.addDragger(element, layer, undefined, 'djs-dragging');\n      this._canvas.addMarker(element, 'djs-element-hidden');\n      this._markers.push([element, 'djs-element-hidden']);\n    });\n\n    // elements to be resized\n    resized.forEach(_ref2 => {\n      let {\n        shape,\n        bounds\n      } = _ref2;\n      this._canvas.addMarker(shape, 'djs-hidden');\n      this._markers.push([shape, 'djs-hidden']);\n      this._previewSupport.addDragger(shape, layer, undefined, 'djs-dragging');\n      const gfx = this._graphicsFactory._createContainer('shape', svgCreate('g'));\n      this._graphicsFactory.drawShape(getVisual(gfx), shape, {\n        width: bounds.width,\n        height: bounds.height\n      });\n      translate(gfx, bounds.x, bounds.y);\n      this._previewSupport.addDragger(shape, layer, gfx);\n    });\n  }\n  cleanUp() {\n    svgClear(this._canvas.getLayer(LAYER_NAME));\n    this._markers.forEach(_ref3 => {\n      let [element, marker] = _ref3;\n      return this._canvas.removeMarker(element, marker);\n    });\n    this._markers = [];\n  }\n  show() {\n    this._canvas.showLayer(LAYER_NAME);\n  }\n  hide() {\n    this._canvas.hideLayer(LAYER_NAME);\n  }\n}\nComplexPreview.$inject = ['canvas', 'graphicsFactory', 'previewSupport'];\nfunction isHidden(element) {\n  return element.hidden;\n}","map":{"version":3,"names":["clear","svgClear","create","svgCreate","getVisual","isConnection","translate","LAYER_NAME","ComplexPreview","constructor","canvas","graphicsFactory","previewSupport","_canvas","_graphicsFactory","_previewSupport","_markers","options","cleanUp","created","moved","removed","resized","layer","getLayer","filter","element","isHidden","forEach","gfx","_createContainer","drawConnection","drawShape","x","y","addDragger","_ref","delta","undefined","addMarker","push","dragger","_ref2","shape","bounds","width","height","_ref3","marker","removeMarker","show","showLayer","hide","hideLayer","$inject","hidden"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/complex-preview/ComplexPreview.js"],"sourcesContent":["import {\n  clear as svgClear,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport { getVisual } from '../../util/GraphicsUtil';\n\nimport { isConnection } from '../../util/ModelUtil';\n\nimport { translate } from '../../util/SvgTransformUtil';\n\n/**\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('../../model/Types').Shape} Shape\n * @typedef {import('../../util/Types').Point} Point\n * @typedef {import('../../util/Types').Rect} Rect\n *\n * @typedef { { element: Element, delta: Point } } MovedOption\n * @typedef { { shape: Shape, bounds: Rect } } ResizedOption\n *\n * @typedef { {\n *   created?: Element[],\n *   removed?: Element[],\n *   moved?: MovedOption[],\n *   resized?: ResizedOption[]\n * } } CreateOptions\n */\n\nconst LAYER_NAME = 'complex-preview';\n\n/**\n * Complex preview for shapes and connections.\n */\nexport default class ComplexPreview {\n  constructor(canvas, graphicsFactory, previewSupport) {\n    this._canvas = canvas;\n    this._graphicsFactory = graphicsFactory;\n    this._previewSupport = previewSupport;\n\n    this._markers = [];\n  }\n\n  /**\n   * Create complex preview.\n   *\n   * @param {CreateOptions} options\n   */\n  create(options) {\n\n    // there can only be one complex preview at a time\n    this.cleanUp();\n\n    const {\n      created = [],\n      moved = [],\n      removed = [],\n      resized = []\n    } = options;\n\n    const layer = this._canvas.getLayer(LAYER_NAME);\n\n    // shapes and connections to be created\n    created.filter(element => !isHidden(element)).forEach(element => {\n      let gfx;\n\n      if (isConnection(element)) {\n        gfx = this._graphicsFactory._createContainer('connection', svgCreate('g'));\n\n        this._graphicsFactory.drawConnection(getVisual(gfx), element);\n      } else {\n        gfx = this._graphicsFactory._createContainer('shape', svgCreate('g'));\n\n        this._graphicsFactory.drawShape(getVisual(gfx), element);\n\n        translate(gfx, element.x, element.y);\n      }\n\n      this._previewSupport.addDragger(element, layer, gfx);\n    });\n\n    // elements to be moved\n    moved.forEach(({ element, delta }) => {\n      this._previewSupport.addDragger(element, layer, undefined, 'djs-dragging');\n\n      this._canvas.addMarker(element, 'djs-element-hidden');\n\n      this._markers.push([ element, 'djs-element-hidden' ]);\n\n      const dragger = this._previewSupport.addDragger(element, layer);\n\n      if (isConnection(element)) {\n        translate(dragger, delta.x, delta.y);\n      } else {\n        translate(dragger, element.x + delta.x, element.y + delta.y);\n      }\n    });\n\n    // elements to be removed\n    removed.forEach(element => {\n      this._previewSupport.addDragger(element, layer, undefined, 'djs-dragging');\n\n      this._canvas.addMarker(element, 'djs-element-hidden');\n\n      this._markers.push([ element, 'djs-element-hidden' ]);\n    });\n\n    // elements to be resized\n    resized.forEach(({ shape, bounds }) => {\n      this._canvas.addMarker(shape, 'djs-hidden');\n\n      this._markers.push([ shape, 'djs-hidden' ]);\n\n      this._previewSupport.addDragger(shape, layer, undefined, 'djs-dragging');\n\n      const gfx = this._graphicsFactory._createContainer('shape', svgCreate('g'));\n\n      this._graphicsFactory.drawShape(getVisual(gfx), shape, {\n        width: bounds.width,\n        height: bounds.height\n      });\n\n      translate(gfx, bounds.x, bounds.y);\n\n      this._previewSupport.addDragger(shape, layer, gfx);\n    });\n  }\n\n  cleanUp() {\n    svgClear(this._canvas.getLayer(LAYER_NAME));\n\n    this._markers.forEach(([ element, marker ]) => this._canvas.removeMarker(element, marker));\n\n    this._markers = [];\n  }\n\n  show() {\n    this._canvas.showLayer(LAYER_NAME);\n  }\n\n  hide() {\n    this._canvas.hideLayer(LAYER_NAME);\n  }\n}\n\nComplexPreview.$inject = [\n  'canvas',\n  'graphicsFactory',\n  'previewSupport'\n];\n\nfunction isHidden(element) {\n  return element.hidden;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}