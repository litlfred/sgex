{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import githubService from'../services/githubService';import'./PreviewBadge.css';/**\n * PreviewBadge component that displays when the app is deployed from a non-main branch\n * Shows branch name and links to the associated PR\n * Can expand to show detailed PR information, comments, and add new comments\n */import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const PreviewBadge=()=>{const[branchInfo,setBranchInfo]=useState(null);const[prInfo,setPrInfo]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[isExpanded,setIsExpanded]=useState(false);const[isSticky,setIsSticky]=useState(false);const[comments,setComments]=useState([]);const[loadingComments,setLoadingComments]=useState(false);const[newComment,setNewComment]=useState('');const[submittingComment,setSubmittingComment]=useState(false);const[canComment,setCanComment]=useState(false);const[expandedComments,setExpandedComments]=useState(new Set());const expandedRef=useRef(null);useEffect(()=>{const detectBranchAndPR=async()=>{try{setLoading(true);setError(null);// Detect current branch from environment or URL\nconst currentBranch=getCurrentBranch();if(!currentBranch||currentBranch==='main'){// Not a preview branch, don't show badge\nsetLoading(false);return;}setBranchInfo({name:currentBranch,safeName:currentBranch.replace(/\\//g,'-')});// Try to fetch PR information for this branch\ntry{const prData=await fetchPRForBranch(currentBranch);if(prData){setPrInfo(prData);// Check if user can comment (they need to be authenticated)\nsetCanComment(githubService.isAuth());}}catch(prError){console.debug('Could not fetch PR info:',prError);// Continue without PR info - still show branch badge\n}setLoading(false);}catch(err){console.error('Error detecting branch:',err);setError(err.message);setLoading(false);}};detectBranchAndPR();},[]);// Handle clicks outside the expanded panel to close it (only if not sticky)\nuseEffect(()=>{const handleClickOutside=event=>{if(expandedRef.current&&!expandedRef.current.contains(event.target)){if(isSticky){setIsSticky(false);}setIsExpanded(false);}};if(isExpanded){// Listen for both mouse and touch events to support mobile devices\ndocument.addEventListener('mousedown',handleClickOutside);document.addEventListener('touchstart',handleClickOutside);return()=>{document.removeEventListener('mousedown',handleClickOutside);document.removeEventListener('touchstart',handleClickOutside);};}},[isExpanded,isSticky]);const getCurrentBranch=()=>{// First try environment variable (set during build)\nif(process.env.REACT_APP_GITHUB_REF_NAME){return process.env.REACT_APP_GITHUB_REF_NAME;}// Fallback: detect from URL path\nconst path=window.location.pathname;// Match pattern: /sgex/{branch-name}/\nconst match=path.match(/^\\/sgex\\/([^/]+)\\//);if(match&&match[1]!=='main'){const safeBranchName=match[1];// Convert safe branch name back to original branch name\n// This handles the common case where slashes are converted to dashes\n// Note: This is a heuristic and may not be perfect for all edge cases\nlet branchName=safeBranchName;// Common patterns: feature-name -> feature/name, fix-123 -> fix/123\nif(safeBranchName.includes('-')&&!safeBranchName.startsWith('v')&&!safeBranchName.match(/^\\d/)){// Try to detect if this looks like a feature branch\nif(safeBranchName.match(/^(feature|fix|hotfix|bugfix|chore|docs|style|refactor|test)-/)){branchName=safeBranchName.replace(/^([^-]+)-/,'$1/');}}return branchName;}return null;};const fetchPRForBranch=async branchName=>{try{// Get current repository context if available\n// For now, we'll use the main repository\nconst owner='litlfred';const repo='sgex';// Try multiple branch name variations to find the PR\nconst branchVariations=[branchName,// Original detected name\nbranchName.replace(/-/g,'/'),// Convert all dashes to slashes\nbranchName.replace(/^([^-]+)-/,'$1/')// Convert first dash to slash (common pattern)\n];// Remove duplicates\nconst uniqueBranches=[...new Set(branchVariations)];console.debug('Trying to find PR for branch variations:',uniqueBranches);// Try each variation until we find a PR\nfor(const variation of uniqueBranches){try{const pr=await githubService.getPullRequestForBranch(owner,repo,variation);if(pr){console.debug('Found PR for branch:',variation,pr);return pr;}}catch(error){console.debug(`No PR found for branch variation \"${variation}\":`,error.message);}}console.debug('No PR found for any branch variation');return null;}catch(error){console.debug('Failed to fetch PR info:',error);return null;}};const fetchComments=async()=>{if(!prInfo)return;setLoadingComments(true);try{// Fetch both review comments and issue comments\nconst[reviewComments,issueComments]=await Promise.all([githubService.getPullRequestComments('litlfred','sgex',prInfo.number).catch(()=>[]),githubService.getPullRequestIssueComments('litlfred','sgex',prInfo.number).catch(()=>[])]);// Combine and sort comments by creation date\nconst allComments=[...reviewComments.map(c=>({...c,type:'review'})),...issueComments.map(c=>({...c,type:'issue'}))].sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));setComments(allComments);}catch(error){console.error('Failed to fetch comments:',error);}finally{setLoadingComments(false);}};const handleMouseEnter=()=>{if(!isSticky){setIsExpanded(true);if(prInfo&&comments.length===0){fetchComments();}}};const handleMouseLeave=()=>{if(!isSticky){setIsExpanded(false);}};const handleBadgeClick=event=>{// Prevent event from bubbling up\nevent.stopPropagation();event.preventDefault();if(isSticky){// If already sticky, collapse and remove sticky state\nsetIsSticky(false);setIsExpanded(false);}else{// Make it sticky and ensure it's expanded\nsetIsSticky(true);setIsExpanded(true);if(prInfo&&comments.length===0){fetchComments();}}};const handleSubmitComment=async event=>{event.preventDefault();if(!newComment.trim()||!prInfo||!canComment)return;setSubmittingComment(true);try{const comment=await githubService.createPullRequestComment('litlfred','sgex',prInfo.number,newComment.trim());// Add the new comment to the list\nsetComments(prev=>[...prev,{...comment,type:'issue'}]);setNewComment('');}catch(error){console.error('Failed to submit comment:',error);alert('Failed to submit comment. Please try again.');}finally{setSubmittingComment(false);}};const toggleCommentExpansion=commentId=>{setExpandedComments(prev=>{const newSet=new Set(prev);if(newSet.has(commentId)){newSet.delete(commentId);}else{newSet.add(commentId);}return newSet;});};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('en-US',{month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'});};const truncateText=function(text){let maxLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:30;if(text.length<=maxLength)return text;return text.substring(0,maxLength)+'...';};const truncateTitle=function(title){let maxLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:30;if(title.length<=maxLength)return title;return title.substring(0,maxLength)+'...';};// Don't render anything if loading, error, or not a preview branch\nif(loading||error||!branchInfo){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-badge-container\",ref:expandedRef,children:[/*#__PURE__*/_jsx(\"div\",{className:`preview-badge clickable ${isExpanded?'expanded':''} ${isSticky?'sticky':''}`,onClick:handleBadgeClick,onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave,title:isSticky?\"Click to collapse\":isExpanded?\"Click to keep expanded\":prInfo?`Hover to preview, click to pin: ${prInfo.title}`:`Hover to preview, click to pin: ${branchInfo.name}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"badge-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"badge-label\",children:\"Preview:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"badge-branch\",children:branchInfo.name}),prInfo&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"badge-separator\",children:\"|\"}),/*#__PURE__*/_jsx(\"span\",{className:\"badge-pr-title\",children:truncateTitle(prInfo.title)})]}),/*#__PURE__*/_jsx(\"span\",{className:\"badge-expand-icon\",children:isExpanded?'▼':'▶'})]})}),isExpanded&&/*#__PURE__*/_jsxs(\"div\",{className:\"preview-badge-expanded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expanded-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pr-info\",children:prInfo?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsxs(\"a\",{href:prInfo.html_url,target:\"_blank\",rel:\"noopener noreferrer\",children:[\"#\",prInfo.number,\": \",prInfo.title]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-meta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"pr-state\",\"data-state\":prInfo.state,children:prInfo.state}),/*#__PURE__*/_jsxs(\"span\",{className:\"pr-author\",children:[\"by \",prInfo.user.login]}),/*#__PURE__*/_jsx(\"span\",{className:\"pr-date\",children:formatDate(prInfo.created_at)})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Preview Branch: \",branchInfo.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-meta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"pr-state\",\"data-state\":\"unknown\",children:\"No PR found\"}),/*#__PURE__*/_jsx(\"span\",{className:\"pr-author\",children:\"Branch preview\"})]})]})}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:e=>{e.stopPropagation();setIsExpanded(false);setIsSticky(false);},title:\"Close expanded view\",children:\"\\xD7\"})]}),prInfo&&prInfo.body&&/*#__PURE__*/_jsxs(\"div\",{className:\"pr-description\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"div\",{className:\"pr-body\",children:prInfo.body})]}),!prInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"pr-description\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Branch Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-body\",children:[\"This is a preview deployment from the \",/*#__PURE__*/_jsx(\"code\",{children:branchInfo.name}),\" branch.\",!githubService.isAuth()&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'0.5rem',fontStyle:'italic',color:'#666'},children:\"Sign in to GitHub to view pull request details and comments.\"})]})]}),prInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"comments-section\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Comments (\",comments.length,\")\"]}),loadingComments?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading comments...\"}):comments.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"comments-list\",children:comments.map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:\"comment\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:comment.user.avatar_url,alt:comment.user.login,className:\"comment-avatar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-author\",children:comment.user.login}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-date\",children:formatDate(comment.created_at)}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-type\",children:comment.type})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-body\",children:expandedComments.has(comment.id)?/*#__PURE__*/_jsxs(\"div\",{className:\"comment-full\",children:[comment.body,/*#__PURE__*/_jsx(\"button\",{className:\"comment-toggle\",onClick:()=>toggleCommentExpansion(comment.id),children:\"Show less\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"comment-preview\",children:[truncateText(comment.body),comment.body.length>30&&/*#__PURE__*/_jsx(\"button\",{className:\"comment-toggle\",onClick:()=>toggleCommentExpansion(comment.id),children:\"Show more\"})]})})]},comment.id))}):/*#__PURE__*/_jsx(\"div\",{className:\"no-comments\",children:\"No comments yet\"}),canComment&&/*#__PURE__*/_jsxs(\"form\",{className:\"comment-form\",onSubmit:handleSubmitComment,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Add Comment\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newComment,onChange:e=>setNewComment(e.target.value),placeholder:\"Write a comment...\",rows:3,disabled:submittingComment}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!newComment.trim()||submittingComment,className:\"submit-comment\",children:submittingComment?'Submitting...':'Comment'})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"expanded-footer\",children:prInfo?/*#__PURE__*/_jsx(\"a\",{href:prInfo.html_url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"github-link\",children:\"View on GitHub \\u2192\"}):/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/litlfred/sgex/tree/${branchInfo.name}`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"github-link\",children:\"View Branch on GitHub \\u2192\"})})]})]});};export default PreviewBadge;","map":{"version":3,"names":["React","useState","useEffect","useRef","githubService","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PreviewBadge","branchInfo","setBranchInfo","prInfo","setPrInfo","loading","setLoading","error","setError","isExpanded","setIsExpanded","isSticky","setIsSticky","comments","setComments","loadingComments","setLoadingComments","newComment","setNewComment","submittingComment","setSubmittingComment","canComment","setCanComment","expandedComments","setExpandedComments","Set","expandedRef","detectBranchAndPR","currentBranch","getCurrentBranch","name","safeName","replace","prData","fetchPRForBranch","isAuth","prError","console","debug","err","message","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","process","env","REACT_APP_GITHUB_REF_NAME","path","window","location","pathname","match","safeBranchName","branchName","includes","startsWith","owner","repo","branchVariations","uniqueBranches","variation","pr","getPullRequestForBranch","fetchComments","reviewComments","issueComments","Promise","all","getPullRequestComments","number","catch","getPullRequestIssueComments","allComments","map","c","type","sort","a","b","Date","created_at","handleMouseEnter","length","handleMouseLeave","handleBadgeClick","stopPropagation","preventDefault","handleSubmitComment","trim","comment","createPullRequestComment","prev","alert","toggleCommentExpansion","commentId","newSet","has","delete","add","formatDate","dateString","toLocaleDateString","month","day","hour","minute","truncateText","text","maxLength","arguments","undefined","substring","truncateTitle","title","className","ref","children","onClick","onMouseEnter","onMouseLeave","href","html_url","rel","state","user","login","e","body","style","marginTop","fontStyle","color","src","avatar_url","alt","id","onSubmit","value","onChange","placeholder","rows","disabled"],"sources":["/home/runner/work/sgex/sgex/src/components/PreviewBadge.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport githubService from '../services/githubService';\nimport './PreviewBadge.css';\n\n/**\n * PreviewBadge component that displays when the app is deployed from a non-main branch\n * Shows branch name and links to the associated PR\n * Can expand to show detailed PR information, comments, and add new comments\n */\nconst PreviewBadge = () => {\n  const [branchInfo, setBranchInfo] = useState(null);\n  const [prInfo, setPrInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isSticky, setIsSticky] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [loadingComments, setLoadingComments] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [submittingComment, setSubmittingComment] = useState(false);\n  const [canComment, setCanComment] = useState(false);\n  const [expandedComments, setExpandedComments] = useState(new Set());\n  const expandedRef = useRef(null);\n\n  useEffect(() => {\n    const detectBranchAndPR = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Detect current branch from environment or URL\n        const currentBranch = getCurrentBranch();\n        \n        if (!currentBranch || currentBranch === 'main') {\n          // Not a preview branch, don't show badge\n          setLoading(false);\n          return;\n        }\n\n        setBranchInfo({\n          name: currentBranch,\n          safeName: currentBranch.replace(/\\//g, '-')\n        });\n\n        // Try to fetch PR information for this branch\n        try {\n          const prData = await fetchPRForBranch(currentBranch);\n          if (prData) {\n            setPrInfo(prData);\n            // Check if user can comment (they need to be authenticated)\n            setCanComment(githubService.isAuth());\n          }\n        } catch (prError) {\n          console.debug('Could not fetch PR info:', prError);\n          // Continue without PR info - still show branch badge\n        }\n\n        setLoading(false);\n      } catch (err) {\n        console.error('Error detecting branch:', err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    detectBranchAndPR();\n  }, []);\n\n  // Handle clicks outside the expanded panel to close it (only if not sticky)\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (expandedRef.current && !expandedRef.current.contains(event.target)) {\n        if (isSticky) {\n          setIsSticky(false);\n        }\n        setIsExpanded(false);\n      }\n    };\n\n    if (isExpanded) {\n      // Listen for both mouse and touch events to support mobile devices\n      document.addEventListener('mousedown', handleClickOutside);\n      document.addEventListener('touchstart', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n        document.removeEventListener('touchstart', handleClickOutside);\n      };\n    }\n  }, [isExpanded, isSticky]);\n\n  const getCurrentBranch = () => {\n    // First try environment variable (set during build)\n    if (process.env.REACT_APP_GITHUB_REF_NAME) {\n      return process.env.REACT_APP_GITHUB_REF_NAME;\n    }\n    \n    // Fallback: detect from URL path\n    const path = window.location.pathname;\n    \n    // Match pattern: /sgex/{branch-name}/\n    const match = path.match(/^\\/sgex\\/([^/]+)\\//);\n    if (match && match[1] !== 'main') {\n      const safeBranchName = match[1];\n      \n      // Convert safe branch name back to original branch name\n      // This handles the common case where slashes are converted to dashes\n      // Note: This is a heuristic and may not be perfect for all edge cases\n      let branchName = safeBranchName;\n      \n      // Common patterns: feature-name -> feature/name, fix-123 -> fix/123\n      if (safeBranchName.includes('-') && !safeBranchName.startsWith('v') && !safeBranchName.match(/^\\d/)) {\n        // Try to detect if this looks like a feature branch\n        if (safeBranchName.match(/^(feature|fix|hotfix|bugfix|chore|docs|style|refactor|test)-/)) {\n          branchName = safeBranchName.replace(/^([^-]+)-/, '$1/');\n        }\n      }\n      \n      return branchName;\n    }\n\n    return null;\n  };\n\n  const fetchPRForBranch = async (branchName) => {\n    try {\n      // Get current repository context if available\n      // For now, we'll use the main repository\n      const owner = 'litlfred';\n      const repo = 'sgex';\n\n      // Try multiple branch name variations to find the PR\n      const branchVariations = [\n        branchName, // Original detected name\n        branchName.replace(/-/g, '/'), // Convert all dashes to slashes\n        branchName.replace(/^([^-]+)-/, '$1/'), // Convert first dash to slash (common pattern)\n      ];\n\n      // Remove duplicates\n      const uniqueBranches = [...new Set(branchVariations)];\n      \n      console.debug('Trying to find PR for branch variations:', uniqueBranches);\n\n      // Try each variation until we find a PR\n      for (const variation of uniqueBranches) {\n        try {\n          const pr = await githubService.getPullRequestForBranch(owner, repo, variation);\n          if (pr) {\n            console.debug('Found PR for branch:', variation, pr);\n            return pr;\n          }\n        } catch (error) {\n          console.debug(`No PR found for branch variation \"${variation}\":`, error.message);\n        }\n      }\n      \n      console.debug('No PR found for any branch variation');\n      return null;\n    } catch (error) {\n      console.debug('Failed to fetch PR info:', error);\n      return null;\n    }\n  };\n\n  const fetchComments = async () => {\n    if (!prInfo) return;\n    \n    setLoadingComments(true);\n    try {\n      // Fetch both review comments and issue comments\n      const [reviewComments, issueComments] = await Promise.all([\n        githubService.getPullRequestComments('litlfred', 'sgex', prInfo.number).catch(() => []),\n        githubService.getPullRequestIssueComments('litlfred', 'sgex', prInfo.number).catch(() => [])\n      ]);\n\n      // Combine and sort comments by creation date\n      const allComments = [\n        ...reviewComments.map(c => ({ ...c, type: 'review' })),\n        ...issueComments.map(c => ({ ...c, type: 'issue' }))\n      ].sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n\n      setComments(allComments);\n    } catch (error) {\n      console.error('Failed to fetch comments:', error);\n    } finally {\n      setLoadingComments(false);\n    }\n  };\n\n  const handleMouseEnter = () => {\n    if (!isSticky) {\n      setIsExpanded(true);\n      if (prInfo && comments.length === 0) {\n        fetchComments();\n      }\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!isSticky) {\n      setIsExpanded(false);\n    }\n  };\n\n  const handleBadgeClick = (event) => {\n    // Prevent event from bubbling up\n    event.stopPropagation();\n    event.preventDefault();\n    \n    if (isSticky) {\n      // If already sticky, collapse and remove sticky state\n      setIsSticky(false);\n      setIsExpanded(false);\n    } else {\n      // Make it sticky and ensure it's expanded\n      setIsSticky(true);\n      setIsExpanded(true);\n      if (prInfo && comments.length === 0) {\n        fetchComments();\n      }\n    }\n  };\n\n  const handleSubmitComment = async (event) => {\n    event.preventDefault();\n    if (!newComment.trim() || !prInfo || !canComment) return;\n\n    setSubmittingComment(true);\n    try {\n      const comment = await githubService.createPullRequestComment(\n        'litlfred', \n        'sgex', \n        prInfo.number, \n        newComment.trim()\n      );\n      \n      // Add the new comment to the list\n      setComments(prev => [...prev, { ...comment, type: 'issue' }]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Failed to submit comment:', error);\n      alert('Failed to submit comment. Please try again.');\n    } finally {\n      setSubmittingComment(false);\n    }\n  };\n\n  const toggleCommentExpansion = (commentId) => {\n    setExpandedComments(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(commentId)) {\n        newSet.delete(commentId);\n      } else {\n        newSet.add(commentId);\n      }\n      return newSet;\n    });\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const truncateText = (text, maxLength = 30) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  const truncateTitle = (title, maxLength = 30) => {\n    if (title.length <= maxLength) return title;\n    return title.substring(0, maxLength) + '...';\n  };\n\n  // Don't render anything if loading, error, or not a preview branch\n  if (loading || error || !branchInfo) {\n    return null;\n  }\n\n  return (\n    <div className=\"preview-badge-container\" ref={expandedRef}>\n      <div \n        className={`preview-badge clickable ${isExpanded ? 'expanded' : ''} ${isSticky ? 'sticky' : ''}`}\n        onClick={handleBadgeClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        title={isSticky ? \"Click to collapse\" : isExpanded ? \"Click to keep expanded\" : prInfo ? `Hover to preview, click to pin: ${prInfo.title}` : `Hover to preview, click to pin: ${branchInfo.name}`}\n      >\n        <div className=\"badge-content\">\n          <span className=\"badge-label\">Preview:</span>\n          <span className=\"badge-branch\">{branchInfo.name}</span>\n          {prInfo && (\n            <>\n              <span className=\"badge-separator\">|</span>\n              <span className=\"badge-pr-title\">{truncateTitle(prInfo.title)}</span>\n            </>\n          )}\n          <span className=\"badge-expand-icon\">{isExpanded ? '▼' : '▶'}</span>\n        </div>\n      </div>\n\n      {isExpanded && (\n        <div className=\"preview-badge-expanded\">\n          <div className=\"expanded-header\">\n            <div className=\"pr-info\">\n              {prInfo ? (\n                <>\n                  <h3>\n                    <a href={prInfo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      #{prInfo.number}: {prInfo.title}\n                    </a>\n                  </h3>\n                  <div className=\"pr-meta\">\n                    <span className=\"pr-state\" data-state={prInfo.state}>{prInfo.state}</span>\n                    <span className=\"pr-author\">by {prInfo.user.login}</span>\n                    <span className=\"pr-date\">{formatDate(prInfo.created_at)}</span>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <h3>Preview Branch: {branchInfo.name}</h3>\n                  <div className=\"pr-meta\">\n                    <span className=\"pr-state\" data-state=\"unknown\">No PR found</span>\n                    <span className=\"pr-author\">Branch preview</span>\n                  </div>\n                </>\n              )}\n            </div>\n            <button \n              className=\"close-button\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setIsExpanded(false);\n                setIsSticky(false);\n              }}\n              title=\"Close expanded view\"\n            >\n              ×\n            </button>\n          </div>\n\n          {prInfo && prInfo.body && (\n            <div className=\"pr-description\">\n              <h4>Description</h4>\n              <div className=\"pr-body\">{prInfo.body}</div>\n            </div>\n          )}\n\n          {!prInfo && (\n            <div className=\"pr-description\">\n              <h4>Branch Information</h4>\n              <div className=\"pr-body\">\n                This is a preview deployment from the <code>{branchInfo.name}</code> branch.\n                {!githubService.isAuth() && (\n                  <div style={{marginTop: '0.5rem', fontStyle: 'italic', color: '#666'}}>\n                    Sign in to GitHub to view pull request details and comments.\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {prInfo && (\n            <div className=\"comments-section\">\n              <h4>Comments ({comments.length})</h4>\n              \n              {loadingComments ? (\n                <div className=\"loading\">Loading comments...</div>\n              ) : comments.length > 0 ? (\n                <div className=\"comments-list\">\n                  {comments.map((comment) => (\n                    <div key={comment.id} className=\"comment\">\n                      <div className=\"comment-header\">\n                      <img \n                        src={comment.user.avatar_url} \n                        alt={comment.user.login}\n                        className=\"comment-avatar\"\n                      />\n                      <span className=\"comment-author\">{comment.user.login}</span>\n                      <span className=\"comment-date\">{formatDate(comment.created_at)}</span>\n                      <span className=\"comment-type\">{comment.type}</span>\n                    </div>\n                    <div className=\"comment-body\">\n                      {expandedComments.has(comment.id) ? (\n                        <div className=\"comment-full\">\n                          {comment.body}\n                          <button \n                            className=\"comment-toggle\"\n                            onClick={() => toggleCommentExpansion(comment.id)}\n                          >\n                            Show less\n                          </button>\n                        </div>\n                      ) : (\n                        <div className=\"comment-preview\">\n                          {truncateText(comment.body)}\n                          {comment.body.length > 30 && (\n                            <button \n                              className=\"comment-toggle\"\n                              onClick={() => toggleCommentExpansion(comment.id)}\n                            >\n                              Show more\n                            </button>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"no-comments\">No comments yet</div>\n            )}\n\n            {canComment && (\n              <form className=\"comment-form\" onSubmit={handleSubmitComment}>\n                <h4>Add Comment</h4>\n                <textarea\n                  value={newComment}\n                  onChange={(e) => setNewComment(e.target.value)}\n                  placeholder=\"Write a comment...\"\n                  rows={3}\n                  disabled={submittingComment}\n                />\n                <div className=\"comment-form-actions\">\n                  <button \n                    type=\"submit\" \n                    disabled={!newComment.trim() || submittingComment}\n                    className=\"submit-comment\"\n                  >\n                    {submittingComment ? 'Submitting...' : 'Comment'}\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n          )}\n\n          <div className=\"expanded-footer\">\n            {prInfo ? (\n              <a href={prInfo.html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-link\">\n                View on GitHub →\n              </a>\n            ) : (\n              <a href={`https://github.com/litlfred/sgex/tree/${branchInfo.name}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-link\">\n                View Branch on GitHub →\n              </a>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PreviewBadge;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,CAAAC,aAAa,KAAM,2BAA2B,CACrD,MAAO,oBAAoB,CAE3B;AACA;AACA;AACA;AACA,GAJA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAKA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAACa,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACmB,UAAU,CAAEC,aAAa,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACqB,QAAQ,CAAEC,WAAW,CAAC,CAAGtB,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACuB,QAAQ,CAAEC,WAAW,CAAC,CAAGxB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACyB,eAAe,CAAEC,kBAAkB,CAAC,CAAG1B,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAAC2B,UAAU,CAAEC,aAAa,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC6B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG9B,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAAC+B,UAAU,CAAEC,aAAa,CAAC,CAAGhC,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACiC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlC,QAAQ,CAAC,GAAI,CAAAmC,GAAG,CAAC,CAAC,CAAC,CACnE,KAAM,CAAAC,WAAW,CAAGlC,MAAM,CAAC,IAAI,CAAC,CAEhCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACFrB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd;AACA,KAAM,CAAAoB,aAAa,CAAGC,gBAAgB,CAAC,CAAC,CAExC,GAAI,CAACD,aAAa,EAAIA,aAAa,GAAK,MAAM,CAAE,CAC9C;AACAtB,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEAJ,aAAa,CAAC,CACZ4B,IAAI,CAAEF,aAAa,CACnBG,QAAQ,CAAEH,aAAa,CAACI,OAAO,CAAC,KAAK,CAAE,GAAG,CAC5C,CAAC,CAAC,CAEF;AACA,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAC,gBAAgB,CAACN,aAAa,CAAC,CACpD,GAAIK,MAAM,CAAE,CACV7B,SAAS,CAAC6B,MAAM,CAAC,CACjB;AACAX,aAAa,CAAC7B,aAAa,CAAC0C,MAAM,CAAC,CAAC,CAAC,CACvC,CACF,CAAE,MAAOC,OAAO,CAAE,CAChBC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEF,OAAO,CAAC,CAClD;AACF,CAEA9B,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOiC,GAAG,CAAE,CACZF,OAAO,CAAC9B,KAAK,CAAC,yBAAyB,CAAEgC,GAAG,CAAC,CAC7C/B,QAAQ,CAAC+B,GAAG,CAACC,OAAO,CAAC,CACrBlC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDqB,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN;AACApC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkD,kBAAkB,CAAIC,KAAK,EAAK,CACpC,GAAIhB,WAAW,CAACiB,OAAO,EAAI,CAACjB,WAAW,CAACiB,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,CAAE,CACtE,GAAIlC,QAAQ,CAAE,CACZC,WAAW,CAAC,KAAK,CAAC,CACpB,CACAF,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,GAAID,UAAU,CAAE,CACd;AACAqC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAEN,kBAAkB,CAAC,CAC1DK,QAAQ,CAACC,gBAAgB,CAAC,YAAY,CAAEN,kBAAkB,CAAC,CAC3D,MAAO,IAAM,CACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,CAAEP,kBAAkB,CAAC,CAC7DK,QAAQ,CAACE,mBAAmB,CAAC,YAAY,CAAEP,kBAAkB,CAAC,CAChE,CAAC,CACH,CACF,CAAC,CAAE,CAAChC,UAAU,CAAEE,QAAQ,CAAC,CAAC,CAE1B,KAAM,CAAAkB,gBAAgB,CAAGA,CAAA,GAAM,CAC7B;AACA,GAAIoB,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAAE,CACzC,MAAO,CAAAF,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAC9C,CAEA;AACA,KAAM,CAAAC,IAAI,CAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAErC;AACA,KAAM,CAAAC,KAAK,CAAGJ,IAAI,CAACI,KAAK,CAAC,oBAAoB,CAAC,CAC9C,GAAIA,KAAK,EAAIA,KAAK,CAAC,CAAC,CAAC,GAAK,MAAM,CAAE,CAChC,KAAM,CAAAC,cAAc,CAAGD,KAAK,CAAC,CAAC,CAAC,CAE/B;AACA;AACA;AACA,GAAI,CAAAE,UAAU,CAAGD,cAAc,CAE/B;AACA,GAAIA,cAAc,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAI,CAACF,cAAc,CAACG,UAAU,CAAC,GAAG,CAAC,EAAI,CAACH,cAAc,CAACD,KAAK,CAAC,KAAK,CAAC,CAAE,CACnG;AACA,GAAIC,cAAc,CAACD,KAAK,CAAC,8DAA8D,CAAC,CAAE,CACxFE,UAAU,CAAGD,cAAc,CAACzB,OAAO,CAAC,WAAW,CAAE,KAAK,CAAC,CACzD,CACF,CAEA,MAAO,CAAA0B,UAAU,CACnB,CAEA,MAAO,KAAI,CACb,CAAC,CAED,KAAM,CAAAxB,gBAAgB,CAAG,KAAO,CAAAwB,UAAU,EAAK,CAC7C,GAAI,CACF;AACA;AACA,KAAM,CAAAG,KAAK,CAAG,UAAU,CACxB,KAAM,CAAAC,IAAI,CAAG,MAAM,CAEnB;AACA,KAAM,CAAAC,gBAAgB,CAAG,CACvBL,UAAU,CAAE;AACZA,UAAU,CAAC1B,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAAE;AAC/B0B,UAAU,CAAC1B,OAAO,CAAC,WAAW,CAAE,KAAK,CAAG;AAAA,CACzC,CAED;AACA,KAAM,CAAAgC,cAAc,CAAG,CAAC,GAAG,GAAI,CAAAvC,GAAG,CAACsC,gBAAgB,CAAC,CAAC,CAErD1B,OAAO,CAACC,KAAK,CAAC,0CAA0C,CAAE0B,cAAc,CAAC,CAEzE;AACA,IAAK,KAAM,CAAAC,SAAS,GAAI,CAAAD,cAAc,CAAE,CACtC,GAAI,CACF,KAAM,CAAAE,EAAE,CAAG,KAAM,CAAAzE,aAAa,CAAC0E,uBAAuB,CAACN,KAAK,CAAEC,IAAI,CAAEG,SAAS,CAAC,CAC9E,GAAIC,EAAE,CAAE,CACN7B,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAE2B,SAAS,CAAEC,EAAE,CAAC,CACpD,MAAO,CAAAA,EAAE,CACX,CACF,CAAE,MAAO3D,KAAK,CAAE,CACd8B,OAAO,CAACC,KAAK,CAAC,qCAAqC2B,SAAS,IAAI,CAAE1D,KAAK,CAACiC,OAAO,CAAC,CAClF,CACF,CAEAH,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC,CACrD,MAAO,KAAI,CACb,CAAE,MAAO/B,KAAK,CAAE,CACd8B,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAE/B,KAAK,CAAC,CAChD,MAAO,KAAI,CACb,CACF,CAAC,CAED,KAAM,CAAA6D,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAACjE,MAAM,CAAE,OAEba,kBAAkB,CAAC,IAAI,CAAC,CACxB,GAAI,CACF;AACA,KAAM,CAACqD,cAAc,CAAEC,aAAa,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACxD/E,aAAa,CAACgF,sBAAsB,CAAC,UAAU,CAAE,MAAM,CAAEtE,MAAM,CAACuE,MAAM,CAAC,CAACC,KAAK,CAAC,IAAM,EAAE,CAAC,CACvFlF,aAAa,CAACmF,2BAA2B,CAAC,UAAU,CAAE,MAAM,CAAEzE,MAAM,CAACuE,MAAM,CAAC,CAACC,KAAK,CAAC,IAAM,EAAE,CAAC,CAC7F,CAAC,CAEF;AACA,KAAM,CAAAE,WAAW,CAAG,CAClB,GAAGR,cAAc,CAACS,GAAG,CAACC,CAAC,GAAK,CAAE,GAAGA,CAAC,CAAEC,IAAI,CAAE,QAAS,CAAC,CAAC,CAAC,CACtD,GAAGV,aAAa,CAACQ,GAAG,CAACC,CAAC,GAAK,CAAE,GAAGA,CAAC,CAAEC,IAAI,CAAE,OAAQ,CAAC,CAAC,CAAC,CACrD,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,GAAI,CAAAC,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,CAAG,GAAI,CAAAD,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAAC,CAEjEvE,WAAW,CAAC+D,WAAW,CAAC,CAC1B,CAAE,MAAOtE,KAAK,CAAE,CACd8B,OAAO,CAAC9B,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CAAC,OAAS,CACRS,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED,KAAM,CAAAsE,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,GAAI,CAAC3E,QAAQ,CAAE,CACbD,aAAa,CAAC,IAAI,CAAC,CACnB,GAAIP,MAAM,EAAIU,QAAQ,CAAC0E,MAAM,GAAK,CAAC,CAAE,CACnCnB,aAAa,CAAC,CAAC,CACjB,CACF,CACF,CAAC,CAED,KAAM,CAAAoB,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,GAAI,CAAC7E,QAAQ,CAAE,CACbD,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAA+E,gBAAgB,CAAI/C,KAAK,EAAK,CAClC;AACAA,KAAK,CAACgD,eAAe,CAAC,CAAC,CACvBhD,KAAK,CAACiD,cAAc,CAAC,CAAC,CAEtB,GAAIhF,QAAQ,CAAE,CACZ;AACAC,WAAW,CAAC,KAAK,CAAC,CAClBF,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,IAAM,CACL;AACAE,WAAW,CAAC,IAAI,CAAC,CACjBF,aAAa,CAAC,IAAI,CAAC,CACnB,GAAIP,MAAM,EAAIU,QAAQ,CAAC0E,MAAM,GAAK,CAAC,CAAE,CACnCnB,aAAa,CAAC,CAAC,CACjB,CACF,CACF,CAAC,CAED,KAAM,CAAAwB,mBAAmB,CAAG,KAAO,CAAAlD,KAAK,EAAK,CAC3CA,KAAK,CAACiD,cAAc,CAAC,CAAC,CACtB,GAAI,CAAC1E,UAAU,CAAC4E,IAAI,CAAC,CAAC,EAAI,CAAC1F,MAAM,EAAI,CAACkB,UAAU,CAAE,OAElDD,oBAAoB,CAAC,IAAI,CAAC,CAC1B,GAAI,CACF,KAAM,CAAA0E,OAAO,CAAG,KAAM,CAAArG,aAAa,CAACsG,wBAAwB,CAC1D,UAAU,CACV,MAAM,CACN5F,MAAM,CAACuE,MAAM,CACbzD,UAAU,CAAC4E,IAAI,CAAC,CAClB,CAAC,CAED;AACA/E,WAAW,CAACkF,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAAE,GAAGF,OAAO,CAAEd,IAAI,CAAE,OAAQ,CAAC,CAAC,CAAC,CAC7D9D,aAAa,CAAC,EAAE,CAAC,CACnB,CAAE,MAAOX,KAAK,CAAE,CACd8B,OAAO,CAAC9B,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD0F,KAAK,CAAC,6CAA6C,CAAC,CACtD,CAAC,OAAS,CACR7E,oBAAoB,CAAC,KAAK,CAAC,CAC7B,CACF,CAAC,CAED,KAAM,CAAA8E,sBAAsB,CAAIC,SAAS,EAAK,CAC5C3E,mBAAmB,CAACwE,IAAI,EAAI,CAC1B,KAAM,CAAAI,MAAM,CAAG,GAAI,CAAA3E,GAAG,CAACuE,IAAI,CAAC,CAC5B,GAAII,MAAM,CAACC,GAAG,CAACF,SAAS,CAAC,CAAE,CACzBC,MAAM,CAACE,MAAM,CAACH,SAAS,CAAC,CAC1B,CAAC,IAAM,CACLC,MAAM,CAACG,GAAG,CAACJ,SAAS,CAAC,CACvB,CACA,MAAO,CAAAC,MAAM,CACf,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAI,UAAU,CAAIC,UAAU,EAAK,CACjC,MAAO,IAAI,CAAArB,IAAI,CAACqB,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAE,CACtDC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SACV,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,QAAAA,CAACC,IAAI,CAAqB,IAAnB,CAAAC,SAAS,CAAAC,SAAA,CAAA3B,MAAA,IAAA2B,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,EAAE,CACxC,GAAIF,IAAI,CAACzB,MAAM,EAAI0B,SAAS,CAAE,MAAO,CAAAD,IAAI,CACzC,MAAO,CAAAA,IAAI,CAACI,SAAS,CAAC,CAAC,CAAEH,SAAS,CAAC,CAAG,KAAK,CAC7C,CAAC,CAED,KAAM,CAAAI,aAAa,CAAG,QAAAA,CAACC,KAAK,CAAqB,IAAnB,CAAAL,SAAS,CAAAC,SAAA,CAAA3B,MAAA,IAAA2B,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,EAAE,CAC1C,GAAII,KAAK,CAAC/B,MAAM,EAAI0B,SAAS,CAAE,MAAO,CAAAK,KAAK,CAC3C,MAAO,CAAAA,KAAK,CAACF,SAAS,CAAC,CAAC,CAAEH,SAAS,CAAC,CAAG,KAAK,CAC9C,CAAC,CAED;AACA,GAAI5G,OAAO,EAAIE,KAAK,EAAI,CAACN,UAAU,CAAE,CACnC,MAAO,KAAI,CACb,CAEA,mBACEF,KAAA,QAAKwH,SAAS,CAAC,yBAAyB,CAACC,GAAG,CAAE9F,WAAY,CAAA+F,QAAA,eACxD9H,IAAA,QACE4H,SAAS,CAAE,2BAA2B9G,UAAU,CAAG,UAAU,CAAG,EAAE,IAAIE,QAAQ,CAAG,QAAQ,CAAG,EAAE,EAAG,CACjG+G,OAAO,CAAEjC,gBAAiB,CAC1BkC,YAAY,CAAErC,gBAAiB,CAC/BsC,YAAY,CAAEpC,gBAAiB,CAC/B8B,KAAK,CAAE3G,QAAQ,CAAG,mBAAmB,CAAGF,UAAU,CAAG,wBAAwB,CAAGN,MAAM,CAAG,mCAAmCA,MAAM,CAACmH,KAAK,EAAE,CAAG,mCAAmCrH,UAAU,CAAC6B,IAAI,EAAG,CAAA2F,QAAA,cAElM1H,KAAA,QAAKwH,SAAS,CAAC,eAAe,CAAAE,QAAA,eAC5B9H,IAAA,SAAM4H,SAAS,CAAC,aAAa,CAAAE,QAAA,CAAC,UAAQ,CAAM,CAAC,cAC7C9H,IAAA,SAAM4H,SAAS,CAAC,cAAc,CAAAE,QAAA,CAAExH,UAAU,CAAC6B,IAAI,CAAO,CAAC,CACtD3B,MAAM,eACLJ,KAAA,CAAAF,SAAA,EAAA4H,QAAA,eACE9H,IAAA,SAAM4H,SAAS,CAAC,iBAAiB,CAAAE,QAAA,CAAC,GAAC,CAAM,CAAC,cAC1C9H,IAAA,SAAM4H,SAAS,CAAC,gBAAgB,CAAAE,QAAA,CAAEJ,aAAa,CAAClH,MAAM,CAACmH,KAAK,CAAC,CAAO,CAAC,EACrE,CACH,cACD3H,IAAA,SAAM4H,SAAS,CAAC,mBAAmB,CAAAE,QAAA,CAAEhH,UAAU,CAAG,GAAG,CAAG,GAAG,CAAO,CAAC,EAChE,CAAC,CACH,CAAC,CAELA,UAAU,eACTV,KAAA,QAAKwH,SAAS,CAAC,wBAAwB,CAAAE,QAAA,eACrC1H,KAAA,QAAKwH,SAAS,CAAC,iBAAiB,CAAAE,QAAA,eAC9B9H,IAAA,QAAK4H,SAAS,CAAC,SAAS,CAAAE,QAAA,CACrBtH,MAAM,cACLJ,KAAA,CAAAF,SAAA,EAAA4H,QAAA,eACE9H,IAAA,OAAA8H,QAAA,cACE1H,KAAA,MAAG8H,IAAI,CAAE1H,MAAM,CAAC2H,QAAS,CAACjF,MAAM,CAAC,QAAQ,CAACkF,GAAG,CAAC,qBAAqB,CAAAN,QAAA,EAAC,GACjE,CAACtH,MAAM,CAACuE,MAAM,CAAC,IAAE,CAACvE,MAAM,CAACmH,KAAK,EAC9B,CAAC,CACF,CAAC,cACLvH,KAAA,QAAKwH,SAAS,CAAC,SAAS,CAAAE,QAAA,eACtB9H,IAAA,SAAM4H,SAAS,CAAC,UAAU,CAAC,aAAYpH,MAAM,CAAC6H,KAAM,CAAAP,QAAA,CAAEtH,MAAM,CAAC6H,KAAK,CAAO,CAAC,cAC1EjI,KAAA,SAAMwH,SAAS,CAAC,WAAW,CAAAE,QAAA,EAAC,KAAG,CAACtH,MAAM,CAAC8H,IAAI,CAACC,KAAK,EAAO,CAAC,cACzDvI,IAAA,SAAM4H,SAAS,CAAC,SAAS,CAAAE,QAAA,CAAEjB,UAAU,CAACrG,MAAM,CAACkF,UAAU,CAAC,CAAO,CAAC,EAC7D,CAAC,EACN,CAAC,cAEHtF,KAAA,CAAAF,SAAA,EAAA4H,QAAA,eACE1H,KAAA,OAAA0H,QAAA,EAAI,kBAAgB,CAACxH,UAAU,CAAC6B,IAAI,EAAK,CAAC,cAC1C/B,KAAA,QAAKwH,SAAS,CAAC,SAAS,CAAAE,QAAA,eACtB9H,IAAA,SAAM4H,SAAS,CAAC,UAAU,CAAC,aAAW,SAAS,CAAAE,QAAA,CAAC,aAAW,CAAM,CAAC,cAClE9H,IAAA,SAAM4H,SAAS,CAAC,WAAW,CAAAE,QAAA,CAAC,gBAAc,CAAM,CAAC,EAC9C,CAAC,EACN,CACH,CACE,CAAC,cACN9H,IAAA,WACE4H,SAAS,CAAC,cAAc,CACxBG,OAAO,CAAGS,CAAC,EAAK,CACdA,CAAC,CAACzC,eAAe,CAAC,CAAC,CACnBhF,aAAa,CAAC,KAAK,CAAC,CACpBE,WAAW,CAAC,KAAK,CAAC,CACpB,CAAE,CACF0G,KAAK,CAAC,qBAAqB,CAAAG,QAAA,CAC5B,MAED,CAAQ,CAAC,EACN,CAAC,CAELtH,MAAM,EAAIA,MAAM,CAACiI,IAAI,eACpBrI,KAAA,QAAKwH,SAAS,CAAC,gBAAgB,CAAAE,QAAA,eAC7B9H,IAAA,OAAA8H,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB9H,IAAA,QAAK4H,SAAS,CAAC,SAAS,CAAAE,QAAA,CAAEtH,MAAM,CAACiI,IAAI,CAAM,CAAC,EACzC,CACN,CAEA,CAACjI,MAAM,eACNJ,KAAA,QAAKwH,SAAS,CAAC,gBAAgB,CAAAE,QAAA,eAC7B9H,IAAA,OAAA8H,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3B1H,KAAA,QAAKwH,SAAS,CAAC,SAAS,CAAAE,QAAA,EAAC,wCACe,cAAA9H,IAAA,SAAA8H,QAAA,CAAOxH,UAAU,CAAC6B,IAAI,CAAO,CAAC,WACpE,CAAC,CAACrC,aAAa,CAAC0C,MAAM,CAAC,CAAC,eACtBxC,IAAA,QAAK0I,KAAK,CAAE,CAACC,SAAS,CAAE,QAAQ,CAAEC,SAAS,CAAE,QAAQ,CAAEC,KAAK,CAAE,MAAM,CAAE,CAAAf,QAAA,CAAC,8DAEvE,CAAK,CACN,EACE,CAAC,EACH,CACN,CAEAtH,MAAM,eACLJ,KAAA,QAAKwH,SAAS,CAAC,kBAAkB,CAAAE,QAAA,eAC/B1H,KAAA,OAAA0H,QAAA,EAAI,YAAU,CAAC5G,QAAQ,CAAC0E,MAAM,CAAC,GAAC,EAAI,CAAC,CAEpCxE,eAAe,cACdpB,IAAA,QAAK4H,SAAS,CAAC,SAAS,CAAAE,QAAA,CAAC,qBAAmB,CAAK,CAAC,CAChD5G,QAAQ,CAAC0E,MAAM,CAAG,CAAC,cACrB5F,IAAA,QAAK4H,SAAS,CAAC,eAAe,CAAAE,QAAA,CAC3B5G,QAAQ,CAACiE,GAAG,CAAEgB,OAAO,eACpB/F,KAAA,QAAsBwH,SAAS,CAAC,SAAS,CAAAE,QAAA,eACvC1H,KAAA,QAAKwH,SAAS,CAAC,gBAAgB,CAAAE,QAAA,eAC/B9H,IAAA,QACE8I,GAAG,CAAE3C,OAAO,CAACmC,IAAI,CAACS,UAAW,CAC7BC,GAAG,CAAE7C,OAAO,CAACmC,IAAI,CAACC,KAAM,CACxBX,SAAS,CAAC,gBAAgB,CAC3B,CAAC,cACF5H,IAAA,SAAM4H,SAAS,CAAC,gBAAgB,CAAAE,QAAA,CAAE3B,OAAO,CAACmC,IAAI,CAACC,KAAK,CAAO,CAAC,cAC5DvI,IAAA,SAAM4H,SAAS,CAAC,cAAc,CAAAE,QAAA,CAAEjB,UAAU,CAACV,OAAO,CAACT,UAAU,CAAC,CAAO,CAAC,cACtE1F,IAAA,SAAM4H,SAAS,CAAC,cAAc,CAAAE,QAAA,CAAE3B,OAAO,CAACd,IAAI,CAAO,CAAC,EACjD,CAAC,cACNrF,IAAA,QAAK4H,SAAS,CAAC,cAAc,CAAAE,QAAA,CAC1BlG,gBAAgB,CAAC8E,GAAG,CAACP,OAAO,CAAC8C,EAAE,CAAC,cAC/B7I,KAAA,QAAKwH,SAAS,CAAC,cAAc,CAAAE,QAAA,EAC1B3B,OAAO,CAACsC,IAAI,cACbzI,IAAA,WACE4H,SAAS,CAAC,gBAAgB,CAC1BG,OAAO,CAAEA,CAAA,GAAMxB,sBAAsB,CAACJ,OAAO,CAAC8C,EAAE,CAAE,CAAAnB,QAAA,CACnD,WAED,CAAQ,CAAC,EACN,CAAC,cAEN1H,KAAA,QAAKwH,SAAS,CAAC,iBAAiB,CAAAE,QAAA,EAC7BV,YAAY,CAACjB,OAAO,CAACsC,IAAI,CAAC,CAC1BtC,OAAO,CAACsC,IAAI,CAAC7C,MAAM,CAAG,EAAE,eACvB5F,IAAA,WACE4H,SAAS,CAAC,gBAAgB,CAC1BG,OAAO,CAAEA,CAAA,GAAMxB,sBAAsB,CAACJ,OAAO,CAAC8C,EAAE,CAAE,CAAAnB,QAAA,CACnD,WAED,CAAQ,CACT,EACE,CACN,CACE,CAAC,GAnCI3B,OAAO,CAAC8C,EAoCf,CACN,CAAC,CACC,CAAC,cAENjJ,IAAA,QAAK4H,SAAS,CAAC,aAAa,CAAAE,QAAA,CAAC,iBAAe,CAAK,CAClD,CAEApG,UAAU,eACTtB,KAAA,SAAMwH,SAAS,CAAC,cAAc,CAACsB,QAAQ,CAAEjD,mBAAoB,CAAA6B,QAAA,eAC3D9H,IAAA,OAAA8H,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB9H,IAAA,aACEmJ,KAAK,CAAE7H,UAAW,CAClB8H,QAAQ,CAAGZ,CAAC,EAAKjH,aAAa,CAACiH,CAAC,CAACtF,MAAM,CAACiG,KAAK,CAAE,CAC/CE,WAAW,CAAC,oBAAoB,CAChCC,IAAI,CAAE,CAAE,CACRC,QAAQ,CAAE/H,iBAAkB,CAC7B,CAAC,cACFxB,IAAA,QAAK4H,SAAS,CAAC,sBAAsB,CAAAE,QAAA,cACnC9H,IAAA,WACEqF,IAAI,CAAC,QAAQ,CACbkE,QAAQ,CAAE,CAACjI,UAAU,CAAC4E,IAAI,CAAC,CAAC,EAAI1E,iBAAkB,CAClDoG,SAAS,CAAC,gBAAgB,CAAAE,QAAA,CAEzBtG,iBAAiB,CAAG,eAAe,CAAG,SAAS,CAC1C,CAAC,CACN,CAAC,EACF,CACP,EACE,CACJ,cAEDxB,IAAA,QAAK4H,SAAS,CAAC,iBAAiB,CAAAE,QAAA,CAC7BtH,MAAM,cACLR,IAAA,MAAGkI,IAAI,CAAE1H,MAAM,CAAC2H,QAAS,CAACjF,MAAM,CAAC,QAAQ,CAACkF,GAAG,CAAC,qBAAqB,CAACR,SAAS,CAAC,aAAa,CAAAE,QAAA,CAAC,uBAE5F,CAAG,CAAC,cAEJ9H,IAAA,MAAGkI,IAAI,CAAE,yCAAyC5H,UAAU,CAAC6B,IAAI,EAAG,CAACe,MAAM,CAAC,QAAQ,CAACkF,GAAG,CAAC,qBAAqB,CAACR,SAAS,CAAC,aAAa,CAAAE,QAAA,CAAC,8BAEvI,CAAG,CACJ,CACE,CAAC,EACH,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}