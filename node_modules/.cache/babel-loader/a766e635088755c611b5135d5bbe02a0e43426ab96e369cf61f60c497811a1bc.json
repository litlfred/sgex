{"ast":null,"code":"import { add as collectionAdd, remove as collectionRemove } from 'diagram-js/lib/util/Collections';\n\n/**\n * @typedef {import('../../BpmnFactory').default} BpmnFactory\n *\n * @typedef {import('../../../model/Types').ModdleElement} ModdleElement\n */\n\n/**\n * Creates a new bpmn:CategoryValue inside a new bpmn:Category\n *\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\nexport function createCategory(bpmnFactory) {\n  return bpmnFactory.create('bpmn:Category');\n}\n\n/**\n * Creates a new bpmn:CategoryValue inside a new bpmn:Category\n *\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\nexport function createCategoryValue(bpmnFactory) {\n  return bpmnFactory.create('bpmn:CategoryValue');\n}\n\n/**\n * Adds category value to definitions\n *\n * @param {ModdleElement} categoryValue\n * @param {ModdleElement} category\n * @param {ModdleElement} definitions\n *\n * @return {ModdleElement}\n */\nexport function linkCategoryValue(categoryValue, category, definitions) {\n  collectionAdd(category.get('categoryValue'), categoryValue);\n  categoryValue.$parent = category;\n  collectionAdd(definitions.get('rootElements'), category);\n  category.$parent = definitions;\n  return categoryValue;\n}\n\n/**\n * Unlink category value from parent\n *\n * @param {ModdleElement} categoryValue\n *\n * @return {ModdleElement}\n */\nexport function unlinkCategoryValue(categoryValue) {\n  var category = categoryValue.$parent;\n  if (category) {\n    collectionRemove(category.get('categoryValue'), categoryValue);\n    categoryValue.$parent = null;\n  }\n  return categoryValue;\n}\n\n/**\n * Unlink category from parent\n *\n * @param {ModdleElement} category\n *\n * @return {ModdleElement}\n */\nexport function unlinkCategory(category) {\n  var definitions = category.$parent;\n  if (definitions) {\n    collectionRemove(definitions.get('rootElements'), category);\n    category.$parent = null;\n  }\n  return category;\n}","map":{"version":3,"names":["add","collectionAdd","remove","collectionRemove","createCategory","bpmnFactory","create","createCategoryValue","linkCategoryValue","categoryValue","category","definitions","get","$parent","unlinkCategoryValue","unlinkCategory"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/util/CategoryUtil.js"],"sourcesContent":["import {\n  add as collectionAdd,\n  remove as collectionRemove\n} from 'diagram-js/lib/util/Collections';\n\n/**\n * @typedef {import('../../BpmnFactory').default} BpmnFactory\n *\n * @typedef {import('../../../model/Types').ModdleElement} ModdleElement\n */\n\n/**\n * Creates a new bpmn:CategoryValue inside a new bpmn:Category\n *\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\nexport function createCategory(bpmnFactory) {\n  return bpmnFactory.create('bpmn:Category');\n}\n\n/**\n * Creates a new bpmn:CategoryValue inside a new bpmn:Category\n *\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement}\n */\nexport function createCategoryValue(bpmnFactory) {\n  return bpmnFactory.create('bpmn:CategoryValue');\n}\n\n/**\n * Adds category value to definitions\n *\n * @param {ModdleElement} categoryValue\n * @param {ModdleElement} category\n * @param {ModdleElement} definitions\n *\n * @return {ModdleElement}\n */\nexport function linkCategoryValue(categoryValue, category, definitions) {\n  collectionAdd(category.get('categoryValue'), categoryValue);\n  categoryValue.$parent = category;\n\n  collectionAdd(definitions.get('rootElements'), category);\n  category.$parent = definitions;\n\n  return categoryValue;\n}\n\n/**\n * Unlink category value from parent\n *\n * @param {ModdleElement} categoryValue\n *\n * @return {ModdleElement}\n */\nexport function unlinkCategoryValue(categoryValue) {\n  var category = categoryValue.$parent;\n\n  if (category) {\n    collectionRemove(category.get('categoryValue'), categoryValue);\n    categoryValue.$parent = null;\n  }\n\n  return categoryValue;\n}\n\n/**\n * Unlink category from parent\n *\n * @param {ModdleElement} category\n *\n * @return {ModdleElement}\n */\nexport function unlinkCategory(category) {\n  var definitions = category.$parent;\n\n  if (definitions) {\n    collectionRemove(definitions.get('rootElements'), category);\n    category.$parent = null;\n  }\n\n  return category;\n}"],"mappings":"AAAA,SACEA,GAAG,IAAIC,aAAa,EACpBC,MAAM,IAAIC,gBAAgB,QACrB,iCAAiC;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,WAAW,EAAE;EAC1C,OAAOA,WAAW,CAACC,MAAM,CAAC,eAAe,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACF,WAAW,EAAE;EAC/C,OAAOA,WAAW,CAACC,MAAM,CAAC,oBAAoB,CAAC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,iBAAiBA,CAACC,aAAa,EAAEC,QAAQ,EAAEC,WAAW,EAAE;EACtEV,aAAa,CAACS,QAAQ,CAACE,GAAG,CAAC,eAAe,CAAC,EAAEH,aAAa,CAAC;EAC3DA,aAAa,CAACI,OAAO,GAAGH,QAAQ;EAEhCT,aAAa,CAACU,WAAW,CAACC,GAAG,CAAC,cAAc,CAAC,EAAEF,QAAQ,CAAC;EACxDA,QAAQ,CAACG,OAAO,GAAGF,WAAW;EAE9B,OAAOF,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,mBAAmBA,CAACL,aAAa,EAAE;EACjD,IAAIC,QAAQ,GAAGD,aAAa,CAACI,OAAO;EAEpC,IAAIH,QAAQ,EAAE;IACZP,gBAAgB,CAACO,QAAQ,CAACE,GAAG,CAAC,eAAe,CAAC,EAAEH,aAAa,CAAC;IAC9DA,aAAa,CAACI,OAAO,GAAG,IAAI;EAC9B;EAEA,OAAOJ,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,cAAcA,CAACL,QAAQ,EAAE;EACvC,IAAIC,WAAW,GAAGD,QAAQ,CAACG,OAAO;EAElC,IAAIF,WAAW,EAAE;IACfR,gBAAgB,CAACQ,WAAW,CAACC,GAAG,CAAC,cAAc,CAAC,EAAEF,QAAQ,CAAC;IAC3DA,QAAQ,CAACG,OAAO,GAAG,IAAI;EACzB;EAEA,OAAOH,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}