{"ast":null,"code":"import { assign, forEach, pick } from 'min-dash';\nimport MoveHelper from './helper/MoveHelper';\nimport { add as collectionAdd, remove as collectionRemove } from '../../../util/Collections';\nimport { getMovedSourceAnchor, getMovedTargetAnchor } from './helper/AnchorsHelper';\n\n/**\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A handler that implements reversible moving of shapes.\n *\n * @param {Modeling} modeling\n */\nexport default function MoveShapeHandler(modeling) {\n  this._modeling = modeling;\n  this._helper = new MoveHelper(modeling);\n}\nMoveShapeHandler.$inject = ['modeling'];\nMoveShapeHandler.prototype.execute = function (context) {\n  var shape = context.shape,\n    delta = context.delta,\n    newParent = context.newParent || shape.parent,\n    newParentIndex = context.newParentIndex,\n    oldParent = shape.parent;\n  context.oldBounds = pick(shape, ['x', 'y', 'width', 'height']);\n\n  // save old parent in context\n  context.oldParent = oldParent;\n  context.oldParentIndex = collectionRemove(oldParent.children, shape);\n\n  // add to new parent at position\n  collectionAdd(newParent.children, shape, newParentIndex);\n\n  // update shape parent + position\n  assign(shape, {\n    parent: newParent,\n    x: shape.x + delta.x,\n    y: shape.y + delta.y\n  });\n  return shape;\n};\nMoveShapeHandler.prototype.postExecute = function (context) {\n  var shape = context.shape,\n    delta = context.delta,\n    hints = context.hints;\n  var modeling = this._modeling;\n  if (hints.layout !== false) {\n    forEach(shape.incoming, function (c) {\n      modeling.layoutConnection(c, {\n        connectionEnd: getMovedTargetAnchor(c, shape, delta)\n      });\n    });\n    forEach(shape.outgoing, function (c) {\n      modeling.layoutConnection(c, {\n        connectionStart: getMovedSourceAnchor(c, shape, delta)\n      });\n    });\n  }\n  if (hints.recurse !== false) {\n    this.moveChildren(context);\n  }\n};\nMoveShapeHandler.prototype.revert = function (context) {\n  var shape = context.shape,\n    oldParent = context.oldParent,\n    oldParentIndex = context.oldParentIndex,\n    delta = context.delta;\n\n  // restore previous location in old parent\n  collectionAdd(oldParent.children, shape, oldParentIndex);\n\n  // revert to old position and parent\n  assign(shape, {\n    parent: oldParent,\n    x: shape.x - delta.x,\n    y: shape.y - delta.y\n  });\n  return shape;\n};\nMoveShapeHandler.prototype.moveChildren = function (context) {\n  var delta = context.delta,\n    shape = context.shape;\n  this._helper.moveRecursive(shape.children, delta, null);\n};\nMoveShapeHandler.prototype.getNewParent = function (context) {\n  return context.newParent || context.shape.parent;\n};","map":{"version":3,"names":["assign","forEach","pick","MoveHelper","add","collectionAdd","remove","collectionRemove","getMovedSourceAnchor","getMovedTargetAnchor","MoveShapeHandler","modeling","_modeling","_helper","$inject","prototype","execute","context","shape","delta","newParent","parent","newParentIndex","oldParent","oldBounds","oldParentIndex","children","x","y","postExecute","hints","layout","incoming","c","layoutConnection","connectionEnd","outgoing","connectionStart","recurse","moveChildren","revert","moveRecursive","getNewParent"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/modeling/cmd/MoveShapeHandler.js"],"sourcesContent":["import {\n  assign,\n  forEach,\n  pick\n} from 'min-dash';\n\nimport MoveHelper from './helper/MoveHelper';\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../../../util/Collections';\n\nimport {\n  getMovedSourceAnchor,\n  getMovedTargetAnchor\n} from './helper/AnchorsHelper';\n\n/**\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A handler that implements reversible moving of shapes.\n *\n * @param {Modeling} modeling\n */\nexport default function MoveShapeHandler(modeling) {\n  this._modeling = modeling;\n\n  this._helper = new MoveHelper(modeling);\n}\n\nMoveShapeHandler.$inject = [ 'modeling' ];\n\n\nMoveShapeHandler.prototype.execute = function(context) {\n\n  var shape = context.shape,\n      delta = context.delta,\n      newParent = context.newParent || shape.parent,\n      newParentIndex = context.newParentIndex,\n      oldParent = shape.parent;\n\n  context.oldBounds = pick(shape, [ 'x', 'y', 'width', 'height' ]);\n\n  // save old parent in context\n  context.oldParent = oldParent;\n  context.oldParentIndex = collectionRemove(oldParent.children, shape);\n\n  // add to new parent at position\n  collectionAdd(newParent.children, shape, newParentIndex);\n\n  // update shape parent + position\n  assign(shape, {\n    parent: newParent,\n    x: shape.x + delta.x,\n    y: shape.y + delta.y\n  });\n\n  return shape;\n};\n\nMoveShapeHandler.prototype.postExecute = function(context) {\n\n  var shape = context.shape,\n      delta = context.delta,\n      hints = context.hints;\n\n  var modeling = this._modeling;\n\n  if (hints.layout !== false) {\n\n    forEach(shape.incoming, function(c) {\n      modeling.layoutConnection(c, {\n        connectionEnd: getMovedTargetAnchor(c, shape, delta)\n      });\n    });\n\n    forEach(shape.outgoing, function(c) {\n      modeling.layoutConnection(c, {\n        connectionStart: getMovedSourceAnchor(c, shape, delta)\n      });\n    });\n  }\n\n  if (hints.recurse !== false) {\n    this.moveChildren(context);\n  }\n};\n\nMoveShapeHandler.prototype.revert = function(context) {\n\n  var shape = context.shape,\n      oldParent = context.oldParent,\n      oldParentIndex = context.oldParentIndex,\n      delta = context.delta;\n\n  // restore previous location in old parent\n  collectionAdd(oldParent.children, shape, oldParentIndex);\n\n  // revert to old position and parent\n  assign(shape, {\n    parent: oldParent,\n    x: shape.x - delta.x,\n    y: shape.y - delta.y\n  });\n\n  return shape;\n};\n\nMoveShapeHandler.prototype.moveChildren = function(context) {\n\n  var delta = context.delta,\n      shape = context.shape;\n\n  this._helper.moveRecursive(shape.children, delta, null);\n};\n\nMoveShapeHandler.prototype.getNewParent = function(context) {\n  return context.newParent || context.shape.parent;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}