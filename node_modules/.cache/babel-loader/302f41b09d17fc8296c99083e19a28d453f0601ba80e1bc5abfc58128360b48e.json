{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import stagingGroundService from'../services/stagingGroundService';import dakComplianceService from'../services/dakComplianceService';import githubService from'../services/githubService';import SaveDialog from'./SaveDialog';import CommitsSlider from'./CommitsSlider';import GitHubActionsIntegration from'./GitHubActionsIntegration';import'./DAKStatusBox.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DAKStatusBox=_ref=>{var _repository$owner;let{repository,selectedBranch,hasWriteAccess,profile}=_ref;const[isExpanded,setIsExpanded]=useState(false);const[stagingGround,setStagingGround]=useState(null);const[validation,setValidation]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[showSaveDialog,setShowSaveDialog]=useState(false);const[repositoryStats,setRepositoryStats]=useState({recentCommits:[],openPullRequestsCount:0,openIssuesCount:0,statsLoading:false,statsError:null});const owner=((_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login)||repository.full_name.split('/')[0];const repoName=repository.name;const branch=selectedBranch||repository.default_branch||'main';// Load repository statistics\nconst loadRepositoryStats=useCallback(async()=>{if(!githubService.isAuth()){return;}setRepositoryStats(prev=>({...prev,statsLoading:true,statsError:null}));try{const stats=await githubService.getRepositoryStats(owner,repoName,branch);setRepositoryStats({recentCommits:stats.recentCommits,openPullRequestsCount:stats.openPullRequestsCount,openIssuesCount:stats.openIssuesCount,statsLoading:false,statsError:null});}catch(err){console.error('Error loading repository stats:',err);setRepositoryStats(prev=>({...prev,statsLoading:false,statsError:'Failed to load repository statistics'}));}},[owner,repoName,branch]);// Load staging ground data\nconst loadStagingGroundData=useCallback(async()=>{setLoading(true);setError(null);try{const currentStagingGround=stagingGroundService.getStagingGround();setStagingGround(currentStagingGround);if(currentStagingGround.files.length>0){await validateStagingGround(currentStagingGround);}}catch(err){setError('Failed to load staging ground data');console.error('Error loading staging ground:',err);}finally{setLoading(false);}},[]);// Initialize staging ground service\nuseEffect(()=>{if(repository&&selectedBranch){stagingGroundService.initialize(repository,selectedBranch);loadStagingGroundData();loadRepositoryStats();// Subscribe to staging ground changes\nconst unsubscribe=stagingGroundService.addListener(updatedStagingGround=>{setStagingGround(updatedStagingGround);validateStagingGround(updatedStagingGround);});return unsubscribe;}},[repository,selectedBranch,loadStagingGroundData,loadRepositoryStats]);// Validate staging ground\nconst validateStagingGround=async stagingGroundData=>{if(!stagingGroundData||stagingGroundData.files.length===0){setValidation(null);return;}try{const validationResult=await dakComplianceService.validateStagingGround(stagingGroundData);setValidation(validationResult);}catch(err){console.error('Error validating staging ground:',err);setValidation(null);}};// Handle toggle expansion\nconst handleToggle=()=>{setIsExpanded(!isExpanded);};// Handle save button click\nconst handleSave=()=>{setShowSaveDialog(true);};// Handle successful save\nconst handleSaveSuccess=result=>{setShowSaveDialog(false);// Clear staging ground after successful save\nstagingGroundService.clearStagingGround();// Show success message\nalert(`Changes saved successfully! Commit: ${result.sha.substring(0,7)}`);};// Handle clearing staging ground\nconst handleClearChanges=()=>{if(window.confirm('Are you sure you want to discard all changes? This cannot be undone.')){stagingGroundService.clearStagingGround();}};// Handle removing individual file\nconst handleRemoveFile=filePath=>{if(window.confirm(`Are you sure you want to remove \"${filePath}\" from staging? This cannot be undone.`)){stagingGroundService.removeFile(filePath);}};// Get validation summary for display\nconst getValidationSummary=()=>{if(!validation){return{error:0,warning:0,info:0,canSave:true};}return dakComplianceService.getValidationSummary(validation);};// Format file list for display\nconst formatFileList=()=>{if(!stagingGround||!stagingGround.files)return[];return stagingGround.files.map(file=>({path:file.path,size:new Blob([file.content]).size,lastModified:file.timestamp}));};// Format the last commit for display\nconst formatLastCommit=()=>{if(!repositoryStats.recentCommits||repositoryStats.recentCommits.length===0){return null;}const lastCommit=repositoryStats.recentCommits[0];const commitDate=new Date(lastCommit.author.date);const shortSha=lastCommit.sha.substring(0,7);const shortMessage=lastCommit.message.split('\\n')[0].substring(0,60);const displayMessage=lastCommit.message.split('\\n')[0].length>60?shortMessage+'...':shortMessage;return{sha:shortSha,message:displayMessage,author:lastCommit.author.name,date:commitDate.toLocaleDateString(),time:commitDate.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'}),url:lastCommit.html_url};};const validationSummary=getValidationSummary();const hasChanges=stagingGround&&stagingGround.files.length>0;const filesCount=stagingGround?stagingGround.files.length:0;return/*#__PURE__*/_jsxs(\"div\",{className:\"dak-status-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-header\",onClick:handleToggle,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-icon\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Staging Ground\"}),hasChanges&&/*#__PURE__*/_jsxs(\"span\",{className:\"files-badge\",children:[filesCount,\" file\",filesCount!==1?'s':'']}),/*#__PURE__*/_jsx(\"span\",{className:\"branch-indicator\",children:branch&&/*#__PURE__*/_jsx(\"code\",{children:branch})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-indicators\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"validation-stoplight\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`stoplight-indicator error ${validationSummary.error===0?'lit':''}`,children:[\"\\uD83D\\uDD34\",validationSummary.error>0&&/*#__PURE__*/_jsx(\"span\",{className:\"indicator-badge\",children:validationSummary.error})]}),/*#__PURE__*/_jsxs(\"div\",{className:`stoplight-indicator warning ${validationSummary.warning===0?'lit':''}`,children:[\"\\uD83D\\uDFE1\",validationSummary.warning>0&&/*#__PURE__*/_jsx(\"span\",{className:\"indicator-badge\",children:validationSummary.warning})]}),/*#__PURE__*/_jsxs(\"div\",{className:`stoplight-indicator info ${validationSummary.info===0?'lit':''}`,children:[\"\\uD83D\\uDFE2\",validationSummary.info>0&&/*#__PURE__*/_jsx(\"span\",{className:\"indicator-badge\",children:validationSummary.info})]})]}),/*#__PURE__*/_jsx(\"button\",{className:`save-btn ${!hasChanges||!validationSummary.canSave?'disabled':''}`,onClick:handleSave,disabled:!hasChanges||!hasWriteAccess,title:!hasChanges?'No changes to save':!hasWriteAccess?'Write access required':!validationSummary.canSave?'Fix validation errors first':'Save changes to repository',children:\"\\uD83D\\uDCBE Save\"}),/*#__PURE__*/_jsx(\"span\",{className:`expand-icon ${isExpanded?'expanded':''}`,children:\"\\u25BC\"})]})]}),isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"status-content\",children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading-spinner\",children:\"\\u23F3\"}),\"Loading staging ground...\"]}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-icon\",children:\"\\u26A0\\uFE0F\"}),error]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCC1 Changed Files\"}),hasChanges?/*#__PURE__*/_jsxs(\"div\",{className:\"changed-files\",children:[formatFileList().map((file,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"file-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"file-icon\",children:\"\\uD83D\\uDCC4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"file-path\",children:file.path})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"file-size\",children:[(file.size/1024).toFixed(1),\" KB\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"file-time\",children:new Date(file.lastModified).toLocaleTimeString()}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-file-btn\",onClick:e=>{e.stopPropagation();handleRemoveFile(file.path);},title:`Remove ${file.path} from staging`,children:\"\\uD83D\\uDDD1\\uFE0F\"})]})]},index)),/*#__PURE__*/_jsx(\"div\",{className:\"file-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"action-btn secondary small\",onClick:handleClearChanges,children:\"\\uD83D\\uDDD1\\uFE0F Clear All\"})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-changes\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No changes in staging ground\"}),/*#__PURE__*/_jsx(\"p\",{className:\"help-text\",children:\"Changes made through DAK component editors will appear here before being saved to the repository.\"})]})]}),validation&&hasChanges&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDEA6 Validation Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"validation-summary-detailed\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"validation-counts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`count-item error ${validationSummary.error===0?'clean':'has-issues'}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"count-icon\",children:\"\\uD83D\\uDD34\"}),/*#__PURE__*/_jsx(\"span\",{className:\"count-number\",children:validationSummary.error}),/*#__PURE__*/_jsx(\"span\",{className:\"count-label\",children:\"Errors\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`count-item warning ${validationSummary.warning===0?'clean':'has-issues'}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"count-icon\",children:\"\\uD83D\\uDFE1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"count-number\",children:validationSummary.warning}),/*#__PURE__*/_jsx(\"span\",{className:\"count-label\",children:\"Warnings\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`count-item info ${validationSummary.info===0?'clean':'has-issues'}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"count-icon\",children:\"\\uD83D\\uDFE2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"count-number\",children:validationSummary.info}),/*#__PURE__*/_jsx(\"span\",{className:\"count-label\",children:\"Info\"})]})]}),!validationSummary.canSave&&/*#__PURE__*/_jsxs(\"div\",{className:\"validation-blocking\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"blocking-icon\",children:\"\\uD83D\\uDEAB\"}),/*#__PURE__*/_jsx(\"span\",{className:\"blocking-text\",children:\"Cannot save due to validation errors. Fix errors or enable override in save dialog.\"})]})]})]}),hasChanges&&stagingGround.message&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u270D\\uFE0F Commit Message\"}),/*#__PURE__*/_jsx(\"div\",{className:\"commit-preview\",children:/*#__PURE__*/_jsx(\"p\",{children:stagingGround.message})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"status-section\",children:/*#__PURE__*/_jsx(CommitsSlider,{repository:repository,selectedBranch:selectedBranch})}),/*#__PURE__*/_jsx(\"div\",{className:\"status-section\",children:/*#__PURE__*/_jsx(GitHubActionsIntegration,{repository:repository,selectedBranch:selectedBranch,hasWriteAccess:hasWriteAccess})}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u26A1 Quick Actions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"quick-actions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quick-action-group\",children:[/*#__PURE__*/_jsxs(\"a\",{href:`https://github.com/${owner}/${repoName}/commits/${branch}`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"quick-link\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"link-icon\",children:\"\\uD83D\\uDCC8\"}),\"Recent Commits\",/*#__PURE__*/_jsx(\"span\",{className:\"external-indicator\",children:\"\\u2197\"})]}),(()=>{const lastCommit=formatLastCommit();return lastCommit?/*#__PURE__*/_jsx(\"div\",{className:\"last-commit\",children:/*#__PURE__*/_jsxs(\"a\",{href:lastCommit.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"commit-link\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"commit-sha\",children:lastCommit.sha}),/*#__PURE__*/_jsx(\"span\",{className:\"commit-message\",children:lastCommit.message}),/*#__PURE__*/_jsxs(\"span\",{className:\"commit-meta\",children:[\"by \",lastCommit.author,\" on \",lastCommit.date,\" at \",lastCommit.time]})]})}):repositoryStats.statsLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"last-commit loading\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading-spinner\",children:\"\\u23F3\"}),\"Loading recent commits...\"]}):null;})()]}),/*#__PURE__*/_jsxs(\"a\",{href:`https://github.com/${owner}/${repoName}/pulls`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"quick-link\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"link-icon\",children:\"\\uD83D\\uDD04\"}),\"Pull Requests\",repositoryStats.openPullRequestsCount>0&&!repositoryStats.statsLoading&&/*#__PURE__*/_jsx(\"span\",{className:\"notification-badge pr-badge\",children:repositoryStats.openPullRequestsCount}),/*#__PURE__*/_jsx(\"span\",{className:\"external-indicator\",children:\"\\u2197\"})]}),/*#__PURE__*/_jsxs(\"a\",{href:`https://github.com/${owner}/${repoName}/issues`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"quick-link\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"link-icon\",children:\"\\uD83D\\uDC1B\"}),\"Issues\",repositoryStats.openIssuesCount>0&&!repositoryStats.statsLoading&&/*#__PURE__*/_jsx(\"span\",{className:\"notification-badge issue-badge\",children:repositoryStats.openIssuesCount}),/*#__PURE__*/_jsx(\"span\",{className:\"external-indicator\",children:\"\\u2197\"})]}),/*#__PURE__*/_jsxs(\"a\",{href:`https://github.com/${owner}/${repoName}/actions`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"quick-link\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"link-icon\",children:\"\\u26A1\"}),\"GitHub Actions\",/*#__PURE__*/_jsx(\"span\",{className:\"external-indicator\",children:\"\\u2197\"})]})]}),repositoryStats.statsError&&/*#__PURE__*/_jsxs(\"div\",{className:\"stats-error\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-icon\",children:\"\\u26A0\\uFE0F\"}),repositoryStats.statsError]})]})]})}),/*#__PURE__*/_jsx(SaveDialog,{isOpen:showSaveDialog,onClose:()=>setShowSaveDialog(false),stagingGround:stagingGround,validation:validation,repository:repository,selectedBranch:selectedBranch,hasWriteAccess:hasWriteAccess,onSaveSuccess:handleSaveSuccess})]});};export default DAKStatusBox;","map":{"version":3,"names":["React","useState","useEffect","useCallback","stagingGroundService","dakComplianceService","githubService","SaveDialog","CommitsSlider","GitHubActionsIntegration","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DAKStatusBox","_ref","_repository$owner","repository","selectedBranch","hasWriteAccess","profile","isExpanded","setIsExpanded","stagingGround","setStagingGround","validation","setValidation","loading","setLoading","error","setError","showSaveDialog","setShowSaveDialog","repositoryStats","setRepositoryStats","recentCommits","openPullRequestsCount","openIssuesCount","statsLoading","statsError","owner","login","full_name","split","repoName","name","branch","default_branch","loadRepositoryStats","isAuth","prev","stats","getRepositoryStats","err","console","loadStagingGroundData","currentStagingGround","getStagingGround","files","length","validateStagingGround","initialize","unsubscribe","addListener","updatedStagingGround","stagingGroundData","validationResult","handleToggle","handleSave","handleSaveSuccess","result","clearStagingGround","alert","sha","substring","handleClearChanges","window","confirm","handleRemoveFile","filePath","removeFile","getValidationSummary","warning","info","canSave","formatFileList","map","file","path","size","Blob","content","lastModified","timestamp","formatLastCommit","lastCommit","commitDate","Date","author","date","shortSha","shortMessage","message","displayMessage","toLocaleDateString","time","toLocaleTimeString","hour","minute","url","html_url","validationSummary","hasChanges","filesCount","className","children","onClick","disabled","title","index","toFixed","e","stopPropagation","href","target","rel","isOpen","onClose","onSaveSuccess"],"sources":["/home/runner/work/sgex/sgex/src/components/DAKStatusBox.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport stagingGroundService from '../services/stagingGroundService';\nimport dakComplianceService from '../services/dakComplianceService';\nimport githubService from '../services/githubService';\nimport SaveDialog from './SaveDialog';\nimport CommitsSlider from './CommitsSlider';\nimport GitHubActionsIntegration from './GitHubActionsIntegration';\nimport './DAKStatusBox.css';\n\nconst DAKStatusBox = ({ repository, selectedBranch, hasWriteAccess, profile }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [stagingGround, setStagingGround] = useState(null);\n  const [validation, setValidation] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n  const [repositoryStats, setRepositoryStats] = useState({\n    recentCommits: [],\n    openPullRequestsCount: 0,\n    openIssuesCount: 0,\n    statsLoading: false,\n    statsError: null\n  });\n\n  const owner = repository.owner?.login || repository.full_name.split('/')[0];\n  const repoName = repository.name;\n  const branch = selectedBranch || repository.default_branch || 'main';\n\n  // Load repository statistics\n  const loadRepositoryStats = useCallback(async () => {\n    if (!githubService.isAuth()) {\n      return;\n    }\n\n    setRepositoryStats(prev => ({ ...prev, statsLoading: true, statsError: null }));\n\n    try {\n      const stats = await githubService.getRepositoryStats(owner, repoName, branch);\n      setRepositoryStats({\n        recentCommits: stats.recentCommits,\n        openPullRequestsCount: stats.openPullRequestsCount,\n        openIssuesCount: stats.openIssuesCount,\n        statsLoading: false,\n        statsError: null\n      });\n    } catch (err) {\n      console.error('Error loading repository stats:', err);\n      setRepositoryStats(prev => ({\n        ...prev,\n        statsLoading: false,\n        statsError: 'Failed to load repository statistics'\n      }));\n    }\n  }, [owner, repoName, branch]);\n\n  // Load staging ground data\n  const loadStagingGroundData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const currentStagingGround = stagingGroundService.getStagingGround();\n      setStagingGround(currentStagingGround);\n      \n      if (currentStagingGround.files.length > 0) {\n        await validateStagingGround(currentStagingGround);\n      }\n    } catch (err) {\n      setError('Failed to load staging ground data');\n      console.error('Error loading staging ground:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Initialize staging ground service\n  useEffect(() => {\n    if (repository && selectedBranch) {\n      stagingGroundService.initialize(repository, selectedBranch);\n      loadStagingGroundData();\n      loadRepositoryStats();\n\n      // Subscribe to staging ground changes\n      const unsubscribe = stagingGroundService.addListener((updatedStagingGround) => {\n        setStagingGround(updatedStagingGround);\n        validateStagingGround(updatedStagingGround);\n      });\n\n      return unsubscribe;\n    }\n  }, [repository, selectedBranch, loadStagingGroundData, loadRepositoryStats]);\n\n  // Validate staging ground\n  const validateStagingGround = async (stagingGroundData) => {\n    if (!stagingGroundData || stagingGroundData.files.length === 0) {\n      setValidation(null);\n      return;\n    }\n\n    try {\n      const validationResult = await dakComplianceService.validateStagingGround(stagingGroundData);\n      setValidation(validationResult);\n    } catch (err) {\n      console.error('Error validating staging ground:', err);\n      setValidation(null);\n    }\n  };\n\n  // Handle toggle expansion\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // Handle save button click\n  const handleSave = () => {\n    setShowSaveDialog(true);\n  };\n\n  // Handle successful save\n  const handleSaveSuccess = (result) => {\n    setShowSaveDialog(false);\n    \n    // Clear staging ground after successful save\n    stagingGroundService.clearStagingGround();\n    \n    // Show success message\n    alert(`Changes saved successfully! Commit: ${result.sha.substring(0, 7)}`);\n  };\n\n  // Handle clearing staging ground\n  const handleClearChanges = () => {\n    if (window.confirm('Are you sure you want to discard all changes? This cannot be undone.')) {\n      stagingGroundService.clearStagingGround();\n    }\n  };\n\n  // Handle removing individual file\n  const handleRemoveFile = (filePath) => {\n    if (window.confirm(`Are you sure you want to remove \"${filePath}\" from staging? This cannot be undone.`)) {\n      stagingGroundService.removeFile(filePath);\n    }\n  };\n\n  // Get validation summary for display\n  const getValidationSummary = () => {\n    if (!validation) {\n      return { error: 0, warning: 0, info: 0, canSave: true };\n    }\n    return dakComplianceService.getValidationSummary(validation);\n  };\n\n  // Format file list for display\n  const formatFileList = () => {\n    if (!stagingGround || !stagingGround.files) return [];\n    \n    return stagingGround.files.map(file => ({\n      path: file.path,\n      size: new Blob([file.content]).size,\n      lastModified: file.timestamp\n    }));\n  };\n\n  // Format the last commit for display\n  const formatLastCommit = () => {\n    if (!repositoryStats.recentCommits || repositoryStats.recentCommits.length === 0) {\n      return null;\n    }\n    \n    const lastCommit = repositoryStats.recentCommits[0];\n    const commitDate = new Date(lastCommit.author.date);\n    const shortSha = lastCommit.sha.substring(0, 7);\n    const shortMessage = lastCommit.message.split('\\n')[0].substring(0, 60);\n    const displayMessage = lastCommit.message.split('\\n')[0].length > 60 ? shortMessage + '...' : shortMessage;\n    \n    return {\n      sha: shortSha,\n      message: displayMessage,\n      author: lastCommit.author.name,\n      date: commitDate.toLocaleDateString(),\n      time: commitDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n      url: lastCommit.html_url\n    };\n  };\n\n  const validationSummary = getValidationSummary();\n  const hasChanges = stagingGround && stagingGround.files.length > 0;\n  const filesCount = stagingGround ? stagingGround.files.length : 0;\n\n  return (\n    <div className=\"dak-status-box\">\n      <div className=\"status-header\" onClick={handleToggle}>\n        <div className=\"status-title\">\n          <span className=\"status-icon\">📊</span>\n          <h3>Staging Ground</h3>\n          {hasChanges && (\n            <span className=\"files-badge\">\n              {filesCount} file{filesCount !== 1 ? 's' : ''}\n            </span>\n          )}\n          <span className=\"branch-indicator\">\n            {branch && <code>{branch}</code>}\n          </span>\n        </div>\n        <div className=\"status-indicators\">\n          {/* Validation stoplight */}\n          <div className=\"validation-stoplight\">\n            <div className={`stoplight-indicator error ${validationSummary.error === 0 ? 'lit' : ''}`}>\n              🔴\n              {validationSummary.error > 0 && (\n                <span className=\"indicator-badge\">{validationSummary.error}</span>\n              )}\n            </div>\n            <div className={`stoplight-indicator warning ${validationSummary.warning === 0 ? 'lit' : ''}`}>\n              🟡\n              {validationSummary.warning > 0 && (\n                <span className=\"indicator-badge\">{validationSummary.warning}</span>\n              )}\n            </div>\n            <div className={`stoplight-indicator info ${validationSummary.info === 0 ? 'lit' : ''}`}>\n              🟢\n              {validationSummary.info > 0 && (\n                <span className=\"indicator-badge\">{validationSummary.info}</span>\n              )}\n            </div>\n          </div>\n          \n          {/* Save button */}\n          <button\n            className={`save-btn ${!hasChanges || !validationSummary.canSave ? 'disabled' : ''}`}\n            onClick={handleSave}\n            disabled={!hasChanges || !hasWriteAccess}\n            title={\n              !hasChanges ? 'No changes to save' :\n              !hasWriteAccess ? 'Write access required' :\n              !validationSummary.canSave ? 'Fix validation errors first' :\n              'Save changes to repository'\n            }\n          >\n            💾 Save\n          </button>\n          \n          <span className={`expand-icon ${isExpanded ? 'expanded' : ''}`}>\n            ▼\n          </span>\n        </div>\n      </div>\n\n      {isExpanded && (\n        <div className=\"status-content\">\n          {loading ? (\n            <div className=\"loading-indicator\">\n              <span className=\"loading-spinner\">⏳</span>\n              Loading staging ground...\n            </div>\n          ) : error ? (\n            <div className=\"error-message\">\n              <span className=\"error-icon\">⚠️</span>\n              {error}\n            </div>\n          ) : (\n            <>\n              {/* Changed Files Section */}\n              <div className=\"status-section\">\n                <h4>📁 Changed Files</h4>\n                {hasChanges ? (\n                  <div className=\"changed-files\">\n                    {formatFileList().map((file, index) => (\n                      <div key={index} className=\"file-item\">\n                        <div className=\"file-info\">\n                          <span className=\"file-icon\">📄</span>\n                          <span className=\"file-path\">{file.path}</span>\n                        </div>\n                        <div className=\"file-meta\">\n                          <span className=\"file-size\">\n                            {(file.size / 1024).toFixed(1)} KB\n                          </span>\n                          <span className=\"file-time\">\n                            {new Date(file.lastModified).toLocaleTimeString()}\n                          </span>\n                          <button\n                            className=\"remove-file-btn\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleRemoveFile(file.path);\n                            }}\n                            title={`Remove ${file.path} from staging`}\n                          >\n                            🗑️\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                    <div className=\"file-actions\">\n                      <button\n                        className=\"action-btn secondary small\"\n                        onClick={handleClearChanges}\n                      >\n                        🗑️ Clear All\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"no-changes\">\n                    <p>No changes in staging ground</p>\n                    <p className=\"help-text\">\n                      Changes made through DAK component editors will appear here before being saved to the repository.\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              {/* Validation Results Section */}\n              {validation && hasChanges && (\n                <div className=\"status-section\">\n                  <h4>🚦 Validation Results</h4>\n                  <div className=\"validation-summary-detailed\">\n                    <div className=\"validation-counts\">\n                      <div className={`count-item error ${validationSummary.error === 0 ? 'clean' : 'has-issues'}`}>\n                        <span className=\"count-icon\">🔴</span>\n                        <span className=\"count-number\">{validationSummary.error}</span>\n                        <span className=\"count-label\">Errors</span>\n                      </div>\n                      <div className={`count-item warning ${validationSummary.warning === 0 ? 'clean' : 'has-issues'}`}>\n                        <span className=\"count-icon\">🟡</span>\n                        <span className=\"count-number\">{validationSummary.warning}</span>\n                        <span className=\"count-label\">Warnings</span>\n                      </div>\n                      <div className={`count-item info ${validationSummary.info === 0 ? 'clean' : 'has-issues'}`}>\n                        <span className=\"count-icon\">🟢</span>\n                        <span className=\"count-number\">{validationSummary.info}</span>\n                        <span className=\"count-label\">Info</span>\n                      </div>\n                    </div>\n                    \n                    {!validationSummary.canSave && (\n                      <div className=\"validation-blocking\">\n                        <span className=\"blocking-icon\">🚫</span>\n                        <span className=\"blocking-text\">\n                          Cannot save due to validation errors. Fix errors or enable override in save dialog.\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Commit Message Preview */}\n              {hasChanges && stagingGround.message && (\n                <div className=\"status-section\">\n                  <h4>✍️ Commit Message</h4>\n                  <div className=\"commit-preview\">\n                    <p>{stagingGround.message}</p>\n                  </div>\n                </div>\n              )}\n\n              {/* Commits Section */}\n              <div className=\"status-section\">\n                <CommitsSlider \n                  repository={repository}\n                  selectedBranch={selectedBranch}\n                />\n              </div>\n\n              {/* GitHub Actions Integration */}\n              <div className=\"status-section\">\n                <GitHubActionsIntegration\n                  repository={repository}\n                  selectedBranch={selectedBranch}\n                  hasWriteAccess={hasWriteAccess}\n                />\n              </div>\n\n              {/* Quick Actions */}\n              <div className=\"status-section\">\n                <h4>⚡ Quick Actions</h4>\n                <div className=\"quick-actions\">\n                  <div className=\"quick-action-group\">\n                    <a \n                      href={`https://github.com/${owner}/${repoName}/commits/${branch}`}\n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className=\"quick-link\"\n                    >\n                      <span className=\"link-icon\">📈</span>\n                      Recent Commits\n                      <span className=\"external-indicator\">↗</span>\n                    </a>\n                    {/* Last commit display */}\n                    {(() => {\n                      const lastCommit = formatLastCommit();\n                      return lastCommit ? (\n                        <div className=\"last-commit\">\n                          <a \n                            href={lastCommit.url}\n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"commit-link\"\n                          >\n                            <span className=\"commit-sha\">{lastCommit.sha}</span>\n                            <span className=\"commit-message\">{lastCommit.message}</span>\n                            <span className=\"commit-meta\">\n                              by {lastCommit.author} on {lastCommit.date} at {lastCommit.time}\n                            </span>\n                          </a>\n                        </div>\n                      ) : repositoryStats.statsLoading ? (\n                        <div className=\"last-commit loading\">\n                          <span className=\"loading-spinner\">⏳</span>\n                          Loading recent commits...\n                        </div>\n                      ) : null;\n                    })()}\n                  </div>\n                  \n                  <a \n                    href={`https://github.com/${owner}/${repoName}/pulls`}\n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"quick-link\"\n                  >\n                    <span className=\"link-icon\">🔄</span>\n                    Pull Requests\n                    {repositoryStats.openPullRequestsCount > 0 && !repositoryStats.statsLoading && (\n                      <span className=\"notification-badge pr-badge\">\n                        {repositoryStats.openPullRequestsCount}\n                      </span>\n                    )}\n                    <span className=\"external-indicator\">↗</span>\n                  </a>\n                  \n                  <a \n                    href={`https://github.com/${owner}/${repoName}/issues`}\n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"quick-link\"\n                  >\n                    <span className=\"link-icon\">🐛</span>\n                    Issues\n                    {repositoryStats.openIssuesCount > 0 && !repositoryStats.statsLoading && (\n                      <span className=\"notification-badge issue-badge\">\n                        {repositoryStats.openIssuesCount}\n                      </span>\n                    )}\n                    <span className=\"external-indicator\">↗</span>\n                  </a>\n                  \n                  <a \n                    href={`https://github.com/${owner}/${repoName}/actions`}\n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"quick-link\"\n                  >\n                    <span className=\"link-icon\">⚡</span>\n                    GitHub Actions\n                    <span className=\"external-indicator\">↗</span>\n                  </a>\n                </div>\n                \n                {repositoryStats.statsError && (\n                  <div className=\"stats-error\">\n                    <span className=\"error-icon\">⚠️</span>\n                    {repositoryStats.statsError}\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      )}\n\n      {/* Save Dialog */}\n      <SaveDialog\n        isOpen={showSaveDialog}\n        onClose={() => setShowSaveDialog(false)}\n        stagingGround={stagingGround}\n        validation={validation}\n        repository={repository}\n        selectedBranch={selectedBranch}\n        hasWriteAccess={hasWriteAccess}\n        onSaveSuccess={handleSaveSuccess}\n      />\n    </div>\n  );\n};\n\nexport default DAKStatusBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}