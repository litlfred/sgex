{"ast":null,"code":"import React from'react';import{useNavigate}from'react-router-dom';import{PageLayout}from'./framework';import'./TestDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TestDashboard=()=>{const navigate=useNavigate();// Mock data for testing\nconst mockProfile={login:'testuser',name:'Test User',avatar_url:'https://github.com/testuser.png',token:'mock_token'};const mockRepository={name:'test-dak-repo',full_name:'testorg/test-dak-repo',owner:{login:'testorg'},permissions:{push:false}// Simulate read-only access\n};const mockComponent={id:'business-processes',name:'Generic Business Processes and Workflows',description:'BPMN workflows and business process definitions that model clinical workflows and care pathways',icon:'ðŸ”„',type:'Level 2',color:'#d13438'};const dakComponents=[{id:'business-processes',name:'Generic Business Processes and Workflows',description:'BPMN workflows and business process definitions that model clinical workflows and care pathways',icon:'ðŸ”„',type:'Level 2',color:'#d13438',fileTypes:['BPMN','XML'],count:12},{id:'decision-support',name:'Decision-Support Logic',description:'DMN decision tables and clinical decision support rules that encode clinical logic',icon:'ðŸŽ¯',type:'Level 2',color:'#00bcf2',fileTypes:['DMN','XML'],count:8},{id:'indicators',name:'Program Indicators',description:'Performance indicators and measurement definitions for monitoring and evaluation',icon:'ðŸ“Š',type:'Level 2',color:'#498205',fileTypes:['Measure','Logic'],count:15},{id:'forms',name:'FHIR Questionnaires',description:'Structured forms and questionnaires for data collection',icon:'ðŸ“‹',type:'Level 3',color:'#881798',fileTypes:['Questionnaire','StructureMap'],count:24}];const handleComponentClick=component=>{// For business processes, navigate to selection page without permission check\nif(component.id==='business-processes'){navigate('/business-process-selection',{state:{profile:mockProfile,repository:mockRepository,component:mockComponent}});return;}// For other components, show alert for demo\nalert(`Would normally check permissions and navigate to ${component.name} editor`);};return/*#__PURE__*/_jsx(PageLayout,{pageName:\"test-dashboard\",children:/*#__PURE__*/_jsx(\"div\",{className:\"test-dashboard\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"breadcrumb\",children:/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:\"DAK Components (Test Mode)\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-intro\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Digital Adaptation Kit Components\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Select a component to test the new business process navigation.\",/*#__PURE__*/_jsx(\"strong\",{children:\"Click \\\"Generic Business Processes and Workflows\\\" to test the new selection flow!\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"components-grid\",children:dakComponents.map(component=>/*#__PURE__*/_jsxs(\"div\",{className:`component-card ${component.type.toLowerCase().replace(' ','-')} ${component.id==='business-processes'?'highlighted':''}`,onClick:()=>handleComponentClick(component),style:{'--component-color':component.color},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"component-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"component-icon\",style:{color:component.color},children:component.icon}),/*#__PURE__*/_jsx(\"div\",{className:\"component-badge\",children:/*#__PURE__*/_jsx(\"span\",{className:`level-badge ${component.type.toLowerCase().replace(' ','-')}`,children:component.type})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"component-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:component.name}),/*#__PURE__*/_jsx(\"p\",{children:component.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"component-meta\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-types\",children:component.fileTypes.map(type=>/*#__PURE__*/_jsx(\"span\",{className:\"file-type-tag\",children:type},type))}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-count\",children:[component.count,\" files\"]})]}),component.id==='business-processes'&&/*#__PURE__*/_jsx(\"div\",{className:\"demo-badge\",children:\"\\u2728 NEW NAVIGATION FLOW\"})]})]},component.id))})]})]})})});};export default TestDashboard;","map":{"version":3,"names":["React","useNavigate","PageLayout","jsx","_jsx","jsxs","_jsxs","TestDashboard","navigate","mockProfile","login","name","avatar_url","token","mockRepository","full_name","owner","permissions","push","mockComponent","id","description","icon","type","color","dakComponents","fileTypes","count","handleComponentClick","component","state","profile","repository","alert","pageName","children","className","map","toLowerCase","replace","onClick","style"],"sources":["/home/runner/work/sgex/sgex/src/components/TestDashboard.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { PageLayout } from './framework';\nimport './TestDashboard.css';\n\nconst TestDashboard = () => {\n  const navigate = useNavigate();\n\n  // Mock data for testing\n  const mockProfile = {\n    login: 'testuser',\n    name: 'Test User',\n    avatar_url: 'https://github.com/testuser.png',\n    token: 'mock_token'\n  };\n\n  const mockRepository = {\n    name: 'test-dak-repo',\n    full_name: 'testorg/test-dak-repo',\n    owner: { login: 'testorg' },\n    permissions: { push: false } // Simulate read-only access\n  };\n\n  const mockComponent = {\n    id: 'business-processes',\n    name: 'Generic Business Processes and Workflows',\n    description: 'BPMN workflows and business process definitions that model clinical workflows and care pathways',\n    icon: 'ðŸ”„',\n    type: 'Level 2',\n    color: '#d13438'\n  };\n\n  const dakComponents = [\n    {\n      id: 'business-processes',\n      name: 'Generic Business Processes and Workflows',\n      description: 'BPMN workflows and business process definitions that model clinical workflows and care pathways',\n      icon: 'ðŸ”„',\n      type: 'Level 2',\n      color: '#d13438',\n      fileTypes: ['BPMN', 'XML'],\n      count: 12\n    },\n    {\n      id: 'decision-support',\n      name: 'Decision-Support Logic',\n      description: 'DMN decision tables and clinical decision support rules that encode clinical logic',\n      icon: 'ðŸŽ¯',\n      type: 'Level 2',\n      color: '#00bcf2',\n      fileTypes: ['DMN', 'XML'],\n      count: 8\n    },\n    {\n      id: 'indicators',\n      name: 'Program Indicators',\n      description: 'Performance indicators and measurement definitions for monitoring and evaluation',\n      icon: 'ðŸ“Š',\n      type: 'Level 2',\n      color: '#498205',\n      fileTypes: ['Measure', 'Logic'],\n      count: 15\n    },\n    {\n      id: 'forms',\n      name: 'FHIR Questionnaires',\n      description: 'Structured forms and questionnaires for data collection',\n      icon: 'ðŸ“‹',\n      type: 'Level 3',\n      color: '#881798',\n      fileTypes: ['Questionnaire', 'StructureMap'],\n      count: 24\n    }\n  ];\n\n  const handleComponentClick = (component) => {\n    // For business processes, navigate to selection page without permission check\n    if (component.id === 'business-processes') {\n      navigate('/business-process-selection', {\n        state: {\n          profile: mockProfile,\n          repository: mockRepository,\n          component: mockComponent\n        }\n      });\n      return;\n    }\n\n    // For other components, show alert for demo\n    alert(`Would normally check permissions and navigate to ${component.name} editor`);\n  };\n\n  return (\n    <PageLayout pageName=\"test-dashboard\">\n      <div className=\"test-dashboard\">\n        <div className=\"dashboard-content\">\n        <div className=\"breadcrumb\">\n          <span className=\"breadcrumb-current\">DAK Components (Test Mode)</span>\n        </div>\n\n        <div className=\"dashboard-main\">\n          <div className=\"dashboard-intro\">\n            <h2>Digital Adaptation Kit Components</h2>\n            <p>\n              Select a component to test the new business process navigation. \n              <strong>Click \"Generic Business Processes and Workflows\" to test the new selection flow!</strong>\n            </p>\n          </div>\n\n          <div className=\"components-grid\">\n            {dakComponents.map((component) => (\n              <div \n                key={component.id}\n                className={`component-card ${component.type.toLowerCase().replace(' ', '-')} ${component.id === 'business-processes' ? 'highlighted' : ''}`}\n                onClick={() => handleComponentClick(component)}\n                style={{ '--component-color': component.color }}\n              >\n                <div className=\"component-header\">\n                  <div className=\"component-icon\" style={{ color: component.color }}>\n                    {component.icon}\n                  </div>\n                  <div className=\"component-badge\">\n                    <span className={`level-badge ${component.type.toLowerCase().replace(' ', '-')}`}>\n                      {component.type}\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"component-content\">\n                  <h3>{component.name}</h3>\n                  <p>{component.description}</p>\n                  \n                  <div className=\"component-meta\">\n                    <div className=\"file-types\">\n                      {component.fileTypes.map((type) => (\n                        <span key={type} className=\"file-type-tag\">{type}</span>\n                      ))}\n                    </div>\n                    <div className=\"file-count\">\n                      {component.count} files\n                    </div>\n                  </div>\n\n                  {component.id === 'business-processes' && (\n                    <div className=\"demo-badge\">\n                      âœ¨ NEW NAVIGATION FLOW\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      </div>\n    </PageLayout>\n  );\n};\n\nexport default TestDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}