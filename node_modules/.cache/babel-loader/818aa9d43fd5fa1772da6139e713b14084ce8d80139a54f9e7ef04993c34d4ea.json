{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../../util/ModelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function EventBasedGatewayBehavior(eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Remove incoming sequence flows of event-based target when creating\n   * sequence flow.\n   *\n   * 1. If source is event-based gateway remove all incoming sequence flows\n   * 2. If source is not event-based gateway remove all incoming sequence flows\n   * whose source is event-based gateway\n   */\n  this.preExecuted('connection.create', function (event) {\n    var context = event.context,\n      connection = context.connection,\n      source = context.source,\n      target = context.target,\n      hints = context.hints;\n    if (hints && hints.createElementsBehavior === false) {\n      return;\n    }\n    if (!isSequenceFlow(connection)) {\n      return;\n    }\n    var sequenceFlows = [];\n    if (is(source, 'bpmn:EventBasedGateway')) {\n      sequenceFlows = target.incoming.filter(flow => flow !== connection && isSequenceFlow(flow));\n    } else {\n      sequenceFlows = target.incoming.filter(flow => flow !== connection && isSequenceFlow(flow) && is(flow.source, 'bpmn:EventBasedGateway'));\n    }\n    sequenceFlows.forEach(function (sequenceFlow) {\n      modeling.removeConnection(sequenceFlow);\n    });\n  });\n\n  /**\n   * Remove incoming sequence flows of event-based targets when replacing source\n   * with event-based gateway.\n   */\n  this.preExecuted('shape.replace', function (event) {\n    var context = event.context,\n      newShape = context.newShape;\n    if (!is(newShape, 'bpmn:EventBasedGateway')) {\n      return;\n    }\n    var targets = newShape.outgoing.filter(isSequenceFlow).reduce(function (targets, sequenceFlow) {\n      if (!targets.includes(sequenceFlow.target)) {\n        return targets.concat(sequenceFlow.target);\n      }\n      return targets;\n    }, []);\n    targets.forEach(function (target) {\n      target.incoming.filter(isSequenceFlow).forEach(function (sequenceFlow) {\n        const sequenceFlowsFromNewShape = target.incoming.filter(isSequenceFlow).filter(function (sequenceFlow) {\n          return sequenceFlow.source === newShape;\n        });\n        if (sequenceFlow.source !== newShape || sequenceFlowsFromNewShape.length > 1) {\n          modeling.removeConnection(sequenceFlow);\n        }\n      });\n    });\n  });\n}\nEventBasedGatewayBehavior.$inject = ['eventBus', 'modeling'];\ninherits(EventBasedGatewayBehavior, CommandInterceptor);\n\n// helpers //////////\n\nfunction isSequenceFlow(connection) {\n  return is(connection, 'bpmn:SequenceFlow');\n}","map":{"version":3,"names":["inherits","CommandInterceptor","is","EventBasedGatewayBehavior","eventBus","modeling","call","preExecuted","event","context","connection","source","target","hints","createElementsBehavior","isSequenceFlow","sequenceFlows","incoming","filter","flow","forEach","sequenceFlow","removeConnection","newShape","targets","outgoing","reduce","includes","concat","sequenceFlowsFromNewShape","length","$inject"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/EventBasedGatewayBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function EventBasedGatewayBehavior(eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Remove incoming sequence flows of event-based target when creating\n   * sequence flow.\n   *\n   * 1. If source is event-based gateway remove all incoming sequence flows\n   * 2. If source is not event-based gateway remove all incoming sequence flows\n   * whose source is event-based gateway\n   */\n  this.preExecuted('connection.create', function(event) {\n    var context = event.context,\n        connection = context.connection,\n        source = context.source,\n        target = context.target,\n        hints = context.hints;\n\n    if (hints && hints.createElementsBehavior === false) {\n      return;\n    }\n\n    if (!isSequenceFlow(connection)) {\n      return;\n    }\n\n    var sequenceFlows = [];\n\n    if (is(source, 'bpmn:EventBasedGateway')) {\n      sequenceFlows = target.incoming\n        .filter(flow =>\n          flow !== connection &&\n          isSequenceFlow(flow)\n        );\n    } else {\n      sequenceFlows = target.incoming\n        .filter(flow =>\n          flow !== connection &&\n          isSequenceFlow(flow) &&\n          is(flow.source, 'bpmn:EventBasedGateway')\n        );\n    }\n\n    sequenceFlows.forEach(function(sequenceFlow) {\n      modeling.removeConnection(sequenceFlow);\n    });\n  });\n\n  /**\n   * Remove incoming sequence flows of event-based targets when replacing source\n   * with event-based gateway.\n   */\n  this.preExecuted('shape.replace', function(event) {\n    var context = event.context,\n        newShape = context.newShape;\n\n    if (!is(newShape, 'bpmn:EventBasedGateway')) {\n      return;\n    }\n\n    var targets = newShape.outgoing.filter(isSequenceFlow)\n      .reduce(function(targets, sequenceFlow) {\n        if (!targets.includes(sequenceFlow.target)) {\n          return targets.concat(sequenceFlow.target);\n        }\n\n        return targets;\n      }, []);\n\n    targets.forEach(function(target) {\n      target.incoming.filter(isSequenceFlow).forEach(function(sequenceFlow) {\n        const sequenceFlowsFromNewShape = target.incoming.filter(isSequenceFlow).filter(function(sequenceFlow) {\n          return sequenceFlow.source === newShape;\n        });\n\n        if (sequenceFlow.source !== newShape || sequenceFlowsFromNewShape.length > 1) {\n          modeling.removeConnection(sequenceFlow);\n        }\n      });\n    });\n  });\n}\n\nEventBasedGatewayBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n\ninherits(EventBasedGatewayBehavior, CommandInterceptor);\n\n// helpers //////////\n\nfunction isSequenceFlow(connection) {\n  return is(connection, 'bpmn:SequenceFlow');\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}