{"ast":null,"code":"import { add as collectionAdd, indexOf as collectionIdx } from '../../../util/Collections';\nimport { saveClear } from '../../../util/Removal';\n\n/**\n * @typedef {import('../../../core/Canvas').default} Canvas\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A handler that implements reversible deletion of Connections.\n */\nexport default function DeleteConnectionHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\nDeleteConnectionHandler.$inject = ['canvas', 'modeling'];\n\n/**\n * - Remove connections\n */\nDeleteConnectionHandler.prototype.preExecute = function (context) {\n  var modeling = this._modeling;\n  var connection = context.connection;\n\n  // remove connections\n  saveClear(connection.incoming, function (connection) {\n    // To make sure that the connection isn't removed twice\n    // For example if a container is removed\n    modeling.removeConnection(connection, {\n      nested: true\n    });\n  });\n  saveClear(connection.outgoing, function (connection) {\n    modeling.removeConnection(connection, {\n      nested: true\n    });\n  });\n};\nDeleteConnectionHandler.prototype.execute = function (context) {\n  var connection = context.connection,\n    parent = connection.parent;\n  context.parent = parent;\n\n  // remember containment\n  context.parentIndex = collectionIdx(parent.children, connection);\n  context.source = connection.source;\n  context.target = connection.target;\n  this._canvas.removeConnection(connection);\n  connection.source = null;\n  connection.target = null;\n  return connection;\n};\n\n/**\n * Command revert implementation.\n */\nDeleteConnectionHandler.prototype.revert = function (context) {\n  var connection = context.connection,\n    parent = context.parent,\n    parentIndex = context.parentIndex;\n  connection.source = context.source;\n  connection.target = context.target;\n\n  // restore containment\n  collectionAdd(parent.children, connection, parentIndex);\n  this._canvas.addConnection(connection, parent);\n  return connection;\n};","map":{"version":3,"names":["add","collectionAdd","indexOf","collectionIdx","saveClear","DeleteConnectionHandler","canvas","modeling","_canvas","_modeling","$inject","prototype","preExecute","context","connection","incoming","removeConnection","nested","outgoing","execute","parent","parentIndex","children","source","target","revert","addConnection"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/modeling/cmd/DeleteConnectionHandler.js"],"sourcesContent":["import {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../../util/Collections';\n\nimport { saveClear } from '../../../util/Removal';\n\n/**\n * @typedef {import('../../../core/Canvas').default} Canvas\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A handler that implements reversible deletion of Connections.\n */\nexport default function DeleteConnectionHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nDeleteConnectionHandler.$inject = [\n  'canvas',\n  'modeling'\n];\n\n\n/**\n * - Remove connections\n */\nDeleteConnectionHandler.prototype.preExecute = function(context) {\n\n  var modeling = this._modeling;\n\n  var connection = context.connection;\n\n  // remove connections\n  saveClear(connection.incoming, function(connection) {\n\n    // To make sure that the connection isn't removed twice\n    // For example if a container is removed\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n  saveClear(connection.outgoing, function(connection) {\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n};\n\n\nDeleteConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      parent = connection.parent;\n\n  context.parent = parent;\n\n  // remember containment\n  context.parentIndex = collectionIdx(parent.children, connection);\n\n  context.source = connection.source;\n  context.target = connection.target;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n\n  return connection;\n};\n\n/**\n * Command revert implementation.\n */\nDeleteConnectionHandler.prototype.revert = function(context) {\n\n  var connection = context.connection,\n      parent = context.parent,\n      parentIndex = context.parentIndex;\n\n  connection.source = context.source;\n  connection.target = context.target;\n\n  // restore containment\n  collectionAdd(parent.children, connection, parentIndex);\n\n  this._canvas.addConnection(connection, parent);\n\n  return connection;\n};\n"],"mappings":"AAAA,SACEA,GAAG,IAAIC,aAAa,EACpBC,OAAO,IAAIC,aAAa,QACnB,2BAA2B;AAElC,SAASC,SAAS,QAAQ,uBAAuB;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,SAASC,uBAAuBA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EAChE,IAAI,CAACC,OAAO,GAAGF,MAAM;EACrB,IAAI,CAACG,SAAS,GAAGF,QAAQ;AAC3B;AAEAF,uBAAuB,CAACK,OAAO,GAAG,CAChC,QAAQ,EACR,UAAU,CACX;;AAGD;AACA;AACA;AACAL,uBAAuB,CAACM,SAAS,CAACC,UAAU,GAAG,UAASC,OAAO,EAAE;EAE/D,IAAIN,QAAQ,GAAG,IAAI,CAACE,SAAS;EAE7B,IAAIK,UAAU,GAAGD,OAAO,CAACC,UAAU;;EAEnC;EACAV,SAAS,CAACU,UAAU,CAACC,QAAQ,EAAE,UAASD,UAAU,EAAE;IAElD;IACA;IACAP,QAAQ,CAACS,gBAAgB,CAACF,UAAU,EAAE;MAAEG,MAAM,EAAE;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC;EAEFb,SAAS,CAACU,UAAU,CAACI,QAAQ,EAAE,UAASJ,UAAU,EAAE;IAClDP,QAAQ,CAACS,gBAAgB,CAACF,UAAU,EAAE;MAAEG,MAAM,EAAE;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC;AAEJ,CAAC;AAGDZ,uBAAuB,CAACM,SAAS,CAACQ,OAAO,GAAG,UAASN,OAAO,EAAE;EAE5D,IAAIC,UAAU,GAAGD,OAAO,CAACC,UAAU;IAC/BM,MAAM,GAAGN,UAAU,CAACM,MAAM;EAE9BP,OAAO,CAACO,MAAM,GAAGA,MAAM;;EAEvB;EACAP,OAAO,CAACQ,WAAW,GAAGlB,aAAa,CAACiB,MAAM,CAACE,QAAQ,EAAER,UAAU,CAAC;EAEhED,OAAO,CAACU,MAAM,GAAGT,UAAU,CAACS,MAAM;EAClCV,OAAO,CAACW,MAAM,GAAGV,UAAU,CAACU,MAAM;EAElC,IAAI,CAAChB,OAAO,CAACQ,gBAAgB,CAACF,UAAU,CAAC;EAEzCA,UAAU,CAACS,MAAM,GAAG,IAAI;EACxBT,UAAU,CAACU,MAAM,GAAG,IAAI;EAExB,OAAOV,UAAU;AACnB,CAAC;;AAED;AACA;AACA;AACAT,uBAAuB,CAACM,SAAS,CAACc,MAAM,GAAG,UAASZ,OAAO,EAAE;EAE3D,IAAIC,UAAU,GAAGD,OAAO,CAACC,UAAU;IAC/BM,MAAM,GAAGP,OAAO,CAACO,MAAM;IACvBC,WAAW,GAAGR,OAAO,CAACQ,WAAW;EAErCP,UAAU,CAACS,MAAM,GAAGV,OAAO,CAACU,MAAM;EAClCT,UAAU,CAACU,MAAM,GAAGX,OAAO,CAACW,MAAM;;EAElC;EACAvB,aAAa,CAACmB,MAAM,CAACE,QAAQ,EAAER,UAAU,EAAEO,WAAW,CAAC;EAEvD,IAAI,CAACb,OAAO,CAACkB,aAAa,CAACZ,UAAU,EAAEM,MAAM,CAAC;EAE9C,OAAON,UAAU;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}