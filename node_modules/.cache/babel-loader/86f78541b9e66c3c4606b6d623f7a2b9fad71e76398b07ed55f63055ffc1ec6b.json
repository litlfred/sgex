{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import helpContentService from'../services/helpContentService';import cacheManagementService from'../services/cacheManagementService';import HelpModal from'./HelpModal';import LanguageSelector from'./LanguageSelector';import useThemeImage from'../hooks/useThemeImage';import'./ContextualHelpMascot.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ContextualHelpMascot=_ref=>{let{pageId,helpContent,position='bottom-right',contextData={},notificationBadge=false}=_ref;const{t,i18n}=useTranslation();const[showHelp,setShowHelp]=useState(false);const[helpSticky,setHelpSticky]=useState(false);const[selectedHelpTopic,setSelectedHelpTopic]=useState(null);const[isDarkMode,setIsDarkMode]=useState(true);const[cacheClearing,setCacheClearing]=useState(false);const[cacheCleared,setCacheCleared]=useState(false);// Theme-aware mascot image\nconst mascotImage=useThemeImage('sgex-mascot.png');// Load theme preference from localStorage on mount\nuseEffect(()=>{const savedTheme=localStorage.getItem('sgex-theme');if(savedTheme){setIsDarkMode(savedTheme==='dark');}else{// Check if user explicitly prefers light mode\nlet prefersLight=false;try{if(window.matchMedia){prefersLight=window.matchMedia('(prefers-color-scheme: light)').matches;}}catch(e){// Fallback for test environments\nprefersLight=false;}// Default to dark mode unless user explicitly prefers light\nsetIsDarkMode(!prefersLight);}},[]);// Update body class when theme changes\nuseEffect(()=>{document.body.className=isDarkMode?'theme-dark':'theme-light';localStorage.setItem('sgex-theme',isDarkMode?'dark':'light');},[isDarkMode]);// Update document direction for RTL languages\nuseEffect(()=>{const currentLang=i18n.language||'en';const isRTL=['ar','he','fa'].includes(currentLang);document.documentElement.dir=isRTL?'rtl':'ltr';document.documentElement.lang=currentLang;},[i18n.language]);const toggleTheme=()=>{setIsDarkMode(!isDarkMode);};// Get help topics for the page\nconst helpTopics=pageId?helpContentService.getHelpTopicsForPage(pageId,contextData):[];const handleMouseEnter=()=>{if(!helpSticky){setShowHelp(true);}};const handleMouseLeave=()=>{if(!helpSticky){setShowHelp(false);}};const handleClick=()=>{setHelpSticky(!helpSticky);setShowHelp(!helpSticky||showHelp);};const handleCloseHelp=()=>{setShowHelp(false);setHelpSticky(false);};const handleHelpTopicClick=topic=>{// If it's an action type, execute the action immediately\nif(topic.type==='action'&&topic.action){topic.action();setShowHelp(false);setHelpSticky(false);}else{// For slideshow and other types, show in modal\nsetSelectedHelpTopic(topic);setShowHelp(false);setHelpSticky(false);}};const handleCloseModal=()=>{setSelectedHelpTopic(null);};const handleFlushCache=async()=>{if(cacheClearing)return;// Prevent multiple clicks\nsetCacheClearing(true);setCacheCleared(false);try{const success=cacheManagementService.clearAllCache();if(success){setCacheCleared(true);// Auto-hide success message after 3 seconds\nsetTimeout(()=>{setCacheCleared(false);},3000);}else{console.error('Failed to clear cache');alert('Failed to clear cache. Please try again.');}}catch(error){console.error('Error clearing cache:',error);alert('Error clearing cache. Please try again.');}finally{setCacheClearing(false);}};// Always render the mascot now since we have universal topics\n// if (!hasTopics) {\n//   return null;\n// }\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"contextual-help-mascot \".concat(position),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mascot-container\",onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave,onClick:handleClick,children:[/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Helper\",className:\"mascot-icon\"}),notificationBadge&&/*#__PURE__*/_jsx(\"div\",{className:\"notification-badge\",children:\"!\"}),!notificationBadge&&/*#__PURE__*/_jsx(\"div\",{className:\"question-bubble \".concat(showHelp?'help-open':''),children:\"?\"})]}),showHelp&&/*#__PURE__*/_jsxs(\"div\",{className:\"help-thought-bubble\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bubble-content\",children:[helpSticky&&/*#__PURE__*/_jsx(\"button\",{className:\"close-bubble-btn\",onClick:handleCloseHelp,\"aria-label\":\"Close help\",children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"div\",{className:\"help-text\",children:helpTopics.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"help-topics-list\",children:[/*#__PURE__*/_jsx(\"h4\",{children:t('help.title')}),helpTopics.map(topic=>/*#__PURE__*/_jsxs(\"button\",{className:\"help-topic-btn\",onClick:()=>handleHelpTopicClick(topic),children:[topic.badge&&/*#__PURE__*/_jsx(\"img\",{src:topic.badge,alt:\"\",className:\"help-topic-badge\"}),/*#__PURE__*/_jsx(\"span\",{className:\"help-topic-title\",children:topic.title})]},topic.id)),/*#__PURE__*/_jsx(\"div\",{className:\"help-menu-divider\"}),/*#__PURE__*/_jsx(LanguageSelector,{className:\"help-menu-language-selector\"}),/*#__PURE__*/_jsx(\"div\",{className:\"help-menu-divider\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"help-theme-toggle-btn \".concat(isDarkMode?'dark':'light'),onClick:toggleTheme,\"aria-label\":t('theme.toggle'),title:t('theme.toggle'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"theme-icon\",children:isDarkMode?'🌞':'🌙'}),/*#__PURE__*/_jsx(\"span\",{className:\"theme-label\",children:isDarkMode?t('theme.switchToLight','Light Mode'):t('theme.switchToDark','Dark Mode')})]}),/*#__PURE__*/_jsx(\"div\",{className:\"help-menu-divider\"}),/*#__PURE__*/_jsx(\"div\",{className:\"help-menu-cache-section\",children:cacheCleared?/*#__PURE__*/_jsx(\"div\",{className:\"cache-success-message\",children:\"\\u2705 Cache cleared successfully!\"}):/*#__PURE__*/_jsx(\"button\",{className:\"help-cache-btn\",onClick:handleFlushCache,disabled:cacheClearing,title:\"Clear all cached data including repository info, branch context, and staging ground data\",children:cacheClearing?'🔄 Clearing...':'🗑️ Flush Cache'})})]}):/*#__PURE__*/_jsxs(\"div\",{children:[helpContent,/*#__PURE__*/_jsx(\"div\",{className:\"help-menu-divider\"}),/*#__PURE__*/_jsx(LanguageSelector,{className:\"help-menu-language-selector\"}),/*#__PURE__*/_jsx(\"div\",{className:\"help-menu-divider\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"help-theme-toggle-btn \".concat(isDarkMode?'dark':'light'),onClick:toggleTheme,\"aria-label\":t('theme.toggle'),title:t('theme.toggle'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"theme-icon\",children:isDarkMode?'🌞':'🌙'}),/*#__PURE__*/_jsx(\"span\",{className:\"theme-label\",children:isDarkMode?t('theme.switchToLight','Light Mode'):t('theme.switchToDark','Dark Mode')})]}),/*#__PURE__*/_jsx(\"div\",{className:\"help-menu-divider\"}),/*#__PURE__*/_jsx(\"div\",{className:\"help-menu-cache-section\",children:cacheCleared?/*#__PURE__*/_jsx(\"div\",{className:\"cache-success-message\",children:\"\\u2705 Cache cleared successfully!\"}):/*#__PURE__*/_jsx(\"button\",{className:\"help-cache-btn\",onClick:handleFlushCache,disabled:cacheClearing,title:\"Clear all cached data including repository info, branch context, and staging ground data\",children:cacheClearing?'🔄 Clearing...':'🗑️ Flush Cache'})})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bubble-tail\"})]})]}),selectedHelpTopic&&/*#__PURE__*/_jsx(HelpModal,{helpTopic:selectedHelpTopic,contextData:contextData,onClose:handleCloseModal})]});};export default ContextualHelpMascot;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","helpContentService","cacheManagementService","HelpModal","LanguageSelector","useThemeImage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ContextualHelpMascot","_ref","pageId","helpContent","position","contextData","notificationBadge","t","i18n","showHelp","setShowHelp","helpSticky","setHelpSticky","selectedHelpTopic","setSelectedHelpTopic","isDarkMode","setIsDarkMode","cacheClearing","setCacheClearing","cacheCleared","setCacheCleared","mascotImage","savedTheme","localStorage","getItem","prefersLight","window","matchMedia","matches","e","document","body","className","setItem","currentLang","language","isRTL","includes","documentElement","dir","lang","toggleTheme","helpTopics","getHelpTopicsForPage","handleMouseEnter","handleMouseLeave","handleClick","handleCloseHelp","handleHelpTopicClick","topic","type","action","handleCloseModal","handleFlushCache","success","clearAllCache","setTimeout","console","error","alert","children","concat","onMouseEnter","onMouseLeave","onClick","src","alt","length","map","badge","title","id","disabled","helpTopic","onClose"],"sources":["/home/runner/work/sgex/sgex/src/components/ContextualHelpMascot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport helpContentService from '../services/helpContentService';\nimport cacheManagementService from '../services/cacheManagementService';\nimport HelpModal from './HelpModal';\nimport LanguageSelector from './LanguageSelector';\nimport useThemeImage from '../hooks/useThemeImage';\nimport './ContextualHelpMascot.css';\n\nconst ContextualHelpMascot = ({ pageId, helpContent, position = 'bottom-right', contextData = {}, notificationBadge = false }) => {\n  const { t, i18n } = useTranslation();\n  const [showHelp, setShowHelp] = useState(false);\n  const [helpSticky, setHelpSticky] = useState(false);\n  const [selectedHelpTopic, setSelectedHelpTopic] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [cacheClearing, setCacheClearing] = useState(false);\n  const [cacheCleared, setCacheCleared] = useState(false);\n\n  // Theme-aware mascot image\n  const mascotImage = useThemeImage('sgex-mascot.png');\n\n  // Load theme preference from localStorage on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('sgex-theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    } else {\n      // Check if user explicitly prefers light mode\n      let prefersLight = false;\n      try {\n        if (window.matchMedia) {\n          prefersLight = window.matchMedia('(prefers-color-scheme: light)').matches;\n        }\n      } catch (e) {\n        // Fallback for test environments\n        prefersLight = false;\n      }\n      // Default to dark mode unless user explicitly prefers light\n      setIsDarkMode(!prefersLight);\n    }\n  }, []);\n\n  // Update body class when theme changes\n  useEffect(() => {\n    document.body.className = isDarkMode ? 'theme-dark' : 'theme-light';\n    localStorage.setItem('sgex-theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  // Update document direction for RTL languages\n  useEffect(() => {\n    const currentLang = i18n.language || 'en';\n    const isRTL = ['ar', 'he', 'fa'].includes(currentLang);\n    document.documentElement.dir = isRTL ? 'rtl' : 'ltr';\n    document.documentElement.lang = currentLang;\n  }, [i18n.language]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  // Get help topics for the page\n  const helpTopics = pageId ? helpContentService.getHelpTopicsForPage(pageId, contextData) : [];\n\n  const handleMouseEnter = () => {\n    if (!helpSticky) {\n      setShowHelp(true);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!helpSticky) {\n      setShowHelp(false);\n    }\n  };\n\n  const handleClick = () => {\n    setHelpSticky(!helpSticky);\n    setShowHelp(!helpSticky || showHelp);\n  };\n\n  const handleCloseHelp = () => {\n    setShowHelp(false);\n    setHelpSticky(false);\n  };\n\n  const handleHelpTopicClick = (topic) => {\n    // If it's an action type, execute the action immediately\n    if (topic.type === 'action' && topic.action) {\n      topic.action();\n      setShowHelp(false);\n      setHelpSticky(false);\n    } else {\n      // For slideshow and other types, show in modal\n      setSelectedHelpTopic(topic);\n      setShowHelp(false);\n      setHelpSticky(false);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setSelectedHelpTopic(null);\n  };\n\n  const handleFlushCache = async () => {\n    if (cacheClearing) return; // Prevent multiple clicks\n    \n    setCacheClearing(true);\n    setCacheCleared(false);\n    \n    try {\n      const success = cacheManagementService.clearAllCache();\n      if (success) {\n        setCacheCleared(true);\n        // Auto-hide success message after 3 seconds\n        setTimeout(() => {\n          setCacheCleared(false);\n        }, 3000);\n      } else {\n        console.error('Failed to clear cache');\n        alert('Failed to clear cache. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error clearing cache:', error);\n      alert('Error clearing cache. Please try again.');\n    } finally {\n      setCacheClearing(false);\n    }\n  };\n\n  // Always render the mascot now since we have universal topics\n  // if (!hasTopics) {\n  //   return null;\n  // }\n\n  return (\n    <>\n      <div className={`contextual-help-mascot ${position}`}>\n        <div \n          className=\"mascot-container\"\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          onClick={handleClick}\n        >\n          <img \n            src={mascotImage} \n            alt=\"SGEX Helper\" \n            className=\"mascot-icon\"\n          />\n          \n          {/* Notification badge for important help messages */}\n          {notificationBadge && (\n            <div className=\"notification-badge\">\n              !\n            </div>\n          )}\n          \n          {/* Question mark thought bubble - always show since we always have topics now */}\n          {!notificationBadge && (\n            <div className={`question-bubble ${showHelp ? 'help-open' : ''}`}>\n              ?\n            </div>\n          )}\n        </div>\n        \n        {showHelp && (\n          <div className=\"help-thought-bubble\">\n            <div className=\"bubble-content\">\n              {helpSticky && (\n                <button \n                  className=\"close-bubble-btn\"\n                  onClick={handleCloseHelp}\n                  aria-label=\"Close help\"\n                >\n                  ×\n                </button>\n              )}\n              <div className=\"help-text\">\n                {helpTopics.length > 0 ? (\n                  <div className=\"help-topics-list\">\n                    <h4>{t('help.title')}</h4>\n                    {helpTopics.map((topic) => (\n                      <button\n                        key={topic.id}\n                        className=\"help-topic-btn\"\n                        onClick={() => handleHelpTopicClick(topic)}\n                      >\n                        {topic.badge && (\n                          <img \n                            src={topic.badge} \n                            alt=\"\" \n                            className=\"help-topic-badge\"\n                          />\n                        )}\n                        <span className=\"help-topic-title\">{topic.title}</span>\n                      </button>\n                    ))}\n                    \n                    {/* Language Selector in Help Menu */}\n                    <div className=\"help-menu-divider\"></div>\n                    <LanguageSelector className=\"help-menu-language-selector\" />\n                    \n                    {/* Theme Toggle in Help Menu */}\n                    <div className=\"help-menu-divider\"></div>\n                    <button \n                      className={`help-theme-toggle-btn ${isDarkMode ? 'dark' : 'light'}`}\n                      onClick={toggleTheme}\n                      aria-label={t('theme.toggle')}\n                      title={t('theme.toggle')}\n                    >\n                      <span className=\"theme-icon\">{isDarkMode ? '🌞' : '🌙'}</span>\n                      <span className=\"theme-label\">{isDarkMode ? t('theme.switchToLight', 'Light Mode') : t('theme.switchToDark', 'Dark Mode')}</span>\n                    </button>\n                    \n                    {/* Flush Cache Option */}\n                    <div className=\"help-menu-divider\"></div>\n                    <div className=\"help-menu-cache-section\">\n                      {cacheCleared ? (\n                        <div className=\"cache-success-message\">\n                          ✅ Cache cleared successfully!\n                        </div>\n                      ) : (\n                        <button\n                          className=\"help-cache-btn\"\n                          onClick={handleFlushCache}\n                          disabled={cacheClearing}\n                          title=\"Clear all cached data including repository info, branch context, and staging ground data\"\n                        >\n                          {cacheClearing ? '🔄 Clearing...' : '🗑️ Flush Cache'}\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div>\n                    {helpContent}\n                    {/* Language Selector in Help Menu */}\n                    <div className=\"help-menu-divider\"></div>\n                    <LanguageSelector className=\"help-menu-language-selector\" />\n                    \n                    {/* Theme Toggle in Help Menu */}\n                    <div className=\"help-menu-divider\"></div>\n                    <button \n                      className={`help-theme-toggle-btn ${isDarkMode ? 'dark' : 'light'}`}\n                      onClick={toggleTheme}\n                      aria-label={t('theme.toggle')}\n                      title={t('theme.toggle')}\n                    >\n                      <span className=\"theme-icon\">{isDarkMode ? '🌞' : '🌙'}</span>\n                      <span className=\"theme-label\">{isDarkMode ? t('theme.switchToLight', 'Light Mode') : t('theme.switchToDark', 'Dark Mode')}</span>\n                    </button>\n                    \n                    {/* Flush Cache Option */}\n                    <div className=\"help-menu-divider\"></div>\n                    <div className=\"help-menu-cache-section\">\n                      {cacheCleared ? (\n                        <div className=\"cache-success-message\">\n                          ✅ Cache cleared successfully!\n                        </div>\n                      ) : (\n                        <button\n                          className=\"help-cache-btn\"\n                          onClick={handleFlushCache}\n                          disabled={cacheClearing}\n                          title=\"Clear all cached data including repository info, branch context, and staging ground data\"\n                        >\n                          {cacheClearing ? '🔄 Clearing...' : '🗑️ Flush Cache'}\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"bubble-tail\"></div>\n          </div>\n        )}\n      </div>\n      \n      {/* Help Modal for displaying slideshow content */}\n      {selectedHelpTopic && (\n        <HelpModal\n          helpTopic={selectedHelpTopic}\n          contextData={contextData}\n          onClose={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContextualHelpMascot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}