{"ast":null,"code":"import { assign } from 'min-dash';\nimport { is } from './ModelUtil';\nimport { isLabel } from 'diagram-js/lib/util/ModelUtil';\nexport { isLabel } from 'diagram-js/lib/util/ModelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n * @typedef {import('diagram-js/lib/util/Types').Rect} Rect\n *\n * @typedef {import('../model/Types').Element} Element\n * @typedef {import('../model/Types').ModdleElement} ModdleElement\n */\n\nexport var DEFAULT_LABEL_SIZE = {\n  width: 90,\n  height: 20\n};\nexport var FLOW_LABEL_INDENT = 15;\n\n/**\n * Return true if the given semantic has an external label.\n *\n * @param {Element} semantic\n *\n * @return {boolean}\n */\nexport function isLabelExternal(semantic) {\n  return is(semantic, 'bpmn:Event') || is(semantic, 'bpmn:Gateway') || is(semantic, 'bpmn:DataStoreReference') || is(semantic, 'bpmn:DataObjectReference') || is(semantic, 'bpmn:DataInput') || is(semantic, 'bpmn:DataOutput') || is(semantic, 'bpmn:SequenceFlow') || is(semantic, 'bpmn:MessageFlow') || is(semantic, 'bpmn:Group');\n}\n\n/**\n * Return true if the given element has an external label.\n *\n * @param {Element} element\n *\n * @return {boolean}\n */\nexport function hasExternalLabel(element) {\n  return isLabel(element.label);\n}\n\n/**\n * Get the position of a sequence flow label.\n *\n * @param  {Point[]} waypoints\n *\n * @return {Point}\n */\nexport function getFlowLabelPosition(waypoints) {\n  // get the waypoints mid\n  var mid = waypoints.length / 2 - 1;\n  var first = waypoints[Math.floor(mid)];\n  var second = waypoints[Math.ceil(mid + 0.01)];\n\n  // get position\n  var position = getWaypointsMid(waypoints);\n\n  // calculate angle\n  var angle = Math.atan((second.y - first.y) / (second.x - first.x));\n  var x = position.x,\n    y = position.y;\n  if (Math.abs(angle) < Math.PI / 2) {\n    y -= FLOW_LABEL_INDENT;\n  } else {\n    x += FLOW_LABEL_INDENT;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\n\n/**\n * Get the middle of a number of waypoints.\n *\n * @param  {Point[]} waypoints\n *\n * @return {Point}\n */\nexport function getWaypointsMid(waypoints) {\n  var mid = waypoints.length / 2 - 1;\n  var first = waypoints[Math.floor(mid)];\n  var second = waypoints[Math.ceil(mid + 0.01)];\n  return {\n    x: first.x + (second.x - first.x) / 2,\n    y: first.y + (second.y - first.y) / 2\n  };\n}\n\n/**\n * Get the middle of the external label of an element.\n *\n * @param {Element} element\n *\n * @return {Point}\n */\nexport function getExternalLabelMid(element) {\n  if (element.waypoints) {\n    return getFlowLabelPosition(element.waypoints);\n  } else if (is(element, 'bpmn:Group')) {\n    return {\n      x: element.x + element.width / 2,\n      y: element.y + DEFAULT_LABEL_SIZE.height / 2\n    };\n  } else {\n    return {\n      x: element.x + element.width / 2,\n      y: element.y + element.height + DEFAULT_LABEL_SIZE.height / 2\n    };\n  }\n}\n\n/**\n * Return the bounds of an elements label, parsed from the elements DI or\n * generated from its bounds.\n *\n * @param {ModdleElement} di\n * @param {Element} element\n *\n * @return {Rect}\n */\nexport function getExternalLabelBounds(di, element) {\n  var mid,\n    size,\n    bounds,\n    label = di.label;\n  if (label && label.bounds) {\n    bounds = label.bounds;\n    size = {\n      width: Math.max(DEFAULT_LABEL_SIZE.width, bounds.width),\n      height: bounds.height\n    };\n    mid = {\n      x: bounds.x + bounds.width / 2,\n      y: bounds.y + bounds.height / 2\n    };\n  } else {\n    mid = getExternalLabelMid(element);\n    size = DEFAULT_LABEL_SIZE;\n  }\n  return assign({\n    x: mid.x - size.width / 2,\n    y: mid.y - size.height / 2\n  }, size);\n}\n\n/**\n * @param {ModdleElement} semantic\n *\n * @returns {string}\n */\nfunction getLabelAttr(semantic) {\n  if (is(semantic, 'bpmn:FlowElement') || is(semantic, 'bpmn:Participant') || is(semantic, 'bpmn:Lane') || is(semantic, 'bpmn:SequenceFlow') || is(semantic, 'bpmn:MessageFlow') || is(semantic, 'bpmn:DataInput') || is(semantic, 'bpmn:DataOutput')) {\n    return 'name';\n  }\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return 'text';\n  }\n  if (is(semantic, 'bpmn:Group')) {\n    return 'categoryValueRef';\n  }\n}\n\n/**\n * @param {ModdleElement} semantic\n *\n * @returns {string}\n */\nfunction getCategoryValue(semantic) {\n  var categoryValueRef = semantic['categoryValueRef'];\n  if (!categoryValueRef) {\n    return '';\n  }\n  return categoryValueRef.value || '';\n}\n\n/**\n * @param {Element} element\n *\n * @return {string}\n */\nexport function getLabel(element) {\n  var semantic = element.businessObject,\n    attr = getLabelAttr(semantic);\n  if (attr) {\n    if (attr === 'categoryValueRef') {\n      return getCategoryValue(semantic);\n    }\n    return semantic[attr] || '';\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} text\n *\n * @return {Element}\n */\nexport function setLabel(element, text) {\n  var semantic = element.businessObject,\n    attr = getLabelAttr(semantic);\n  if (attr) {\n    if (attr === 'categoryValueRef') {\n      if (!semantic[attr]) {\n        return element;\n      }\n      semantic[attr].value = text;\n    } else {\n      semantic[attr] = text;\n    }\n  }\n  return element;\n}","map":{"version":3,"names":["assign","is","isLabel","DEFAULT_LABEL_SIZE","width","height","FLOW_LABEL_INDENT","isLabelExternal","semantic","hasExternalLabel","element","label","getFlowLabelPosition","waypoints","mid","length","first","Math","floor","second","ceil","position","getWaypointsMid","angle","atan","y","x","abs","PI","getExternalLabelMid","getExternalLabelBounds","di","size","bounds","max","getLabelAttr","getCategoryValue","categoryValueRef","value","getLabel","businessObject","attr","setLabel","text"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/util/LabelUtil.js"],"sourcesContent":["import {\n  assign\n} from 'min-dash';\n\nimport { is } from './ModelUtil';\n\nimport { isLabel } from 'diagram-js/lib/util/ModelUtil';\n\nexport { isLabel } from 'diagram-js/lib/util/ModelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n * @typedef {import('diagram-js/lib/util/Types').Rect} Rect\n *\n * @typedef {import('../model/Types').Element} Element\n * @typedef {import('../model/Types').ModdleElement} ModdleElement\n */\n\nexport var DEFAULT_LABEL_SIZE = {\n  width: 90,\n  height: 20\n};\n\nexport var FLOW_LABEL_INDENT = 15;\n\n\n/**\n * Return true if the given semantic has an external label.\n *\n * @param {Element} semantic\n *\n * @return {boolean}\n */\nexport function isLabelExternal(semantic) {\n  return is(semantic, 'bpmn:Event') ||\n         is(semantic, 'bpmn:Gateway') ||\n         is(semantic, 'bpmn:DataStoreReference') ||\n         is(semantic, 'bpmn:DataObjectReference') ||\n         is(semantic, 'bpmn:DataInput') ||\n         is(semantic, 'bpmn:DataOutput') ||\n         is(semantic, 'bpmn:SequenceFlow') ||\n         is(semantic, 'bpmn:MessageFlow') ||\n         is(semantic, 'bpmn:Group');\n}\n\n/**\n * Return true if the given element has an external label.\n *\n * @param {Element} element\n *\n * @return {boolean}\n */\nexport function hasExternalLabel(element) {\n  return isLabel(element.label);\n}\n\n/**\n * Get the position of a sequence flow label.\n *\n * @param  {Point[]} waypoints\n *\n * @return {Point}\n */\nexport function getFlowLabelPosition(waypoints) {\n\n  // get the waypoints mid\n  var mid = waypoints.length / 2 - 1;\n\n  var first = waypoints[Math.floor(mid)];\n  var second = waypoints[Math.ceil(mid + 0.01)];\n\n  // get position\n  var position = getWaypointsMid(waypoints);\n\n  // calculate angle\n  var angle = Math.atan((second.y - first.y) / (second.x - first.x));\n\n  var x = position.x,\n      y = position.y;\n\n  if (Math.abs(angle) < Math.PI / 2) {\n    y -= FLOW_LABEL_INDENT;\n  } else {\n    x += FLOW_LABEL_INDENT;\n  }\n\n  return { x: x, y: y };\n}\n\n\n/**\n * Get the middle of a number of waypoints.\n *\n * @param  {Point[]} waypoints\n *\n * @return {Point}\n */\nexport function getWaypointsMid(waypoints) {\n\n  var mid = waypoints.length / 2 - 1;\n\n  var first = waypoints[Math.floor(mid)];\n  var second = waypoints[Math.ceil(mid + 0.01)];\n\n  return {\n    x: first.x + (second.x - first.x) / 2,\n    y: first.y + (second.y - first.y) / 2\n  };\n}\n\n/**\n * Get the middle of the external label of an element.\n *\n * @param {Element} element\n *\n * @return {Point}\n */\nexport function getExternalLabelMid(element) {\n\n  if (element.waypoints) {\n    return getFlowLabelPosition(element.waypoints);\n  } else if (is(element, 'bpmn:Group')) {\n    return {\n      x: element.x + element.width / 2,\n      y: element.y + DEFAULT_LABEL_SIZE.height / 2\n    };\n  } else {\n    return {\n      x: element.x + element.width / 2,\n      y: element.y + element.height + DEFAULT_LABEL_SIZE.height / 2\n    };\n  }\n}\n\n\n/**\n * Return the bounds of an elements label, parsed from the elements DI or\n * generated from its bounds.\n *\n * @param {ModdleElement} di\n * @param {Element} element\n *\n * @return {Rect}\n */\nexport function getExternalLabelBounds(di, element) {\n\n  var mid,\n      size,\n      bounds,\n      label = di.label;\n\n  if (label && label.bounds) {\n    bounds = label.bounds;\n\n    size = {\n      width: Math.max(DEFAULT_LABEL_SIZE.width, bounds.width),\n      height: bounds.height\n    };\n\n    mid = {\n      x: bounds.x + bounds.width / 2,\n      y: bounds.y + bounds.height / 2\n    };\n  } else {\n\n    mid = getExternalLabelMid(element);\n\n    size = DEFAULT_LABEL_SIZE;\n  }\n\n  return assign({\n    x: mid.x - size.width / 2,\n    y: mid.y - size.height / 2\n  }, size);\n}\n\n/**\n * @param {ModdleElement} semantic\n *\n * @returns {string}\n */\nfunction getLabelAttr(semantic) {\n  if (\n    is(semantic, 'bpmn:FlowElement') ||\n    is(semantic, 'bpmn:Participant') ||\n    is(semantic, 'bpmn:Lane') ||\n    is(semantic, 'bpmn:SequenceFlow') ||\n    is(semantic, 'bpmn:MessageFlow') ||\n    is(semantic, 'bpmn:DataInput') ||\n    is(semantic, 'bpmn:DataOutput')\n  ) {\n    return 'name';\n  }\n\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return 'text';\n  }\n\n  if (is(semantic, 'bpmn:Group')) {\n    return 'categoryValueRef';\n  }\n}\n\n/**\n * @param {ModdleElement} semantic\n *\n * @returns {string}\n */\nfunction getCategoryValue(semantic) {\n  var categoryValueRef = semantic['categoryValueRef'];\n\n  if (!categoryValueRef) {\n    return '';\n  }\n\n\n  return categoryValueRef.value || '';\n}\n\n/**\n * @param {Element} element\n *\n * @return {string}\n */\nexport function getLabel(element) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n\n      return getCategoryValue(semantic);\n    }\n\n    return semantic[attr] || '';\n  }\n}\n\n\n/**\n * @param {Element} element\n * @param {string} text\n *\n * @return {Element}\n */\nexport function setLabel(element, text) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n      if (!semantic[attr]) {\n        return element;\n      }\n\n      semantic[attr].value = text;\n    } else {\n      semantic[attr] = text;\n    }\n\n  }\n\n  return element;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}