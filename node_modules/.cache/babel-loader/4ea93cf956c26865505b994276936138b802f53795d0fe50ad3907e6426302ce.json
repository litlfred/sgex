{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useLocation,useNavigate,useParams}from'react-router-dom';import githubService from'../services/githubService';import'./DecisionTableEditor.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DecisionTableEditor=()=>{var _location$state,_location$state2,_location$state3;const location=useLocation();const navigate=useNavigate();const{user,repo,branch,tableId}=useParams();// State from location or URL params\nconst[profile,setProfile]=useState(((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.profile)||null);const[repository,setRepository]=useState(((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.repository)||null);const[selectedBranch,setSelectedBranch]=useState(((_location$state3=location.state)===null||_location$state3===void 0?void 0:_location$state3.selectedBranch)||branch||null);// Editor state\nconst[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[saving,setSaving]=useState(false);const[hasChanges,setHasChanges]=useState(false);// Table data\nconst[tableData,setTableData]=useState({id:'',name:'',description:'',businessRule:'',trigger:'',inputs:[],outputs:[],rules:[]});const[originalTableData,setOriginalTableData]=useState(null);const[validationErrors,setValidationErrors]=useState([]);// Initialize repository data if not available\nconst initializeData=useCallback(async()=>{if(!profile&&!repository&&user&&repo){try{setLoading(true);setError(null);const publicProfile={login:user,name:user.charAt(0).toUpperCase()+user.slice(1),avatar_url:`https://github.com/${user}.png`,type:'User',isDemo:false};const publicRepository={name:repo,full_name:`${user}/${repo}`,owner:{login:user},default_branch:branch||'main',html_url:`https://github.com/${user}/${repo}`,isDemo:false};setProfile(publicProfile);setRepository(publicRepository);setSelectedBranch(branch||'main');}catch(err){console.error('Error initializing data:',err);setError('Failed to load data. Please check the URL or try again.');}}},[user,repo,branch,profile,repository]);// Load table data\nconst loadTableData=useCallback(async()=>{if(!repository||!selectedBranch||!tableId)return;try{var _repository$owner;setLoading(true);setError(null);const owner=((_repository$owner=repository.owner)===null||_repository$owner===void 0?void 0:_repository$owner.login)||repository.full_name.split('/')[0];const repoName=repository.name;const filePath=`input/dmn/${tableId}.dmn`;console.log('🎯 DecisionTableEditor: Loading table data with parameters:',{owner,repoName,branch:selectedBranch,tableId,filePath,isNewTable:tableId==='new'});// Check if this is a new table\nif(tableId==='new'){console.log('📝 DecisionTableEditor: Creating new table');// Initialize with empty table structure\nconst newTable={id:generateTableId(),name:'New Decision Table',description:'',businessRule:'',trigger:'',inputs:[{id:'input1',label:'Input 1',expression:'',typeRef:'string',description:''}],outputs:[{id:'output1',label:'Output 1',typeRef:'string',description:''}],rules:[{id:'rule1',description:'',inputEntries:[''],outputEntries:[''],annotations:['']}]};setTableData(newTable);setOriginalTableData(null);setLoading(false);return;}// Load existing DMN file\nconsole.log(`📁 DecisionTableEditor: Loading existing DMN file from ${filePath}`);const dmnContent=await githubService.getFileContent(owner,repoName,filePath,selectedBranch);console.log('✅ DecisionTableEditor: Successfully loaded DMN content, parsing...');// Parse DMN XML to extract table data\nconst parsedData=parseDMNContent(dmnContent);console.log('✅ DecisionTableEditor: Successfully parsed DMN data:',{id:parsedData.id,name:parsedData.name,inputCount:parsedData.inputs.length,outputCount:parsedData.outputs.length,ruleCount:parsedData.rules.length});setTableData(parsedData);setOriginalTableData(JSON.parse(JSON.stringify(parsedData)));}catch(err){var _err$stack;console.error('❌ DecisionTableEditor: Error loading table data:',err);console.error('🔍 DecisionTableEditor: Error details:',{message:err.message,status:err.status,type:typeof err,stack:(_err$stack=err.stack)===null||_err$stack===void 0?void 0:_err$stack.substring(0,500)});// Provide more specific error messages based on the error type\nlet errorMessage='Failed to load decision table.';if(err.message.includes('File not found')){errorMessage=`Decision table file \"${tableId}.dmn\" not found in the repository. The file may have been moved, deleted, or the table ID in the URL is incorrect.`;}else if(err.message.includes('Access denied')||err.message.includes('403')){errorMessage='Access denied. This repository may be private or you may not have permission to access it.';}else if(err.message.includes('timeout')){errorMessage='Request timed out while loading the decision table. Please check your internet connection and try again.';}else if(err.message.includes('rate limit')){errorMessage='GitHub API rate limit exceeded. Please wait a moment and try again.';}else if(err.message.includes('Failed to parse DMN file')){errorMessage=`The DMN file \"${tableId}.dmn\" exists but contains invalid XML format. ${err.message}`;}else{errorMessage=`Failed to load decision table: ${err.message}`;}setError(errorMessage);}finally{setLoading(false);}},[repository,selectedBranch,tableId]);useEffect(()=>{initializeData();},[initializeData]);useEffect(()=>{if(repository&&selectedBranch){loadTableData();}},[loadTableData,repository,selectedBranch]);// Parse DMN XML content into editable structure\nconst parseDMNContent=dmnXml=>{try{var _decision$getElements;const parser=new DOMParser();const xmlDoc=parser.parseFromString(dmnXml,'text/xml');// Check for parsing errors\nconst parserError=xmlDoc.getElementsByTagName('parsererror')[0];if(parserError){throw new Error('Invalid XML format');}const decision=xmlDoc.getElementsByTagName('dmn:decision')[0];const decisionTable=xmlDoc.getElementsByTagName('dmn:decisionTable')[0];if(!decision||!decisionTable){throw new Error('Invalid DMN structure');}// Extract metadata\nconst id=decision.getAttribute('id')||'';const name=decision.getAttribute('label')||'';const question=((_decision$getElements=decision.getElementsByTagName('dmn:question')[0])===null||_decision$getElements===void 0?void 0:_decision$getElements.textContent)||'';// Extract inputs\nconst inputElements=xmlDoc.getElementsByTagName('dmn:input');const inputs=Array.from(inputElements).map((input,index)=>{var _input$getElementsByT,_input$getElementsByT2,_input$getElementsByT3;return{id:input.getAttribute('id')||`input${index+1}`,label:input.getAttribute('label')||`Input ${index+1}`,expression:((_input$getElementsByT=input.getElementsByTagName('dmn:text')[0])===null||_input$getElementsByT===void 0?void 0:_input$getElementsByT.textContent)||'',typeRef:((_input$getElementsByT2=input.getElementsByTagName('dmn:inputExpression')[0])===null||_input$getElementsByT2===void 0?void 0:_input$getElementsByT2.getAttribute('typeRef'))||'string',description:((_input$getElementsByT3=input.getElementsByTagName('dmn:description')[0])===null||_input$getElementsByT3===void 0?void 0:_input$getElementsByT3.textContent)||''};});// Extract outputs\nconst outputElements=xmlDoc.getElementsByTagName('dmn:output');const outputs=Array.from(outputElements).map((output,index)=>{var _output$getElementsBy;return{id:output.getAttribute('id')||`output${index+1}`,label:output.getAttribute('label')||`Output ${index+1}`,typeRef:output.getAttribute('typeRef')||'string',description:((_output$getElementsBy=output.getElementsByTagName('dmn:description')[0])===null||_output$getElementsBy===void 0?void 0:_output$getElementsBy.textContent)||''};});// Extract rules\nconst ruleElements=xmlDoc.getElementsByTagName('dmn:rule');const rules=Array.from(ruleElements).map((rule,index)=>{var _rule$getElementsByTa;const inputEntries=Array.from(rule.getElementsByTagName('dmn:inputEntry')).map(entry=>{var _entry$getElementsByT;return((_entry$getElementsByT=entry.getElementsByTagName('dmn:text')[0])===null||_entry$getElementsByT===void 0?void 0:_entry$getElementsByT.textContent)||'';});const outputEntries=Array.from(rule.getElementsByTagName('dmn:outputEntry')).map(entry=>{var _entry$getElementsByT2;return((_entry$getElementsByT2=entry.getElementsByTagName('dmn:text')[0])===null||_entry$getElementsByT2===void 0?void 0:_entry$getElementsByT2.textContent)||'';});const annotations=Array.from(rule.getElementsByTagName('dmn:annotationEntry')).map(entry=>{var _entry$getElementsByT3;return((_entry$getElementsByT3=entry.getElementsByTagName('dmn:text')[0])===null||_entry$getElementsByT3===void 0?void 0:_entry$getElementsByT3.textContent)||'';});return{id:rule.getAttribute('id')||`rule${index+1}`,description:((_rule$getElementsByTa=rule.getElementsByTagName('dmn:description')[0])===null||_rule$getElementsByTa===void 0?void 0:_rule$getElementsByTa.textContent)||'',inputEntries,outputEntries,annotations};});return{id,name,description:question,businessRule:'',// Extract from metadata if available\ntrigger:'',// Extract from metadata if available\ninputs,outputs,rules};}catch(err){console.error('Error parsing DMN content:',err);throw new Error('Failed to parse DMN file: '+err.message);}};// Generate DMN XML from table data\nconst generateDMNContent=data=>{const escapeXml=text=>{return text.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\"/g,'&quot;').replace(/'/g,'&#39;');};let xml=`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<dmn:definitions xmlns:dmn=\"https://www.omg.org/spec/DMN/20240513/MODEL/\" \n                 xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" \n                 xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" \n                 xmlns:di=\"http://www.omg.org/spec/DMN/20180521/DI/\"\n                 namespace=\"http://smart.who.int/decision-tables\" \n                 label=\"${escapeXml(data.name)}\" \n                 id=\"${escapeXml(data.id)}\">\n  \n  <dmn:decision id=\"${escapeXml(data.id)}\" label=\"${escapeXml(data.name)}\">\n    <dmn:question>${escapeXml(data.description)}</dmn:question>\n    ${data.businessRule?`<dmn:businessRule>${escapeXml(data.businessRule)}</dmn:businessRule>`:''}\n    ${data.trigger?`<dmn:trigger>${escapeXml(data.trigger)}</dmn:trigger>`:''}\n    \n    <dmn:decisionTable id=\"${escapeXml(data.id)}.table\" hitPolicy=\"FIRST\" preferredOrientation=\"Rule-as-Row\">\n`;// Add inputs\ndata.inputs.forEach(input=>{xml+=`      <dmn:input id=\"${escapeXml(input.id)}\" label=\"${escapeXml(input.label)}\">\n        <dmn:inputExpression id=\"${escapeXml(input.id)}.expression\" typeRef=\"${escapeXml(input.typeRef)}\">\n          <dmn:text>${escapeXml(input.expression)}</dmn:text>\n        </dmn:inputExpression>\n        ${input.description?`<dmn:description>${escapeXml(input.description)}</dmn:description>`:''}\n      </dmn:input>\n`;});// Add outputs\ndata.outputs.forEach(output=>{xml+=`      <dmn:output id=\"${escapeXml(output.id)}\" label=\"${escapeXml(output.label)}\" typeRef=\"${escapeXml(output.typeRef)}\">\n        ${output.description?`<dmn:description>${escapeXml(output.description)}</dmn:description>`:''}\n      </dmn:output>\n`;});// Add rules\ndata.rules.forEach(rule=>{xml+=`      <dmn:rule id=\"${escapeXml(rule.id)}\">\n        ${rule.description?`<dmn:description>${escapeXml(rule.description)}</dmn:description>`:''}\n`;rule.inputEntries.forEach(entry=>{xml+=`        <dmn:inputEntry>\n          <dmn:text>${escapeXml(entry)}</dmn:text>\n        </dmn:inputEntry>\n`;});rule.outputEntries.forEach(entry=>{xml+=`        <dmn:outputEntry>\n          <dmn:text>${escapeXml(entry)}</dmn:text>\n        </dmn:outputEntry>\n`;});rule.annotations.forEach(annotation=>{xml+=`        <dmn:annotationEntry>\n          <dmn:text>${escapeXml(annotation)}</dmn:text>\n        </dmn:annotationEntry>\n`;});xml+=`      </dmn:rule>\n`;});xml+=`    </dmn:decisionTable>\n  </dmn:decision>\n  \n</dmn:definitions>`;return xml;};// Generate unique table ID\nconst generateTableId=()=>{return'DAK.DT.'+Date.now().toString(36).toUpperCase();};// Validate table data\nconst validateTable=data=>{const errors=[];if(!data.name.trim()){errors.push('Table name is required');}if(!data.id.trim()){errors.push('Table ID is required');}if(data.inputs.length===0){errors.push('At least one input is required');}if(data.outputs.length===0){errors.push('At least one output is required');}if(data.rules.length===0){errors.push('At least one rule is required');}// Validate inputs\ndata.inputs.forEach((input,index)=>{if(!input.label.trim()){errors.push(`Input ${index+1}: Label is required`);}if(!input.expression.trim()){errors.push(`Input ${index+1}: Expression is required`);}});// Validate outputs\ndata.outputs.forEach((output,index)=>{if(!output.label.trim()){errors.push(`Output ${index+1}: Label is required`);}});// Validate rules\ndata.rules.forEach((rule,index)=>{if(rule.inputEntries.length!==data.inputs.length){errors.push(`Rule ${index+1}: Must have entry for each input`);}if(rule.outputEntries.length!==data.outputs.length){errors.push(`Rule ${index+1}: Must have entry for each output`);}});return errors;};// Handle table save\nconst handleSave=async()=>{try{var _repository$owner2;setSaving(true);setError(null);// Validate table\nconst errors=validateTable(tableData);if(errors.length>0){setValidationErrors(errors);return;}setValidationErrors([]);// Generate DMN content\nconst dmnContent=generateDMNContent(tableData);// Save to repository\nconst owner=((_repository$owner2=repository.owner)===null||_repository$owner2===void 0?void 0:_repository$owner2.login)||repository.full_name.split('/')[0];const repoName=repository.name;const filePath=`input/dmn/${tableData.id}.dmn`;const message=tableId==='new'?`Add new decision table: ${tableData.name}`:`Update decision table: ${tableData.name}`;await githubService.updateFile(owner,repoName,filePath,dmnContent,message,selectedBranch,originalTableData?'update':'create');setOriginalTableData(JSON.parse(JSON.stringify(tableData)));setHasChanges(false);// Navigate back to decision support view\nnavigate(`/decision-support/${owner}/${repoName}/${selectedBranch}`,{state:{profile,repository,selectedBranch}});}catch(err){console.error('Error saving table:',err);setError('Failed to save decision table: '+err.message);}finally{setSaving(false);}};// Handle data changes\nconst updateTableData=updates=>{setTableData(prev=>{const updated={...prev,...updates};setHasChanges(JSON.stringify(updated)!==JSON.stringify(originalTableData));return updated;});};// Add new input\nconst addInput=()=>{const newInput={id:`input${tableData.inputs.length+1}`,label:`Input ${tableData.inputs.length+1}`,expression:'',typeRef:'string',description:''};updateTableData({inputs:[...tableData.inputs,newInput],rules:tableData.rules.map(rule=>({...rule,inputEntries:[...rule.inputEntries,'']}))});};// Add new output\nconst addOutput=()=>{const newOutput={id:`output${tableData.outputs.length+1}`,label:`Output ${tableData.outputs.length+1}`,typeRef:'string',description:''};updateTableData({outputs:[...tableData.outputs,newOutput],rules:tableData.rules.map(rule=>({...rule,outputEntries:[...rule.outputEntries,''],annotations:[...(rule.annotations||[]),'']}))});};// Add new rule\nconst addRule=()=>{const newRule={id:`rule${tableData.rules.length+1}`,description:'',inputEntries:new Array(tableData.inputs.length).fill(''),outputEntries:new Array(tableData.outputs.length).fill(''),annotations:new Array(tableData.outputs.length).fill('')};updateTableData({rules:[...tableData.rules,newRule]});};// Navigation handlers\nconst handleBackToDecisionSupport=()=>{if(repository&&profile){var _repository$owner3;const owner=((_repository$owner3=repository.owner)===null||_repository$owner3===void 0?void 0:_repository$owner3.login)||repository.full_name.split('/')[0];const repoName=repository.name;const path=selectedBranch?`/decision-support/${owner}/${repoName}/${selectedBranch}`:`/decision-support/${owner}/${repoName}`;navigate(path,{state:{profile,repository,selectedBranch}});}else{navigate('/');}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"decision-table-editor loading-state\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Loading Decision Table Editor...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Preparing editor interface...\"})]})});}if(error){var _repository$owner4;return/*#__PURE__*/_jsx(\"div\",{className:\"decision-table-editor error-state\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Error Loading Decision Table Editor\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),process.env.NODE_ENV==='development'&&/*#__PURE__*/_jsxs(\"div\",{className:\"debug-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Debug Information:\"}),/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify({user,repo,branch,tableId,hasProfile:!!profile,hasRepository:!!repository,selectedBranch,repositoryDetails:repository?{name:repository.name,full_name:repository.full_name,owner:(_repository$owner4=repository.owner)===null||_repository$owner4===void 0?void 0:_repository$owner4.login}:null},null,2)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-suggestions\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Troubleshooting:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"If you're trying to edit an existing table, verify that the table ID in the URL is correct\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Check that the repository has the \",/*#__PURE__*/_jsx(\"code\",{children:\"input/dmn/\"}),\" directory structure\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"Make sure the repository is public or you have access to it\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Try creating a new table instead by clicking \\\"New Table\\\" from the Decision Support Logic view\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleBackToDecisionSupport,className:\"action-btn primary\",children:\"Back to Decision Support\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),className:\"action-btn secondary\",children:\"Retry\"}),repository&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{var _repository$owner5;const owner=((_repository$owner5=repository.owner)===null||_repository$owner5===void 0?void 0:_repository$owner5.login)||repository.full_name.split('/')[0];const repoName=repository.name;navigate(`/decision-table-editor/${owner}/${repoName}/${selectedBranch}/new`,{state:{profile,repository,selectedBranch}});},className:\"action-btn secondary\",children:\"Create New Table\"})]})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"decision-table-editor\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"who-branding\",children:[/*#__PURE__*/_jsx(\"h1\",{onClick:()=>navigate('/'),className:\"clickable-title\",children:\"SGEX Workbench\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"WHO SMART Guidelines Exchange\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"repo-context\",children:repository&&/*#__PURE__*/_jsxs(\"div\",{className:\"repo-info\",children:[/*#__PURE__*/_jsxs(\"a\",{href:`https://github.com/${repository.full_name}`,target:\"_blank\",rel:\"noopener noreferrer\",className:\"context-repo-link\",title:\"View repository on GitHub\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"repo-icon\",children:\"\\uD83D\\uDCC1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"context-repo\",children:repository.name}),/*#__PURE__*/_jsx(\"span\",{className:\"external-link\",children:\"\\u2197\"})]}),selectedBranch&&/*#__PURE__*/_jsx(\"span\",{className:\"branch-info\",children:/*#__PURE__*/_jsx(\"code\",{className:\"branch-display\",children:selectedBranch})})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"header-right\",children:profile&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{src:profile.avatar_url||`https://github.com/${profile.login}.png`,alt:\"Profile\",className:\"context-avatar\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"context-owner\",children:[\"@\",profile.login]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"breadcrumb-link\",children:\"Select Profile\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBackToDecisionSupport,className:\"breadcrumb-link\",children:\"Decision Support Logic\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:tableId==='new'?'New Decision Table':'Edit Decision Table'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-toolbar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar-left\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFAF Decision Table Editor\"}),/*#__PURE__*/_jsx(\"div\",{className:\"file-context\",children:tableId==='new'?/*#__PURE__*/_jsx(\"span\",{className:\"source-file-info new-file\",children:\"\\uD83D\\uDCC4 New table (not saved yet)\"}):/*#__PURE__*/_jsxs(\"span\",{className:\"source-file-info\",children:[\"\\uD83D\\uDCC4 Editing: \",/*#__PURE__*/_jsxs(\"code\",{children:[\"input/dmn/\",tableId,\".dmn\"]})]})}),hasChanges&&/*#__PURE__*/_jsx(\"span\",{className:\"changes-indicator\",children:\"\\u2022 Unsaved changes\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar-right\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleBackToDecisionSupport,className:\"action-btn secondary\",disabled:saving,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,className:\"action-btn primary\",disabled:saving,children:saving?'Saving...':'Save Table'})]})]}),validationErrors.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"validation-errors\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Please fix the following errors:\"}),/*#__PURE__*/_jsx(\"ul\",{children:validationErrors.map((error,index)=>/*#__PURE__*/_jsx(\"li\",{children:error},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-sections\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB Table Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"metadata-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"table-id\",children:\"Table ID\"}),/*#__PURE__*/_jsx(\"input\",{id:\"table-id\",type:\"text\",value:tableData.id,onChange:e=>updateTableData({id:e.target.value}),placeholder:\"e.g., DAK.DT.EXAMPLE\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"table-name\",children:\"Table Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"table-name\",type:\"text\",value:tableData.name,onChange:e=>updateTableData({name:e.target.value}),placeholder:\"Descriptive name for the decision table\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group full-width\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"table-description\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"table-description\",value:tableData.description,onChange:e=>updateTableData({description:e.target.value}),placeholder:\"What decision does this table make?\",rows:\"3\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group full-width\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"business-rule\",children:\"Business Rule\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"business-rule\",value:tableData.businessRule,onChange:e=>updateTableData({businessRule:e.target.value}),placeholder:\"Business rule or policy statement\",rows:\"2\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group full-width\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"trigger\",children:\"Trigger\"}),/*#__PURE__*/_jsx(\"input\",{id:\"trigger\",type:\"text\",value:tableData.trigger,onChange:e=>updateTableData({trigger:e.target.value}),placeholder:\"When is this decision table triggered?\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCE5 Input Columns\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addInput,className:\"action-btn secondary small\",children:\"+ Add Input\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"inputs-list\",children:tableData.inputs.map((input,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"input-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Input \",index+1]}),tableData.inputs.length>1&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const newInputs=tableData.inputs.filter((_,i)=>i!==index);const newRules=tableData.rules.map(rule=>({...rule,inputEntries:rule.inputEntries.filter((_,i)=>i!==index)}));updateTableData({inputs:newInputs,rules:newRules});},className:\"remove-btn\",title:\"Remove input\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Label\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input.label,onChange:e=>{const newInputs=[...tableData.inputs];newInputs[index]={...input,label:e.target.value};updateTableData({inputs:newInputs});},placeholder:\"Human-readable label\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Expression\"}),/*#__PURE__*/_jsx(\"textarea\",{value:input.expression,onChange:e=>{const newInputs=[...tableData.inputs];newInputs[index]={...input,expression:e.target.value};updateTableData({inputs:newInputs});},placeholder:\"CQL expression or data element path\",rows:\"2\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:input.typeRef,onChange:e=>{const newInputs=[...tableData.inputs];newInputs[index]={...input,typeRef:e.target.value};updateTableData({inputs:newInputs});},children:[/*#__PURE__*/_jsx(\"option\",{value:\"string\",children:\"String\"}),/*#__PURE__*/_jsx(\"option\",{value:\"integer\",children:\"Integer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"boolean\",children:\"Boolean\"}),/*#__PURE__*/_jsx(\"option\",{value:\"date\",children:\"Date\"}),/*#__PURE__*/_jsx(\"option\",{value:\"duration\",children:\"Duration\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:input.description,onChange:e=>{const newInputs=[...tableData.inputs];newInputs[index]={...input,description:e.target.value};updateTableData({inputs:newInputs});},placeholder:\"Additional details about this input\",rows:\"2\"})]})]},input.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCE4 Output Columns\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addOutput,className:\"action-btn secondary small\",children:\"+ Add Output\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"outputs-list\",children:tableData.outputs.map((output,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"output-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Output \",index+1]}),tableData.outputs.length>1&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const newOutputs=tableData.outputs.filter((_,i)=>i!==index);const newRules=tableData.rules.map(rule=>({...rule,outputEntries:rule.outputEntries.filter((_,i)=>i!==index),annotations:rule.annotations.filter((_,i)=>i!==index)}));updateTableData({outputs:newOutputs,rules:newRules});},className:\"remove-btn\",title:\"Remove output\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Label\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:output.label,onChange:e=>{const newOutputs=[...tableData.outputs];newOutputs[index]={...output,label:e.target.value};updateTableData({outputs:newOutputs});},placeholder:\"Human-readable label\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:output.typeRef,onChange:e=>{const newOutputs=[...tableData.outputs];newOutputs[index]={...output,typeRef:e.target.value};updateTableData({outputs:newOutputs});},children:[/*#__PURE__*/_jsx(\"option\",{value:\"string\",children:\"String\"}),/*#__PURE__*/_jsx(\"option\",{value:\"integer\",children:\"Integer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"boolean\",children:\"Boolean\"}),/*#__PURE__*/_jsx(\"option\",{value:\"date\",children:\"Date\"}),/*#__PURE__*/_jsx(\"option\",{value:\"duration\",children:\"Duration\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:output.description,onChange:e=>{const newOutputs=[...tableData.outputs];newOutputs[index]={...output,description:e.target.value};updateTableData({outputs:newOutputs});},placeholder:\"Additional details about this output\",rows:\"2\"})]})]},output.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u2696\\uFE0F Decision Rules\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addRule,className:\"action-btn secondary small\",children:\"+ Add Rule\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"rules-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"rules-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"rule-number\",children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{className:\"rule-description\",children:\"Description\"}),tableData.inputs.map((input,index)=>/*#__PURE__*/_jsx(\"th\",{className:\"rule-input\",children:input.label},`input-${index}`)),tableData.outputs.map((output,index)=>/*#__PURE__*/_jsx(\"th\",{className:\"rule-output\",children:output.label},`output-${index}`)),/*#__PURE__*/_jsx(\"th\",{className:\"rule-annotations\",children:\"Notes\"}),/*#__PURE__*/_jsx(\"th\",{className:\"rule-actions\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:tableData.rules.map((rule,ruleIndex)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"rule-number\",children:ruleIndex+1}),/*#__PURE__*/_jsx(\"td\",{className:\"rule-description\",children:/*#__PURE__*/_jsx(\"textarea\",{value:rule.description,onChange:e=>{const newRules=[...tableData.rules];newRules[ruleIndex]={...rule,description:e.target.value};updateTableData({rules:newRules});},placeholder:\"Rule description\",rows:\"2\"})}),rule.inputEntries.map((entry,entryIndex)=>/*#__PURE__*/_jsx(\"td\",{className:\"rule-input\",children:/*#__PURE__*/_jsx(\"textarea\",{value:entry,onChange:e=>{const newRules=[...tableData.rules];const newInputEntries=[...rule.inputEntries];newInputEntries[entryIndex]=e.target.value;newRules[ruleIndex]={...rule,inputEntries:newInputEntries};updateTableData({rules:newRules});},placeholder:\"Condition\",rows:\"2\"})},`input-${entryIndex}`)),rule.outputEntries.map((entry,entryIndex)=>/*#__PURE__*/_jsx(\"td\",{className:\"rule-output\",children:/*#__PURE__*/_jsx(\"textarea\",{value:entry,onChange:e=>{const newRules=[...tableData.rules];const newOutputEntries=[...rule.outputEntries];newOutputEntries[entryIndex]=e.target.value;newRules[ruleIndex]={...rule,outputEntries:newOutputEntries};updateTableData({rules:newRules});},placeholder:\"Result\",rows:\"2\"})},`output-${entryIndex}`)),/*#__PURE__*/_jsx(\"td\",{className:\"rule-annotations\",children:/*#__PURE__*/_jsx(\"textarea\",{value:rule.annotations[0]||'',onChange:e=>{const newRules=[...tableData.rules];const newAnnotations=[...(rule.annotations||[])];newAnnotations[0]=e.target.value;newRules[ruleIndex]={...rule,annotations:newAnnotations};updateTableData({rules:newRules});},placeholder:\"Additional notes\",rows:\"2\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"rule-actions\",children:tableData.rules.length>1&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const newRules=tableData.rules.filter((_,i)=>i!==ruleIndex);updateTableData({rules:newRules});},className:\"remove-btn\",title:\"Remove rule\",children:\"\\xD7\"})})]},rule.id))})]})})]})]})]})]})]});};export default DecisionTableEditor;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useLocation","useNavigate","useParams","githubService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DecisionTableEditor","_location$state","_location$state2","_location$state3","location","navigate","user","repo","branch","tableId","profile","setProfile","state","repository","setRepository","selectedBranch","setSelectedBranch","loading","setLoading","error","setError","saving","setSaving","hasChanges","setHasChanges","tableData","setTableData","id","name","description","businessRule","trigger","inputs","outputs","rules","originalTableData","setOriginalTableData","validationErrors","setValidationErrors","initializeData","publicProfile","login","charAt","toUpperCase","slice","avatar_url","type","isDemo","publicRepository","full_name","owner","default_branch","html_url","err","console","loadTableData","_repository$owner","split","repoName","filePath","log","isNewTable","newTable","generateTableId","label","expression","typeRef","inputEntries","outputEntries","annotations","dmnContent","getFileContent","parsedData","parseDMNContent","inputCount","length","outputCount","ruleCount","JSON","parse","stringify","_err$stack","message","status","stack","substring","errorMessage","includes","dmnXml","_decision$getElements","parser","DOMParser","xmlDoc","parseFromString","parserError","getElementsByTagName","Error","decision","decisionTable","getAttribute","question","textContent","inputElements","Array","from","map","input","index","_input$getElementsByT","_input$getElementsByT2","_input$getElementsByT3","outputElements","output","_output$getElementsBy","ruleElements","rule","_rule$getElementsByTa","entry","_entry$getElementsByT","_entry$getElementsByT2","_entry$getElementsByT3","generateDMNContent","data","escapeXml","text","replace","xml","forEach","annotation","Date","now","toString","validateTable","errors","trim","push","handleSave","_repository$owner2","updateFile","updateTableData","updates","prev","updated","addInput","newInput","addOutput","newOutput","addRule","newRule","fill","handleBackToDecisionSupport","_repository$owner3","path","className","children","_repository$owner4","process","env","NODE_ENV","hasProfile","hasRepository","repositoryDetails","onClick","window","reload","_repository$owner5","href","target","rel","title","src","alt","disabled","htmlFor","value","onChange","e","placeholder","rows","newInputs","filter","_","i","newRules","newOutputs","ruleIndex","entryIndex","newInputEntries","newOutputEntries","newAnnotations"],"sources":["/home/runner/work/sgex/sgex/src/components/DecisionTableEditor.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport './DecisionTableEditor.css';\n\nconst DecisionTableEditor = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { user, repo, branch, tableId } = useParams();\n  \n  // State from location or URL params\n  const [profile, setProfile] = useState(location.state?.profile || null);\n  const [repository, setRepository] = useState(location.state?.repository || null);\n  const [selectedBranch, setSelectedBranch] = useState(location.state?.selectedBranch || branch || null);\n  \n  // Editor state\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [hasChanges, setHasChanges] = useState(false);\n  \n  // Table data\n  const [tableData, setTableData] = useState({\n    id: '',\n    name: '',\n    description: '',\n    businessRule: '',\n    trigger: '',\n    inputs: [],\n    outputs: [],\n    rules: []\n  });\n  \n  const [originalTableData, setOriginalTableData] = useState(null);\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  // Initialize repository data if not available\n  const initializeData = useCallback(async () => {\n    if (!profile && !repository && user && repo) {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const publicProfile = {\n          login: user,\n          name: user.charAt(0).toUpperCase() + user.slice(1),\n          avatar_url: `https://github.com/${user}.png`,\n          type: 'User',\n          isDemo: false\n        };\n\n        const publicRepository = {\n          name: repo,\n          full_name: `${user}/${repo}`,\n          owner: { login: user },\n          default_branch: branch || 'main',\n          html_url: `https://github.com/${user}/${repo}`,\n          isDemo: false\n        };\n\n        setProfile(publicProfile);\n        setRepository(publicRepository);\n        setSelectedBranch(branch || 'main');\n      } catch (err) {\n        console.error('Error initializing data:', err);\n        setError('Failed to load data. Please check the URL or try again.');\n      }\n    }\n  }, [user, repo, branch, profile, repository]);\n\n  // Load table data\n  const loadTableData = useCallback(async () => {\n    if (!repository || !selectedBranch || !tableId) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const owner = repository.owner?.login || repository.full_name.split('/')[0];\n      const repoName = repository.name;\n      const filePath = `input/dmn/${tableId}.dmn`;\n\n      console.log('🎯 DecisionTableEditor: Loading table data with parameters:', {\n        owner,\n        repoName,\n        branch: selectedBranch,\n        tableId,\n        filePath,\n        isNewTable: tableId === 'new'\n      });\n\n      // Check if this is a new table\n      if (tableId === 'new') {\n        console.log('📝 DecisionTableEditor: Creating new table');\n        // Initialize with empty table structure\n        const newTable = {\n          id: generateTableId(),\n          name: 'New Decision Table',\n          description: '',\n          businessRule: '',\n          trigger: '',\n          inputs: [\n            {\n              id: 'input1',\n              label: 'Input 1',\n              expression: '',\n              typeRef: 'string',\n              description: ''\n            }\n          ],\n          outputs: [\n            {\n              id: 'output1',\n              label: 'Output 1',\n              typeRef: 'string',\n              description: ''\n            }\n          ],\n          rules: [\n            {\n              id: 'rule1',\n              description: '',\n              inputEntries: [''],\n              outputEntries: [''],\n              annotations: ['']\n            }\n          ]\n        };\n        setTableData(newTable);\n        setOriginalTableData(null);\n        setLoading(false);\n        return;\n      }\n\n      // Load existing DMN file\n      console.log(`📁 DecisionTableEditor: Loading existing DMN file from ${filePath}`);\n      const dmnContent = await githubService.getFileContent(\n        owner,\n        repoName,\n        filePath,\n        selectedBranch\n      );\n\n      console.log('✅ DecisionTableEditor: Successfully loaded DMN content, parsing...');\n      // Parse DMN XML to extract table data\n      const parsedData = parseDMNContent(dmnContent);\n      console.log('✅ DecisionTableEditor: Successfully parsed DMN data:', {\n        id: parsedData.id,\n        name: parsedData.name,\n        inputCount: parsedData.inputs.length,\n        outputCount: parsedData.outputs.length,\n        ruleCount: parsedData.rules.length\n      });\n      \n      setTableData(parsedData);\n      setOriginalTableData(JSON.parse(JSON.stringify(parsedData)));\n\n    } catch (err) {\n      console.error('❌ DecisionTableEditor: Error loading table data:', err);\n      console.error('🔍 DecisionTableEditor: Error details:', {\n        message: err.message,\n        status: err.status,\n        type: typeof err,\n        stack: err.stack?.substring(0, 500)\n      });\n      \n      // Provide more specific error messages based on the error type\n      let errorMessage = 'Failed to load decision table.';\n      \n      if (err.message.includes('File not found')) {\n        errorMessage = `Decision table file \"${tableId}.dmn\" not found in the repository. The file may have been moved, deleted, or the table ID in the URL is incorrect.`;\n      } else if (err.message.includes('Access denied') || err.message.includes('403')) {\n        errorMessage = 'Access denied. This repository may be private or you may not have permission to access it.';\n      } else if (err.message.includes('timeout')) {\n        errorMessage = 'Request timed out while loading the decision table. Please check your internet connection and try again.';\n      } else if (err.message.includes('rate limit')) {\n        errorMessage = 'GitHub API rate limit exceeded. Please wait a moment and try again.';\n      } else if (err.message.includes('Failed to parse DMN file')) {\n        errorMessage = `The DMN file \"${tableId}.dmn\" exists but contains invalid XML format. ${err.message}`;\n      } else {\n        errorMessage = `Failed to load decision table: ${err.message}`;\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  }, [repository, selectedBranch, tableId]);\n\n  useEffect(() => {\n    initializeData();\n  }, [initializeData]);\n\n  useEffect(() => {\n    if (repository && selectedBranch) {\n      loadTableData();\n    }\n  }, [loadTableData, repository, selectedBranch]);\n\n  // Parse DMN XML content into editable structure\n  const parseDMNContent = (dmnXml) => {\n    try {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(dmnXml, 'text/xml');\n      \n      // Check for parsing errors\n      const parserError = xmlDoc.getElementsByTagName('parsererror')[0];\n      if (parserError) {\n        throw new Error('Invalid XML format');\n      }\n\n      const decision = xmlDoc.getElementsByTagName('dmn:decision')[0];\n      const decisionTable = xmlDoc.getElementsByTagName('dmn:decisionTable')[0];\n      \n      if (!decision || !decisionTable) {\n        throw new Error('Invalid DMN structure');\n      }\n\n      // Extract metadata\n      const id = decision.getAttribute('id') || '';\n      const name = decision.getAttribute('label') || '';\n      const question = decision.getElementsByTagName('dmn:question')[0]?.textContent || '';\n      \n      // Extract inputs\n      const inputElements = xmlDoc.getElementsByTagName('dmn:input');\n      const inputs = Array.from(inputElements).map((input, index) => ({\n        id: input.getAttribute('id') || `input${index + 1}`,\n        label: input.getAttribute('label') || `Input ${index + 1}`,\n        expression: input.getElementsByTagName('dmn:text')[0]?.textContent || '',\n        typeRef: input.getElementsByTagName('dmn:inputExpression')[0]?.getAttribute('typeRef') || 'string',\n        description: input.getElementsByTagName('dmn:description')[0]?.textContent || ''\n      }));\n\n      // Extract outputs\n      const outputElements = xmlDoc.getElementsByTagName('dmn:output');\n      const outputs = Array.from(outputElements).map((output, index) => ({\n        id: output.getAttribute('id') || `output${index + 1}`,\n        label: output.getAttribute('label') || `Output ${index + 1}`,\n        typeRef: output.getAttribute('typeRef') || 'string',\n        description: output.getElementsByTagName('dmn:description')[0]?.textContent || ''\n      }));\n\n      // Extract rules\n      const ruleElements = xmlDoc.getElementsByTagName('dmn:rule');\n      const rules = Array.from(ruleElements).map((rule, index) => {\n        const inputEntries = Array.from(rule.getElementsByTagName('dmn:inputEntry')).map(\n          entry => entry.getElementsByTagName('dmn:text')[0]?.textContent || ''\n        );\n        const outputEntries = Array.from(rule.getElementsByTagName('dmn:outputEntry')).map(\n          entry => entry.getElementsByTagName('dmn:text')[0]?.textContent || ''\n        );\n        const annotations = Array.from(rule.getElementsByTagName('dmn:annotationEntry')).map(\n          entry => entry.getElementsByTagName('dmn:text')[0]?.textContent || ''\n        );\n\n        return {\n          id: rule.getAttribute('id') || `rule${index + 1}`,\n          description: rule.getElementsByTagName('dmn:description')[0]?.textContent || '',\n          inputEntries,\n          outputEntries,\n          annotations\n        };\n      });\n\n      return {\n        id,\n        name,\n        description: question,\n        businessRule: '', // Extract from metadata if available\n        trigger: '', // Extract from metadata if available\n        inputs,\n        outputs,\n        rules\n      };\n\n    } catch (err) {\n      console.error('Error parsing DMN content:', err);\n      throw new Error('Failed to parse DMN file: ' + err.message);\n    }\n  };\n\n  // Generate DMN XML from table data\n  const generateDMNContent = (data) => {\n    const escapeXml = (text) => {\n      return text\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;');\n    };\n\n    let xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<dmn:definitions xmlns:dmn=\"https://www.omg.org/spec/DMN/20240513/MODEL/\" \n                 xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" \n                 xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" \n                 xmlns:di=\"http://www.omg.org/spec/DMN/20180521/DI/\"\n                 namespace=\"http://smart.who.int/decision-tables\" \n                 label=\"${escapeXml(data.name)}\" \n                 id=\"${escapeXml(data.id)}\">\n  \n  <dmn:decision id=\"${escapeXml(data.id)}\" label=\"${escapeXml(data.name)}\">\n    <dmn:question>${escapeXml(data.description)}</dmn:question>\n    ${data.businessRule ? `<dmn:businessRule>${escapeXml(data.businessRule)}</dmn:businessRule>` : ''}\n    ${data.trigger ? `<dmn:trigger>${escapeXml(data.trigger)}</dmn:trigger>` : ''}\n    \n    <dmn:decisionTable id=\"${escapeXml(data.id)}.table\" hitPolicy=\"FIRST\" preferredOrientation=\"Rule-as-Row\">\n`;\n\n    // Add inputs\n    data.inputs.forEach(input => {\n      xml += `      <dmn:input id=\"${escapeXml(input.id)}\" label=\"${escapeXml(input.label)}\">\n        <dmn:inputExpression id=\"${escapeXml(input.id)}.expression\" typeRef=\"${escapeXml(input.typeRef)}\">\n          <dmn:text>${escapeXml(input.expression)}</dmn:text>\n        </dmn:inputExpression>\n        ${input.description ? `<dmn:description>${escapeXml(input.description)}</dmn:description>` : ''}\n      </dmn:input>\n`;\n    });\n\n    // Add outputs\n    data.outputs.forEach(output => {\n      xml += `      <dmn:output id=\"${escapeXml(output.id)}\" label=\"${escapeXml(output.label)}\" typeRef=\"${escapeXml(output.typeRef)}\">\n        ${output.description ? `<dmn:description>${escapeXml(output.description)}</dmn:description>` : ''}\n      </dmn:output>\n`;\n    });\n\n    // Add rules\n    data.rules.forEach(rule => {\n      xml += `      <dmn:rule id=\"${escapeXml(rule.id)}\">\n        ${rule.description ? `<dmn:description>${escapeXml(rule.description)}</dmn:description>` : ''}\n`;\n      \n      rule.inputEntries.forEach(entry => {\n        xml += `        <dmn:inputEntry>\n          <dmn:text>${escapeXml(entry)}</dmn:text>\n        </dmn:inputEntry>\n`;\n      });\n\n      rule.outputEntries.forEach(entry => {\n        xml += `        <dmn:outputEntry>\n          <dmn:text>${escapeXml(entry)}</dmn:text>\n        </dmn:outputEntry>\n`;\n      });\n\n      rule.annotations.forEach(annotation => {\n        xml += `        <dmn:annotationEntry>\n          <dmn:text>${escapeXml(annotation)}</dmn:text>\n        </dmn:annotationEntry>\n`;\n      });\n\n      xml += `      </dmn:rule>\n`;\n    });\n\n    xml += `    </dmn:decisionTable>\n  </dmn:decision>\n  \n</dmn:definitions>`;\n\n    return xml;\n  };\n\n  // Generate unique table ID\n  const generateTableId = () => {\n    return 'DAK.DT.' + Date.now().toString(36).toUpperCase();\n  };\n\n  // Validate table data\n  const validateTable = (data) => {\n    const errors = [];\n    \n    if (!data.name.trim()) {\n      errors.push('Table name is required');\n    }\n    \n    if (!data.id.trim()) {\n      errors.push('Table ID is required');\n    }\n    \n    if (data.inputs.length === 0) {\n      errors.push('At least one input is required');\n    }\n    \n    if (data.outputs.length === 0) {\n      errors.push('At least one output is required');\n    }\n    \n    if (data.rules.length === 0) {\n      errors.push('At least one rule is required');\n    }\n\n    // Validate inputs\n    data.inputs.forEach((input, index) => {\n      if (!input.label.trim()) {\n        errors.push(`Input ${index + 1}: Label is required`);\n      }\n      if (!input.expression.trim()) {\n        errors.push(`Input ${index + 1}: Expression is required`);\n      }\n    });\n\n    // Validate outputs\n    data.outputs.forEach((output, index) => {\n      if (!output.label.trim()) {\n        errors.push(`Output ${index + 1}: Label is required`);\n      }\n    });\n\n    // Validate rules\n    data.rules.forEach((rule, index) => {\n      if (rule.inputEntries.length !== data.inputs.length) {\n        errors.push(`Rule ${index + 1}: Must have entry for each input`);\n      }\n      if (rule.outputEntries.length !== data.outputs.length) {\n        errors.push(`Rule ${index + 1}: Must have entry for each output`);\n      }\n    });\n\n    return errors;\n  };\n\n  // Handle table save\n  const handleSave = async () => {\n    try {\n      setSaving(true);\n      setError(null);\n\n      // Validate table\n      const errors = validateTable(tableData);\n      if (errors.length > 0) {\n        setValidationErrors(errors);\n        return;\n      }\n      setValidationErrors([]);\n\n      // Generate DMN content\n      const dmnContent = generateDMNContent(tableData);\n\n      // Save to repository\n      const owner = repository.owner?.login || repository.full_name.split('/')[0];\n      const repoName = repository.name;\n      const filePath = `input/dmn/${tableData.id}.dmn`;\n      const message = tableId === 'new' \n        ? `Add new decision table: ${tableData.name}`\n        : `Update decision table: ${tableData.name}`;\n\n      await githubService.updateFile(\n        owner,\n        repoName,\n        filePath,\n        dmnContent,\n        message,\n        selectedBranch,\n        originalTableData ? 'update' : 'create'\n      );\n\n      setOriginalTableData(JSON.parse(JSON.stringify(tableData)));\n      setHasChanges(false);\n\n      // Navigate back to decision support view\n      navigate(`/decision-support/${owner}/${repoName}/${selectedBranch}`, {\n        state: { profile, repository, selectedBranch }\n      });\n\n    } catch (err) {\n      console.error('Error saving table:', err);\n      setError('Failed to save decision table: ' + err.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Handle data changes\n  const updateTableData = (updates) => {\n    setTableData(prev => {\n      const updated = { ...prev, ...updates };\n      setHasChanges(JSON.stringify(updated) !== JSON.stringify(originalTableData));\n      return updated;\n    });\n  };\n\n  // Add new input\n  const addInput = () => {\n    const newInput = {\n      id: `input${tableData.inputs.length + 1}`,\n      label: `Input ${tableData.inputs.length + 1}`,\n      expression: '',\n      typeRef: 'string',\n      description: ''\n    };\n    \n    updateTableData({\n      inputs: [...tableData.inputs, newInput],\n      rules: tableData.rules.map(rule => ({\n        ...rule,\n        inputEntries: [...rule.inputEntries, '']\n      }))\n    });\n  };\n\n  // Add new output\n  const addOutput = () => {\n    const newOutput = {\n      id: `output${tableData.outputs.length + 1}`,\n      label: `Output ${tableData.outputs.length + 1}`,\n      typeRef: 'string',\n      description: ''\n    };\n    \n    updateTableData({\n      outputs: [...tableData.outputs, newOutput],\n      rules: tableData.rules.map(rule => ({\n        ...rule,\n        outputEntries: [...rule.outputEntries, ''],\n        annotations: [...(rule.annotations || []), '']\n      }))\n    });\n  };\n\n  // Add new rule\n  const addRule = () => {\n    const newRule = {\n      id: `rule${tableData.rules.length + 1}`,\n      description: '',\n      inputEntries: new Array(tableData.inputs.length).fill(''),\n      outputEntries: new Array(tableData.outputs.length).fill(''),\n      annotations: new Array(tableData.outputs.length).fill('')\n    };\n    \n    updateTableData({\n      rules: [...tableData.rules, newRule]\n    });\n  };\n\n  // Navigation handlers\n  const handleBackToDecisionSupport = () => {\n    if (repository && profile) {\n      const owner = repository.owner?.login || repository.full_name.split('/')[0];\n      const repoName = repository.name;\n      const path = selectedBranch \n        ? `/decision-support/${owner}/${repoName}/${selectedBranch}`\n        : `/decision-support/${owner}/${repoName}`;\n      \n      navigate(path, {\n        state: { profile, repository, selectedBranch }\n      });\n    } else {\n      navigate('/');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"decision-table-editor loading-state\">\n        <div className=\"loading-content\">\n          <h2>Loading Decision Table Editor...</h2>\n          <p>Preparing editor interface...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"decision-table-editor error-state\">\n        <div className=\"error-content\">\n          <h2>Error Loading Decision Table Editor</h2>\n          <p>{error}</p>\n          \n          {/* Show debugging information in development */}\n          {process.env.NODE_ENV === 'development' && (\n            <div className=\"debug-info\">\n              <h4>Debug Information:</h4>\n              <pre>\n                {JSON.stringify({\n                  user,\n                  repo,\n                  branch,\n                  tableId,\n                  hasProfile: !!profile,\n                  hasRepository: !!repository,\n                  selectedBranch,\n                  repositoryDetails: repository ? {\n                    name: repository.name,\n                    full_name: repository.full_name,\n                    owner: repository.owner?.login\n                  } : null\n                }, null, 2)}\n              </pre>\n            </div>\n          )}\n          \n          <div className=\"error-suggestions\">\n            <h4>Troubleshooting:</h4>\n            <ul>\n              <li>If you're trying to edit an existing table, verify that the table ID in the URL is correct</li>\n              <li>Check that the repository has the <code>input/dmn/</code> directory structure</li>\n              <li>Make sure the repository is public or you have access to it</li>\n              <li>Try creating a new table instead by clicking \"New Table\" from the Decision Support Logic view</li>\n            </ul>\n          </div>\n          \n          <div className=\"error-actions\">\n            <button onClick={handleBackToDecisionSupport} className=\"action-btn primary\">\n              Back to Decision Support\n            </button>\n            <button onClick={() => window.location.reload()} className=\"action-btn secondary\">\n              Retry\n            </button>\n            {repository && (\n              <button \n                onClick={() => {\n                  const owner = repository.owner?.login || repository.full_name.split('/')[0];\n                  const repoName = repository.name;\n                  navigate(`/decision-table-editor/${owner}/${repoName}/${selectedBranch}/new`, {\n                    state: { profile, repository, selectedBranch }\n                  });\n                }}\n                className=\"action-btn secondary\"\n              >\n                Create New Table\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"decision-table-editor\">\n      <div className=\"editor-header\">\n        <div className=\"header-left\">\n          <div className=\"who-branding\">\n            <h1 onClick={() => navigate('/')} className=\"clickable-title\">SGEX Workbench</h1>\n            <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n          </div>\n          <div className=\"repo-context\">\n            {repository && (\n              <div className=\"repo-info\">\n                <a \n                  href={`https://github.com/${repository.full_name}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"context-repo-link\"\n                  title=\"View repository on GitHub\"\n                >\n                  <span className=\"repo-icon\">📁</span>\n                  <span className=\"context-repo\">{repository.name}</span>\n                  <span className=\"external-link\">↗</span>\n                </a>\n                {selectedBranch && (\n                  <span className=\"branch-info\">\n                    <code className=\"branch-display\">{selectedBranch}</code>\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"header-right\">\n          {profile && (\n            <>\n              <img \n                src={profile.avatar_url || `https://github.com/${profile.login}.png`} \n                alt=\"Profile\" \n                className=\"context-avatar\" \n              />\n              <span className=\"context-owner\">@{profile.login}</span>\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className=\"editor-content\">\n        <div className=\"breadcrumb\">\n          <button onClick={() => navigate('/')} className=\"breadcrumb-link\">\n            Select Profile\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={handleBackToDecisionSupport} className=\"breadcrumb-link\">\n            Decision Support Logic\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <span className=\"breadcrumb-current\">\n            {tableId === 'new' ? 'New Decision Table' : 'Edit Decision Table'}\n          </span>\n        </div>\n\n        <div className=\"editor-main\">\n          <div className=\"editor-toolbar\">\n            <div className=\"toolbar-left\">\n              <h2>🎯 Decision Table Editor</h2>\n              <div className=\"file-context\">\n                {tableId === 'new' ? (\n                  <span className=\"source-file-info new-file\">\n                    📄 New table (not saved yet)\n                  </span>\n                ) : (\n                  <span className=\"source-file-info\">\n                    📄 Editing: <code>input/dmn/{tableId}.dmn</code>\n                  </span>\n                )}\n              </div>\n              {hasChanges && <span className=\"changes-indicator\">• Unsaved changes</span>}\n            </div>\n            <div className=\"toolbar-right\">\n              <button \n                onClick={handleBackToDecisionSupport}\n                className=\"action-btn secondary\"\n                disabled={saving}\n              >\n                Cancel\n              </button>\n              <button \n                onClick={handleSave}\n                className=\"action-btn primary\"\n                disabled={saving}\n              >\n                {saving ? 'Saving...' : 'Save Table'}\n              </button>\n            </div>\n          </div>\n\n          {validationErrors.length > 0 && (\n            <div className=\"validation-errors\">\n              <h4>Please fix the following errors:</h4>\n              <ul>\n                {validationErrors.map((error, index) => (\n                  <li key={index}>{error}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          <div className=\"editor-sections\">\n            {/* Table Metadata Section */}\n            <div className=\"editor-section\">\n              <h3>📋 Table Information</h3>\n              <div className=\"metadata-grid\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"table-id\">Table ID</label>\n                  <input\n                    id=\"table-id\"\n                    type=\"text\"\n                    value={tableData.id}\n                    onChange={(e) => updateTableData({ id: e.target.value })}\n                    placeholder=\"e.g., DAK.DT.EXAMPLE\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"table-name\">Table Name</label>\n                  <input\n                    id=\"table-name\"\n                    type=\"text\"\n                    value={tableData.name}\n                    onChange={(e) => updateTableData({ name: e.target.value })}\n                    placeholder=\"Descriptive name for the decision table\"\n                  />\n                </div>\n                <div className=\"form-group full-width\">\n                  <label htmlFor=\"table-description\">Description</label>\n                  <textarea\n                    id=\"table-description\"\n                    value={tableData.description}\n                    onChange={(e) => updateTableData({ description: e.target.value })}\n                    placeholder=\"What decision does this table make?\"\n                    rows=\"3\"\n                  />\n                </div>\n                <div className=\"form-group full-width\">\n                  <label htmlFor=\"business-rule\">Business Rule</label>\n                  <textarea\n                    id=\"business-rule\"\n                    value={tableData.businessRule}\n                    onChange={(e) => updateTableData({ businessRule: e.target.value })}\n                    placeholder=\"Business rule or policy statement\"\n                    rows=\"2\"\n                  />\n                </div>\n                <div className=\"form-group full-width\">\n                  <label htmlFor=\"trigger\">Trigger</label>\n                  <input\n                    id=\"trigger\"\n                    type=\"text\"\n                    value={tableData.trigger}\n                    onChange={(e) => updateTableData({ trigger: e.target.value })}\n                    placeholder=\"When is this decision table triggered?\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Inputs Section */}\n            <div className=\"editor-section\">\n              <div className=\"section-header\">\n                <h3>📥 Input Columns</h3>\n                <button onClick={addInput} className=\"action-btn secondary small\">\n                  + Add Input\n                </button>\n              </div>\n              <div className=\"inputs-list\">\n                {tableData.inputs.map((input, index) => (\n                  <div key={input.id} className=\"input-card\">\n                    <div className=\"card-header\">\n                      <h4>Input {index + 1}</h4>\n                      {tableData.inputs.length > 1 && (\n                        <button \n                          onClick={() => {\n                            const newInputs = tableData.inputs.filter((_, i) => i !== index);\n                            const newRules = tableData.rules.map(rule => ({\n                              ...rule,\n                              inputEntries: rule.inputEntries.filter((_, i) => i !== index)\n                            }));\n                            updateTableData({ inputs: newInputs, rules: newRules });\n                          }}\n                          className=\"remove-btn\"\n                          title=\"Remove input\"\n                        >\n                          ×\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Label</label>\n                      <input\n                        type=\"text\"\n                        value={input.label}\n                        onChange={(e) => {\n                          const newInputs = [...tableData.inputs];\n                          newInputs[index] = { ...input, label: e.target.value };\n                          updateTableData({ inputs: newInputs });\n                        }}\n                        placeholder=\"Human-readable label\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Expression</label>\n                      <textarea\n                        value={input.expression}\n                        onChange={(e) => {\n                          const newInputs = [...tableData.inputs];\n                          newInputs[index] = { ...input, expression: e.target.value };\n                          updateTableData({ inputs: newInputs });\n                        }}\n                        placeholder=\"CQL expression or data element path\"\n                        rows=\"2\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Type</label>\n                      <select\n                        value={input.typeRef}\n                        onChange={(e) => {\n                          const newInputs = [...tableData.inputs];\n                          newInputs[index] = { ...input, typeRef: e.target.value };\n                          updateTableData({ inputs: newInputs });\n                        }}\n                      >\n                        <option value=\"string\">String</option>\n                        <option value=\"integer\">Integer</option>\n                        <option value=\"boolean\">Boolean</option>\n                        <option value=\"date\">Date</option>\n                        <option value=\"duration\">Duration</option>\n                      </select>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Description</label>\n                      <textarea\n                        value={input.description}\n                        onChange={(e) => {\n                          const newInputs = [...tableData.inputs];\n                          newInputs[index] = { ...input, description: e.target.value };\n                          updateTableData({ inputs: newInputs });\n                        }}\n                        placeholder=\"Additional details about this input\"\n                        rows=\"2\"\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Outputs Section */}\n            <div className=\"editor-section\">\n              <div className=\"section-header\">\n                <h3>📤 Output Columns</h3>\n                <button onClick={addOutput} className=\"action-btn secondary small\">\n                  + Add Output\n                </button>\n              </div>\n              <div className=\"outputs-list\">\n                {tableData.outputs.map((output, index) => (\n                  <div key={output.id} className=\"output-card\">\n                    <div className=\"card-header\">\n                      <h4>Output {index + 1}</h4>\n                      {tableData.outputs.length > 1 && (\n                        <button \n                          onClick={() => {\n                            const newOutputs = tableData.outputs.filter((_, i) => i !== index);\n                            const newRules = tableData.rules.map(rule => ({\n                              ...rule,\n                              outputEntries: rule.outputEntries.filter((_, i) => i !== index),\n                              annotations: rule.annotations.filter((_, i) => i !== index)\n                            }));\n                            updateTableData({ outputs: newOutputs, rules: newRules });\n                          }}\n                          className=\"remove-btn\"\n                          title=\"Remove output\"\n                        >\n                          ×\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Label</label>\n                      <input\n                        type=\"text\"\n                        value={output.label}\n                        onChange={(e) => {\n                          const newOutputs = [...tableData.outputs];\n                          newOutputs[index] = { ...output, label: e.target.value };\n                          updateTableData({ outputs: newOutputs });\n                        }}\n                        placeholder=\"Human-readable label\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Type</label>\n                      <select\n                        value={output.typeRef}\n                        onChange={(e) => {\n                          const newOutputs = [...tableData.outputs];\n                          newOutputs[index] = { ...output, typeRef: e.target.value };\n                          updateTableData({ outputs: newOutputs });\n                        }}\n                      >\n                        <option value=\"string\">String</option>\n                        <option value=\"integer\">Integer</option>\n                        <option value=\"boolean\">Boolean</option>\n                        <option value=\"date\">Date</option>\n                        <option value=\"duration\">Duration</option>\n                      </select>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Description</label>\n                      <textarea\n                        value={output.description}\n                        onChange={(e) => {\n                          const newOutputs = [...tableData.outputs];\n                          newOutputs[index] = { ...output, description: e.target.value };\n                          updateTableData({ outputs: newOutputs });\n                        }}\n                        placeholder=\"Additional details about this output\"\n                        rows=\"2\"\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Rules Section */}\n            <div className=\"editor-section\">\n              <div className=\"section-header\">\n                <h3>⚖️ Decision Rules</h3>\n                <button onClick={addRule} className=\"action-btn secondary small\">\n                  + Add Rule\n                </button>\n              </div>\n              <div className=\"rules-table-container\">\n                <table className=\"rules-table\">\n                  <thead>\n                    <tr>\n                      <th className=\"rule-number\">#</th>\n                      <th className=\"rule-description\">Description</th>\n                      {tableData.inputs.map((input, index) => (\n                        <th key={`input-${index}`} className=\"rule-input\">\n                          {input.label}\n                        </th>\n                      ))}\n                      {tableData.outputs.map((output, index) => (\n                        <th key={`output-${index}`} className=\"rule-output\">\n                          {output.label}\n                        </th>\n                      ))}\n                      <th className=\"rule-annotations\">Notes</th>\n                      <th className=\"rule-actions\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tableData.rules.map((rule, ruleIndex) => (\n                      <tr key={rule.id}>\n                        <td className=\"rule-number\">{ruleIndex + 1}</td>\n                        <td className=\"rule-description\">\n                          <textarea\n                            value={rule.description}\n                            onChange={(e) => {\n                              const newRules = [...tableData.rules];\n                              newRules[ruleIndex] = { ...rule, description: e.target.value };\n                              updateTableData({ rules: newRules });\n                            }}\n                            placeholder=\"Rule description\"\n                            rows=\"2\"\n                          />\n                        </td>\n                        {rule.inputEntries.map((entry, entryIndex) => (\n                          <td key={`input-${entryIndex}`} className=\"rule-input\">\n                            <textarea\n                              value={entry}\n                              onChange={(e) => {\n                                const newRules = [...tableData.rules];\n                                const newInputEntries = [...rule.inputEntries];\n                                newInputEntries[entryIndex] = e.target.value;\n                                newRules[ruleIndex] = { ...rule, inputEntries: newInputEntries };\n                                updateTableData({ rules: newRules });\n                              }}\n                              placeholder=\"Condition\"\n                              rows=\"2\"\n                            />\n                          </td>\n                        ))}\n                        {rule.outputEntries.map((entry, entryIndex) => (\n                          <td key={`output-${entryIndex}`} className=\"rule-output\">\n                            <textarea\n                              value={entry}\n                              onChange={(e) => {\n                                const newRules = [...tableData.rules];\n                                const newOutputEntries = [...rule.outputEntries];\n                                newOutputEntries[entryIndex] = e.target.value;\n                                newRules[ruleIndex] = { ...rule, outputEntries: newOutputEntries };\n                                updateTableData({ rules: newRules });\n                              }}\n                              placeholder=\"Result\"\n                              rows=\"2\"\n                            />\n                          </td>\n                        ))}\n                        <td className=\"rule-annotations\">\n                          <textarea\n                            value={rule.annotations[0] || ''}\n                            onChange={(e) => {\n                              const newRules = [...tableData.rules];\n                              const newAnnotations = [...(rule.annotations || [])];\n                              newAnnotations[0] = e.target.value;\n                              newRules[ruleIndex] = { ...rule, annotations: newAnnotations };\n                              updateTableData({ rules: newRules });\n                            }}\n                            placeholder=\"Additional notes\"\n                            rows=\"2\"\n                          />\n                        </td>\n                        <td className=\"rule-actions\">\n                          {tableData.rules.length > 1 && (\n                            <button \n                              onClick={() => {\n                                const newRules = tableData.rules.filter((_, i) => i !== ruleIndex);\n                                updateTableData({ rules: newRules });\n                              }}\n                              className=\"remove-btn\"\n                              title=\"Remove rule\"\n                            >\n                              ×\n                            </button>\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DecisionTableEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}