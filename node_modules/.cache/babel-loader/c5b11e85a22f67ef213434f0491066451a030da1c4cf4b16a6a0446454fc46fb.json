{"ast":null,"code":"import React,{useState,useEffect}from'react';import{PageLayout}from'./framework';import useThemeImage from'../hooks/useThemeImage';import BranchListingPage from'./BranchListingPage';import'./BranchDeploymentSelector.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BranchDeploymentSelector=_ref=>{let{mode='deployment-selector'}=_ref;const[deployments,setDeployments]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Theme-aware image paths\nconst mascotImage=useThemeImage('sgex-mascot.png');useEffect(()=>{// Only fetch deployments if we're in deployment selector mode\nif(mode!=='deployment-selector')return;const fetchDeployments=async()=>{try{setLoading(true);// For now, we'll use a mock list of deployments\n// In the future, this could be fetched from GitHub Pages API or a deployment manifest\nconst mockDeployments=[{id:'main',name:'Main Application',branch:'main',url:'/sgex/',description:'Primary SGEX Workbench application with all features',status:'active',lastUpdated:new Date().toISOString(),type:'main'},{id:'feature-branch-1',name:'Feature: Enhanced Editor',branch:'feature/enhanced-editor',url:'/sgex/feature-enhanced-editor/',description:'Testing new enhanced component editor features',status:'active',lastUpdated:new Date(Date.now()-86400000).toISOString(),// 1 day ago\ntype:'feature'},{id:'feature-branch-2',name:'Feature: Improved UI',branch:'feature/improved-ui',url:'/sgex/feature-improved-ui/',description:'Updated user interface with improved accessibility',status:'active',lastUpdated:new Date(Date.now()-172800000).toISOString(),// 2 days ago\ntype:'feature'}];setDeployments(mockDeployments);}catch(err){console.error('Error fetching deployments:',err);setError('Failed to load deployment information');}finally{setLoading(false);}};fetchDeployments();},[mode]);const handleDeploymentSelect=deployment=>{// Navigate to the deployment URL\nwindow.location.href=deployment.url;};const formatLastUpdated=dateString=>{const date=new Date(dateString);const now=new Date();const diffInHours=Math.floor((now-date)/(1000*60*60));if(diffInHours<1){return'Updated less than an hour ago';}else if(diffInHours<24){return`Updated ${diffInHours} hour${diffInHours>1?'s':''} ago`;}else{const diffInDays=Math.floor(diffInHours/24);return`Updated ${diffInDays} day${diffInDays>1?'s':''} ago`;}};// If mode is 'branch-listing', use the full branch listing page\nif(mode==='branch-listing'){return/*#__PURE__*/_jsx(BranchListingPage,{});}if(loading){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"deployment-selector-loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"deployment-selector-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading deployments...\"})]})})});}if(error){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"deployment-selector-error\",children:/*#__PURE__*/_jsx(\"div\",{className:\"deployment-selector-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Error Loading Deployments\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),children:\"Retry\"})]})})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"deployment-selector\",showBreadcrumbs:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-selector-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"deployment-hero\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-intro\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"deployment-mascot\",children:/*#__PURE__*/_jsx(\"img\",{src:mascotImage,alt:\"SGEX Workbench Helper\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-text\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"SGEX Deployments\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Branch Deployment Selector\"}),/*#__PURE__*/_jsx(\"p\",{className:\"deployment-description\",children:\"Select a deployment to explore different versions and features of SGEX Workbench. Each deployment represents a different branch or feature in development.\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"deployments-grid\",children:deployments.map(deployment=>/*#__PURE__*/_jsxs(\"div\",{className:`deployment-card ${deployment.type}`,onClick:()=>handleDeploymentSelect(deployment),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-card-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-status\",children:[/*#__PURE__*/_jsx(\"span\",{className:`status-indicator ${deployment.status}`}),/*#__PURE__*/_jsx(\"span\",{className:\"status-text\",children:deployment.status})]}),/*#__PURE__*/_jsx(\"div\",{className:\"deployment-type-badge\",children:deployment.type==='main'?'🏠 Main':'🔬 Feature'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-card-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:deployment.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"deployment-branch\",children:[\"Branch: \",deployment.branch]}),/*#__PURE__*/_jsx(\"p\",{className:\"deployment-description\",children:deployment.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-meta\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"deployment-last-updated\",children:formatLastUpdated(deployment.lastUpdated)}),/*#__PURE__*/_jsx(\"p\",{className:\"deployment-url\",children:deployment.url})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"deployment-card-footer\",children:/*#__PURE__*/_jsx(\"button\",{className:\"deployment-launch-btn\",children:\"Launch Deployment \\u2192\"})})]},deployment.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"deployment-info\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"info-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"About SGEX Deployments\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Each deployment represents a different version of SGEX Workbench. The main deployment contains the stable, production-ready version. Feature deployments contain experimental features and improvements that are being tested before they are merged into the main application.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Feature deployments may contain incomplete features or bugs. Use them to preview upcoming functionality and provide feedback to the development team.\"})]})})]})});};export default BranchDeploymentSelector;","map":{"version":3,"names":["React","useState","useEffect","PageLayout","useThemeImage","BranchListingPage","jsx","_jsx","jsxs","_jsxs","BranchDeploymentSelector","_ref","mode","deployments","setDeployments","loading","setLoading","error","setError","mascotImage","fetchDeployments","mockDeployments","id","name","branch","url","description","status","lastUpdated","Date","toISOString","type","now","err","console","handleDeploymentSelect","deployment","window","location","href","formatLastUpdated","dateString","date","diffInHours","Math","floor","diffInDays","pageName","children","className","onClick","reload","showBreadcrumbs","src","alt","map"],"sources":["/home/runner/work/sgex/sgex/src/components/BranchDeploymentSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PageLayout } from './framework';\nimport useThemeImage from '../hooks/useThemeImage';\nimport BranchListingPage from './BranchListingPage';\nimport './BranchDeploymentSelector.css';\n\nconst BranchDeploymentSelector = ({ mode = 'deployment-selector' }) => {\n  const [deployments, setDeployments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Theme-aware image paths\n  const mascotImage = useThemeImage('sgex-mascot.png');\n\n  useEffect(() => {\n    // Only fetch deployments if we're in deployment selector mode\n    if (mode !== 'deployment-selector') return;\n    \n    const fetchDeployments = async () => {\n      try {\n        setLoading(true);\n        \n        // For now, we'll use a mock list of deployments\n        // In the future, this could be fetched from GitHub Pages API or a deployment manifest\n        const mockDeployments = [\n          {\n            id: 'main',\n            name: 'Main Application',\n            branch: 'main',\n            url: '/sgex/',\n            description: 'Primary SGEX Workbench application with all features',\n            status: 'active',\n            lastUpdated: new Date().toISOString(),\n            type: 'main'\n          },\n          {\n            id: 'feature-branch-1',\n            name: 'Feature: Enhanced Editor',\n            branch: 'feature/enhanced-editor',\n            url: '/sgex/feature-enhanced-editor/',\n            description: 'Testing new enhanced component editor features',\n            status: 'active',\n            lastUpdated: new Date(Date.now() - 86400000).toISOString(), // 1 day ago\n            type: 'feature'\n          },\n          {\n            id: 'feature-branch-2',\n            name: 'Feature: Improved UI',\n            branch: 'feature/improved-ui',\n            url: '/sgex/feature-improved-ui/',\n            description: 'Updated user interface with improved accessibility',\n            status: 'active',\n            lastUpdated: new Date(Date.now() - 172800000).toISOString(), // 2 days ago\n            type: 'feature'\n          }\n        ];\n\n        setDeployments(mockDeployments);\n      } catch (err) {\n        console.error('Error fetching deployments:', err);\n        setError('Failed to load deployment information');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDeployments();\n  }, [mode]);\n\n  const handleDeploymentSelect = (deployment) => {\n    // Navigate to the deployment URL\n    window.location.href = deployment.url;\n  };\n\n  const formatLastUpdated = (dateString) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\n    \n    if (diffInHours < 1) {\n      return 'Updated less than an hour ago';\n    } else if (diffInHours < 24) {\n      return `Updated ${diffInHours} hour${diffInHours > 1 ? 's' : ''} ago`;\n    } else {\n      const diffInDays = Math.floor(diffInHours / 24);\n      return `Updated ${diffInDays} day${diffInDays > 1 ? 's' : ''} ago`;\n    }\n  };\n\n  // If mode is 'branch-listing', use the full branch listing page\n  if (mode === 'branch-listing') {\n    return <BranchListingPage />;\n  }\n\n  if (loading) {\n    return (\n      <PageLayout pageName=\"deployment-selector-loading\">\n        <div className=\"deployment-selector-content\">\n          <div className=\"loading-section\">\n            <div className=\"spinner\"></div>\n            <p>Loading deployments...</p>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <PageLayout pageName=\"deployment-selector-error\">\n        <div className=\"deployment-selector-content\">\n          <div className=\"error-section\">\n            <h2>Error Loading Deployments</h2>\n            <p>{error}</p>\n            <button onClick={() => window.location.reload()}>\n              Retry\n            </button>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout pageName=\"deployment-selector\" showBreadcrumbs={false}>\n      <div className=\"deployment-selector-content\">\n        <div className=\"deployment-hero\">\n          <div className=\"deployment-intro\">\n            <div className=\"deployment-mascot\">\n              <img src={mascotImage} alt=\"SGEX Workbench Helper\" />\n            </div>\n            <div className=\"deployment-text\">\n              <h1>SGEX Deployments</h1>\n              <h2>Branch Deployment Selector</h2>\n              <p className=\"deployment-description\">\n                Select a deployment to explore different versions and features of SGEX Workbench. \n                Each deployment represents a different branch or feature in development.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"deployments-grid\">\n          {deployments.map((deployment) => (\n            <div \n              key={deployment.id}\n              className={`deployment-card ${deployment.type}`}\n              onClick={() => handleDeploymentSelect(deployment)}\n            >\n              <div className=\"deployment-card-header\">\n                <div className=\"deployment-status\">\n                  <span className={`status-indicator ${deployment.status}`}></span>\n                  <span className=\"status-text\">{deployment.status}</span>\n                </div>\n                <div className=\"deployment-type-badge\">\n                  {deployment.type === 'main' ? '🏠 Main' : '🔬 Feature'}\n                </div>\n              </div>\n              \n              <div className=\"deployment-card-content\">\n                <h3>{deployment.name}</h3>\n                <p className=\"deployment-branch\">Branch: {deployment.branch}</p>\n                <p className=\"deployment-description\">{deployment.description}</p>\n                \n                <div className=\"deployment-meta\">\n                  <p className=\"deployment-last-updated\">\n                    {formatLastUpdated(deployment.lastUpdated)}\n                  </p>\n                  <p className=\"deployment-url\">\n                    {deployment.url}\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"deployment-card-footer\">\n                <button className=\"deployment-launch-btn\">\n                  Launch Deployment →\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"deployment-info\">\n          <div className=\"info-card\">\n            <h3>About SGEX Deployments</h3>\n            <p>\n              Each deployment represents a different version of SGEX Workbench. The main deployment \n              contains the stable, production-ready version. Feature deployments contain experimental \n              features and improvements that are being tested before they are merged into the main application.\n            </p>\n            <p>\n              Feature deployments may contain incomplete features or bugs. Use them to preview upcoming \n              functionality and provide feedback to the development team.\n            </p>\n          </div>\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default BranchDeploymentSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}