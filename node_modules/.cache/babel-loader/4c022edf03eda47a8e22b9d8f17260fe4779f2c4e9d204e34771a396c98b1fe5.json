{"ast":null,"code":"import { toPoint } from '../../util/Event';\nimport { getMidPoint, pointsAligned } from '../../util/Geometry';\nimport { append as svgAppend, attr as svgAttr, classes as svgClasses, create as svgCreate } from 'tiny-svg';\nimport { rotate, translate } from '../../util/SvgTransformUtil';\nimport { getApproxIntersection } from '../../util/LineIntersection';\nimport { getDistancePointLine, perpendicularFoot } from './GeometricUtil';\n\n/**\n * @typedef {import('../../core/Types').ConnectionLike} Connection\n *\n * @typedef {import('../../util/Types').Point} Point\n */\n\nexport var BENDPOINT_CLS = 'djs-bendpoint';\nexport var SEGMENT_DRAGGER_CLS = 'djs-segment-dragger';\nexport function toCanvasCoordinates(canvas, event) {\n  var position = toPoint(event),\n    clientRect = canvas._container.getBoundingClientRect(),\n    offset;\n\n  // canvas relative position\n\n  offset = {\n    x: clientRect.left,\n    y: clientRect.top\n  };\n\n  // update actual event payload with canvas relative measures\n\n  var viewbox = canvas.viewbox();\n  return {\n    x: viewbox.x + (position.x - offset.x) / viewbox.scale,\n    y: viewbox.y + (position.y - offset.y) / viewbox.scale\n  };\n}\nexport function getConnectionIntersection(canvas, waypoints, event) {\n  var localPosition = toCanvasCoordinates(canvas, event),\n    intersection = getApproxIntersection(waypoints, localPosition);\n  return intersection;\n}\nexport function addBendpoint(parentGfx, cls) {\n  var groupGfx = svgCreate('g');\n  svgClasses(groupGfx).add(BENDPOINT_CLS);\n  svgAppend(parentGfx, groupGfx);\n  var visual = svgCreate('circle');\n  svgAttr(visual, {\n    cx: 0,\n    cy: 0,\n    r: 4\n  });\n  svgClasses(visual).add('djs-visual');\n  svgAppend(groupGfx, visual);\n  var hit = svgCreate('circle');\n  svgAttr(hit, {\n    cx: 0,\n    cy: 0,\n    r: 10\n  });\n  svgClasses(hit).add('djs-hit');\n  svgAppend(groupGfx, hit);\n  if (cls) {\n    svgClasses(groupGfx).add(cls);\n  }\n  return groupGfx;\n}\nfunction createParallelDragger(parentGfx, segmentStart, segmentEnd, alignment) {\n  var draggerGfx = svgCreate('g');\n  svgAppend(parentGfx, draggerGfx);\n  var width = 18,\n    height = 6,\n    padding = 11,\n    hitWidth = calculateHitWidth(segmentStart, segmentEnd, alignment),\n    hitHeight = height + padding;\n  var visual = svgCreate('rect');\n  svgAttr(visual, {\n    x: -width / 2,\n    y: -height / 2,\n    width: width,\n    height: height\n  });\n  svgClasses(visual).add('djs-visual');\n  svgAppend(draggerGfx, visual);\n  var hit = svgCreate('rect');\n  svgAttr(hit, {\n    x: -hitWidth / 2,\n    y: -hitHeight / 2,\n    width: hitWidth,\n    height: hitHeight\n  });\n  svgClasses(hit).add('djs-hit');\n  svgAppend(draggerGfx, hit);\n  rotate(draggerGfx, alignment === 'v' ? 90 : 0, 0, 0);\n  return draggerGfx;\n}\nexport function addSegmentDragger(parentGfx, segmentStart, segmentEnd) {\n  var groupGfx = svgCreate('g'),\n    mid = getMidPoint(segmentStart, segmentEnd),\n    alignment = pointsAligned(segmentStart, segmentEnd);\n  svgAppend(parentGfx, groupGfx);\n  createParallelDragger(groupGfx, segmentStart, segmentEnd, alignment);\n  svgClasses(groupGfx).add(SEGMENT_DRAGGER_CLS);\n  svgClasses(groupGfx).add(alignment === 'h' ? 'horizontal' : 'vertical');\n  translate(groupGfx, mid.x, mid.y);\n  return groupGfx;\n}\n\n/**\n * Calculates region for segment move which is 2/3 of the full segment length\n * @param {number} segmentLength\n *\n * @return {number}\n */\nexport function calculateSegmentMoveRegion(segmentLength) {\n  return Math.abs(Math.round(segmentLength * 2 / 3));\n}\n\n/**\n * Returns the point with the closest distance that is on the connection path.\n *\n * @param {Point} position\n * @param {Connection} connection\n * @return {Point}\n */\nexport function getClosestPointOnConnection(position, connection) {\n  var segment = getClosestSegment(position, connection);\n  return perpendicularFoot(position, segment);\n}\n\n// helper //////////\n\nfunction calculateHitWidth(segmentStart, segmentEnd, alignment) {\n  var segmentLengthXAxis = segmentEnd.x - segmentStart.x,\n    segmentLengthYAxis = segmentEnd.y - segmentStart.y;\n  return alignment === 'h' ? calculateSegmentMoveRegion(segmentLengthXAxis) : calculateSegmentMoveRegion(segmentLengthYAxis);\n}\nfunction getClosestSegment(position, connection) {\n  var waypoints = connection.waypoints;\n  var minDistance = Infinity,\n    segmentIndex;\n  for (var i = 0; i < waypoints.length - 1; i++) {\n    var start = waypoints[i],\n      end = waypoints[i + 1],\n      distance = getDistancePointLine(position, [start, end]);\n    if (distance < minDistance) {\n      minDistance = distance;\n      segmentIndex = i;\n    }\n  }\n  return [waypoints[segmentIndex], waypoints[segmentIndex + 1]];\n}","map":{"version":3,"names":["toPoint","getMidPoint","pointsAligned","append","svgAppend","attr","svgAttr","classes","svgClasses","create","svgCreate","rotate","translate","getApproxIntersection","getDistancePointLine","perpendicularFoot","BENDPOINT_CLS","SEGMENT_DRAGGER_CLS","toCanvasCoordinates","canvas","event","position","clientRect","_container","getBoundingClientRect","offset","x","left","y","top","viewbox","scale","getConnectionIntersection","waypoints","localPosition","intersection","addBendpoint","parentGfx","cls","groupGfx","add","visual","cx","cy","r","hit","createParallelDragger","segmentStart","segmentEnd","alignment","draggerGfx","width","height","padding","hitWidth","calculateHitWidth","hitHeight","addSegmentDragger","mid","calculateSegmentMoveRegion","segmentLength","Math","abs","round","getClosestPointOnConnection","connection","segment","getClosestSegment","segmentLengthXAxis","segmentLengthYAxis","minDistance","Infinity","segmentIndex","i","length","start","end","distance"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/bendpoints/BendpointUtil.js"],"sourcesContent":["import {\n  toPoint\n} from '../../util/Event';\n\nimport {\n  getMidPoint,\n  pointsAligned\n} from '../../util/Geometry';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport {\n  rotate,\n  translate\n} from '../../util/SvgTransformUtil';\n\nimport {\n  getApproxIntersection\n} from '../../util/LineIntersection';\n\nimport { getDistancePointLine, perpendicularFoot } from './GeometricUtil';\n\n/**\n * @typedef {import('../../core/Types').ConnectionLike} Connection\n *\n * @typedef {import('../../util/Types').Point} Point\n */\n\nexport var BENDPOINT_CLS = 'djs-bendpoint';\nexport var SEGMENT_DRAGGER_CLS = 'djs-segment-dragger';\n\nexport function toCanvasCoordinates(canvas, event) {\n\n  var position = toPoint(event),\n      clientRect = canvas._container.getBoundingClientRect(),\n      offset;\n\n  // canvas relative position\n\n  offset = {\n    x: clientRect.left,\n    y: clientRect.top\n  };\n\n  // update actual event payload with canvas relative measures\n\n  var viewbox = canvas.viewbox();\n\n  return {\n    x: viewbox.x + (position.x - offset.x) / viewbox.scale,\n    y: viewbox.y + (position.y - offset.y) / viewbox.scale\n  };\n}\n\nexport function getConnectionIntersection(canvas, waypoints, event) {\n  var localPosition = toCanvasCoordinates(canvas, event),\n      intersection = getApproxIntersection(waypoints, localPosition);\n\n  return intersection;\n}\n\nexport function addBendpoint(parentGfx, cls) {\n  var groupGfx = svgCreate('g');\n  svgClasses(groupGfx).add(BENDPOINT_CLS);\n\n  svgAppend(parentGfx, groupGfx);\n\n  var visual = svgCreate('circle');\n  svgAttr(visual, {\n    cx: 0,\n    cy: 0,\n    r: 4\n  });\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(groupGfx, visual);\n\n  var hit = svgCreate('circle');\n  svgAttr(hit, {\n    cx: 0,\n    cy: 0,\n    r: 10\n  });\n  svgClasses(hit).add('djs-hit');\n\n  svgAppend(groupGfx, hit);\n\n  if (cls) {\n    svgClasses(groupGfx).add(cls);\n  }\n\n  return groupGfx;\n}\n\nfunction createParallelDragger(parentGfx, segmentStart, segmentEnd, alignment) {\n  var draggerGfx = svgCreate('g');\n\n  svgAppend(parentGfx, draggerGfx);\n\n  var width = 18,\n      height = 6,\n      padding = 11,\n      hitWidth = calculateHitWidth(segmentStart, segmentEnd, alignment),\n      hitHeight = height + padding;\n\n  var visual = svgCreate('rect');\n  svgAttr(visual, {\n    x: -width / 2,\n    y: -height / 2,\n    width: width,\n    height: height\n  });\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(draggerGfx, visual);\n\n  var hit = svgCreate('rect');\n  svgAttr(hit, {\n    x: -hitWidth / 2,\n    y: -hitHeight / 2,\n    width: hitWidth,\n    height: hitHeight\n  });\n  svgClasses(hit).add('djs-hit');\n\n  svgAppend(draggerGfx, hit);\n\n  rotate(draggerGfx, alignment === 'v' ? 90 : 0, 0, 0);\n\n  return draggerGfx;\n}\n\n\nexport function addSegmentDragger(parentGfx, segmentStart, segmentEnd) {\n\n  var groupGfx = svgCreate('g'),\n      mid = getMidPoint(segmentStart, segmentEnd),\n      alignment = pointsAligned(segmentStart, segmentEnd);\n\n  svgAppend(parentGfx, groupGfx);\n\n  createParallelDragger(groupGfx, segmentStart, segmentEnd, alignment);\n\n  svgClasses(groupGfx).add(SEGMENT_DRAGGER_CLS);\n  svgClasses(groupGfx).add(alignment === 'h' ? 'horizontal' : 'vertical');\n\n  translate(groupGfx, mid.x, mid.y);\n\n  return groupGfx;\n}\n\n/**\n * Calculates region for segment move which is 2/3 of the full segment length\n * @param {number} segmentLength\n *\n * @return {number}\n */\nexport function calculateSegmentMoveRegion(segmentLength) {\n  return Math.abs(Math.round(segmentLength * 2 / 3));\n}\n\n/**\n * Returns the point with the closest distance that is on the connection path.\n *\n * @param {Point} position\n * @param {Connection} connection\n * @return {Point}\n */\nexport function getClosestPointOnConnection(position, connection) {\n  var segment = getClosestSegment(position, connection);\n\n  return perpendicularFoot(position, segment);\n}\n\n\n// helper //////////\n\nfunction calculateHitWidth(segmentStart, segmentEnd, alignment) {\n  var segmentLengthXAxis = segmentEnd.x - segmentStart.x,\n      segmentLengthYAxis = segmentEnd.y - segmentStart.y;\n\n  return alignment === 'h' ?\n    calculateSegmentMoveRegion(segmentLengthXAxis) :\n    calculateSegmentMoveRegion(segmentLengthYAxis);\n}\n\nfunction getClosestSegment(position, connection) {\n  var waypoints = connection.waypoints;\n\n  var minDistance = Infinity,\n      segmentIndex;\n\n  for (var i = 0; i < waypoints.length - 1; i++) {\n    var start = waypoints[i],\n        end = waypoints[i + 1],\n        distance = getDistancePointLine(position, [ start, end ]);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      segmentIndex = i;\n    }\n  }\n\n  return [ waypoints[segmentIndex], waypoints[segmentIndex + 1] ];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}