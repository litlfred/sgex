{"ast":null,"code":"import { hasSecondaryModifier, isPrimaryButton } from '../../util/Mouse';\nimport { find, isArray } from 'min-dash';\n\n/**\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/ElementRegistry').default} ElementRegistry\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('./Selection').default} Selection\n */\n\n/**\n * @param {EventBus} eventBus\n * @param {Selection} selection\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nexport default function SelectionBehavior(eventBus, selection, canvas, elementRegistry) {\n  // Select elements on create\n  eventBus.on('create.end', 500, function (event) {\n    var context = event.context,\n      canExecute = context.canExecute,\n      elements = context.elements,\n      hints = context.hints || {},\n      autoSelect = hints.autoSelect;\n    if (canExecute) {\n      if (autoSelect === false) {\n        // Select no elements\n        return;\n      }\n      if (isArray(autoSelect)) {\n        selection.select(autoSelect);\n      } else {\n        // Select all elements by default\n        selection.select(elements.filter(isShown));\n      }\n    }\n  });\n\n  // Select connection targets on connect\n  eventBus.on('connect.end', 500, function (event) {\n    var context = event.context,\n      connection = context.connection;\n    if (connection) {\n      selection.select(connection);\n    }\n  });\n\n  // Select shapes on move\n  eventBus.on('shape.move.end', 500, function (event) {\n    var previousSelection = event.previousSelection || [];\n    var shape = elementRegistry.get(event.context.shape.id);\n\n    // Always select main shape on move\n    var isSelected = find(previousSelection, function (selectedShape) {\n      return shape.id === selectedShape.id;\n    });\n    if (!isSelected) {\n      selection.select(shape);\n    }\n  });\n\n  // Select elements on click\n  eventBus.on('element.click', function (event) {\n    if (!isPrimaryButton(event)) {\n      return;\n    }\n    var element = event.element;\n    if (element === canvas.getRootElement()) {\n      element = null;\n    }\n    var isSelected = selection.isSelected(element),\n      isMultiSelect = selection.get().length > 1;\n\n    // Add to selection if SHIFT pressed\n    var add = hasSecondaryModifier(event);\n    if (isSelected && isMultiSelect) {\n      if (add) {\n        // Deselect element\n        return selection.deselect(element);\n      } else {\n        // Select element only\n        return selection.select(element);\n      }\n    } else if (!isSelected) {\n      // Select element\n      selection.select(element, add);\n    } else {\n      // Deselect element\n      selection.deselect(element);\n    }\n  });\n}\nSelectionBehavior.$inject = ['eventBus', 'selection', 'canvas', 'elementRegistry'];\nfunction isShown(element) {\n  return !element.hidden;\n}","map":{"version":3,"names":["hasSecondaryModifier","isPrimaryButton","find","isArray","SelectionBehavior","eventBus","selection","canvas","elementRegistry","on","event","context","canExecute","elements","hints","autoSelect","select","filter","isShown","connection","previousSelection","shape","get","id","isSelected","selectedShape","element","getRootElement","isMultiSelect","length","add","deselect","$inject","hidden"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/selection/SelectionBehavior.js"],"sourcesContent":["import {\n  hasSecondaryModifier,\n  isPrimaryButton\n} from '../../util/Mouse';\n\nimport {\n  find,\n  isArray\n} from 'min-dash';\n\n/**\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/ElementRegistry').default} ElementRegistry\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('./Selection').default} Selection\n */\n\n/**\n * @param {EventBus} eventBus\n * @param {Selection} selection\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nexport default function SelectionBehavior(eventBus, selection, canvas, elementRegistry) {\n\n  // Select elements on create\n  eventBus.on('create.end', 500, function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        elements = context.elements,\n        hints = context.hints || {},\n        autoSelect = hints.autoSelect;\n\n    if (canExecute) {\n      if (autoSelect === false) {\n\n        // Select no elements\n        return;\n      }\n\n      if (isArray(autoSelect)) {\n        selection.select(autoSelect);\n      } else {\n\n        // Select all elements by default\n        selection.select(elements.filter(isShown));\n      }\n    }\n  });\n\n  // Select connection targets on connect\n  eventBus.on('connect.end', 500, function(event) {\n    var context = event.context,\n        connection = context.connection;\n\n    if (connection) {\n      selection.select(connection);\n    }\n  });\n\n  // Select shapes on move\n  eventBus.on('shape.move.end', 500, function(event) {\n    var previousSelection = event.previousSelection || [];\n\n    var shape = elementRegistry.get(event.context.shape.id);\n\n    // Always select main shape on move\n    var isSelected = find(previousSelection, function(selectedShape) {\n      return shape.id === selectedShape.id;\n    });\n\n    if (!isSelected) {\n      selection.select(shape);\n    }\n  });\n\n  // Select elements on click\n  eventBus.on('element.click', function(event) {\n\n    if (!isPrimaryButton(event)) {\n      return;\n    }\n\n    var element = event.element;\n\n    if (element === canvas.getRootElement()) {\n      element = null;\n    }\n\n    var isSelected = selection.isSelected(element),\n        isMultiSelect = selection.get().length > 1;\n\n    // Add to selection if SHIFT pressed\n    var add = hasSecondaryModifier(event);\n\n    if (isSelected && isMultiSelect) {\n      if (add) {\n\n        // Deselect element\n        return selection.deselect(element);\n      } else {\n\n        // Select element only\n        return selection.select(element);\n      }\n    } else if (!isSelected) {\n\n      // Select element\n      selection.select(element, add);\n    } else {\n\n      // Deselect element\n      selection.deselect(element);\n    }\n  });\n}\n\nSelectionBehavior.$inject = [\n  'eventBus',\n  'selection',\n  'canvas',\n  'elementRegistry'\n];\n\n\nfunction isShown(element) {\n  return !element.hidden;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}