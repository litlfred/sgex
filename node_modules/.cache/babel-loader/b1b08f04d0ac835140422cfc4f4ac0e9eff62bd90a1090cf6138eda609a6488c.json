{"ast":null,"code":"import { is } from '../../../util/ModelUtil';\nimport { isExpanded, isHorizontal } from '../../../util/DiUtil';\nimport { asTRBL } from 'diagram-js/lib/layout/LayoutUtil';\nimport { collectLanes, getLanesRoot } from '../util/LaneUtil';\nvar HIGH_PRIORITY = 1500;\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n *\n * @typedef {import('../../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').Dimensions} Dimensions\n * @typedef {import('diagram-js/lib/util/Types').Direction} Direction\n * @typedef {import('diagram-js/lib/util/Types').RectTRBL} RectTRBL\n */\n\n/**\n * @type {Dimensions}\n */\nexport var GROUP_MIN_DIMENSIONS = {\n  width: 140,\n  height: 120\n};\n\n/**\n * @type {Dimensions}\n */\nexport var LANE_MIN_DIMENSIONS = {\n  width: 300,\n  height: 60\n};\n\n/**\n * @type {Dimensions}\n */\nexport var VERTICAL_LANE_MIN_DIMENSIONS = {\n  width: 60,\n  height: 300\n};\n\n/**\n * @type {Dimensions}\n */\nexport var PARTICIPANT_MIN_DIMENSIONS = {\n  width: 300,\n  height: 150\n};\n\n/**\n * @type {Dimensions}\n */\nexport var VERTICAL_PARTICIPANT_MIN_DIMENSIONS = {\n  width: 150,\n  height: 300\n};\n\n/**\n * @type {Dimensions}\n */\nexport var SUB_PROCESS_MIN_DIMENSIONS = {\n  width: 140,\n  height: 120\n};\n\n/**\n * @type {Dimensions}\n */\nexport var TEXT_ANNOTATION_MIN_DIMENSIONS = {\n  width: 50,\n  height: 30\n};\n\n/**\n * Set minimum bounds/resize constraints on resize.\n *\n * @param {EventBus} eventBus\n */\nexport default function ResizeBehavior(eventBus) {\n  eventBus.on('resize.start', HIGH_PRIORITY, function (event) {\n    var context = event.context,\n      shape = context.shape,\n      direction = context.direction,\n      balanced = context.balanced;\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\n      context.resizeConstraints = getParticipantResizeConstraints(shape, direction, balanced);\n    }\n    if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {\n      context.minDimensions = SUB_PROCESS_MIN_DIMENSIONS;\n    }\n    if (is(shape, 'bpmn:TextAnnotation')) {\n      context.minDimensions = TEXT_ANNOTATION_MIN_DIMENSIONS;\n    }\n  });\n}\nResizeBehavior.$inject = ['eventBus'];\nvar abs = Math.abs,\n  min = Math.min,\n  max = Math.max;\nfunction addToTrbl(trbl, attr, value, choice) {\n  var current = trbl[attr];\n\n  // make sure to set the value if it does not exist\n  // or apply the correct value by comparing against\n  // choice(value, currentValue)\n  trbl[attr] = current === undefined ? value : choice(value, current);\n}\nfunction addMin(trbl, attr, value) {\n  return addToTrbl(trbl, attr, value, min);\n}\nfunction addMax(trbl, attr, value) {\n  return addToTrbl(trbl, attr, value, max);\n}\nvar LANE_PADDING = {\n    top: 20,\n    left: 50,\n    right: 20,\n    bottom: 20\n  },\n  VERTICAL_LANE_PADDING = {\n    top: 50,\n    left: 20,\n    right: 20,\n    bottom: 20\n  };\n\n/**\n * @param {Shape} laneShape\n * @param {Direction} resizeDirection\n * @param {boolean} [balanced=false]\n *\n * @return { {\n *   min: RectTRBL;\n *   max: RectTRBL;\n * } }\n */\nexport function getParticipantResizeConstraints(laneShape, resizeDirection, balanced) {\n  var lanesRoot = getLanesRoot(laneShape);\n  var isFirst = true,\n    isLast = true;\n  var allLanes = collectLanes(lanesRoot, [lanesRoot]);\n  var laneTrbl = asTRBL(laneShape);\n  var maxTrbl = {},\n    minTrbl = {};\n  var isHorizontalLane = isHorizontal(laneShape);\n  var minDimensions = isHorizontalLane ? LANE_MIN_DIMENSIONS : VERTICAL_LANE_MIN_DIMENSIONS;\n  if (/n/.test(resizeDirection)) {\n    minTrbl.top = laneTrbl.bottom - minDimensions.height;\n  } else if (/e/.test(resizeDirection)) {\n    minTrbl.right = laneTrbl.left + minDimensions.width;\n  } else if (/s/.test(resizeDirection)) {\n    minTrbl.bottom = laneTrbl.top + minDimensions.height;\n  } else if (/w/.test(resizeDirection)) {\n    minTrbl.left = laneTrbl.right - minDimensions.width;\n  }\n\n  // min/max size based on related lanes\n  allLanes.forEach(function (other) {\n    var otherTrbl = asTRBL(other);\n\n    // lane flags\n    if (isHorizontalLane) {\n      if (otherTrbl.top < laneTrbl.top - 10) {\n        isFirst = false;\n      }\n      if (otherTrbl.bottom > laneTrbl.bottom + 10) {\n        isLast = false;\n      }\n    } else {\n      if (otherTrbl.left < laneTrbl.left - 10) {\n        isFirst = false;\n      }\n      if (otherTrbl.right > laneTrbl.right + 10) {\n        isLast = false;\n      }\n    }\n    if (/n/.test(resizeDirection)) {\n      // max top size (based on next element)\n      if (balanced && abs(laneTrbl.top - otherTrbl.bottom) < 10) {\n        addMax(maxTrbl, 'top', otherTrbl.top + minDimensions.height);\n      }\n\n      // min top size (based on self or nested element)\n      if (abs(laneTrbl.top - otherTrbl.top) < 5) {\n        addMin(minTrbl, 'top', otherTrbl.bottom - minDimensions.height);\n      }\n    }\n    if (/e/.test(resizeDirection)) {\n      // max right size (based on previous element)\n      if (balanced && abs(laneTrbl.right - otherTrbl.left) < 10) {\n        addMin(maxTrbl, 'right', otherTrbl.right - minDimensions.width);\n      }\n\n      // min right size (based on self or nested element)\n      if (abs(laneTrbl.right - otherTrbl.right) < 5) {\n        addMax(minTrbl, 'right', otherTrbl.left + minDimensions.width);\n      }\n    }\n    if (/s/.test(resizeDirection)) {\n      // max bottom size (based on previous element)\n      if (balanced && abs(laneTrbl.bottom - otherTrbl.top) < 10) {\n        addMin(maxTrbl, 'bottom', otherTrbl.bottom - minDimensions.height);\n      }\n\n      // min bottom size (based on self or nested element)\n      if (abs(laneTrbl.bottom - otherTrbl.bottom) < 5) {\n        addMax(minTrbl, 'bottom', otherTrbl.top + minDimensions.height);\n      }\n    }\n    if (/w/.test(resizeDirection)) {\n      // max left size (based on next element)\n      if (balanced && abs(laneTrbl.left - otherTrbl.right) < 10) {\n        addMax(maxTrbl, 'left', otherTrbl.left + minDimensions.width);\n      }\n\n      // min left size (based on self or nested element)\n      if (abs(laneTrbl.left - otherTrbl.left) < 5) {\n        addMin(minTrbl, 'left', otherTrbl.right - minDimensions.width);\n      }\n    }\n  });\n\n  // max top/bottom/left/right size based on flow nodes\n  var flowElements = lanesRoot.children.filter(function (s) {\n    return !s.hidden && !s.waypoints && (is(s, 'bpmn:FlowElement') || is(s, 'bpmn:Artifact'));\n  });\n  var padding = isHorizontalLane ? LANE_PADDING : VERTICAL_LANE_PADDING;\n  flowElements.forEach(function (flowElement) {\n    var flowElementTrbl = asTRBL(flowElement);\n\n    // vertical lane will resize from top with respect to flow element irrespective of first or last lane\n    if (/n/.test(resizeDirection) && (!isHorizontalLane || isFirst)) {\n      addMin(minTrbl, 'top', flowElementTrbl.top - padding.top);\n    }\n\n    // horizonal lane will resize from right with respect to flow element irrespective of first or last lane\n    if (/e/.test(resizeDirection) && (isHorizontalLane || isLast)) {\n      addMax(minTrbl, 'right', flowElementTrbl.right + padding.right);\n    }\n\n    // vertical lane will resize from bottom with respect to flow element irrespective of first or last lane\n    if (/s/.test(resizeDirection) && (!isHorizontalLane || isLast)) {\n      addMax(minTrbl, 'bottom', flowElementTrbl.bottom + padding.bottom);\n    }\n\n    // horizonal lane will resize from left with respect to flow element irrespective of first or last lane\n    if (/w/.test(resizeDirection) && (isHorizontalLane || isFirst)) {\n      addMin(minTrbl, 'left', flowElementTrbl.left - padding.left);\n    }\n  });\n  return {\n    min: minTrbl,\n    max: maxTrbl\n  };\n}","map":{"version":3,"names":["is","isExpanded","isHorizontal","asTRBL","collectLanes","getLanesRoot","HIGH_PRIORITY","GROUP_MIN_DIMENSIONS","width","height","LANE_MIN_DIMENSIONS","VERTICAL_LANE_MIN_DIMENSIONS","PARTICIPANT_MIN_DIMENSIONS","VERTICAL_PARTICIPANT_MIN_DIMENSIONS","SUB_PROCESS_MIN_DIMENSIONS","TEXT_ANNOTATION_MIN_DIMENSIONS","ResizeBehavior","eventBus","on","event","context","shape","direction","balanced","resizeConstraints","getParticipantResizeConstraints","minDimensions","$inject","abs","Math","min","max","addToTrbl","trbl","attr","value","choice","current","undefined","addMin","addMax","LANE_PADDING","top","left","right","bottom","VERTICAL_LANE_PADDING","laneShape","resizeDirection","lanesRoot","isFirst","isLast","allLanes","laneTrbl","maxTrbl","minTrbl","isHorizontalLane","test","forEach","other","otherTrbl","flowElements","children","filter","s","hidden","waypoints","padding","flowElement","flowElementTrbl"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/behavior/ResizeBehavior.js"],"sourcesContent":["import { is } from '../../../util/ModelUtil';\n\nimport {\n  isExpanded,\n  isHorizontal\n} from '../../../util/DiUtil';\n\nimport {\n  asTRBL\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  collectLanes,\n  getLanesRoot\n} from '../util/LaneUtil';\n\nvar HIGH_PRIORITY = 1500;\n\n/**\n * @typedef {import('diagram-js/lib/core/EventBus').default} EventBus\n *\n * @typedef {import('../../../model/Types').Shape} Shape\n *\n * @typedef {import('diagram-js/lib/util/Types').Dimensions} Dimensions\n * @typedef {import('diagram-js/lib/util/Types').Direction} Direction\n * @typedef {import('diagram-js/lib/util/Types').RectTRBL} RectTRBL\n */\n\n/**\n * @type {Dimensions}\n */\nexport var GROUP_MIN_DIMENSIONS = { width: 140, height: 120 };\n\n/**\n * @type {Dimensions}\n */\nexport var LANE_MIN_DIMENSIONS = { width: 300, height: 60 };\n\n/**\n * @type {Dimensions}\n */\nexport var VERTICAL_LANE_MIN_DIMENSIONS = { width: 60, height: 300 };\n\n/**\n * @type {Dimensions}\n */\nexport var PARTICIPANT_MIN_DIMENSIONS = { width: 300, height: 150 };\n\n/**\n * @type {Dimensions}\n */\nexport var VERTICAL_PARTICIPANT_MIN_DIMENSIONS = { width: 150, height: 300 };\n\n/**\n * @type {Dimensions}\n */\nexport var SUB_PROCESS_MIN_DIMENSIONS = { width: 140, height: 120 };\n\n/**\n * @type {Dimensions}\n */\nexport var TEXT_ANNOTATION_MIN_DIMENSIONS = { width: 50, height: 30 };\n\n/**\n * Set minimum bounds/resize constraints on resize.\n *\n * @param {EventBus} eventBus\n */\nexport default function ResizeBehavior(eventBus) {\n  eventBus.on('resize.start', HIGH_PRIORITY, function(event) {\n    var context = event.context,\n        shape = context.shape,\n        direction = context.direction,\n        balanced = context.balanced;\n\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\n      context.resizeConstraints = getParticipantResizeConstraints(shape, direction, balanced);\n    }\n\n    if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {\n      context.minDimensions = SUB_PROCESS_MIN_DIMENSIONS;\n    }\n\n    if (is(shape, 'bpmn:TextAnnotation')) {\n      context.minDimensions = TEXT_ANNOTATION_MIN_DIMENSIONS;\n    }\n  });\n}\n\nResizeBehavior.$inject = [ 'eventBus' ];\n\n\nvar abs = Math.abs,\n    min = Math.min,\n    max = Math.max;\n\n\nfunction addToTrbl(trbl, attr, value, choice) {\n  var current = trbl[attr];\n\n  // make sure to set the value if it does not exist\n  // or apply the correct value by comparing against\n  // choice(value, currentValue)\n  trbl[attr] = current === undefined ? value : choice(value, current);\n}\n\nfunction addMin(trbl, attr, value) {\n  return addToTrbl(trbl, attr, value, min);\n}\n\nfunction addMax(trbl, attr, value) {\n  return addToTrbl(trbl, attr, value, max);\n}\n\nvar LANE_PADDING = { top: 20, left: 50, right: 20, bottom: 20 },\n    VERTICAL_LANE_PADDING = { top: 50, left: 20, right: 20, bottom: 20 };\n\n/**\n * @param {Shape} laneShape\n * @param {Direction} resizeDirection\n * @param {boolean} [balanced=false]\n *\n * @return { {\n *   min: RectTRBL;\n *   max: RectTRBL;\n * } }\n */\nexport function getParticipantResizeConstraints(laneShape, resizeDirection, balanced) {\n  var lanesRoot = getLanesRoot(laneShape);\n\n  var isFirst = true,\n      isLast = true;\n\n  var allLanes = collectLanes(lanesRoot, [ lanesRoot ]);\n\n  var laneTrbl = asTRBL(laneShape);\n\n  var maxTrbl = {},\n      minTrbl = {};\n\n  var isHorizontalLane = isHorizontal(laneShape);\n\n  var minDimensions = isHorizontalLane ? LANE_MIN_DIMENSIONS : VERTICAL_LANE_MIN_DIMENSIONS;\n\n  if (/n/.test(resizeDirection)) {\n    minTrbl.top = laneTrbl.bottom - minDimensions.height;\n  } else if (/e/.test(resizeDirection)) {\n    minTrbl.right = laneTrbl.left + minDimensions.width;\n  } else if (/s/.test(resizeDirection)) {\n    minTrbl.bottom = laneTrbl.top + minDimensions.height;\n  } else if (/w/.test(resizeDirection)) {\n    minTrbl.left = laneTrbl.right - minDimensions.width;\n  }\n\n  // min/max size based on related lanes\n  allLanes.forEach(function(other) {\n\n    var otherTrbl = asTRBL(other);\n\n    // lane flags\n    if (isHorizontalLane) {\n      if (otherTrbl.top < (laneTrbl.top - 10)) {\n        isFirst = false;\n      }\n      if (otherTrbl.bottom > (laneTrbl.bottom + 10)) {\n        isLast = false;\n      }\n    }\n    else {\n      if (otherTrbl.left < (laneTrbl.left - 10)) {\n        isFirst = false;\n      }\n      if (otherTrbl.right > (laneTrbl.right + 10)) {\n        isLast = false;\n      }\n    }\n\n    if (/n/.test(resizeDirection)) {\n\n      // max top size (based on next element)\n      if (balanced && abs(laneTrbl.top - otherTrbl.bottom) < 10) {\n        addMax(maxTrbl, 'top', otherTrbl.top + minDimensions.height);\n      }\n\n      // min top size (based on self or nested element)\n      if (abs(laneTrbl.top - otherTrbl.top) < 5) {\n        addMin(minTrbl, 'top', otherTrbl.bottom - minDimensions.height);\n      }\n    }\n\n    if (/e/.test(resizeDirection)) {\n\n      // max right size (based on previous element)\n      if (balanced && abs(laneTrbl.right - otherTrbl.left) < 10) {\n        addMin(maxTrbl, 'right', otherTrbl.right - minDimensions.width);\n      }\n\n      // min right size (based on self or nested element)\n      if (abs(laneTrbl.right - otherTrbl.right) < 5) {\n        addMax(minTrbl, 'right', otherTrbl.left + minDimensions.width);\n      }\n    }\n\n    if (/s/.test(resizeDirection)) {\n\n      // max bottom size (based on previous element)\n      if (balanced && abs(laneTrbl.bottom - otherTrbl.top) < 10) {\n        addMin(maxTrbl, 'bottom', otherTrbl.bottom - minDimensions.height);\n      }\n\n      // min bottom size (based on self or nested element)\n      if (abs(laneTrbl.bottom - otherTrbl.bottom) < 5) {\n        addMax(minTrbl, 'bottom', otherTrbl.top + minDimensions.height);\n      }\n    }\n\n    if (/w/.test(resizeDirection)) {\n\n      // max left size (based on next element)\n      if (balanced && abs(laneTrbl.left - otherTrbl.right) < 10) {\n        addMax(maxTrbl, 'left', otherTrbl.left + minDimensions.width);\n      }\n\n      // min left size (based on self or nested element)\n      if (abs(laneTrbl.left - otherTrbl.left) < 5) {\n        addMin(minTrbl, 'left', otherTrbl.right - minDimensions.width);\n      }\n    }\n  });\n\n  // max top/bottom/left/right size based on flow nodes\n  var flowElements = lanesRoot.children.filter(function(s) {\n    return !s.hidden && !s.waypoints && (is(s, 'bpmn:FlowElement') || is(s, 'bpmn:Artifact'));\n  });\n\n  var padding = isHorizontalLane ? LANE_PADDING : VERTICAL_LANE_PADDING;\n\n  flowElements.forEach(function(flowElement) {\n\n    var flowElementTrbl = asTRBL(flowElement);\n\n    // vertical lane will resize from top with respect to flow element irrespective of first or last lane\n    if (/n/.test(resizeDirection) && (!isHorizontalLane || isFirst)) {\n      addMin(minTrbl, 'top', flowElementTrbl.top - padding.top);\n    }\n\n    // horizonal lane will resize from right with respect to flow element irrespective of first or last lane\n    if (/e/.test(resizeDirection) && (isHorizontalLane || isLast)) {\n      addMax(minTrbl, 'right', flowElementTrbl.right + padding.right);\n    }\n\n    // vertical lane will resize from bottom with respect to flow element irrespective of first or last lane\n    if (/s/.test(resizeDirection) && (!isHorizontalLane || isLast)) {\n      addMax(minTrbl, 'bottom', flowElementTrbl.bottom + padding.bottom);\n    }\n\n    // horizonal lane will resize from left with respect to flow element irrespective of first or last lane\n    if (/w/.test(resizeDirection) && (isHorizontalLane || isFirst)) {\n      addMin(minTrbl, 'left', flowElementTrbl.left - padding.left);\n    }\n  });\n  return {\n    min: minTrbl,\n    max: maxTrbl\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}