{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{PageLayout,AssetEditorLayout,useDAKParams}from'./framework';import ContextualHelpMascot from'./ContextualHelpMascot';import githubService from'../services/githubService';import'./QuestionnaireEditor.css';// Simple Visual Editor Component (without LForms dependency for now)\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const LFormsVisualEditor=_ref=>{var _questionnaire$item2,_questionnaire$item3,_questionnaire$item4;let{questionnaire,onChange,onError}=_ref;const[previewMode,setPreviewMode]=useState(false);const addQuestion=()=>{var _questionnaire$item;const newItem={linkId:`item-${Date.now()}`,text:`New Question ${(((_questionnaire$item=questionnaire.item)===null||_questionnaire$item===void 0?void 0:_questionnaire$item.length)||0)+1}`,type:'string',required:false};const updatedQuestionnaire={...questionnaire,item:[...(questionnaire.item||[]),newItem]};onChange(updatedQuestionnaire);};const removeQuestion=index=>{if(!questionnaire.item)return;const updatedItems=questionnaire.item.filter((_,i)=>i!==index);const updatedQuestionnaire={...questionnaire,item:updatedItems};onChange(updatedQuestionnaire);};const updateQuestion=(index,field,value)=>{if(!questionnaire.item)return;const updatedItems=[...questionnaire.item];updatedItems[index]={...updatedItems[index],[field]:value};const updatedQuestionnaire={...questionnaire,item:updatedItems};onChange(updatedQuestionnaire);};const updateMetadata=(field,value)=>{const updatedQuestionnaire={...questionnaire,[field]:value};onChange(updatedQuestionnaire);};return/*#__PURE__*/_jsxs(\"div\",{className:\"lforms-visual-editor\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-modes\",children:[/*#__PURE__*/_jsx(\"button\",{className:`mode-toggle ${!previewMode?'active':''}`,onClick:()=>setPreviewMode(false),children:\"\\uD83D\\uDD27 Build Mode\"}),/*#__PURE__*/_jsx(\"button\",{className:`mode-toggle ${previewMode?'active':''}`,onClick:()=>setPreviewMode(true),children:\"\\uD83D\\uDC41\\uFE0F Preview Mode\"})]}),previewMode?/*#__PURE__*/_jsxs(\"div\",{className:\"lforms-preview\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Live Preview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"simple-questionnaire-preview\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"preview-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:questionnaire.title||'Untitled Questionnaire'}),/*#__PURE__*/_jsx(\"p\",{children:questionnaire.description||'No description provided'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"preview-questions\",children:((_questionnaire$item2=questionnaire.item)===null||_questionnaire$item2===void 0?void 0:_questionnaire$item2.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"preview-question\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"preview-question-label\",children:[index+1,\". \",item.text,item.required&&/*#__PURE__*/_jsx(\"span\",{className:\"required-asterisk\",children:\" *\"})]}),item.type==='string'&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Text answer\",disabled:true}),item.type==='text'&&/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Long text answer\",disabled:true,rows:3}),item.type==='boolean'&&/*#__PURE__*/_jsxs(\"div\",{className:\"preview-boolean\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",disabled:true}),\" Yes\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",disabled:true}),\" No\"]})]}),item.type==='decimal'&&/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",placeholder:\"Number\",disabled:true}),item.type==='integer'&&/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"1\",placeholder:\"Integer\",disabled:true}),item.type==='date'&&/*#__PURE__*/_jsx(\"input\",{type:\"date\",disabled:true}),item.type==='choice'&&/*#__PURE__*/_jsx(\"select\",{disabled:true,children:/*#__PURE__*/_jsx(\"option\",{children:\"Select an option...\"})})]},item.linkId)))||/*#__PURE__*/_jsx(\"p\",{className:\"no-questions-preview\",children:\"No questions added yet.\"})})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"lforms-builder\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-metadata-editor\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Questionnaire Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"metadata-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:questionnaire.title||'',onChange:e=>updateMetadata('title',e.target.value),placeholder:\"Enter questionnaire title\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:questionnaire.name||'',onChange:e=>updateMetadata('name',e.target.value),placeholder:\"Enter questionnaire name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Status:\"}),/*#__PURE__*/_jsxs(\"select\",{value:questionnaire.status||'draft',onChange:e=>updateMetadata('status',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"draft\",children:\"Draft\"}),/*#__PURE__*/_jsx(\"option\",{value:\"active\",children:\"Active\"}),/*#__PURE__*/_jsx(\"option\",{value:\"retired\",children:\"Retired\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Publisher:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:questionnaire.publisher||'',onChange:e=>updateMetadata('publisher',e.target.value),placeholder:\"Enter publisher\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description:\"}),/*#__PURE__*/_jsx(\"textarea\",{value:questionnaire.description||'',onChange:e=>updateMetadata('description',e.target.value),placeholder:\"Enter questionnaire description\",rows:3})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"questions-builder\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"questions-header\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[\"Questions (\",((_questionnaire$item3=questionnaire.item)===null||_questionnaire$item3===void 0?void 0:_questionnaire$item3.length)||0,\")\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:addQuestion,className:\"add-question-btn\",children:\"+ Add Question\"})]}),(_questionnaire$item4=questionnaire.item)===null||_questionnaire$item4===void 0?void 0:_questionnaire$item4.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"question-editor\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"question-number\",children:[\"Q\",index+1]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeQuestion(index),className:\"remove-question-btn\",title:\"Remove question\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-fields\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Question Text:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:item.text||'',onChange:e=>updateQuestion(index,'text',e.target.value),placeholder:\"Enter question text\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Link ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:item.linkId||'',onChange:e=>updateQuestion(index,'linkId',e.target.value),placeholder:\"Enter unique ID\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Question Type:\"}),/*#__PURE__*/_jsxs(\"select\",{value:item.type||'string',onChange:e=>updateQuestion(index,'type',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"string\",children:\"Short Text\"}),/*#__PURE__*/_jsx(\"option\",{value:\"text\",children:\"Long Text\"}),/*#__PURE__*/_jsx(\"option\",{value:\"boolean\",children:\"Yes/No\"}),/*#__PURE__*/_jsx(\"option\",{value:\"decimal\",children:\"Decimal Number\"}),/*#__PURE__*/_jsx(\"option\",{value:\"integer\",children:\"Integer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"date\",children:\"Date\"}),/*#__PURE__*/_jsx(\"option\",{value:\"choice\",children:\"Single Choice\"}),/*#__PURE__*/_jsx(\"option\",{value:\"open-choice\",children:\"Choice with Other\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"field-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:item.required||false,onChange:e=>updateQuestion(index,'required',e.target.checked)}),\"Required\"]})})]})]},item.linkId)),(!questionnaire.item||questionnaire.item.length===0)&&/*#__PURE__*/_jsx(\"div\",{className:\"no-questions\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No questions yet. Click \\\"Add Question\\\" to get started.\"})})]})]})]});};const QuestionnaireEditorContent=()=>{var _questionnaireContent;const navigate=useNavigate();const{repository,branch}=useDAKParams();// Component state\nconst[questionnaires,setQuestionnaires]=useState([]);const[selectedQuestionnaire,setSelectedQuestionnaire]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[editing,setEditing]=useState(false);const[questionnaireContent,setQuestionnaireContent]=useState(null);const[originalContent,setOriginalContent]=useState(null);// LForms integration state\nconst[lformsLoaded,setLformsLoaded]=useState(false);const[editMode,setEditMode]=useState('visual');// 'visual' or 'json'\nconst[lformsError,setLformsError]=useState(null);// Load LForms library\nuseEffect(()=>{const loadLForms=async()=>{try{setLformsError(null);// For now, enable the visual editor without loading external LForms\n// TODO: Add proper LForms integration for advanced features\nconsole.log('Using built-in visual editor');setLformsLoaded(true);}catch(error){console.error('Failed to load LForms:',error);setLformsError(`Failed to load questionnaire editor: ${error.message}`);// Still mark as loaded to enable basic functionality\nsetLformsLoaded(true);}};loadLForms();},[]);// Load questionnaires from repository\nuseEffect(()=>{const loadQuestionnaires=async()=>{// Don't attempt to load if repository/branch are not available yet\nif(!repository||!branch){console.log('QuestionnaireEditor: Repository or branch not available yet, waiting...',{repository:!!repository,branch:!!branch});return;}try{console.log('QuestionnaireEditor: Loading questionnaires for',repository.name,'branch',branch);setLoading(true);setError(null);const allQuestionnaires=[];// Check multiple possible locations for questionnaires\nconst paths=[{path:'input/questionnaires',extensions:['.json'],type:'JSON'},{path:'input/fsh/questionnaires',extensions:['.fsh'],type:'FSH'}];for(const pathConfig of paths){try{const files=await githubService.getDirectoryContents(repository.owner.login,repository.name,pathConfig.path,branch);// Filter for supported file extensions\nconst questionnaireFiles=files.filter(file=>file.type==='file'&&pathConfig.extensions.some(ext=>file.name.endsWith(ext))).map(file=>{const extension=pathConfig.extensions.find(ext=>file.name.endsWith(ext));return{...file,displayName:file.name.replace(extension,''),fullPath:`${pathConfig.path}/${file.name}`,fileType:pathConfig.type,extension:extension};});allQuestionnaires.push(...questionnaireFiles);}catch(error){// Directory doesn't exist, continue with other paths\nif(error.status!==404){console.warn(`Error loading from ${pathConfig.path}:`,error);}}}setQuestionnaires(allQuestionnaires);}catch(error){console.error('Error loading questionnaires:',error);setError(`Failed to load questionnaires: ${error.message}`);}finally{setLoading(false);}};loadQuestionnaires();},[repository,branch]);// Early return if PageProvider context is not ready\nif(!repository||!branch){return/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-editor-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Initializing Questionnaire Editor...\"})]});}// Load questionnaire content\nconst loadQuestionnaireContent=async questionnaire=>{try{setLoading(true);const content=await githubService.getFileContent(repository.owner.login,repository.name,questionnaire.fullPath,branch);let questionnaireData;if(questionnaire.fileType==='JSON'){// Parse JSON questionnaire\nquestionnaireData=JSON.parse(content);}else if(questionnaire.fileType==='FSH'){// For FSH files, create a preview object with metadata\nquestionnaireData={resourceType:'Questionnaire',fileType:'FSH',title:extractFshTitle(content)||questionnaire.displayName,status:extractFshStatus(content)||'draft',name:extractFshName(content)||questionnaire.displayName,description:extractFshDescription(content)||'FHIR Shorthand Questionnaire',rawContent:content,isReadOnly:true};}setQuestionnaireContent(questionnaireData);setOriginalContent(content);setSelectedQuestionnaire(questionnaire);setEditing(true);console.log('Questionnaire loaded:',questionnaireData);}catch(error){console.error('Error loading questionnaire content:',error);setError(`Failed to load questionnaire: ${error.message}`);}finally{setLoading(false);}};// Helper functions to extract metadata from FSH content\nconst extractFshTitle=content=>{const titleMatch=content.match(/\\*\\s*title\\s*=\\s*\"([^\"]+)\"/);return titleMatch?titleMatch[1]:null;};const extractFshStatus=content=>{const statusMatch=content.match(/\\*\\s*status\\s*=\\s*#(\\w+)/);return statusMatch?statusMatch[1]:null;};const extractFshName=content=>{const nameMatch=content.match(/\\*\\s*name\\s*=\\s*\"([^\"]+)\"/);return nameMatch?nameMatch[1]:null;};const extractFshDescription=content=>{const descMatch=content.match(/\\*\\s*description\\s*=\\s*\"([^\"]+)\"/);return descMatch?descMatch[1]:null;};// Create new questionnaire\nconst createNewQuestionnaire=()=>{const newQuestionnaire={resourceType:'Questionnaire',id:`questionnaire-${Date.now()}`,meta:{versionId:'1',lastUpdated:new Date().toISOString()},url:`http://example.org/Questionnaire/${Date.now()}`,name:'NewQuestionnaire',title:'New Questionnaire',status:'draft',date:new Date().toISOString().split('T')[0],publisher:'WHO SMART Guidelines',description:'A new FHIR Questionnaire',item:[{linkId:'1',text:'Sample Question',type:'string',required:false}]};setQuestionnaireContent(newQuestionnaire);setOriginalContent(JSON.stringify(newQuestionnaire,null,2));setSelectedQuestionnaire({name:`${newQuestionnaire.name}.json`,displayName:newQuestionnaire.name,fullPath:`input/questionnaires/${newQuestionnaire.name}.json`,fileType:'JSON',isNew:true});setEditing(true);setEditMode('visual');// Start with visual editor for new questionnaires\nconsole.log('New questionnaire created:',newQuestionnaire);};// Handle save operation (called by AssetEditorLayout)\nconst handleSave=(content,saveType)=>{console.log(`Questionnaire saved to ${saveType}`);if(saveType==='github'){// Refresh questionnaires list after GitHub save\nconst loadQuestionnaires=async()=>{try{const allQuestionnaires=[];const paths=[{path:'input/questionnaires',extensions:['.json'],type:'JSON'},{path:'input/fsh/questionnaires',extensions:['.fsh'],type:'FSH'}];for(const pathConfig of paths){try{const files=await githubService.getDirectoryContents(repository.owner.login,repository.name,pathConfig.path,branch);const questionnaireFiles=files.filter(file=>file.type==='file'&&pathConfig.extensions.some(ext=>file.name.endsWith(ext))).map(file=>{const extension=pathConfig.extensions.find(ext=>file.name.endsWith(ext));return{...file,displayName:file.name.replace(extension,''),fullPath:`${pathConfig.path}/${file.name}`,fileType:pathConfig.type,extension:extension};});allQuestionnaires.push(...questionnaireFiles);}catch(error){if(error.status!==404){console.warn(`Error loading from ${pathConfig.path}:`,error);}}}setQuestionnaires(allQuestionnaires);}catch(error){console.error('Error refreshing questionnaires:',error);}};loadQuestionnaires();}};// Navigate back to dashboard\nconst handleBackToDashboard=()=>{if(repository&&branch){navigate(`/dashboard/${repository.owner.login}/${repository.name}/${branch}`);}else{// Fallback to home page if repository context is not available\nnavigate('/');}};// Check if there are changes in the questionnaire\nconst hasChanges=questionnaireContent&&originalContent&&JSON.stringify(questionnaireContent,null,2)!==originalContent;// Show loading state when PageProvider is not ready or when we're loading questionnaires\nif(loading&&(!repository||!branch)){return/*#__PURE__*/_jsx(AssetEditorLayout,{pageName:\"questionnaire-editor\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-editor-loading\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Initializing Questionnaire Editor...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading repository context...\"})]})});}if(loading&&!editing){return/*#__PURE__*/_jsx(AssetEditorLayout,{pageName:\"questionnaire-editor\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-editor-loading\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Loading Questionnaires...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Fetching questionnaire files from repository...\"})]})});}return/*#__PURE__*/_jsx(AssetEditorLayout,{pageName:\"questionnaire-editor\",file:selectedQuestionnaire,repository:repository,branch:branch,content:questionnaireContent?JSON.stringify(questionnaireContent,null,2):null,originalContent:originalContent,hasChanges:hasChanges,onSave:handleSave,showSaveButtons:editing,children:/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-editor\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"questionnaire-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:handleBackToDashboard,className:\"back-link\",children:[\"\\u2190 \",repository.name]}),/*#__PURE__*/_jsx(\"span\",{className:\"separator\",children:\"/\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Questionnaire Editor\"}),branch&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"separator\",children:\"/\"}),/*#__PURE__*/_jsx(\"span\",{className:\"branch\",children:branch})]})]}),/*#__PURE__*/_jsx(\"h1\",{children:\"FHIR Questionnaire Editor\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Manage and edit FHIR Questionnaire assets for your DAK\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-content\",children:[error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Error:\"}),\" \",error]}),!editing?/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Questionnaires (\",questionnaires.length,\")\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:createNewQuestionnaire,className:\"btn-primary\",disabled:!lformsLoaded,children:\"+ Create New Questionnaire\"})]}),questionnaires.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDCCB\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"No Questionnaires Found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This repository doesn't have any FHIR Questionnaire files yet.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Questionnaires can be stored as:\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{textAlign:'left',maxWidth:'400px',margin:'0 auto'},children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"code\",{children:\"input/questionnaires/*.json\"}),\" - FHIR JSON format\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"code\",{children:\"input/fsh/questionnaires/*.fsh\"}),\" - FHIR Shorthand format\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:createNewQuestionnaire,className:\"btn-primary\",disabled:!lformsLoaded,children:\"Create Your First Questionnaire\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"questionnaire-grid\",children:questionnaires.map(questionnaire=>/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-card\",onClick:()=>loadQuestionnaireContent(questionnaire),children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-icon\",children:questionnaire.fileType==='FSH'?'📝':'📋'}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:questionnaire.displayName}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-type\",children:[questionnaire.fileType,\" Questionnaire\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"card-path\",children:questionnaire.fullPath}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-size\",children:[(questionnaire.size/1024).toFixed(1),\" KB\"]})]})]},questionnaire.name))})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-editor-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-header\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEditing(false),className:\"back-to-list\",children:\"\\u2190 Back to List\"}),/*#__PURE__*/_jsx(\"h2\",{children:(selectedQuestionnaire===null||selectedQuestionnaire===void 0?void 0:selectedQuestionnaire.displayName)||'New Questionnaire'}),(questionnaireContent===null||questionnaireContent===void 0?void 0:questionnaireContent.fileType)!=='FSH'&&/*#__PURE__*/_jsxs(\"div\",{className:\"edit-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{className:`mode-btn ${editMode==='visual'?'active':''}`,onClick:()=>setEditMode('visual'),children:\"\\uD83D\\uDCDD Visual Editor\"}),/*#__PURE__*/_jsx(\"button\",{className:`mode-btn ${editMode==='json'?'active':''}`,onClick:()=>setEditMode('json'),children:\" JSON Editor\"})]})]}),lformsError&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"LForms Error:\"}),\" \",lformsError]}),!lformsLoaded?/*#__PURE__*/_jsx(\"div\",{className:\"lforms-loading\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading questionnaire editor...\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"lforms-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-preview\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Questionnaire Preview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-metadata\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Title:\"}),\" \",(questionnaireContent===null||questionnaireContent===void 0?void 0:questionnaireContent.title)||'Untitled']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",(questionnaireContent===null||questionnaireContent===void 0?void 0:questionnaireContent.status)||'draft']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Format:\"}),\" \",(questionnaireContent===null||questionnaireContent===void 0?void 0:questionnaireContent.fileType)||'JSON']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",(questionnaireContent===null||questionnaireContent===void 0?void 0:questionnaireContent.date)||'Not specified']}),(questionnaireContent===null||questionnaireContent===void 0?void 0:questionnaireContent.fileType)!=='FSH'&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Items:\"}),\" \",(questionnaireContent===null||questionnaireContent===void 0?void 0:(_questionnaireContent=questionnaireContent.item)===null||_questionnaireContent===void 0?void 0:_questionnaireContent.length)||0,\" questions\"]})]})]}),(questionnaireContent===null||questionnaireContent===void 0?void 0:questionnaireContent.fileType)==='FSH'?/*#__PURE__*/// FSH files - read-only mode\n_jsxs(\"div\",{className:\"questionnaire-content-editor\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"FHIR Shorthand Content\",/*#__PURE__*/_jsx(\"span\",{className:\"readonly-badge\",children:\" (Read-Only)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fsh-editor\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:(questionnaireContent===null||questionnaireContent===void 0?void 0:questionnaireContent.rawContent)||'',readOnly:true,className:\"fsh-content\",rows:20}),/*#__PURE__*/_jsxs(\"div\",{className:\"fsh-notice\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCDD FSH File:\"}),\" This is a FHIR Shorthand questionnaire. Direct editing is not supported yet - please edit the .fsh file directly in your repository.\"]})]})]}):editMode==='visual'?/*#__PURE__*/// Visual editor\n_jsxs(\"div\",{className:\"visual-editor-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Visual Questionnaire Builder\"}),/*#__PURE__*/_jsx(\"div\",{className:\"lforms-visual-editor\",children:/*#__PURE__*/_jsx(LFormsVisualEditor,{questionnaire:questionnaireContent,onChange:updatedQuestionnaire=>{setQuestionnaireContent(updatedQuestionnaire);},onError:setLformsError})})]}):/*#__PURE__*/// JSON editor mode\n_jsxs(\"div\",{className:\"questionnaire-content-editor\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Raw JSON Content\"}),/*#__PURE__*/_jsx(\"textarea\",{value:JSON.stringify(questionnaireContent,null,2),onChange:e=>{try{const newContent=JSON.parse(e.target.value);setQuestionnaireContent(newContent);}catch(error){// Invalid JSON, don't update\nconsole.warn('Invalid JSON in editor');}},className:\"json-editor\",rows:20})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-instructions\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Editing Instructions:\"}),(questionnaireContent===null||questionnaireContent===void 0?void 0:questionnaireContent.fileType)==='FSH'?/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"This is a FHIR Shorthand (.fsh) questionnaire file\"}),/*#__PURE__*/_jsx(\"li\",{children:\"FSH files define questionnaires using a domain-specific language\"}),/*#__PURE__*/_jsx(\"li\",{children:\"To edit this questionnaire, modify the .fsh file directly in your repository\"}),/*#__PURE__*/_jsx(\"li\",{children:\"FSH files are compiled into JSON during the build process\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Learn more about FHIR Shorthand at \",/*#__PURE__*/_jsx(\"a\",{href:\"https://build.fhir.org/ig/HL7/fhir-shorthand/\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"HL7 FHIR Shorthand\"})]})]}):editMode==='visual'?/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Use the visual editor above to build your questionnaire interactively\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Add, remove, and modify questions using the form builder interface\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Preview your questionnaire as users will see it\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Switch to JSON mode to see the raw FHIR Questionnaire structure\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Changes are automatically saved as you work\"})]}):/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Edit the JSON structure above to modify the questionnaire\"}),/*#__PURE__*/_jsx(\"li\",{children:\"The preview shows key questionnaire metadata\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Changes are automatically detected for saving\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Switch to Visual mode for an easier editing experience\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click \\\"Save to Staging\\\" to save changes locally\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"help-tip\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u2728 New:\"}),\" Visual questionnaire editor is now available using LHC-Forms!\"]})]})]})]})]}),/*#__PURE__*/_jsx(ContextualHelpMascot,{pageId:\"questionnaire-editor\",contextData:{repository:repository.name,branch:branch,hasQuestionnaires:questionnaires.length>0,isEditing:editing}})]})});};const QuestionnaireEditor=()=>{return/*#__PURE__*/_jsx(PageLayout,{pageName:\"questionnaire-editor\",children:/*#__PURE__*/_jsx(QuestionnaireEditorContent,{})});};export default QuestionnaireEditor;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","PageLayout","AssetEditorLayout","useDAKParams","ContextualHelpMascot","githubService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LFormsVisualEditor","_ref","_questionnaire$item2","_questionnaire$item3","_questionnaire$item4","questionnaire","onChange","onError","previewMode","setPreviewMode","addQuestion","_questionnaire$item","newItem","linkId","Date","now","text","item","length","type","required","updatedQuestionnaire","removeQuestion","index","updatedItems","filter","_","i","updateQuestion","field","value","updateMetadata","className","children","onClick","title","description","map","placeholder","disabled","rows","step","e","target","name","status","publisher","checked","QuestionnaireEditorContent","_questionnaireContent","navigate","repository","branch","questionnaires","setQuestionnaires","selectedQuestionnaire","setSelectedQuestionnaire","loading","setLoading","error","setError","editing","setEditing","questionnaireContent","setQuestionnaireContent","originalContent","setOriginalContent","lformsLoaded","setLformsLoaded","editMode","setEditMode","lformsError","setLformsError","loadLForms","console","log","message","loadQuestionnaires","allQuestionnaires","paths","path","extensions","pathConfig","files","getDirectoryContents","owner","login","questionnaireFiles","file","some","ext","endsWith","extension","find","displayName","replace","fullPath","fileType","push","warn","loadQuestionnaireContent","content","getFileContent","questionnaireData","JSON","parse","resourceType","extractFshTitle","extractFshStatus","extractFshName","extractFshDescription","rawContent","isReadOnly","titleMatch","match","statusMatch","nameMatch","descMatch","createNewQuestionnaire","newQuestionnaire","id","meta","versionId","lastUpdated","toISOString","url","date","split","stringify","isNew","handleSave","saveType","handleBackToDashboard","hasChanges","pageName","onSave","showSaveButtons","style","textAlign","maxWidth","margin","size","toFixed","readOnly","newContent","href","rel","pageId","contextData","hasQuestionnaires","isEditing","QuestionnaireEditor"],"sources":["/home/runner/work/sgex/sgex/src/components/QuestionnaireEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { PageLayout, AssetEditorLayout, useDAKParams } from './framework';\nimport ContextualHelpMascot from './ContextualHelpMascot';\nimport githubService from '../services/githubService';\nimport './QuestionnaireEditor.css';\n\n// Simple Visual Editor Component (without LForms dependency for now)\nconst LFormsVisualEditor = ({ questionnaire, onChange, onError }) => {\n  const [previewMode, setPreviewMode] = useState(false);\n  \n  const addQuestion = () => {\n    const newItem = {\n      linkId: `item-${Date.now()}`,\n      text: `New Question ${(questionnaire.item?.length || 0) + 1}`,\n      type: 'string',\n      required: false\n    };\n    \n    const updatedQuestionnaire = {\n      ...questionnaire,\n      item: [...(questionnaire.item || []), newItem]\n    };\n    \n    onChange(updatedQuestionnaire);\n  };\n\n  const removeQuestion = (index) => {\n    if (!questionnaire.item) return;\n    \n    const updatedItems = questionnaire.item.filter((_, i) => i !== index);\n    const updatedQuestionnaire = {\n      ...questionnaire,\n      item: updatedItems\n    };\n    \n    onChange(updatedQuestionnaire);\n  };\n\n  const updateQuestion = (index, field, value) => {\n    if (!questionnaire.item) return;\n    \n    const updatedItems = [...questionnaire.item];\n    updatedItems[index] = { ...updatedItems[index], [field]: value };\n    \n    const updatedQuestionnaire = {\n      ...questionnaire,\n      item: updatedItems\n    };\n    \n    onChange(updatedQuestionnaire);\n  };\n\n  const updateMetadata = (field, value) => {\n    const updatedQuestionnaire = {\n      ...questionnaire,\n      [field]: value\n    };\n    onChange(updatedQuestionnaire);\n  };\n\n  return (\n    <div className=\"lforms-visual-editor\">\n      <div className=\"editor-modes\">\n        <button \n          className={`mode-toggle ${!previewMode ? 'active' : ''}`}\n          onClick={() => setPreviewMode(false)}\n        >\n          🔧 Build Mode\n        </button>\n        <button \n          className={`mode-toggle ${previewMode ? 'active' : ''}`}\n          onClick={() => setPreviewMode(true)}\n        >\n          👁️ Preview Mode\n        </button>\n      </div>\n\n      {previewMode ? (\n        <div className=\"lforms-preview\">\n          <h5>Live Preview</h5>\n          <div className=\"simple-questionnaire-preview\">\n            <div className=\"preview-header\">\n              <h3>{questionnaire.title || 'Untitled Questionnaire'}</h3>\n              <p>{questionnaire.description || 'No description provided'}</p>\n            </div>\n            \n            <div className=\"preview-questions\">\n              {questionnaire.item?.map((item, index) => (\n                <div key={item.linkId} className=\"preview-question\">\n                  <label className=\"preview-question-label\">\n                    {index + 1}. {item.text}\n                    {item.required && <span className=\"required-asterisk\"> *</span>}\n                  </label>\n                  \n                  {item.type === 'string' && (\n                    <input type=\"text\" placeholder=\"Text answer\" disabled />\n                  )}\n                  {item.type === 'text' && (\n                    <textarea placeholder=\"Long text answer\" disabled rows={3} />\n                  )}\n                  {item.type === 'boolean' && (\n                    <div className=\"preview-boolean\">\n                      <label><input type=\"radio\" disabled /> Yes</label>\n                      <label><input type=\"radio\" disabled /> No</label>\n                    </div>\n                  )}\n                  {item.type === 'decimal' && (\n                    <input type=\"number\" step=\"0.01\" placeholder=\"Number\" disabled />\n                  )}\n                  {item.type === 'integer' && (\n                    <input type=\"number\" step=\"1\" placeholder=\"Integer\" disabled />\n                  )}\n                  {item.type === 'date' && (\n                    <input type=\"date\" disabled />\n                  )}\n                  {item.type === 'choice' && (\n                    <select disabled>\n                      <option>Select an option...</option>\n                    </select>\n                  )}\n                </div>\n              )) || <p className=\"no-questions-preview\">No questions added yet.</p>}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"lforms-builder\">\n          <div className=\"questionnaire-metadata-editor\">\n            <h5>Questionnaire Details</h5>\n            <div className=\"metadata-grid\">\n              <div className=\"field-group\">\n                <label>Title:</label>\n                <input\n                  type=\"text\"\n                  value={questionnaire.title || ''}\n                  onChange={(e) => updateMetadata('title', e.target.value)}\n                  placeholder=\"Enter questionnaire title\"\n                />\n              </div>\n              <div className=\"field-group\">\n                <label>Name:</label>\n                <input\n                  type=\"text\"\n                  value={questionnaire.name || ''}\n                  onChange={(e) => updateMetadata('name', e.target.value)}\n                  placeholder=\"Enter questionnaire name\"\n                />\n              </div>\n              <div className=\"field-group\">\n                <label>Status:</label>\n                <select\n                  value={questionnaire.status || 'draft'}\n                  onChange={(e) => updateMetadata('status', e.target.value)}\n                >\n                  <option value=\"draft\">Draft</option>\n                  <option value=\"active\">Active</option>\n                  <option value=\"retired\">Retired</option>\n                </select>\n              </div>\n              <div className=\"field-group\">\n                <label>Publisher:</label>\n                <input\n                  type=\"text\"\n                  value={questionnaire.publisher || ''}\n                  onChange={(e) => updateMetadata('publisher', e.target.value)}\n                  placeholder=\"Enter publisher\"\n                />\n              </div>\n            </div>\n            <div className=\"field-group\">\n              <label>Description:</label>\n              <textarea\n                value={questionnaire.description || ''}\n                onChange={(e) => updateMetadata('description', e.target.value)}\n                placeholder=\"Enter questionnaire description\"\n                rows={3}\n              />\n            </div>\n          </div>\n\n          <div className=\"questions-builder\">\n            <div className=\"questions-header\">\n              <h5>Questions ({questionnaire.item?.length || 0})</h5>\n              <button onClick={addQuestion} className=\"add-question-btn\">\n                + Add Question\n              </button>\n            </div>\n\n            {questionnaire.item?.map((item, index) => (\n              <div key={item.linkId} className=\"question-editor\">\n                <div className=\"question-header\">\n                  <span className=\"question-number\">Q{index + 1}</span>\n                  <button \n                    onClick={() => removeQuestion(index)} \n                    className=\"remove-question-btn\"\n                    title=\"Remove question\"\n                  >\n                    ✕\n                  </button>\n                </div>\n                \n                <div className=\"question-fields\">\n                  <div className=\"field-group\">\n                    <label>Question Text:</label>\n                    <input\n                      type=\"text\"\n                      value={item.text || ''}\n                      onChange={(e) => updateQuestion(index, 'text', e.target.value)}\n                      placeholder=\"Enter question text\"\n                    />\n                  </div>\n                  \n                  <div className=\"field-group\">\n                    <label>Link ID:</label>\n                    <input\n                      type=\"text\"\n                      value={item.linkId || ''}\n                      onChange={(e) => updateQuestion(index, 'linkId', e.target.value)}\n                      placeholder=\"Enter unique ID\"\n                    />\n                  </div>\n                  \n                  <div className=\"field-group\">\n                    <label>Question Type:</label>\n                    <select\n                      value={item.type || 'string'}\n                      onChange={(e) => updateQuestion(index, 'type', e.target.value)}\n                    >\n                      <option value=\"string\">Short Text</option>\n                      <option value=\"text\">Long Text</option>\n                      <option value=\"boolean\">Yes/No</option>\n                      <option value=\"decimal\">Decimal Number</option>\n                      <option value=\"integer\">Integer</option>\n                      <option value=\"date\">Date</option>\n                      <option value=\"choice\">Single Choice</option>\n                      <option value=\"open-choice\">Choice with Other</option>\n                    </select>\n                  </div>\n                  \n                  <div className=\"field-group checkbox-group\">\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={item.required || false}\n                        onChange={(e) => updateQuestion(index, 'required', e.target.checked)}\n                      />\n                      Required\n                    </label>\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            {(!questionnaire.item || questionnaire.item.length === 0) && (\n              <div className=\"no-questions\">\n                <p>No questions yet. Click \"Add Question\" to get started.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst QuestionnaireEditorContent = () => {\n  const navigate = useNavigate();\n  const { repository, branch } = useDAKParams();\n  \n  // Component state\n  const [questionnaires, setQuestionnaires] = useState([]);\n  const [selectedQuestionnaire, setSelectedQuestionnaire] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editing, setEditing] = useState(false);\n  const [questionnaireContent, setQuestionnaireContent] = useState(null);\n  const [originalContent, setOriginalContent] = useState(null);\n  \n  // LForms integration state\n  const [lformsLoaded, setLformsLoaded] = useState(false);\n  const [editMode, setEditMode] = useState('visual'); // 'visual' or 'json'\n  const [lformsError, setLformsError] = useState(null);\n\n  // Load LForms library\n  useEffect(() => {\n    const loadLForms = async () => {\n      try {\n        setLformsError(null);\n        \n        // For now, enable the visual editor without loading external LForms\n        // TODO: Add proper LForms integration for advanced features\n        console.log('Using built-in visual editor');\n        setLformsLoaded(true);\n      } catch (error) {\n        console.error('Failed to load LForms:', error);\n        setLformsError(`Failed to load questionnaire editor: ${error.message}`);\n        // Still mark as loaded to enable basic functionality\n        setLformsLoaded(true);\n      }\n    };\n\n    loadLForms();\n  }, []);\n\n  // Load questionnaires from repository\n  useEffect(() => {\n    const loadQuestionnaires = async () => {\n      // Don't attempt to load if repository/branch are not available yet\n      if (!repository || !branch) {\n        console.log('QuestionnaireEditor: Repository or branch not available yet, waiting...', { repository: !!repository, branch: !!branch });\n        return;\n      }\n      \n      try {\n        console.log('QuestionnaireEditor: Loading questionnaires for', repository.name, 'branch', branch);\n        setLoading(true);\n        setError(null);\n        \n        const allQuestionnaires = [];\n        \n        // Check multiple possible locations for questionnaires\n        const paths = [\n          { path: 'input/questionnaires', extensions: ['.json'], type: 'JSON' },\n          { path: 'input/fsh/questionnaires', extensions: ['.fsh'], type: 'FSH' }\n        ];\n        \n        for (const pathConfig of paths) {\n          try {\n            const files = await githubService.getDirectoryContents(\n              repository.owner.login,\n              repository.name,\n              pathConfig.path,\n              branch\n            );\n            \n            // Filter for supported file extensions\n            const questionnaireFiles = files\n              .filter(file => file.type === 'file' && \n                pathConfig.extensions.some(ext => file.name.endsWith(ext)))\n              .map(file => {\n                const extension = pathConfig.extensions.find(ext => file.name.endsWith(ext));\n                return {\n                  ...file,\n                  displayName: file.name.replace(extension, ''),\n                  fullPath: `${pathConfig.path}/${file.name}`,\n                  fileType: pathConfig.type,\n                  extension: extension\n                };\n              });\n            \n            allQuestionnaires.push(...questionnaireFiles);\n          } catch (error) {\n            // Directory doesn't exist, continue with other paths\n            if (error.status !== 404) {\n              console.warn(`Error loading from ${pathConfig.path}:`, error);\n            }\n          }\n        }\n        \n        setQuestionnaires(allQuestionnaires);\n      } catch (error) {\n        console.error('Error loading questionnaires:', error);\n        setError(`Failed to load questionnaires: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadQuestionnaires();\n  }, [repository, branch]);\n\n  // Early return if PageProvider context is not ready\n  if (!repository || !branch) {\n    return (\n      <div className=\"questionnaire-editor-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Initializing Questionnaire Editor...</p>\n      </div>\n    );\n  }\n\n  // Load questionnaire content\n  const loadQuestionnaireContent = async (questionnaire) => {\n    try {\n      setLoading(true);\n      const content = await githubService.getFileContent(\n        repository.owner.login,\n        repository.name,\n        questionnaire.fullPath,\n        branch\n      );\n      \n      let questionnaireData;\n      \n      if (questionnaire.fileType === 'JSON') {\n        // Parse JSON questionnaire\n        questionnaireData = JSON.parse(content);\n      } else if (questionnaire.fileType === 'FSH') {\n        // For FSH files, create a preview object with metadata\n        questionnaireData = {\n          resourceType: 'Questionnaire',\n          fileType: 'FSH',\n          title: extractFshTitle(content) || questionnaire.displayName,\n          status: extractFshStatus(content) || 'draft',\n          name: extractFshName(content) || questionnaire.displayName,\n          description: extractFshDescription(content) || 'FHIR Shorthand Questionnaire',\n          rawContent: content,\n          isReadOnly: true\n        };\n      }\n      \n      setQuestionnaireContent(questionnaireData);\n      setOriginalContent(content);\n      setSelectedQuestionnaire(questionnaire);\n      setEditing(true);\n      \n      console.log('Questionnaire loaded:', questionnaireData);\n    } catch (error) {\n      console.error('Error loading questionnaire content:', error);\n      setError(`Failed to load questionnaire: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper functions to extract metadata from FSH content\n  const extractFshTitle = (content) => {\n    const titleMatch = content.match(/\\*\\s*title\\s*=\\s*\"([^\"]+)\"/);\n    return titleMatch ? titleMatch[1] : null;\n  };\n\n  const extractFshStatus = (content) => {\n    const statusMatch = content.match(/\\*\\s*status\\s*=\\s*#(\\w+)/);\n    return statusMatch ? statusMatch[1] : null;\n  };\n\n  const extractFshName = (content) => {\n    const nameMatch = content.match(/\\*\\s*name\\s*=\\s*\"([^\"]+)\"/);\n    return nameMatch ? nameMatch[1] : null;\n  };\n\n  const extractFshDescription = (content) => {\n    const descMatch = content.match(/\\*\\s*description\\s*=\\s*\"([^\"]+)\"/);\n    return descMatch ? descMatch[1] : null;\n  };\n\n  // Create new questionnaire\n  const createNewQuestionnaire = () => {\n    const newQuestionnaire = {\n      resourceType: 'Questionnaire',\n      id: `questionnaire-${Date.now()}`,\n      meta: {\n        versionId: '1',\n        lastUpdated: new Date().toISOString()\n      },\n      url: `http://example.org/Questionnaire/${Date.now()}`,\n      name: 'NewQuestionnaire',\n      title: 'New Questionnaire',\n      status: 'draft',\n      date: new Date().toISOString().split('T')[0],\n      publisher: 'WHO SMART Guidelines',\n      description: 'A new FHIR Questionnaire',\n      item: [\n        {\n          linkId: '1',\n          text: 'Sample Question',\n          type: 'string',\n          required: false\n        }\n      ]\n    };\n\n    setQuestionnaireContent(newQuestionnaire);\n    setOriginalContent(JSON.stringify(newQuestionnaire, null, 2));\n    setSelectedQuestionnaire({\n      name: `${newQuestionnaire.name}.json`,\n      displayName: newQuestionnaire.name,\n      fullPath: `input/questionnaires/${newQuestionnaire.name}.json`,\n      fileType: 'JSON',\n      isNew: true\n    });\n    setEditing(true);\n    setEditMode('visual'); // Start with visual editor for new questionnaires\n\n    console.log('New questionnaire created:', newQuestionnaire);\n  };\n\n  // Handle save operation (called by AssetEditorLayout)\n  const handleSave = (content, saveType) => {\n    console.log(`Questionnaire saved to ${saveType}`);\n    \n    if (saveType === 'github') {\n      // Refresh questionnaires list after GitHub save\n      const loadQuestionnaires = async () => {\n        try {\n          const allQuestionnaires = [];\n          \n          const paths = [\n            { path: 'input/questionnaires', extensions: ['.json'], type: 'JSON' },\n            { path: 'input/fsh/questionnaires', extensions: ['.fsh'], type: 'FSH' }\n          ];\n          \n          for (const pathConfig of paths) {\n            try {\n              const files = await githubService.getDirectoryContents(\n                repository.owner.login,\n                repository.name,\n                pathConfig.path,\n                branch\n              );\n              \n              const questionnaireFiles = files\n                .filter(file => file.type === 'file' && \n                  pathConfig.extensions.some(ext => file.name.endsWith(ext)))\n                .map(file => {\n                  const extension = pathConfig.extensions.find(ext => file.name.endsWith(ext));\n                  return {\n                    ...file,\n                    displayName: file.name.replace(extension, ''),\n                    fullPath: `${pathConfig.path}/${file.name}`,\n                    fileType: pathConfig.type,\n                    extension: extension\n                  };\n                });\n              \n              allQuestionnaires.push(...questionnaireFiles);\n            } catch (error) {\n              if (error.status !== 404) {\n                console.warn(`Error loading from ${pathConfig.path}:`, error);\n              }\n            }\n          }\n          \n          setQuestionnaires(allQuestionnaires);\n        } catch (error) {\n          console.error('Error refreshing questionnaires:', error);\n        }\n      };\n      \n      loadQuestionnaires();\n    }\n  };\n\n  // Navigate back to dashboard\n  const handleBackToDashboard = () => {\n    if (repository && branch) {\n      navigate(`/dashboard/${repository.owner.login}/${repository.name}/${branch}`);\n    } else {\n      // Fallback to home page if repository context is not available\n      navigate('/');\n    }\n  };\n\n  // Check if there are changes in the questionnaire\n  const hasChanges = questionnaireContent && originalContent &&\n    JSON.stringify(questionnaireContent, null, 2) !== originalContent;\n\n  // Show loading state when PageProvider is not ready or when we're loading questionnaires\n  if (loading && (!repository || !branch)) {\n    return (\n      <AssetEditorLayout pageName=\"questionnaire-editor\">\n        <div className=\"questionnaire-editor-loading\">\n          <h2>Initializing Questionnaire Editor...</h2>\n          <p>Loading repository context...</p>\n        </div>\n      </AssetEditorLayout>\n    );\n  }\n\n  if (loading && !editing) {\n    return (\n      <AssetEditorLayout pageName=\"questionnaire-editor\">\n        <div className=\"questionnaire-editor-loading\">\n          <h2>Loading Questionnaires...</h2>\n          <p>Fetching questionnaire files from repository...</p>\n        </div>\n      </AssetEditorLayout>\n    );\n  }\n\n  return (\n    <AssetEditorLayout\n      pageName=\"questionnaire-editor\"\n      file={selectedQuestionnaire}\n      repository={repository}\n      branch={branch}\n      content={questionnaireContent ? JSON.stringify(questionnaireContent, null, 2) : null}\n      originalContent={originalContent}\n      hasChanges={hasChanges}\n      onSave={handleSave}\n      showSaveButtons={editing}\n    >\n      <div className=\"questionnaire-editor\">\n        <div className=\"questionnaire-header\">\n          <div className=\"header-content\">\n            <div className=\"breadcrumb\">\n              <button onClick={handleBackToDashboard} className=\"back-link\">\n                ← {repository.name}\n              </button>\n              <span className=\"separator\">/</span>\n              <span>Questionnaire Editor</span>\n              {branch && (\n                <>\n                  <span className=\"separator\">/</span>\n                  <span className=\"branch\">{branch}</span>\n                </>\n              )}\n            </div>\n            <h1>FHIR Questionnaire Editor</h1>\n            <p>Manage and edit FHIR Questionnaire assets for your DAK</p>\n          </div>\n        </div>\n\n        <div className=\"questionnaire-content\">\n          {error && (\n            <div className=\"error-message\">\n              <strong>Error:</strong> {error}\n            </div>\n          )}\n\n          {!editing ? (\n            <div className=\"questionnaire-list\">\n              <div className=\"list-header\">\n                <h2>Questionnaires ({questionnaires.length})</h2>\n                <button \n                  onClick={createNewQuestionnaire}\n                  className=\"btn-primary\"\n                  disabled={!lformsLoaded}\n                >\n                  + Create New Questionnaire\n                </button>\n              </div>\n\n              {questionnaires.length === 0 ? (\n                <div className=\"empty-state\">\n                  <div className=\"empty-icon\">📋</div>\n                  <h3>No Questionnaires Found</h3>\n                  <p>This repository doesn't have any FHIR Questionnaire files yet.</p>\n                  <p>Questionnaires can be stored as:</p>\n                  <ul style={{textAlign: 'left', maxWidth: '400px', margin: '0 auto'}}>\n                    <li><code>input/questionnaires/*.json</code> - FHIR JSON format</li>\n                    <li><code>input/fsh/questionnaires/*.fsh</code> - FHIR Shorthand format</li>\n                  </ul>\n                  <button \n                    onClick={createNewQuestionnaire}\n                    className=\"btn-primary\"\n                    disabled={!lformsLoaded}\n                  >\n                    Create Your First Questionnaire\n                  </button>\n                </div>\n              ) : (\n                <div className=\"questionnaire-grid\">\n                  {questionnaires.map((questionnaire) => (\n                    <div \n                      key={questionnaire.name}\n                      className=\"questionnaire-card\"\n                      onClick={() => loadQuestionnaireContent(questionnaire)}\n                    >\n                      <div className=\"card-icon\">\n                        {questionnaire.fileType === 'FSH' ? '📝' : '📋'}\n                      </div>\n                      <div className=\"card-content\">\n                        <h3>{questionnaire.displayName}</h3>\n                        <p className=\"card-type\">{questionnaire.fileType} Questionnaire</p>\n                        <p className=\"card-path\">{questionnaire.fullPath}</p>\n                        <p className=\"card-size\">{(questionnaire.size / 1024).toFixed(1)} KB</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"questionnaire-editor-container\">\n              <div className=\"editor-header\">\n                <button \n                  onClick={() => setEditing(false)}\n                  className=\"back-to-list\"\n                >\n                  ← Back to List\n                </button>\n                <h2>{selectedQuestionnaire?.displayName || 'New Questionnaire'}</h2>\n                \n                {/* Mode toggle for JSON questionnaires */}\n                {questionnaireContent?.fileType !== 'FSH' && (\n                  <div className=\"edit-mode-toggle\">\n                    <button \n                      className={`mode-btn ${editMode === 'visual' ? 'active' : ''}`}\n                      onClick={() => setEditMode('visual')}\n                    >\n                      📝 Visual Editor\n                    </button>\n                    <button \n                      className={`mode-btn ${editMode === 'json' ? 'active' : ''}`}\n                      onClick={() => setEditMode('json')}\n                    >\n                      {} JSON Editor\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              {lformsError && (\n                <div className=\"error-message\">\n                  <strong>LForms Error:</strong> {lformsError}\n                </div>\n              )}\n\n              {!lformsLoaded ? (\n                <div className=\"lforms-loading\">\n                  <p>Loading questionnaire editor...</p>\n                </div>\n              ) : (\n                <div className=\"lforms-container\">\n                  {/* Preview Section */}\n                  <div className=\"questionnaire-preview\">\n                    <h4>Questionnaire Preview</h4>\n                    <div className=\"questionnaire-metadata\">\n                      <p><strong>Title:</strong> {questionnaireContent?.title || 'Untitled'}</p>\n                      <p><strong>Status:</strong> {questionnaireContent?.status || 'draft'}</p>\n                      <p><strong>Format:</strong> {questionnaireContent?.fileType || 'JSON'}</p>\n                      <p><strong>Date:</strong> {questionnaireContent?.date || 'Not specified'}</p>\n                      {questionnaireContent?.fileType !== 'FSH' && (\n                        <p><strong>Items:</strong> {questionnaireContent?.item?.length || 0} questions</p>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {/* Editor Section */}\n                  {questionnaireContent?.fileType === 'FSH' ? (\n                    // FSH files - read-only mode\n                    <div className=\"questionnaire-content-editor\">\n                      <h4>\n                        FHIR Shorthand Content\n                        <span className=\"readonly-badge\"> (Read-Only)</span>\n                      </h4>\n                      \n                      <div className=\"fsh-editor\">\n                        <textarea\n                          value={questionnaireContent?.rawContent || ''}\n                          readOnly={true}\n                          className=\"fsh-content\"\n                          rows={20}\n                        />\n                        <div className=\"fsh-notice\">\n                          <strong>📝 FSH File:</strong> This is a FHIR Shorthand questionnaire. \n                          Direct editing is not supported yet - please edit the .fsh file directly in your repository.\n                        </div>\n                      </div>\n                    </div>\n                  ) : editMode === 'visual' ? (\n                    // Visual editor\n                    <div className=\"visual-editor-section\">\n                      <h4>Visual Questionnaire Builder</h4>\n                      <div className=\"lforms-visual-editor\">\n                        <LFormsVisualEditor \n                          questionnaire={questionnaireContent}\n                          onChange={(updatedQuestionnaire) => {\n                            setQuestionnaireContent(updatedQuestionnaire);\n                          }}\n                          onError={setLformsError}\n                        />\n                      </div>\n                    </div>\n                  ) : (\n                    // JSON editor mode\n                    <div className=\"questionnaire-content-editor\">\n                      <h4>Raw JSON Content</h4>\n                      <textarea\n                        value={JSON.stringify(questionnaireContent, null, 2)}\n                        onChange={(e) => {\n                          try {\n                            const newContent = JSON.parse(e.target.value);\n                            setQuestionnaireContent(newContent);\n                          } catch (error) {\n                            // Invalid JSON, don't update\n                            console.warn('Invalid JSON in editor');\n                          }\n                        }}\n                        className=\"json-editor\"\n                        rows={20}\n                      />\n                    </div>\n                  )}\n                  \n                  <div className=\"editor-instructions\">\n                    <h4>Editing Instructions:</h4>\n                    {questionnaireContent?.fileType === 'FSH' ? (\n                      <ul>\n                        <li>This is a FHIR Shorthand (.fsh) questionnaire file</li>\n                        <li>FSH files define questionnaires using a domain-specific language</li>\n                        <li>To edit this questionnaire, modify the .fsh file directly in your repository</li>\n                        <li>FSH files are compiled into JSON during the build process</li>\n                        <li>Learn more about FHIR Shorthand at <a href=\"https://build.fhir.org/ig/HL7/fhir-shorthand/\" target=\"_blank\" rel=\"noopener noreferrer\">HL7 FHIR Shorthand</a></li>\n                      </ul>\n                    ) : editMode === 'visual' ? (\n                      <ul>\n                        <li>Use the visual editor above to build your questionnaire interactively</li>\n                        <li>Add, remove, and modify questions using the form builder interface</li>\n                        <li>Preview your questionnaire as users will see it</li>\n                        <li>Switch to JSON mode to see the raw FHIR Questionnaire structure</li>\n                        <li>Changes are automatically saved as you work</li>\n                      </ul>\n                    ) : (\n                      <ul>\n                        <li>Edit the JSON structure above to modify the questionnaire</li>\n                        <li>The preview shows key questionnaire metadata</li>\n                        <li>Changes are automatically detected for saving</li>\n                        <li>Switch to Visual mode for an easier editing experience</li>\n                        <li>Click \"Save to Staging\" to save changes locally</li>\n                      </ul>\n                    )}\n                    <div className=\"help-tip\">\n                      <strong>✨ New:</strong> Visual questionnaire editor is now available using LHC-Forms!\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        <ContextualHelpMascot \n          pageId=\"questionnaire-editor\"\n          contextData={{\n            repository: repository.name,\n            branch: branch,\n            hasQuestionnaires: questionnaires.length > 0,\n            isEditing: editing\n          }}\n        />\n      </div>\n    </AssetEditorLayout>\n  );\n};\n\nconst QuestionnaireEditor = () => {\n  return (\n    <PageLayout pageName=\"questionnaire-editor\">\n      <QuestionnaireEditorContent />\n    </PageLayout>\n  );\n};\n\nexport default QuestionnaireEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}