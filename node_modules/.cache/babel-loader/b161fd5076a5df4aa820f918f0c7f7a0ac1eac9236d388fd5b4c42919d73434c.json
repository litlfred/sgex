{"ast":null,"code":"import { map, assign, pick } from 'min-dash';\nimport { isAny } from './util/ModelingUtil';\nimport { is } from '../../util/ModelUtil';\n\n/**\n * @typedef {import('../../model/Types').Moddle} Moddle\n * @typedef {import('../../model/Types').ModdleElement} ModdleElement\n *\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n */\n\n/**\n * A factory for BPMN elements.\n *\n * @param {Moddle} moddle\n */\nexport default function BpmnFactory(moddle) {\n  this._model = moddle;\n}\nBpmnFactory.$inject = ['moddle'];\n\n/**\n * @param {ModdleElement} element\n *\n * @return {boolean}\n */\nBpmnFactory.prototype._needsId = function (element) {\n  return isAny(element, ['bpmn:RootElement', 'bpmn:FlowElement', 'bpmn:MessageFlow', 'bpmn:DataAssociation', 'bpmn:Artifact', 'bpmn:Participant', 'bpmn:Lane', 'bpmn:LaneSet', 'bpmn:Process', 'bpmn:Collaboration', 'bpmndi:BPMNShape', 'bpmndi:BPMNEdge', 'bpmndi:BPMNDiagram', 'bpmndi:BPMNPlane', 'bpmn:Property', 'bpmn:CategoryValue']);\n};\n\n/**\n * @param {ModdleElement} element\n */\nBpmnFactory.prototype._ensureId = function (element) {\n  if (element.id) {\n    this._model.ids.claim(element.id, element);\n    return;\n  }\n\n  // generate semantic ids for elements\n  // bpmn:SequenceFlow -> SequenceFlow_ID\n  var prefix;\n  if (is(element, 'bpmn:Activity')) {\n    prefix = 'Activity';\n  } else if (is(element, 'bpmn:Event')) {\n    prefix = 'Event';\n  } else if (is(element, 'bpmn:Gateway')) {\n    prefix = 'Gateway';\n  } else if (isAny(element, ['bpmn:SequenceFlow', 'bpmn:MessageFlow'])) {\n    prefix = 'Flow';\n  } else {\n    prefix = (element.$type || '').replace(/^[^:]*:/g, '');\n  }\n  prefix += '_';\n  if (!element.id && this._needsId(element)) {\n    element.id = this._model.ids.nextPrefixed(prefix, element);\n  }\n};\n\n/**\n * Create BPMN element.\n *\n * @param {string} type\n * @param {Object} [attrs]\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.create = function (type, attrs) {\n  var element = this._model.create(type, attrs || {});\n  this._ensureId(element);\n  return element;\n};\n\n/**\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiLabel = function () {\n  return this.create('bpmndi:BPMNLabel', {\n    bounds: this.createDiBounds()\n  });\n};\n\n/**\n * @param {ModdleElement} semantic\n * @param {Object} [attrs]\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiShape = function (semantic, attrs) {\n  return this.create('bpmndi:BPMNShape', assign({\n    bpmnElement: semantic,\n    bounds: this.createDiBounds()\n  }, attrs));\n};\n\n/**\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiBounds = function (bounds) {\n  return this.create('dc:Bounds', bounds);\n};\n\n/**\n * @param {Point[]} waypoints\n *\n * @return {ModdleElement[]}\n */\nBpmnFactory.prototype.createDiWaypoints = function (waypoints) {\n  var self = this;\n  return map(waypoints, function (pos) {\n    return self.createDiWaypoint(pos);\n  });\n};\n\n/**\n * @param {Point} point\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiWaypoint = function (point) {\n  return this.create('dc:Point', pick(point, ['x', 'y']));\n};\n\n/**\n * @param {ModdleElement} semantic\n * @param {Object} [attrs]\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiEdge = function (semantic, attrs) {\n  return this.create('bpmndi:BPMNEdge', assign({\n    bpmnElement: semantic,\n    waypoint: this.createDiWaypoints([])\n  }, attrs));\n};\n\n/**\n * @param {ModdleElement} semantic\n * @param {Object} [attrs]\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiPlane = function (semantic, attrs) {\n  return this.create('bpmndi:BPMNPlane', assign({\n    bpmnElement: semantic\n  }, attrs));\n};","map":{"version":3,"names":["map","assign","pick","isAny","is","BpmnFactory","moddle","_model","$inject","prototype","_needsId","element","_ensureId","id","ids","claim","prefix","$type","replace","nextPrefixed","create","type","attrs","createDiLabel","bounds","createDiBounds","createDiShape","semantic","bpmnElement","createDiWaypoints","waypoints","self","pos","createDiWaypoint","point","createDiEdge","waypoint","createDiPlane"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/modeling/BpmnFactory.js"],"sourcesContent":["import {\n  map,\n  assign,\n  pick\n} from 'min-dash';\n\nimport {\n  isAny\n} from './util/ModelingUtil';\n\nimport {\n  is\n} from '../../util/ModelUtil';\n\n/**\n * @typedef {import('../../model/Types').Moddle} Moddle\n * @typedef {import('../../model/Types').ModdleElement} ModdleElement\n *\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n */\n\n/**\n * A factory for BPMN elements.\n *\n * @param {Moddle} moddle\n */\nexport default function BpmnFactory(moddle) {\n  this._model = moddle;\n}\n\nBpmnFactory.$inject = [ 'moddle' ];\n\n/**\n * @param {ModdleElement} element\n *\n * @return {boolean}\n */\nBpmnFactory.prototype._needsId = function(element) {\n  return isAny(element, [\n    'bpmn:RootElement',\n    'bpmn:FlowElement',\n    'bpmn:MessageFlow',\n    'bpmn:DataAssociation',\n    'bpmn:Artifact',\n    'bpmn:Participant',\n    'bpmn:Lane',\n    'bpmn:LaneSet',\n    'bpmn:Process',\n    'bpmn:Collaboration',\n    'bpmndi:BPMNShape',\n    'bpmndi:BPMNEdge',\n    'bpmndi:BPMNDiagram',\n    'bpmndi:BPMNPlane',\n    'bpmn:Property',\n    'bpmn:CategoryValue'\n  ]);\n};\n\n/**\n * @param {ModdleElement} element\n */\nBpmnFactory.prototype._ensureId = function(element) {\n  if (element.id) {\n    this._model.ids.claim(element.id, element);\n    return;\n  }\n\n  // generate semantic ids for elements\n  // bpmn:SequenceFlow -> SequenceFlow_ID\n  var prefix;\n\n  if (is(element, 'bpmn:Activity')) {\n    prefix = 'Activity';\n  } else if (is(element, 'bpmn:Event')) {\n    prefix = 'Event';\n  } else if (is(element, 'bpmn:Gateway')) {\n    prefix = 'Gateway';\n  } else if (isAny(element, [ 'bpmn:SequenceFlow', 'bpmn:MessageFlow' ])) {\n    prefix = 'Flow';\n  } else {\n    prefix = (element.$type || '').replace(/^[^:]*:/g, '');\n  }\n\n  prefix += '_';\n\n  if (!element.id && this._needsId(element)) {\n    element.id = this._model.ids.nextPrefixed(prefix, element);\n  }\n};\n\n/**\n * Create BPMN element.\n *\n * @param {string} type\n * @param {Object} [attrs]\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.create = function(type, attrs) {\n  var element = this._model.create(type, attrs || {});\n\n  this._ensureId(element);\n\n  return element;\n};\n\n/**\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiLabel = function() {\n  return this.create('bpmndi:BPMNLabel', {\n    bounds: this.createDiBounds()\n  });\n};\n\n/**\n * @param {ModdleElement} semantic\n * @param {Object} [attrs]\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiShape = function(semantic, attrs) {\n  return this.create('bpmndi:BPMNShape', assign({\n    bpmnElement: semantic,\n    bounds: this.createDiBounds()\n  }, attrs));\n};\n\n/**\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiBounds = function(bounds) {\n  return this.create('dc:Bounds', bounds);\n};\n\n/**\n * @param {Point[]} waypoints\n *\n * @return {ModdleElement[]}\n */\nBpmnFactory.prototype.createDiWaypoints = function(waypoints) {\n  var self = this;\n\n  return map(waypoints, function(pos) {\n    return self.createDiWaypoint(pos);\n  });\n};\n\n/**\n * @param {Point} point\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiWaypoint = function(point) {\n  return this.create('dc:Point', pick(point, [ 'x', 'y' ]));\n};\n\n/**\n * @param {ModdleElement} semantic\n * @param {Object} [attrs]\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiEdge = function(semantic, attrs) {\n  return this.create('bpmndi:BPMNEdge', assign({\n    bpmnElement: semantic,\n    waypoint: this.createDiWaypoints([])\n  }, attrs));\n};\n\n/**\n * @param {ModdleElement} semantic\n * @param {Object} [attrs]\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiPlane = function(semantic, attrs) {\n  return this.create('bpmndi:BPMNPlane', assign({\n    bpmnElement: semantic\n  }, attrs));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}