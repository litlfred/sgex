{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{PageLayout}from'./framework';import HelpModal from'./HelpModal';import PATLogin from'./PATLogin';import'./BranchListing.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BranchListing=()=>{const[branches,setBranches]=useState([]);const[pullRequests,setPullRequests]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState('prs');// Start with PR preview section\nconst[prPage,setPrPage]=useState(1);const[prSearchTerm,setPrSearchTerm]=useState('');const[branchSearchTerm,setBranchSearchTerm]=useState('');const[prSortBy,setPrSortBy]=useState('updated');// updated, number, alphabetical\nconst[branchSortBy,setBranchSortBy]=useState('updated');// updated, alphabetical\nconst[showContributeModal,setShowContributeModal]=useState(false);const[deploymentStatuses,setDeploymentStatuses]=useState({});const[checkingStatuses,setCheckingStatuses]=useState(false);const[prFilter,setPrFilter]=useState('open');// 'open', 'closed', 'all'\nconst[isAuthenticated,setIsAuthenticated]=useState(false);const[githubToken,setGithubToken]=useState(null);const[prComments,setPrComments]=useState({});const[loadingComments,setLoadingComments]=useState(false);const[commentInputs,setCommentInputs]=useState({});const[submittingComments,setSubmittingComments]=useState({});const ITEMS_PER_PAGE=10;// GitHub authentication functions\nconst handleAuthSuccess=(token,octokitInstance)=>{setGithubToken(token);setIsAuthenticated(true);// Store token for session\nsessionStorage.setItem('github_token',token);};const handleLogout=()=>{setGithubToken(null);setIsAuthenticated(false);sessionStorage.removeItem('github_token');};// Function to fetch PR comments\nconst fetchPRComments=useCallback(async prNumber=>{if(!githubToken)return[];try{const response=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,{headers:{'Authorization':`token ${githubToken}`,'Accept':'application/vnd.github.v3+json'}});if(!response.ok){throw new Error(`Failed to fetch comments: ${response.status}`);}const comments=await response.json();// Return last 4 comments, truncated to 2 lines each\nreturn comments.slice(-4).map(comment=>({id:comment.id,author:comment.user.login,body:comment.body.split('\\n').slice(0,2).join('\\n').substring(0,200)+(comment.body.length>200?'...':''),created_at:new Date(comment.created_at).toLocaleDateString(),avatar_url:comment.user.avatar_url}));}catch(error){console.error(`Error fetching comments for PR ${prNumber}:`,error);return[];}},[githubToken]);// Function to submit a comment\nconst submitComment=async(prNumber,commentText)=>{if(!githubToken||!commentText.trim())return false;setSubmittingComments(prev=>({...prev,[prNumber]:true}));try{const response=await fetch(`https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,{method:'POST',headers:{'Authorization':`token ${githubToken}`,'Accept':'application/vnd.github.v3+json','Content-Type':'application/json'},body:JSON.stringify({body:commentText})});if(!response.ok){throw new Error(`Failed to submit comment: ${response.status}`);}// Clear the comment input\nsetCommentInputs(prev=>({...prev,[prNumber]:''}));// Refresh comments for this PR\nconst updatedComments=await fetchPRComments(prNumber);setPrComments(prev=>({...prev,[prNumber]:updatedComments}));return true;}catch(error){console.error(`Error submitting comment for PR ${prNumber}:`,error);return false;}finally{setSubmittingComments(prev=>({...prev,[prNumber]:false}));}};// Function to load comments for all visible PRs\nconst loadCommentsForPRs=useCallback(async prs=>{if(!githubToken||prs.length===0)return;setLoadingComments(true);const comments={};for(const pr of prs){comments[pr.number]=await fetchPRComments(pr.number);}setPrComments(comments);setLoadingComments(false);},[githubToken,fetchPRComments]);// Check for existing authentication on component mount\nuseEffect(()=>{const token=sessionStorage.getItem('github_token');if(token){setGithubToken(token);setIsAuthenticated(true);}},[]);// Function to check deployment status\nconst checkDeploymentStatus=async url=>{try{const response=await fetch(url,{method:'HEAD'});if(response.ok){return'active';}else if(response.status===404){return'not-found';}else{return'errored';}}catch(error){return'errored';}};// Function to check deployment statuses for all items\nconst checkAllDeploymentStatuses=useCallback(async(branchData,prData)=>{setCheckingStatuses(true);const statuses={};// Check branches\nfor(const branch of branchData){const status=await checkDeploymentStatus(branch.url);statuses[`branch-${branch.name}`]=status;}// Check PRs\nfor(const pr of prData){const status=await checkDeploymentStatus(pr.url);statuses[`pr-${pr.id}`]=status;}setDeploymentStatuses(statuses);setCheckingStatuses(false);},[]);// Function to copy URL to clipboard\nconst copyToClipboard=async(url,type,name)=>{try{await navigator.clipboard.writeText(url);// You could add a toast notification here\nconsole.log(`Copied ${type} URL for ${name} to clipboard`);}catch(error){// Fallback for browsers that don't support clipboard API\nconst textArea=document.createElement('textarea');textArea.value=url;document.body.appendChild(textArea);textArea.select();document.execCommand('copy');document.body.removeChild(textArea);console.log(`Copied ${type} URL for ${name} to clipboard (fallback)`);}};// Sorting functions\nconst sortBranches=(branches,sortBy)=>{return[...branches].sort((a,b)=>{switch(sortBy){case'alphabetical':return a.name.localeCompare(b.name);case'updated':default:const dateA=new Date(a.lastModified);const dateB=new Date(b.lastModified);return dateB-dateA;// Most recent first\n}});};const sortPRs=(prs,sortBy)=>{return[...prs].sort((a,b)=>{switch(sortBy){case'number':return b.number-a.number;// Highest number first\ncase'alphabetical':return a.title.localeCompare(b.title);case'updated':default:const dateA=new Date(a.updatedAt);const dateB=new Date(b.updatedAt);return dateB-dateA;// Most recent first\n}});};// \"How to contribute\" slideshow content\nconst contributeHelpTopic={id:'how-to-contribute',title:'How to Contribute to SGEX',type:'slideshow',content:[{title:'Welcome to SGEX - A Collaborative Workbench',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot\" class=\"contribute-mascot\" />\n            </div>\n            <h3>What is SGEX?</h3>\n            <p>SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits.</p>\n            <p>Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.</p>\n          </div>\n        `},{title:'Step 1: Report a Bug or Make a Feature Request',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot examining a bug\" class=\"contribute-mascot bug-report\" />\n            </div>\n            <h3>üêõ Found something that needs fixing?</h3>\n            <p>Every great contribution starts with identifying what can be improved:</p>\n            <ul>\n              <li><strong>Bug reports:</strong> Help us identify and fix issues</li>\n              <li><strong>Feature requests:</strong> Share ideas for new functionality</li>\n              <li><strong>Documentation improvements:</strong> Make our guides clearer</li>\n              <li><strong>User experience feedback:</strong> Tell us what's confusing</li>\n            </ul>\n            <p>Click the mascot's help button on any page to quickly report issues!</p>\n          </div>\n        `},{title:'Step 2: Assignment to a Coding Agent',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"./sgex-mascot.png\" alt=\"Robotic SGEX Mascot\" class=\"contribute-mascot coding-agent\" />\n            </div>\n            <h3>ü§ñ AI-Powered Development</h3>\n            <p>Once your issue is triaged, it may be assigned to one of our coding agents:</p>\n            <ul>\n              <li><strong>Automated analysis:</strong> AI agents analyze the requirements</li>\n              <li><strong>Code generation:</strong> Initial implementations are created</li>\n              <li><strong>Testing integration:</strong> Automated tests validate changes</li>\n              <li><strong>Documentation updates:</strong> Keep documentation in sync</li>\n            </ul>\n            <p>This hybrid approach combines human insight with AI efficiency.</p>\n          </div>\n        `},{title:'Step 3: Community Collaboration',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <div class=\"mascot-group\">\n                <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot 1\" class=\"contribute-mascot community\" />\n                <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot 2\" class=\"contribute-mascot community\" />\n                <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot 3\" class=\"contribute-mascot community\" />\n              </div>\n              <div class=\"thought-bubble\">üí´</div>\n            </div>\n            <h3>üåü Real-time Evolution</h3>\n            <p>The community drives continuous improvement through collaborative discussion:</p>\n            <ul>\n              <li><strong>Code reviews:</strong> Community members review and suggest improvements</li>\n              <li><strong>Testing feedback:</strong> Real-world testing by healthcare professionals</li>\n              <li><strong>Knowledge sharing:</strong> Best practices emerge from collective experience</li>\n              <li><strong>Iterative refinement:</strong> The workbench evolves based on actual usage</li>\n            </ul>\n            <p>Together, we're building the future of digital health tooling!</p>\n          </div>\n        `},{title:'Get Started Today!',content:`\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot celebrating\" class=\"contribute-mascot celebrate\" />\n            </div>\n            <h3>üöÄ Ready to Contribute?</h3>\n            <div class=\"action-buttons\">\n              <a href=\"https://github.com/litlfred/sgex/issues/new\" target=\"_blank\" class=\"contribute-btn primary\">\n                üêõ Report a Bug\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/issues/new?template=feature_request.md\" target=\"_blank\" class=\"contribute-btn secondary\">\n                ‚ú® Request a Feature  \n              </a>\n              <a href=\"/sgex/main/docs/\" target=\"_blank\" class=\"contribute-btn tertiary\">\n                üìö Read Documentation\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/tree/main/public/docs\" target=\"_blank\" class=\"contribute-btn tertiary-alt\">\n                üìñ Docs on GitHub\n              </a>\n            </div>\n            <p class=\"contribute-footer\">\n              <strong>Every contribution matters!</strong> Whether you're reporting a bug, testing a feature, or sharing feedback, you're helping improve digital health tools for healthcare workers worldwide.\n            </p>\n          </div>\n        `}]};useEffect(()=>{const fetchData=async()=>{try{setLoading(true);// Use GitHub API to fetch branches and PRs for the sgex repository\nconst owner='litlfred';const repo='sgex';// Fetch branches\nconst branchResponse=await fetch(`https://api.github.com/repos/${owner}/${repo}/branches`);if(!branchResponse.ok){throw new Error(`Failed to fetch branches: ${branchResponse.status}`);}const branchData=await branchResponse.json();// Fetch pull requests based on filter\nconst prState=prFilter==='all'?'all':prFilter;const prResponse=await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=${prState}&sort=updated&per_page=100`);if(!prResponse.ok){throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);}const prData=await prResponse.json();// Filter out gh-pages branch and format data\nconst filteredBranches=branchData.filter(branch=>branch.name!=='gh-pages').map(branch=>{var _branch$commit$commit,_branch$commit$commit2;// Convert branch name to safe directory name (replace slashes with dashes)\nconst safeName=branch.name.replace(/\\//g,'-');return{name:branch.name,safeName:safeName,commit:branch.commit,url:`./${safeName}/index.html`,lastModified:(_branch$commit$commit=branch.commit.commit)!==null&&_branch$commit$commit!==void 0&&(_branch$commit$commit2=_branch$commit$commit.committer)!==null&&_branch$commit$commit2!==void 0&&_branch$commit$commit2.date?new Date(branch.commit.commit.committer.date).toLocaleDateString():'Unknown'};});// Format PR data\nconst formattedPRs=prData.map(pr=>{const safeBranchName=pr.head.ref.replace(/\\//g,'-');return{id:pr.id,number:pr.number,title:pr.title,state:pr.state,author:pr.user.login,branchName:pr.head.ref,safeBranchName:safeBranchName,url:`./${safeBranchName}/index.html`,prUrl:pr.html_url,updatedAt:new Date(pr.updated_at).toLocaleDateString(),createdAt:new Date(pr.created_at).toLocaleDateString()};});setBranches(filteredBranches);setPullRequests(formattedPRs);// Check deployment statuses\nawait checkAllDeploymentStatuses(filteredBranches,formattedPRs);// Load comments for PRs if authenticated\nif(githubToken){await loadCommentsForPRs(formattedPRs.slice(0,ITEMS_PER_PAGE));}}catch(err){console.error('Error fetching data:',err);setError(err.message);// Only use fallback data in development or when GitHub API is blocked\nif(process.env.NODE_ENV==='development'||err.message.includes('Failed to fetch')){console.log('Using fallback mock data for demonstration...');const mockBranches=[{name:'main',safeName:'main',commit:{sha:'abc1234'},url:'./main/index.html',lastModified:new Date().toLocaleDateString()},{name:'feature/user-auth',safeName:'feature-user-auth',commit:{sha:'def5678'},url:'./feature-user-auth/index.html',lastModified:new Date(Date.now()-86400000).toLocaleDateString()},{name:'fix/api-endpoints',safeName:'fix-api-endpoints',commit:{sha:'ghi9012'},url:'./fix-api-endpoints/index.html',lastModified:new Date(Date.now()-172800000).toLocaleDateString()}];const mockPRs=[{id:1,number:123,title:'Improve multi-page selector landing page for GitHub deployment',state:'open',author:'copilot',branchName:'copilot/fix-459',safeBranchName:'copilot-fix-459',url:'./copilot-fix-459/index.html',prUrl:'https://github.com/litlfred/sgex/pull/123',updatedAt:new Date().toLocaleDateString(),createdAt:new Date(Date.now()-86400000).toLocaleDateString()},{id:2,number:122,title:'Add dark mode support',state:'closed',author:'developer',branchName:'feature/dark-mode',safeBranchName:'feature-dark-mode',url:'./feature-dark-mode/index.html',prUrl:'https://github.com/litlfred/sgex/pull/122',updatedAt:new Date(Date.now()-172800000).toLocaleDateString(),createdAt:new Date(Date.now()-345600000).toLocaleDateString()},{id:3,number:121,title:'Fix authentication flow',state:'open',author:'contributor',branchName:'fix/auth-flow',safeBranchName:'fix-auth-flow',url:'./fix-auth-flow/index.html',prUrl:'https://github.com/litlfred/sgex/pull/121',updatedAt:new Date(Date.now()-259200000).toLocaleDateString(),createdAt:new Date(Date.now()-432000000).toLocaleDateString()}];setBranches(mockBranches);setPullRequests(mockPRs);setError(null);// Clear error since we have fallback data\n}}finally{setLoading(false);}};fetchData();},[checkAllDeploymentStatuses,prFilter,githubToken,loadCommentsForPRs]);// Load comments for visible PRs when page changes\nuseEffect(()=>{if(isAuthenticated&&pullRequests.length>0){const filtered=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const sorted=sortPRs(filtered,prSortBy);const paginated=sorted.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);loadCommentsForPRs(paginated);}},[prPage,prSearchTerm,prSortBy,pullRequests,isAuthenticated,loadCommentsForPRs]);// Filter and sort PRs based on search and sorting\nconst filteredPRs=pullRequests.filter(pr=>pr.title.toLowerCase().includes(prSearchTerm.toLowerCase())||pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()));const sortedPRs=sortPRs(filteredPRs,prSortBy);const paginatedPRs=sortedPRs.slice((prPage-1)*ITEMS_PER_PAGE,prPage*ITEMS_PER_PAGE);const totalPRPages=Math.ceil(sortedPRs.length/ITEMS_PER_PAGE);// Filter and sort branches based on search and sorting\nconst filteredBranches=branches.filter(branch=>branch.name.toLowerCase().includes(branchSearchTerm.toLowerCase()));const sortedBranches=sortBranches(filteredBranches,branchSortBy);if(loading){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,showHeader:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"./sgex-mascot.png\",alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading previews...\"})]})});}if(error){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,showHeader:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"./sgex-mascot.png\",alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Failed to load previews: \",error]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please try refreshing the page or check back later.\"})]})]})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"branch-listing\",showMascot:true,showHeader:false,children:/*#__PURE__*/_jsxs(\"div\",{className:\"branch-listing\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"branch-listing-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"./sgex-mascot.png\",alt:\"SGEX Icon\",className:\"sgex-icon\"}),\" SGEX\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"a collaborative workbench for WHO SMART Guidelines\"}),/*#__PURE__*/_jsx(\"div\",{className:\"prominent-info\",children:/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"\\uD83D\\uDC3E This landing page lists all available previews. Each branch and PR is automatically deployed to its own preview environment.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-section\",children:!isAuthenticated?/*#__PURE__*/_jsxs(\"div\",{className:\"login-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD10 GitHub Authentication\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Login with your GitHub Personal Access Token to view and add comments to pull requests:\"}),/*#__PURE__*/_jsx(PATLogin,{onAuthSuccess:handleAuthSuccess})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"authenticated-section\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u2705 Authenticated - You can now view and add comments to pull requests\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"logout-btn\",children:\"Logout\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"contribute-btn primary\",onClick:()=>setShowContributeModal(true),children:\"\\uD83C\\uDF1F How to Contribute\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/sgex/main/docs/\",className:\"contribute-btn secondary\",target:\"_blank\",rel:\"noopener noreferrer\",onError:e=>{// Fallback to GitHub docs if main branch docs not available\ne.target.href=\"https://github.com/litlfred/sgex/tree/main/public/docs\";},children:\"\\uD83D\\uDCDA Documentation\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex/issues/new\",className:\"contribute-btn tertiary\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDC1B Report a Bug\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-tabs\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='branches'?'active':''}`,onClick:()=>setActiveTab('branches'),children:[\"\\uD83C\\uDF3F Branch Previews (\",sortedBranches.length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='prs'?'active':''}`,onClick:()=>setActiveTab('prs'),children:[\"\\uD83D\\uDD04 Pull Request Previews (\",sortedPRs.length,\")\"]})]}),activeTab==='branches'&&/*#__PURE__*/_jsxs(\"div\",{className:\"branch-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"branch-controls\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search branches by name...\",value:branchSearchTerm,onChange:e=>setBranchSearchTerm(e.target.value),className:\"branch-search\"}),/*#__PURE__*/_jsxs(\"select\",{value:branchSortBy,onChange:e=>setBranchSortBy(e.target.value),className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"updated\",children:\"Sort by Recent Updates\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alphabetical\",children:\"Sort Alphabetically\"})]}),checkingStatuses&&/*#__PURE__*/_jsx(\"span\",{className:\"status-checking\",children:\"\\uD83D\\uDD04 Checking deployment status...\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"branch-cards\",children:sortedBranches.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-items\",children:branchSearchTerm?/*#__PURE__*/_jsxs(\"p\",{children:[\"No branches match your search \\\"\",branchSearchTerm,\"\\\".\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"No branch previews available at the moment.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Branch previews will appear here when code is pushed to branches.\"})]})}):sortedBranches.map(branch=>{const statusKey=`branch-${branch.name}`;const deploymentStatus=deploymentStatuses[statusKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"item-name\",children:branch.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-badges\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"commit-badge\",children:branch.commit.sha.substring(0,7)}),deploymentStatus&&/*#__PURE__*/_jsxs(\"span\",{className:`status-badge ${deploymentStatus}`,children:[deploymentStatus==='active'&&'üü¢ Active',deploymentStatus==='not-found'&&'üü° Building',deploymentStatus==='errored'&&'üî¥ Error']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Last updated: \",branch.lastModified]}),/*#__PURE__*/_jsxs(\"div\",{className:\"branch-actions\",children:[deploymentStatus==='active'?/*#__PURE__*/_jsx(\"a\",{href:branch.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}):deploymentStatus==='not-found'?/*#__PURE__*/_jsx(\"div\",{className:\"deployment-message\",children:/*#__PURE__*/_jsx(\"span\",{className:\"building-message\",children:\"\\uD83D\\uDD04 Deployment in progress. Please check back in a few minutes.\"})}):deploymentStatus==='errored'?/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:\"\\u274C Deployment failed. Please check the GitHub Actions logs or contact support.\"}),/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/litlfred/sgex/actions`,className:\"actions-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"View Actions Log\"})]}):/*#__PURE__*/_jsx(\"a\",{href:branch.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>copyToClipboard(branch.url,'branch',branch.name),title:\"Copy URL to clipboard\",children:\"\\uD83D\\uDCCB Copy URL\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",/*#__PURE__*/_jsx(\"a\",{href:branch.url,className:\"preview-url-link\",rel:\"noopener noreferrer\",children:branch.url})]})})]},branch.name);})})]}),activeTab==='prs'&&/*#__PURE__*/_jsxs(\"div\",{className:\"pr-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pr-filter-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pr-filter\",children:\"Filter PRs:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"pr-filter\",value:prFilter,onChange:e=>{setPrFilter(e.target.value);setPrPage(1);// Reset to first page when filtering\n},className:\"filter-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"open\",children:\"Open PRs Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"closed\",children:\"Closed PRs Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All PRs\"})]})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search pull requests by title or author...\",value:prSearchTerm,onChange:e=>{setPrSearchTerm(e.target.value);setPrPage(1);// Reset to first page when searching\n},className:\"pr-search\"}),/*#__PURE__*/_jsxs(\"select\",{value:prSortBy,onChange:e=>{setPrSortBy(e.target.value);setPrPage(1);// Reset to first page when sorting\n},className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"updated\",children:\"Sort by Recent Updates\"}),/*#__PURE__*/_jsx(\"option\",{value:\"number\",children:\"Sort by PR Number\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alphabetical\",children:\"Sort Alphabetically\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pr-cards\",children:paginatedPRs.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-items\",children:prSearchTerm?/*#__PURE__*/_jsxs(\"p\",{children:[\"No pull requests match your search \\\"\",prSearchTerm,\"\\\".\"]}):/*#__PURE__*/_jsx(\"p\",{children:\"No pull request previews available at the moment.\"})}):paginatedPRs.map(pr=>{var _commentInputs$pr$num;const statusKey=`pr-${pr.id}`;const deploymentStatus=deploymentStatuses[statusKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card pr-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"item-name\",children:[\"#\",pr.number,\": \",pr.title]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-badges\",children:[/*#__PURE__*/_jsxs(\"span\",{className:`state-badge ${pr.state}`,children:[pr.state==='open'?'üü¢':'üî¥',\" \",pr.state]}),deploymentStatus&&/*#__PURE__*/_jsxs(\"span\",{className:`status-badge ${deploymentStatus}`,children:[deploymentStatus==='active'&&'üü¢ Active',deploymentStatus==='not-found'&&'üü° Building',deploymentStatus==='errored'&&'üî¥ Error']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"pr-meta\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Branch:\"}),\" \",pr.branchName,\" \\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Author:\"}),\" \",pr.author]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-date\",children:[\"Created: \",pr.createdAt,\" \\u2022 Updated: \",pr.updatedAt]}),isAuthenticated&&/*#__PURE__*/_jsxs(\"div\",{className:\"pr-comments-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Recent Comments:\"}),loadingComments?/*#__PURE__*/_jsx(\"div\",{className:\"comments-loading\",children:\"Loading comments...\"}):prComments[pr.number]&&prComments[pr.number].length>0?/*#__PURE__*/_jsx(\"div\",{className:\"comments-list\",children:prComments[pr.number].map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:\"comment-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:comment.avatar_url,alt:comment.author,className:\"comment-avatar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-author\",children:comment.author}),/*#__PURE__*/_jsx(\"span\",{className:\"comment-date\",children:comment.created_at})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-body\",children:comment.body})]},comment.id))}):/*#__PURE__*/_jsx(\"div\",{className:\"no-comments\",children:\"No recent comments\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-input-section\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:commentInputs[pr.number]||'',onChange:e=>setCommentInputs(prev=>({...prev,[pr.number]:e.target.value})),placeholder:\"Add a comment...\",className:\"comment-input\",rows:3}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>submitComment(pr.number,commentInputs[pr.number]),disabled:!((_commentInputs$pr$num=commentInputs[pr.number])!==null&&_commentInputs$pr$num!==void 0&&_commentInputs$pr$num.trim())||submittingComments[pr.number],className:\"submit-comment-btn\",children:submittingComments[pr.number]?'Submitting...':'Add Comment'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pr-actions\",children:[deploymentStatus==='active'?/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}):deploymentStatus==='not-found'?/*#__PURE__*/_jsx(\"div\",{className:\"deployment-message\",children:/*#__PURE__*/_jsx(\"span\",{className:\"building-message\",children:\"\\uD83D\\uDD04 Deployment in progress. Please check back in a few minutes.\"})}):deploymentStatus==='errored'?/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:\"\\u274C Deployment failed. Please check the GitHub Actions logs or contact support.\"}),/*#__PURE__*/_jsx(\"a\",{href:`https://github.com/litlfred/sgex/actions`,className:\"actions-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"View Actions Log\"})]}):/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-link\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE80 View Preview\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>copyToClipboard(pr.url,'PR',`#${pr.number}`),title:\"Copy URL to clipboard\",children:\"\\uD83D\\uDCCB Copy URL\"}),/*#__PURE__*/_jsx(\"a\",{href:pr.prUrl,className:\"pr-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCB View PR\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"preview-path\",children:[\"Preview URL: \",/*#__PURE__*/_jsx(\"a\",{href:pr.url,className:\"preview-url-link\",rel:\"noopener noreferrer\",children:pr.url})]})})]},pr.id);})}),totalPRPages>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.max(1,prPage-1)),disabled:prPage===1,children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"pagination-info\",children:[\"Page \",prPage,\" of \",totalPRPages,\" (\",sortedPRs.length,\" total)\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>setPrPage(Math.min(totalPRPages,prPage+1)),disabled:prPage===totalPRPages,children:\"Next \\u2192\"})]})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"branch-listing-footer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"footer-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"footer-left\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/litlfred/sgex\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"source-link\",children:\"\\uD83D\\uDCE6 Source Code\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"footer-center\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Main Application:\"}),\" \",/*#__PURE__*/_jsx(\"a\",{href:\"./main/index.html\",children:\"View Main Branch \\u2192\"})]})})]})}),showContributeModal&&/*#__PURE__*/_jsx(HelpModal,{helpTopic:contributeHelpTopic,onClose:()=>setShowContributeModal(false)})]})});};export default BranchListing;","map":{"version":3,"names":["React","useState","useEffect","useCallback","PageLayout","HelpModal","PATLogin","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BranchListing","branches","setBranches","pullRequests","setPullRequests","loading","setLoading","error","setError","activeTab","setActiveTab","prPage","setPrPage","prSearchTerm","setPrSearchTerm","branchSearchTerm","setBranchSearchTerm","prSortBy","setPrSortBy","branchSortBy","setBranchSortBy","showContributeModal","setShowContributeModal","deploymentStatuses","setDeploymentStatuses","checkingStatuses","setCheckingStatuses","prFilter","setPrFilter","isAuthenticated","setIsAuthenticated","githubToken","setGithubToken","prComments","setPrComments","loadingComments","setLoadingComments","commentInputs","setCommentInputs","submittingComments","setSubmittingComments","ITEMS_PER_PAGE","handleAuthSuccess","token","octokitInstance","sessionStorage","setItem","handleLogout","removeItem","fetchPRComments","prNumber","response","fetch","headers","ok","Error","status","comments","json","slice","map","comment","id","author","user","login","body","split","join","substring","length","created_at","Date","toLocaleDateString","avatar_url","console","submitComment","commentText","trim","prev","method","JSON","stringify","updatedComments","loadCommentsForPRs","prs","pr","number","getItem","checkDeploymentStatus","url","checkAllDeploymentStatuses","branchData","prData","statuses","branch","name","copyToClipboard","type","navigator","clipboard","writeText","log","textArea","document","createElement","value","appendChild","select","execCommand","removeChild","sortBranches","sortBy","sort","a","b","localeCompare","dateA","lastModified","dateB","sortPRs","title","updatedAt","contributeHelpTopic","content","fetchData","owner","repo","branchResponse","prState","prResponse","filteredBranches","filter","_branch$commit$commit","_branch$commit$commit2","safeName","replace","commit","committer","date","formattedPRs","safeBranchName","head","ref","state","branchName","prUrl","html_url","updated_at","createdAt","err","message","process","env","NODE_ENV","includes","mockBranches","sha","now","mockPRs","filtered","toLowerCase","sorted","paginated","filteredPRs","sortedPRs","paginatedPRs","totalPRPages","Math","ceil","sortedBranches","pageName","showMascot","showHeader","children","className","src","alt","onAuthSuccess","onClick","href","target","rel","onError","e","placeholder","onChange","statusKey","deploymentStatus","htmlFor","_commentInputs$pr$num","rows","disabled","max","min","helpTopic","onClose"],"sources":["/home/runner/work/sgex/sgex/src/components/BranchListing.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { PageLayout } from './framework';\nimport HelpModal from './HelpModal';\nimport PATLogin from './PATLogin';\nimport './BranchListing.css';\n\nconst BranchListing = () => {\n  const [branches, setBranches] = useState([]);\n  const [pullRequests, setPullRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('prs'); // Start with PR preview section\n  const [prPage, setPrPage] = useState(1);\n  const [prSearchTerm, setPrSearchTerm] = useState('');\n  const [branchSearchTerm, setBranchSearchTerm] = useState('');\n  const [prSortBy, setPrSortBy] = useState('updated'); // updated, number, alphabetical\n  const [branchSortBy, setBranchSortBy] = useState('updated'); // updated, alphabetical\n  const [showContributeModal, setShowContributeModal] = useState(false);\n  const [deploymentStatuses, setDeploymentStatuses] = useState({});\n  const [checkingStatuses, setCheckingStatuses] = useState(false);\n  const [prFilter, setPrFilter] = useState('open'); // 'open', 'closed', 'all'\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [githubToken, setGithubToken] = useState(null);\n  const [prComments, setPrComments] = useState({});\n  const [loadingComments, setLoadingComments] = useState(false);\n  const [commentInputs, setCommentInputs] = useState({});\n  const [submittingComments, setSubmittingComments] = useState({});\n\n  const ITEMS_PER_PAGE = 10;\n\n  // GitHub authentication functions\n  const handleAuthSuccess = (token, octokitInstance) => {\n    setGithubToken(token);\n    setIsAuthenticated(true);\n    // Store token for session\n    sessionStorage.setItem('github_token', token);\n  };\n\n  const handleLogout = () => {\n    setGithubToken(null);\n    setIsAuthenticated(false);\n    sessionStorage.removeItem('github_token');\n  };\n\n  // Function to fetch PR comments\n  const fetchPRComments = useCallback(async (prNumber) => {\n    if (!githubToken) return [];\n    \n    try {\n      const response = await fetch(\n        `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n        {\n          headers: {\n            'Authorization': `token ${githubToken}`,\n            'Accept': 'application/vnd.github.v3+json'\n          }\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch comments: ${response.status}`);\n      }\n      \n      const comments = await response.json();\n      // Return last 4 comments, truncated to 2 lines each\n      return comments.slice(-4).map(comment => ({\n        id: comment.id,\n        author: comment.user.login,\n        body: comment.body.split('\\n').slice(0, 2).join('\\n').substring(0, 200) + (comment.body.length > 200 ? '...' : ''),\n        created_at: new Date(comment.created_at).toLocaleDateString(),\n        avatar_url: comment.user.avatar_url\n      }));\n    } catch (error) {\n      console.error(`Error fetching comments for PR ${prNumber}:`, error);\n      return [];\n    }\n  }, [githubToken]);\n\n  // Function to submit a comment\n  const submitComment = async (prNumber, commentText) => {\n    if (!githubToken || !commentText.trim()) return false;\n    \n    setSubmittingComments(prev => ({ ...prev, [prNumber]: true }));\n    \n    try {\n      const response = await fetch(\n        `https://api.github.com/repos/litlfred/sgex/issues/${prNumber}/comments`,\n        {\n          method: 'POST',\n          headers: {\n            'Authorization': `token ${githubToken}`,\n            'Accept': 'application/vnd.github.v3+json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            body: commentText\n          })\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`Failed to submit comment: ${response.status}`);\n      }\n      \n      // Clear the comment input\n      setCommentInputs(prev => ({ ...prev, [prNumber]: '' }));\n      \n      // Refresh comments for this PR\n      const updatedComments = await fetchPRComments(prNumber);\n      setPrComments(prev => ({ ...prev, [prNumber]: updatedComments }));\n      \n      return true;\n    } catch (error) {\n      console.error(`Error submitting comment for PR ${prNumber}:`, error);\n      return false;\n    } finally {\n      setSubmittingComments(prev => ({ ...prev, [prNumber]: false }));\n    }\n  };\n\n  // Function to load comments for all visible PRs\n  const loadCommentsForPRs = useCallback(async (prs) => {\n    if (!githubToken || prs.length === 0) return;\n    \n    setLoadingComments(true);\n    const comments = {};\n    \n    for (const pr of prs) {\n      comments[pr.number] = await fetchPRComments(pr.number);\n    }\n    \n    setPrComments(comments);\n    setLoadingComments(false);\n  }, [githubToken, fetchPRComments]);\n\n  // Check for existing authentication on component mount\n  useEffect(() => {\n    const token = sessionStorage.getItem('github_token');\n    if (token) {\n      setGithubToken(token);\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  // Function to check deployment status\n  const checkDeploymentStatus = async (url) => {\n    try {\n      const response = await fetch(url, { method: 'HEAD' });\n      if (response.ok) {\n        return 'active';\n      } else if (response.status === 404) {\n        return 'not-found';\n      } else {\n        return 'errored';\n      }\n    } catch (error) {\n      return 'errored';\n    }\n  };\n\n  // Function to check deployment statuses for all items\n  const checkAllDeploymentStatuses = useCallback(async (branchData, prData) => {\n    setCheckingStatuses(true);\n    const statuses = {};\n    \n    // Check branches\n    for (const branch of branchData) {\n      const status = await checkDeploymentStatus(branch.url);\n      statuses[`branch-${branch.name}`] = status;\n    }\n    \n    // Check PRs\n    for (const pr of prData) {\n      const status = await checkDeploymentStatus(pr.url);\n      statuses[`pr-${pr.id}`] = status;\n    }\n    \n    setDeploymentStatuses(statuses);\n    setCheckingStatuses(false);\n  }, []);\n\n  // Function to copy URL to clipboard\n  const copyToClipboard = async (url, type, name) => {\n    try {\n      await navigator.clipboard.writeText(url);\n      // You could add a toast notification here\n      console.log(`Copied ${type} URL for ${name} to clipboard`);\n    } catch (error) {\n      // Fallback for browsers that don't support clipboard API\n      const textArea = document.createElement('textarea');\n      textArea.value = url;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      console.log(`Copied ${type} URL for ${name} to clipboard (fallback)`);\n    }\n  };\n\n  // Sorting functions\n  const sortBranches = (branches, sortBy) => {\n    return [...branches].sort((a, b) => {\n      switch (sortBy) {\n        case 'alphabetical':\n          return a.name.localeCompare(b.name);\n        case 'updated':\n        default:\n          const dateA = new Date(a.lastModified);\n          const dateB = new Date(b.lastModified);\n          return dateB - dateA; // Most recent first\n      }\n    });\n  };\n\n  const sortPRs = (prs, sortBy) => {\n    return [...prs].sort((a, b) => {\n      switch (sortBy) {\n        case 'number':\n          return b.number - a.number; // Highest number first\n        case 'alphabetical':\n          return a.title.localeCompare(b.title);\n        case 'updated':\n        default:\n          const dateA = new Date(a.updatedAt);\n          const dateB = new Date(b.updatedAt);\n          return dateB - dateA; // Most recent first\n      }\n    });\n  };\n\n  // \"How to contribute\" slideshow content\n  const contributeHelpTopic = {\n    id: 'how-to-contribute',\n    title: 'How to Contribute to SGEX',\n    type: 'slideshow',\n    content: [\n      {\n        title: 'Welcome to SGEX - A Collaborative Workbench',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot\" class=\"contribute-mascot\" />\n            </div>\n            <h3>What is SGEX?</h3>\n            <p>SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits.</p>\n            <p>Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 1: Report a Bug or Make a Feature Request',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot examining a bug\" class=\"contribute-mascot bug-report\" />\n            </div>\n            <h3>üêõ Found something that needs fixing?</h3>\n            <p>Every great contribution starts with identifying what can be improved:</p>\n            <ul>\n              <li><strong>Bug reports:</strong> Help us identify and fix issues</li>\n              <li><strong>Feature requests:</strong> Share ideas for new functionality</li>\n              <li><strong>Documentation improvements:</strong> Make our guides clearer</li>\n              <li><strong>User experience feedback:</strong> Tell us what's confusing</li>\n            </ul>\n            <p>Click the mascot's help button on any page to quickly report issues!</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 2: Assignment to a Coding Agent',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"./sgex-mascot.png\" alt=\"Robotic SGEX Mascot\" class=\"contribute-mascot coding-agent\" />\n            </div>\n            <h3>ü§ñ AI-Powered Development</h3>\n            <p>Once your issue is triaged, it may be assigned to one of our coding agents:</p>\n            <ul>\n              <li><strong>Automated analysis:</strong> AI agents analyze the requirements</li>\n              <li><strong>Code generation:</strong> Initial implementations are created</li>\n              <li><strong>Testing integration:</strong> Automated tests validate changes</li>\n              <li><strong>Documentation updates:</strong> Keep documentation in sync</li>\n            </ul>\n            <p>This hybrid approach combines human insight with AI efficiency.</p>\n          </div>\n        `\n      },\n      {\n        title: 'Step 3: Community Collaboration',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <div class=\"mascot-group\">\n                <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot 1\" class=\"contribute-mascot community\" />\n                <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot 2\" class=\"contribute-mascot community\" />\n                <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot 3\" class=\"contribute-mascot community\" />\n              </div>\n              <div class=\"thought-bubble\">üí´</div>\n            </div>\n            <h3>üåü Real-time Evolution</h3>\n            <p>The community drives continuous improvement through collaborative discussion:</p>\n            <ul>\n              <li><strong>Code reviews:</strong> Community members review and suggest improvements</li>\n              <li><strong>Testing feedback:</strong> Real-world testing by healthcare professionals</li>\n              <li><strong>Knowledge sharing:</strong> Best practices emerge from collective experience</li>\n              <li><strong>Iterative refinement:</strong> The workbench evolves based on actual usage</li>\n            </ul>\n            <p>Together, we're building the future of digital health tooling!</p>\n          </div>\n        `\n      },\n      {\n        title: 'Get Started Today!',\n        content: `\n          <div class=\"contribute-slide\">\n            <div class=\"mascot-container\">\n              <img src=\"./sgex-mascot.png\" alt=\"SGEX Mascot celebrating\" class=\"contribute-mascot celebrate\" />\n            </div>\n            <h3>üöÄ Ready to Contribute?</h3>\n            <div class=\"action-buttons\">\n              <a href=\"https://github.com/litlfred/sgex/issues/new\" target=\"_blank\" class=\"contribute-btn primary\">\n                üêõ Report a Bug\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/issues/new?template=feature_request.md\" target=\"_blank\" class=\"contribute-btn secondary\">\n                ‚ú® Request a Feature  \n              </a>\n              <a href=\"/sgex/main/docs/\" target=\"_blank\" class=\"contribute-btn tertiary\">\n                üìö Read Documentation\n              </a>\n              <a href=\"https://github.com/litlfred/sgex/tree/main/public/docs\" target=\"_blank\" class=\"contribute-btn tertiary-alt\">\n                üìñ Docs on GitHub\n              </a>\n            </div>\n            <p class=\"contribute-footer\">\n              <strong>Every contribution matters!</strong> Whether you're reporting a bug, testing a feature, or sharing feedback, you're helping improve digital health tools for healthcare workers worldwide.\n            </p>\n          </div>\n        `\n      }\n    ]\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        \n        // Use GitHub API to fetch branches and PRs for the sgex repository\n        const owner = 'litlfred';\n        const repo = 'sgex';\n        \n        // Fetch branches\n        const branchResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/branches`);\n        if (!branchResponse.ok) {\n          throw new Error(`Failed to fetch branches: ${branchResponse.status}`);\n        }\n        const branchData = await branchResponse.json();\n        \n        // Fetch pull requests based on filter\n        const prState = prFilter === 'all' ? 'all' : prFilter;\n        const prResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=${prState}&sort=updated&per_page=100`);\n        if (!prResponse.ok) {\n          throw new Error(`Failed to fetch pull requests: ${prResponse.status}`);\n        }\n        const prData = await prResponse.json();\n        \n        // Filter out gh-pages branch and format data\n        const filteredBranches = branchData\n          .filter(branch => branch.name !== 'gh-pages')\n          .map(branch => {\n            // Convert branch name to safe directory name (replace slashes with dashes)\n            const safeName = branch.name.replace(/\\//g, '-');\n            return {\n              name: branch.name,\n              safeName: safeName,\n              commit: branch.commit,\n              url: `./${safeName}/index.html`,\n              lastModified: branch.commit.commit?.committer?.date \n                ? new Date(branch.commit.commit.committer.date).toLocaleDateString()\n                : 'Unknown'\n            };\n          });\n        \n        // Format PR data\n        const formattedPRs = prData.map(pr => {\n          const safeBranchName = pr.head.ref.replace(/\\//g, '-');\n          return {\n            id: pr.id,\n            number: pr.number,\n            title: pr.title,\n            state: pr.state,\n            author: pr.user.login,\n            branchName: pr.head.ref,\n            safeBranchName: safeBranchName,\n            url: `./${safeBranchName}/index.html`,\n            prUrl: pr.html_url,\n            updatedAt: new Date(pr.updated_at).toLocaleDateString(),\n            createdAt: new Date(pr.created_at).toLocaleDateString()\n          };\n        });\n        \n        setBranches(filteredBranches);\n        setPullRequests(formattedPRs);\n        \n        // Check deployment statuses\n        await checkAllDeploymentStatuses(filteredBranches, formattedPRs);\n        \n        // Load comments for PRs if authenticated\n        if (githubToken) {\n          await loadCommentsForPRs(formattedPRs.slice(0, ITEMS_PER_PAGE));\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message);\n        \n        // Only use fallback data in development or when GitHub API is blocked\n        if (process.env.NODE_ENV === 'development' || err.message.includes('Failed to fetch')) {\n          console.log('Using fallback mock data for demonstration...');\n          const mockBranches = [\n            {\n              name: 'main',\n              safeName: 'main',\n              commit: { sha: 'abc1234' },\n              url: './main/index.html',\n              lastModified: new Date().toLocaleDateString()\n            },\n            {\n              name: 'feature/user-auth',\n              safeName: 'feature-user-auth',\n              commit: { sha: 'def5678' },\n              url: './feature-user-auth/index.html',\n              lastModified: new Date(Date.now() - 86400000).toLocaleDateString()\n            },\n            {\n              name: 'fix/api-endpoints',\n              safeName: 'fix-api-endpoints',\n              commit: { sha: 'ghi9012' },\n              url: './fix-api-endpoints/index.html',\n              lastModified: new Date(Date.now() - 172800000).toLocaleDateString()\n            }\n          ];\n\n          const mockPRs = [\n            {\n              id: 1,\n              number: 123,\n              title: 'Improve multi-page selector landing page for GitHub deployment',\n              state: 'open',\n              author: 'copilot',\n              branchName: 'copilot/fix-459',\n              safeBranchName: 'copilot-fix-459',\n              url: './copilot-fix-459/index.html',\n              prUrl: 'https://github.com/litlfred/sgex/pull/123',\n              updatedAt: new Date().toLocaleDateString(),\n              createdAt: new Date(Date.now() - 86400000).toLocaleDateString()\n            },\n            {\n              id: 2,\n              number: 122,\n              title: 'Add dark mode support',\n              state: 'closed',\n              author: 'developer',\n              branchName: 'feature/dark-mode',\n              safeBranchName: 'feature-dark-mode',\n              url: './feature-dark-mode/index.html',\n              prUrl: 'https://github.com/litlfred/sgex/pull/122',\n              updatedAt: new Date(Date.now() - 172800000).toLocaleDateString(),\n              createdAt: new Date(Date.now() - 345600000).toLocaleDateString()\n            },\n            {\n              id: 3,\n              number: 121,\n              title: 'Fix authentication flow',\n              state: 'open',\n              author: 'contributor',\n              branchName: 'fix/auth-flow',\n              safeBranchName: 'fix-auth-flow',\n              url: './fix-auth-flow/index.html',\n              prUrl: 'https://github.com/litlfred/sgex/pull/121',\n              updatedAt: new Date(Date.now() - 259200000).toLocaleDateString(),\n              createdAt: new Date(Date.now() - 432000000).toLocaleDateString()\n            }\n          ];\n\n          setBranches(mockBranches);\n          setPullRequests(mockPRs);\n          setError(null); // Clear error since we have fallback data\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [checkAllDeploymentStatuses, prFilter, githubToken, loadCommentsForPRs]);\n\n  // Load comments for visible PRs when page changes\n  useEffect(() => {\n    if (isAuthenticated && pullRequests.length > 0) {\n      const filtered = pullRequests.filter(pr => \n        pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n        pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n      );\n      const sorted = sortPRs(filtered, prSortBy);\n      const paginated = sorted.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n      loadCommentsForPRs(paginated);\n    }\n  }, [prPage, prSearchTerm, prSortBy, pullRequests, isAuthenticated, loadCommentsForPRs]);\n\n  // Filter and sort PRs based on search and sorting\n  const filteredPRs = pullRequests.filter(pr => \n    pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n    pr.author.toLowerCase().includes(prSearchTerm.toLowerCase())\n  );\n  const sortedPRs = sortPRs(filteredPRs, prSortBy);\n  const paginatedPRs = sortedPRs.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n  const totalPRPages = Math.ceil(sortedPRs.length / ITEMS_PER_PAGE);\n\n  // Filter and sort branches based on search and sorting\n  const filteredBranches = branches.filter(branch => \n    branch.name.toLowerCase().includes(branchSearchTerm.toLowerCase())\n  );\n  const sortedBranches = sortBranches(filteredBranches, branchSortBy);\n\n  if (loading) {\n    return (\n      <PageLayout pageName=\"branch-listing\" showMascot={true} showHeader={false}>\n        <div className=\"branch-listing\">\n          <h1><img src=\"./sgex-mascot.png\" alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          <div className=\"loading\">Loading previews...</div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <PageLayout pageName=\"branch-listing\" showMascot={true} showHeader={false}>\n        <div className=\"branch-listing\">\n          <h1><img src=\"./sgex-mascot.png\" alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          <div className=\"error\">\n            <p>Failed to load previews: {error}</p>\n            <p>Please try refreshing the page or check back later.</p>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout pageName=\"branch-listing\" showMascot={true} showHeader={false}>\n      <div className=\"branch-listing\">\n        <header className=\"branch-listing-header\">\n          <h1><img src=\"./sgex-mascot.png\" alt=\"SGEX Icon\" className=\"sgex-icon\" /> SGEX</h1>\n          <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n          \n          <div className=\"prominent-info\">\n            <p className=\"info-text\">\n              üêæ This landing page lists all available previews. \n              Each branch and PR is automatically deployed to its own preview environment.\n            </p>\n          </div>\n          \n          {/* Authentication Section */}\n          <div className=\"auth-section\">\n            {!isAuthenticated ? (\n              <div className=\"login-section\">\n                <h3>üîê GitHub Authentication</h3>\n                <p>Login with your GitHub Personal Access Token to view and add comments to pull requests:</p>\n                <PATLogin onAuthSuccess={handleAuthSuccess} />\n              </div>\n            ) : (\n              <div className=\"authenticated-section\">\n                <p>‚úÖ Authenticated - You can now view and add comments to pull requests</p>\n                <button onClick={handleLogout} className=\"logout-btn\">\n                  Logout\n                </button>\n              </div>\n            )}\n          </div>\n        </header>\n\n        <div className=\"main-actions\">\n          <button \n            className=\"contribute-btn primary\"\n            onClick={() => setShowContributeModal(true)}\n          >\n            üåü How to Contribute\n          </button>\n          <a \n            href=\"/sgex/main/docs/\" \n            className=\"contribute-btn secondary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            onError={(e) => {\n              // Fallback to GitHub docs if main branch docs not available\n              e.target.href = \"https://github.com/litlfred/sgex/tree/main/public/docs\";\n            }}\n          >\n            üìö Documentation\n          </a>\n          <a \n            href=\"https://github.com/litlfred/sgex/issues/new\" \n            className=\"contribute-btn tertiary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            üêõ Report a Bug\n          </a>\n        </div>\n\n        <div className=\"preview-tabs\">\n          <button \n            className={`tab-button ${activeTab === 'branches' ? 'active' : ''}`}\n            onClick={() => setActiveTab('branches')}\n          >\n            üåø Branch Previews ({sortedBranches.length})\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'prs' ? 'active' : ''}`}\n            onClick={() => setActiveTab('prs')}\n          >\n            üîÑ Pull Request Previews ({sortedPRs.length})\n          </button>\n        </div>\n\n        {activeTab === 'branches' && (\n          <div className=\"branch-section\">\n            <div className=\"branch-controls\">\n              <input\n                type=\"text\"\n                placeholder=\"Search branches by name...\"\n                value={branchSearchTerm}\n                onChange={(e) => setBranchSearchTerm(e.target.value)}\n                className=\"branch-search\"\n              />\n              <select\n                value={branchSortBy}\n                onChange={(e) => setBranchSortBy(e.target.value)}\n                className=\"sort-select\"\n              >\n                <option value=\"updated\">Sort by Recent Updates</option>\n                <option value=\"alphabetical\">Sort Alphabetically</option>\n              </select>\n              {checkingStatuses && (\n                <span className=\"status-checking\">\n                  üîÑ Checking deployment status...\n                </span>\n              )}\n            </div>\n\n            <div className=\"branch-cards\">\n              {sortedBranches.length === 0 ? (\n                <div className=\"no-items\">\n                  {branchSearchTerm ? (\n                    <p>No branches match your search \"{branchSearchTerm}\".</p>\n                  ) : (\n                    <>\n                      <p>No branch previews available at the moment.</p>\n                      <p>Branch previews will appear here when code is pushed to branches.</p>\n                    </>\n                  )}\n                </div>\n              ) : (\n                sortedBranches.map((branch) => {\n                  const statusKey = `branch-${branch.name}`;\n                  const deploymentStatus = deploymentStatuses[statusKey];\n                  \n                  return (\n                    <div key={branch.name} className=\"preview-card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"item-name\">{branch.name}</h3>\n                        <div className=\"card-badges\">\n                          <span className=\"commit-badge\">\n                            {branch.commit.sha.substring(0, 7)}\n                          </span>\n                          {deploymentStatus && (\n                            <span className={`status-badge ${deploymentStatus}`}>\n                              {deploymentStatus === 'active' && 'üü¢ Active'}\n                              {deploymentStatus === 'not-found' && 'üü° Building'}\n                              {deploymentStatus === 'errored' && 'üî¥ Error'}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"card-body\">\n                        <p className=\"item-date\">\n                          Last updated: {branch.lastModified}\n                        </p>\n                        \n                        <div className=\"branch-actions\">\n                          {deploymentStatus === 'active' ? (\n                            <a \n                              href={branch.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>üöÄ View Preview</span>\n                            </a>\n                          ) : deploymentStatus === 'not-found' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"building-message\">\n                                üîÑ Deployment in progress. Please check back in a few minutes.\n                              </span>\n                            </div>\n                          ) : deploymentStatus === 'errored' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"error-message\">\n                                ‚ùå Deployment failed. Please check the GitHub Actions logs or contact support.\n                              </span>\n                              <a \n                                href={`https://github.com/litlfred/sgex/actions`}\n                                className=\"actions-link\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                View Actions Log\n                              </a>\n                            </div>\n                          ) : (\n                            <a \n                              href={branch.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>üöÄ View Preview</span>\n                            </a>\n                          )}\n                          \n                          <button \n                            className=\"copy-btn\"\n                            onClick={() => copyToClipboard(branch.url, 'branch', branch.name)}\n                            title=\"Copy URL to clipboard\"\n                          >\n                            üìã Copy URL\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className=\"card-footer\">\n                        <small className=\"preview-path\">\n                          Preview URL: <a \n                            href={branch.url} \n                            className=\"preview-url-link\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            {branch.url}\n                          </a>\n                        </small>\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'prs' && (\n          <div className=\"pr-section\">\n            <div className=\"pr-controls\">\n              <div className=\"pr-filter-section\">\n                <label htmlFor=\"pr-filter\">Filter PRs:</label>\n                <select\n                  id=\"pr-filter\"\n                  value={prFilter}\n                  onChange={(e) => {\n                    setPrFilter(e.target.value);\n                    setPrPage(1); // Reset to first page when filtering\n                  }}\n                  className=\"filter-select\"\n                >\n                  <option value=\"open\">Open PRs Only</option>\n                  <option value=\"closed\">Closed PRs Only</option>\n                  <option value=\"all\">All PRs</option>\n                </select>\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"Search pull requests by title or author...\"\n                value={prSearchTerm}\n                onChange={(e) => {\n                  setPrSearchTerm(e.target.value);\n                  setPrPage(1); // Reset to first page when searching\n                }}\n                className=\"pr-search\"\n              />\n              <select\n                value={prSortBy}\n                onChange={(e) => {\n                  setPrSortBy(e.target.value);\n                  setPrPage(1); // Reset to first page when sorting\n                }}\n                className=\"sort-select\"\n              >\n                <option value=\"updated\">Sort by Recent Updates</option>\n                <option value=\"number\">Sort by PR Number</option>\n                <option value=\"alphabetical\">Sort Alphabetically</option>\n              </select>\n            </div>\n\n            <div className=\"pr-cards\">\n              {paginatedPRs.length === 0 ? (\n                <div className=\"no-items\">\n                  {prSearchTerm ? (\n                    <p>No pull requests match your search \"{prSearchTerm}\".</p>\n                  ) : (\n                    <p>No pull request previews available at the moment.</p>\n                  )}\n                </div>\n              ) : (\n                paginatedPRs.map((pr) => {\n                  const statusKey = `pr-${pr.id}`;\n                  const deploymentStatus = deploymentStatuses[statusKey];\n                  \n                  return (\n                    <div key={pr.id} className=\"preview-card pr-card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"item-name\">#{pr.number}: {pr.title}</h3>\n                        <div className=\"card-badges\">\n                          <span className={`state-badge ${pr.state}`}>\n                            {pr.state === 'open' ? 'üü¢' : 'üî¥'} {pr.state}\n                          </span>\n                          {deploymentStatus && (\n                            <span className={`status-badge ${deploymentStatus}`}>\n                              {deploymentStatus === 'active' && 'üü¢ Active'}\n                              {deploymentStatus === 'not-found' && 'üü° Building'}\n                              {deploymentStatus === 'errored' && 'üî¥ Error'}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"card-body\">\n                        <p className=\"pr-meta\">\n                          <strong>Branch:</strong> {pr.branchName} ‚Ä¢ <strong>Author:</strong> {pr.author}\n                        </p>\n                        <p className=\"item-date\">\n                          Created: {pr.createdAt} ‚Ä¢ Updated: {pr.updatedAt}\n                        </p>\n                        \n                        {/* Comments Section */}\n                        {isAuthenticated && (\n                          <div className=\"pr-comments-section\">\n                            <h4>Recent Comments:</h4>\n                            {loadingComments ? (\n                              <div className=\"comments-loading\">Loading comments...</div>\n                            ) : prComments[pr.number] && prComments[pr.number].length > 0 ? (\n                              <div className=\"comments-list\">\n                                {prComments[pr.number].map((comment) => (\n                                  <div key={comment.id} className=\"comment-item\">\n                                    <div className=\"comment-header\">\n                                      <img \n                                        src={comment.avatar_url} \n                                        alt={comment.author} \n                                        className=\"comment-avatar\"\n                                      />\n                                      <span className=\"comment-author\">{comment.author}</span>\n                                      <span className=\"comment-date\">{comment.created_at}</span>\n                                    </div>\n                                    <div className=\"comment-body\">{comment.body}</div>\n                                  </div>\n                                ))}\n                              </div>\n                            ) : (\n                              <div className=\"no-comments\">No recent comments</div>\n                            )}\n                            \n                            {/* Comment Input */}\n                            <div className=\"comment-input-section\">\n                              <textarea\n                                value={commentInputs[pr.number] || ''}\n                                onChange={(e) => setCommentInputs(prev => ({\n                                  ...prev,\n                                  [pr.number]: e.target.value\n                                }))}\n                                placeholder=\"Add a comment...\"\n                                className=\"comment-input\"\n                                rows={3}\n                              />\n                              <button\n                                onClick={() => submitComment(pr.number, commentInputs[pr.number])}\n                                disabled={!commentInputs[pr.number]?.trim() || submittingComments[pr.number]}\n                                className=\"submit-comment-btn\"\n                              >\n                                {submittingComments[pr.number] ? 'Submitting...' : 'Add Comment'}\n                              </button>\n                            </div>\n                          </div>\n                        )}\n                        \n                        <div className=\"pr-actions\">\n                          {deploymentStatus === 'active' ? (\n                            <a \n                              href={pr.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>üöÄ View Preview</span>\n                            </a>\n                          ) : deploymentStatus === 'not-found' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"building-message\">\n                                üîÑ Deployment in progress. Please check back in a few minutes.\n                              </span>\n                            </div>\n                          ) : deploymentStatus === 'errored' ? (\n                            <div className=\"deployment-message\">\n                              <span className=\"error-message\">\n                                ‚ùå Deployment failed. Please check the GitHub Actions logs or contact support.\n                              </span>\n                              <a \n                                href={`https://github.com/litlfred/sgex/actions`}\n                                className=\"actions-link\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                View Actions Log\n                              </a>\n                            </div>\n                          ) : (\n                            <a \n                              href={pr.url} \n                              className=\"preview-link\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <span>üöÄ View Preview</span>\n                            </a>\n                          )}\n                          \n                          <button \n                            className=\"copy-btn\"\n                            onClick={() => copyToClipboard(pr.url, 'PR', `#${pr.number}`)}\n                            title=\"Copy URL to clipboard\"\n                          >\n                            üìã Copy URL\n                          </button>\n                          \n                          <a \n                            href={pr.prUrl} \n                            className=\"pr-link\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <span>üìã View PR</span>\n                          </a>\n                        </div>\n                      </div>\n\n                      <div className=\"card-footer\">\n                        <small className=\"preview-path\">\n                          Preview URL: <a \n                            href={pr.url} \n                            className=\"preview-url-link\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            {pr.url}\n                          </a>\n                        </small>\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n            </div>\n\n            {totalPRPages > 1 && (\n              <div className=\"pagination\">\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => setPrPage(Math.max(1, prPage - 1))}\n                  disabled={prPage === 1}\n                >\n                  ‚Üê Previous\n                </button>\n                <span className=\"pagination-info\">\n                  Page {prPage} of {totalPRPages} ({sortedPRs.length} total)\n                </span>\n                <button \n                  className=\"pagination-btn\"\n                  onClick={() => setPrPage(Math.min(totalPRPages, prPage + 1))}\n                  disabled={prPage === totalPRPages}\n                >\n                  Next ‚Üí\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        <footer className=\"branch-listing-footer\">\n          <div className=\"footer-content\">\n            <div className=\"footer-left\">\n              <a \n                href=\"https://github.com/litlfred/sgex\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"source-link\"\n              >\n                üì¶ Source Code\n              </a>\n            </div>\n            <div className=\"footer-center\">\n              <p>\n                <strong>Main Application:</strong> <a href=\"./main/index.html\">View Main Branch ‚Üí</a>\n              </p>\n            </div>\n          </div>\n        </footer>\n\n        {showContributeModal && (\n          <HelpModal\n            helpTopic={contributeHelpTopic}\n            onClose={() => setShowContributeModal(false)}\n          />\n        )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default BranchListing;"],"mappings":"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AC3B,MAAM,CAAE;AAC9B,IAAK,cAAc,CACjB,MAAO,CAAA2B,CAAC,CAACO,KAAK,CAACL,aAAa,CAACD,CAAC,CAACM,KAAK,CAAC,CACvC,IAAK,SAAS,CACd,QACE,KAAM,CAAAJ,KAAK,CAAG,GAAI,CAAA7C,IAAI,CAAC0C,CAAC,CAACQ,SAAS,CAAC,CACnC,KAAM,CAAAH,KAAK,CAAG,GAAI,CAAA/C,IAAI,CAAC2C,CAAC,CAACO,SAAS,CAAC,CACnC,MAAO,CAAAH,KAAK,CAAGF,KAAK,CAAE;AAC1B,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAM,mBAAmB,CAAG,CAC1B7D,EAAE,CAAE,mBAAmB,CACvB2D,KAAK,CAAE,2BAA2B,CAClCvB,IAAI,CAAE,WAAW,CACjB0B,OAAO,CAAE,CACP,CACEH,KAAK,CAAE,6CAA6C,CACpDG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEH,KAAK,CAAE,gDAAgD,CACvDG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEH,KAAK,CAAE,sCAAsC,CAC7CG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEH,KAAK,CAAE,iCAAiC,CACxCG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CACD,CACEH,KAAK,CAAE,oBAAoB,CAC3BG,OAAO,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,CAAC,CAEL,CAAC,CAEDvI,SAAS,CAAC,IAAM,CACd,KAAM,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}