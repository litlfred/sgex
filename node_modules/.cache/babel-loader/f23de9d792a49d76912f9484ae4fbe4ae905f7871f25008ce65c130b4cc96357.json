{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useParams}from'react-router-dom';import{PageLayout}from'./framework';import{sanitizeHtml}from'../utils/securityUtils';import'./DocumentationViewer.css';// Dynamically generate documentation files structure\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const generateDocFiles=()=>{const files={'overview':{file:'README.md',title:'Documentation Overview',category:'root'},'bpmn-integration':{file:'bpmn-integration.md',title:'BPMN Integration',category:'root'},'dak-components':{file:'dak-components.md',title:'DAK Components',category:'root'},'decision-table-editor':{file:'decision-table-editor.md',title:'Decision Table Editor',category:'root'},'framework-developer-guide':{file:'framework-developer-guide.md',title:'Framework Developer Guide',category:'root'},'page-framework':{file:'page-framework.md',title:'Page Framework',category:'root'},'page-inventory':{file:'page-inventory.md',title:'Page Inventory',category:'root'},'project-plan':{file:'project-plan.md',title:'Project Plan',category:'root'},'qa-testing':{file:'qa-testing.md',title:'QA Testing',category:'root'},'requirements':{file:'requirements.md',title:'Requirements',category:'root'},'solution-architecture':{file:'solution-architecture.md',title:'Solution Architecture',category:'root'},'ui-styling-requirements':{file:'UI_STYLING_REQUIREMENTS.md',title:'UI Styling Requirements',category:'root'},'who-cors-workaround':{file:'WHO_CORS_WORKAROUND.md',title:'WHO CORS Workaround',category:'root'},'workflows-overview':{file:'workflows/README.md',title:'Workflows Overview',category:'workflows'}};return files;};const docFiles=generateDocFiles();const DocumentationViewer=()=>{const{docId}=useParams();const navigate=useNavigate();const[content,setContent]=useState('');const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const loadDocumentation=async()=>{setLoading(true);setError(null);try{const docInfo=docFiles[docId]||docFiles['overview'];// For HTML files, open in a new tab to avoid navigation conflicts\nif(docInfo.isHtml){// Check if file exists first\ntry{const checkResponse=await fetch(`${process.env.PUBLIC_URL}/docs/${docInfo.file}`,{method:'HEAD'});if(checkResponse.ok){// File exists, open in new tab to avoid server conflicts\nwindow.open(`${process.env.PUBLIC_URL}/docs/${docInfo.file}`,'_blank');// Show message in current tab\nsetContent(`# ${docInfo.title}\\n\\nThe QA report has been opened in a new tab.\\n\\nIf it didn't open automatically, you can access it here: [${docInfo.file}](${process.env.PUBLIC_URL}/docs/${docInfo.file})`);setLoading(false);return;}else{// File doesn't exist, show helpful message\nsetContent(`# ${docInfo.title}\\n\\nThe QA report is generated during deployment and is available on the live site at: [${docInfo.file}](/docs/${docInfo.file})\\n\\nIf you're viewing this locally, the report will be available after the next deployment to GitHub Pages.`);setLoading(false);return;}}catch(htmlCheckError){// If check fails, show helpful message\nsetContent(`# ${docInfo.title}\\n\\nThe QA report is generated during deployment and is available on the live site.\\n\\nIf you're viewing this locally, the report will be available after the next deployment to GitHub Pages.`);setLoading(false);return;}}// Fetch the markdown file from the docs folder\nconst response=await fetch(`${process.env.PUBLIC_URL}/docs/${docInfo.file}`);if(!response.ok){throw new Error(`Failed to load documentation: ${response.status}`);}const text=await response.text();setContent(text);}catch(err){console.error('Error loading documentation:',err);setError('Failed to load documentation. Please try again later.');}finally{setLoading(false);}};loadDocumentation();},[docId]);const renderMarkdown=markdown=>{// Simple markdown to HTML conversion for basic formatting\n// First sanitize the input markdown to prevent XSS in the source\nconst safeMd=sanitizeHtml(markdown);let html=safeMd;// Process tables first (before paragraph processing)\nhtml=html.replace(/(\\|[^\\n]+\\|\\n\\|[-\\s|:]+\\|\\n(?:\\|[^\\n]+\\|\\n?)*)/gm,match=>{const lines=match.trim().split('\\n');const headers=lines[0].split('|').slice(1,-1).map(h=>h.trim());const rows=lines.slice(2).map(row=>row.split('|').slice(1,-1).map(cell=>cell.trim()));let tableHtml='<table class=\"doc-table\">\\n<thead>\\n<tr>\\n';headers.forEach(header=>{tableHtml+=`<th>${sanitizeHtml(header)}</th>\\n`;});tableHtml+='</tr>\\n</thead>\\n<tbody>\\n';rows.forEach(row=>{tableHtml+='<tr>\\n';row.forEach(cell=>{tableHtml+=`<td>${sanitizeHtml(cell)}</td>\\n`;});tableHtml+='</tr>\\n';});tableHtml+='</tbody>\\n</table>\\n';return tableHtml;});// Apply other markdown formatting with safe replacements\nreturn html.replace(/^# (.*$)/gim,(match,p1)=>`<h1>${sanitizeHtml(p1)}</h1>`).replace(/^## (.*$)/gim,(match,p1)=>`<h2>${sanitizeHtml(p1)}</h2>`).replace(/^### (.*$)/gim,(match,p1)=>`<h3>${sanitizeHtml(p1)}</h3>`).replace(/^#### (.*$)/gim,(match,p1)=>`<h4>${sanitizeHtml(p1)}</h4>`).replace(/\\*\\*(.*)\\*\\*/gim,(match,p1)=>`<strong>${sanitizeHtml(p1)}</strong>`).replace(/\\*(.*)\\*/gim,(match,p1)=>`<em>${sanitizeHtml(p1)}</em>`).replace(/!\\[([^\\]]*)\\]\\(([^)]*)\\)/gim,(match,p1,p2)=>`<img alt=\"${sanitizeHtml(p1)}\" src=\"${sanitizeHtml(p2)}\" />`).replace(/\\[([^\\]]*)\\]\\(([^)]*)\\)/gim,(match,p1,p2)=>`<a href=\"${sanitizeHtml(p2)}\" target=\"_blank\" rel=\"noopener noreferrer\">${sanitizeHtml(p1)}</a>`).replace(/`([^`]*)`/gim,(match,p1)=>`<code>${sanitizeHtml(p1)}</code>`).replace(/^- (.*$)/gim,(match,p1)=>`<li>${sanitizeHtml(p1)}</li>`).replace(/^(\\d+)\\. (.*$)/gim,(match,p1,p2)=>`<li>${sanitizeHtml(p2)}</li>`).replace(/\\n\\n/gim,'</p><p>').replace(/^\\n/gim,'<p>').replace(/\\n$/gim,'</p>');};if(loading){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"documentation-viewer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"documentation-viewer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"doc-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading documentation...\"})]})})})});}if(error){return/*#__PURE__*/_jsx(PageLayout,{pageName:\"documentation-viewer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"documentation-viewer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"doc-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-state\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),className:\"retry-btn\",children:\"Try Again\"})]})})})});}return/*#__PURE__*/_jsx(PageLayout,{pageName:\"documentation-viewer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"documentation-viewer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"doc-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"doc-sidebar\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Documentation\"}),/*#__PURE__*/_jsx(\"nav\",{className:\"doc-menu\",children:(()=>{// Group files by category\nconst grouped={};Object.entries(docFiles).forEach(_ref=>{let[key,doc]=_ref;if(!grouped[doc.category]){grouped[doc.category]=[];}grouped[doc.category].push({key,...doc});});// Sort within each category\nObject.keys(grouped).forEach(category=>{grouped[category].sort((a,b)=>a.title.localeCompare(b.title));});// Render sections\nreturn Object.entries(grouped).sort((_ref2,_ref3)=>{let[a]=_ref2;let[b]=_ref3;return a==='root'?-1:b==='root'?1:a.localeCompare(b);}).map(_ref4=>{let[category,items]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{className:\"doc-category\",children:[category!=='root'&&/*#__PURE__*/_jsx(\"div\",{className:\"doc-category-header\",children:category.charAt(0).toUpperCase()+category.slice(1)}),items.map(_ref5=>{let{key,title}=_ref5;return/*#__PURE__*/_jsx(\"button\",{className:`doc-menu-item ${docId===key?'active':''} ${category!=='root'?'doc-menu-item-nested':''}`,onClick:()=>navigate(`/docs/${key}`),children:title},key);})]},category);});})()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"doc-main\",children:/*#__PURE__*/_jsx(\"article\",{className:\"doc-article\",dangerouslySetInnerHTML:{__html:renderMarkdown(content)}})})]})})});};export default DocumentationViewer;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","PageLayout","sanitizeHtml","jsx","_jsx","jsxs","_jsxs","generateDocFiles","files","file","title","category","docFiles","DocumentationViewer","docId","navigate","content","setContent","loading","setLoading","error","setError","loadDocumentation","docInfo","isHtml","checkResponse","fetch","process","env","PUBLIC_URL","method","ok","window","open","htmlCheckError","response","Error","status","text","err","console","renderMarkdown","markdown","safeMd","html","replace","match","lines","trim","split","headers","slice","map","h","rows","row","cell","tableHtml","forEach","header","p1","p2","pageName","children","className","onClick","location","reload","grouped","Object","entries","_ref","key","doc","push","keys","sort","a","b","localeCompare","_ref2","_ref3","_ref4","items","charAt","toUpperCase","_ref5","dangerouslySetInnerHTML","__html"],"sources":["/home/runner/work/sgex/sgex/src/components/DocumentationViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { PageLayout } from './framework';\nimport { sanitizeHtml } from '../utils/securityUtils';\nimport './DocumentationViewer.css';\n\n// Dynamically generate documentation files structure\nconst generateDocFiles = () => {\n\n  const files = {\n    'overview': { file: 'README.md', title: 'Documentation Overview', category: 'root' },\n    'bpmn-integration': { file: 'bpmn-integration.md', title: 'BPMN Integration', category: 'root' },\n    'dak-components': { file: 'dak-components.md', title: 'DAK Components', category: 'root' },\n    'decision-table-editor': { file: 'decision-table-editor.md', title: 'Decision Table Editor', category: 'root' },\n    'framework-developer-guide': { file: 'framework-developer-guide.md', title: 'Framework Developer Guide', category: 'root' },\n    'page-framework': { file: 'page-framework.md', title: 'Page Framework', category: 'root' },\n    'page-inventory': { file: 'page-inventory.md', title: 'Page Inventory', category: 'root' },\n    'project-plan': { file: 'project-plan.md', title: 'Project Plan', category: 'root' },\n    'qa-testing': { file: 'qa-testing.md', title: 'QA Testing', category: 'root' },\n    'requirements': { file: 'requirements.md', title: 'Requirements', category: 'root' },\n    'solution-architecture': { file: 'solution-architecture.md', title: 'Solution Architecture', category: 'root' },\n    'ui-styling-requirements': { file: 'UI_STYLING_REQUIREMENTS.md', title: 'UI Styling Requirements', category: 'root' },\n    'who-cors-workaround': { file: 'WHO_CORS_WORKAROUND.md', title: 'WHO CORS Workaround', category: 'root' },\n    'workflows-overview': { file: 'workflows/README.md', title: 'Workflows Overview', category: 'workflows' }\n  };\n\n  return files;\n};\n\nconst docFiles = generateDocFiles();\n\nconst DocumentationViewer = () => {\n  const { docId } = useParams();\n  const navigate = useNavigate();\n  const [content, setContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadDocumentation = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const docInfo = docFiles[docId] || docFiles['overview'];\n\n        // For HTML files, open in a new tab to avoid navigation conflicts\n        if (docInfo.isHtml) {\n          // Check if file exists first\n          try {\n            const checkResponse = await fetch(`${process.env.PUBLIC_URL}/docs/${docInfo.file}`, { method: 'HEAD' });\n            if (checkResponse.ok) {\n              // File exists, open in new tab to avoid server conflicts\n              window.open(`${process.env.PUBLIC_URL}/docs/${docInfo.file}`, '_blank');\n              // Show message in current tab\n              setContent(`# ${docInfo.title}\\n\\nThe QA report has been opened in a new tab.\\n\\nIf it didn't open automatically, you can access it here: [${docInfo.file}](${process.env.PUBLIC_URL}/docs/${docInfo.file})`);\n              setLoading(false);\n              return;\n            } else {\n              // File doesn't exist, show helpful message\n              setContent(`# ${docInfo.title}\\n\\nThe QA report is generated during deployment and is available on the live site at: [${docInfo.file}](/docs/${docInfo.file})\\n\\nIf you're viewing this locally, the report will be available after the next deployment to GitHub Pages.`);\n              setLoading(false);\n              return;\n            }\n          } catch (htmlCheckError) {\n            // If check fails, show helpful message\n            setContent(`# ${docInfo.title}\\n\\nThe QA report is generated during deployment and is available on the live site.\\n\\nIf you're viewing this locally, the report will be available after the next deployment to GitHub Pages.`);\n            setLoading(false);\n            return;\n          }\n        }\n\n        // Fetch the markdown file from the docs folder\n        const response = await fetch(`${process.env.PUBLIC_URL}/docs/${docInfo.file}`);\n        \n        if (!response.ok) {\n          throw new Error(`Failed to load documentation: ${response.status}`);\n        }\n\n        const text = await response.text();\n        setContent(text);\n      } catch (err) {\n        console.error('Error loading documentation:', err);\n        setError('Failed to load documentation. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadDocumentation();\n  }, [docId]);\n\n  const renderMarkdown = (markdown) => {\n    // Simple markdown to HTML conversion for basic formatting\n    // First sanitize the input markdown to prevent XSS in the source\n    const safeMd = sanitizeHtml(markdown);\n    let html = safeMd;\n\n    // Process tables first (before paragraph processing)\n    html = html.replace(/(\\|[^\\n]+\\|\\n\\|[-\\s|:]+\\|\\n(?:\\|[^\\n]+\\|\\n?)*)/gm, (match) => {\n      const lines = match.trim().split('\\n');\n      const headers = lines[0].split('|').slice(1, -1).map(h => h.trim());\n      const rows = lines.slice(2).map(row => row.split('|').slice(1, -1).map(cell => cell.trim()));\n      \n      let tableHtml = '<table class=\"doc-table\">\\n<thead>\\n<tr>\\n';\n      headers.forEach(header => {\n        tableHtml += `<th>${sanitizeHtml(header)}</th>\\n`;\n      });\n      tableHtml += '</tr>\\n</thead>\\n<tbody>\\n';\n      \n      rows.forEach(row => {\n        tableHtml += '<tr>\\n';\n        row.forEach(cell => {\n          tableHtml += `<td>${sanitizeHtml(cell)}</td>\\n`;\n        });\n        tableHtml += '</tr>\\n';\n      });\n      \n      tableHtml += '</tbody>\\n</table>\\n';\n      return tableHtml;\n    });\n\n    // Apply other markdown formatting with safe replacements\n    return html\n      .replace(/^# (.*$)/gim, (match, p1) => `<h1>${sanitizeHtml(p1)}</h1>`)\n      .replace(/^## (.*$)/gim, (match, p1) => `<h2>${sanitizeHtml(p1)}</h2>`)\n      .replace(/^### (.*$)/gim, (match, p1) => `<h3>${sanitizeHtml(p1)}</h3>`)\n      .replace(/^#### (.*$)/gim, (match, p1) => `<h4>${sanitizeHtml(p1)}</h4>`)\n      .replace(/\\*\\*(.*)\\*\\*/gim, (match, p1) => `<strong>${sanitizeHtml(p1)}</strong>`)\n      .replace(/\\*(.*)\\*/gim, (match, p1) => `<em>${sanitizeHtml(p1)}</em>`)\n      .replace(/!\\[([^\\]]*)\\]\\(([^)]*)\\)/gim, (match, p1, p2) => `<img alt=\"${sanitizeHtml(p1)}\" src=\"${sanitizeHtml(p2)}\" />`)\n      .replace(/\\[([^\\]]*)\\]\\(([^)]*)\\)/gim, (match, p1, p2) => `<a href=\"${sanitizeHtml(p2)}\" target=\"_blank\" rel=\"noopener noreferrer\">${sanitizeHtml(p1)}</a>`)\n      .replace(/`([^`]*)`/gim, (match, p1) => `<code>${sanitizeHtml(p1)}</code>`)\n      .replace(/^- (.*$)/gim, (match, p1) => `<li>${sanitizeHtml(p1)}</li>`)\n      .replace(/^(\\d+)\\. (.*$)/gim, (match, p1, p2) => `<li>${sanitizeHtml(p2)}</li>`)\n      .replace(/\\n\\n/gim, '</p><p>')\n      .replace(/^\\n/gim, '<p>')\n      .replace(/\\n$/gim, '</p>');\n  };\n\n  if (loading) {\n    return (\n      <PageLayout pageName=\"documentation-viewer\">\n        <div className=\"documentation-viewer\">\n          <div className=\"doc-content\">\n            <div className=\"loading\">\n              <div className=\"spinner\"></div>\n              <p>Loading documentation...</p>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <PageLayout pageName=\"documentation-viewer\">\n        <div className=\"documentation-viewer\">\n          <div className=\"doc-content\">\n            <div className=\"error-state\">\n              <h2>Error</h2>\n              <p>{error}</p>\n              <button onClick={() => window.location.reload()} className=\"retry-btn\">\n                Try Again\n              </button>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout pageName=\"documentation-viewer\">\n      <div className=\"documentation-viewer\">\n        <div className=\"doc-content\">\n        <div className=\"doc-sidebar\">\n          <h3>Documentation</h3>\n          <nav className=\"doc-menu\">\n            {(() => {\n              // Group files by category\n              const grouped = {};\n              Object.entries(docFiles).forEach(([key, doc]) => {\n                if (!grouped[doc.category]) {\n                  grouped[doc.category] = [];\n                }\n                grouped[doc.category].push({ key, ...doc });\n              });\n\n              // Sort within each category\n              Object.keys(grouped).forEach(category => {\n                grouped[category].sort((a, b) => a.title.localeCompare(b.title));\n              });\n\n              // Render sections\n              return Object.entries(grouped)\n                .sort(([a], [b]) => a === 'root' ? -1 : b === 'root' ? 1 : a.localeCompare(b))\n                .map(([category, items]) => (\n                  <div key={category} className=\"doc-category\">\n                    {category !== 'root' && (\n                      <div className=\"doc-category-header\">\n                        {category.charAt(0).toUpperCase() + category.slice(1)}\n                      </div>\n                    )}\n                    {items.map(({ key, title }) => (\n                      <button\n                        key={key}\n                        className={`doc-menu-item ${docId === key ? 'active' : ''} ${category !== 'root' ? 'doc-menu-item-nested' : ''}`}\n                        onClick={() => navigate(`/docs/${key}`)}\n                      >\n                        {title}\n                      </button>\n                    ))}\n                  </div>\n                ));\n            })()}\n          </nav>\n        </div>\n\n        <div className=\"doc-main\">\n          <article \n            className=\"doc-article\"\n            dangerouslySetInnerHTML={{ \n              __html: renderMarkdown(content)\n            }}\n          />\n        </div>\n      </div>\n      \n      </div>\n    </PageLayout>\n  );\n};\n\nexport default DocumentationViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}