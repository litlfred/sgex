{"ast":null,"code":"import _objectSpread from \"/home/runner/work/sgex/sgex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { getBusinessObject, is } from '../../util/ModelUtil';\nimport { isEventSubProcess, isExpanded } from '../../util/DiUtil';\nimport { isDifferentType } from './util/TypeUtil';\nimport { forEach, filter, isArray } from 'min-dash';\nimport * as replaceOptions from '../replace/ReplaceOptions';\nimport { canBeNonInterrupting, getInterruptingProperty } from '../modeling/behavior/util/NonInterruptingUtil';\nimport Icons from './util/Icons';\n\n/**\n * @typedef {import('../modeling/BpmnFactory').default} BpmnFactory\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenu').default} PopupMenu\n * @typedef {import('../modeling/Modeling').default} Modeling\n * @typedef {import('../replace/BpmnReplace').default} BpmnReplace\n * @typedef {import('diagram-js/lib/features/Rules').default} Rules\n * @typedef {import('diagram-js/lib/i18n/translate/translate').default} Translate\n * @typedef {import('../copy-paste/ModdleCopy').default} ModdleCopy\n *\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('../../model/Types').Moddle} Moddle\n *\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').PopupMenuEntries} PopupMenuEntries\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').PopupMenuEntry} PopupMenuEntry\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').PopupMenuEntryAction} PopupMenuEntryAction\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').PopupMenuHeaderEntries} PopupMenuHeaderEntries\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').default} PopupMenuProvider\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenu').PopupMenuTarget} PopupMenuTarget\n *\n * @typedef {import('./ReplaceOptions').ReplaceOption} ReplaceOption\n */\n\n/**\n * A BPMN-specific popup menu provider.\n *\n * @implements {PopupMenuProvider}\n *\n * @param {BpmnFactory} bpmnFactory\n * @param {PopupMenu} popupMenu\n * @param {Modeling} modeling\n * @param {Moddle} moddle\n * @param {BpmnReplace} bpmnReplace\n * @param {Rules} rules\n * @param {Translate} translate\n * @param {ModdleCopy} moddleCopy\n */\nexport default function ReplaceMenuProvider(bpmnFactory, popupMenu, modeling, moddle, bpmnReplace, rules, translate, moddleCopy) {\n  this._bpmnFactory = bpmnFactory;\n  this._popupMenu = popupMenu;\n  this._modeling = modeling;\n  this._moddle = moddle;\n  this._bpmnReplace = bpmnReplace;\n  this._rules = rules;\n  this._translate = translate;\n  this._moddleCopy = moddleCopy;\n  this._register();\n}\nReplaceMenuProvider.$inject = ['bpmnFactory', 'popupMenu', 'modeling', 'moddle', 'bpmnReplace', 'rules', 'translate', 'moddleCopy'];\nReplaceMenuProvider.prototype._register = function () {\n  this._popupMenu.registerProvider('bpmn-replace', this);\n};\n\n/**\n * @param {PopupMenuTarget} target\n *\n * @return {PopupMenuEntries}\n */\nReplaceMenuProvider.prototype.getPopupMenuEntries = function (target) {\n  var businessObject = target.businessObject;\n  var rules = this._rules;\n  var sameTypeEventOptions = [],\n    eventDefinitionType;\n  var filteredReplaceOptions = [];\n  if (isArray(target) || !rules.allowed('shape.replace', {\n    element: target\n  })) {\n    return {};\n  }\n  var differentType = isDifferentType(target);\n  if (is(businessObject, 'bpmn:DataObjectReference')) {\n    return this._createEntries(target, replaceOptions.DATA_OBJECT_REFERENCE);\n  }\n  if (is(businessObject, 'bpmn:DataStoreReference') && !is(target.parent, 'bpmn:Collaboration')) {\n    return this._createEntries(target, replaceOptions.DATA_STORE_REFERENCE);\n  }\n\n  // typed start, intermediate, and end events\n  if (is(businessObject, 'bpmn:Event') && !is(businessObject, 'bpmn:BoundaryEvent')) {\n    var _businessObject$get$;\n    eventDefinitionType = (_businessObject$get$ = businessObject.get('eventDefinitions')[0]) === null || _businessObject$get$ === void 0 ? void 0 : _businessObject$get$.$type;\n    sameTypeEventOptions = replaceOptions.TYPED_EVENT[eventDefinitionType] || [];\n    if (!isEventSubProcess(businessObject.$parent) && is(businessObject.$parent, 'bpmn:SubProcess')) {\n      sameTypeEventOptions = filter(sameTypeEventOptions, function (option) {\n        return option.target.type !== 'bpmn:StartEvent';\n      });\n    }\n  }\n\n  // start events outside sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && !is(businessObject.$parent, 'bpmn:SubProcess')) {\n    filteredReplaceOptions = filter(replaceOptions.START_EVENT.concat(sameTypeEventOptions), differentType);\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // expanded/collapsed pools\n  if (is(businessObject, 'bpmn:Participant')) {\n    filteredReplaceOptions = filter(replaceOptions.PARTICIPANT, function (replaceOption) {\n      return isExpanded(target) !== replaceOption.target.isExpanded;\n    });\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // start events inside event sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && isEventSubProcess(businessObject.$parent)) {\n    filteredReplaceOptions = filter(replaceOptions.EVENT_SUB_PROCESS_START_EVENT.concat(sameTypeEventOptions), function (replaceOption) {\n      var target = replaceOption.target;\n      var isInterrupting = target.isInterrupting !== false;\n      var isInterruptingEqual = businessObject.isInterrupting === isInterrupting;\n\n      // filters elements which types and event definition are equal but have have different interrupting types\n      return differentType(replaceOption) || !differentType(replaceOption) && !isInterruptingEqual;\n    });\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // start events inside sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && !isEventSubProcess(businessObject.$parent) && is(businessObject.$parent, 'bpmn:SubProcess')) {\n    filteredReplaceOptions = filter(replaceOptions.START_EVENT_SUB_PROCESS.concat(sameTypeEventOptions), differentType);\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // end events\n  if (is(businessObject, 'bpmn:EndEvent')) {\n    filteredReplaceOptions = filter(replaceOptions.END_EVENT.concat(sameTypeEventOptions), function (replaceOption) {\n      var target = replaceOption.target;\n\n      // hide cancel end events outside transactions\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' && !is(businessObject.$parent, 'bpmn:Transaction')) {\n        return false;\n      }\n      return differentType(replaceOption);\n    });\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // boundary events\n  if (is(businessObject, 'bpmn:BoundaryEvent')) {\n    filteredReplaceOptions = filter(replaceOptions.BOUNDARY_EVENT, function (replaceOption) {\n      var target = replaceOption.target;\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' && !is(businessObject.attachedToRef, 'bpmn:Transaction')) {\n        return false;\n      }\n      var cancelActivity = target.cancelActivity !== false;\n      var isCancelActivityEqual = businessObject.cancelActivity == cancelActivity;\n      return differentType(replaceOption) || !differentType(replaceOption) && !isCancelActivityEqual;\n    });\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // intermediate events\n  if (is(businessObject, 'bpmn:IntermediateCatchEvent') || is(businessObject, 'bpmn:IntermediateThrowEvent')) {\n    filteredReplaceOptions = filter(replaceOptions.INTERMEDIATE_EVENT.concat(sameTypeEventOptions), differentType);\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // gateways\n  if (is(businessObject, 'bpmn:Gateway')) {\n    filteredReplaceOptions = filter(replaceOptions.GATEWAY, differentType);\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // transactions\n  if (is(businessObject, 'bpmn:Transaction')) {\n    filteredReplaceOptions = filter(replaceOptions.TRANSACTION, differentType);\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // expanded event sub processes\n  if (isEventSubProcess(businessObject) && isExpanded(target)) {\n    filteredReplaceOptions = filter(replaceOptions.EVENT_SUB_PROCESS, differentType);\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // expanded ad hoc sub processes\n  if (is(businessObject, 'bpmn:AdHocSubProcess') && isExpanded(target)) {\n    filteredReplaceOptions = filter(replaceOptions.AD_HOC_SUBPROCESS_EXPANDED, differentType);\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // expanded sub processes\n  if (is(businessObject, 'bpmn:SubProcess') && isExpanded(target)) {\n    filteredReplaceOptions = filter(replaceOptions.SUBPROCESS_EXPANDED, differentType);\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // collapsed sub process or collapsed ad hoc sub process\n  if (is(businessObject, 'bpmn:SubProcess') && !isExpanded(target)) {\n    filteredReplaceOptions = filter(replaceOptions.TASK, function (replaceOption) {\n      var isTargetSameType = replaceOption.target.type === target.type;\n      var isTargetExpanded = replaceOption.target.isExpanded === true;\n\n      // Collapsed subprocess cannot be replaced with itself or expanded subprocess of different type.\n      return isTargetSameType === isTargetExpanded;\n    });\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // sequence flows\n  if (is(businessObject, 'bpmn:SequenceFlow')) {\n    return this._createSequenceFlowEntries(target, replaceOptions.SEQUENCE_FLOW);\n  }\n\n  // flow nodes\n  if (is(businessObject, 'bpmn:FlowNode')) {\n    filteredReplaceOptions = filter(replaceOptions.TASK, differentType);\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n  return {};\n};\n\n/**\n * @param {PopupMenuTarget} target\n *\n * @return {PopupMenuHeaderEntries}\n */\nReplaceMenuProvider.prototype.getPopupMenuHeaderEntries = function (target) {\n  var headerEntries = {};\n  if (is(target, 'bpmn:Activity') && !isEventSubProcess(target)) {\n    headerEntries = _objectSpread(_objectSpread({}, headerEntries), this._getLoopCharacteristicsHeaderEntries(target));\n  }\n  if (is(target, 'bpmn:DataObjectReference')) {\n    headerEntries = _objectSpread(_objectSpread({}, headerEntries), this._getCollectionHeaderEntries(target));\n  }\n  if (is(target, 'bpmn:Participant')) {\n    headerEntries = _objectSpread(_objectSpread({}, headerEntries), this._getParticipantMultiplicityHeaderEntries(target));\n  }\n  if (canBeNonInterrupting(target)) {\n    headerEntries = _objectSpread(_objectSpread({}, headerEntries), this._getNonInterruptingHeaderEntries(target));\n  }\n  return headerEntries;\n};\n\n/**\n * Create popup menu entries for the given target.\n *\n * @param  {PopupMenuTarget} target\n * @param  {ReplaceOption[]} replaceOptions\n *\n * @return {PopupMenuEntries}\n */\nReplaceMenuProvider.prototype._createEntries = function (target, replaceOptions) {\n  var entries = {};\n  var self = this;\n  forEach(replaceOptions, function (replaceOption) {\n    entries[replaceOption.actionName] = self._createEntry(replaceOption, target);\n  });\n  return entries;\n};\n\n/**\n * Creates popup menu entries for the given sequence flow.\n *\n * @param  {PopupMenuTarget} target\n * @param  {ReplaceOption[]} replaceOptions\n *\n * @return {PopupMenuEntries}\n */\nReplaceMenuProvider.prototype._createSequenceFlowEntries = function (target, replaceOptions) {\n  var businessObject = getBusinessObject(target);\n  var entries = {};\n  var modeling = this._modeling,\n    moddle = this._moddle;\n  var self = this;\n  forEach(replaceOptions, function (replaceOption) {\n    switch (replaceOption.actionName) {\n      case 'replace-with-default-flow':\n        if (businessObject.sourceRef.default !== businessObject && (is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') || is(businessObject.sourceRef, 'bpmn:InclusiveGateway') || is(businessObject.sourceRef, 'bpmn:ComplexGateway') || is(businessObject.sourceRef, 'bpmn:Activity'))) {\n          entries = _objectSpread(_objectSpread({}, entries), {}, {\n            [replaceOption.actionName]: self._createEntry(replaceOption, target, function () {\n              modeling.updateProperties(target.source, {\n                default: businessObject\n              });\n            })\n          });\n        }\n        break;\n      case 'replace-with-conditional-flow':\n        if (!businessObject.conditionExpression && is(businessObject.sourceRef, 'bpmn:Activity')) {\n          entries = _objectSpread(_objectSpread({}, entries), {}, {\n            [replaceOption.actionName]: self._createEntry(replaceOption, target, function () {\n              var conditionExpression = moddle.create('bpmn:FormalExpression', {\n                body: ''\n              });\n              modeling.updateProperties(target, {\n                conditionExpression: conditionExpression\n              });\n            })\n          });\n        }\n        break;\n      default:\n        // conditional flow -> sequence flow\n        if (is(businessObject.sourceRef, 'bpmn:Activity') && businessObject.conditionExpression) {\n          entries = _objectSpread(_objectSpread({}, entries), {}, {\n            [replaceOption.actionName]: self._createEntry(replaceOption, target, function () {\n              modeling.updateProperties(target, {\n                conditionExpression: undefined\n              });\n            })\n          });\n        }\n\n        // default flow -> sequence flow\n        if ((is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') || is(businessObject.sourceRef, 'bpmn:InclusiveGateway') || is(businessObject.sourceRef, 'bpmn:ComplexGateway') || is(businessObject.sourceRef, 'bpmn:Activity')) && businessObject.sourceRef.default === businessObject) {\n          entries = _objectSpread(_objectSpread({}, entries), {}, {\n            [replaceOption.actionName]: self._createEntry(replaceOption, target, function () {\n              modeling.updateProperties(target.source, {\n                default: undefined\n              });\n            })\n          });\n        }\n    }\n  });\n  return entries;\n};\n\n/**\n * Create a popup menu entry for the given replace option.\n *\n * @param  {ReplaceOption} replaceOption\n * @param  {PopupMenuTarget} target\n * @param  {PopupMenuEntryAction} [action]\n *\n * @return {PopupMenuEntry}\n */\nReplaceMenuProvider.prototype._createEntry = function (replaceOption, target, action) {\n  var translate = this._translate;\n  var replaceElement = this._bpmnReplace.replaceElement;\n  var replaceAction = function () {\n    return replaceElement(target, replaceOption.target);\n  };\n  var label = replaceOption.label;\n  if (label && typeof label === 'function') {\n    label = label(target);\n  }\n  action = action || replaceAction;\n  return {\n    label: translate(label),\n    className: replaceOption.className,\n    action: action\n  };\n};\n\n/**\n * Get popup menu header entries for the loop characteristics of the given BPMN element.\n *\n * @param  {PopupMenuTarget} target\n *\n * @return {PopupMenuHeaderEntries}\n */\nReplaceMenuProvider.prototype._getLoopCharacteristicsHeaderEntries = function (target) {\n  var self = this;\n  var translate = this._translate;\n  function toggleLoopCharacteristics(event, entry) {\n    if (entry.active) {\n      self._modeling.updateProperties(target, {\n        loopCharacteristics: undefined\n      });\n      return;\n    }\n    var loopCharacteristics = target.businessObject.get('loopCharacteristics');\n    if (loopCharacteristics && is(loopCharacteristics, entry.options.loopCharacteristics)) {\n      self._modeling.updateModdleProperties(target, loopCharacteristics, {\n        isSequential: entry.options.isSequential\n      });\n    } else {\n      loopCharacteristics = self._moddle.create(entry.options.loopCharacteristics, {\n        isSequential: entry.options.isSequential\n      });\n      self._modeling.updateProperties(target, {\n        loopCharacteristics: loopCharacteristics\n      });\n    }\n  }\n  var businessObject = getBusinessObject(target),\n    loopCharacteristics = businessObject.loopCharacteristics;\n  var isSequential, isLoop, isParallel;\n  if (loopCharacteristics) {\n    isSequential = loopCharacteristics.isSequential;\n    isLoop = loopCharacteristics.isSequential === undefined;\n    isParallel = loopCharacteristics.isSequential !== undefined && !loopCharacteristics.isSequential;\n  }\n  return {\n    'toggle-parallel-mi': {\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Parallel multi-instance'),\n      active: isParallel,\n      action: toggleLoopCharacteristics,\n      options: {\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n        isSequential: false\n      }\n    },\n    'toggle-sequential-mi': {\n      className: 'bpmn-icon-sequential-mi-marker',\n      title: translate('Sequential multi-instance'),\n      active: isSequential,\n      action: toggleLoopCharacteristics,\n      options: {\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n        isSequential: true\n      }\n    },\n    'toggle-loop': {\n      className: 'bpmn-icon-loop-marker',\n      title: translate('Loop'),\n      active: isLoop,\n      action: toggleLoopCharacteristics,\n      options: {\n        loopCharacteristics: 'bpmn:StandardLoopCharacteristics'\n      }\n    }\n  };\n};\n\n/**\n * Get popup menu header entries for the collection property of the given BPMN element.\n *\n * @param  {PopupMenuTarget} target\n *\n * @return {PopupMenuHeaderEntries}\n */\nReplaceMenuProvider.prototype._getCollectionHeaderEntries = function (target) {\n  var self = this;\n  var translate = this._translate;\n  var dataObject = target.businessObject.dataObjectRef;\n  if (!dataObject) {\n    return {};\n  }\n  function toggleIsCollection(event, entry) {\n    self._modeling.updateModdleProperties(target, dataObject, {\n      isCollection: !entry.active\n    });\n  }\n  var isCollection = dataObject.isCollection;\n  return {\n    'toggle-is-collection': {\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Collection'),\n      active: isCollection,\n      action: toggleIsCollection\n    }\n  };\n};\n\n/**\n * Get popup menu header entries for the participant multiplicity property of the given BPMN element.\n *\n * @param  {PopupMenuTarget} target\n *\n * @return {PopupMenuHeaderEntries}\n */\nReplaceMenuProvider.prototype._getParticipantMultiplicityHeaderEntries = function (target) {\n  var self = this;\n  var bpmnFactory = this._bpmnFactory;\n  var translate = this._translate;\n  function toggleParticipantMultiplicity(event, entry) {\n    var isActive = entry.active;\n    var participantMultiplicity;\n    if (!isActive) {\n      participantMultiplicity = bpmnFactory.create('bpmn:ParticipantMultiplicity');\n    }\n    self._modeling.updateProperties(target, {\n      participantMultiplicity: participantMultiplicity\n    });\n  }\n  var participantMultiplicity = target.businessObject.participantMultiplicity;\n  return {\n    'toggle-participant-multiplicity': {\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Participant multiplicity'),\n      active: !!participantMultiplicity,\n      action: toggleParticipantMultiplicity\n    }\n  };\n};\nReplaceMenuProvider.prototype._getNonInterruptingHeaderEntries = function (element) {\n  const translate = this._translate;\n  const businessObject = getBusinessObject(element);\n  const self = this;\n  const interruptingProperty = getInterruptingProperty(element);\n  const icon = is(element, 'bpmn:BoundaryEvent') ? Icons['intermediate-event-non-interrupting'] : Icons['start-event-non-interrupting'];\n  const isNonInterrupting = !businessObject[interruptingProperty];\n  return {\n    'toggle-non-interrupting': {\n      imageHtml: icon,\n      title: translate('Toggle non-interrupting'),\n      active: isNonInterrupting,\n      action: function () {\n        self._modeling.updateProperties(element, {\n          [interruptingProperty]: !!isNonInterrupting\n        });\n      }\n    }\n  };\n};","map":{"version":3,"names":["getBusinessObject","is","isEventSubProcess","isExpanded","isDifferentType","forEach","filter","isArray","replaceOptions","canBeNonInterrupting","getInterruptingProperty","Icons","ReplaceMenuProvider","bpmnFactory","popupMenu","modeling","moddle","bpmnReplace","rules","translate","moddleCopy","_bpmnFactory","_popupMenu","_modeling","_moddle","_bpmnReplace","_rules","_translate","_moddleCopy","_register","$inject","prototype","registerProvider","getPopupMenuEntries","target","businessObject","sameTypeEventOptions","eventDefinitionType","filteredReplaceOptions","allowed","element","differentType","_createEntries","DATA_OBJECT_REFERENCE","parent","DATA_STORE_REFERENCE","_businessObject$get$","get","$type","TYPED_EVENT","$parent","option","type","START_EVENT","concat","PARTICIPANT","replaceOption","EVENT_SUB_PROCESS_START_EVENT","isInterrupting","isInterruptingEqual","START_EVENT_SUB_PROCESS","END_EVENT","BOUNDARY_EVENT","attachedToRef","cancelActivity","isCancelActivityEqual","INTERMEDIATE_EVENT","GATEWAY","TRANSACTION","EVENT_SUB_PROCESS","AD_HOC_SUBPROCESS_EXPANDED","SUBPROCESS_EXPANDED","TASK","isTargetSameType","isTargetExpanded","_createSequenceFlowEntries","SEQUENCE_FLOW","getPopupMenuHeaderEntries","headerEntries","_objectSpread","_getLoopCharacteristicsHeaderEntries","_getCollectionHeaderEntries","_getParticipantMultiplicityHeaderEntries","_getNonInterruptingHeaderEntries","entries","self","actionName","_createEntry","sourceRef","default","updateProperties","source","conditionExpression","create","body","undefined","action","replaceElement","replaceAction","label","className","toggleLoopCharacteristics","event","entry","active","loopCharacteristics","options","updateModdleProperties","isSequential","isLoop","isParallel","title","dataObject","dataObjectRef","toggleIsCollection","isCollection","toggleParticipantMultiplicity","isActive","participantMultiplicity","interruptingProperty","icon","isNonInterrupting","imageHtml"],"sources":["/home/runner/work/sgex/sgex/node_modules/bpmn-js/lib/features/popup-menu/ReplaceMenuProvider.js"],"sourcesContent":["import {\n  getBusinessObject,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  isEventSubProcess,\n  isExpanded\n} from '../../util/DiUtil';\n\nimport {\n  isDifferentType\n} from './util/TypeUtil';\n\nimport {\n  forEach,\n  filter,\n  isArray\n} from 'min-dash';\n\nimport * as replaceOptions from '../replace/ReplaceOptions';\nimport { canBeNonInterrupting, getInterruptingProperty } from '../modeling/behavior/util/NonInterruptingUtil';\nimport Icons from './util/Icons';\n\n/**\n * @typedef {import('../modeling/BpmnFactory').default} BpmnFactory\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenu').default} PopupMenu\n * @typedef {import('../modeling/Modeling').default} Modeling\n * @typedef {import('../replace/BpmnReplace').default} BpmnReplace\n * @typedef {import('diagram-js/lib/features/Rules').default} Rules\n * @typedef {import('diagram-js/lib/i18n/translate/translate').default} Translate\n * @typedef {import('../copy-paste/ModdleCopy').default} ModdleCopy\n *\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('../../model/Types').Moddle} Moddle\n *\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').PopupMenuEntries} PopupMenuEntries\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').PopupMenuEntry} PopupMenuEntry\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').PopupMenuEntryAction} PopupMenuEntryAction\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').PopupMenuHeaderEntries} PopupMenuHeaderEntries\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenuProvider').default} PopupMenuProvider\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenu').PopupMenuTarget} PopupMenuTarget\n *\n * @typedef {import('./ReplaceOptions').ReplaceOption} ReplaceOption\n */\n\n/**\n * A BPMN-specific popup menu provider.\n *\n * @implements {PopupMenuProvider}\n *\n * @param {BpmnFactory} bpmnFactory\n * @param {PopupMenu} popupMenu\n * @param {Modeling} modeling\n * @param {Moddle} moddle\n * @param {BpmnReplace} bpmnReplace\n * @param {Rules} rules\n * @param {Translate} translate\n * @param {ModdleCopy} moddleCopy\n */\nexport default function ReplaceMenuProvider(\n    bpmnFactory, popupMenu, modeling, moddle,\n    bpmnReplace, rules, translate, moddleCopy) {\n\n  this._bpmnFactory = bpmnFactory;\n  this._popupMenu = popupMenu;\n  this._modeling = modeling;\n  this._moddle = moddle;\n  this._bpmnReplace = bpmnReplace;\n  this._rules = rules;\n  this._translate = translate;\n  this._moddleCopy = moddleCopy;\n\n  this._register();\n}\n\nReplaceMenuProvider.$inject = [\n  'bpmnFactory',\n  'popupMenu',\n  'modeling',\n  'moddle',\n  'bpmnReplace',\n  'rules',\n  'translate',\n  'moddleCopy'\n];\n\nReplaceMenuProvider.prototype._register = function() {\n  this._popupMenu.registerProvider('bpmn-replace', this);\n};\n\n/**\n * @param {PopupMenuTarget} target\n *\n * @return {PopupMenuEntries}\n */\nReplaceMenuProvider.prototype.getPopupMenuEntries = function(target) {\n\n  var businessObject = target.businessObject;\n\n  var rules = this._rules;\n\n  var sameTypeEventOptions = [],\n      eventDefinitionType;\n\n  var filteredReplaceOptions = [];\n\n  if (isArray(target) || !rules.allowed('shape.replace', { element: target })) {\n    return {};\n  }\n\n  var differentType = isDifferentType(target);\n\n  if (is(businessObject, 'bpmn:DataObjectReference')) {\n    return this._createEntries(target, replaceOptions.DATA_OBJECT_REFERENCE);\n  }\n\n  if (is(businessObject, 'bpmn:DataStoreReference') && !is(target.parent, 'bpmn:Collaboration')) {\n    return this._createEntries(target, replaceOptions.DATA_STORE_REFERENCE);\n  }\n\n  // typed start, intermediate, and end events\n  if (is(businessObject, 'bpmn:Event') && !is(businessObject, 'bpmn:BoundaryEvent')) {\n    eventDefinitionType = businessObject.get('eventDefinitions')[0]?.$type;\n\n    sameTypeEventOptions = replaceOptions.TYPED_EVENT[eventDefinitionType] || [];\n\n    if (!isEventSubProcess(businessObject.$parent) && is(businessObject.$parent, 'bpmn:SubProcess')) {\n      sameTypeEventOptions = filter(sameTypeEventOptions, function(option) {\n        return option.target.type !== 'bpmn:StartEvent';\n      });\n    }\n  }\n\n  // start events outside sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && !is(businessObject.$parent, 'bpmn:SubProcess')) {\n\n    filteredReplaceOptions = filter(\n      replaceOptions.START_EVENT.concat(sameTypeEventOptions),\n      differentType\n    );\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // expanded/collapsed pools\n  if (is(businessObject, 'bpmn:Participant')) {\n\n    filteredReplaceOptions = filter(replaceOptions.PARTICIPANT, function(replaceOption) {\n      return isExpanded(target) !== replaceOption.target.isExpanded;\n    });\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // start events inside event sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && isEventSubProcess(businessObject.$parent)) {\n    filteredReplaceOptions = filter(\n      replaceOptions.EVENT_SUB_PROCESS_START_EVENT.concat(sameTypeEventOptions), function(replaceOption) {\n\n        var target = replaceOption.target;\n\n        var isInterrupting = target.isInterrupting !== false;\n\n        var isInterruptingEqual = businessObject.isInterrupting === isInterrupting;\n\n        // filters elements which types and event definition are equal but have have different interrupting types\n        return differentType(replaceOption) || !differentType(replaceOption) && !isInterruptingEqual;\n\n      }\n    );\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // start events inside sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && !isEventSubProcess(businessObject.$parent)\n      && is(businessObject.$parent, 'bpmn:SubProcess')) {\n    filteredReplaceOptions = filter(\n      replaceOptions.START_EVENT_SUB_PROCESS.concat(sameTypeEventOptions),\n      differentType\n    );\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // end events\n  if (is(businessObject, 'bpmn:EndEvent')) {\n\n    filteredReplaceOptions = filter(replaceOptions.END_EVENT.concat(sameTypeEventOptions), function(replaceOption) {\n      var target = replaceOption.target;\n\n      // hide cancel end events outside transactions\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' && !is(businessObject.$parent, 'bpmn:Transaction')) {\n        return false;\n      }\n\n      return differentType(replaceOption);\n    });\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // boundary events\n  if (is(businessObject, 'bpmn:BoundaryEvent')) {\n\n    filteredReplaceOptions = filter(replaceOptions.BOUNDARY_EVENT, function(replaceOption) {\n\n      var target = replaceOption.target;\n\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' &&\n         !is(businessObject.attachedToRef, 'bpmn:Transaction')) {\n        return false;\n      }\n      var cancelActivity = target.cancelActivity !== false;\n\n      var isCancelActivityEqual = businessObject.cancelActivity == cancelActivity;\n\n      return differentType(replaceOption) || !differentType(replaceOption) && !isCancelActivityEqual;\n    });\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // intermediate events\n  if (is(businessObject, 'bpmn:IntermediateCatchEvent') ||\n      is(businessObject, 'bpmn:IntermediateThrowEvent')) {\n\n    filteredReplaceOptions = filter(\n      replaceOptions.INTERMEDIATE_EVENT.concat(sameTypeEventOptions),\n      differentType\n    );\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // gateways\n  if (is(businessObject, 'bpmn:Gateway')) {\n\n    filteredReplaceOptions = filter(replaceOptions.GATEWAY, differentType);\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // transactions\n  if (is(businessObject, 'bpmn:Transaction')) {\n\n    filteredReplaceOptions = filter(replaceOptions.TRANSACTION, differentType);\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // expanded event sub processes\n  if (isEventSubProcess(businessObject) && isExpanded(target)) {\n\n    filteredReplaceOptions = filter(replaceOptions.EVENT_SUB_PROCESS, differentType);\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // expanded ad hoc sub processes\n  if (is(businessObject, 'bpmn:AdHocSubProcess') && isExpanded(target)) {\n\n    filteredReplaceOptions = filter(replaceOptions.AD_HOC_SUBPROCESS_EXPANDED, differentType);\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // expanded sub processes\n  if (is(businessObject, 'bpmn:SubProcess') && isExpanded(target)) {\n\n    filteredReplaceOptions = filter(replaceOptions.SUBPROCESS_EXPANDED, differentType);\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // collapsed sub process or collapsed ad hoc sub process\n  if (is(businessObject, 'bpmn:SubProcess') && !isExpanded(target)) {\n\n    filteredReplaceOptions = filter(replaceOptions.TASK, function(replaceOption) {\n\n      var isTargetSameType = replaceOption.target.type === target.type;\n      var isTargetExpanded = replaceOption.target.isExpanded === true;\n\n      // Collapsed subprocess cannot be replaced with itself or expanded subprocess of different type.\n      return isTargetSameType === isTargetExpanded;\n    });\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  // sequence flows\n  if (is(businessObject, 'bpmn:SequenceFlow')) {\n    return this._createSequenceFlowEntries(target, replaceOptions.SEQUENCE_FLOW);\n  }\n\n  // flow nodes\n  if (is(businessObject, 'bpmn:FlowNode')) {\n    filteredReplaceOptions = filter(replaceOptions.TASK, differentType);\n\n    return this._createEntries(target, filteredReplaceOptions);\n  }\n\n  return {};\n};\n\n/**\n * @param {PopupMenuTarget} target\n *\n * @return {PopupMenuHeaderEntries}\n */\nReplaceMenuProvider.prototype.getPopupMenuHeaderEntries = function(target) {\n\n  var headerEntries = {};\n\n  if (is(target, 'bpmn:Activity') && !isEventSubProcess(target)) {\n    headerEntries = {\n      ...headerEntries,\n      ...this._getLoopCharacteristicsHeaderEntries(target)\n    };\n  }\n\n  if (is(target, 'bpmn:DataObjectReference')) {\n    headerEntries = {\n      ...headerEntries,\n      ...this._getCollectionHeaderEntries(target)\n    };\n  }\n\n  if (is(target, 'bpmn:Participant')) {\n    headerEntries = {\n      ...headerEntries,\n      ...this._getParticipantMultiplicityHeaderEntries(target)\n    };\n  }\n\n  if (canBeNonInterrupting(target)) {\n    headerEntries = {\n      ...headerEntries,\n      ...this._getNonInterruptingHeaderEntries(target)\n    };\n  }\n\n  return headerEntries;\n};\n\n\n/**\n * Create popup menu entries for the given target.\n *\n * @param  {PopupMenuTarget} target\n * @param  {ReplaceOption[]} replaceOptions\n *\n * @return {PopupMenuEntries}\n */\nReplaceMenuProvider.prototype._createEntries = function(target, replaceOptions) {\n  var entries = {};\n\n  var self = this;\n\n  forEach(replaceOptions, function(replaceOption) {\n    entries[ replaceOption.actionName ] = self._createEntry(replaceOption, target);\n  });\n\n  return entries;\n};\n\n/**\n * Creates popup menu entries for the given sequence flow.\n *\n * @param  {PopupMenuTarget} target\n * @param  {ReplaceOption[]} replaceOptions\n *\n * @return {PopupMenuEntries}\n */\nReplaceMenuProvider.prototype._createSequenceFlowEntries = function(target, replaceOptions) {\n\n  var businessObject = getBusinessObject(target);\n\n  var entries = {};\n\n  var modeling = this._modeling,\n      moddle = this._moddle;\n\n  var self = this;\n\n  forEach(replaceOptions, function(replaceOption) {\n\n    switch (replaceOption.actionName) {\n    case 'replace-with-default-flow':\n      if (businessObject.sourceRef.default !== businessObject &&\n            (is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\n             is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\n             is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\n             is(businessObject.sourceRef, 'bpmn:Activity'))) {\n\n        entries = {\n          ...entries,\n          [ replaceOption.actionName ]: self._createEntry(replaceOption, target, function() {\n            modeling.updateProperties(target.source, { default: businessObject });\n          })\n        };\n      }\n      break;\n    case 'replace-with-conditional-flow':\n      if (!businessObject.conditionExpression && is(businessObject.sourceRef, 'bpmn:Activity')) {\n\n        entries = {\n          ...entries,\n          [ replaceOption.actionName ]: self._createEntry(replaceOption, target, function() {\n            var conditionExpression = moddle.create('bpmn:FormalExpression', { body: '' });\n\n            modeling.updateProperties(target, { conditionExpression: conditionExpression });\n          })\n        };\n      }\n      break;\n    default:\n\n      // conditional flow -> sequence flow\n      if (is(businessObject.sourceRef, 'bpmn:Activity') && businessObject.conditionExpression) {\n        entries = {\n          ...entries,\n          [ replaceOption.actionName ]: self._createEntry(replaceOption, target, function() {\n            modeling.updateProperties(target, { conditionExpression: undefined });\n          })\n        };\n      }\n\n      // default flow -> sequence flow\n      if ((is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\n           is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\n           is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\n           is(businessObject.sourceRef, 'bpmn:Activity')) &&\n           businessObject.sourceRef.default === businessObject) {\n        entries = {\n          ...entries,\n          [ replaceOption.actionName ]: self._createEntry(replaceOption, target, function() {\n            modeling.updateProperties(target.source, { default: undefined });\n          })\n        };\n      }\n    }\n  });\n\n  return entries;\n};\n\n/**\n * Create a popup menu entry for the given replace option.\n *\n * @param  {ReplaceOption} replaceOption\n * @param  {PopupMenuTarget} target\n * @param  {PopupMenuEntryAction} [action]\n *\n * @return {PopupMenuEntry}\n */\nReplaceMenuProvider.prototype._createEntry = function(replaceOption, target, action) {\n  var translate = this._translate;\n  var replaceElement = this._bpmnReplace.replaceElement;\n\n  var replaceAction = function() {\n    return replaceElement(target, replaceOption.target);\n  };\n\n  var label = replaceOption.label;\n  if (label && typeof label === 'function') {\n    label = label(target);\n  }\n\n  action = action || replaceAction;\n\n  return {\n    label: translate(label),\n    className: replaceOption.className,\n    action: action\n  };\n};\n\n/**\n * Get popup menu header entries for the loop characteristics of the given BPMN element.\n *\n * @param  {PopupMenuTarget} target\n *\n * @return {PopupMenuHeaderEntries}\n */\nReplaceMenuProvider.prototype._getLoopCharacteristicsHeaderEntries = function(target) {\n\n  var self = this;\n  var translate = this._translate;\n\n  function toggleLoopCharacteristics(event, entry) {\n    if (entry.active) {\n      self._modeling.updateProperties(target, { loopCharacteristics: undefined });\n\n      return;\n    }\n\n    var loopCharacteristics = target.businessObject.get('loopCharacteristics');\n\n    if (loopCharacteristics && is(loopCharacteristics, entry.options.loopCharacteristics)) {\n      self._modeling.updateModdleProperties(target, loopCharacteristics, { isSequential: entry.options.isSequential });\n    } else {\n      loopCharacteristics = self._moddle.create(entry.options.loopCharacteristics, {\n        isSequential: entry.options.isSequential\n      });\n\n      self._modeling.updateProperties(target, { loopCharacteristics: loopCharacteristics });\n    }\n  }\n\n  var businessObject = getBusinessObject(target),\n      loopCharacteristics = businessObject.loopCharacteristics;\n\n  var isSequential,\n      isLoop,\n      isParallel;\n\n  if (loopCharacteristics) {\n    isSequential = loopCharacteristics.isSequential;\n    isLoop = loopCharacteristics.isSequential === undefined;\n    isParallel = loopCharacteristics.isSequential !== undefined && !loopCharacteristics.isSequential;\n  }\n\n\n  return {\n    'toggle-parallel-mi' : {\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Parallel multi-instance'),\n      active: isParallel,\n      action: toggleLoopCharacteristics,\n      options: {\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n        isSequential: false\n      }\n    },\n    'toggle-sequential-mi': {\n      className: 'bpmn-icon-sequential-mi-marker',\n      title: translate('Sequential multi-instance'),\n      active: isSequential,\n      action: toggleLoopCharacteristics,\n      options: {\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n        isSequential: true\n      }\n    },\n    'toggle-loop': {\n      className: 'bpmn-icon-loop-marker',\n      title: translate('Loop'),\n      active: isLoop,\n      action: toggleLoopCharacteristics,\n      options: {\n        loopCharacteristics: 'bpmn:StandardLoopCharacteristics'\n      }\n    }\n  };\n};\n\n/**\n * Get popup menu header entries for the collection property of the given BPMN element.\n *\n * @param  {PopupMenuTarget} target\n *\n * @return {PopupMenuHeaderEntries}\n */\nReplaceMenuProvider.prototype._getCollectionHeaderEntries = function(target) {\n\n  var self = this;\n  var translate = this._translate;\n\n  var dataObject = target.businessObject.dataObjectRef;\n\n  if (!dataObject) {\n    return {};\n  }\n\n  function toggleIsCollection(event, entry) {\n    self._modeling.updateModdleProperties(\n      target,\n      dataObject,\n      { isCollection: !entry.active });\n  }\n\n  var isCollection = dataObject.isCollection;\n\n  return {\n    'toggle-is-collection': {\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Collection'),\n      active: isCollection,\n      action: toggleIsCollection,\n    }\n  };\n};\n\n/**\n * Get popup menu header entries for the participant multiplicity property of the given BPMN element.\n *\n * @param  {PopupMenuTarget} target\n *\n * @return {PopupMenuHeaderEntries}\n */\nReplaceMenuProvider.prototype._getParticipantMultiplicityHeaderEntries = function(target) {\n\n  var self = this;\n  var bpmnFactory = this._bpmnFactory;\n  var translate = this._translate;\n\n  function toggleParticipantMultiplicity(event, entry) {\n    var isActive = entry.active;\n    var participantMultiplicity;\n\n    if (!isActive) {\n      participantMultiplicity = bpmnFactory.create('bpmn:ParticipantMultiplicity');\n    }\n\n    self._modeling.updateProperties(\n      target,\n      { participantMultiplicity: participantMultiplicity });\n  }\n\n  var participantMultiplicity = target.businessObject.participantMultiplicity;\n\n  return {\n    'toggle-participant-multiplicity': {\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Participant multiplicity'),\n      active: !!participantMultiplicity,\n      action: toggleParticipantMultiplicity,\n    }\n  };\n};\n\nReplaceMenuProvider.prototype._getNonInterruptingHeaderEntries = function(element) {\n  const translate = this._translate;\n  const businessObject = getBusinessObject(element);\n  const self = this;\n\n  const interruptingProperty = getInterruptingProperty(element);\n\n  const icon = is(element, 'bpmn:BoundaryEvent') ? Icons['intermediate-event-non-interrupting'] : Icons['start-event-non-interrupting'];\n\n  const isNonInterrupting = !businessObject[interruptingProperty];\n\n  return {\n    'toggle-non-interrupting': {\n      imageHtml: icon,\n      title: translate('Toggle non-interrupting'),\n      active: isNonInterrupting,\n      action: function() {\n        self._modeling.updateProperties(element, {\n          [interruptingProperty]: !!isNonInterrupting\n        });\n      }\n    }\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}