{"ast":null,"code":"import { add as collectionAdd, remove as collectionRemove } from '../../../util/Collections';\n\n/**\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A handler that implements reversible attaching/detaching of shapes.\n *\n * @param {Modeling} modeling\n */\nexport default function UpdateAttachmentHandler(modeling) {\n  this._modeling = modeling;\n}\nUpdateAttachmentHandler.$inject = ['modeling'];\nUpdateAttachmentHandler.prototype.execute = function (context) {\n  var shape = context.shape,\n    newHost = context.newHost,\n    oldHost = shape.host;\n\n  // (0) detach from old host\n  context.oldHost = oldHost;\n  context.attacherIdx = removeAttacher(oldHost, shape);\n\n  // (1) attach to new host\n  addAttacher(newHost, shape);\n\n  // (2) update host\n  shape.host = newHost;\n  return shape;\n};\nUpdateAttachmentHandler.prototype.revert = function (context) {\n  var shape = context.shape,\n    newHost = context.newHost,\n    oldHost = context.oldHost,\n    attacherIdx = context.attacherIdx;\n\n  // (2) update host\n  shape.host = oldHost;\n\n  // (1) attach to new host\n  removeAttacher(newHost, shape);\n\n  // (0) detach from old host\n  addAttacher(oldHost, shape, attacherIdx);\n  return shape;\n};\nfunction removeAttacher(host, attacher) {\n  // remove attacher from host\n  return collectionRemove(host && host.attachers, attacher);\n}\nfunction addAttacher(host, attacher, idx) {\n  if (!host) {\n    return;\n  }\n  var attachers = host.attachers;\n  if (!attachers) {\n    host.attachers = attachers = [];\n  }\n  collectionAdd(attachers, attacher, idx);\n}","map":{"version":3,"names":["add","collectionAdd","remove","collectionRemove","UpdateAttachmentHandler","modeling","_modeling","$inject","prototype","execute","context","shape","newHost","oldHost","host","attacherIdx","removeAttacher","addAttacher","revert","attacher","attachers","idx"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/modeling/cmd/UpdateAttachmentHandler.js"],"sourcesContent":["import {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../../../util/Collections';\n\n/**\n * @typedef {import('../Modeling').default} Modeling\n */\n\n/**\n * A handler that implements reversible attaching/detaching of shapes.\n *\n * @param {Modeling} modeling\n */\nexport default function UpdateAttachmentHandler(modeling) {\n  this._modeling = modeling;\n}\n\nUpdateAttachmentHandler.$inject = [ 'modeling' ];\n\n\nUpdateAttachmentHandler.prototype.execute = function(context) {\n  var shape = context.shape,\n      newHost = context.newHost,\n      oldHost = shape.host;\n\n  // (0) detach from old host\n  context.oldHost = oldHost;\n  context.attacherIdx = removeAttacher(oldHost, shape);\n\n  // (1) attach to new host\n  addAttacher(newHost, shape);\n\n  // (2) update host\n  shape.host = newHost;\n\n  return shape;\n};\n\nUpdateAttachmentHandler.prototype.revert = function(context) {\n  var shape = context.shape,\n      newHost = context.newHost,\n      oldHost = context.oldHost,\n      attacherIdx = context.attacherIdx;\n\n  // (2) update host\n  shape.host = oldHost;\n\n  // (1) attach to new host\n  removeAttacher(newHost, shape);\n\n  // (0) detach from old host\n  addAttacher(oldHost, shape, attacherIdx);\n\n  return shape;\n};\n\n\nfunction removeAttacher(host, attacher) {\n\n  // remove attacher from host\n  return collectionRemove(host && host.attachers, attacher);\n}\n\nfunction addAttacher(host, attacher, idx) {\n\n  if (!host) {\n    return;\n  }\n\n  var attachers = host.attachers;\n\n  if (!attachers) {\n    host.attachers = attachers = [];\n  }\n\n  collectionAdd(attachers, attacher, idx);\n}\n"],"mappings":"AAAA,SACEA,GAAG,IAAIC,aAAa,EACpBC,MAAM,IAAIC,gBAAgB,QACrB,2BAA2B;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,uBAAuBA,CAACC,QAAQ,EAAE;EACxD,IAAI,CAACC,SAAS,GAAGD,QAAQ;AAC3B;AAEAD,uBAAuB,CAACG,OAAO,GAAG,CAAE,UAAU,CAAE;AAGhDH,uBAAuB,CAACI,SAAS,CAACC,OAAO,GAAG,UAASC,OAAO,EAAE;EAC5D,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAAK;IACrBC,OAAO,GAAGF,OAAO,CAACE,OAAO;IACzBC,OAAO,GAAGF,KAAK,CAACG,IAAI;;EAExB;EACAJ,OAAO,CAACG,OAAO,GAAGA,OAAO;EACzBH,OAAO,CAACK,WAAW,GAAGC,cAAc,CAACH,OAAO,EAAEF,KAAK,CAAC;;EAEpD;EACAM,WAAW,CAACL,OAAO,EAAED,KAAK,CAAC;;EAE3B;EACAA,KAAK,CAACG,IAAI,GAAGF,OAAO;EAEpB,OAAOD,KAAK;AACd,CAAC;AAEDP,uBAAuB,CAACI,SAAS,CAACU,MAAM,GAAG,UAASR,OAAO,EAAE;EAC3D,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAAK;IACrBC,OAAO,GAAGF,OAAO,CAACE,OAAO;IACzBC,OAAO,GAAGH,OAAO,CAACG,OAAO;IACzBE,WAAW,GAAGL,OAAO,CAACK,WAAW;;EAErC;EACAJ,KAAK,CAACG,IAAI,GAAGD,OAAO;;EAEpB;EACAG,cAAc,CAACJ,OAAO,EAAED,KAAK,CAAC;;EAE9B;EACAM,WAAW,CAACJ,OAAO,EAAEF,KAAK,EAAEI,WAAW,CAAC;EAExC,OAAOJ,KAAK;AACd,CAAC;AAGD,SAASK,cAAcA,CAACF,IAAI,EAAEK,QAAQ,EAAE;EAEtC;EACA,OAAOhB,gBAAgB,CAACW,IAAI,IAAIA,IAAI,CAACM,SAAS,EAAED,QAAQ,CAAC;AAC3D;AAEA,SAASF,WAAWA,CAACH,IAAI,EAAEK,QAAQ,EAAEE,GAAG,EAAE;EAExC,IAAI,CAACP,IAAI,EAAE;IACT;EACF;EAEA,IAAIM,SAAS,GAAGN,IAAI,CAACM,SAAS;EAE9B,IAAI,CAACA,SAAS,EAAE;IACdN,IAAI,CAACM,SAAS,GAAGA,SAAS,GAAG,EAAE;EACjC;EAEAnB,aAAa,CAACmB,SAAS,EAAED,QAAQ,EAAEE,GAAG,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}