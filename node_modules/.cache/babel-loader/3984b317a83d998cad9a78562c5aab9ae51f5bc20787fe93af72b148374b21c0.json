{"ast":null,"code":"import { asTRBL, getMid } from '../../layout/LayoutUtil';\nimport { DEFAULT_DISTANCE } from './AutoPlaceUtil';\n\n/**\n * @typedef {import('../../core/Types').ShapeLike} Shape\n *\n * @typedef {import('../../util/Types').Point} Point\n *\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('../modeling/Modeling').default} Modeling\n */\n\nvar LOW_PRIORITY = 100;\n\n/**\n * A service that places elements connected to existing ones\n * to an appropriate position in an _automated_ fashion.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {Canvas} canvas\n */\nexport default function AutoPlace(eventBus, modeling, canvas) {\n  eventBus.on('autoPlace', LOW_PRIORITY, function (context) {\n    var shape = context.shape,\n      source = context.source;\n    return getNewShapePosition(source, shape);\n  });\n  eventBus.on('autoPlace.end', function (event) {\n    canvas.scrollToElement(event.shape);\n  });\n\n  /**\n   * Append shape to source at appropriate position.\n   *\n   * @param {Shape} source\n   * @param {Shape} shape\n   * @param {any} [hints={}]\n   *\n   * @return {Shape} appended shape\n   */\n  this.append = function (source, shape, hints) {\n    eventBus.fire('autoPlace.start', {\n      source: source,\n      shape: shape\n    });\n\n    // allow others to provide the position\n    var position = eventBus.fire('autoPlace', {\n      source: source,\n      shape: shape\n    });\n    var newShape = modeling.appendShape(source, shape, position, source.parent, hints);\n    eventBus.fire('autoPlace.end', {\n      source: source,\n      shape: newShape\n    });\n    return newShape;\n  };\n}\nAutoPlace.$inject = ['eventBus', 'modeling', 'canvas'];\n\n// helpers //////////\n\n/**\n * Find the new position for the target element to\n * connect to source.\n *\n * @param {Shape} source\n * @param {Shape} element\n * @param {Object} [hints]\n * @param {Object} [hints.defaultDistance]\n *\n * @return {Point}\n */\nfunction getNewShapePosition(source, element, hints) {\n  if (!hints) {\n    hints = {};\n  }\n  var distance = hints.defaultDistance || DEFAULT_DISTANCE;\n  var sourceMid = getMid(source),\n    sourceTrbl = asTRBL(source);\n\n  // simply put element right next to source\n  return {\n    x: sourceTrbl.right + distance + element.width / 2,\n    y: sourceMid.y\n  };\n}","map":{"version":3,"names":["asTRBL","getMid","DEFAULT_DISTANCE","LOW_PRIORITY","AutoPlace","eventBus","modeling","canvas","on","context","shape","source","getNewShapePosition","event","scrollToElement","append","hints","fire","position","newShape","appendShape","parent","$inject","element","distance","defaultDistance","sourceMid","sourceTrbl","x","right","width","y"],"sources":["/home/runner/work/sgex/sgex/node_modules/diagram-js/lib/features/auto-place/AutoPlace.js"],"sourcesContent":["import {\n  asTRBL,\n  getMid\n} from '../../layout/LayoutUtil';\n\nimport { DEFAULT_DISTANCE } from './AutoPlaceUtil';\n\n/**\n * @typedef {import('../../core/Types').ShapeLike} Shape\n *\n * @typedef {import('../../util/Types').Point} Point\n *\n * @typedef {import('../../core/Canvas').default} Canvas\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('../modeling/Modeling').default} Modeling\n */\n\nvar LOW_PRIORITY = 100;\n\n\n/**\n * A service that places elements connected to existing ones\n * to an appropriate position in an _automated_ fashion.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {Canvas} canvas\n */\nexport default function AutoPlace(eventBus, modeling, canvas) {\n\n  eventBus.on('autoPlace', LOW_PRIORITY, function(context) {\n    var shape = context.shape,\n        source = context.source;\n\n    return getNewShapePosition(source, shape);\n  });\n\n  eventBus.on('autoPlace.end', function(event) {\n    canvas.scrollToElement(event.shape);\n  });\n\n  /**\n   * Append shape to source at appropriate position.\n   *\n   * @param {Shape} source\n   * @param {Shape} shape\n   * @param {any} [hints={}]\n   *\n   * @return {Shape} appended shape\n   */\n  this.append = function(source, shape, hints) {\n\n    eventBus.fire('autoPlace.start', {\n      source: source,\n      shape: shape\n    });\n\n    // allow others to provide the position\n    var position = eventBus.fire('autoPlace', {\n      source: source,\n      shape: shape\n    });\n\n    var newShape = modeling.appendShape(source, shape, position, source.parent, hints);\n\n    eventBus.fire('autoPlace.end', {\n      source: source,\n      shape: newShape\n    });\n\n    return newShape;\n  };\n\n}\n\nAutoPlace.$inject = [\n  'eventBus',\n  'modeling',\n  'canvas'\n];\n\n// helpers //////////\n\n/**\n * Find the new position for the target element to\n * connect to source.\n *\n * @param {Shape} source\n * @param {Shape} element\n * @param {Object} [hints]\n * @param {Object} [hints.defaultDistance]\n *\n * @return {Point}\n */\nfunction getNewShapePosition(source, element, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  var distance = hints.defaultDistance || DEFAULT_DISTANCE;\n\n  var sourceMid = getMid(source),\n      sourceTrbl = asTRBL(source);\n\n  // simply put element right next to source\n  return {\n    x: sourceTrbl.right + distance + element.width / 2,\n    y: sourceMid.y\n  };\n}"],"mappings":"AAAA,SACEA,MAAM,EACNC,MAAM,QACD,yBAAyB;AAEhC,SAASC,gBAAgB,QAAQ,iBAAiB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAG,GAAG;;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,SAASA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EAE5DF,QAAQ,CAACG,EAAE,CAAC,WAAW,EAAEL,YAAY,EAAE,UAASM,OAAO,EAAE;IACvD,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAAK;MACrBC,MAAM,GAAGF,OAAO,CAACE,MAAM;IAE3B,OAAOC,mBAAmB,CAACD,MAAM,EAAED,KAAK,CAAC;EAC3C,CAAC,CAAC;EAEFL,QAAQ,CAACG,EAAE,CAAC,eAAe,EAAE,UAASK,KAAK,EAAE;IAC3CN,MAAM,CAACO,eAAe,CAACD,KAAK,CAACH,KAAK,CAAC;EACrC,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACK,MAAM,GAAG,UAASJ,MAAM,EAAED,KAAK,EAAEM,KAAK,EAAE;IAE3CX,QAAQ,CAACY,IAAI,CAAC,iBAAiB,EAAE;MAC/BN,MAAM,EAAEA,MAAM;MACdD,KAAK,EAAEA;IACT,CAAC,CAAC;;IAEF;IACA,IAAIQ,QAAQ,GAAGb,QAAQ,CAACY,IAAI,CAAC,WAAW,EAAE;MACxCN,MAAM,EAAEA,MAAM;MACdD,KAAK,EAAEA;IACT,CAAC,CAAC;IAEF,IAAIS,QAAQ,GAAGb,QAAQ,CAACc,WAAW,CAACT,MAAM,EAAED,KAAK,EAAEQ,QAAQ,EAAEP,MAAM,CAACU,MAAM,EAAEL,KAAK,CAAC;IAElFX,QAAQ,CAACY,IAAI,CAAC,eAAe,EAAE;MAC7BN,MAAM,EAAEA,MAAM;MACdD,KAAK,EAAES;IACT,CAAC,CAAC;IAEF,OAAOA,QAAQ;EACjB,CAAC;AAEH;AAEAf,SAAS,CAACkB,OAAO,GAAG,CAClB,UAAU,EACV,UAAU,EACV,QAAQ,CACT;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASV,mBAAmBA,CAACD,MAAM,EAAEY,OAAO,EAAEP,KAAK,EAAE;EACnD,IAAI,CAACA,KAAK,EAAE;IACVA,KAAK,GAAG,CAAC,CAAC;EACZ;EAEA,IAAIQ,QAAQ,GAAGR,KAAK,CAACS,eAAe,IAAIvB,gBAAgB;EAExD,IAAIwB,SAAS,GAAGzB,MAAM,CAACU,MAAM,CAAC;IAC1BgB,UAAU,GAAG3B,MAAM,CAACW,MAAM,CAAC;;EAE/B;EACA,OAAO;IACLiB,CAAC,EAAED,UAAU,CAACE,KAAK,GAAGL,QAAQ,GAAGD,OAAO,CAACO,KAAK,GAAG,CAAC;IAClDC,CAAC,EAAEL,SAAS,CAACK;EACf,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}