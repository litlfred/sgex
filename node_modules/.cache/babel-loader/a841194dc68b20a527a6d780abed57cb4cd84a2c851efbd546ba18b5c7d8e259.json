{"ast":null,"code":"function ensureImported(element, target) {\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n\n      // ignore\n    }\n  }\n  return element;\n}\n\n/**\n * appendTo utility\n */\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the appended node\n */\nfunction appendTo(element, target) {\n  return target.appendChild(ensureImported(element, target));\n}\n\n/**\n * append utility\n */\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\nfunction append(target, node) {\n  appendTo(node, target);\n  return target;\n}\n\n/**\n * attribute accessor utility\n */\n\nvar LENGTH_ATTR = 2;\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  var type = CSS_PROPERTIES[hyphenated];\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\nfunction setAttributes(node, attrs) {\n  var names = Object.keys(attrs),\n    i,\n    name;\n  for (i = 0, name; name = names[i]; i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n  return node;\n}\n\n/**\r\n * Taken from https://github.com/component/classes\r\n *\r\n * Without the component bits.\r\n */\n\n/**\r\n * toString reference.\r\n */\n\nconst toString = Object.prototype.toString;\n\n/**\r\n  * Wrap `el` in a `ClassList`.\r\n  *\r\n  * @param {Element} el\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nfunction classes(el) {\n  return new ClassList(el);\n}\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\r\n  * Add class `name` if not already present.\r\n  *\r\n  * @param {String} name\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nClassList.prototype.add = function (name) {\n  this.list.add(name);\n  return this;\n};\n\n/**\r\n  * Remove class `name` when present, or\r\n  * pass a regular expression to remove\r\n  * any which match.\r\n  *\r\n  * @param {String|RegExp} name\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n  this.list.remove(name);\n  return this;\n};\n\n/**\r\n  * Remove all classes matching `re`.\r\n  *\r\n  * @param {RegExp} re\r\n  * @return {ClassList}\r\n  * @api private\r\n  */\n\nClassList.prototype.removeMatching = function (re) {\n  const arr = this.array();\n  for (let i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\r\n  * Toggle class `name`, can force state via `force`.\r\n  *\r\n  * For browsers that support classList, but do not support `force` yet,\r\n  * the mistake will be detected and corrected.\r\n  *\r\n  * @param {String} name\r\n  * @param {Boolean} force\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nClassList.prototype.toggle = function (name, force) {\n  if ('undefined' !== typeof force) {\n    if (force !== this.list.toggle(name, force)) {\n      this.list.toggle(name); // toggle again to correct\n    }\n  } else {\n    this.list.toggle(name);\n  }\n  return this;\n};\n\n/**\r\n  * Return an array of classes.\r\n  *\r\n  * @return {Array}\r\n  * @api public\r\n  */\n\nClassList.prototype.array = function () {\n  return Array.from(this.list);\n};\n\n/**\r\n  * Check if class `name` is present.\r\n  *\r\n  * @param {String} name\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list.contains(name);\n};\n\n/**\n * Clear utility\n */\n\n/**\n * Removes all children from the given element\n *\n * @param  {SVGElement} element\n * @return {Element} the element (for chaining)\n */\nfunction clear(element) {\n  var child;\n  while (child = element.firstChild) {\n    element.removeChild(child);\n  }\n  return element;\n}\nfunction clone(element) {\n  return element.cloneNode(true);\n}\nvar ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\n/**\n * DOM parsing utility\n */\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\nfunction parse(svg) {\n  var unwrap = false;\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n    unwrap = true;\n  }\n  var parsed = parseDocument(svg);\n  if (!unwrap) {\n    return parsed;\n  }\n  var fragment = document.createDocumentFragment();\n  var parent = parsed.firstChild;\n  while (parent.firstChild) {\n    fragment.appendChild(parent.firstChild);\n  }\n  return fragment;\n}\nfunction parseDocument(svg) {\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n  return parser.parseFromString(svg, 'text/xml');\n}\n\n/**\n * Create utility for SVG elements\n */\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\nfunction create(name, attrs) {\n  var element;\n  name = name.trim();\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n  if (attrs) {\n    attr(element, attrs);\n  }\n  return element;\n}\n\n/**\n * Events handling utility\n */\n\nfunction on(node, event, listener, useCapture) {\n  node.addEventListener(event, listener, useCapture);\n}\nfunction off(node, event, listener, useCapture) {\n  node.removeEventListener(event, listener, useCapture);\n}\n\n/**\n * Geometry helpers\n */\n\n// fake node used to instantiate svg geometry elements\nvar node = null;\nfunction getNode() {\n  if (node === null) {\n    node = create('svg');\n  }\n  return node;\n}\nfunction extend(object, props) {\n  var i,\n    k,\n    keys = Object.keys(props);\n  for (i = 0; k = keys[i]; i++) {\n    object[k] = props[k];\n  }\n  return object;\n}\nfunction createPoint(x, y) {\n  var point = getNode().createSVGPoint();\n  switch (arguments.length) {\n    case 0:\n      return point;\n    case 2:\n      x = {\n        x: x,\n        y: y\n      };\n      break;\n  }\n  return extend(point, x);\n}\n\n/**\n * Create matrix via args.\n *\n * @example\n *\n * createMatrix({ a: 1, b: 1 });\n * createMatrix();\n * createMatrix(1, 2, 0, 0, 30, 20);\n *\n * @return {SVGMatrix}\n */\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = getNode().createSVGMatrix();\n  switch (arguments.length) {\n    case 0:\n      return matrix;\n    case 1:\n      return extend(matrix, a);\n    case 6:\n      return extend(matrix, {\n        a: a,\n        b: b,\n        c: c,\n        d: d,\n        e: e,\n        f: f\n      });\n  }\n}\nfunction createTransform(matrix) {\n  if (matrix) {\n    return getNode().createSVGTransformFromMatrix(matrix);\n  } else {\n    return getNode().createSVGTransform();\n  }\n}\n\n/**\n * Serialization util\n */\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([&<>\\n\\r\"]{1})/g;\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '\\''\n};\nfunction escape(str, pattern) {\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n  return str.replace(pattern, replaceFn);\n}\nfunction serialize(node, output) {\n  var i, len, attrMap, attrNode, childNodes;\n  switch (node.nodeType) {\n    // TEXT\n    case 3:\n      // replace special XML characters\n      output.push(escape(node.textContent, TEXT_ENTITIES));\n      break;\n\n    // ELEMENT\n    case 1:\n      output.push('<', node.tagName);\n      if (node.hasAttributes()) {\n        attrMap = node.attributes;\n        for (i = 0, len = attrMap.length; i < len; ++i) {\n          attrNode = attrMap.item(i);\n          output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n        }\n      }\n      if (node.hasChildNodes()) {\n        output.push('>');\n        childNodes = node.childNodes;\n        for (i = 0, len = childNodes.length; i < len; ++i) {\n          serialize(childNodes.item(i), output);\n        }\n        output.push('</', node.tagName, '>');\n      } else {\n        output.push('/>');\n      }\n      break;\n\n    // COMMENT\n    case 8:\n      output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n      break;\n\n    // CDATA\n    case 4:\n      output.push('<![CDATA[', node.nodeValue, ']]>');\n      break;\n    default:\n      throw new Error('unable to handle node ' + node.nodeType);\n  }\n  return output;\n}\n\n/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\nfunction set(element, svg) {\n  var parsed = parse(svg);\n\n  // clear element contents\n  clear(element);\n  if (!svg) {\n    return;\n  }\n  if (!isFragment(parsed)) {\n    // extract <svg> from parsed document\n    parsed = parsed.documentElement;\n  }\n  var nodes = slice(parsed.childNodes);\n\n  // import + append each node\n  for (var i = 0; i < nodes.length; i++) {\n    appendTo(nodes[i], element);\n  }\n}\nfunction get(element) {\n  var child = element.firstChild,\n    output = [];\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n  return output.join('');\n}\nfunction isFragment(node) {\n  return node.nodeName === '#document-fragment';\n}\nfunction innerSVG(element, svg) {\n  if (svg !== undefined) {\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n    return element;\n  } else {\n    return get(element);\n  }\n}\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\n/**\n * Selection utilities\n */\n\nfunction select(node, selector) {\n  return node.querySelector(selector);\n}\nfunction selectAll(node, selector) {\n  var nodes = node.querySelectorAll(selector);\n  return [].map.call(nodes, function (element) {\n    return element;\n  });\n}\n\n/**\n * prependTo utility\n */\n\n/**\n * Prepend a node to a target element and return the prepended node.\n *\n * @param  {SVGElement} node\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the prepended node\n */\nfunction prependTo(node, target) {\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\n}\n\n/**\n * prepend utility\n */\n\n/**\n * Prepend a node to a target element\n *\n * @param  {SVGElement} target\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the target element\n */\nfunction prepend(target, node) {\n  prependTo(node, target);\n  return target;\n}\nfunction remove(element) {\n  var parent = element.parentNode;\n  if (parent) {\n    parent.removeChild(element);\n  }\n  return element;\n}\n\n/**\n * Replace utility\n */\n\nfunction replace(element, replacement) {\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\n  return replacement;\n}\n\n/**\n * transform accessor utility\n */\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  }\n  return transform;\n}\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n  transformList.clear();\n  for (i = 0; t = transforms[i]; i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n}\n\n/**\n * Get or set the transforms on the given node.\n *\n * @param {SVGElement} node\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\n *\n * @return {SVGTransform} the consolidated transform\n */\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n  if (transforms) {\n    if (!Array.isArray(transforms)) {\n      transforms = [transforms];\n    }\n    setTransforms(transformList, transforms);\n  }\n  return transformList.consolidate();\n}\nexport { append, appendTo, attr, classes, clear, clone, create, createMatrix, createPoint, createTransform, innerSVG, off, on, prepend, prependTo, remove, replace, select, selectAll, transform };","map":{"version":3,"names":["ensureImported","element","target","ownerDocument","importNode","e","appendTo","appendChild","append","node","LENGTH_ATTR","CSS_PROPERTIES","getAttribute","name","style","getAttributeNS","setAttribute","value","hyphenated","replace","toLowerCase","type","String","setAttributeNS","setAttributes","attrs","names","Object","keys","i","attr","undefined","toString","prototype","classes","el","ClassList","nodeType","Error","list","classList","add","remove","call","removeMatching","re","arr","array","length","test","toggle","force","Array","from","has","contains","clear","child","firstChild","removeChild","clone","cloneNode","ns","svg","SVG_START","parse","unwrap","substring","indexOf","parsed","parseDocument","fragment","document","createDocumentFragment","parent","parser","DOMParser","async","parseFromString","create","trim","charAt","createElementNS","on","event","listener","useCapture","addEventListener","off","removeEventListener","getNode","extend","object","props","k","createPoint","x","y","point","createSVGPoint","arguments","createMatrix","a","b","c","d","f","matrix","createSVGMatrix","createTransform","createSVGTransformFromMatrix","createSVGTransform","TEXT_ENTITIES","ATTR_ENTITIES","ENTITY_REPLACEMENT","escape","str","pattern","replaceFn","match","entity","serialize","output","len","attrMap","attrNode","childNodes","push","textContent","tagName","hasAttributes","attributes","item","hasChildNodes","nodeValue","set","isFragment","documentElement","nodes","slice","get","nextSibling","join","nodeName","innerSVG","message","select","selector","querySelector","selectAll","querySelectorAll","map","prependTo","insertBefore","prepend","parentNode","replacement","replaceChild","wrapMatrix","transformList","transform","SVGMatrix","setTransforms","transforms","t","appendItem","baseVal","isArray","consolidate"],"sources":["/home/runner/work/sgex/sgex/node_modules/tiny-svg/dist/index.esm.js"],"sourcesContent":["function ensureImported(element, target) {\n\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n\n      // ignore\n    }\n  }\n\n  return element;\n}\n\n/**\n * appendTo utility\n */\n\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the appended node\n */\nfunction appendTo(element, target) {\n  return target.appendChild(ensureImported(element, target));\n}\n\n/**\n * append utility\n */\n\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\nfunction append(target, node) {\n  appendTo(node, target);\n  return target;\n}\n\n/**\n * attribute accessor utility\n */\n\nvar LENGTH_ATTR = 2;\n\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\n\n\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\n\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n  var type = CSS_PROPERTIES[hyphenated];\n\n  if (type) {\n\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\n\nfunction setAttributes(node, attrs) {\n\n  var names = Object.keys(attrs), i, name;\n\n  for (i = 0, name; (name = names[i]); i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n\n  return node;\n}\n\n/**\r\n * Taken from https://github.com/component/classes\r\n *\r\n * Without the component bits.\r\n */\r\n\r\n/**\r\n * toString reference.\r\n */\r\n\r\nconst toString = Object.prototype.toString;\r\n\r\n/**\r\n  * Wrap `el` in a `ClassList`.\r\n  *\r\n  * @param {Element} el\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n  * Add class `name` if not already present.\r\n  *\r\n  * @param {String} name\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\r\n\r\nClassList.prototype.add = function(name) {\r\n  this.list.add(name);\r\n  return this;\r\n};\r\n\r\n/**\r\n  * Remove class `name` when present, or\r\n  * pass a regular expression to remove\r\n  * any which match.\r\n  *\r\n  * @param {String|RegExp} name\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\r\n\r\nClassList.prototype.remove = function(name) {\r\n  if ('[object RegExp]' == toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  this.list.remove(name);\r\n  return this;\r\n};\r\n\r\n/**\r\n  * Remove all classes matching `re`.\r\n  *\r\n  * @param {RegExp} re\r\n  * @return {ClassList}\r\n  * @api private\r\n  */\r\n\r\nClassList.prototype.removeMatching = function(re) {\r\n  const arr = this.array();\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n  * Toggle class `name`, can force state via `force`.\r\n  *\r\n  * For browsers that support classList, but do not support `force` yet,\r\n  * the mistake will be detected and corrected.\r\n  *\r\n  * @param {String} name\r\n  * @param {Boolean} force\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\r\n\r\nClassList.prototype.toggle = function(name, force) {\r\n  if ('undefined' !== typeof force) {\r\n    if (force !== this.list.toggle(name, force)) {\r\n      this.list.toggle(name); // toggle again to correct\r\n    }\r\n  } else {\r\n    this.list.toggle(name);\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n  * Return an array of classes.\r\n  *\r\n  * @return {Array}\r\n  * @api public\r\n  */\r\n\r\nClassList.prototype.array = function() {\r\n  return Array.from(this.list);\r\n};\r\n\r\n/**\r\n  * Check if class `name` is present.\r\n  *\r\n  * @param {String} name\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\r\n\r\nClassList.prototype.has =\r\n ClassList.prototype.contains = function(name) {\r\n   return this.list.contains(name);\r\n };\n\n/**\n * Clear utility\n */\n\n/**\n * Removes all children from the given element\n *\n * @param  {SVGElement} element\n * @return {Element} the element (for chaining)\n */\nfunction clear(element) {\n  var child;\n\n  while ((child = element.firstChild)) {\n    element.removeChild(child);\n  }\n\n  return element;\n}\n\nfunction clone(element) {\n  return element.cloneNode(true);\n}\n\nvar ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\n/**\n * DOM parsing utility\n */\n\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\n\nfunction parse(svg) {\n\n  var unwrap = false;\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n    unwrap = true;\n  }\n\n  var parsed = parseDocument(svg);\n\n  if (!unwrap) {\n    return parsed;\n  }\n\n  var fragment = document.createDocumentFragment();\n\n  var parent = parsed.firstChild;\n\n  while (parent.firstChild) {\n    fragment.appendChild(parent.firstChild);\n  }\n\n  return fragment;\n}\n\nfunction parseDocument(svg) {\n\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n\n  return parser.parseFromString(svg, 'text/xml');\n}\n\n/**\n * Create utility for SVG elements\n */\n\n\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\nfunction create(name, attrs) {\n  var element;\n\n  name = name.trim();\n\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n\n  if (attrs) {\n    attr(element, attrs);\n  }\n\n  return element;\n}\n\n/**\n * Events handling utility\n */\n\nfunction on(node, event, listener, useCapture) {\n  node.addEventListener(event, listener, useCapture);\n}\n\nfunction off(node, event, listener, useCapture) {\n  node.removeEventListener(event, listener, useCapture);\n}\n\n/**\n * Geometry helpers\n */\n\n\n// fake node used to instantiate svg geometry elements\nvar node = null;\n\nfunction getNode() {\n  if (node === null) {\n    node = create('svg');\n  }\n\n  return node;\n}\n\nfunction extend(object, props) {\n  var i, k, keys = Object.keys(props);\n\n  for (i = 0; (k = keys[i]); i++) {\n    object[k] = props[k];\n  }\n\n  return object;\n}\n\n\nfunction createPoint(x, y) {\n  var point = getNode().createSVGPoint();\n\n  switch (arguments.length) {\n  case 0:\n    return point;\n  case 2:\n    x = {\n      x: x,\n      y: y\n    };\n    break;\n  }\n\n  return extend(point, x);\n}\n\n/**\n * Create matrix via args.\n *\n * @example\n *\n * createMatrix({ a: 1, b: 1 });\n * createMatrix();\n * createMatrix(1, 2, 0, 0, 30, 20);\n *\n * @return {SVGMatrix}\n */\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = getNode().createSVGMatrix();\n\n  switch (arguments.length) {\n  case 0:\n    return matrix;\n  case 1:\n    return extend(matrix, a);\n  case 6:\n    return extend(matrix, {\n      a: a,\n      b: b,\n      c: c,\n      d: d,\n      e: e,\n      f: f\n    });\n  }\n}\n\nfunction createTransform(matrix) {\n  if (matrix) {\n    return getNode().createSVGTransformFromMatrix(matrix);\n  } else {\n    return getNode().createSVGTransform();\n  }\n}\n\n/**\n * Serialization util\n */\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([&<>\\n\\r\"]{1})/g;\n\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '\\''\n};\n\nfunction escape(str, pattern) {\n\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n\n  return str.replace(pattern, replaceFn);\n}\n\nfunction serialize(node, output) {\n\n  var i, len, attrMap, attrNode, childNodes;\n\n  switch (node.nodeType) {\n\n  // TEXT\n  case 3:\n\n    // replace special XML characters\n    output.push(escape(node.textContent, TEXT_ENTITIES));\n    break;\n\n  // ELEMENT\n  case 1:\n    output.push('<', node.tagName);\n\n    if (node.hasAttributes()) {\n      attrMap = node.attributes;\n      for (i = 0, len = attrMap.length; i < len; ++i) {\n        attrNode = attrMap.item(i);\n        output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n      }\n    }\n\n    if (node.hasChildNodes()) {\n      output.push('>');\n      childNodes = node.childNodes;\n      for (i = 0, len = childNodes.length; i < len; ++i) {\n        serialize(childNodes.item(i), output);\n      }\n      output.push('</', node.tagName, '>');\n    } else {\n      output.push('/>');\n    }\n    break;\n\n  // COMMENT\n  case 8:\n    output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n    break;\n\n  // CDATA\n  case 4:\n    output.push('<![CDATA[', node.nodeValue, ']]>');\n    break;\n\n  default:\n    throw new Error('unable to handle node ' + node.nodeType);\n  }\n\n  return output;\n}\n\n/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\n\n\nfunction set(element, svg) {\n\n  var parsed = parse(svg);\n\n  // clear element contents\n  clear(element);\n\n  if (!svg) {\n    return;\n  }\n\n  if (!isFragment(parsed)) {\n\n    // extract <svg> from parsed document\n    parsed = parsed.documentElement;\n  }\n\n  var nodes = slice(parsed.childNodes);\n\n  // import + append each node\n  for (var i = 0; i < nodes.length; i++) {\n    appendTo(nodes[i], element);\n  }\n\n}\n\nfunction get(element) {\n  var child = element.firstChild,\n      output = [];\n\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n\n  return output.join('');\n}\n\nfunction isFragment(node) {\n  return node.nodeName === '#document-fragment';\n}\n\nfunction innerSVG(element, svg) {\n\n  if (svg !== undefined) {\n\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n\n    return element;\n  } else {\n    return get(element);\n  }\n}\n\n\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\n/**\n * Selection utilities\n */\n\nfunction select(node, selector) {\n  return node.querySelector(selector);\n}\n\nfunction selectAll(node, selector) {\n  var nodes = node.querySelectorAll(selector);\n\n  return [].map.call(nodes, function(element) {\n    return element;\n  });\n}\n\n/**\n * prependTo utility\n */\n\n\n/**\n * Prepend a node to a target element and return the prepended node.\n *\n * @param  {SVGElement} node\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the prepended node\n */\nfunction prependTo(node, target) {\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\n}\n\n/**\n * prepend utility\n */\n\n\n/**\n * Prepend a node to a target element\n *\n * @param  {SVGElement} target\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the target element\n */\nfunction prepend(target, node) {\n  prependTo(node, target);\n  return target;\n}\n\nfunction remove(element) {\n  var parent = element.parentNode;\n\n  if (parent) {\n    parent.removeChild(element);\n  }\n\n  return element;\n}\n\n/**\n * Replace utility\n */\n\n\nfunction replace(element, replacement) {\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\n  return replacement;\n}\n\n/**\n * transform accessor utility\n */\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  }\n\n  return transform;\n}\n\n\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n\n  transformList.clear();\n\n  for (i = 0; (t = transforms[i]); i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n}\n\n/**\n * Get or set the transforms on the given node.\n *\n * @param {SVGElement} node\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\n *\n * @return {SVGTransform} the consolidated transform\n */\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n\n  if (transforms) {\n\n    if (!Array.isArray(transforms)) {\n      transforms = [ transforms ];\n    }\n\n    setTransforms(transformList, transforms);\n  }\n\n  return transformList.consolidate();\n}\n\nexport { append, appendTo, attr, classes, clear, clone, create, createMatrix, createPoint, createTransform, innerSVG, off, on, prepend, prependTo, remove, replace, select, selectAll, transform };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}