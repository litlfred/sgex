import { FindResourceInfoOptions, PackageInfo, PackageStats, ResourceInfo } from '../package';
import { PackageDB } from './PackageDB';
type SQLJSPackageDBInitializeOptions = {
    locateFile?: (url: string, scriptDirectory: string) => string;
};
export declare class SQLJSPackageDB implements PackageDB {
    private db;
    private insertPackageStmt;
    private insertResourceStmt;
    private findAllPackagesStmt;
    private findPackagesStmt;
    private findPackageStmt;
    private optimized;
    private initialized;
    constructor();
    initialize(options?: SQLJSPackageDBInitializeOptions): Promise<void>;
    isInitialized(): boolean;
    clear(): void;
    optimize(): void;
    savePackageInfo(info: PackageInfo): void;
    saveResourceInfo(info: ResourceInfo): void;
    findPackageInfos(name: string): PackageInfo[];
    findPackageInfo(name: string, version: string): PackageInfo | undefined;
    findResourceInfos(key: string, options?: FindResourceInfoOptions): ResourceInfo[];
    findResourceInfo(key: string, options?: FindResourceInfoOptions): ResourceInfo | undefined;
    getPackageStats(name: string, version: string): PackageStats | undefined;
    exportDB(): Promise<{
        mimeType: string;
        data: Buffer;
    }>;
}
export declare function createSQLJSPackageDB(): Promise<SQLJSPackageDB>;
export {};
