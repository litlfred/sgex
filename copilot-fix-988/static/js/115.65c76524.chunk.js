"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[115],{60115:(e,n,t)=>{t.r(n),t.d(n,{default:()=>d});var i=t(9950),a=t(10827),o=t(29946),s=t(53782),r=t(96143),l=t(44414);const c=()=>{var e,n;const t=(0,a.zy)(),c=(0,a.Zp)(),d=(0,i.useRef)(null),m=(0,i.useRef)(null),{profile:p,repository:u,branch:g,asset:h}=(0,s.N5)();console.log("BPMNViewer: Page framework data:",{profile:!!p,repository:!!u,branch:g,asset:h}),console.log("BPMNViewer: Location state (legacy):",t.state);const{component:w,selectedFile:v,selectedBranch:N}=t.state||{},b=p||(null===(e=t.state)||void 0===e?void 0:e.profile),f=u||(null===(n=t.state)||void 0===n?void 0:n.repository),y=g||N;console.log("BPMNViewer: Final computed values:",{currentProfile:!!b,currentRepository:!!f,currentBranch:y,asset:h});const B=(0,i.useMemo)(()=>h?{name:h.split("/").pop(),path:h}:v,[h,v]),[M,P]=(0,i.useState)(!0),[x,j]=(0,i.useState)("initializing"),[_,k]=(0,i.useState)(null),[V,E]=(0,i.useState)(!1),[F,C]=(0,i.useState)(!1),[L,S]=(0,i.useState)(!1);(0,i.useEffect)(()=>{(async()=>{if(f&&b)try{var e;const n=b.token&&(null===(e=f.permissions)||void 0===e?void 0:e.push);E(n||!1)}catch(_){console.warn("Could not check write permissions:",_),E(!1)}})()},[f,b]);const z=(0,i.useCallback)(async()=>{var e;if(console.log("\ud83d\ude80 BPMNViewer: loadBpmnContent called with:",{hasViewer:!!d.current,selectedFile:B,repository:f?{name:f.name,owner:f.owner}:null}),!d.current||!B||!f)return void console.warn("\u274c BPMNViewer: Missing required parameters for loadBpmnContent:",{hasViewer:!!d.current,hasSelectedFile:!!B,hasRepository:!!f});const n=(null===(e=f.owner)||void 0===e?void 0:e.login)||f.full_name.split("/")[0],t=f.name,i=y||"main";try{var a,s;let e;P(!0),k(null),j("initializing"),console.log("\ud83d\udd0d BPMNViewer: Repository and file analysis:",{repository:{name:f.name,full_name:f.full_name,owner:f.owner,isDemo:f.isDemo,default_branch:f.default_branch},selectedFile:{name:B.name,path:B.path,size:B.size},derivedOwner:n,repoName:t,ref:i,githubServiceAuthenticated:o.A.isAuth()}),j("fetching"),console.log("\ud83d\udcc2 BPMNViewer: Preparing to load BPMN content from ".concat(n,"/").concat(t,":").concat(B.path," (ref: ").concat(i,")")),console.log("\ud83d\udccb BPMNViewer: Full selected file object:",JSON.stringify(B,null,2));if((null===(a=B.path)||void 0===a?void 0:a.includes("demo/"))||(null===(s=B.sha)||void 0===s?void 0:s.startsWith("demo-"))){console.log("\ud83c\udfad BPMNViewer: Demo file detected, generating BPMN content locally"),j("generating");const n=B.name.replace(".bpmn","").replace(/[-_]/g," ");e='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(B.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(n,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(B.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}else j("downloading"),e=await o.A.getFileContent(n,t,B.path,i);if(j("validating"),!e||!e.trim())throw new Error("Empty or invalid BPMN file content");if(!e.includes("bpmn:definitions")&&!e.includes("<definitions"))throw new Error("File does not appear to contain valid BPMN XML content");j("importing"),console.log("\ud83c\udfa8 BPMNViewer: Importing XML into BPMN viewer..."),await d.current.importXML(e),j("centering");try{d.current.get("canvas").zoom("fit-viewport"),console.log("\u2705 BPMNViewer: Successfully loaded and centered BPMN diagram")}catch(r){console.warn("\u26a0\ufe0f BPMNViewer: Could not center diagram:",r)}const l=()=>{const e=m.current;if(e){e.querySelectorAll("svg, svg *").forEach(e=>{e.style.opacity="1",e.style.visibility="visible",e.style.display="svg"===e.tagName.toLowerCase()?"block":"","text"!==e.tagName.toLowerCase()&&"tspan"!==e.tagName.toLowerCase()||(e.style.fontWeight="normal",e.style.fontStyle="normal",e.style.fontVariant="normal",e.removeAttribute("font-weight"),e.removeAttribute("style")),["path","rect","circle","ellipse","polygon"].includes(e.tagName.toLowerCase())&&(e.closest("text")||(e.style.fill="var(--who-card-bg)",e.style.stroke="var(--who-text-secondary)",e.style.strokeWidth="1.5px"))}),e.style.opacity="1",e.style.visibility="visible",e.style.display="block",console.log("\ud83c\udfa8 BPMNViewer: Forced comprehensive SVG visibility and styling")}};l(),setTimeout(l,50),setTimeout(l,200),setTimeout(l,500);const c=new MutationObserver(e=>{let n=!1;e.forEach(e=>{"childList"!==e.type&&"attributes"!==e.type||(n=!0)}),n&&setTimeout(l,10)});m.current&&(c.observe(m.current,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["style","fill","stroke","font-weight"]}),m.current._bpmnObserver=c),j("complete"),P(!1)}catch(l){console.error("\ud83d\udca5 BPMNViewer: Error loading BPMN file:",l),console.error("\ud83d\udd0d BPMNViewer: Full error details:",{message:l.message,status:l.status,stack:l.stack,repository:{owner:n,name:t,ref:i},file:{name:B.name,path:B.path}}),j("error"),404===l.status?k("BPMN file not found in the repository."):403===l.status?k("Access denied. This repository may be private and require authentication."):l.message.includes("Empty or invalid BPMN")?k("The selected file appears to be empty or corrupted."):l.message.includes("does not appear to contain valid BPMN")?k("The selected file does not appear to contain valid BPMN XML content."):k("Failed to load BPMN diagram: ".concat(l.message)),P(!1)}},[B,f,y]),T=(0,i.useCallback)(()=>{m.current&&(m.current.innerHTML="",console.log("\ud83e\uddf9 BPMNViewer: Container cleaned up"))},[]);(0,i.useEffect)(()=>{const e=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;m.current?(console.log("\u2705 BPMNViewer: Container found on attempt ".concat(n+1)),(async()=>{if(console.log("\ud83d\udee0\ufe0f BPMNViewer: initializeViewer called with:",{hasContainer:!!m.current,hasViewer:!!d.current,selectedFile:B?B.name:"none",containerRefCurrent:m.current,viewerRefCurrent:d.current}),m.current&&!d.current&&B)try{T(),console.log("\ud83d\udd27 BPMNViewer: Creating new BPMN viewer..."),console.log("\ud83d\udd27 BPMNViewer: Container element details:",{tagName:m.current.tagName,className:m.current.className,clientWidth:m.current.clientWidth,clientHeight:m.current.clientHeight,innerHTML:m.current.innerHTML.length}),d.current=await(0,r._Q)({container:m.current}),console.log("\u2705 BPMNViewer: BPMN viewer initialized successfully"),console.log("\ud83d\udcde BPMNViewer: About to call loadBpmnContent()..."),z()}catch(_){console.error("\u274c BPMNViewer: Failed to initialize BPMN viewer:",_),console.error("\ud83d\udd0d BPMNViewer: Initialization error details:",{message:_.message,stack:_.stack,containerExists:!!m.current,containerContent:m.current?m.current.innerHTML:"N/A"}),_.message.includes("already exists")?(console.log('\ud83d\udd04 BPMNViewer: Detected "element already exists" error, attempting cleanup and retry...'),T(),setTimeout(async()=>{if(m.current&&!d.current)try{console.log("\ud83d\udd04 BPMNViewer: Retrying viewer creation after cleanup..."),d.current=await(0,r._Q)({container:m.current}),console.log("\u2705 BPMNViewer: BPMN viewer initialized successfully on retry"),z()}catch(e){console.error("\u274c BPMNViewer: Failed to initialize BPMN viewer on retry:",e),k("Failed to initialize BPMN viewer: ".concat(e.message)),P(!1)}},100)):(k("Failed to initialize BPMN viewer: ".concat(_.message)),P(!1))}else console.log("\u26a0\ufe0f BPMNViewer: Skipping viewer initialization:",{hasContainer:!!m.current,hasViewer:!!d.current,hasSelectedFile:!!B,reason:m.current?d.current?"Viewer already exists":B?"Unknown":"No selected file":"No container"})})()):n<50?(console.log("\u23f3 BPMNViewer: Container not ready, attempt ".concat(n+1,"/").concat(50,", retrying in 100ms...")),setTimeout(()=>e(n+1),100)):(console.error("\u274c BPMNViewer: Container never became available after maximum attempts"),k("Failed to initialize BPMN viewer: container not available"),P(!1))};return B?(console.log("\u23f0 BPMNViewer: Starting container readiness check for selectedFile:",B.name),e()):console.log("\u274c BPMNViewer: No currentSelectedFile, skipping viewer initialization"),()=>{if(d.current){try{d.current.destroy()}catch(_){console.warn("Warning cleaning up BPMN viewer:",_)}d.current=null}m.current&&m.current._bpmnObserver&&(m.current._bpmnObserver.disconnect(),delete m.current._bpmnObserver)}},[B,z,T]);(0,i.useEffect)(()=>()=>{document.body.classList.remove("enhanced-fullwidth-active")},[]),(0,i.useEffect)(()=>(F?document.body.classList.add("enhanced-fullwidth-active"):document.body.classList.remove("enhanced-fullwidth-active"),()=>{document.body.classList.remove("enhanced-fullwidth-active")}),[F]),(0,i.useEffect)(()=>{t.pathname.split("/").filter(e=>e).length>5?p||u||h||b||f||B||(console.log("BPMNViewer: On asset URL but no data available from framework or location state, redirecting to home"),c("/")):b&&f&&B||(console.log("BPMNViewer: Missing required data, redirecting to home:",{hasProfile:!!b,hasRepository:!!f,hasSelectedFile:!!B}),c("/"))},[b,f,B,p,u,h,t.pathname,c]);const R=t.pathname.split("/").filter(e=>e).length>5;return b&&f&&B?(0,l.jsx)("div",{className:"bpmn-viewer ".concat(F?"enhanced-fullwidth":""," ").concat(L?"auto-hide":""),children:(0,l.jsx)("div",{className:"viewer-content",children:(0,l.jsxs)("div",{className:"viewer-main",children:[(0,l.jsxs)("div",{className:"viewer-toolbar",children:[(0,l.jsxs)("div",{className:"toolbar-left",children:[(0,l.jsx)("h3",{children:B.name}),(0,l.jsxs)("div",{className:"artifact-badges",children:[(0,l.jsx)("span",{className:"artifact-badge bpmn",children:"\ud83d\udcca BPMN"}),(0,l.jsx)("span",{className:"dak-component-badge",children:"\ud83d\udd04 Business Process"})]}),(0,l.jsx)("span",{className:"view-mode-badge",children:"\ud83d\udc41\ufe0f Read-Only View"})]}),(0,l.jsxs)("div",{className:"toolbar-right",children:[(0,l.jsxs)("button",{className:"action-btn secondary",onClick:()=>{S(!L)},title:"Toggle auto-hide headers/footers",children:[L?"\ud83d\udccc":"\ud83d\udc41\ufe0f"," Auto-Hide"]}),(0,l.jsxs)("button",{className:"action-btn secondary",onClick:()=>{const e=!F;C(e),e?document.body.classList.add("enhanced-fullwidth-active"):document.body.classList.remove("enhanced-fullwidth-active")},title:"Toggle enhanced fullwidth mode",children:[F?"\ud83d\udd33":"\u26f6"," Full Container"]}),(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>{c("/business-process-selection",{state:{profile:b,repository:f,component:w,selectedBranch:y}})},children:"\u2190 Back to List"}),V&&(0,l.jsx)("button",{className:"action-btn primary",onClick:()=>{var e;if(!V)return void alert("You need write permissions to edit BPMN files. Please check your GitHub token permissions.");const n=(null===(e=f.owner)||void 0===e?void 0:e.login)||f.full_name.split("/")[0],t=f.name,i=y?"/bpmn-editor/".concat(n,"/").concat(t,"/").concat(y):"/bpmn-editor/".concat(n,"/").concat(t);c(i,{state:{profile:b,repository:f,component:w,selectedFile:B,selectedBranch:y,mode:"edit"}})},children:"\u270f\ufe0f Edit"})]})]}),(0,l.jsxs)("div",{className:"diagram-container",children:[M?(0,l.jsxs)("div",{className:"loading-overlay",children:[(0,l.jsx)("div",{className:"spinner"}),(0,l.jsxs)("div",{className:"loading-info",children:[(0,l.jsx)("p",{children:"Loading BPMN diagram..."}),(0,l.jsxs)("p",{className:"loading-details",children:["Fetching ",B.name," from ",f.name]}),(0,l.jsxs)("div",{className:"loading-progress",children:[(0,l.jsx)("div",{className:"loading-step ".concat("initializing"===x?"active":"fetching"===x||"downloading"===x||"generating"===x||"validating"===x||"importing"===x||"centering"===x||"complete"===x?"complete":""),children:"Initializing viewer"}),(0,l.jsx)("div",{className:"loading-step ".concat("fetching"===x||"downloading"===x||"generating"===x?"active":"validating"===x||"importing"===x||"centering"===x||"complete"===x?"complete":""),children:"generating"===x?"Generating demo content":"Fetching BPMN file"}),(0,l.jsx)("div",{className:"loading-step ".concat("validating"===x?"active":"importing"===x||"centering"===x||"complete"===x?"complete":""),children:"Validating BPMN XML"}),(0,l.jsx)("div",{className:"loading-step ".concat("importing"===x?"active":"centering"===x||"complete"===x?"complete":""),children:"Importing diagram"}),(0,l.jsx)("div",{className:"loading-step ".concat("centering"===x?"active":"complete"===x?"complete":""),children:"Centering view"})]}),(0,l.jsx)("p",{className:"loading-hint",children:"This may take a few moments for large files or slow connections."})]})]}):_?(0,l.jsxs)("div",{className:"error-overlay",children:[(0,l.jsxs)("p",{children:["\u274c ",_]}),(0,l.jsxs)("div",{className:"error-actions",children:[(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>z(),children:"\ud83d\udd04 Retry"}),(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>c("/business-process-selection",{state:{profile:b,repository:f,component:w,selectedBranch:y}}),children:"\u2190 Back to List"})]})]}):null,(0,l.jsx)("div",{className:"bpmn-container",ref:m,style:{display:M||_?"none":"block",width:"100%",height:"100%"}})]}),(0,l.jsxs)("div",{className:"diagram-info",children:[(0,l.jsxs)("div",{className:"condensed-file-info",children:[(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83d\udcc1"}),(0,l.jsx)("span",{className:"value",children:(null===B||void 0===B?void 0:B.name)||"No file"})]}),(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83d\udccf"}),(0,l.jsx)("span",{className:"value",children:null!==B&&void 0!==B&&B.size?"".concat((B.size/1024).toFixed(1)," KB"):"N/A"})]}),(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83c\udf3f"}),(0,l.jsx)("span",{className:"value",children:y||"main"})]})]}),(0,l.jsxs)("div",{className:"condensed-view-mode",children:[(0,l.jsx)("span",{className:"condensed-access-badge ".concat(V?"write":"read"),children:V?"\u270f\ufe0f Edit":"\ud83d\udc41\ufe0f Read"}),(0,l.jsx)("span",{className:"condensed-info-item",children:(0,l.jsx)("span",{className:"value",children:F?"\u26f6 Full Container":L?"\ud83d\udc41\ufe0f Auto-Hide":"\ud83d\udcfa Fullwidth"})})]})]})]})})}):!R||p&&u&&h?(0,l.jsx)("div",{children:"Loading or redirecting..."}):(0,l.jsx)("div",{children:"Loading framework data..."})},d=()=>(0,l.jsx)(s.Mx,{pageName:"bpmn-viewer",children:(0,l.jsx)(c,{})})},96143:(e,n,t)=>{t.d(n,{Cq:()=>a,Ub:()=>o,_Q:()=>s});var i=t(57335);async function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,i.sN)())(e)}async function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,i.uW)())(e)}async function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,i.M3)())(e)}}}]);