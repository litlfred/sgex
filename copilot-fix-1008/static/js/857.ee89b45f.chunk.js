"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[857],{95857:(e,s,a)=>{a.r(s),a.d(s,{default:()=>u});var i=a(89379),t=a(9950),n=a(67818),l=a(10827),c=a(87018),r=a(7082),d=a(44414);const o=e=>{let{questionId:s,parameters:a={},githubService:l=null,assetFiles:o=[],showRawData:h=!1,className:p=""}=e;const{t:m,i18n:u}=(0,n.Bd)(),[f,x]=(0,t.useState)(null),[q,j]=(0,t.useState)(!1),[v,g]=(0,t.useState)(null),N=(0,t.useCallback)(async()=>{if(s&&l){j(!0),g(null);try{const e={questionId:s,parameters:(0,i.A)((0,i.A)({},a),{},{locale:u.language.replace("-","_")||"en_US"}),assetFiles:o},t={githubService:l},n=await c.A.executeQuestion(e,t);x(n)}catch(e){g(e.message)}finally{j(!1)}}},[s,a,l,o,u.language]);(0,t.useEffect)(()=>{N()},[N]);return q?(0,d.jsxs)("div",{className:"faq-answer loading ".concat(p),children:[(0,d.jsx)("div",{className:"faq-loading-spinner"}),(0,d.jsx)("p",{children:m("dak.faq.loading")})]}):v?(0,d.jsxs)("div",{className:"faq-answer error ".concat(p),children:[(0,d.jsx)("h4",{children:m("dak.faq.error_title")}),(0,d.jsx)("p",{className:"faq-error-message",children:v}),(0,d.jsx)("button",{onClick:N,className:"faq-retry-button",children:m("dak.faq.retry")})]}):f?(0,d.jsxs)("div",{className:"faq-answer success ".concat(p),children:[(()=>{return null!==f&&void 0!==f&&f.narrative?(0,d.jsx)("div",{className:"faq-narrative",dangerouslySetInnerHTML:{__html:(e=f.narrative,r.default.sanitize(e,{ALLOWED_TAGS:["h1","h2","h3","h4","h5","h6","p","div","span","ul","ol","li","strong","em","code","pre","time","small"],ALLOWED_ATTR:["class","datetime"]}))}}):null;var e})(),(()=>{const e=(null===f||void 0===f?void 0:f.warnings)||[],s=(null===f||void 0===f?void 0:f.errors)||[];return 0===e.length&&0===s.length?null:(0,d.jsxs)("div",{className:"faq-messages",children:[s.map((e,s)=>(0,d.jsxs)("div",{className:"faq-message faq-error",children:[(0,d.jsx)("span",{className:"faq-message-icon",children:"\u26a0\ufe0f"}),e]},"error-".concat(s))),e.map((e,s)=>(0,d.jsxs)("div",{className:"faq-message faq-warning",children:[(0,d.jsx)("span",{className:"faq-message-icon",children:"\u26a0\ufe0f"}),e]},"warning-".concat(s)))]})})(),h&&null!==f&&void 0!==f&&f.structured?(0,d.jsxs)("details",{className:"faq-structured-data",children:[(0,d.jsx)("summary",{children:m("dak.faq.structured_data")}),(0,d.jsx)("pre",{children:JSON.stringify(f.structured,null,2)})]}):null,h&&null!==f&&void 0!==f&&f.meta?(0,d.jsxs)("details",{className:"faq-metadata",children:[(0,d.jsx)("summary",{children:m("dak.faq.metadata")}),(0,d.jsx)("pre",{children:JSON.stringify(f.meta,null,2)})]}):null]}):(0,d.jsx)("div",{className:"faq-answer empty ".concat(p),children:(0,d.jsx)("p",{children:m("dak.faq.no_data")})})};var h=a(29946),p=a(53782);const m=()=>{const{t:e}=(0,n.Bd)(),{user:s,repository:a,branch:r}=(0,p.N5)(),m=(0,l.zy)(),[u,f]=(0,t.useState)([]),[x,q]=(0,t.useState)(!0),[j,v]=(0,t.useState)(null),[g,N]=(0,t.useState)([]),[b,A]=(0,t.useState)("unknown"),T=null===a||void 0===a?void 0:a.name;(0,t.useEffect)(()=>{y(),E()},[]);const y=async()=>{try{q(!0),await c.A.initialize();const e=c.A.getCatalog();f(e)}catch(e){v(e.message)}finally{q(!1)}},E=async()=>{const e=[{endpoint:"GET /mcp/health",description:"Health check",method:"GET",path:"/mcp/health",fullUrl:"http://127.0.0.1:3001/mcp/health"},{endpoint:"GET /mcp/faq/questions/catalog",description:"List available FAQ questions",method:"GET",path:"/mcp/faq/questions/catalog",fullUrl:"http://127.0.0.1:3001/mcp/faq/questions/catalog"},{endpoint:"POST /mcp/faq/questions/execute",description:"Execute FAQ questions in batch",method:"POST",path:"/mcp/faq/questions/execute",fullUrl:"http://127.0.0.1:3001/mcp/faq/questions/execute"},{endpoint:"POST /mcp/faq/execute/:questionId",description:"Execute a specific FAQ question by ID",method:"POST",path:"/mcp/faq/execute/:questionId",fullUrl:"http://127.0.0.1:3001/mcp/faq/execute/:questionId"},{endpoint:"POST /mcp/faq/execute",description:"Execute a single FAQ question (alternative endpoint)",method:"POST",path:"/mcp/faq/execute",fullUrl:"http://127.0.0.1:3001/mcp/faq/execute"},{endpoint:"GET /mcp/faq/schemas",description:"Get all question schemas",method:"GET",path:"/mcp/faq/schemas",fullUrl:"http://127.0.0.1:3001/mcp/faq/schemas"},{endpoint:"GET /mcp/faq/schemas/:questionId",description:"Get schema for specific question",method:"GET",path:"/mcp/faq/schemas/:questionId",fullUrl:"http://127.0.0.1:3001/mcp/faq/schemas/:questionId"},{endpoint:"GET /mcp/faq/openapi",description:"Get OpenAPI schema for all questions",method:"GET",path:"/mcp/faq/openapi",fullUrl:"http://127.0.0.1:3001/mcp/faq/openapi"},{endpoint:"POST /mcp/faq/validate",description:"Validate question parameters",method:"POST",path:"/mcp/faq/validate",fullUrl:"http://127.0.0.1:3001/mcp/faq/validate"},{endpoint:"GET /mcp/faq/valuesets",description:"List value sets available in this DAK",method:"GET",path:"/mcp/faq/valuesets",fullUrl:"http://127.0.0.1:3001/mcp/faq/valuesets"},{endpoint:"GET /mcp/faq/decision-tables",description:"List decision tables available in this DAK",method:"GET",path:"/mcp/faq/decision-tables",fullUrl:"http://127.0.0.1:3001/mcp/faq/decision-tables"},{endpoint:"GET /mcp/faq/business-processes",description:"List business processes in this DAK",method:"GET",path:"/mcp/faq/business-processes",fullUrl:"http://127.0.0.1:3001/mcp/faq/business-processes"},{endpoint:"GET /mcp/faq/personas",description:"List personas/actors in this DAK",method:"GET",path:"/mcp/faq/personas",fullUrl:"http://127.0.0.1:3001/mcp/faq/personas"},{endpoint:"GET /mcp/faq/questionnaires",description:"List questionnaires available in this DAK",method:"GET",path:"/mcp/faq/questionnaires",fullUrl:"http://127.0.0.1:3001/mcp/faq/questionnaires"}];try{const s=await fetch("http://127.0.0.1:3001/",{method:"GET",timeout:2e3});if(s.ok){const e=await s.json();if(e.endpoints){const s=Object.entries(e.endpoints).map(e=>{let[s,a]=e;return{endpoint:s,description:a,method:s.split(" ")[0],path:s.split(" ")[1],fullUrl:"http://127.0.0.1:3001".concat(s.split(" ")[1])}});return N(s),void A("running")}}A("not-running"),N(e)}catch(j){console.log("MCP service not available, using static endpoints list:",j.message),A("not-running"),N(e)}},S=(()=>{if(s&&T)return{repository:"".concat(s,"/").concat(T),branch:r||"main"};const e=m.state;return null!==e&&void 0!==e&&e.user&&null!==e&&void 0!==e&&e.repo?{repository:"".concat(e.user,"/").concat(e.repo),branch:e.branch||"main"}:null})();return x?(0,d.jsxs)("div",{className:"dak-faq-demo loading",children:[(0,d.jsx)("div",{className:"loading-spinner"}),(0,d.jsx)("p",{children:e("dak.faq.loading")})]}):j?(0,d.jsxs)("div",{className:"dak-faq-demo error",children:[(0,d.jsx)("h2",{children:"FAQ System Error"}),(0,d.jsx)("p",{children:j}),(0,d.jsx)("button",{onClick:y,children:"Retry"})]}):S?(0,d.jsxs)("div",{className:"dak-faq-demo",children:[(0,d.jsxs)("header",{className:"dak-faq-demo-header",children:[(0,d.jsx)("h1",{children:"DAK FAQ Demo"}),(0,d.jsxs)("div",{className:"repository-info",children:[(0,d.jsx)("span",{className:"repo-name",children:S.repository}),(0,d.jsxs)("span",{className:"branch-name",children:["(",S.branch,")"]})]})]}),(0,d.jsxs)("div",{className:"faq-questions",children:[(0,d.jsx)("h2",{children:"Available Questions"}),(0,d.jsx)("p",{children:"Here are some example FAQ questions that can be answered about this DAK:"}),[{id:"dak-name",title:"What is the name of this DAK?",description:"Extracts the DAK name from sushi-config.yaml"},{id:"dak-version",title:"What is the version of this DAK?",description:"Extracts the DAK version from sushi-config.yaml"},{id:"decision-table-inputs",title:"What are the inputs required for this decision table?",description:"Analyzes DMN files and extracts input requirements for decision tables"}].map(e=>(0,d.jsxs)("div",{className:"faq-question-section",children:[(0,d.jsx)("h3",{children:e.title}),(0,d.jsx)("p",{className:"question-description",children:e.description}),"decision-table-inputs"===e.id?(0,d.jsxs)("div",{className:"dmn-demo",children:[(0,d.jsx)("p",{children:(0,d.jsx)("em",{children:"This is an asset-level question that analyzes individual DMN files. In a real DAK repository, this would scan DMN files in directories like input/cql/ or input/dmn/."})}),(0,d.jsx)(o,{questionId:e.id,parameters:(0,i.A)((0,i.A)({},S),{},{assetFile:"input/cql/IMMZ.D2.DT.BCG.dmn"}),githubService:h.A,showRawData:!0})]}):(0,d.jsx)(o,{questionId:e.id,parameters:S,githubService:h.A,showRawData:!0})]},e.id))]}),(0,d.jsxs)("div",{className:"faq-catalog",children:[(0,d.jsx)("h2",{children:"FAQ Question Catalog"}),(0,d.jsx)("p",{children:"All available questions in the system:"}),(0,d.jsx)("div",{className:"catalog-grid",children:u.map(e=>(0,d.jsxs)("div",{className:"catalog-item",children:[(0,d.jsx)("h4",{children:e.title}),(0,d.jsx)("p",{children:e.description}),(0,d.jsxs)("div",{className:"catalog-meta",children:[(0,d.jsx)("span",{className:"level",children:e.level}),(0,d.jsxs)("span",{className:"version",children:["v",e.version]})]}),(0,d.jsx)("div",{className:"tags",children:e.tags.map(e=>(0,d.jsx)("span",{className:"tag",children:e},e))})]},e.id))})]}),(0,d.jsxs)("div",{className:"mcp-info",children:[(0,d.jsx)("h2",{children:"MCP Server Integration"}),(0,d.jsx)("div",{className:"mcp-status",children:(0,d.jsxs)("p",{children:[(0,d.jsx)("strong",{children:"Service Status:"}),(0,d.jsx)("span",{className:"status-badge ".concat(b),children:"running"===b?"\ud83d\udfe2 Running":"not-running"===b?"\ud83d\udd34 Not Running":"\u26aa Unknown"})]})}),(0,d.jsxs)("p",{children:["The FAQ system can be accessed via the local MCP server API for programmatic access.","running"===b?(0,d.jsxs)("span",{children:[" The MCP service is currently ",(0,d.jsx)("strong",{children:"running locally"})," and available for testing."]}):(0,d.jsxs)("span",{children:[" The MCP service is ",(0,d.jsx)("strong",{children:"not running locally"}),", but all 14 endpoints are listed below for reference."]})]}),(0,d.jsxs)("div",{className:"endpoints-section",children:[(0,d.jsxs)("h3",{children:["Available Endpoints (",g.length,")"]}),g.length>0?(0,d.jsx)("div",{className:"endpoints-list",children:g.map((e,s)=>(0,d.jsxs)("div",{className:"endpoint-item",children:[(0,d.jsxs)("div",{className:"endpoint-header",children:[(0,d.jsx)("span",{className:"method-badge ".concat(e.method.toLowerCase()),children:e.method}),(0,d.jsx)("code",{className:"endpoint-url",children:e.fullUrl})]}),(0,d.jsx)("p",{className:"endpoint-description",children:e.description})]},s))}):(0,d.jsx)("p",{children:"No endpoints available. Start the MCP server to see all available endpoints."})]}),(0,d.jsxs)("div",{className:"mcp-usage-info",children:[(0,d.jsx)("h4",{children:"Usage Instructions"}),(0,d.jsxs)("ol",{children:[(0,d.jsxs)("li",{children:["Start the MCP server: ",(0,d.jsx)("code",{children:"cd services/dak-faq-mcp && npm start"})]}),(0,d.jsx)("li",{children:"Use any HTTP client to access the endpoints above"}),(0,d.jsx)("li",{children:"Refresh this page to see updated endpoint status"})]})]})]})]}):(0,d.jsxs)("div",{className:"dak-faq-demo no-context",children:[(0,d.jsx)("h2",{children:"DAK FAQ Demo"}),(0,d.jsx)("p",{children:"No repository context available. Please navigate from a DAK repository page."}),(0,d.jsxs)("div",{className:"demo-info",children:[(0,d.jsx)("h3",{children:"Available Questions"}),(0,d.jsx)("ul",{children:u.map(e=>(0,d.jsxs)("li",{children:[(0,d.jsx)("strong",{children:e.title})," - ",e.description]},e.id))})]})]})},u=()=>(0,d.jsx)(p.Mx,{pageName:"dak-faq-demo",children:(0,d.jsx)(m,{})})}}]);