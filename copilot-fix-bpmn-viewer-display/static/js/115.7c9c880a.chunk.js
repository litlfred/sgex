"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[115],{60115:(e,n,i)=>{i.r(n),i.d(n,{default:()=>d});var t=i(9950),a=i(69396),o=i(46901),s=i(53782),r=i(96143),l=i(44414);const c=()=>{var e,n;const i=(0,a.zy)(),c=(0,a.Zp)(),d=(0,t.useRef)(null),m=(0,t.useRef)(null),{profile:p,repository:g,branch:u,asset:h,loading:w,error:v}=(0,s.N5)();console.log("BPMNViewer: Page framework data:",{profile:!!p,repository:!!g,branch:u,asset:h}),console.log("BPMNViewer: Location state (legacy):",i.state);const{component:N,selectedFile:b,selectedBranch:f}=i.state||{},M=p||(null===(e=i.state)||void 0===e?void 0:e.profile),B=g||(null===(n=i.state)||void 0===n?void 0:n.repository),P=u||f;console.log("BPMNViewer: Final computed values:",{currentProfile:!!M,currentRepository:!!B,currentBranch:P,asset:h});const y=(0,t.useMemo)(()=>h?{name:h.split("/").pop(),path:h}:b,[h,b]),[x,j]=(0,t.useState)(!0),[V,_]=(0,t.useState)("initializing"),[k,E]=(0,t.useState)(null),[F,C]=(0,t.useState)(!1),[z,L]=(0,t.useState)(!1),[S,T]=(0,t.useState)(!1);(0,t.useEffect)(()=>{(async()=>{if(B&&M)try{var e;const n=M.token&&(null===(e=B.permissions)||void 0===e?void 0:e.push);C(n||!1)}catch(k){console.warn("Could not check write permissions:",k),C(!1)}})()},[B,M]);const R=(0,t.useCallback)(async()=>{var e;if(console.log("\ud83d\ude80 BPMNViewer: loadBpmnContent called with:",{hasViewer:!!d.current,selectedFile:y,repository:B?{name:B.name,owner:B.owner}:null}),!d.current||!y||!B)return void console.warn("\u274c BPMNViewer: Missing required parameters for loadBpmnContent:",{hasViewer:!!d.current,hasSelectedFile:!!y,hasRepository:!!B});const n=(null===(e=B.owner)||void 0===e?void 0:e.login)||B.full_name.split("/")[0],i=B.name,t=P||"main";try{var a,s;let e;j(!0),E(null),_("initializing"),console.log("\ud83d\udd0d BPMNViewer: Repository and file analysis:",{repository:{name:B.name,full_name:B.full_name,owner:B.owner,isDemo:B.isDemo,default_branch:B.default_branch},selectedFile:{name:y.name,path:y.path,size:y.size},derivedOwner:n,repoName:i,ref:t,githubServiceAuthenticated:o.A.isAuth()}),_("fetching"),console.log("\ud83d\udcc2 BPMNViewer: Preparing to load BPMN content from ".concat(n,"/").concat(i,":").concat(y.path," (ref: ").concat(t,")")),console.log("\ud83d\udccb BPMNViewer: Full selected file object:",JSON.stringify(y,null,2));if((null===(a=y.path)||void 0===a?void 0:a.includes("demo/"))||(null===(s=y.sha)||void 0===s?void 0:s.startsWith("demo-"))){console.log("\ud83c\udfad BPMNViewer: Demo file detected, generating BPMN content locally"),_("generating");const n=y.name.replace(".bpmn","").replace(/[-_]/g," ");e='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(y.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(n,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(y.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}else _("downloading"),e=await o.A.getFileContent(n,i,y.path,t);if(_("validating"),!e||!e.trim())throw new Error("Empty or invalid BPMN file content");if(!e.includes("bpmn:definitions")&&!e.includes("<definitions"))throw new Error("File does not appear to contain valid BPMN XML content");_("importing"),console.log("\ud83c\udfa8 BPMNViewer: Importing XML into BPMN viewer..."),await d.current.importXML(e),_("centering");try{const e=d.current.get("canvas"),n=d.current.get("elementRegistry").getAll();if(console.log("\ud83d\udcca BPMNViewer: Found ".concat(n.length," elements in diagram")),n.length>0){let i=1/0,t=1/0,a=-1/0,o=-1/0,s=0;if(n.forEach(e=>{void 0!==e.x&&void 0!==e.y&&e.width&&e.height&&(i=Math.min(i,e.x),t=Math.min(t,e.y),a=Math.max(a,e.x+e.width),o=Math.max(o,e.y+e.height),s++)}),console.log("\ud83d\udcd0 BPMNViewer: Found ".concat(s," valid positioned elements")),s>0&&i!==1/0&&a!==-1/0){const n=50,s={x:i-n,y:t-n,width:a-i+2*n,height:o-t+2*n};console.log("\ud83d\udcd0 BPMNViewer: Calculated diagram bounds:",s),s.width>0&&s.height>0?(e.viewbox(s),console.log("\u2705 BPMNViewer: Set viewbox to diagram bounds")):(e.zoom("fit-viewport"),console.log("\u26a0\ufe0f BPMNViewer: Using fit-viewport fallback (invalid bounds)"))}else e.zoom("fit-viewport"),console.log("\u26a0\ufe0f BPMNViewer: Using fit-viewport fallback (no valid elements)")}else e.zoom("fit-viewport"),console.log("\u26a0\ufe0f BPMNViewer: Using fit-viewport fallback (no elements)");const i=()=>{if(d.current)try{const e=d.current.get("canvas");e.viewbox();const n=e.zoom();e.zoom(n);const i=m.current;i&&(i.scrollTop=i.scrollTop)}catch(e){console.warn("\u26a0\ufe0f BPMNViewer: Could not force canvas update:",e)}};setTimeout(i,50),setTimeout(i,150),setTimeout(i,300),console.log("\u2705 BPMNViewer: Successfully loaded and centered BPMN diagram")}catch(r){console.warn("\u26a0\ufe0f BPMNViewer: Could not center diagram:",r)}_("complete"),j(!1)}catch(l){console.error("\ud83d\udca5 BPMNViewer: Error loading BPMN file:",l),console.error("\ud83d\udd0d BPMNViewer: Full error details:",{message:l.message,status:l.status,stack:l.stack,repository:{owner:n,name:i,ref:t},file:{name:y.name,path:y.path}}),_("error"),404===l.status?E("BPMN file not found in the repository."):403===l.status?E("Access denied. This repository may be private and require authentication."):l.message.includes("Empty or invalid BPMN")?E("The selected file appears to be empty or corrupted."):l.message.includes("does not appear to contain valid BPMN")?E("The selected file does not appear to contain valid BPMN XML content."):E("Failed to load BPMN diagram: ".concat(l.message)),j(!1)}},[y,B,P]),D=(0,t.useCallback)(()=>{m.current&&(m.current.innerHTML="",console.log("\ud83e\uddf9 BPMNViewer: Container cleaned up"))},[]);(0,t.useEffect)(()=>{const e=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;m.current?(console.log("\u2705 BPMNViewer: Container found on attempt ".concat(n+1)),(async()=>{if(console.log("\ud83d\udee0\ufe0f BPMNViewer: initializeViewer called with:",{hasContainer:!!m.current,hasViewer:!!d.current,selectedFile:y?y.name:"none",containerRefCurrent:m.current,viewerRefCurrent:d.current}),m.current&&!d.current&&y)try{D(),console.log("\ud83d\udd27 BPMNViewer: Creating new BPMN viewer..."),console.log("\ud83d\udd27 BPMNViewer: Container element details:",{tagName:m.current.tagName,className:m.current.className,clientWidth:m.current.clientWidth,clientHeight:m.current.clientHeight,innerHTML:m.current.innerHTML.length}),d.current=await(0,r._Q)({container:m.current}),console.log("\u2705 BPMNViewer: BPMN viewer initialized successfully"),console.log("\ud83d\udcde BPMNViewer: About to call loadBpmnContent()..."),R()}catch(k){console.error("\u274c BPMNViewer: Failed to initialize BPMN viewer:",k),console.error("\ud83d\udd0d BPMNViewer: Initialization error details:",{message:k.message,stack:k.stack,containerExists:!!m.current,containerContent:m.current?m.current.innerHTML:"N/A"}),k.message.includes("already exists")?(console.log('\ud83d\udd04 BPMNViewer: Detected "element already exists" error, attempting cleanup and retry...'),D(),setTimeout(async()=>{if(m.current&&!d.current)try{console.log("\ud83d\udd04 BPMNViewer: Retrying viewer creation after cleanup..."),d.current=await(0,r._Q)({container:m.current}),console.log("\u2705 BPMNViewer: BPMN viewer initialized successfully on retry"),R()}catch(e){console.error("\u274c BPMNViewer: Failed to initialize BPMN viewer on retry:",e),E("Failed to initialize BPMN viewer: ".concat(e.message)),j(!1)}},100)):(E("Failed to initialize BPMN viewer: ".concat(k.message)),j(!1))}else console.log("\u26a0\ufe0f BPMNViewer: Skipping viewer initialization:",{hasContainer:!!m.current,hasViewer:!!d.current,hasSelectedFile:!!y,reason:m.current?d.current?"Viewer already exists":y?"Unknown":"No selected file":"No container"})})()):n<50?(console.log("\u23f3 BPMNViewer: Container not ready, attempt ".concat(n+1,"/").concat(50,", retrying in 100ms...")),setTimeout(()=>e(n+1),100)):(console.error("\u274c BPMNViewer: Container never became available after maximum attempts"),E("Failed to initialize BPMN viewer: container not available"),j(!1))};return y?(console.log("\u23f0 BPMNViewer: Starting container readiness check for selectedFile:",y.name),e()):console.log("\u274c BPMNViewer: No currentSelectedFile, skipping viewer initialization"),()=>{if(d.current){try{d.current.destroy()}catch(k){console.warn("Warning cleaning up BPMN viewer:",k)}d.current=null}m.current&&m.current._bpmnObserver&&(m.current._bpmnObserver.disconnect(),delete m.current._bpmnObserver)}},[y,R,D]);(0,t.useEffect)(()=>()=>{document.body.classList.remove("enhanced-fullwidth-active")},[]),(0,t.useEffect)(()=>(z?document.body.classList.add("enhanced-fullwidth-active"):document.body.classList.remove("enhanced-fullwidth-active"),()=>{document.body.classList.remove("enhanced-fullwidth-active")}),[z]),(0,t.useEffect)(()=>{i.pathname.split("/").filter(e=>e).length>5?p||g||h||M||B||y||(console.log("BPMNViewer: On asset URL but no data available from framework or location state, redirecting to home"),c("/")):M&&B&&y||(console.log("BPMNViewer: Missing required data, redirecting to home:",{hasProfile:!!M,hasRepository:!!B,hasSelectedFile:!!y}),c("/"))},[M,B,y,p,g,h,i.pathname,c]);const A=i.pathname.split("/").filter(e=>e).length>5;return M&&B&&y?(0,l.jsx)("div",{className:"bpmn-viewer ".concat(z?"enhanced-fullwidth":""," ").concat(S?"auto-hide":""),children:(0,l.jsx)("div",{className:"viewer-content",children:(0,l.jsxs)("div",{className:"viewer-main",children:[(0,l.jsxs)("div",{className:"viewer-toolbar",children:[(0,l.jsxs)("div",{className:"toolbar-left",children:[(0,l.jsx)("h3",{children:y.name}),(0,l.jsxs)("div",{className:"artifact-badges",children:[(0,l.jsx)("span",{className:"artifact-badge bpmn",children:"\ud83d\udcca BPMN"}),(0,l.jsx)("span",{className:"dak-component-badge",children:"\ud83d\udd04 Business Process"})]}),(0,l.jsx)("span",{className:"view-mode-badge",children:"\ud83d\udc41\ufe0f Read-Only View"})]}),(0,l.jsxs)("div",{className:"toolbar-right",children:[(0,l.jsxs)("button",{className:"action-btn secondary",onClick:()=>{T(!S)},title:"Toggle auto-hide headers/footers",children:[S?"\ud83d\udccc":"\ud83d\udc41\ufe0f"," Auto-Hide"]}),(0,l.jsxs)("button",{className:"action-btn secondary",onClick:()=>{const e=!z;L(e),e?document.body.classList.add("enhanced-fullwidth-active"):document.body.classList.remove("enhanced-fullwidth-active")},title:"Toggle enhanced fullwidth mode",children:[z?"\ud83d\udd33":"\u26f6"," Full Container"]}),(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>{c("/business-process-selection",{state:{profile:M,repository:B,component:N,selectedBranch:P}})},children:"\u2190 Back to List"}),F&&(0,l.jsx)("button",{className:"action-btn primary",onClick:()=>{var e;if(!F)return void alert("You need write permissions to edit BPMN files. Please check your GitHub token permissions.");const n=(null===(e=B.owner)||void 0===e?void 0:e.login)||B.full_name.split("/")[0],i=B.name,t=P?"/bpmn-editor/".concat(n,"/").concat(i,"/").concat(P):"/bpmn-editor/".concat(n,"/").concat(i);c(t,{state:{profile:M,repository:B,component:N,selectedFile:y,selectedBranch:P,mode:"edit"}})},children:"\u270f\ufe0f Edit"})]})]}),(0,l.jsxs)("div",{className:"diagram-container",children:[x?(0,l.jsxs)("div",{className:"loading-overlay",children:[(0,l.jsx)("div",{className:"spinner"}),(0,l.jsxs)("div",{className:"loading-info",children:[(0,l.jsx)("p",{children:"Loading BPMN diagram..."}),(0,l.jsxs)("p",{className:"loading-details",children:["Fetching ",y.name," from ",B.name]}),(0,l.jsxs)("div",{className:"loading-progress",children:[(0,l.jsx)("div",{className:"loading-step ".concat("initializing"===V?"active":"fetching"===V||"downloading"===V||"generating"===V||"validating"===V||"importing"===V||"centering"===V||"complete"===V?"complete":""),children:"Initializing viewer"}),(0,l.jsx)("div",{className:"loading-step ".concat("fetching"===V||"downloading"===V||"generating"===V?"active":"validating"===V||"importing"===V||"centering"===V||"complete"===V?"complete":""),children:"generating"===V?"Generating demo content":"Fetching BPMN file"}),(0,l.jsx)("div",{className:"loading-step ".concat("validating"===V?"active":"importing"===V||"centering"===V||"complete"===V?"complete":""),children:"Validating BPMN XML"}),(0,l.jsx)("div",{className:"loading-step ".concat("importing"===V?"active":"centering"===V||"complete"===V?"complete":""),children:"Importing diagram"}),(0,l.jsx)("div",{className:"loading-step ".concat("centering"===V?"active":"complete"===V?"complete":""),children:"Centering view"})]}),(0,l.jsx)("p",{className:"loading-hint",children:"This may take a few moments for large files or slow connections."})]})]}):k?(0,l.jsxs)("div",{className:"error-overlay",children:[(0,l.jsxs)("p",{children:["\u274c ",k]}),(0,l.jsxs)("div",{className:"error-actions",children:[(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>R(),children:"\ud83d\udd04 Retry"}),(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>c("/business-process-selection",{state:{profile:M,repository:B,component:N,selectedBranch:P}}),children:"\u2190 Back to List"})]})]}):null,(0,l.jsx)("div",{className:"bpmn-container",ref:m,style:{display:x||k?"none":"block",width:"100%",height:"100%"}})]}),(0,l.jsxs)("div",{className:"diagram-info",children:[(0,l.jsxs)("div",{className:"condensed-file-info",children:[(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83d\udcc1"}),(0,l.jsx)("span",{className:"value",children:(null===y||void 0===y?void 0:y.name)||"No file"})]}),(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83d\udccf"}),(0,l.jsx)("span",{className:"value",children:null!==y&&void 0!==y&&y.size?"".concat((y.size/1024).toFixed(1)," KB"):"N/A"})]}),(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83c\udf3f"}),(0,l.jsx)("span",{className:"value",children:P||"main"})]})]}),(0,l.jsxs)("div",{className:"condensed-view-mode",children:[(0,l.jsx)("span",{className:"condensed-access-badge ".concat(F?"write":"read"),children:F?"\u270f\ufe0f Edit":"\ud83d\udc41\ufe0f Read"}),(0,l.jsx)("span",{className:"condensed-info-item",children:(0,l.jsx)("span",{className:"value",children:z?"\u26f6 Full Container":S?"\ud83d\udc41\ufe0f Auto-Hide":"\ud83d\udcfa Fullwidth"})})]})]})]})})}):!A||p&&g&&h?(0,l.jsx)("div",{children:"Loading or redirecting..."}):(0,l.jsx)("div",{children:"Loading framework data..."})},d=()=>(0,l.jsx)(s.Mx,{pageName:"bpmn-viewer",children:(0,l.jsx)(c,{})})},96143:(e,n,i)=>{i.d(n,{Cq:()=>a,Ub:()=>o,_Q:()=>s});var t=i(57335);async function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,t.sN)())(e)}async function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,t.uW)())(e)}async function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,t.M3)())(e)}}}]);