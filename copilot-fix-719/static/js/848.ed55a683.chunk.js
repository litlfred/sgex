/*! For license information please see 848.ed55a683.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[848],{28998:e=>{const t=function(){};t.prototype=Object.create(null);const r=/; *([!#-'\*\+\x2D\.0-9A-Z\^-z\|~]+)=("(?:[\x0B !#-\[\]-~\x80-\xFF]|\\[\x0B -\xFF])*"|[!#-'\*\+\x2D\.0-9A-Z\^-z\|~]+) */g,o=/\\([\x0B -\xFF])/g,s=/^[!#-'\*\+\x2D\.0-9A-Z\^_a-z\|~]+\/[!#-'\*\+\x2D\.0-9A-Z\^_a-z\|~]+$/,n={type:"",parameters:new t};function i(e){if("string"!==typeof e)throw new TypeError("argument header is required and must be a string");let n=e.indexOf(";");const i=-1!==n?e.slice(0,n).trim():e.trim();if(!1===s.test(i))throw new TypeError("invalid media type");const a={type:i.toLowerCase(),parameters:new t};if(-1===n)return a;let c,l,p;for(r.lastIndex=n;l=r.exec(e);){if(l.index!==n)throw new TypeError("invalid parameter format");n+=l[0].length,c=l[1].toLowerCase(),p=l[2],'"'===p[0]&&(p=p.slice(1,p.length-1),o.test(p)&&(p=p.replace(o,"$1"))),a.parameters[c]=p}if(n!==e.length)throw new TypeError("invalid parameter format");return a}function a(e){if("string"!==typeof e)return n;let i=e.indexOf(";");const a=-1!==i?e.slice(0,i).trim():e.trim();if(!1===s.test(a))return n;const c={type:a.toLowerCase(),parameters:new t};if(-1===i)return c;let l,p,u;for(r.lastIndex=i;p=r.exec(e);){if(p.index!==i)return n;i+=p[0].length,l=p[1].toLowerCase(),u=p[2],'"'===u[0]&&(u=u.slice(1,u.length-1),o.test(u)&&(u=u.replace(o,"$1"))),c.parameters[l]=u}return i!==e.length?n:c}Object.freeze(n.parameters),Object.freeze(n),e.exports.xL=a},55661:(e,t,r)=>{function o(e){return"undefined"===typeof e||null===e}r.d(t,{Ay:()=>ot});var s={isNothing:o,isObject:function(e){return"object"===typeof e&&null!==e},toArray:function(e){return Array.isArray(e)?e:o(e)?[]:[e]},repeat:function(e,t){var r,o="";for(r=0;r<t;r+=1)o+=e;return o},isNegativeZero:function(e){return 0===e&&Number.NEGATIVE_INFINITY===1/e},extend:function(e,t){var r,o,s,n;if(t)for(r=0,o=(n=Object.keys(t)).length;r<o;r+=1)e[s=n[r]]=t[s];return e}};function n(e,t){var r="",o=e.reason||"(unknown reason)";return e.mark?(e.mark.name&&(r+='in "'+e.mark.name+'" '),r+="("+(e.mark.line+1)+":"+(e.mark.column+1)+")",!t&&e.mark.snippet&&(r+="\n\n"+e.mark.snippet),o+" "+r):o}function i(e,t){Error.call(this),this.name="YAMLException",this.reason=e,this.mark=t,this.message=n(this,!1),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack||""}i.prototype=Object.create(Error.prototype),i.prototype.constructor=i,i.prototype.toString=function(e){return this.name+": "+n(this,e)};var a=i;function c(e,t,r,o,s){var n="",i="",a=Math.floor(s/2)-1;return o-t>a&&(t=o-a+(n=" ... ").length),r-o>a&&(r=o+a-(i=" ...").length),{str:n+e.slice(t,r).replace(/\t/g,"\u2192")+i,pos:o-t+n.length}}function l(e,t){return s.repeat(" ",t-e.length)+e}var p=function(e,t){if(t=Object.create(t||null),!e.buffer)return null;t.maxLength||(t.maxLength=79),"number"!==typeof t.indent&&(t.indent=1),"number"!==typeof t.linesBefore&&(t.linesBefore=3),"number"!==typeof t.linesAfter&&(t.linesAfter=2);for(var r,o=/\r?\n|\r|\0/g,n=[0],i=[],a=-1;r=o.exec(e.buffer);)i.push(r.index),n.push(r.index+r[0].length),e.position<=r.index&&a<0&&(a=n.length-2);a<0&&(a=n.length-1);var p,u,d="",g=Math.min(e.line+t.linesAfter,i.length).toString().length,m=t.maxLength-(t.indent+g+3);for(p=1;p<=t.linesBefore&&!(a-p<0);p++)u=c(e.buffer,n[a-p],i[a-p],e.position-(n[a]-n[a-p]),m),d=s.repeat(" ",t.indent)+l((e.line-p+1).toString(),g)+" | "+u.str+"\n"+d;for(u=c(e.buffer,n[a],i[a],e.position,m),d+=s.repeat(" ",t.indent)+l((e.line+1).toString(),g)+" | "+u.str+"\n",d+=s.repeat("-",t.indent+g+3+u.pos)+"^\n",p=1;p<=t.linesAfter&&!(a+p>=i.length);p++)u=c(e.buffer,n[a+p],i[a+p],e.position-(n[a]-n[a+p]),m),d+=s.repeat(" ",t.indent)+l((e.line+p+1).toString(),g)+" | "+u.str+"\n";return d.replace(/\n$/,"")},u=["kind","multi","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","styleAliases"],d=["scalar","sequence","mapping"];var g=function(e,t){if(t=t||{},Object.keys(t).forEach(function(t){if(-1===u.indexOf(t))throw new a('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')}),this.options=t,this.tag=e,this.kind=t.kind||null,this.resolve=t.resolve||function(){return!0},this.construct=t.construct||function(e){return e},this.instanceOf=t.instanceOf||null,this.predicate=t.predicate||null,this.represent=t.represent||null,this.representName=t.representName||null,this.defaultStyle=t.defaultStyle||null,this.multi=t.multi||!1,this.styleAliases=function(e){var t={};return null!==e&&Object.keys(e).forEach(function(r){e[r].forEach(function(e){t[String(e)]=r})}),t}(t.styleAliases||null),-1===d.indexOf(this.kind))throw new a('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')};function m(e,t){var r=[];return e[t].forEach(function(e){var t=r.length;r.forEach(function(r,o){r.tag===e.tag&&r.kind===e.kind&&r.multi===e.multi&&(t=o)}),r[t]=e}),r}function h(e){return this.extend(e)}h.prototype.extend=function(e){var t=[],r=[];if(e instanceof g)r.push(e);else if(Array.isArray(e))r=r.concat(e);else{if(!e||!Array.isArray(e.implicit)&&!Array.isArray(e.explicit))throw new a("Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })");e.implicit&&(t=t.concat(e.implicit)),e.explicit&&(r=r.concat(e.explicit))}t.forEach(function(e){if(!(e instanceof g))throw new a("Specified list of YAML types (or a single Type object) contains a non-Type object.");if(e.loadKind&&"scalar"!==e.loadKind)throw new a("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");if(e.multi)throw new a("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.")}),r.forEach(function(e){if(!(e instanceof g))throw new a("Specified list of YAML types (or a single Type object) contains a non-Type object.")});var o=Object.create(h.prototype);return o.implicit=(this.implicit||[]).concat(t),o.explicit=(this.explicit||[]).concat(r),o.compiledImplicit=m(o,"implicit"),o.compiledExplicit=m(o,"explicit"),o.compiledTypeMap=function(){var e,t,r={scalar:{},sequence:{},mapping:{},fallback:{},multi:{scalar:[],sequence:[],mapping:[],fallback:[]}};function o(e){e.multi?(r.multi[e.kind].push(e),r.multi.fallback.push(e)):r[e.kind][e.tag]=r.fallback[e.tag]=e}for(e=0,t=arguments.length;e<t;e+=1)arguments[e].forEach(o);return r}(o.compiledImplicit,o.compiledExplicit),o};var f=h,T=new g("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return null!==e?e:""}}),E=new g("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return null!==e?e:[]}}),b=new g("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return null!==e?e:{}}}),w=new f({explicit:[T,E,b]});var _=new g("tag:yaml.org,2002:null",{kind:"scalar",resolve:function(e){if(null===e)return!0;var t=e.length;return 1===t&&"~"===e||4===t&&("null"===e||"Null"===e||"NULL"===e)},construct:function(){return null},predicate:function(e){return null===e},represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"},empty:function(){return""}},defaultStyle:"lowercase"});var y=new g("tag:yaml.org,2002:bool",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t=e.length;return 4===t&&("true"===e||"True"===e||"TRUE"===e)||5===t&&("false"===e||"False"===e||"FALSE"===e)},construct:function(e){return"true"===e||"True"===e||"TRUE"===e},predicate:function(e){return"[object Boolean]"===Object.prototype.toString.call(e)},represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"});function A(e){return 48<=e&&e<=57||65<=e&&e<=70||97<=e&&e<=102}function k(e){return 48<=e&&e<=55}function v(e){return 48<=e&&e<=57}var O=new g("tag:yaml.org,2002:int",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,r=e.length,o=0,s=!1;if(!r)return!1;if("-"!==(t=e[o])&&"+"!==t||(t=e[++o]),"0"===t){if(o+1===r)return!0;if("b"===(t=e[++o])){for(o++;o<r;o++)if("_"!==(t=e[o])){if("0"!==t&&"1"!==t)return!1;s=!0}return s&&"_"!==t}if("x"===t){for(o++;o<r;o++)if("_"!==(t=e[o])){if(!A(e.charCodeAt(o)))return!1;s=!0}return s&&"_"!==t}if("o"===t){for(o++;o<r;o++)if("_"!==(t=e[o])){if(!k(e.charCodeAt(o)))return!1;s=!0}return s&&"_"!==t}}if("_"===t)return!1;for(;o<r;o++)if("_"!==(t=e[o])){if(!v(e.charCodeAt(o)))return!1;s=!0}return!(!s||"_"===t)},construct:function(e){var t,r=e,o=1;if(-1!==r.indexOf("_")&&(r=r.replace(/_/g,"")),"-"!==(t=r[0])&&"+"!==t||("-"===t&&(o=-1),t=(r=r.slice(1))[0]),"0"===r)return 0;if("0"===t){if("b"===r[1])return o*parseInt(r.slice(2),2);if("x"===r[1])return o*parseInt(r.slice(2),16);if("o"===r[1])return o*parseInt(r.slice(2),8)}return o*parseInt(r,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&e%1===0&&!s.isNegativeZero(e)},represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0o"+e.toString(8):"-0o"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}}),S=new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");var G=/^[-+]?[0-9]+e/;var P=new g("tag:yaml.org,2002:float",{kind:"scalar",resolve:function(e){return null!==e&&!(!S.test(e)||"_"===e[e.length-1])},construct:function(e){var t,r;return r="-"===(t=e.replace(/_/g,"").toLowerCase())[0]?-1:1,"+-".indexOf(t[0])>=0&&(t=t.slice(1)),".inf"===t?1===r?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===t?NaN:r*parseFloat(t,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&(e%1!==0||s.isNegativeZero(e))},represent:function(e,t){var r;if(isNaN(e))switch(t){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===e)switch(t){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===e)switch(t){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(s.isNegativeZero(e))return"-0.0";return r=e.toString(10),G.test(r)?r.replace("e",".e"):r},defaultStyle:"lowercase"}),R=w.extend({implicit:[_,y,O,P]}),F=R,C=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),U=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");var D=new g("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:function(e){return null!==e&&(null!==C.exec(e)||null!==U.exec(e))},construct:function(e){var t,r,o,s,n,i,a,c,l=0,p=null;if(null===(t=C.exec(e))&&(t=U.exec(e)),null===t)throw new Error("Date resolve error");if(r=+t[1],o=+t[2]-1,s=+t[3],!t[4])return new Date(Date.UTC(r,o,s));if(n=+t[4],i=+t[5],a=+t[6],t[7]){for(l=t[7].slice(0,3);l.length<3;)l+="0";l=+l}return t[9]&&(p=6e4*(60*+t[10]+ +(t[11]||0)),"-"===t[9]&&(p=-p)),c=new Date(Date.UTC(r,o,s,n,i,a,l)),p&&c.setTime(c.getTime()-p),c},instanceOf:Date,represent:function(e){return e.toISOString()}});var L=new g("tag:yaml.org,2002:merge",{kind:"scalar",resolve:function(e){return"<<"===e||null===e}}),I="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";var x=new g("tag:yaml.org,2002:binary",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,r,o=0,s=e.length,n=I;for(r=0;r<s;r++)if(!((t=n.indexOf(e.charAt(r)))>64)){if(t<0)return!1;o+=6}return o%8===0},construct:function(e){var t,r,o=e.replace(/[\r\n=]/g,""),s=o.length,n=I,i=0,a=[];for(t=0;t<s;t++)t%4===0&&t&&(a.push(i>>16&255),a.push(i>>8&255),a.push(255&i)),i=i<<6|n.indexOf(o.charAt(t));return 0===(r=s%4*6)?(a.push(i>>16&255),a.push(i>>8&255),a.push(255&i)):18===r?(a.push(i>>10&255),a.push(i>>2&255)):12===r&&a.push(i>>4&255),new Uint8Array(a)},predicate:function(e){return"[object Uint8Array]"===Object.prototype.toString.call(e)},represent:function(e){var t,r,o="",s=0,n=e.length,i=I;for(t=0;t<n;t++)t%3===0&&t&&(o+=i[s>>18&63],o+=i[s>>12&63],o+=i[s>>6&63],o+=i[63&s]),s=(s<<8)+e[t];return 0===(r=n%3)?(o+=i[s>>18&63],o+=i[s>>12&63],o+=i[s>>6&63],o+=i[63&s]):2===r?(o+=i[s>>10&63],o+=i[s>>4&63],o+=i[s<<2&63],o+=i[64]):1===r&&(o+=i[s>>2&63],o+=i[s<<4&63],o+=i[64],o+=i[64]),o}}),N=Object.prototype.hasOwnProperty,j=Object.prototype.toString;var M=new g("tag:yaml.org,2002:omap",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,r,o,s,n,i=[],a=e;for(t=0,r=a.length;t<r;t+=1){if(o=a[t],n=!1,"[object Object]"!==j.call(o))return!1;for(s in o)if(N.call(o,s)){if(n)return!1;n=!0}if(!n)return!1;if(-1!==i.indexOf(s))return!1;i.push(s)}return!0},construct:function(e){return null!==e?e:[]}}),q=Object.prototype.toString;var H=new g("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,r,o,s,n,i=e;for(n=new Array(i.length),t=0,r=i.length;t<r;t+=1){if(o=i[t],"[object Object]"!==q.call(o))return!1;if(1!==(s=Object.keys(o)).length)return!1;n[t]=[s[0],o[s[0]]]}return!0},construct:function(e){if(null===e)return[];var t,r,o,s,n,i=e;for(n=new Array(i.length),t=0,r=i.length;t<r;t+=1)o=i[t],s=Object.keys(o),n[t]=[s[0],o[s[0]]];return n}}),z=Object.prototype.hasOwnProperty;var B=new g("tag:yaml.org,2002:set",{kind:"mapping",resolve:function(e){if(null===e)return!0;var t,r=e;for(t in r)if(z.call(r,t)&&null!==r[t])return!1;return!0},construct:function(e){return null!==e?e:{}}}),W=F.extend({implicit:[D,L],explicit:[x,M,H,B]}),V=Object.prototype.hasOwnProperty,K=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,Y=/[\x85\u2028\u2029]/,$=/[,\[\]\{\}]/,Z=/^(?:!|!!|![a-z\-]+!)$/i,J=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function X(e){return Object.prototype.toString.call(e)}function Q(e){return 10===e||13===e}function ee(e){return 9===e||32===e}function te(e){return 9===e||32===e||10===e||13===e}function re(e){return 44===e||91===e||93===e||123===e||125===e}function oe(e){var t;return 48<=e&&e<=57?e-48:97<=(t=32|e)&&t<=102?t-97+10:-1}function se(e){return 120===e?2:117===e?4:85===e?8:0}function ne(e){return 48<=e&&e<=57?e-48:-1}function ie(e){return 48===e?"\0":97===e?"\x07":98===e?"\b":116===e||9===e?"\t":110===e?"\n":118===e?"\v":102===e?"\f":114===e?"\r":101===e?"\x1b":32===e?" ":34===e?'"':47===e?"/":92===e?"\\":78===e?"\x85":95===e?"\xa0":76===e?"\u2028":80===e?"\u2029":""}function ae(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10),56320+(e-65536&1023))}for(var ce=new Array(256),le=new Array(256),pe=0;pe<256;pe++)ce[pe]=ie(pe)?1:0,le[pe]=ie(pe);function ue(e,t){this.input=e,this.filename=t.filename||null,this.schema=t.schema||W,this.onWarning=t.onWarning||null,this.legacy=t.legacy||!1,this.json=t.json||!1,this.listener=t.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=e.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.firstTabInLine=-1,this.documents=[]}function de(e,t){var r={name:e.filename,buffer:e.input.slice(0,-1),position:e.position,line:e.line,column:e.position-e.lineStart};return r.snippet=p(r),new a(t,r)}function ge(e,t){throw de(e,t)}function me(e,t){e.onWarning&&e.onWarning.call(null,de(e,t))}var he={YAML:function(e,t,r){var o,s,n;null!==e.version&&ge(e,"duplication of %YAML directive"),1!==r.length&&ge(e,"YAML directive accepts exactly one argument"),null===(o=/^([0-9]+)\.([0-9]+)$/.exec(r[0]))&&ge(e,"ill-formed argument of the YAML directive"),s=parseInt(o[1],10),n=parseInt(o[2],10),1!==s&&ge(e,"unacceptable YAML version of the document"),e.version=r[0],e.checkLineBreaks=n<2,1!==n&&2!==n&&me(e,"unsupported YAML version of the document")},TAG:function(e,t,r){var o,s;2!==r.length&&ge(e,"TAG directive accepts exactly two arguments"),o=r[0],s=r[1],Z.test(o)||ge(e,"ill-formed tag handle (first argument) of the TAG directive"),V.call(e.tagMap,o)&&ge(e,'there is a previously declared suffix for "'+o+'" tag handle'),J.test(s)||ge(e,"ill-formed tag prefix (second argument) of the TAG directive");try{s=decodeURIComponent(s)}catch(n){ge(e,"tag prefix is malformed: "+s)}e.tagMap[o]=s}};function fe(e,t,r,o){var s,n,i,a;if(t<r){if(a=e.input.slice(t,r),o)for(s=0,n=a.length;s<n;s+=1)9===(i=a.charCodeAt(s))||32<=i&&i<=1114111||ge(e,"expected valid JSON character");else K.test(a)&&ge(e,"the stream contains non-printable characters");e.result+=a}}function Te(e,t,r,o){var n,i,a,c;for(s.isObject(r)||ge(e,"cannot merge mappings; the provided source object is unacceptable"),a=0,c=(n=Object.keys(r)).length;a<c;a+=1)i=n[a],V.call(t,i)||(t[i]=r[i],o[i]=!0)}function Ee(e,t,r,o,s,n,i,a,c){var l,p;if(Array.isArray(s))for(l=0,p=(s=Array.prototype.slice.call(s)).length;l<p;l+=1)Array.isArray(s[l])&&ge(e,"nested arrays are not supported inside keys"),"object"===typeof s&&"[object Object]"===X(s[l])&&(s[l]="[object Object]");if("object"===typeof s&&"[object Object]"===X(s)&&(s="[object Object]"),s=String(s),null===t&&(t={}),"tag:yaml.org,2002:merge"===o)if(Array.isArray(n))for(l=0,p=n.length;l<p;l+=1)Te(e,t,n[l],r);else Te(e,t,n,r);else e.json||V.call(r,s)||!V.call(t,s)||(e.line=i||e.line,e.lineStart=a||e.lineStart,e.position=c||e.position,ge(e,"duplicated mapping key")),"__proto__"===s?Object.defineProperty(t,s,{configurable:!0,enumerable:!0,writable:!0,value:n}):t[s]=n,delete r[s];return t}function be(e){var t;10===(t=e.input.charCodeAt(e.position))?e.position++:13===t?(e.position++,10===e.input.charCodeAt(e.position)&&e.position++):ge(e,"a line break is expected"),e.line+=1,e.lineStart=e.position,e.firstTabInLine=-1}function we(e,t,r){for(var o=0,s=e.input.charCodeAt(e.position);0!==s;){for(;ee(s);)9===s&&-1===e.firstTabInLine&&(e.firstTabInLine=e.position),s=e.input.charCodeAt(++e.position);if(t&&35===s)do{s=e.input.charCodeAt(++e.position)}while(10!==s&&13!==s&&0!==s);if(!Q(s))break;for(be(e),s=e.input.charCodeAt(e.position),o++,e.lineIndent=0;32===s;)e.lineIndent++,s=e.input.charCodeAt(++e.position)}return-1!==r&&0!==o&&e.lineIndent<r&&me(e,"deficient indentation"),o}function _e(e){var t,r=e.position;return!(45!==(t=e.input.charCodeAt(r))&&46!==t||t!==e.input.charCodeAt(r+1)||t!==e.input.charCodeAt(r+2)||(r+=3,0!==(t=e.input.charCodeAt(r))&&!te(t)))}function ye(e,t){1===t?e.result+=" ":t>1&&(e.result+=s.repeat("\n",t-1))}function Ae(e,t){var r,o,s=e.tag,n=e.anchor,i=[],a=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=i),o=e.input.charCodeAt(e.position);0!==o&&(-1!==e.firstTabInLine&&(e.position=e.firstTabInLine,ge(e,"tab characters must not be used in indentation")),45===o)&&te(e.input.charCodeAt(e.position+1));)if(a=!0,e.position++,we(e,!0,-1)&&e.lineIndent<=t)i.push(null),o=e.input.charCodeAt(e.position);else if(r=e.line,Oe(e,t,3,!1,!0),i.push(e.result),we(e,!0,-1),o=e.input.charCodeAt(e.position),(e.line===r||e.lineIndent>t)&&0!==o)ge(e,"bad indentation of a sequence entry");else if(e.lineIndent<t)break;return!!a&&(e.tag=s,e.anchor=n,e.kind="sequence",e.result=i,!0)}function ke(e){var t,r,o,s,n=!1,i=!1;if(33!==(s=e.input.charCodeAt(e.position)))return!1;if(null!==e.tag&&ge(e,"duplication of a tag property"),60===(s=e.input.charCodeAt(++e.position))?(n=!0,s=e.input.charCodeAt(++e.position)):33===s?(i=!0,r="!!",s=e.input.charCodeAt(++e.position)):r="!",t=e.position,n){do{s=e.input.charCodeAt(++e.position)}while(0!==s&&62!==s);e.position<e.length?(o=e.input.slice(t,e.position),s=e.input.charCodeAt(++e.position)):ge(e,"unexpected end of the stream within a verbatim tag")}else{for(;0!==s&&!te(s);)33===s&&(i?ge(e,"tag suffix cannot contain exclamation marks"):(r=e.input.slice(t-1,e.position+1),Z.test(r)||ge(e,"named tag handle cannot contain such characters"),i=!0,t=e.position+1)),s=e.input.charCodeAt(++e.position);o=e.input.slice(t,e.position),$.test(o)&&ge(e,"tag suffix cannot contain flow indicator characters")}o&&!J.test(o)&&ge(e,"tag name cannot contain such characters: "+o);try{o=decodeURIComponent(o)}catch(a){ge(e,"tag name is malformed: "+o)}return n?e.tag=o:V.call(e.tagMap,r)?e.tag=e.tagMap[r]+o:"!"===r?e.tag="!"+o:"!!"===r?e.tag="tag:yaml.org,2002:"+o:ge(e,'undeclared tag handle "'+r+'"'),!0}function ve(e){var t,r;if(38!==(r=e.input.charCodeAt(e.position)))return!1;for(null!==e.anchor&&ge(e,"duplication of an anchor property"),r=e.input.charCodeAt(++e.position),t=e.position;0!==r&&!te(r)&&!re(r);)r=e.input.charCodeAt(++e.position);return e.position===t&&ge(e,"name of an anchor node must contain at least one character"),e.anchor=e.input.slice(t,e.position),!0}function Oe(e,t,r,o,n){var i,a,c,l,p,u,d,g,m,h=1,f=!1,T=!1;if(null!==e.listener&&e.listener("open",e),e.tag=null,e.anchor=null,e.kind=null,e.result=null,i=a=c=4===r||3===r,o&&we(e,!0,-1)&&(f=!0,e.lineIndent>t?h=1:e.lineIndent===t?h=0:e.lineIndent<t&&(h=-1)),1===h)for(;ke(e)||ve(e);)we(e,!0,-1)?(f=!0,c=i,e.lineIndent>t?h=1:e.lineIndent===t?h=0:e.lineIndent<t&&(h=-1)):c=!1;if(c&&(c=f||n),1!==h&&4!==r||(g=1===r||2===r?t:t+1,m=e.position-e.lineStart,1===h?c&&(Ae(e,m)||function(e,t,r){var o,s,n,i,a,c,l,p=e.tag,u=e.anchor,d={},g=Object.create(null),m=null,h=null,f=null,T=!1,E=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=d),l=e.input.charCodeAt(e.position);0!==l;){if(T||-1===e.firstTabInLine||(e.position=e.firstTabInLine,ge(e,"tab characters must not be used in indentation")),o=e.input.charCodeAt(e.position+1),n=e.line,63!==l&&58!==l||!te(o)){if(i=e.line,a=e.lineStart,c=e.position,!Oe(e,r,2,!1,!0))break;if(e.line===n){for(l=e.input.charCodeAt(e.position);ee(l);)l=e.input.charCodeAt(++e.position);if(58===l)te(l=e.input.charCodeAt(++e.position))||ge(e,"a whitespace character is expected after the key-value separator within a block mapping"),T&&(Ee(e,d,g,m,h,null,i,a,c),m=h=f=null),E=!0,T=!1,s=!1,m=e.tag,h=e.result;else{if(!E)return e.tag=p,e.anchor=u,!0;ge(e,"can not read an implicit mapping pair; a colon is missed")}}else{if(!E)return e.tag=p,e.anchor=u,!0;ge(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===l?(T&&(Ee(e,d,g,m,h,null,i,a,c),m=h=f=null),E=!0,T=!0,s=!0):T?(T=!1,s=!0):ge(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),e.position+=1,l=o;if((e.line===n||e.lineIndent>t)&&(T&&(i=e.line,a=e.lineStart,c=e.position),Oe(e,t,4,!0,s)&&(T?h=e.result:f=e.result),T||(Ee(e,d,g,m,h,f,i,a,c),m=h=f=null),we(e,!0,-1),l=e.input.charCodeAt(e.position)),(e.line===n||e.lineIndent>t)&&0!==l)ge(e,"bad indentation of a mapping entry");else if(e.lineIndent<t)break}return T&&Ee(e,d,g,m,h,null,i,a,c),E&&(e.tag=p,e.anchor=u,e.kind="mapping",e.result=d),E}(e,m,g))||function(e,t){var r,o,s,n,i,a,c,l,p,u,d,g,m=!0,h=e.tag,f=e.anchor,T=Object.create(null);if(91===(g=e.input.charCodeAt(e.position)))i=93,l=!1,n=[];else{if(123!==g)return!1;i=125,l=!0,n={}}for(null!==e.anchor&&(e.anchorMap[e.anchor]=n),g=e.input.charCodeAt(++e.position);0!==g;){if(we(e,!0,t),(g=e.input.charCodeAt(e.position))===i)return e.position++,e.tag=h,e.anchor=f,e.kind=l?"mapping":"sequence",e.result=n,!0;m?44===g&&ge(e,"expected the node content, but found ','"):ge(e,"missed comma between flow collection entries"),d=null,a=c=!1,63===g&&te(e.input.charCodeAt(e.position+1))&&(a=c=!0,e.position++,we(e,!0,t)),r=e.line,o=e.lineStart,s=e.position,Oe(e,t,1,!1,!0),u=e.tag,p=e.result,we(e,!0,t),g=e.input.charCodeAt(e.position),!c&&e.line!==r||58!==g||(a=!0,g=e.input.charCodeAt(++e.position),we(e,!0,t),Oe(e,t,1,!1,!0),d=e.result),l?Ee(e,n,T,u,p,d,r,o,s):a?n.push(Ee(e,null,T,u,p,d,r,o,s)):n.push(p),we(e,!0,t),44===(g=e.input.charCodeAt(e.position))?(m=!0,g=e.input.charCodeAt(++e.position)):m=!1}ge(e,"unexpected end of the stream within a flow collection")}(e,g)?T=!0:(a&&function(e,t){var r,o,n,i,a=1,c=!1,l=!1,p=t,u=0,d=!1;if(124===(i=e.input.charCodeAt(e.position)))o=!1;else{if(62!==i)return!1;o=!0}for(e.kind="scalar",e.result="";0!==i;)if(43===(i=e.input.charCodeAt(++e.position))||45===i)1===a?a=43===i?3:2:ge(e,"repeat of a chomping mode identifier");else{if(!((n=ne(i))>=0))break;0===n?ge(e,"bad explicit indentation width of a block scalar; it cannot be less than one"):l?ge(e,"repeat of an indentation width identifier"):(p=t+n-1,l=!0)}if(ee(i)){do{i=e.input.charCodeAt(++e.position)}while(ee(i));if(35===i)do{i=e.input.charCodeAt(++e.position)}while(!Q(i)&&0!==i)}for(;0!==i;){for(be(e),e.lineIndent=0,i=e.input.charCodeAt(e.position);(!l||e.lineIndent<p)&&32===i;)e.lineIndent++,i=e.input.charCodeAt(++e.position);if(!l&&e.lineIndent>p&&(p=e.lineIndent),Q(i))u++;else{if(e.lineIndent<p){3===a?e.result+=s.repeat("\n",c?1+u:u):1===a&&c&&(e.result+="\n");break}for(o?ee(i)?(d=!0,e.result+=s.repeat("\n",c?1+u:u)):d?(d=!1,e.result+=s.repeat("\n",u+1)):0===u?c&&(e.result+=" "):e.result+=s.repeat("\n",u):e.result+=s.repeat("\n",c?1+u:u),c=!0,l=!0,u=0,r=e.position;!Q(i)&&0!==i;)i=e.input.charCodeAt(++e.position);fe(e,r,e.position,!1)}}return!0}(e,g)||function(e,t){var r,o,s;if(39!==(r=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,o=s=e.position;0!==(r=e.input.charCodeAt(e.position));)if(39===r){if(fe(e,o,e.position,!0),39!==(r=e.input.charCodeAt(++e.position)))return!0;o=e.position,e.position++,s=e.position}else Q(r)?(fe(e,o,s,!0),ye(e,we(e,!1,t)),o=s=e.position):e.position===e.lineStart&&_e(e)?ge(e,"unexpected end of the document within a single quoted scalar"):(e.position++,s=e.position);ge(e,"unexpected end of the stream within a single quoted scalar")}(e,g)||function(e,t){var r,o,s,n,i,a;if(34!==(a=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,r=o=e.position;0!==(a=e.input.charCodeAt(e.position));){if(34===a)return fe(e,r,e.position,!0),e.position++,!0;if(92===a){if(fe(e,r,e.position,!0),Q(a=e.input.charCodeAt(++e.position)))we(e,!1,t);else if(a<256&&ce[a])e.result+=le[a],e.position++;else if((i=se(a))>0){for(s=i,n=0;s>0;s--)(i=oe(a=e.input.charCodeAt(++e.position)))>=0?n=(n<<4)+i:ge(e,"expected hexadecimal character");e.result+=ae(n),e.position++}else ge(e,"unknown escape sequence");r=o=e.position}else Q(a)?(fe(e,r,o,!0),ye(e,we(e,!1,t)),r=o=e.position):e.position===e.lineStart&&_e(e)?ge(e,"unexpected end of the document within a double quoted scalar"):(e.position++,o=e.position)}ge(e,"unexpected end of the stream within a double quoted scalar")}(e,g)?T=!0:!function(e){var t,r,o;if(42!==(o=e.input.charCodeAt(e.position)))return!1;for(o=e.input.charCodeAt(++e.position),t=e.position;0!==o&&!te(o)&&!re(o);)o=e.input.charCodeAt(++e.position);return e.position===t&&ge(e,"name of an alias node must contain at least one character"),r=e.input.slice(t,e.position),V.call(e.anchorMap,r)||ge(e,'unidentified alias "'+r+'"'),e.result=e.anchorMap[r],we(e,!0,-1),!0}(e)?function(e,t,r){var o,s,n,i,a,c,l,p,u=e.kind,d=e.result;if(te(p=e.input.charCodeAt(e.position))||re(p)||35===p||38===p||42===p||33===p||124===p||62===p||39===p||34===p||37===p||64===p||96===p)return!1;if((63===p||45===p)&&(te(o=e.input.charCodeAt(e.position+1))||r&&re(o)))return!1;for(e.kind="scalar",e.result="",s=n=e.position,i=!1;0!==p;){if(58===p){if(te(o=e.input.charCodeAt(e.position+1))||r&&re(o))break}else if(35===p){if(te(e.input.charCodeAt(e.position-1)))break}else{if(e.position===e.lineStart&&_e(e)||r&&re(p))break;if(Q(p)){if(a=e.line,c=e.lineStart,l=e.lineIndent,we(e,!1,-1),e.lineIndent>=t){i=!0,p=e.input.charCodeAt(e.position);continue}e.position=n,e.line=a,e.lineStart=c,e.lineIndent=l;break}}i&&(fe(e,s,n,!1),ye(e,e.line-a),s=n=e.position,i=!1),ee(p)||(n=e.position+1),p=e.input.charCodeAt(++e.position)}return fe(e,s,n,!1),!!e.result||(e.kind=u,e.result=d,!1)}(e,g,1===r)&&(T=!0,null===e.tag&&(e.tag="?")):(T=!0,null===e.tag&&null===e.anchor||ge(e,"alias node should not have any properties")),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):0===h&&(T=c&&Ae(e,m))),null===e.tag)null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);else if("?"===e.tag){for(null!==e.result&&"scalar"!==e.kind&&ge(e,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+e.kind+'"'),l=0,p=e.implicitTypes.length;l<p;l+=1)if((d=e.implicitTypes[l]).resolve(e.result)){e.result=d.construct(e.result),e.tag=d.tag,null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);break}}else if("!"!==e.tag){if(V.call(e.typeMap[e.kind||"fallback"],e.tag))d=e.typeMap[e.kind||"fallback"][e.tag];else for(d=null,l=0,p=(u=e.typeMap.multi[e.kind||"fallback"]).length;l<p;l+=1)if(e.tag.slice(0,u[l].tag.length)===u[l].tag){d=u[l];break}d||ge(e,"unknown tag !<"+e.tag+">"),null!==e.result&&d.kind!==e.kind&&ge(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+d.kind+'", not "'+e.kind+'"'),d.resolve(e.result,e.tag)?(e.result=d.construct(e.result,e.tag),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):ge(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")}return null!==e.listener&&e.listener("close",e),null!==e.tag||null!==e.anchor||T}function Se(e){var t,r,o,s,n=e.position,i=!1;for(e.version=null,e.checkLineBreaks=e.legacy,e.tagMap=Object.create(null),e.anchorMap=Object.create(null);0!==(s=e.input.charCodeAt(e.position))&&(we(e,!0,-1),s=e.input.charCodeAt(e.position),!(e.lineIndent>0||37!==s));){for(i=!0,s=e.input.charCodeAt(++e.position),t=e.position;0!==s&&!te(s);)s=e.input.charCodeAt(++e.position);for(o=[],(r=e.input.slice(t,e.position)).length<1&&ge(e,"directive name must not be less than one character in length");0!==s;){for(;ee(s);)s=e.input.charCodeAt(++e.position);if(35===s){do{s=e.input.charCodeAt(++e.position)}while(0!==s&&!Q(s));break}if(Q(s))break;for(t=e.position;0!==s&&!te(s);)s=e.input.charCodeAt(++e.position);o.push(e.input.slice(t,e.position))}0!==s&&be(e),V.call(he,r)?he[r](e,r,o):me(e,'unknown document directive "'+r+'"')}we(e,!0,-1),0===e.lineIndent&&45===e.input.charCodeAt(e.position)&&45===e.input.charCodeAt(e.position+1)&&45===e.input.charCodeAt(e.position+2)?(e.position+=3,we(e,!0,-1)):i&&ge(e,"directives end mark is expected"),Oe(e,e.lineIndent-1,4,!1,!0),we(e,!0,-1),e.checkLineBreaks&&Y.test(e.input.slice(n,e.position))&&me(e,"non-ASCII line breaks are interpreted as content"),e.documents.push(e.result),e.position===e.lineStart&&_e(e)?46===e.input.charCodeAt(e.position)&&(e.position+=3,we(e,!0,-1)):e.position<e.length-1&&ge(e,"end of the stream or a document separator is expected")}function Ge(e,t){t=t||{},0!==(e=String(e)).length&&(10!==e.charCodeAt(e.length-1)&&13!==e.charCodeAt(e.length-1)&&(e+="\n"),65279===e.charCodeAt(0)&&(e=e.slice(1)));var r=new ue(e,t),o=e.indexOf("\0");for(-1!==o&&(r.position=o,ge(r,"null byte is not allowed in input")),r.input+="\0";32===r.input.charCodeAt(r.position);)r.lineIndent+=1,r.position+=1;for(;r.position<r.length-1;)Se(r);return r.documents}var Pe={loadAll:function(e,t,r){null!==t&&"object"===typeof t&&"undefined"===typeof r&&(r=t,t=null);var o=Ge(e,r);if("function"!==typeof t)return o;for(var s=0,n=o.length;s<n;s+=1)t(o[s])},load:function(e,t){var r=Ge(e,t);if(0!==r.length){if(1===r.length)return r[0];throw new a("expected a single document in the stream, but found more")}}},Re=Object.prototype.toString,Fe=Object.prototype.hasOwnProperty,Ce=65279,Ue={0:"\\0",7:"\\a",8:"\\b",9:"\\t",10:"\\n",11:"\\v",12:"\\f",13:"\\r",27:"\\e",34:'\\"',92:"\\\\",133:"\\N",160:"\\_",8232:"\\L",8233:"\\P"},De=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"],Le=/^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;function Ie(e){var t,r,o;if(t=e.toString(16).toUpperCase(),e<=255)r="x",o=2;else if(e<=65535)r="u",o=4;else{if(!(e<=4294967295))throw new a("code point within a string may not be greater than 0xFFFFFFFF");r="U",o=8}return"\\"+r+s.repeat("0",o-t.length)+t}function xe(e){this.schema=e.schema||W,this.indent=Math.max(1,e.indent||2),this.noArrayIndent=e.noArrayIndent||!1,this.skipInvalid=e.skipInvalid||!1,this.flowLevel=s.isNothing(e.flowLevel)?-1:e.flowLevel,this.styleMap=function(e,t){var r,o,s,n,i,a,c;if(null===t)return{};for(r={},s=0,n=(o=Object.keys(t)).length;s<n;s+=1)i=o[s],a=String(t[i]),"!!"===i.slice(0,2)&&(i="tag:yaml.org,2002:"+i.slice(2)),(c=e.compiledTypeMap.fallback[i])&&Fe.call(c.styleAliases,a)&&(a=c.styleAliases[a]),r[i]=a;return r}(this.schema,e.styles||null),this.sortKeys=e.sortKeys||!1,this.lineWidth=e.lineWidth||80,this.noRefs=e.noRefs||!1,this.noCompatMode=e.noCompatMode||!1,this.condenseFlow=e.condenseFlow||!1,this.quotingType='"'===e.quotingType?2:1,this.forceQuotes=e.forceQuotes||!1,this.replacer="function"===typeof e.replacer?e.replacer:null,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function Ne(e,t){for(var r,o=s.repeat(" ",t),n=0,i=-1,a="",c=e.length;n<c;)-1===(i=e.indexOf("\n",n))?(r=e.slice(n),n=c):(r=e.slice(n,i+1),n=i+1),r.length&&"\n"!==r&&(a+=o),a+=r;return a}function je(e,t){return"\n"+s.repeat(" ",e.indent*t)}function Me(e){return 32===e||9===e}function qe(e){return 32<=e&&e<=126||161<=e&&e<=55295&&8232!==e&&8233!==e||57344<=e&&e<=65533&&e!==Ce||65536<=e&&e<=1114111}function He(e){return qe(e)&&e!==Ce&&13!==e&&10!==e}function ze(e,t,r){var o=He(e),s=o&&!Me(e);return(r?o:o&&44!==e&&91!==e&&93!==e&&123!==e&&125!==e)&&35!==e&&!(58===t&&!s)||He(t)&&!Me(t)&&35===e||58===t&&s}function Be(e,t){var r,o=e.charCodeAt(t);return o>=55296&&o<=56319&&t+1<e.length&&(r=e.charCodeAt(t+1))>=56320&&r<=57343?1024*(o-55296)+r-56320+65536:o}function We(e){return/^\n* /.test(e)}function Ve(e,t,r,o,s,n,i,a){var c,l,p=0,u=null,d=!1,g=!1,m=-1!==o,h=-1,f=qe(l=Be(e,0))&&l!==Ce&&!Me(l)&&45!==l&&63!==l&&58!==l&&44!==l&&91!==l&&93!==l&&123!==l&&125!==l&&35!==l&&38!==l&&42!==l&&33!==l&&124!==l&&61!==l&&62!==l&&39!==l&&34!==l&&37!==l&&64!==l&&96!==l&&function(e){return!Me(e)&&58!==e}(Be(e,e.length-1));if(t||i)for(c=0;c<e.length;p>=65536?c+=2:c++){if(!qe(p=Be(e,c)))return 5;f=f&&ze(p,u,a),u=p}else{for(c=0;c<e.length;p>=65536?c+=2:c++){if(10===(p=Be(e,c)))d=!0,m&&(g=g||c-h-1>o&&" "!==e[h+1],h=c);else if(!qe(p))return 5;f=f&&ze(p,u,a),u=p}g=g||m&&c-h-1>o&&" "!==e[h+1]}return d||g?r>9&&We(e)?5:i?2===n?5:2:g?4:3:!f||i||s(e)?2===n?5:2:1}function Ke(e,t,r,o,s){e.dump=function(){if(0===t.length)return 2===e.quotingType?'""':"''";if(!e.noCompatMode&&(-1!==De.indexOf(t)||Le.test(t)))return 2===e.quotingType?'"'+t+'"':"'"+t+"'";var n=e.indent*Math.max(1,r),i=-1===e.lineWidth?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-n),c=o||e.flowLevel>-1&&r>=e.flowLevel;switch(Ve(t,c,e.indent,i,function(t){return function(e,t){var r,o;for(r=0,o=e.implicitTypes.length;r<o;r+=1)if(e.implicitTypes[r].resolve(t))return!0;return!1}(e,t)},e.quotingType,e.forceQuotes&&!o,s)){case 1:return t;case 2:return"'"+t.replace(/'/g,"''")+"'";case 3:return"|"+Ye(t,e.indent)+$e(Ne(t,n));case 4:return">"+Ye(t,e.indent)+$e(Ne(function(e,t){var r,o,s=/(\n+)([^\n]*)/g,n=function(){var r=e.indexOf("\n");return r=-1!==r?r:e.length,s.lastIndex=r,Ze(e.slice(0,r),t)}(),i="\n"===e[0]||" "===e[0];for(;o=s.exec(e);){var a=o[1],c=o[2];r=" "===c[0],n+=a+(i||r||""===c?"":"\n")+Ze(c,t),i=r}return n}(t,i),n));case 5:return'"'+function(e){for(var t,r="",o=0,s=0;s<e.length;o>=65536?s+=2:s++)o=Be(e,s),!(t=Ue[o])&&qe(o)?(r+=e[s],o>=65536&&(r+=e[s+1])):r+=t||Ie(o);return r}(t)+'"';default:throw new a("impossible error: invalid scalar style")}}()}function Ye(e,t){var r=We(e)?String(t):"",o="\n"===e[e.length-1];return r+(o&&("\n"===e[e.length-2]||"\n"===e)?"+":o?"":"-")+"\n"}function $e(e){return"\n"===e[e.length-1]?e.slice(0,-1):e}function Ze(e,t){if(""===e||" "===e[0])return e;for(var r,o,s=/ [^ ]/g,n=0,i=0,a=0,c="";r=s.exec(e);)(a=r.index)-n>t&&(o=i>n?i:a,c+="\n"+e.slice(n,o),n=o+1),i=a;return c+="\n",e.length-n>t&&i>n?c+=e.slice(n,i)+"\n"+e.slice(i+1):c+=e.slice(n),c.slice(1)}function Je(e,t,r,o){var s,n,i,a="",c=e.tag;for(s=0,n=r.length;s<n;s+=1)i=r[s],e.replacer&&(i=e.replacer.call(r,String(s),i)),(Qe(e,t+1,i,!0,!0,!1,!0)||"undefined"===typeof i&&Qe(e,t+1,null,!0,!0,!1,!0))&&(o&&""===a||(a+=je(e,t)),e.dump&&10===e.dump.charCodeAt(0)?a+="-":a+="- ",a+=e.dump);e.tag=c,e.dump=a||"[]"}function Xe(e,t,r){var o,s,n,i,c,l;for(n=0,i=(s=r?e.explicitTypes:e.implicitTypes).length;n<i;n+=1)if(((c=s[n]).instanceOf||c.predicate)&&(!c.instanceOf||"object"===typeof t&&t instanceof c.instanceOf)&&(!c.predicate||c.predicate(t))){if(r?c.multi&&c.representName?e.tag=c.representName(t):e.tag=c.tag:e.tag="?",c.represent){if(l=e.styleMap[c.tag]||c.defaultStyle,"[object Function]"===Re.call(c.represent))o=c.represent(t,l);else{if(!Fe.call(c.represent,l))throw new a("!<"+c.tag+'> tag resolver accepts not "'+l+'" style');o=c.represent[l](t,l)}e.dump=o}return!0}return!1}function Qe(e,t,r,o,s,n,i){e.tag=null,e.dump=r,Xe(e,r,!1)||Xe(e,r,!0);var c,l=Re.call(e.dump),p=o;o&&(o=e.flowLevel<0||e.flowLevel>t);var u,d,g="[object Object]"===l||"[object Array]"===l;if(g&&(d=-1!==(u=e.duplicates.indexOf(r))),(null!==e.tag&&"?"!==e.tag||d||2!==e.indent&&t>0)&&(s=!1),d&&e.usedDuplicates[u])e.dump="*ref_"+u;else{if(g&&d&&!e.usedDuplicates[u]&&(e.usedDuplicates[u]=!0),"[object Object]"===l)o&&0!==Object.keys(e.dump).length?(!function(e,t,r,o){var s,n,i,c,l,p,u="",d=e.tag,g=Object.keys(r);if(!0===e.sortKeys)g.sort();else if("function"===typeof e.sortKeys)g.sort(e.sortKeys);else if(e.sortKeys)throw new a("sortKeys must be a boolean or a function");for(s=0,n=g.length;s<n;s+=1)p="",o&&""===u||(p+=je(e,t)),c=r[i=g[s]],e.replacer&&(c=e.replacer.call(r,i,c)),Qe(e,t+1,i,!0,!0,!0)&&((l=null!==e.tag&&"?"!==e.tag||e.dump&&e.dump.length>1024)&&(e.dump&&10===e.dump.charCodeAt(0)?p+="?":p+="? "),p+=e.dump,l&&(p+=je(e,t)),Qe(e,t+1,c,!0,l)&&(e.dump&&10===e.dump.charCodeAt(0)?p+=":":p+=": ",u+=p+=e.dump));e.tag=d,e.dump=u||"{}"}(e,t,e.dump,s),d&&(e.dump="&ref_"+u+e.dump)):(!function(e,t,r){var o,s,n,i,a,c="",l=e.tag,p=Object.keys(r);for(o=0,s=p.length;o<s;o+=1)a="",""!==c&&(a+=", "),e.condenseFlow&&(a+='"'),i=r[n=p[o]],e.replacer&&(i=e.replacer.call(r,n,i)),Qe(e,t,n,!1,!1)&&(e.dump.length>1024&&(a+="? "),a+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" "),Qe(e,t,i,!1,!1)&&(c+=a+=e.dump));e.tag=l,e.dump="{"+c+"}"}(e,t,e.dump),d&&(e.dump="&ref_"+u+" "+e.dump));else if("[object Array]"===l)o&&0!==e.dump.length?(e.noArrayIndent&&!i&&t>0?Je(e,t-1,e.dump,s):Je(e,t,e.dump,s),d&&(e.dump="&ref_"+u+e.dump)):(!function(e,t,r){var o,s,n,i="",a=e.tag;for(o=0,s=r.length;o<s;o+=1)n=r[o],e.replacer&&(n=e.replacer.call(r,String(o),n)),(Qe(e,t,n,!1,!1)||"undefined"===typeof n&&Qe(e,t,null,!1,!1))&&(""!==i&&(i+=","+(e.condenseFlow?"":" ")),i+=e.dump);e.tag=a,e.dump="["+i+"]"}(e,t,e.dump),d&&(e.dump="&ref_"+u+" "+e.dump));else{if("[object String]"!==l){if("[object Undefined]"===l)return!1;if(e.skipInvalid)return!1;throw new a("unacceptable kind of an object to dump "+l)}"?"!==e.tag&&Ke(e,e.dump,t,n,p)}null!==e.tag&&"?"!==e.tag&&(c=encodeURI("!"===e.tag[0]?e.tag.slice(1):e.tag).replace(/!/g,"%21"),c="!"===e.tag[0]?"!"+c:"tag:yaml.org,2002:"===c.slice(0,18)?"!!"+c.slice(18):"!<"+c+">",e.dump=c+" "+e.dump)}return!0}function et(e,t){var r,o,s=[],n=[];for(tt(e,s,n),r=0,o=n.length;r<o;r+=1)t.duplicates.push(s[n[r]]);t.usedDuplicates=new Array(o)}function tt(e,t,r){var o,s,n;if(null!==e&&"object"===typeof e)if(-1!==(s=t.indexOf(e)))-1===r.indexOf(s)&&r.push(s);else if(t.push(e),Array.isArray(e))for(s=0,n=e.length;s<n;s+=1)tt(e[s],t,r);else for(s=0,n=(o=Object.keys(e)).length;s<n;s+=1)tt(e[o[s]],t,r)}function rt(e,t){return function(){throw new Error("Function yaml."+e+" is removed in js-yaml 4. Use yaml."+t+" instead, which is now safe by default.")}}const ot={Type:g,Schema:f,FAILSAFE_SCHEMA:w,JSON_SCHEMA:R,CORE_SCHEMA:F,DEFAULT_SCHEMA:W,load:Pe.load,loadAll:Pe.loadAll,dump:{dump:function(e,t){var r=new xe(t=t||{});r.noRefs||et(e,r);var o=e;return r.replacer&&(o=r.replacer.call({"":o},"",o)),Qe(r,0,o,!0,!0)?r.dump+"\n":""}}.dump,YAMLException:a,types:{binary:x,float:P,map:b,null:_,pairs:H,set:B,timestamp:D,bool:y,int:O,merge:L,omap:M,seq:E,str:T},safeLoad:rt("safeLoad","load"),safeLoadAll:rt("safeLoadAll","loadAll"),safeDump:rt("safeDump","dump")}},87977:(e,t,r)=>{r.d(t,{A:()=>ae});const{entries:o,setPrototypeOf:s,isFrozen:n,getPrototypeOf:i,getOwnPropertyDescriptor:a}=Object;let{freeze:c,seal:l,create:p}=Object,{apply:u,construct:d}="undefined"!==typeof Reflect&&Reflect;c||(c=function(e){return e}),l||(l=function(e){return e}),u||(u=function(e,t,r){return e.apply(t,r)}),d||(d=function(e,t){return new e(...t)});const g=G(Array.prototype.forEach),m=G(Array.prototype.lastIndexOf),h=G(Array.prototype.pop),f=G(Array.prototype.push),T=G(Array.prototype.splice),E=G(String.prototype.toLowerCase),b=G(String.prototype.toString),w=G(String.prototype.match),_=G(String.prototype.replace),y=G(String.prototype.indexOf),A=G(String.prototype.trim),k=G(Object.prototype.hasOwnProperty),v=G(RegExp.prototype.test),O=(S=TypeError,function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return d(S,t)});var S;function G(e){return function(t){t instanceof RegExp&&(t.lastIndex=0);for(var r=arguments.length,o=new Array(r>1?r-1:0),s=1;s<r;s++)o[s-1]=arguments[s];return u(e,t,o)}}function P(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E;s&&s(e,null);let o=t.length;for(;o--;){let s=t[o];if("string"===typeof s){const e=r(s);e!==s&&(n(t)||(t[o]=e),s=e)}e[s]=!0}return e}function R(e){for(let t=0;t<e.length;t++){k(e,t)||(e[t]=null)}return e}function F(e){const t=p(null);for(const[r,s]of o(e)){k(e,r)&&(Array.isArray(s)?t[r]=R(s):s&&"object"===typeof s&&s.constructor===Object?t[r]=F(s):t[r]=s)}return t}function C(e,t){for(;null!==e;){const r=a(e,t);if(r){if(r.get)return G(r.get);if("function"===typeof r.value)return G(r.value)}e=i(e)}return function(){return null}}const U=c(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),D=c(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),L=c(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),I=c(["animate","color-profile","cursor","discard","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),x=c(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover","mprescripts"]),N=c(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),j=c(["#text"]),M=c(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","popover","popovertarget","popovertargetaction","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","wrap","xmlns","slot"]),q=c(["accent-height","accumulate","additive","alignment-baseline","amplitude","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","exponent","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","intercept","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","slope","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","tablevalues","targetx","targety","transform","transform-origin","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),H=c(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),z=c(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),B=l(/\{\{[\w\W]*|[\w\W]*\}\}/gm),W=l(/<%[\w\W]*|[\w\W]*%>/gm),V=l(/\$\{[\w\W]*/gm),K=l(/^data-[\-\w.\u00B7-\uFFFF]+$/),Y=l(/^aria-[\-\w]+$/),$=l(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),Z=l(/^(?:\w+script|data):/i),J=l(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),X=l(/^html$/i),Q=l(/^[a-z][.\w]*(-[.\w]+)+$/i);var ee=Object.freeze({__proto__:null,ARIA_ATTR:Y,ATTR_WHITESPACE:J,CUSTOM_ELEMENT:Q,DATA_ATTR:K,DOCTYPE_NAME:X,ERB_EXPR:W,IS_ALLOWED_URI:$,IS_SCRIPT_OR_DATA:Z,MUSTACHE_EXPR:B,TMPLIT_EXPR:V});const te=1,re=3,oe=7,se=8,ne=9,ie=function(){return"undefined"===typeof window?null:window};var ae=function e(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ie();const r=t=>e(t);if(r.version="3.2.6",r.removed=[],!t||!t.document||t.document.nodeType!==ne||!t.Element)return r.isSupported=!1,r;let{document:s}=t;const n=s,i=n.currentScript,{DocumentFragment:a,HTMLTemplateElement:l,Node:u,Element:d,NodeFilter:S,NamedNodeMap:G=t.NamedNodeMap||t.MozNamedAttrMap,HTMLFormElement:R,DOMParser:B,trustedTypes:W}=t,V=d.prototype,K=C(V,"cloneNode"),Y=C(V,"remove"),Z=C(V,"nextSibling"),J=C(V,"childNodes"),Q=C(V,"parentNode");if("function"===typeof l){const e=s.createElement("template");e.content&&e.content.ownerDocument&&(s=e.content.ownerDocument)}let ae,ce="";const{implementation:le,createNodeIterator:pe,createDocumentFragment:ue,getElementsByTagName:de}=s,{importNode:ge}=n;let me={afterSanitizeAttributes:[],afterSanitizeElements:[],afterSanitizeShadowDOM:[],beforeSanitizeAttributes:[],beforeSanitizeElements:[],beforeSanitizeShadowDOM:[],uponSanitizeAttribute:[],uponSanitizeElement:[],uponSanitizeShadowNode:[]};r.isSupported="function"===typeof o&&"function"===typeof Q&&le&&void 0!==le.createHTMLDocument;const{MUSTACHE_EXPR:he,ERB_EXPR:fe,TMPLIT_EXPR:Te,DATA_ATTR:Ee,ARIA_ATTR:be,IS_SCRIPT_OR_DATA:we,ATTR_WHITESPACE:_e,CUSTOM_ELEMENT:ye}=ee;let{IS_ALLOWED_URI:Ae}=ee,ke=null;const ve=P({},[...U,...D,...L,...x,...j]);let Oe=null;const Se=P({},[...M,...q,...H,...z]);let Ge=Object.seal(p(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),Pe=null,Re=null,Fe=!0,Ce=!0,Ue=!1,De=!0,Le=!1,Ie=!0,xe=!1,Ne=!1,je=!1,Me=!1,qe=!1,He=!1,ze=!0,Be=!1,We=!0,Ve=!1,Ke={},Ye=null;const $e=P({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]);let Ze=null;const Je=P({},["audio","video","img","source","image","track"]);let Xe=null;const Qe=P({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),et="http://www.w3.org/1998/Math/MathML",tt="http://www.w3.org/2000/svg",rt="http://www.w3.org/1999/xhtml";let ot=rt,st=!1,nt=null;const it=P({},[et,tt,rt],b);let at=P({},["mi","mo","mn","ms","mtext"]),ct=P({},["annotation-xml"]);const lt=P({},["title","style","font","a","script"]);let pt=null;const ut=["application/xhtml+xml","text/html"];let dt=null,gt=null;const mt=s.createElement("form"),ht=function(e){return e instanceof RegExp||e instanceof Function},ft=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!gt||gt!==e){if(e&&"object"===typeof e||(e={}),e=F(e),pt=-1===ut.indexOf(e.PARSER_MEDIA_TYPE)?"text/html":e.PARSER_MEDIA_TYPE,dt="application/xhtml+xml"===pt?b:E,ke=k(e,"ALLOWED_TAGS")?P({},e.ALLOWED_TAGS,dt):ve,Oe=k(e,"ALLOWED_ATTR")?P({},e.ALLOWED_ATTR,dt):Se,nt=k(e,"ALLOWED_NAMESPACES")?P({},e.ALLOWED_NAMESPACES,b):it,Xe=k(e,"ADD_URI_SAFE_ATTR")?P(F(Qe),e.ADD_URI_SAFE_ATTR,dt):Qe,Ze=k(e,"ADD_DATA_URI_TAGS")?P(F(Je),e.ADD_DATA_URI_TAGS,dt):Je,Ye=k(e,"FORBID_CONTENTS")?P({},e.FORBID_CONTENTS,dt):$e,Pe=k(e,"FORBID_TAGS")?P({},e.FORBID_TAGS,dt):F({}),Re=k(e,"FORBID_ATTR")?P({},e.FORBID_ATTR,dt):F({}),Ke=!!k(e,"USE_PROFILES")&&e.USE_PROFILES,Fe=!1!==e.ALLOW_ARIA_ATTR,Ce=!1!==e.ALLOW_DATA_ATTR,Ue=e.ALLOW_UNKNOWN_PROTOCOLS||!1,De=!1!==e.ALLOW_SELF_CLOSE_IN_ATTR,Le=e.SAFE_FOR_TEMPLATES||!1,Ie=!1!==e.SAFE_FOR_XML,xe=e.WHOLE_DOCUMENT||!1,Me=e.RETURN_DOM||!1,qe=e.RETURN_DOM_FRAGMENT||!1,He=e.RETURN_TRUSTED_TYPE||!1,je=e.FORCE_BODY||!1,ze=!1!==e.SANITIZE_DOM,Be=e.SANITIZE_NAMED_PROPS||!1,We=!1!==e.KEEP_CONTENT,Ve=e.IN_PLACE||!1,Ae=e.ALLOWED_URI_REGEXP||$,ot=e.NAMESPACE||rt,at=e.MATHML_TEXT_INTEGRATION_POINTS||at,ct=e.HTML_INTEGRATION_POINTS||ct,Ge=e.CUSTOM_ELEMENT_HANDLING||{},e.CUSTOM_ELEMENT_HANDLING&&ht(e.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(Ge.tagNameCheck=e.CUSTOM_ELEMENT_HANDLING.tagNameCheck),e.CUSTOM_ELEMENT_HANDLING&&ht(e.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(Ge.attributeNameCheck=e.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),e.CUSTOM_ELEMENT_HANDLING&&"boolean"===typeof e.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements&&(Ge.allowCustomizedBuiltInElements=e.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),Le&&(Ce=!1),qe&&(Me=!0),Ke&&(ke=P({},j),Oe=[],!0===Ke.html&&(P(ke,U),P(Oe,M)),!0===Ke.svg&&(P(ke,D),P(Oe,q),P(Oe,z)),!0===Ke.svgFilters&&(P(ke,L),P(Oe,q),P(Oe,z)),!0===Ke.mathMl&&(P(ke,x),P(Oe,H),P(Oe,z))),e.ADD_TAGS&&(ke===ve&&(ke=F(ke)),P(ke,e.ADD_TAGS,dt)),e.ADD_ATTR&&(Oe===Se&&(Oe=F(Oe)),P(Oe,e.ADD_ATTR,dt)),e.ADD_URI_SAFE_ATTR&&P(Xe,e.ADD_URI_SAFE_ATTR,dt),e.FORBID_CONTENTS&&(Ye===$e&&(Ye=F(Ye)),P(Ye,e.FORBID_CONTENTS,dt)),We&&(ke["#text"]=!0),xe&&P(ke,["html","head","body"]),ke.table&&(P(ke,["tbody"]),delete Pe.tbody),e.TRUSTED_TYPES_POLICY){if("function"!==typeof e.TRUSTED_TYPES_POLICY.createHTML)throw O('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');if("function"!==typeof e.TRUSTED_TYPES_POLICY.createScriptURL)throw O('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');ae=e.TRUSTED_TYPES_POLICY,ce=ae.createHTML("")}else void 0===ae&&(ae=function(e,t){if("object"!==typeof e||"function"!==typeof e.createPolicy)return null;let r=null;const o="data-tt-policy-suffix";t&&t.hasAttribute(o)&&(r=t.getAttribute(o));const s="dompurify"+(r?"#"+r:"");try{return e.createPolicy(s,{createHTML:e=>e,createScriptURL:e=>e})}catch(n){return console.warn("TrustedTypes policy "+s+" could not be created."),null}}(W,i)),null!==ae&&"string"===typeof ce&&(ce=ae.createHTML(""));c&&c(e),gt=e}},Tt=P({},[...D,...L,...I]),Et=P({},[...x,...N]),bt=function(e){f(r.removed,{element:e});try{Q(e).removeChild(e)}catch(t){Y(e)}},wt=function(e,t){try{f(r.removed,{attribute:t.getAttributeNode(e),from:t})}catch(o){f(r.removed,{attribute:null,from:t})}if(t.removeAttribute(e),"is"===e)if(Me||qe)try{bt(t)}catch(o){}else try{t.setAttribute(e,"")}catch(o){}},_t=function(e){let t=null,r=null;if(je)e="<remove></remove>"+e;else{const t=w(e,/^[\r\n\t ]+/);r=t&&t[0]}"application/xhtml+xml"===pt&&ot===rt&&(e='<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>'+e+"</body></html>");const o=ae?ae.createHTML(e):e;if(ot===rt)try{t=(new B).parseFromString(o,pt)}catch(i){}if(!t||!t.documentElement){t=le.createDocument(ot,"template",null);try{t.documentElement.innerHTML=st?ce:o}catch(i){}}const n=t.body||t.documentElement;return e&&r&&n.insertBefore(s.createTextNode(r),n.childNodes[0]||null),ot===rt?de.call(t,xe?"html":"body")[0]:xe?t.documentElement:n},yt=function(e){return pe.call(e.ownerDocument||e,e,S.SHOW_ELEMENT|S.SHOW_COMMENT|S.SHOW_TEXT|S.SHOW_PROCESSING_INSTRUCTION|S.SHOW_CDATA_SECTION,null)},At=function(e){return e instanceof R&&("string"!==typeof e.nodeName||"string"!==typeof e.textContent||"function"!==typeof e.removeChild||!(e.attributes instanceof G)||"function"!==typeof e.removeAttribute||"function"!==typeof e.setAttribute||"string"!==typeof e.namespaceURI||"function"!==typeof e.insertBefore||"function"!==typeof e.hasChildNodes)},kt=function(e){return"function"===typeof u&&e instanceof u};function vt(e,t,o){g(e,e=>{e.call(r,t,o,gt)})}const Ot=function(e){let t=null;if(vt(me.beforeSanitizeElements,e,null),At(e))return bt(e),!0;const o=dt(e.nodeName);if(vt(me.uponSanitizeElement,e,{tagName:o,allowedTags:ke}),Ie&&e.hasChildNodes()&&!kt(e.firstElementChild)&&v(/<[/\w!]/g,e.innerHTML)&&v(/<[/\w!]/g,e.textContent))return bt(e),!0;if(e.nodeType===oe)return bt(e),!0;if(Ie&&e.nodeType===se&&v(/<[/\w]/g,e.data))return bt(e),!0;if(!ke[o]||Pe[o]){if(!Pe[o]&&Gt(o)){if(Ge.tagNameCheck instanceof RegExp&&v(Ge.tagNameCheck,o))return!1;if(Ge.tagNameCheck instanceof Function&&Ge.tagNameCheck(o))return!1}if(We&&!Ye[o]){const t=Q(e)||e.parentNode,r=J(e)||e.childNodes;if(r&&t){for(let o=r.length-1;o>=0;--o){const s=K(r[o],!0);s.__removalCount=(e.__removalCount||0)+1,t.insertBefore(s,Z(e))}}}return bt(e),!0}return e instanceof d&&!function(e){let t=Q(e);t&&t.tagName||(t={namespaceURI:ot,tagName:"template"});const r=E(e.tagName),o=E(t.tagName);return!!nt[e.namespaceURI]&&(e.namespaceURI===tt?t.namespaceURI===rt?"svg"===r:t.namespaceURI===et?"svg"===r&&("annotation-xml"===o||at[o]):Boolean(Tt[r]):e.namespaceURI===et?t.namespaceURI===rt?"math"===r:t.namespaceURI===tt?"math"===r&&ct[o]:Boolean(Et[r]):e.namespaceURI===rt?!(t.namespaceURI===tt&&!ct[o])&&!(t.namespaceURI===et&&!at[o])&&!Et[r]&&(lt[r]||!Tt[r]):!("application/xhtml+xml"!==pt||!nt[e.namespaceURI]))}(e)?(bt(e),!0):"noscript"!==o&&"noembed"!==o&&"noframes"!==o||!v(/<\/no(script|embed|frames)/i,e.innerHTML)?(Le&&e.nodeType===re&&(t=e.textContent,g([he,fe,Te],e=>{t=_(t,e," ")}),e.textContent!==t&&(f(r.removed,{element:e.cloneNode()}),e.textContent=t)),vt(me.afterSanitizeElements,e,null),!1):(bt(e),!0)},St=function(e,t,r){if(ze&&("id"===t||"name"===t)&&(r in s||r in mt))return!1;if(Ce&&!Re[t]&&v(Ee,t));else if(Fe&&v(be,t));else if(!Oe[t]||Re[t]){if(!(Gt(e)&&(Ge.tagNameCheck instanceof RegExp&&v(Ge.tagNameCheck,e)||Ge.tagNameCheck instanceof Function&&Ge.tagNameCheck(e))&&(Ge.attributeNameCheck instanceof RegExp&&v(Ge.attributeNameCheck,t)||Ge.attributeNameCheck instanceof Function&&Ge.attributeNameCheck(t))||"is"===t&&Ge.allowCustomizedBuiltInElements&&(Ge.tagNameCheck instanceof RegExp&&v(Ge.tagNameCheck,r)||Ge.tagNameCheck instanceof Function&&Ge.tagNameCheck(r))))return!1}else if(Xe[t]);else if(v(Ae,_(r,_e,"")));else if("src"!==t&&"xlink:href"!==t&&"href"!==t||"script"===e||0!==y(r,"data:")||!Ze[e]){if(Ue&&!v(we,_(r,_e,"")));else if(r)return!1}else;return!0},Gt=function(e){return"annotation-xml"!==e&&w(e,ye)},Pt=function(e){vt(me.beforeSanitizeAttributes,e,null);const{attributes:t}=e;if(!t||At(e))return;const o={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:Oe,forceKeepAttr:void 0};let s=t.length;for(;s--;){const i=t[s],{name:a,namespaceURI:c,value:l}=i,p=dt(a),u=l;let d="value"===a?u:A(u);if(o.attrName=p,o.attrValue=d,o.keepAttr=!0,o.forceKeepAttr=void 0,vt(me.uponSanitizeAttribute,e,o),d=o.attrValue,!Be||"id"!==p&&"name"!==p||(wt(a,e),d="user-content-"+d),Ie&&v(/((--!?|])>)|<\/(style|title)/i,d)){wt(a,e);continue}if(o.forceKeepAttr)continue;if(!o.keepAttr){wt(a,e);continue}if(!De&&v(/\/>/i,d)){wt(a,e);continue}Le&&g([he,fe,Te],e=>{d=_(d,e," ")});const m=dt(e.nodeName);if(St(m,p,d)){if(ae&&"object"===typeof W&&"function"===typeof W.getAttributeType)if(c);else switch(W.getAttributeType(m,p)){case"TrustedHTML":d=ae.createHTML(d);break;case"TrustedScriptURL":d=ae.createScriptURL(d)}if(d!==u)try{c?e.setAttributeNS(c,a,d):e.setAttribute(a,d),At(e)?bt(e):h(r.removed)}catch(n){wt(a,e)}}else wt(a,e)}vt(me.afterSanitizeAttributes,e,null)},Rt=function e(t){let r=null;const o=yt(t);for(vt(me.beforeSanitizeShadowDOM,t,null);r=o.nextNode();)vt(me.uponSanitizeShadowNode,r,null),Ot(r),Pt(r),r.content instanceof a&&e(r.content);vt(me.afterSanitizeShadowDOM,t,null)};return r.sanitize=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=null,s=null,i=null,c=null;if(st=!e,st&&(e="\x3c!--\x3e"),"string"!==typeof e&&!kt(e)){if("function"!==typeof e.toString)throw O("toString is not a function");if("string"!==typeof(e=e.toString()))throw O("dirty is not a string, aborting")}if(!r.isSupported)return e;if(Ne||ft(t),r.removed=[],"string"===typeof e&&(Ve=!1),Ve){if(e.nodeName){const t=dt(e.nodeName);if(!ke[t]||Pe[t])throw O("root node is forbidden and cannot be sanitized in-place")}}else if(e instanceof u)o=_t("\x3c!----\x3e"),s=o.ownerDocument.importNode(e,!0),s.nodeType===te&&"BODY"===s.nodeName||"HTML"===s.nodeName?o=s:o.appendChild(s);else{if(!Me&&!Le&&!xe&&-1===e.indexOf("<"))return ae&&He?ae.createHTML(e):e;if(o=_t(e),!o)return Me?null:He?ce:""}o&&je&&bt(o.firstChild);const l=yt(Ve?e:o);for(;i=l.nextNode();)Ot(i),Pt(i),i.content instanceof a&&Rt(i.content);if(Ve)return e;if(Me){if(qe)for(c=ue.call(o.ownerDocument);o.firstChild;)c.appendChild(o.firstChild);else c=o;return(Oe.shadowroot||Oe.shadowrootmode)&&(c=ge.call(n,c,!0)),c}let p=xe?o.outerHTML:o.innerHTML;return xe&&ke["!doctype"]&&o.ownerDocument&&o.ownerDocument.doctype&&o.ownerDocument.doctype.name&&v(X,o.ownerDocument.doctype.name)&&(p="<!DOCTYPE "+o.ownerDocument.doctype.name+">\n"+p),Le&&g([he,fe,Te],e=>{p=_(p,e," ")}),ae&&He?ae.createHTML(p):p},r.setConfig=function(){ft(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}),Ne=!0},r.clearConfig=function(){gt=null,Ne=!1},r.isValidAttribute=function(e,t,r){gt||ft({});const o=dt(e),s=dt(t);return St(o,s,r)},r.addHook=function(e,t){"function"===typeof t&&f(me[e],t)},r.removeHook=function(e,t){if(void 0!==t){const r=m(me[e],t);return-1===r?void 0:T(me[e],r,1)[0]}return h(me[e])},r.removeHooks=function(e){me[e]=[]},r.removeAllHooks=function(){me={afterSanitizeAttributes:[],afterSanitizeElements:[],afterSanitizeShadowDOM:[],beforeSanitizeAttributes:[],beforeSanitizeElements:[],beforeSanitizeShadowDOM:[],uponSanitizeAttribute:[],uponSanitizeElement:[],uponSanitizeShadowNode:[]}},r}()},97036:(e,t,r)=>{r.d(t,{Octokit:()=>pe});var o=r(80045),s=r(54705);function n(){return"object"===typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"===typeof process&&void 0!==process.version?"Node.js/".concat(process.version.substr(1)," (").concat(process.platform,"; ").concat(process.arch,")"):"<environment undetectable>"}function i(e,t,r,o){if("function"!==typeof r)throw new Error("method for before hook must be a function");return o||(o={}),Array.isArray(t)?t.reverse().reduce((t,r)=>i.bind(null,e,r,t,o),r)():Promise.resolve().then(()=>e.registry[t]?e.registry[t].reduce((e,t)=>t.hook.bind(null,e,o),r)():r(o))}function a(e,t,r,o){const s=o;e.registry[r]||(e.registry[r]=[]),"before"===t&&(o=(e,t)=>Promise.resolve().then(s.bind(null,t)).then(e.bind(null,t))),"after"===t&&(o=(e,t)=>{let r;return Promise.resolve().then(e.bind(null,t)).then(e=>(r=e,s(r,t))).then(()=>r)}),"error"===t&&(o=(e,t)=>Promise.resolve().then(e.bind(null,t)).catch(e=>s(e,t))),e.registry[r].push({hook:o,orig:s})}function c(e,t,r){if(!e.registry[t])return;const o=e.registry[t].map(e=>e.orig).indexOf(r);-1!==o&&e.registry[t].splice(o,1)}const l=Function.bind,p=l.bind(l);function u(e,t,r){const o=p(c,null).apply(null,r?[t,r]:[t]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach(o=>{const s=r?[t,o,r]:[t,o];e[o]=e.api[o]=p(a,null).apply(null,s)})}const d={Singular:function(){const e=Symbol("Singular"),t={registry:{}},r=i.bind(null,t,e);return u(r,t,e),r},Collection:function(){const e={registry:{}},t=i.bind(null,e);return u(t,e),t}};var g=r(89379),m="octokit-endpoint.js/".concat("0.0.0-development"," ").concat(n());function h(e,t){const r=Object.assign({},e);return Object.keys(t).forEach(o=>{!function(e){if("object"!==typeof e||null===e)return!1;if("[object Object]"!==Object.prototype.toString.call(e))return!1;const t=Object.getPrototypeOf(e);if(null===t)return!0;const r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return"function"===typeof r&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}(t[o])?Object.assign(r,{[o]:t[o]}):o in e?r[o]=h(e[o],t[o]):Object.assign(r,{[o]:t[o]})}),r}function f(e){for(const t in e)void 0===e[t]&&delete e[t];return e}function T(e,t,r){if("string"===typeof t){let[e,o]=t.split(" ");r=Object.assign(o?{method:e,url:o}:{url:e},r)}else r=Object.assign({},t);var o;r.headers=(o=r.headers)?Object.keys(o).reduce((e,t)=>(e[t.toLowerCase()]=o[t],e),{}):{},f(r),f(r.headers);const s=h(e||{},r);var n;"/graphql"===r.url&&(e&&null!==(n=e.mediaType.previews)&&void 0!==n&&n.length&&(s.mediaType.previews=e.mediaType.previews.filter(e=>!s.mediaType.previews.includes(e)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(e=>e.replace(/-preview/,"")));return s}var E=/\{[^{}}]+\}/g;function b(e){return e.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g,"").split(/,/)}function w(e,t){const r={__proto__:null};for(const o of Object.keys(e))-1===t.indexOf(o)&&(r[o]=e[o]);return r}function _(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e}).join("")}function y(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function A(e,t,r){return t="+"===e||"#"===e?_(t):y(t),r?y(r)+"="+t:t}function k(e){return void 0!==e&&null!==e}function v(e){return";"===e||"&"===e||"?"===e}function O(e,t){var r=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(e,o,s){if(o){let e="";const s=[];if(-1!==r.indexOf(o.charAt(0))&&(e=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(r){var o=/([^:\*]*)(?::(\d+)|(\*))?/.exec(r);s.push(function(e,t,r,o){var s=e[r],n=[];if(k(s)&&""!==s)if("string"===typeof s||"number"===typeof s||"boolean"===typeof s)s=s.toString(),o&&"*"!==o&&(s=s.substring(0,parseInt(o,10))),n.push(A(t,s,v(t)?r:""));else if("*"===o)Array.isArray(s)?s.filter(k).forEach(function(e){n.push(A(t,e,v(t)?r:""))}):Object.keys(s).forEach(function(e){k(s[e])&&n.push(A(t,s[e],e))});else{const e=[];Array.isArray(s)?s.filter(k).forEach(function(r){e.push(A(t,r))}):Object.keys(s).forEach(function(r){k(s[r])&&(e.push(y(r)),e.push(A(t,s[r].toString())))}),v(t)?n.push(y(r)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===t?k(s)&&n.push(y(r)):""!==s||"&"!==t&&"?"!==t?""===s&&n.push(""):n.push(y(r)+"=");return n}(t,e,o[1],o[2]||o[3]))}),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==s.length?e:"")+s.join(n)}return s.join(",")}return _(s)}),"/"===e?e:e.replace(/\/$/,"")}function S(e){let t,r=e.method.toUpperCase(),o=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),n=w(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const t=e.match(E);return t?t.map(b).reduce((e,t)=>e.concat(t),[]):[]}(o);var a;o=(a=o,{expand:O.bind(null,a)}).expand(n),/^http/.test(o)||(o=e.baseUrl+o);const c=w(n,Object.keys(e).filter(e=>i.includes(e)).concat("baseUrl"));var l;if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,"application/vnd$1$2.".concat(e.mediaType.format))).join(",")),o.endsWith("/graphql")&&null!==(l=e.mediaType.previews)&&void 0!==l&&l.length)){const t=s.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g)||[];s.accept=t.concat(e.mediaType.previews).map(t=>{const r=e.mediaType.format?".".concat(e.mediaType.format):"+json";return"application/vnd.github.".concat(t,"-preview").concat(r)}).join(",")}return["GET","HEAD"].includes(r)?o=function(e,t){const r=/\?/.test(e)?"&":"?",o=Object.keys(t);return 0===o.length?e:e+r+o.map(e=>"q"===e?"q="+t.q.split("+").map(encodeURIComponent).join("+"):"".concat(e,"=").concat(encodeURIComponent(t[e]))).join("&")}(o,c):"data"in c?t=c.data:Object.keys(c).length&&(t=c),s["content-type"]||"undefined"===typeof t||(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&"undefined"===typeof t&&(t=""),Object.assign({method:r,url:o,headers:s},"undefined"!==typeof t?{body:t}:null,e.request?{request:e.request}:null)}function G(e,t,r){return S(T(e,t,r))}var P=function e(t,r){const o=T(t,r),s=G.bind(null,o);return Object.assign(s,{DEFAULTS:o,defaults:e.bind(null,o),merge:T.bind(null,o),parse:S})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":m},mediaType:{format:""}}),R=r(28998);class F extends Error{constructor(e,t,r){super(e),(0,s.A)(this,"name",void 0),(0,s.A)(this,"status",void 0),(0,s.A)(this,"request",void 0),(0,s.A)(this,"response",void 0),this.name="HttpError",this.status=Number.parseInt(t),Number.isNaN(this.status)&&(this.status=0),"response"in r&&(this.response=r.response);const o=Object.assign({},r.request);r.request.headers.authorization&&(o.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/(?<! ) .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o}}async function C(e){var t,r,o;const s=(null===(t=e.request)||void 0===t?void 0:t.fetch)||globalThis.fetch;if(!s)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const n=(null===(r=e.request)||void 0===r?void 0:r.log)||console,i=!1!==(null===(o=e.request)||void 0===o?void 0:o.parseSuccessResponseBody),a=function(e){if("object"!==typeof e||null===e)return!1;if("[object Object]"!==Object.prototype.toString.call(e))return!1;const t=Object.getPrototypeOf(e);if(null===t)return!0;const r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return"function"===typeof r&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,c=Object.fromEntries(Object.entries(e.headers).map(e=>{let[t,r]=e;return[t,String(r)]}));let l;try{var p,u;l=await s(e.url,(0,g.A)({method:e.method,body:a,redirect:null===(p=e.request)||void 0===p?void 0:p.redirect,headers:c,signal:null===(u=e.request)||void 0===u?void 0:u.signal},e.body&&{duplex:"half"}))}catch(T){let t="Unknown Error";if(T instanceof Error){if("AbortError"===T.name)throw T.status=500,T;t=T.message,"TypeError"===T.name&&"cause"in T&&(T.cause instanceof Error?t=T.cause.message:"string"===typeof T.cause&&(t=T.cause))}const r=new F(t,500,{request:e});throw r.cause=T,r}const d=l.status,m=l.url,h={};for(const[g,E]of l.headers)h[g]=E;const f={url:m,status:d,headers:h,data:""};if("deprecation"in h){const t=h.link&&h.link.match(/<([^<>]+)>; rel="deprecation"/),r=t&&t.pop();n.warn('[@octokit/request] "'.concat(e.method," ").concat(e.url,'" is deprecated. It is scheduled to be removed on ').concat(h.sunset).concat(r?". See ".concat(r):""))}if(204===d||205===d)return f;if("HEAD"===e.method){if(d<400)return f;throw new F(l.statusText,d,{response:f,request:e})}if(304===d)throw f.data=await U(l),new F("Not modified",d,{response:f,request:e});if(d>=400)throw f.data=await U(l),new F(function(e){if("string"===typeof e)return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const t="documentation_url"in e?" - ".concat(e.documentation_url):"";return Array.isArray(e.errors)?"".concat(e.message,": ").concat(e.errors.map(e=>JSON.stringify(e)).join(", ")).concat(t):"".concat(e.message).concat(t)}return"Unknown error: ".concat(JSON.stringify(e))}(f.data),d,{response:f,request:e});return f.data=i?await U(l):l.body,f}async function U(e){var t;const r=e.headers.get("content-type");if(!r)return e.text().catch(()=>"");const o=(0,R.xL)(r);if(!function(e){return"application/json"===e.type||"application/scim+json"===e.type}(o))return o.type.startsWith("text/")||"utf-8"===(null===(t=o.parameters.charset)||void 0===t?void 0:t.toLowerCase())?e.text().catch(()=>""):e.arrayBuffer().catch(()=>new ArrayBuffer(0));{let t="";try{return t=await e.text(),JSON.parse(t)}catch(s){return t}}}var D=function e(t,r){const o=t.defaults(r);return Object.assign(function(t,r){const s=o.merge(t,r);if(!s.request||!s.request.hook)return C(o.parse(s));const n=(e,t)=>C(o.parse(o.merge(e,t)));return Object.assign(n,{endpoint:o,defaults:e.bind(null,o)}),s.request.hook(n,s)},{endpoint:o,defaults:e.bind(null,o)})}(P,{headers:{"user-agent":"octokit-request.js/".concat("10.0.3"," ").concat(n())}});var L=class extends Error{constructor(e,t,r){super("Request failed due to following response errors:\n"+r.errors.map(e=>" - ".concat(e.message)).join("\n")),(0,s.A)(this,"name","GraphqlResponseError"),(0,s.A)(this,"errors",void 0),(0,s.A)(this,"data",void 0),this.request=e,this.headers=t,this.response=r,this.errors=r.errors,this.data=r.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},I=["method","baseUrl","url","headers","request","query","mediaType","operationName"],x=["query","method","url"],N=/\/api\/v3\/?$/;function j(e,t){const r=e.defaults(t);return Object.assign((e,t)=>function(e,t,r){if(r){if("string"===typeof t&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const e in r)if(x.includes(e))return Promise.reject(new Error('[@octokit/graphql] "'.concat(e,'" cannot be used as variable name')))}const o="string"===typeof t?Object.assign({query:t},r):t,s=Object.keys(o).reduce((e,t)=>I.includes(t)?(e[t]=o[t],e):(e.variables||(e.variables={}),e.variables[t]=o[t],e),{}),n=o.baseUrl||e.endpoint.DEFAULTS.baseUrl;return N.test(n)&&(s.url=n.replace(N,"/api/graphql")),e(s).then(e=>{if(e.data.errors){const t={};for(const r of Object.keys(e.headers))t[r]=e.headers[r];throw new L(s,t,e.data)}return e.data.data})}(r,e,t),{defaults:j.bind(null,r),endpoint:r.endpoint})}j(D,{headers:{"user-agent":"octokit-graphql.js/".concat("0.0.0-development"," ").concat(n())},method:"POST",url:"/graphql"});var M="(?:[a-zA-Z0-9_-]+)",q=new RegExp("^".concat(M).concat("\\.").concat(M).concat("\\.").concat(M,"$")),H=q.test.bind(q);async function z(e){const t=H(e),r=e.startsWith("v1.")||e.startsWith("ghs_"),o=e.startsWith("ghu_");return{type:"token",token:e,tokenType:t?"app":r?"installation":o?"user-to-server":"oauth"}}async function B(e,t,r,o){const s=t.endpoint.merge(r,o);return s.headers.authorization=function(e){return 3===e.split(/\./).length?"bearer ".concat(e):"token ".concat(e)}(e),t(s)}var W=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!==typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(z.bind(null,e),{hook:B.bind(null,e)})};const V="7.0.3",K=["authStrategy"],Y=()=>{},$=console.warn.bind(console),Z=console.error.bind(console);const J="octokit-core.js/".concat(V," ").concat(n());class X{static defaults(e){return class extends(this){constructor(){const t=(arguments.length<=0?void 0:arguments[0])||{};super("function"!==typeof e?Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:"".concat(t.userAgent," ").concat(e.userAgent)}:null):e(t))}}}static plugin(){var e;const t=this.plugins;for(var r=arguments.length,o=new Array(r),n=0;n<r;n++)o[n]=arguments[n];return e=class extends(this){},(0,s.A)(e,"plugins",t.concat(o.filter(e=>!t.includes(e)))),e}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,s.A)(this,"request",void 0),(0,s.A)(this,"graphql",void 0),(0,s.A)(this,"log",void 0),(0,s.A)(this,"hook",void 0),(0,s.A)(this,"auth",void 0);const t=new d.Collection,r={baseUrl:D.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};var n;if(r.headers["user-agent"]=e.userAgent?"".concat(e.userAgent," ").concat(J):J,e.baseUrl&&(r.baseUrl=e.baseUrl),e.previews&&(r.mediaType.previews=e.previews),e.timeZone&&(r.headers["time-zone"]=e.timeZone),this.request=D.defaults(r),this.graphql=(n=this.request,j(n,{method:"POST",url:"/graphql"})).defaults(r),this.log=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return"function"!==typeof e.debug&&(e.debug=Y),"function"!==typeof e.info&&(e.info=Y),"function"!==typeof e.warn&&(e.warn=$),"function"!==typeof e.error&&(e.error=Z),e}(e.log),this.hook=t,e.authStrategy){const{authStrategy:r}=e,s=(0,o.A)(e,K),n=r(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:s},e.auth));t.wrap("request",n.hook),this.auth=n}else if(e.auth){const r=W(e.auth);t.wrap("request",r.hook),this.auth=r}else this.auth=async()=>({type:"unauthenticated"});const i=this.constructor;for(let o=0;o<i.plugins.length;++o)Object.assign(this,i.plugins[o](this,e))}}(0,s.A)(X,"VERSION",V),(0,s.A)(X,"plugins",[]);function Q(e){e.hook.wrap("request",(t,r)=>{e.log.debug("request",r);const o=Date.now(),s=e.request.endpoint.parse(r),n=s.url.replace(r.baseUrl,"");return t(r).then(t=>{const r=t.headers["x-github-request-id"];return e.log.info("".concat(s.method," ").concat(n," - ").concat(t.status," with id ").concat(r," in ").concat(Date.now()-o,"ms")),t}).catch(t=>{var r;const i=(null===(r=t.response)||void 0===r?void 0:r.headers["x-github-request-id"])||"UNKNOWN";throw e.log.error("".concat(s.method," ").concat(n," - ").concat(t.status," with id ").concat(i," in ").concat(Date.now()-o,"ms")),t})})}Q.VERSION="6.0.0";function ee(e,t,r){const o="function"===typeof t?t.endpoint(r):e.request.endpoint(t,r),s="function"===typeof t?t:e.request,n=o.method,i=o.headers;let a=o.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};try{const e=function(e){if(!e.data)return(0,g.A)((0,g.A)({},e),{},{data:[]});if(!("total_count"in e.data)&&!("total_commits"in e.data)||"url"in e.data)return e;const t=e.data.incomplete_results,r=e.data.repository_selection,o=e.data.total_count,s=e.data.total_commits;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count,delete e.data.total_commits;const n=Object.keys(e.data)[0],i=e.data[n];return e.data=i,"undefined"!==typeof t&&(e.data.incomplete_results=t),"undefined"!==typeof r&&(e.data.repository_selection=r),e.data.total_count=o,e.data.total_commits=s,e}(await s({method:n,url:a,headers:i}));if(a=((e.headers.link||"").match(/<([^<>]+)>;\s*rel="next"/)||[])[1],!a&&"total_commits"in e.data){const t=new URL(e.url),r=t.searchParams,o=parseInt(r.get("page")||"1",10);o*parseInt(r.get("per_page")||"250",10)<e.data.total_commits&&(r.set("page",String(o+1)),a=t.toString())}return{value:e}}catch(e){if(409!==e.status)throw e;return a="",{value:{status:200,headers:{},data:[]}}}}})}}function te(e,t,r,o){return"function"===typeof r&&(o=r,r=void 0),re(e,[],ee(e,t,r)[Symbol.asyncIterator](),o)}function re(e,t,r,o){return r.next().then(s=>{if(s.done)return t;let n=!1;return t=t.concat(o?o(s.value,function(){n=!0}):s.value.data),n?t:re(e,t,r,o)})}Object.assign(te,{iterator:ee});function oe(e){return{paginate:Object.assign(te.bind(null,e),{iterator:ee.bind(null,e)})}}oe.VERSION="0.0.0-development";const se="16.0.0";var ne={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addRepoAccessToSelfHostedRunnerGroupInOrg:["PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createHostedRunnerForOrg:["POST /orgs/{org}/actions/hosted-runners"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteHostedRunnerForOrg:["DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getHostedRunnerForOrg:["GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],getHostedRunnersGithubOwnedImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/github-owned"],getHostedRunnersLimitsForOrg:["GET /orgs/{org}/actions/hosted-runners/limits"],getHostedRunnersMachineSpecsForOrg:["GET /orgs/{org}/actions/hosted-runners/machine-sizes"],getHostedRunnersPartnerImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/partner"],getHostedRunnersPlatformsForOrg:["GET /orgs/{org}/actions/hosted-runners/platforms"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listGithubHostedRunnersInGroupForOrg:["GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners"],listHostedRunnersForOrg:["GET /orgs/{org}/actions/hosted-runners"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateHostedRunnerForOrg:["PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubBillingUsageReportOrg:["GET /organizations/{org}/settings/billing/usage"],getGithubBillingUsageReportUser:["GET /users/{username}/settings/billing/usage"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},campaigns:{createCampaign:["POST /orgs/{org}/campaigns"],deleteCampaign:["DELETE /orgs/{org}/campaigns/{campaign_number}"],getCampaignSummary:["GET /orgs/{org}/campaigns/{campaign_number}"],listOrgCampaigns:["GET /orgs/{org}/campaigns"],updateCampaign:["PATCH /orgs/{org}/campaigns/{campaign_number}"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{commitAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"],createAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],createVariantAnalysis:["POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"],deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],deleteCodeqlDatabase:["DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getAutofix:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],getVariantAnalysis:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"],getVariantAnalysisRepoTask:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codeSecurity:{attachConfiguration:["POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"],attachEnterpriseConfiguration:["POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"],createConfiguration:["POST /orgs/{org}/code-security/configurations"],createConfigurationForEnterprise:["POST /enterprises/{enterprise}/code-security/configurations"],deleteConfiguration:["DELETE /orgs/{org}/code-security/configurations/{configuration_id}"],deleteConfigurationForEnterprise:["DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],detachConfiguration:["DELETE /orgs/{org}/code-security/configurations/detach"],getConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}"],getConfigurationForRepository:["GET /repos/{owner}/{repo}/code-security-configuration"],getConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations"],getConfigurationsForOrg:["GET /orgs/{org}/code-security/configurations"],getDefaultConfigurations:["GET /orgs/{org}/code-security/configurations/defaults"],getDefaultConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/defaults"],getRepositoriesForConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"],getRepositoriesForEnterpriseConfiguration:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"],getSingleConfigurationForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],setConfigurationAsDefault:["PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"],setConfigurationAsDefaultForEnterprise:["PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"],updateConfiguration:["PATCH /orgs/{org}/code-security/configurations/{configuration_id}"],updateEnterpriseConfiguration:["PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],copilotMetricsForOrganization:["GET /orgs/{org}/copilot/metrics"],copilotMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"]},credentials:{revoke:["POST /credentials/revoke"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},hostedCompute:{createNetworkConfigurationForOrg:["POST /orgs/{org}/settings/network-configurations"],deleteNetworkConfigurationFromOrg:["DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkConfigurationForOrg:["GET /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkSettingsForOrg:["GET /orgs/{org}/settings/network-settings/{network_settings_id}"],listNetworkConfigurationsForOrg:["GET /orgs/{org}/settings/network-configurations"],updateNetworkConfigurationForOrg:["PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],addSubIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listSubIssues:["GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeSubIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"],reprioritizeSubIssue:["PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team"}],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createIssueType:["POST /orgs/{org}/issue-types"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteIssueType:["DELETE /orgs/{org}/issue-types/{issue_type_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}",{},{deprecated:"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization"}],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getOrgRulesetHistory:["GET /orgs/{org}/rulesets/{ruleset_id}/history"],getOrgRulesetVersion:["GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listAttestations:["GET /orgs/{org}/attestations/{subject_digest}"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listIssueTypes:["GET /orgs/{org}/issue-types"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers",{},{deprecated:"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams"}],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team"}],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateIssueType:["PUT /orgs/{org}/issue-types/{issue_type_id}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},privateRegistries:{createOrgPrivateRegistry:["POST /orgs/{org}/private-registries"],deleteOrgPrivateRegistry:["DELETE /orgs/{org}/private-registries/{secret_name}"],getOrgPrivateRegistry:["GET /orgs/{org}/private-registries/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/private-registries/public-key"],listOrgPrivateRegistries:["GET /orgs/{org}/private-registries"],updateOrgPrivateRegistry:["PATCH /orgs/{org}/private-registries/{secret_name}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAttestation:["POST /repos/{owner}/{repo}/attestations"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesetHistory:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history"],getRepoRulesetVersion:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAttestations:["GET /repos/{owner}/{repo}/attestations/{subject_digest}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues",{},{deprecated:"octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests"}],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{createPushProtectionBypass:["POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"],getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],getScanHistory:["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getById:["GET /user/{account_id}"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listAttestations:["GET /users/{username}/attestations/{subject_digest}"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};const ie=new Map;for(const[ue,de]of Object.entries(ne))for(const[e,t]of Object.entries(de)){const[r,o,s]=t,[n,i]=r.split(/ /),a=Object.assign({method:n,url:i},o);ie.has(ue)||ie.set(ue,new Map),ie.get(ue).set(e,{scope:ue,methodName:e,endpointDefaults:a,decorations:s})}const ae={has(e,t){let{scope:r}=e;return ie.get(r).has(t)},getOwnPropertyDescriptor(e,t){return{value:this.get(e,t),configurable:!0,writable:!0,enumerable:!0}},defineProperty:(e,t,r)=>(Object.defineProperty(e.cache,t,r),!0),deleteProperty:(e,t)=>(delete e.cache[t],!0),ownKeys(e){let{scope:t}=e;return[...ie.get(t).keys()]},set:(e,t,r)=>e.cache[t]=r,get(e,t){let{octokit:r,scope:o,cache:s}=e;if(s[t])return s[t];const n=ie.get(o).get(t);if(!n)return;const{endpointDefaults:i,decorations:a}=n;return s[t]=a?function(e,t,r,o,s){const n=e.request.defaults(o);function i(){let o=n.endpoint.merge(...arguments);if(s.mapToData)return o=Object.assign({},o,{data:o[s.mapToData],[s.mapToData]:void 0}),n(o);if(s.renamed){const[o,n]=s.renamed;e.log.warn("octokit.".concat(t,".").concat(r,"() has been renamed to octokit.").concat(o,".").concat(n,"()"))}if(s.deprecated&&e.log.warn(s.deprecated),s.renamedParameters){const o=n.endpoint.merge(...arguments);for(const[n,i]of Object.entries(s.renamedParameters))n in o&&(e.log.warn('"'.concat(n,'" parameter is deprecated for "octokit.').concat(t,".").concat(r,'()". Use "').concat(i,'" instead')),i in o||(o[i]=o[n]),delete o[n]);return n(o)}return n(...arguments)}return Object.assign(i,n)}(r,o,t,i,a):r.request.defaults(i),s[t]}};function ce(e){const t={};for(const r of ie.keys())t[r]=new Proxy({octokit:e,scope:r,cache:{}},ae);return t}function le(e){const t=ce(e);return(0,g.A)((0,g.A)({},t),{},{rest:t})}le.VERSION=se;const pe=X.plugin(Q,le,oe).defaults({userAgent:"octokit-rest.js/".concat("22.0.0")})}}]);
//# sourceMappingURL=848.ed55a683.chunk.js.map