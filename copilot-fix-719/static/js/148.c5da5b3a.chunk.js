"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[148],{6735:(e,t,s)=>{s.d(t,{ld:()=>n,lm:()=>o,yl:()=>a});const n={MASCOT_HELPER:"altText.mascot.helper",MASCOT_ICON:"altText.mascot.icon",MASCOT_EXAMINING:"altText.mascot.examining",MASCOT_CELEBRATING:"altText.mascot.celebrating",MASCOT_CODING:"altText.mascot.coding",MASCOT_COMMUNITY:"altText.mascot.community",AVATAR_USER:"altText.avatar.user",AVATAR_ORGANIZATION:"altText.avatar.organization",AVATAR_PERSONAL:"altText.avatar.personal",AVATAR_PROFILE:"altText.avatar.profile",ICON_SGEX:"altText.icon.sgex",ICON_BUG_REPORT:"altText.icon.bugReport",ICON_SECURITY:"altText.icon.security",ICON_ACTION:"altText.icon.action",IMAGE_AUTHORING:"altText.image.authoring",IMAGE_COLLABORATION:"altText.image.collaboration",IMAGE_WORKFLOW:"altText.image.workflow",LOGO_SGEX:"altText.logo.sgex",LOGO_WHO:"altText.logo.who"};function o(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};try{const o=e(t,n);return o===t?s:o}catch(o){return console.warn("Alt text translation failed for key: ".concat(t),o),s}}function a(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"user";if(!t)return o(e,n.AVATAR_PROFILE,"Profile avatar");const a=t.name||t.display_name||t.login;return o(e,"organization"===s?n.AVATAR_ORGANIZATION:n.AVATAR_USER,"".concat(a," avatar"),{name:a})}},8292:(e,t,s)=>{s.d(t,{A:()=>k});var n=s(65043),o=s(74117),a=s(12602),r=s(65240),i=s(88691),l=s(5452);const c=new class{constructor(){this.logger=l.A.getLogger("CacheManagementService")}clearAllCache(){try{this.logger.info("Starting complete cache clear operation");const e=r.A.clearAllCaches();return this.logger.debug("Repository cache cleared",{success:e}),i.default.clearAllBranchContext(),this.logger.debug("Branch context cleared"),this.clearAllStagingGrounds(),this.logger.debug("Staging ground data cleared"),this.clearOtherSGEXData(),this.logger.debug("Other SGEX data cleared"),this.logger.info("Complete cache clear operation completed successfully"),!0}catch(e){return this.logger.error("Error during cache clear operation",{error:e.message}),console.error("Error clearing cache:",e),!1}}clearAllStagingGrounds(){try{const e=Object.keys(localStorage);e.filter(e=>e.startsWith("sgex_staging_")).forEach(e=>{localStorage.removeItem(e),this.logger.debug("Removed staging ground",{key:e})});return e.filter(e=>e.startsWith("sgex_staging_history_")).forEach(e=>{localStorage.removeItem(e),this.logger.debug("Removed staging ground history",{key:e})}),!0}catch(e){return this.logger.error("Error clearing staging grounds",{error:e.message}),console.warn("Error clearing staging grounds:",e),!1}}clearOtherSGEXData(){try{const e=Object.keys(localStorage);e.filter(e=>e.startsWith("sgex_")&&!e.startsWith("sgex_repo_cache_")&&!e.startsWith("sgex_staging_")).forEach(e=>{localStorage.removeItem(e),this.logger.debug("Removed other SGEX data",{key:e})});const t=Object.keys(sessionStorage);return t.filter(e=>e.startsWith("sgex_")&&"sgex_branch_context"!==e).forEach(e=>{sessionStorage.removeItem(e),this.logger.debug("Removed SGEX session data",{key:e})}),!0}catch(e){return this.logger.error("Error clearing other SGEX data",{error:e.message}),console.warn("Error clearing other SGEX data:",e),!1}}getCacheInfo(){try{const t={repositoryCache:{count:0,keys:[]},branchContext:{hasData:!1,repositoryCount:0},stagingGround:{count:0,keys:[]},other:{count:0,keys:[]}},s=Object.keys(localStorage);t.repositoryCache.keys=s.filter(e=>e.startsWith("sgex_repo_cache_")),t.repositoryCache.count=t.repositoryCache.keys.length,t.stagingGround.keys=s.filter(e=>e.startsWith("sgex_staging_")||e.startsWith("sgex_staging_history_")),t.stagingGround.count=t.stagingGround.keys.length,t.other.keys=s.filter(e=>e.startsWith("sgex_")&&!e.startsWith("sgex_repo_cache_")&&!e.startsWith("sgex_staging_")),t.other.count=t.other.keys.length;try{const e=sessionStorage.getItem("sgex_branch_context");if(e){const s=JSON.parse(e);t.branchContext.hasData=!0,t.branchContext.repositoryCount=Object.keys(s).length}}catch(e){}return t}catch(t){return this.logger.error("Error getting cache info",{error:t.message}),null}}getUncommittedWork(){try{const e=[],t=Object.keys(localStorage);return t.filter(e=>e.startsWith("sgex_staging_")&&!e.includes("_history_")).forEach(t=>{try{const s=JSON.parse(localStorage.getItem(t));if(s&&s.files&&s.files.length>0){const n=t.replace("sgex_staging_","").split("_"),o=n.pop(),a=n.join("_");e.push({repository:a,branch:o,fileCount:s.files.length,lastModified:s.timestamp?new Date(s.timestamp):null,message:s.message||""})}}catch(s){}}),e}catch(e){return this.logger.error("Error checking uncommitted work",{error:e.message}),[]}}};var d=s(61528),u=s(50404),h=s(93156),g=s(70579);const m=e=>{let{onClose:t}=e;const[s,o]=(0,n.useState)({issues:[],pullRequests:[]}),[a,r]=(0,n.useState)(!0),[i,l]=(0,n.useState)(null),[c,h]=(0,n.useState)("issues"),[m,p]=(0,n.useState)(!1);(0,n.useEffect)(()=>{b()},[]);const b=async()=>{try{r(!0),l(null);const e=await d.A.getTrackedItems();o(e)}catch(e){console.error("Failed to load tracked items:",e),l("Failed to load tracked items")}finally{r(!1)}},f=e=>new Date(e).toLocaleDateString(void 0,{year:"numeric",month:"short",day:"numeric"}),v=e=>{switch(e){case"open":return"#28a745";case"closed":return"#cb2431";case"merged":return"#6f42c1";default:return"#6a737d"}};return a?(0,g.jsx)("div",{className:"tracked-items-modal-overlay",children:(0,g.jsxs)("div",{className:"tracked-items-modal",children:[(0,g.jsxs)("div",{className:"tracked-items-header",children:[(0,g.jsx)("h2",{children:"Tracked Items"}),(0,g.jsx)("button",{onClick:t,className:"tracked-items-close",children:"\xd7"})]}),(0,g.jsxs)("div",{className:"tracked-items-loading",children:[(0,g.jsx)("div",{className:"loading-spinner"}),(0,g.jsx)("p",{children:"Loading tracked items..."})]})]})}):(0,g.jsx)("div",{className:"tracked-items-modal-overlay",children:(0,g.jsxs)("div",{className:"tracked-items-modal",children:[(0,g.jsxs)("div",{className:"tracked-items-header",children:[(0,g.jsx)("h2",{children:"Tracked Items"}),(0,g.jsxs)("div",{className:"tracked-items-header-actions",children:[u.A.isAuth()&&(0,g.jsxs)("button",{onClick:async()=>{if(u.A.isAuth())try{p(!0),await d.A.syncTrackedItems(),await b()}catch(e){console.error("Failed to sync tracked items:",e),l("Failed to sync tracked items")}finally{p(!1)}else l("Authentication required to sync items")},className:"tracked-items-sync",disabled:m,title:"Sync with GitHub to update status",children:[m?"\ud83d\udd04":"\u21bb"," ",m?"Syncing...":"Sync"]}),(0,g.jsx)("button",{onClick:t,className:"tracked-items-close",children:"\xd7"})]})]}),i&&(0,g.jsxs)("div",{className:"tracked-items-error",children:[i,(0,g.jsx)("button",{onClick:()=>l(null),children:"\xd7"})]}),(0,g.jsxs)("div",{className:"tracked-items-tabs",children:[(0,g.jsxs)("button",{className:"tracked-items-tab ".concat("issues"===c?"active":""),onClick:()=>h("issues"),children:["Issues (",s.issues.length,")"]}),(0,g.jsxs)("button",{className:"tracked-items-tab ".concat("pullRequests"===c?"active":""),onClick:()=>h("pullRequests"),children:["Pull Requests (",s.pullRequests.length,")"]})]}),(0,g.jsxs)("div",{className:"tracked-items-content",children:["issues"===c&&(0,g.jsx)("div",{className:"tracked-items-list",children:0===s.issues.length?(0,g.jsxs)("div",{className:"tracked-items-empty",children:[(0,g.jsx)("p",{children:"No tracked issues yet."}),(0,g.jsx)("p",{children:"Issues you create while authenticated will appear here."})]}):s.issues.map(e=>(0,g.jsxs)("div",{className:"tracked-item",children:[(0,g.jsxs)("div",{className:"tracked-item-header",children:[(0,g.jsx)("div",{className:"tracked-item-title",children:(0,g.jsxs)("a",{href:e.html_url,target:"_blank",rel:"noopener noreferrer",className:"tracked-item-link",children:["#",e.number," ",e.title]})}),(0,g.jsxs)("div",{className:"tracked-item-actions",children:[(0,g.jsx)("span",{className:"tracked-item-state",style:{backgroundColor:v(e.state)},children:e.state}),(0,g.jsx)("button",{onClick:()=>(async e=>{try{await d.A.removeTrackedIssue(e),await b()}catch(t){console.error("Failed to remove tracked issue:",t),l("Failed to remove tracked issue")}})(e.number),className:"tracked-item-remove",title:"Stop tracking this issue",children:"\xd7"})]})]}),(0,g.jsxs)("div",{className:"tracked-item-meta",children:[(0,g.jsx)("span",{className:"tracked-item-repo",children:e.repository}),(0,g.jsxs)("span",{className:"tracked-item-date",children:["Created ",f(e.created_at)]})]}),e.labels&&e.labels.length>0&&(0,g.jsx)("div",{className:"tracked-item-labels",children:e.labels.map((e,t)=>(0,g.jsx)("span",{className:"tracked-item-label",style:{backgroundColor:"#".concat(e.color)},children:e.name},t))})]},e.id))}),"pullRequests"===c&&(0,g.jsx)("div",{className:"tracked-items-list",children:0===s.pullRequests.length?(0,g.jsxs)("div",{className:"tracked-items-empty",children:[(0,g.jsx)("p",{children:"No tracked pull requests yet."}),(0,g.jsx)("p",{children:"PRs related to your tracked issues will appear here automatically."})]}):s.pullRequests.map(e=>(0,g.jsxs)("div",{className:"tracked-item",children:[(0,g.jsxs)("div",{className:"tracked-item-header",children:[(0,g.jsx)("div",{className:"tracked-item-title",children:(0,g.jsxs)("a",{href:e.html_url,target:"_blank",rel:"noopener noreferrer",className:"tracked-item-link",children:["#",e.number," ",e.title]})}),(0,g.jsxs)("div",{className:"tracked-item-actions",children:[(0,g.jsx)("span",{className:"tracked-item-state",style:{backgroundColor:v(e.state)},children:e.state}),(0,g.jsx)("button",{onClick:()=>(async e=>{try{await d.A.removeTrackedPR(e),await b()}catch(t){console.error("Failed to remove tracked PR:",t),l("Failed to remove tracked PR")}})(e.number),className:"tracked-item-remove",title:"Stop tracking this PR",children:"\xd7"})]})]}),(0,g.jsxs)("div",{className:"tracked-item-meta",children:[(0,g.jsx)("span",{className:"tracked-item-repo",children:e.repository}),(0,g.jsxs)("span",{className:"tracked-item-date",children:["Created ",f(e.created_at)]})]}),e.linkedIssues&&e.linkedIssues.length>0&&(0,g.jsxs)("div",{className:"tracked-item-linked",children:["Linked to issues: ",e.linkedIssues.map(e=>"#".concat(e)).join(", ")]})]},e.id))})]}),(0,g.jsx)("div",{className:"tracked-items-footer",children:(0,g.jsxs)("p",{className:"tracked-items-help",children:["Items are tracked locally in your browser.",u.A.isAuth()?" Use sync to update status from GitHub.":" Login to sync status with GitHub."]})})]})})};var p=s(89379);const b=[{code:"en",name:"language.english",flag:"\ud83c\uddfa\ud83c\uddf8"},{code:"fr",name:"language.french",flag:"\ud83c\uddeb\ud83c\uddf7"},{code:"es",name:"language.spanish",flag:"\ud83c\uddea\ud83c\uddf8"},{code:"ar",name:"language.arabic",flag:"\ud83c\uddf8\ud83c\udde6"},{code:"zh",name:"language.chinese",flag:"\ud83c\udde8\ud83c\uddf3"},{code:"ru",name:"language.russian",flag:"\ud83c\uddf7\ud83c\uddfa"}],f=[{code:"de",name:"Deutsch",englishName:"German",flag:"\ud83c\udde9\ud83c\uddea"},{code:"it",name:"Italiano",englishName:"Italian",flag:"\ud83c\uddee\ud83c\uddf9"},{code:"pt",name:"Portugu\xeas",englishName:"Portuguese",flag:"\ud83c\uddf5\ud83c\uddf9"},{code:"nl",name:"Nederlands",englishName:"Dutch",flag:"\ud83c\uddf3\ud83c\uddf1"},{code:"sv",name:"Svenska",englishName:"Swedish",flag:"\ud83c\uddf8\ud83c\uddea"},{code:"no",name:"Norsk",englishName:"Norwegian",flag:"\ud83c\uddf3\ud83c\uddf4"},{code:"da",name:"Dansk",englishName:"Danish",flag:"\ud83c\udde9\ud83c\uddf0"},{code:"fi",name:"Suomi",englishName:"Finnish",flag:"\ud83c\uddeb\ud83c\uddee"},{code:"pl",name:"Polski",englishName:"Polish",flag:"\ud83c\uddf5\ud83c\uddf1"},{code:"cs",name:"\u010ce\u0161tina",englishName:"Czech",flag:"\ud83c\udde8\ud83c\uddff"},{code:"sk",name:"Sloven\u010dina",englishName:"Slovak",flag:"\ud83c\uddf8\ud83c\uddf0"},{code:"hu",name:"Magyar",englishName:"Hungarian",flag:"\ud83c\udded\ud83c\uddfa"},{code:"ro",name:"Rom\xe2n\u0103",englishName:"Romanian",flag:"\ud83c\uddf7\ud83c\uddf4"},{code:"bg",name:"\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438",englishName:"Bulgarian",flag:"\ud83c\udde7\ud83c\uddec"},{code:"hr",name:"Hrvatski",englishName:"Croatian",flag:"\ud83c\udded\ud83c\uddf7"},{code:"el",name:"\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac",englishName:"Greek",flag:"\ud83c\uddec\ud83c\uddf7"},{code:"sr",name:"\u0421\u0440\u043f\u0441\u043a\u0438",englishName:"Serbian",flag:"\ud83c\uddf7\ud83c\uddf8"},{code:"sl",name:"Sloven\u0161\u010dina",englishName:"Slovenian",flag:"\ud83c\uddf8\ud83c\uddee"},{code:"lv",name:"Latvie\u0161u",englishName:"Latvian",flag:"\ud83c\uddf1\ud83c\uddfb"},{code:"lt",name:"Lietuvi\u0173",englishName:"Lithuanian",flag:"\ud83c\uddf1\ud83c\uddf9"},{code:"et",name:"Eesti",englishName:"Estonian",flag:"\ud83c\uddea\ud83c\uddea"},{code:"mt",name:"Malti",englishName:"Maltese",flag:"\ud83c\uddf2\ud83c\uddf9"},{code:"is",name:"\xcdslenska",englishName:"Icelandic",flag:"\ud83c\uddee\ud83c\uddf8"},{code:"ga",name:"Gaeilge",englishName:"Irish",flag:"\ud83c\uddee\ud83c\uddea"},{code:"cy",name:"Cymraeg",englishName:"Welsh",flag:"\ud83c\udff4"},{code:"eu",name:"Euskera",englishName:"Basque",flag:"\ud83c\uddea\ud83c\uddf8"},{code:"ca",name:"Catal\xe0",englishName:"Catalan",flag:"\ud83c\uddea\ud83c\uddf8"},{code:"gl",name:"Galego",englishName:"Galician",flag:"\ud83c\uddea\ud83c\uddf8"},{code:"tr",name:"T\xfcrk\xe7e",englishName:"Turkish",flag:"\ud83c\uddf9\ud83c\uddf7"},{code:"he",name:"\u05e2\u05d1\u05e8\u05d9\u05ea",englishName:"Hebrew",flag:"\ud83c\uddee\ud83c\uddf1"},{code:"fa",name:"\u0641\u0627\u0631\u0633\u06cc",englishName:"Persian",flag:"\ud83c\uddee\ud83c\uddf7"},{code:"ur",name:"\u0627\u0631\u062f\u0648",englishName:"Urdu",flag:"\ud83c\uddf5\ud83c\uddf0"},{code:"ku",name:"Kurd\xee",englishName:"Kurdish",flag:"\ud83c\uddf9\ud83c\uddf7"},{code:"az",name:"Az\u0259rbaycan",englishName:"Azerbaijani",flag:"\ud83c\udde6\ud83c\uddff"},{code:"hy",name:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576",englishName:"Armenian",flag:"\ud83c\udde6\ud83c\uddf2"},{code:"ka",name:"\u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8",englishName:"Georgian",flag:"\ud83c\uddec\ud83c\uddea"},{code:"ja",name:"\u65e5\u672c\u8a9e",englishName:"Japanese",flag:"\ud83c\uddef\ud83c\uddf5"},{code:"ko",name:"\ud55c\uad6d\uc5b4",englishName:"Korean",flag:"\ud83c\uddf0\ud83c\uddf7"},{code:"hi",name:"\u0939\u093f\u0928\u094d\u0926\u0940",englishName:"Hindi",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"th",name:"\u0e44\u0e17\u0e22",englishName:"Thai",flag:"\ud83c\uddf9\ud83c\udded"},{code:"vi",name:"Ti\u1ebfng Vi\u1ec7t",englishName:"Vietnamese",flag:"\ud83c\uddfb\ud83c\uddf3"},{code:"bn",name:"\u09ac\u09be\u0982\u09b2\u09be",englishName:"Bengali",flag:"\ud83c\udde7\ud83c\udde9"},{code:"ta",name:"\u0ba4\u0bae\u0bbf\u0bb4\u0bcd",englishName:"Tamil",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"te",name:"\u0c24\u0c46\u0c32\u0c41\u0c17\u0c41",englishName:"Telugu",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"ml",name:"\u0d2e\u0d32\u0d2f\u0d3e\u0d33\u0d02",englishName:"Malayalam",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"kn",name:"\u0c95\u0ca8\u0ccd\u0ca8\u0ca1",englishName:"Kannada",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"gu",name:"\u0a97\u0ac1\u0a9c\u0ab0\u0abe\u0aa4\u0ac0",englishName:"Gujarati",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"mr",name:"\u092e\u0930\u093e\u0920\u0940",englishName:"Marathi",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"pa",name:"\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40",englishName:"Punjabi",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"or",name:"\u0b13\u0b21\u0b3c\u0b3f\u0b06",englishName:"Odia",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"as",name:"\u0985\u09b8\u09ae\u09c0\u09af\u09bc\u09be",englishName:"Assamese",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"ne",name:"\u0928\u0947\u092a\u093e\u0932\u0940",englishName:"Nepali",flag:"\ud83c\uddf3\ud83c\uddf5"},{code:"si",name:"\u0dc3\u0dd2\u0d82\u0dc4\u0dbd",englishName:"Sinhala",flag:"\ud83c\uddf1\ud83c\uddf0"},{code:"my",name:"\u1019\u103c\u1014\u103a\u1019\u102c",englishName:"Myanmar",flag:"\ud83c\uddf2\ud83c\uddf2"},{code:"km",name:"\u1781\u17d2\u1798\u17c2\u179a",englishName:"Khmer",flag:"\ud83c\uddf0\ud83c\udded"},{code:"lo",name:"\u0ea5\u0eb2\u0ea7",englishName:"Lao",flag:"\ud83c\uddf1\ud83c\udde6"},{code:"mn",name:"\u041c\u043e\u043d\u0433\u043e\u043b",englishName:"Mongolian",flag:"\ud83c\uddf2\ud83c\uddf3"},{code:"bo",name:"\u0f56\u0f7c\u0f51\u0f0b\u0f61\u0f72\u0f42",englishName:"Tibetan",flag:"\ud83c\udde8\ud83c\uddf3"},{code:"dz",name:"\u0f62\u0fab\u0f7c\u0f44\u0f0b\u0f41",englishName:"Dzongkha",flag:"\ud83c\udde7\ud83c\uddf9"},{code:"id",name:"Bahasa Indonesia",englishName:"Indonesian",flag:"\ud83c\uddee\ud83c\udde9"},{code:"ms",name:"Bahasa Melayu",englishName:"Malay",flag:"\ud83c\uddf2\ud83c\uddfe"},{code:"tl",name:"Filipino",englishName:"Filipino",flag:"\ud83c\uddf5\ud83c\udded"},{code:"ceb",name:"Cebuano",englishName:"Cebuano",flag:"\ud83c\uddf5\ud83c\udded"},{code:"jv",name:"Basa Jawa",englishName:"Javanese",flag:"\ud83c\uddee\ud83c\udde9"},{code:"sw",name:"Kiswahili",englishName:"Swahili",flag:"\ud83c\uddf0\ud83c\uddea"},{code:"am",name:"\u12a0\u121b\u122d\u129b",englishName:"Amharic",flag:"\ud83c\uddea\ud83c\uddf9"},{code:"yo",name:"Yor\xf9b\xe1",englishName:"Yoruba",flag:"\ud83c\uddf3\ud83c\uddec"},{code:"ig",name:"Igbo",englishName:"Igbo",flag:"\ud83c\uddf3\ud83c\uddec"},{code:"ha",name:"Hausa",englishName:"Hausa",flag:"\ud83c\uddf3\ud83c\uddec"},{code:"zu",name:"isiZulu",englishName:"Zulu",flag:"\ud83c\uddff\ud83c\udde6"},{code:"af",name:"Afrikaans",englishName:"Afrikaans",flag:"\ud83c\uddff\ud83c\udde6"},{code:"xh",name:"isiXhosa",englishName:"Xhosa",flag:"\ud83c\uddff\ud83c\udde6"},{code:"st",name:"Sesotho",englishName:"Sotho",flag:"\ud83c\uddf1\ud83c\uddf8"},{code:"tn",name:"Setswana",englishName:"Tswana",flag:"\ud83c\udde7\ud83c\uddfc"},{code:"ss",name:"SiSwati",englishName:"Swati",flag:"\ud83c\uddf8\ud83c\uddff"},{code:"ve",name:"Tshiven\u1e13a",englishName:"Venda",flag:"\ud83c\uddff\ud83c\udde6"},{code:"ts",name:"Xitsonga",englishName:"Tsonga",flag:"\ud83c\uddff\ud83c\udde6"},{code:"sn",name:"ChiShona",englishName:"Shona",flag:"\ud83c\uddff\ud83c\uddfc"},{code:"ny",name:"ChiChe\u0175a",englishName:"Chewa",flag:"\ud83c\uddf2\ud83c\uddfc"},{code:"rw",name:"Kinyarwanda",englishName:"Kinyarwanda",flag:"\ud83c\uddf7\ud83c\uddfc"},{code:"rn",name:"Kirundi",englishName:"Kirundi",flag:"\ud83c\udde7\ud83c\uddee"},{code:"lg",name:"Luganda",englishName:"Luganda",flag:"\ud83c\uddfa\ud83c\uddec"},{code:"so",name:"Soomaali",englishName:"Somali",flag:"\ud83c\uddf8\ud83c\uddf4"},{code:"om",name:"Afaan Oromoo",englishName:"Oromo",flag:"\ud83c\uddea\ud83c\uddf9"},{code:"ti",name:"\u1275\u130d\u122d\u129b",englishName:"Tigrinya",flag:"\ud83c\uddea\ud83c\uddf7"},{code:"qu",name:"Quechua",englishName:"Quechua",flag:"\ud83c\uddf5\ud83c\uddea"},{code:"gn",name:"Guaran\xed",englishName:"Guarani",flag:"\ud83c\uddf5\ud83c\uddfe"},{code:"ay",name:"Aymar\xe1",englishName:"Aymara",flag:"\ud83c\udde7\ud83c\uddf4"},{code:"mi",name:"Te Reo M\u0101ori",englishName:"Maori",flag:"\ud83c\uddf3\ud83c\uddff"},{code:"sm",name:"Gagana Samoa",englishName:"Samoan",flag:"\ud83c\uddfc\ud83c\uddf8"},{code:"to",name:"Lea Faka-Tonga",englishName:"Tongan",flag:"\ud83c\uddf9\ud83c\uddf4"},{code:"fj",name:"Na Vosa Vakaviti",englishName:"Fijian",flag:"\ud83c\uddeb\ud83c\uddef"},{code:"fo",name:"F\xf8royskt",englishName:"Faroese",flag:"\ud83c\uddeb\ud83c\uddf4"},{code:"kl",name:"Kalaallisut",englishName:"Greenlandic",flag:"\ud83c\uddec\ud83c\uddf1"},{code:"se",name:"Davvis\xe1megiella",englishName:"Northern Sami",flag:"\ud83c\uddf3\ud83c\uddf4"},{code:"eo",name:"Esperanto",englishName:"Esperanto",flag:"\ud83c\udf0d"},{code:"la",name:"Latina",englishName:"Latin",flag:"\ud83c\uddfb\ud83c\udde6"},{code:"sa",name:"\u0938\u0902\u0938\u094d\u0915\u0943\u0924\u092e\u094d",englishName:"Sanskrit",flag:"\ud83c\uddee\ud83c\uddf3"}],v=e=>{let{className:t=""}=e;const{i18n:s,t:a}=(0,o.Bd)(),[r,i]=(0,n.useState)(!1),[l,c]=(0,n.useState)(""),[d,u]=(0,n.useState)(()=>{const e=localStorage.getItem("sgex-selected-languages");return e?JSON.parse(e):b.map(e=>e.code)}),h=(0,n.useMemo)(()=>{const e=[...b];return d.forEach(t=>{if(!b.some(e=>e.code===t)){const s=f.find(e=>e.code===t);s&&e.push({code:s.code,name:s.name,englishName:s.englishName,flag:s.flag})}}),e.map(e=>(0,p.A)((0,p.A)({},e),{},{name:b.some(t=>t.code===e.code)?a(e.name):e.name}))},[d,a]),m=(0,n.useMemo)(()=>{if(!l)return[];const e=l.toLowerCase();return f.filter(t=>!d.includes(t.code)&&(t.name.toLowerCase().includes(e)||t.englishName.toLowerCase().includes(e)||t.code.toLowerCase().includes(e))).slice(0,10)},[l,d]),v=h.find(e=>e.code===s.language)||h[0];return(0,g.jsxs)("div",{className:"language-selector ".concat(t),children:[(0,g.jsxs)("button",{className:"language-toggle",onClick:()=>i(!r),"aria-label":a("language.select"),title:a("language.select"),children:[(0,g.jsx)("span",{className:"language-icon",children:"\ud83d\udc3e\ud83c\udfa7"}),(0,g.jsx)("span",{className:"language-name",children:null===v||void 0===v?void 0:v.name}),(0,g.jsx)("span",{className:"dropdown-arrow ".concat(r?"open":""),children:"\u25bc"})]}),r&&(0,g.jsxs)("div",{className:"language-dropdown",children:[h.map(e=>(0,g.jsxs)("button",{className:"language-option ".concat(s.language===e.code?"active":""),onClick:()=>{return t=e.code,s.changeLanguage(t),i(!1),void c("");var t},children:[(0,g.jsx)("span",{className:"language-flag",children:e.flag}),(0,g.jsx)("span",{className:"language-name",children:e.name}),s.language===e.code&&(0,g.jsx)("span",{className:"language-checkmark",children:"\u2713"})]},e.code)),(0,g.jsxs)("div",{className:"language-search-section",children:[(0,g.jsx)("div",{className:"language-search-divider"}),(0,g.jsx)("div",{className:"language-search-input",children:(0,g.jsx)("input",{type:"text",placeholder:a("language.search"),value:l,onChange:e=>{c(e.target.value)},className:"language-search",autoFocus:!1})}),m.map(e=>(0,g.jsxs)("button",{className:"language-option language-option-addable",onClick:()=>(e=>{const t=[...d,e];u(t),localStorage.setItem("sgex-selected-languages",JSON.stringify(t)),s.changeLanguage(e),i(!1),c("")})(e.code),children:[(0,g.jsx)("span",{className:"language-flag",children:e.flag}),(0,g.jsxs)("span",{className:"language-name",children:[e.name,e.englishName!==e.name&&(0,g.jsxs)("span",{className:"language-english-name",children:[" (",e.englishName,")"]})]}),(0,g.jsx)("span",{className:"language-add-icon",children:"+"})]},e.code)),l&&0===m.length&&(0,g.jsxs)("div",{className:"language-no-results",children:['No languages found for "',l,'"']})]})]})]})};var y=s(19794),w=s(6735);const k=e=>{let{pageId:t,helpContent:s,position:r="bottom-right",contextData:i={},notificationBadge:l=!1}=e;const{t:p,i18n:b}=(0,o.Bd)(),[f,k]=(0,n.useState)(!1),[x,N]=(0,n.useState)(!1),[S,j]=(0,n.useState)(null),[A,C]=(0,n.useState)(!0),[I,T]=(0,n.useState)(!1),[D,_]=(0,n.useState)(!1),[E,R]=(0,n.useState)(!1),[P,G]=(0,n.useState)(0),[H,L]=(0,n.useState)(!1),F=(0,y.A)("sgex-mascot.png");(0,n.useEffect)(()=>{const e=localStorage.getItem("sgex-theme");if(e)C("dark"===e);else{let e=!1;try{window.matchMedia&&(e=window.matchMedia("(prefers-color-scheme: light)").matches)}catch(t){e=!1}C(!e)}},[]),(0,n.useEffect)(()=>{document.body.className=A?"theme-dark":"theme-light",localStorage.setItem("sgex-theme",A?"dark":"light")},[A]),(0,n.useEffect)(()=>{const e=b.language||"en",t=["ar","he","fa"].includes(e);document.documentElement.dir=t?"rtl":"ltr",document.documentElement.lang=e},[b.language]),(0,n.useEffect)(()=>{const e=async()=>{const e=u.A.isAuth();if(L(e),e)try{const e=await d.A.getTrackedCounts();G(e.total)}catch(t){console.warn("Failed to get tracked items count:",t),G(0)}else G(0)};e();const t=setInterval(e,3e4);return()=>clearInterval(t)},[]),(0,n.useEffect)(()=>(H?d.A.startBackgroundSync():d.A.stopBackgroundSync(),()=>{d.A.stopBackgroundSync()}),[H]);const O=()=>{C(!A)},U=[...t?a.A.getHelpTopicsForPage(t,i):[],...H&&P>0?[{id:"tracked-items",title:"Tracked Items (".concat(P,")"),badge:"/sgex/cat-paw-icon.svg",type:"action",action:()=>R(!0),notificationBadge:P}]:[],...H&&0===P?[{id:"tracked-items-empty",title:"Tracked Items",badge:"/sgex/cat-paw-icon.svg",type:"action",action:()=>R(!0)}]:[]],B=async()=>{if(!I){T(!0),_(!1);try{c.clearAllCache()?(_(!0),setTimeout(()=>{_(!1)},3e3)):(console.error("Failed to clear cache"),alert("Failed to clear cache. Please try again."))}catch(e){console.error("Error clearing cache:",e),alert("Error clearing cache. Please try again.")}finally{T(!1)}}};return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsxs)("div",{className:"contextual-help-mascot ".concat(r),children:[(0,g.jsxs)("div",{className:"mascot-container",onMouseEnter:()=>{x||k(!0)},onMouseLeave:()=>{x||k(!1)},onClick:()=>{N(!x),k(!x||f)},children:[(0,g.jsx)("img",{src:F,alt:(0,w.lm)(p,w.ld.MASCOT_HELPER,"SGEX Helper"),className:"mascot-icon"}),(l||H&&P>0)&&(0,g.jsx)("div",{className:"notification-badge",children:H&&P>0?P:"!"}),!l&&!(H&&P>0)&&(0,g.jsx)("div",{className:"question-bubble ".concat(f?"help-open":""),children:"?"})]}),f&&(0,g.jsxs)("div",{className:"help-thought-bubble",children:[(0,g.jsxs)("div",{className:"bubble-content",children:[x&&(0,g.jsx)("button",{className:"close-bubble-btn",onClick:()=>{k(!1),N(!1)},"aria-label":"Close help",children:"\xd7"}),(0,g.jsx)("div",{className:"help-text",children:U.length>0?(0,g.jsxs)("div",{className:"help-topics-list",children:[(0,g.jsx)("h4",{children:p("help.title")}),U.map(e=>(0,g.jsxs)("button",{className:"help-topic-btn",onClick:()=>(e=>{"action"===e.type&&e.action?(e.action(),k(!1),N(!1)):(j(e),k(!1),N(!1))})(e),children:[e.badge&&(0,g.jsx)("img",{src:e.badge,alt:"",className:"help-topic-badge"}),(0,g.jsx)("span",{className:"help-topic-title",children:e.title}),e.notificationBadge&&(0,g.jsx)("span",{className:"help-topic-notification-badge",children:e.notificationBadge})]},e.id)),(0,g.jsx)("div",{className:"help-menu-divider"}),(0,g.jsx)(v,{className:"help-menu-language-selector"}),(0,g.jsx)("div",{className:"help-menu-divider"}),(0,g.jsxs)("button",{className:"help-theme-toggle-btn ".concat(A?"dark":"light"),onClick:O,"aria-label":p("theme.toggle"),title:p("theme.toggle"),children:[(0,g.jsx)("span",{className:"theme-icon",children:A?"\ud83c\udf1e":"\ud83c\udf19"}),(0,g.jsx)("span",{className:"theme-label",children:A?p("theme.switchToLight","Light Mode"):p("theme.switchToDark","Dark Mode")})]}),(0,g.jsx)("div",{className:"help-menu-divider"}),(0,g.jsx)("div",{className:"help-menu-cache-section",children:D?(0,g.jsx)("div",{className:"cache-success-message",children:"\u2705 Cache cleared successfully!"}):(0,g.jsx)("button",{className:"help-cache-btn",onClick:B,disabled:I,title:"Clear all cached data including repository info, branch context, and staging ground data",children:I?"\ud83d\udd04 Clearing...":"\ud83d\uddd1\ufe0f Flush Cache"})})]}):(0,g.jsxs)("div",{children:[s,(0,g.jsx)("div",{className:"help-menu-divider"}),(0,g.jsx)(v,{className:"help-menu-language-selector"}),(0,g.jsx)("div",{className:"help-menu-divider"}),(0,g.jsxs)("button",{className:"help-theme-toggle-btn ".concat(A?"dark":"light"),onClick:O,"aria-label":p("theme.toggle"),title:p("theme.toggle"),children:[(0,g.jsx)("span",{className:"theme-icon",children:A?"\ud83c\udf1e":"\ud83c\udf19"}),(0,g.jsx)("span",{className:"theme-label",children:A?p("theme.switchToLight","Light Mode"):p("theme.switchToDark","Dark Mode")})]}),(0,g.jsx)("div",{className:"help-menu-divider"}),(0,g.jsx)("div",{className:"help-menu-cache-section",children:D?(0,g.jsx)("div",{className:"cache-success-message",children:"\u2705 Cache cleared successfully!"}):(0,g.jsx)("button",{className:"help-cache-btn",onClick:B,disabled:I,title:"Clear all cached data including repository info, branch context, and staging ground data",children:I?"\ud83d\udd04 Clearing...":"\ud83d\uddd1\ufe0f Flush Cache"})})]})})]}),(0,g.jsx)("div",{className:"bubble-tail"})]})]}),S&&(0,g.jsx)(h.A,{helpTopic:S,contextData:i,onClose:()=>{j(null)}}),E&&(0,g.jsx)(m,{onClose:()=>R(!1)})]})}},12602:(e,t,s)=>{s.d(t,{A:()=>n});const n=new class{constructor(){this.universalTopics={documentation:{id:"sgex-documentation",title:"View Documentation",badge:"/sgex/cat-paw-info-icon.svg",type:"action",action:()=>{const e=window.location.pathname;let t="";if(e.includes("/sgex")){const s=e.split("/"),n=s.indexOf("sgex");-1!==n&&(t=s.length>n+2&&s[n+1]&&!["dashboard","docs","select_profile","dak-action","dak-selection"].includes(s[n+1])?"/".concat(s.slice(1,n+2).join("/")):"/".concat(s.slice(1,n+1).join("/")))}window.location.href="".concat(t,"/docs/overview")},content:'\n          <p>Access comprehensive documentation and guides for using SGEX Workbench.</p>\n          <div class="help-tip">\n            <strong>\ud83d\udcd6 Available Documentation:</strong> Requirements, Architecture, DAK Components, User Guides, and more.\n          </div>\n        '},bugReport:{id:"report-sgex-bug",title:"Report a SGeX bug",badge:"/sgex/cat-paw-bug-icon.svg",type:"slideshow",content:[{title:"Report a Bug or Issue",content:'\n              <p>Help us improve SGeX by reporting bugs and issues:</p>\n              <h4>What type of issue are you experiencing?</h4>\n              <div class="bug-report-options">\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openSgexIssue(\'bug\')">\n                  \ud83d\udc1b Bug Report - Something isn\'t working correctly\n                </button>\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openSgexIssue(\'feature\')">\n                  \u2728 Feature Request - Suggest a new feature or improvement\n                </button>\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openSgexIssue(\'question\')">\n                  \u2753 Question - Ask for help or clarification\n                </button>\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openSgexIssue(\'documentation\')">\n                  \ud83d\udcda Documentation Issue - Report problems with documentation\n                </button>\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openSgexIssue(\'blank\')">\n                  \ud83d\udcdd Blank Issue - Create an issue without a template\n                </button>\n              </div>\n              <div class="help-tip">\n                <strong>\ud83d\udca1 Tip:</strong> Please provide as much detail as possible including steps to reproduce, expected behavior, and actual behavior.\n              </div>\n              <div class="help-fallback">\n                <strong>\ud83d\udd17 Can\'t access GitHub?</strong> If the buttons above don\'t work in your environment:\n                <ol>\n                  <li>Email us directly at <a href="mailto:smart@who.int?subject=SGEX Bug Report">smart@who.int</a></li>\n                  <li>Or visit <a href="https://github.com/litlfred/sgex/issues/new" target="_blank">github.com/litlfred/sgex/issues/new</a> manually</li>\n                </ol>\n              </div>\n            '}]},dakFeedback:{id:"provide-dak-feedback",title:"Provide DAK Feedback",type:"slideshow",content:[{title:"Provide Feedback on this DAK",content:'\n              <p>Share feedback about this Digital Adaptation Kit (DAK):</p>\n              <h4>What type of feedback do you have?</h4>\n              <div class="bug-report-options">\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openDakIssue(\'content\')">\n                  \ud83d\udcdd Report DAK Content Error - Problems with clinical content or logic\n                </button>\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openDakIssue(\'bug\')">\n                  \ud83d\udc1b DAK Bug - Issue with this specific DAK content\n                </button>\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openDakIssue(\'improvement\')">\n                  \ud83d\udcc8 DAK Improvement - Suggest enhancements to this DAK\n                </button>\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openDakIssue(\'question\')">\n                  \u2753 DAK Question - Ask about this DAK\'s implementation\n                </button>\n                <button class="bug-type-btn" onclick="window.helpModalInstance?.openDakIssue(\'blank\')">\n                  \ud83d\udcdd Blank DAK Issue - Create an issue without a template\n                </button>\n              </div>\n              <div class="help-tip">\n                <strong>\ud83d\udca1 Note:</strong> This will open an issue in the selected DAK repository for targeted feedback.\n              </div>\n            '}]}},this.helpTopics={"landing-page-unauthenticated":[{id:"github-pat-setup",title:"How to Create a GitHub Personal Access Token",badge:"/sgex/cat-paw-lock-icon.svg",type:"slideshow",content:[{title:"Step 1: Go to GitHub Settings",content:'\n                <p>Navigate to your GitHub account settings:</p>\n                <ol>\n                  <li>Click your profile picture in the top right</li>\n                  <li>Select "Settings" from the dropdown</li>\n                  <li>Go to "Developer settings" \u2192 "Personal access tokens"</li>\n                  <li>Choose "Fine-grained tokens" (recommended) or "Tokens (classic)"</li>\n                </ol>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Tip:</strong> Fine-grained tokens provide better security with repository-specific access.\n                </div>\n              '},{title:"Step 2: Generate New Token",content:'\n                <p>Create your new token:</p>\n                <ol>\n                  <li>Click "Generate new token"</li>\n                  <li>Give it a descriptive name like "SGEX Workbench"</li>\n                  <li>Set expiration (90 days recommended)</li>\n                  <li>Select repository access (specific repos or all)</li>\n                </ol>\n                <div class="help-warning">\n                  <strong>\u26a0\ufe0f Important:</strong> You\'ll only see the token once, so copy it immediately!\n                </div>\n              '},{title:"Step 3: Set Required Permissions",content:"\n                <p>For <strong>fine-grained tokens</strong>, enable:</p>\n                <ul>\n                  <li><strong>Contents:</strong> Read and Write</li>\n                  <li><strong>Metadata:</strong> Read</li>\n                  <li><strong>Pull requests:</strong> Read and Write</li>\n                </ul>\n                <p>For <strong>classic tokens</strong>, select:</p>\n                <ul>\n                  <li><strong>repo</strong> - Full control of private repositories</li>\n                  <li><strong>read:org</strong> - Read org and team membership</li>\n                </ul>\n              "},{title:"Step 4: Use Your Token",content:'\n                <p>Now you can authenticate with SGEX:</p>\n                <ol>\n                  <li>Copy your newly generated token</li>\n                  <li>Paste it into the login form</li>\n                  <li>Click "Sign in with Personal Access Token"</li>\n                </ol>\n                <div class="help-tip">\n                  <strong>\ud83d\udd12 Security:</strong> Your token is stored securely in your browser and never shared with servers.\n                </div>\n              '}]}],"landing-page-authenticated":[{id:"profile-selection",title:"Selecting Your Profile or Organization",type:"slideshow",content:[{title:"Understanding Profile Types",content:'\n                <p>SGEX shows different types of profiles:</p>\n                <ul>\n                  <li><strong>Personal:</strong> Your individual GitHub repositories</li>\n                  <li><strong>Organization:</strong> Repositories belonging to organizations you\'re a member of</li>\n                  <li><strong>WHO Official:</strong> World Health Organization repositories (always available)</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Tip:</strong> DAK count badges show how many SMART Guidelines repositories were found.\n                </div>\n              '}]}],"dak-action-selection":[{id:"choosing-dak-action",title:"Choosing Your DAK Action",type:"slideshow",content:[{title:"Understanding DAK Actions",content:'\n                <p>Choose the right action for your workflow:</p>\n                <ul>\n                  <li><strong>Edit Existing DAK:</strong> Modify an existing repository you have write access to</li>\n                  <li><strong>Fork and Edit:</strong> Create your own copy of a repository to work on</li>\n                  <li><strong>Create New DAK:</strong> Start a brand new DAK repository from scratch</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Tip:</strong> If you\'re not sure, start with "Edit Existing DAK" if you have permissions, or "Fork and Edit" to experiment safely.\n                </div>\n              '}]}],"documentation-viewer":[{id:"navigation-help",title:"Navigating Documentation",type:"slideshow",content:[{title:"Using the Documentation Viewer",content:'\n                <p>The documentation viewer provides easy access to all project information:</p>\n                <ul>\n                  <li>Use the sidebar menu to navigate between sections</li>\n                  <li>Use the dropdown to quickly jump to any document</li>\n                  <li>Click "Back" to return to the previous page</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udcd6 Available Documentation:</strong> Requirements, Architecture, DAK Components, and more.\n                </div>\n              '}]}],"dak-dashboard":[{id:"dak-components-overview",title:"Understanding DAK Components",type:"slideshow",content:[{title:"WHO SMART Guidelines DAK Components",content:"\n                <p>Digital Adaptation Kits (DAKs) contain 8 core components organized in two levels:</p>\n                <h4>Level 2: Business Logic & Processes</h4>\n                <ul>\n                  <li><strong>Business Processes:</strong> BPMN workflows</li>\n                  <li><strong>Decision Support Logic:</strong> DMN decision tables</li>\n                  <li><strong>Indicators & Measures:</strong> Performance metrics</li>\n                  <li><strong>Data Entry Forms:</strong> Structured questionnaires</li>\n                </ul>\n                <h4>Level 3: Technical Implementation</h4>\n                <ul>\n                  <li><strong>Terminology:</strong> Code systems and value sets</li>\n                  <li><strong>FHIR Profiles:</strong> Resource structure definitions</li>\n                  <li><strong>FHIR Extensions:</strong> Custom data elements</li>\n                  <li><strong>Test Data & Examples:</strong> Sample data for validation</li>\n                </ul>\n              "}]}],"dak-selection":[{id:"choosing-dak-repository",title:"Selecting the Right DAK Repository",type:"slideshow",content:[{title:"Understanding DAK Repository Types",content:'\n                <p>Choose the right repository based on your workflow:</p>\n                <ul>\n                  <li><strong>Published DAKs:</strong> Official WHO repositories with complete implementations</li>\n                  <li><strong>Community DAKs:</strong> Community-maintained repositories with adaptations</li>\n                  <li><strong>Template DAKs:</strong> Starting templates for creating new DAKs</li>\n                  <li><strong>Private DAKs:</strong> Your private repositories or organization-specific DAKs</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Tip:</strong> Look for the "SMART Guidelines" badge to ensure compatibility.\n                </div>\n              '}]}],"organization-selection":[{id:"selecting-organization",title:"Choosing an Organization",type:"slideshow",content:[{title:"Organization vs Personal Account",content:'\n                <p>Decide where to create or fork your DAK:</p>\n                <ul>\n                  <li><strong>Personal Account:</strong> For individual development and experimentation</li>\n                  <li><strong>Organization Account:</strong> For team collaboration and official implementations</li>\n                  <li><strong>WHO Official:</strong> Only for authorized WHO contributors</li>\n                </ul>\n                <div class="help-warning">\n                  <strong>\u26a0\ufe0f Important:</strong> Make sure you have the necessary permissions for the selected organization.\n                </div>\n              '}]}],"bpmn-editor":[{id:"using-bpmn-editor",title:"Using the BPMN Editor",type:"slideshow",content:[{title:"BPMN Business Process Modeling",content:'\n                <p>The BPMN editor helps you create and modify business process workflows:</p>\n                <ul>\n                  <li><strong>Drag and Drop:</strong> Use the palette to add process elements</li>\n                  <li><strong>Connect Elements:</strong> Click and drag to create sequence flows</li>\n                  <li><strong>Properties Panel:</strong> Configure element properties and conditions</li>\n                  <li><strong>Validation:</strong> The editor highlights errors and warnings</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Tip:</strong> BPMN processes define the clinical workflow and decision logic for your DAK.\n                </div>\n              '}]}],"questionnaire-editor":[{id:"using-questionnaire-editor",title:"Using the FHIR Questionnaire Editor",badge:"/sgex/cat-paw-icon.svg",type:"slideshow",content:[{title:"FHIR Questionnaire Overview",content:'\n                <p>The FHIR Questionnaire editor helps you create and modify structured data collection forms:</p>\n                <ul>\n                  <li><strong>Visual Editor:</strong> Uses LHC-Forms for intuitive questionnaire design</li>\n                  <li><strong>FHIR Compliant:</strong> Generates standard FHIR R4 Questionnaire resources</li>\n                  <li><strong>Multilingual:</strong> Support for multiple languages and translations</li>\n                  <li><strong>Preview Mode:</strong> Test questionnaires as they would appear to users</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udccb File Location:</strong> Questionnaires are stored in <code>input/questionnaires/*.json</code>\n                </div>\n              '},{title:"Creating New Questionnaires",content:'\n                <p>To create a new FHIR Questionnaire:</p>\n                <ol>\n                  <li>Click "Create New Questionnaire" on the main screen</li>\n                  <li>A template questionnaire will be loaded in the editor</li>\n                  <li>Modify the questionnaire structure using the visual interface</li>\n                  <li>Add questions, sections, and response options</li>\n                  <li>Set validation rules and conditional logic</li>\n                </ol>\n                <div class="help-warning">\n                  <strong>\u26a0\ufe0f Remember:</strong> Save your work regularly using "Save to Staging" or "Commit to GitHub"\n                </div>\n              '},{title:"Editing Existing Questionnaires",content:'\n                <p>To modify existing questionnaires:</p>\n                <ol>\n                  <li>Select a questionnaire from the list</li>\n                  <li>The questionnaire will load in the LHC-Forms editor</li>\n                  <li>Make your changes using the visual interface</li>\n                  <li>Preview the form to test user experience</li>\n                  <li>Save changes when satisfied</li>\n                </ol>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Tip:</strong> Use the staging framework to test changes before committing to GitHub\n                </div>\n              '},{title:"Internationalization Support",content:'\n                <p>The questionnaire editor supports multiple languages:</p>\n                <ul>\n                  <li><strong>Language Selection:</strong> Use the language dropdown to switch between languages</li>\n                  <li><strong>Translations:</strong> Add translations for all text fields</li>\n                  <li><strong>FHIR Extensions:</strong> Uses standard FHIR translation extensions</li>\n                  <li><strong>Preview:</strong> Test questionnaires in different languages</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83c\udf0d Best Practice:</strong> Always provide translations for your target implementation languages\n                </div>\n              '}]},{id:"questionnaire-management",title:"Managing Questionnaire Assets",badge:"/sgex/cat-paw-file-icon.svg",type:"slideshow",content:[{title:"File Organization",content:'\n                <p>FHIR Questionnaires are organized as follows:</p>\n                <ul>\n                  <li><strong>Location:</strong> <code>input/questionnaires/</code> directory</li>\n                  <li><strong>Format:</strong> JSON files following FHIR R4 Questionnaire schema</li>\n                  <li><strong>Naming:</strong> Use descriptive names like <code>patient-registration.json</code></li>\n                  <li><strong>Validation:</strong> All files are validated against FHIR schema</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udcc1 Convention:</strong> Use kebab-case filenames for consistency\n                </div>\n              '},{title:"Version Control Integration",content:'\n                <p>The questionnaire editor integrates with GitHub for version control:</p>\n                <ul>\n                  <li><strong>Staging:</strong> Save changes locally before committing</li>\n                  <li><strong>Commits:</strong> Create meaningful commit messages</li>\n                  <li><strong>Branches:</strong> Work on different branches for features</li>\n                  <li><strong>History:</strong> Track changes and revert if needed</li>\n                </ul>\n                <div class="help-warning">\n                  <strong>\u26a0\ufe0f Important:</strong> Always test questionnaires before committing to main branch\n                </div>\n              '}]}],"component-editor":[{id:"component-editor-overview",title:"Understanding the Component Editor",type:"slideshow",content:[{title:"DAK Component Types",content:"\n                <p>The component editor provides specialized interfaces for different DAK components:</p>\n                <h4>Business Logic Components</h4>\n                <ul>\n                  <li><strong>Business Processes:</strong> BPMN workflow editor</li>\n                  <li><strong>Decision Logic:</strong> DMN decision table editor</li>\n                  <li><strong>Forms:</strong> Structured questionnaire builder</li>\n                </ul>\n                <h4>Technical Components</h4>\n                <ul>\n                  <li><strong>FHIR Resources:</strong> Profile and extension definitions</li>\n                  <li><strong>Terminology:</strong> Code systems and value sets</li>\n                  <li><strong>Test Data:</strong> Example data and test cases</li>\n                </ul>\n              "}]}],"pat-login":[{id:"pat-authentication-help",title:"Using Personal Access Tokens",badge:"/sgex/cat-paw-lock-icon.svg",type:"slideshow",content:[{title:"Why Personal Access Tokens?",content:'\n                <p>SGEX uses GitHub Personal Access Tokens (PATs) for secure authentication:</p>\n                <ul>\n                  <li><strong>No Backend Required:</strong> Works entirely in your browser</li>\n                  <li><strong>Fine-grained Control:</strong> Choose which repositories to access</li>\n                  <li><strong>Enhanced Security:</strong> Can be easily rotated and revoked</li>\n                  <li><strong>Privacy Focused:</strong> Your token never leaves your browser</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udd12 Security:</strong> SGEX stores your token locally and never transmits it to any server.\n                </div>\n              '}]}],"pat-setup-instructions":[{id:"detailed-pat-setup",title:"Detailed PAT Setup Guide",badge:"/sgex/cat-paw-lock-icon.svg",type:"slideshow",content:[{title:"Token Type Comparison",content:"\n                <p>GitHub offers two types of Personal Access Tokens:</p>\n                <h4>Fine-grained Tokens (Recommended)</h4>\n                <ul>\n                  <li>Repository-specific access control</li>\n                  <li>Better security with minimal permissions</li>\n                  <li>More granular permission settings</li>\n                  <li>Shorter default expiration times</li>\n                </ul>\n                <h4>Classic Tokens</h4>\n                <ul>\n                  <li>Broader scope-based permissions</li>\n                  <li>Simpler permission model</li>\n                  <li>Longer expiration options</li>\n                  <li>Works with all GitHub integrations</li>\n                </ul>\n              "}]}],welcome:[{id:"github-pat-setup",title:"How to Create a GitHub Personal Access Token",badge:"/sgex/cat-paw-lock-icon.svg",type:"slideshow",content:[{title:"Step 1: Go to GitHub Settings",content:'\n                <p>Navigate to your GitHub account settings:</p>\n                <ol>\n                  <li>Click your profile picture in the top right</li>\n                  <li>Select "Settings" from the dropdown</li>\n                  <li>Go to "Developer settings" \u2192 "Personal access tokens"</li>\n                  <li>Choose "Fine-grained tokens" (recommended) or "Tokens (classic)"</li>\n                </ol>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Tip:</strong> Fine-grained tokens provide better security with repository-specific access.\n                </div>\n              '},{title:"Step 2: Generate New Token",content:'\n                <p>Create your new token:</p>\n                <ol>\n                  <li>Click "Generate new token"</li>\n                  <li>Give it a descriptive name like "SGEX Workbench"</li>\n                  <li>Set expiration (90 days recommended)</li>\n                  <li>Select repository access (specific repos or all)</li>\n                </ol>\n                <div class="help-warning">\n                  <strong>\u26a0\ufe0f Important:</strong> You\'ll only see the token once, so copy it immediately!\n                </div>\n              '},{title:"Step 3: Set Required Permissions",content:"\n                <p>For <strong>fine-grained tokens</strong>, enable:</p>\n                <ul>\n                  <li><strong>Contents:</strong> Read and Write</li>\n                  <li><strong>Metadata:</strong> Read</li>\n                  <li><strong>Pull requests:</strong> Read and Write</li>\n                </ul>\n                <p>For <strong>classic tokens</strong>, select:</p>\n                <ul>\n                  <li><strong>repo</strong> - Full control of private repositories</li>\n                  <li><strong>read:org</strong> - Read org and team membership</li>\n                </ul>\n              "},{title:"Step 4: Use Your Token",content:'\n                <p>Now you can authenticate with SGEX:</p>\n                <ol>\n                  <li>Copy your newly generated token</li>\n                  <li>Paste it into the login form</li>\n                  <li>Click "Sign in with Personal Access Token"</li>\n                </ol>\n                <div class="help-tip">\n                  <strong>\ud83d\udd12 Security:</strong> Your token is stored securely in your browser and never shared with servers.\n                </div>\n              '}]}],"dak-configuration":[{id:"dak-configuration-guide",title:"Configuring Your DAK",type:"slideshow",content:[{title:"Understanding DAK Configuration",content:"\n                <p>When creating a new DAK, you need to configure both repository and FHIR settings:</p>\n                <h4>Repository Configuration</h4>\n                <ul>\n                  <li><strong>Repository Name:</strong> GitHub repository identifier (lowercase with hyphens)</li>\n                  <li><strong>Description:</strong> Brief description of your DAK's purpose</li>\n                  <li><strong>Topics:</strong> Tags that help others discover your DAK</li>\n                  <li><strong>Visibility:</strong> Public repositories are discoverable by the community</li>\n                </ul>\n                <h4>FHIR Implementation Guide Settings</h4>\n                <ul>\n                  <li><strong>IG ID:</strong> Unique identifier for your Implementation Guide</li>\n                  <li><strong>Name:</strong> Technical name used in code generation</li>\n                  <li><strong>Title:</strong> Human-readable title for documentation</li>\n                  <li><strong>Publisher:</strong> Organization responsible for the DAK</li>\n                </ul>\n              "}]}],"core-data-dictionary-viewer":[{id:"core-data-dictionary-help",title:"Understanding Core Data Dictionary",badge:"/sgex/cat-paw-info-icon.svg",type:"slideshow",content:[{title:"What is the Core Data Dictionary?",content:'\n                <p>The Core Data Dictionary (Component 2) contains the data elements required throughout the different points of the workflow. These data elements are mapped to the International Classification of Diseases version 11 (ICD-11) codes and other established concept mapping standards to ensure the data dictionary is compatible with other digital systems.</p>\n                <h4>Purpose: System Design and Interoperability</h4>\n                <p>To know which data elements need to be logged and how they map to other standard terminologies (e.g. ICD, Systematized Nomenclature of Medicine [SNOMED]) for interoperability with other standards-based systems.</p>\n                <h4>FHIR FSH Source Files</h4>\n                <ul>\n                  <li><strong>CodeSystems:</strong> Define custom codes and concepts used in your DAK</li>\n                  <li><strong>ValueSets:</strong> Specify allowed values for clinical data elements</li>\n                  <li><strong>ConceptMaps:</strong> Map between different terminology systems including ICD-11 and SNOMED</li>\n                  <li><strong>Logical Models:</strong> Define data structures for clinical workflows</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Location:</strong> FSH files are stored in the <code>input/fsh/</code> directory of your repository.\n                </div>\n              '},{title:"GitHub Pages Integration",content:'\n                <p>When GitHub Pages is configured, your FSH files are automatically compiled into HTML documentation:</p>\n                <h4>Published Artifacts</h4>\n                <ul>\n                  <li><strong>Code Systems:</strong> Browse and search your custom terminologies</li>\n                  <li><strong>Value Sets:</strong> View allowed values with descriptions</li>\n                  <li><strong>Logical Models:</strong> Interactive data structure documentation</li>\n                  <li><strong>Concept Maps:</strong> Visual mapping between terminologies</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\u26a1 URL Pattern:</strong> Main branch publishes to <code>user.github.io/repo</code>, feature branches to <code>user.github.io/repo/branches/branch-name</code>\n                </div>\n              '}]},{id:"github-pages-setup",title:"Setting Up GitHub Pages",badge:"/sgex/cat-paw-settings-icon.svg",type:"slideshow",content:[{title:"Enable GitHub Pages for Your DAK",content:'\n                <p>Follow these steps to enable automatic publishing of your Implementation Guide:</p>\n                <h4>Step 1: Repository Settings</h4>\n                <ol>\n                  <li>Go to your repository on GitHub</li>\n                  <li>Click on the <strong>Settings</strong> tab</li>\n                  <li>Scroll down to <strong>Pages</strong> in the left sidebar</li>\n                  <li>Under <strong>Source</strong>, select <strong>GitHub Actions</strong></li>\n                </ol>\n                <div class="help-tip">\n                  <strong>\ud83d\udccb Note:</strong> Your repository must contain a valid FHIR Implementation Guide structure with <code>sushi-config.yaml</code>\n                </div>\n              '},{title:"Configure IG Publisher Workflow",content:'\n                <p>Set up the automated publishing workflow:</p>\n                <h4>Step 2: GitHub Actions</h4>\n                <ol>\n                  <li>Create <code>.github/workflows/</code> directory in your repository</li>\n                  <li>Add an IG Publisher workflow file (e.g., <code>publish.yml</code>)</li>\n                  <li>Configure the workflow to run on push to main branch</li>\n                  <li>Include steps to build and deploy the Implementation Guide</li>\n                </ol>\n                <h4>Step 3: Verify Publishing</h4>\n                <ul>\n                  <li>Check the <strong>Actions</strong> tab for workflow status</li>\n                  <li>Once successful, visit your GitHub Pages URL</li>\n                  <li>Verify that artifacts are accessible from the Core Data Dictionary viewer</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udd17 Reference:</strong> See the <a href="https://smart.who.int/ig-starter-kit/v1.0.0/ig_setup.html#ghpages-build" target="_blank">WHO IG Starter Kit</a> for detailed setup instructions.\n                </div>\n              '}]}],"business-process-selection":[{id:"business-process-help",title:"Understanding Business Processes",badge:"/sgex/cat-paw-workflow-icon.svg",type:"slideshow",content:[{title:"What are Business Processes?",content:'\n                <p>Business Processes (Component 5) define the clinical workflows and care processes in your DAK:</p>\n                <h4>BPMN 2.0 Diagrams</h4>\n                <ul>\n                  <li><strong>Clinical Workflows:</strong> Step-by-step patient care processes</li>\n                  <li><strong>Decision Points:</strong> Where clinical decisions are made</li>\n                  <li><strong>Task Assignments:</strong> Who performs each step in the workflow</li>\n                  <li><strong>Data Flows:</strong> How information moves through the process</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Standard:</strong> Uses BPMN 2.0 (Business Process Model and Notation) for workflow modeling\n                </div>\n              '},{title:"Working with BPMN Files",content:'\n                <p>Business process diagrams are stored as BPMN XML files in your repository:</p>\n                <h4>File Management</h4>\n                <ul>\n                  <li><strong>Location:</strong> Typically stored in <code>input/models/</code> or <code>input/bpmn/</code></li>\n                  <li><strong>Format:</strong> BPMN 2.0 XML standard format</li>\n                  <li><strong>Editing:</strong> Use the built-in BPMN editor or external tools</li>\n                  <li><strong>Validation:</strong> Automatic validation against BPMN 2.0 schema</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udd27 Tools:</strong> SGeX includes an integrated BPMN editor for creating and modifying workflow diagrams\n                </div>\n              '}]}],"pages-manager":[{id:"page-content-help",title:"Managing Page Content",badge:"/sgex/cat-paw-document-icon.svg",type:"slideshow",content:[{title:"What is Page Content?",content:'\n                <p>Page Content represents the narrative documentation and educational materials in your DAK:</p>\n                <h4>Content Types</h4>\n                <ul>\n                  <li><strong>Clinical Guidelines:</strong> Evidence-based care recommendations</li>\n                  <li><strong>User Guides:</strong> Instructions for healthcare workers</li>\n                  <li><strong>Training Materials:</strong> Educational content and scenarios</li>\n                  <li><strong>Reference Documentation:</strong> Technical specifications and background</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udca1 Format:</strong> Content is typically authored in Markdown format for easy editing and version control\n                </div>\n              '},{title:"Content Organization",content:'\n                <p>Page content is organized to support different user needs and workflows:</p>\n                <h4>Structure</h4>\n                <ul>\n                  <li><strong>Pages Directory:</strong> Main content files organized by topic</li>\n                  <li><strong>Assets:</strong> Images, diagrams, and multimedia content</li>\n                  <li><strong>Templates:</strong> Reusable content patterns and layouts</li>\n                  <li><strong>Navigation:</strong> Menus and linking between related content</li>\n                </ul>\n                <h4>Publishing</h4>\n                <ul>\n                  <li><strong>GitHub Pages:</strong> Automatic publishing of content as web pages</li>\n                  <li><strong>FHIR IG:</strong> Integration with Implementation Guide publishing</li>\n                  <li><strong>Version Control:</strong> Track changes and collaborate on content</li>\n                </ul>\n                <div class="help-tip">\n                  <strong>\ud83d\udcdd Best Practice:</strong> Use clear headings, bullet points, and visual elements to make content accessible to healthcare workers\n                </div>\n              '}]}]}}getHelpTopicsForPage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return[...this.helpTopics[e]||[],...this.getUniversalTopics(t)]}getUniversalTopics(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=[this.universalTopics.documentation,this.universalTopics.bugReport];return(e.selectedDak||e.repository)&&t.push(this.universalTopics.dakFeedback),t}getHelpTopic(e){for(const t of Object.values(this.helpTopics)){const s=t.find(t=>t.id===e);if(s)return s}return null}hasHelpTopics(e){return!0}addHelpTopicToPage(e,t){this.helpTopics[e]||(this.helpTopics[e]=[]),this.helpTopics[e].push(t)}getAvailablePages(){return Object.keys(this.helpTopics)}openDakIssue(e,t){if(!t)return void console.warn("No DAK repository specified for feedback");let s="https://github.com/".concat(t.owner,"/").concat(t.name,"/issues/new");switch(e){case"bug":s+="?template=bug_report.md&labels=bug,dak-issue";break;case"improvement":s+="?template=feature_request.md&labels=enhancement,dak-improvement";break;case"content":s+="?labels=content-issue,clinical-content";break;case"question":s+="?template=question.md&labels=question,dak-question";break;default:s+="?labels=dak-feedback"}window.open(s,"_blank")}}},19794:(e,t,s)=>{s.d(t,{A:()=>o});var n=s(65043);const o=e=>{const[t,s]=(0,n.useState)(e);return(0,n.useEffect)(()=>{const t=()=>{const t=document.body.classList.contains("theme-dark"),n="/sgex/copilot-fix-719",o=e.startsWith("/")?e.slice(1):e;let a;if(t){const e=o.replace(/\.png$/,"_grey_tabby.png");a=n?"".concat(n,"/").concat(e):"/".concat(e)}else a=n?"".concat(n,"/").concat(o):"/".concat(o);s(a)};t();const n=new MutationObserver(e=>{e.forEach(e=>{"attributes"===e.type&&"class"===e.attributeName&&t()})});return n.observe(document.body,{attributes:!0,attributeFilter:["class"]}),()=>{n.disconnect()}},[e]),t}},22392:(e,t,s)=>{s.d(t,{A:()=>r});var n=s(80045),o=s(89379);const a=["savedAt"];const r=new class{constructor(){this.listeners=new Set,this.currentRepository=null,this.currentBranch=null}initialize(e,t){this.currentRepository=e,this.currentBranch=t,this.notifyListeners()}getStorageKey(){if(!this.currentRepository||!this.currentBranch)throw new Error("Staging ground not initialized");return"sgex_staging_".concat(this.currentRepository.full_name,"_").concat(this.currentBranch)}getStagingGround(){try{const e=this.getStorageKey(),t=localStorage.getItem(e);return t?JSON.parse(t):this.createEmptyStagingGround()}catch(e){return console.warn("Error reading staging ground from localStorage:",e),this.createEmptyStagingGround()}}createEmptyStagingGround(){var e;return{message:"",files:[],timestamp:Date.now(),branch:this.currentBranch,repository:null===(e=this.currentRepository)||void 0===e?void 0:e.full_name}}saveStagingGround(e){try{var t;const s=this.getStorageKey();return e.timestamp=Date.now(),e.branch=this.currentBranch,e.repository=null===(t=this.currentRepository)||void 0===t?void 0:t.full_name,localStorage.setItem(s,JSON.stringify(e)),this.saveToHistory(e),this.notifyListeners(),!0}catch(s){return console.error("Error saving staging ground to localStorage:",s),!1}}updateFile(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=this.getStagingGround(),a=n.files.findIndex(t=>t.path===e),r={path:e,content:t,metadata:(0,o.A)((0,o.A)({},s),{},{lastModified:Date.now()}),timestamp:Date.now()};return a>=0?n.files[a]=r:n.files.push(r),this.saveStagingGround(n)}removeFile(e){const t=this.getStagingGround();return t.files=t.files.filter(t=>t.path!==e),this.saveStagingGround(t)}updateCommitMessage(e){const t=this.getStagingGround();return t.message=e,this.saveStagingGround(t)}hasChanges(){return this.getStagingGround().files.length>0}getChangedFilesCount(){return this.getStagingGround().files.length}clearStagingGround(){const e=this.createEmptyStagingGround();return this.saveStagingGround(e)}saveToHistory(e){try{const t="".concat(this.getStorageKey(),"_history"),s=this.getHistory();s.push((0,o.A)((0,o.A)({},e),{},{savedAt:Date.now()}));const n=s.slice(-10);localStorage.setItem(t,JSON.stringify(n))}catch(t){console.warn("Error saving to history:",t)}}getHistory(){try{const e="".concat(this.getStorageKey(),"_history"),t=localStorage.getItem(e);return t?JSON.parse(t):[]}catch(e){return console.warn("Error reading history:",e),[]}}rollbackToSave(e){const t=this.getHistory().find(t=>t.savedAt===e);if(!t)throw new Error("Save not found in history");const{savedAt:s}=t,o=(0,n.A)(t,a);return this.saveStagingGround(o)}exportStagingGround(){var e;return{current:this.getStagingGround(),history:this.getHistory(),exportedAt:Date.now(),repository:null===(e=this.currentRepository)||void 0===e?void 0:e.full_name,branch:this.currentBranch}}importStagingGround(e){var t;if(!e.current||!e.repository||!e.branch)throw new Error("Invalid export data format");if(e.repository!==(null===(t=this.currentRepository)||void 0===t?void 0:t.full_name)||e.branch!==this.currentBranch)throw new Error("Export data is for different repository or branch");if(this.saveStagingGround(e.current),e.history)try{const t="".concat(this.getStorageKey(),"_history");localStorage.setItem(t,JSON.stringify(e.history))}catch(s){console.warn("Error importing history:",s)}return!0}cleanup(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:6048e5;try{const s=Date.now(),n=[];for(let o=0;o<localStorage.length;o++){const a=localStorage.key(o);if(a&&a.startsWith("sgex_staging_"))try{const t=JSON.parse(localStorage.getItem(a));t.timestamp&&s-t.timestamp>e&&(n.push(a),n.push("".concat(a,"_history")))}catch(t){n.push(a)}}return n.forEach(e=>{localStorage.removeItem(e)}),n.length}catch(t){return console.error("Error during cleanup:",t),0}}addListener(e){return this.listeners.add(e),()=>{this.listeners.delete(e)}}notifyListeners(){const e=this.getStagingGround();this.listeners.forEach(t=>{try{t(e)}catch(s){console.error("Error in staging ground listener:",s)}})}contributeFiles(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Array.isArray(e)||(e=[e]);let s=!0;const n=[];return e.forEach(e=>{if(!e.path||!e.content)return n.push({path:e.path,success:!1,error:"Missing path or content"}),void(s=!1);const a=this.updateFile(e.path,e.content,(0,o.A)((0,o.A)({},t),{},{source:t.tool||"unknown",contributedAt:Date.now()}));n.push({path:e.path,success:a}),a||(s=!1)}),{success:s,results:n}}getStatus(){var e;const t=this.getStagingGround();return{hasChanges:this.hasChanges(),filesCount:this.getChangedFilesCount(),lastModified:t.timestamp,branch:this.currentBranch,repository:null===(e=this.currentRepository)||void 0===e?void 0:e.full_name}}}},61528:(e,t,s)=>{s.d(t,{A:()=>a});var n=s(50404),o=s(5452);const a=new class{constructor(){this.storageKey="sgex_tracked_items",this.logger=o.A.getLogger("IssueTrackingService"),this.syncInterval=null,this.syncIntervalMs=3e5}_getStorageKey(){return this.storageKey}_getStoredData(){try{const e=localStorage.getItem(this._getStorageKey());return e?JSON.parse(e):{trackedItems:{}}}catch(e){return this.logger.error("Failed to parse stored tracking data:",e),{trackedItems:{}}}}_saveStoredData(e){try{return localStorage.setItem(this._getStorageKey(),JSON.stringify(e)),!0}catch(t){return this.logger.error("Failed to save tracking data:",t),!1}}async _getCurrentUsername(){if(!n.A.isAuth())return null;try{return(await n.A.getCurrentUser()).login}catch(e){return this.logger.error("Failed to get current user:",e),null}}async getTrackedItems(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(!e&&(e=await this._getCurrentUsername(),!e))return{issues:[],pullRequests:[]};const t=this._getStoredData().trackedItems[e]||{issues:[],pullRequests:[]};return{issues:t.issues||[],pullRequests:t.pullRequests||[]}}async addTrackedIssue(e){const t=await this._getCurrentUsername();if(!t)return this.logger.warn("Cannot track issue: user not authenticated"),!1;const s=this._getStoredData();s.trackedItems[t]||(s.trackedItems[t]={issues:[],pullRequests:[]});if(s.trackedItems[t].issues.find(t=>t.id===e.id||t.number===e.number))return this.logger.debug("Issue already tracked:",e.number),!0;const n={id:e.id,number:e.number,title:e.title,html_url:e.html_url,created_at:e.created_at||(new Date).toISOString(),repository:e.repository||"litlfred/sgex",state:e.state||"open",labels:e.labels||[],trackedAt:(new Date).toISOString()};s.trackedItems[t].issues.push(n);const o=this._saveStoredData(s);return o&&(this.logger.info("Issue tracked successfully:",n.number),this.startBackgroundSync(),this._findRelatedPRs(t,n)),o}async addTrackedPR(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const s=await this._getCurrentUsername();if(!s)return this.logger.warn("Cannot track PR: user not authenticated"),!1;const n=this._getStoredData();n.trackedItems[s]||(n.trackedItems[s]={issues:[],pullRequests:[]});const o=n.trackedItems[s].pullRequests.find(t=>t.id===e.id||t.number===e.number);if(o)return t.length>0&&(o.linkedIssues=[...new Set([...o.linkedIssues||[],...t])],this._saveStoredData(n)),!0;const a={id:e.id,number:e.number,title:e.title,html_url:e.html_url,created_at:e.created_at||(new Date).toISOString(),repository:e.repository||"litlfred/sgex",state:e.state||"open",linkedIssues:t,trackedAt:(new Date).toISOString()};n.trackedItems[s].pullRequests.push(a);const r=this._saveStoredData(n);return r&&this.logger.info("PR tracked successfully:",a.number),r}async removeTrackedIssue(e){const t=await this._getCurrentUsername();if(!t)return!1;const s=this._getStoredData();if(!s.trackedItems[t]||!s.trackedItems[t].issues)return!1;const n=s.trackedItems[t].issues.length;return s.trackedItems[t].issues=s.trackedItems[t].issues.filter(t=>t.number!==e),s.trackedItems[t].issues.length<n&&(this._saveStoredData(s),this.logger.info("Issue untracked:",e),!0)}async removeTrackedPR(e){const t=await this._getCurrentUsername();if(!t)return!1;const s=this._getStoredData();if(!s.trackedItems[t]||!s.trackedItems[t].pullRequests)return!1;const n=s.trackedItems[t].pullRequests.length;return s.trackedItems[t].pullRequests=s.trackedItems[t].pullRequests.filter(t=>t.number!==e),s.trackedItems[t].pullRequests.length<n&&(this._saveStoredData(s),this.logger.info("PR untracked:",e),!0)}async getTrackedCounts(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;const t=await this.getTrackedItems(e);return{issues:t.issues.length,pullRequests:t.pullRequests.length,total:t.issues.length+t.pullRequests.length}}async _findRelatedPRs(e,t){if(n.A.isAuth())try{const[e,s]=t.repository.split("/");if(!e||!s)return;const o="is:pr repo:".concat(e,"/").concat(s," ").concat(t.number),a=await n.A.searchPullRequests(o);if(a&&a.items&&a.items.length>0)for(const n of a.items){const e="".concat(n.title," ").concat(n.body||"").toLowerCase(),s=["#".concat(t.number),"issue ".concat(t.number),"fixes #".concat(t.number),"closes #".concat(t.number),"resolves #".concat(t.number)];s.some(t=>e.includes(t.toLowerCase()))&&await this.addTrackedPR({id:n.id,number:n.number,title:n.title,html_url:n.html_url,created_at:n.created_at,repository:t.repository,state:n.state},[t.number])}}catch(s){this.logger.error("Failed to find related PRs:",s)}}async syncTrackedItems(){if(!n.A.isAuth())return;const e=await this._getCurrentUsername();if(!e)return;const t=await this.getTrackedItems(e);let s=!1;for(const a of t.issues)try{const[e,t]=a.repository.split("/");if(!e||!t)continue;const o=await n.A.getIssue(e,t,a.number);o&&o.state!==a.state&&(a.state=o.state,s=!0)}catch(o){this.logger.debug("Failed to sync issue ".concat(a.number,":"),o)}for(const a of t.pullRequests)try{const[e,t]=a.repository.split("/");if(!e||!t)continue;const o=await n.A.getPullRequest(e,t,a.number);o&&o.state!==a.state&&(a.state=o.state,s=!0)}catch(o){this.logger.debug("Failed to sync PR ".concat(a.number,":"),o)}if(s){const s=this._getStoredData();s.trackedItems[e]=t,this._saveStoredData(s),this.logger.info("Tracked items synced successfully")}}startBackgroundSync(){this.syncInterval||(this.syncInterval=setInterval(()=>{this.syncTrackedItems().catch(e=>{this.logger.error("Background sync failed:",e)})},this.syncIntervalMs),this.logger.debug("Background sync started"))}stopBackgroundSync(){this.syncInterval&&(clearInterval(this.syncInterval),this.syncInterval=null,this.logger.debug("Background sync stopped"))}async clearTrackedItems(){const e=await this._getCurrentUsername();if(!e)return!1;const t=this._getStoredData();return!!t.trackedItems[e]&&(delete t.trackedItems[e],this._saveStoredData(t),this.logger.info("All tracked items cleared for user:",e),!0)}clearAllData(){localStorage.removeItem(this._getStorageKey()),this.stopBackgroundSync(),this.logger.info("All tracking data cleared")}}},62148:(e,t,s)=>{s.d(t,{ox:()=>ne,Mx:()=>M,oc:()=>q,HX:()=>K});var n=s(65043),o=s(89379),a=s(73537),r=s(50404),i=s(89387);const l=new class{constructor(){this.storageKey="sgex-profile-subscriptions",this.whoProfile="WorldHealthOrganization"}getSubscriptions(){try{const e=localStorage.getItem(this.storageKey),t=e?JSON.parse(e):[];return t.find(e=>e.login===this.whoProfile)||(t.unshift({login:this.whoProfile,name:"World Health Organization",avatar_url:"https://github.com/".concat(this.whoProfile,".png"),type:"Organization",isPermanent:!0,addedAt:(new Date).toISOString()}),this.saveSubscriptions(t)),t}catch(e){return console.warn("Error reading profile subscriptions from localStorage:",e),[{login:this.whoProfile,name:"World Health Organization",avatar_url:"https://github.com/".concat(this.whoProfile,".png"),type:"Organization",isPermanent:!0,addedAt:(new Date).toISOString()}]}}saveSubscriptions(e){try{localStorage.setItem(this.storageKey,JSON.stringify(e))}catch(t){throw console.error("Error saving profile subscriptions to localStorage:",t),t}}addSubscription(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!e||!e.login)throw new Error("Profile must have a login property");const s=this.getSubscriptions(),n=s.findIndex(t=>t.login===e.login);if(-1!==n)return s[n]=(0,o.A)((0,o.A)((0,o.A)({},s[n]),e),{},{isPermanent:s[n].isPermanent||t,lastUpdated:(new Date).toISOString()}),this.saveSubscriptions(s),s[n];const a={login:e.login,name:e.name||e.login,avatar_url:e.avatar_url||"https://github.com/".concat(e.login,".png"),type:e.type||"User",isPermanent:t,addedAt:(new Date).toISOString(),lastUpdated:(new Date).toISOString()};return s.push(a),this.saveSubscriptions(s),a}removeSubscription(e){if(!e)return!1;try{const t=this.getSubscriptions(),s=t.findIndex(t=>t.login===e);if(-1===s)return!1;return t[s].isPermanent?(console.warn("Cannot remove permanent profile: ".concat(e)),!1):(t.splice(s,1),this.saveSubscriptions(t),!0)}catch(t){return console.error("Error removing profile subscription:",t),!1}}isSubscribed(e){if(!e)return!1;return this.getSubscriptions().some(t=>t.login===e)}getSubscription(e){if(!e)return null;return this.getSubscriptions().find(t=>t.login===e)||null}ensureCurrentUserSubscribed(e){if(!e||!e.login)return;const t=this.getSubscription(e.login);t?t.isPermanent||this.addSubscription((0,o.A)((0,o.A)((0,o.A)({},t),e),{},{isPermanent:!0}),!0):this.addSubscription((0,o.A)((0,o.A)({},e),{},{isPermanent:!0}),!0)}autoAddVisitedProfile(e){e&&e.login&&(this.isSubscribed(e.login)||e.isDemo||this.addSubscription(e,!1))}getSubscriptionsSorted(){return this.getSubscriptions().sort((e,t)=>{if(e.login===this.whoProfile)return-1;if(t.login===this.whoProfile)return 1;const s=e.name||e.login,n=t.name||t.login;return s.localeCompare(n)})}getSubscriptionsForSelection(){return this.getSubscriptionsSorted().map(e=>(0,o.A)((0,o.A)({},e),{},{displayName:e.name||e.login,isRemovable:!e.isPermanent}))}updateSubscription(e,t){if(!e||!t)return!1;try{const s=this.getSubscriptions(),n=s.findIndex(t=>t.login===e);return-1!==n&&(s[n]=(0,o.A)((0,o.A)((0,o.A)({},s[n]),t),{},{login:e,lastUpdated:(new Date).toISOString()}),this.saveSubscriptions(s),!0)}catch(s){return console.error("Error updating subscription:",s),!1}}clearSubscriptions(){try{const e={login:this.whoProfile,name:"World Health Organization",avatar_url:"https://github.com/".concat(this.whoProfile,".png"),type:"Organization",isPermanent:!0,addedAt:(new Date).toISOString()};this.saveSubscriptions([e])}catch(e){console.error("Error clearing subscriptions:",e)}}exportSubscriptions(){const e=this.getSubscriptions();return JSON.stringify(e,null,2)}importSubscriptions(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];try{const s=JSON.parse(e);if(!Array.isArray(s))throw new Error("Invalid subscription format");let n;if(t){const e=[...this.getSubscriptions()];s.forEach(t=>{const s=e.findIndex(e=>e.login===t.login);-1!==s?e[s]=(0,o.A)((0,o.A)({},t),{},{isPermanent:e[s].isPermanent||t.isPermanent}):e.push(t)}),n=e}else n=s;return n.find(e=>e.login===this.whoProfile)||n.unshift({login:this.whoProfile,name:"World Health Organization",avatar_url:"https://github.com/".concat(this.whoProfile,".png"),type:"Organization",isPermanent:!0,addedAt:(new Date).toISOString()}),this.saveSubscriptions(n),!0}catch(s){return console.error("Error importing subscriptions:",s),!1}}};var c=s(70579);const d="top-level",u="user",h="dak",g="asset",m=(0,n.createContext)(null),p=()=>{const e=(0,n.useContext)(m);return e||(console.error("usePage: PageContext is null - component not wrapped in PageProvider"),{pageName:"unknown",user:null,profile:null,repository:null,branch:null,asset:null,type:"top-level",loading:!1,error:null,isAuthenticated:!1,navigate:()=>{},params:{},location:{pathname:"/"}})},b=e=>{const{user:t,repo:s}=e;return e["*"]?g:t&&s?h:t?u:d},f=e=>{let{children:t,pageName:s}=e;const p=(0,a.g)(),f=(0,a.zy)(),v=(0,a.Zp)(),[y,w]=(0,n.useState)({type:b(p),pageName:s,loading:!1,error:null,user:null,profile:null,repository:null,branch:null,asset:null,isAuthenticated:r.A.isAuth()}),{user:k,repo:x}=p,N=p["*"];(0,n.useEffect)(()=>{(y.type!==d&&k||y.type===d)&&(async()=>{try{var e,t,n;w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!0,error:null}));let d=null===(e=f.state)||void 0===e?void 0:e.profile,m=null===(t=f.state)||void 0===t?void 0:t.repository,b=(null===(n=f.state)||void 0===n?void 0:n.selectedBranch)||p.branch;if(y.type===h||y.type===g){var a;if(!d&&k)if(r.A.isAuth())try{d=await r.A.getUser(k)}catch(c){if("dashboard"===s||s.includes("editor")||s.includes("viewer")||y.type===h||y.type===g)return void w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!1,error:"User '".concat(k,"' not found or not accessible. Please check the username and try again."),user:k,repository:x?{name:x,owner:{login:k},html_url:"https://github.com/".concat(k,"/").concat(x),isNotFound:!0}:null,branch:p.branch||"main"}));throw new Error("User '".concat(k,"' not found or not accessible."))}else{if(!i.A.validateDemoDAKRepository(k,x)){if("dashboard"===s||s.includes("editor")||s.includes("viewer")||y.type===h||y.type===g)return void w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!1,error:"Repository '".concat(k,"/").concat(x,"' not found or not accessible. This may be a private repository or the repository doesn't exist."),user:k,profile:{login:k,name:k.charAt(0).toUpperCase()+k.slice(1),avatar_url:"https://github.com/".concat(k,".png"),type:"User",isDemo:!0},repository:{name:x,owner:{login:k},html_url:"https://github.com/".concat(k,"/").concat(x),isNotFound:!0},branch:p.branch||"main"}));throw new Error("Repository '".concat(k,"/").concat(x,"' not found or not accessible."))}d={login:k,name:k.charAt(0).toUpperCase()+k.slice(1),avatar_url:"https://github.com/".concat(k,".png"),type:"User",isDemo:!0}}if(!m&&k&&x)if(r.A.isAuth())try{if(m=await r.A.getRepository(k,x),!await i.A.validateDAKRepository(k,x,b||m.default_branch)){if("dashboard"===s||s.includes("editor")||s.includes("viewer")||y.type===h||y.type===g)return void w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!1,error:"Repository '".concat(k,"/").concat(x,"' is not a valid DAK repository. This repository may not contain WHO SMART Guidelines content."),user:k,profile:d,repository:(0,o.A)((0,o.A)({},m),{},{isInvalidDAK:!0}),branch:b||m.default_branch}));throw new Error("Repository '".concat(k,"/").concat(x,"' is not a valid DAK repository."))}}catch(c){if("dashboard"===s||s.includes("editor")||s.includes("viewer")||y.type===h||y.type===g)return void w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!1,error:"Repository '".concat(k,"/").concat(x,"' not found or not accessible. Please check the repository name and your access permissions."),user:k,profile:d,repository:{name:x,owner:{login:k},html_url:"https://github.com/".concat(k,"/").concat(x),isNotFound:!0},branch:b||"main"}));throw new Error("Repository '".concat(k,"/").concat(x,"' not found or not accessible."))}else{if(!i.A.validateDemoDAKRepository(k,x)){if("dashboard"===s||s.includes("editor")||s.includes("viewer")||y.type===h||y.type===g)return void w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!1,error:"Repository '".concat(k,"/").concat(x,"' not found or not accessible. This may be a private repository or the repository doesn't exist."),user:k,profile:{login:k,name:k.charAt(0).toUpperCase()+k.slice(1),avatar_url:"https://github.com/".concat(k,".png"),type:"User",isDemo:!0},repository:{name:x,owner:{login:k},html_url:"https://github.com/".concat(k,"/").concat(x),isNotFound:!0},branch:b||"main"}));throw new Error("Repository '".concat(k,"/").concat(x,"' not found or not accessible."))}m={name:x,full_name:"".concat(k,"/").concat(x),owner:{login:k},default_branch:b||"main",html_url:"https://github.com/".concat(k,"/").concat(x),isDemo:!0}}if(b=b||(null===(a=m)||void 0===a?void 0:a.default_branch)||"main",y.type===g&&N)try{await r.A.getFileContent(k,x,N,b)}catch(c){if("asset"===s||s.includes("editor")||s.includes("viewer"))return void w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!1,error:"Asset '".concat(N,"' not found in repository '").concat(k,"/").concat(x,"'. The file may have been moved or deleted."),user:k,profile:d,repository:m,branch:b,asset:N}));throw new Error("Asset '".concat(N,"' not found in repository."))}}if(y.type===u&&!d&&k)if(r.A.isAuth())try{d=await r.A.getUser(k)}catch(c){return void w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!1,error:"User '".concat(k,"' not found or not accessible. Please check the username and try again."),user:k}))}else d={login:k,name:k.charAt(0).toUpperCase()+k.slice(1),avatar_url:"https://github.com/".concat(k,".png"),type:"User",isDemo:!0};w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!1,user:k,profile:d,repository:m,branch:b,asset:N,isAuthenticated:r.A.isAuth()}));const v=async()=>{try{const e=await r.A.getCurrentUser();e&&l.ensureCurrentUserSubscribed(e)}catch(e){console.debug("Could not fetch current user for subscriptions:",e)}!d||d.isDemo||y.type!==u&&y.type!==h&&y.type!==g||l.autoAddVisitedProfile(d)};r.A.isAuth()&&v()}catch(d){console.error("Page data loading error:",d),w(e=>(0,o.A)((0,o.A)({},e),{},{loading:!1,error:d.message}))}})()},[k,x,p.branch,N,y.type,f.state,v,s]),(0,n.useEffect)(()=>{const e=setInterval(()=>{const e=r.A.isAuth();e!==y.isAuthenticated&&w(t=>(0,o.A)((0,o.A)({},t),{},{isAuthenticated:e}))},1e3);return()=>clearInterval(e)},[y.isAuthenticated]);const S=(0,o.A)((0,o.A)({},y),{},{navigate:v,params:p,location:f});return(0,c.jsx)(m.Provider,{value:S,children:t})};var v=s(5452);const y=e=>{const t=document.body.classList.contains("theme-dark"),s="/sgex/copilot-fix-719",n=e.startsWith("/")?e.slice(1):e;let o;if(t){const e=n.replace(/\.png$/,"_grey_tabby.png");o=s?"".concat(s,"/").concat(e):"/".concat(e)}else o=s?"".concat(s,"/").concat(n):"/".concat(n);return o},w="authenticated",k="unauthenticated",x="demo",N="read",S="write",j="none";const A=new class{constructor(){this.logger=v.A.getLogger("UserAccessService"),this.currentUser=null,this.userType=k,this.permissions=new Map,this.listeners=new Set}async initialize(){this.logger.info("Initializing user access service"),await this.detectUserType(),this.notifyListeners()}async detectUserType(){try{if(r.A.isAuth()){this.checkIfDemoUser()?(this.userType=x,this.currentUser=await this.createDemoUser()):(this.userType=w,this.currentUser=await r.A.getCurrentUser())}else this.userType=k,this.currentUser=null;this.logger.info("User type detected",{userType:this.userType,hasUser:!!this.currentUser})}catch(e){this.logger.error("Error detecting user type",{error:e.message}),this.userType=k,this.currentUser=null}}checkIfDemoUser(){return"true"===localStorage.getItem("sgex_demo_mode")||"true"==={NODE_ENV:"production",PUBLIC_URL:"/sgex/copilot-fix-719",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_GITHUB_REF_NAME:"copilot/fix-719"}.REACT_APP_DEMO_MODE}async createDemoUser(){try{const e=await r.A.getCurrentUser();return(0,o.A)((0,o.A)({},e),{},{isDemo:!0,demoData:this.getDemoData()})}catch(e){return{login:"demo-user",name:"Demo User",avatar_url:y("sgex-mascot.png"),type:"User",isDemo:!0,demoData:this.getDemoData()}}}getDemoData(){return{daks:[{owner:"WHO",repo:"smart-anc",name:"Smart Antenatal Care",description:"Demo DAK for antenatal care guidelines"},{owner:"WHO",repo:"smart-tb",name:"Smart Tuberculosis",description:"Demo DAK for tuberculosis care guidelines"}],sampleAssets:{"input/vocabulary/ValueSet-anc-care-codes.json":{type:"ValueSet",description:"Demo value set for antenatal care"}}}}getUserType(){return this.userType}getCurrentUser(){return this.currentUser}isAuthenticated(){return this.userType===w||this.userType===x}isDemoUser(){return this.userType===x}isUnauthenticated(){return this.userType===k}async getRepositoryAccess(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main";const n="".concat(e,"/").concat(t,"/").concat(s);if(this.permissions.has(n))return this.permissions.get(n);let o=j;try{if(this.userType===k)o=N;else if(this.userType===x){o=this.isDemoDAK(e,t)?N:j}else if(this.userType===w){const s=await this.checkGitHubReadAccess(e,t);await this.checkGitHubWriteAccess(e,t)?o=S:s&&(o=N)}}catch(a){this.logger.error("Error checking repository access",{owner:e,repo:t,branch:s,error:a.message}),o=N}return this.permissions.set(n,o),this.logger.debug("Repository access determined",{owner:e,repo:t,branch:s,access:o,userType:this.userType}),o}isDemoDAK(e,t){var s,n;return!(null===(s=this.currentUser)||void 0===s||null===(n=s.demoData)||void 0===n||!n.daks)&&this.currentUser.demoData.daks.some(s=>s.owner===e&&s.repo===t)}async checkGitHubReadAccess(e,t){try{return await r.A.getRepository(e,t),!0}catch(s){return!1}}async checkGitHubWriteAccess(e,t){try{return await r.A.hasRepositoryWriteAccess(e,t)}catch(s){return!1}}async canSaveToGitHub(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main";if(this.userType!==w)return!1;return await this.getRepositoryAccess(e,t,s)===S}canSaveLocal(){return!0}getUIBehavior(){const e={showEditFeatures:!0,showSaveToGitHub:!0,showSaveLocal:!0,confirmBeforeSave:!0,allowCreateNew:!0,showAccessBadges:!0};switch(this.userType){case k:return(0,o.A)((0,o.A)({},e),{},{showEditFeatures:!1,showSaveToGitHub:!1,allowCreateNew:!1});case x:return(0,o.A)((0,o.A)({},e),{},{showSaveToGitHub:!1,allowCreateNew:!1});case w:return e;default:return(0,o.A)((0,o.A)({},e),{},{showEditFeatures:!1,showSaveToGitHub:!1,allowCreateNew:!1})}}async getAccessBadge(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main";const n=await this.getRepositoryAccess(e,t,s),o={[S]:{text:"Write Access",icon:"\u270f\ufe0f",color:"green",description:"You can edit and save changes to this repository"},[N]:{text:"Read Only",icon:"\ud83d\udc41\ufe0f",color:"blue",description:"You can view this repository but cannot save changes"},[j]:{text:"No Access",icon:"\ud83d\udeab",color:"red",description:"You do not have access to this repository"}};return o[n]||o[j]}enableDemoMode(){localStorage.setItem("sgex_demo_mode","true"),this.initialize()}disableDemoMode(){localStorage.removeItem("sgex_demo_mode"),this.initialize()}clearPermissionsCache(){this.permissions.clear(),this.logger.debug("Permissions cache cleared")}addListener(e){return this.listeners.add(e),()=>{this.listeners.delete(e)}}notifyListeners(){const e={userType:this.userType,currentUser:this.currentUser,isAuthenticated:this.isAuthenticated(),isDemoUser:this.isDemoUser(),uiBehavior:this.getUIBehavior()};this.listeners.forEach(t=>{try{t(e)}catch(s){this.logger.error("Error in access service listener",{error:s.message})}})}handleAuthChange(){this.clearPermissionsCache(),this.initialize()}};const C=new class{constructor(){this.storageKey="sgex-bookmarks"}getBookmarks(){try{const e=localStorage.getItem(this.storageKey);return e?JSON.parse(e):[]}catch(e){return console.warn("Error reading bookmarks from localStorage:",e),[]}}saveBookmarks(e){try{localStorage.setItem(this.storageKey,JSON.stringify(e))}catch(t){throw console.error("Error saving bookmarks to localStorage:",t),t}}generateBookmarkTitle(e,t){const{user:s,repository:n,branch:o,asset:a}=t;if(a&&s&&n){const e=n.name||n,t=o||"main";return"".concat(a," in DAK: ").concat(s,"/").concat(e,"/").concat(t)}if(s&&n&&o){const e=n.name||n;return"DAK: ".concat(s,"/").concat(e,"/").concat(o)}if(s&&n){const e=n.name||n;return"DAK: ".concat(s,"/").concat(e)}return s?"".concat(e,": ").concat(s):e}addBookmark(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=this.getBookmarks(),a=n.findIndex(e=>e.url===t);if(-1!==a)n[a]=(0,o.A)((0,o.A)({},n[a]),{},{title:this.generateBookmarkTitle(e,s),pageName:e,context:s,lastUpdated:(new Date).toISOString()});else{const o={id:Date.now().toString(),title:this.generateBookmarkTitle(e,s),url:t,pageName:e,context:s,createdAt:(new Date).toISOString(),lastUpdated:(new Date).toISOString()};n.push(o)}return this.saveBookmarks(n),n[a]||n[n.length-1]}removeBookmark(e){try{const t=this.getBookmarks(),s=t.filter(t=>t.id!==e);return s.length!==t.length&&(this.saveBookmarks(s),!0)}catch(t){return console.error("Error removing bookmark:",t),!1}}isBookmarked(e){return this.getBookmarks().some(t=>t.url===e)}getBookmarkByUrl(e){return this.getBookmarks().find(t=>t.url===e)||null}getBookmarksGroupedByPage(){const e=this.getBookmarks(),t={};e.forEach(e=>{const s=e.pageName||"Other";t[s]||(t[s]=[]),t[s].push(e)}),Object.keys(t).forEach(e=>{t[e].sort((e,t)=>e.title.localeCompare(t.title))});return Object.keys(t).sort().map(e=>({pageName:e,bookmarks:t[e]}))}clearBookmarks(){try{localStorage.removeItem(this.storageKey)}catch(e){console.error("Error clearing bookmarks:",e)}}exportBookmarks(){const e=this.getBookmarks();return JSON.stringify(e,null,2)}importBookmarks(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];try{const s=JSON.parse(e);if(!Array.isArray(s))throw new Error("Invalid bookmark format");if(t){const e=[...this.getBookmarks()];s.forEach(t=>{const s=e.findIndex(e=>e.url===t.url);-1!==s?e[s]=t:e.push(t)}),this.saveBookmarks(e)}else this.saveBookmarks(s);return!0}catch(s){return console.error("Error importing bookmarks:",s),!1}}};const I=new class{constructor(){this.baseURL="https://api.github.com",this.owner="litlfred",this.repo="sgex",this.workflowFileName="pages.yml"}setToken(e){this.token=e}getHeaders(){const e={Accept:"application/vnd.github.v3+json","Content-Type":"application/json"};return this.token&&(e.Authorization="token ".concat(this.token)),e}async getWorkflowId(){try{const e=await fetch("".concat(this.baseURL,"/repos/").concat(this.owner,"/").concat(this.repo,"/actions/workflows"),{headers:this.getHeaders()});if(!e.ok)throw new Error("Failed to fetch workflows: ".concat(e.status));const t=await e.json();console.debug("Available workflows:",t.workflows.map(e=>({name:e.name,path:e.path})));const s=t.workflows.find(e=>e.path.includes("branch-deployment.yml")||e.name.includes("Deploy Feature Branch")||e.path.includes("landing-page-deployment.yml")||e.name.includes("Deploy Landing Page")||e.path.includes(this.workflowFileName)||e.name.includes("Multi-Branch GitHub Pages Deployment"));return console.debug("Selected workflow:",s?{name:s.name,path:s.path,id:s.id}:"None found"),s?s.id:null}catch(e){return console.error("Error fetching workflow ID:",e),null}}async getLatestWorkflowRun(e){try{console.debug("Looking for workflow runs for branch: ".concat(e));const t="main"===e,s=t?"Deploy Landing Page":"Deploy Feature Branch",n=await fetch("".concat(this.baseURL,"/repos/").concat(this.owner,"/").concat(this.repo,"/actions/workflows"),{headers:this.getHeaders()});if(!n.ok)throw new Error("Failed to fetch workflows: ".concat(n.status));const o=await n.json();let a;if(console.debug("Available workflows:",o.workflows.map(e=>({name:e.name,path:e.path}))),a=t?o.workflows.find(e=>e.name.includes("Deploy Landing Page")||e.path.includes("landing-page-deployment.yml")):o.workflows.find(e=>e.name.includes("Deploy Feature Branch")||e.path.includes("branch-deployment.yml")),!a)return console.debug("No ".concat(s," workflow found for branch ").concat(e)),null;console.debug("Using workflow: ".concat(a.name," (ID: ").concat(a.id,") for branch ").concat(e));const r=await fetch("".concat(this.baseURL,"/repos/").concat(this.owner,"/").concat(this.repo,"/actions/workflows/").concat(a.id,"/runs?branch=").concat(encodeURIComponent(e),"&per_page=5"),{headers:this.getHeaders()});if(!r.ok)throw new Error("Failed to fetch workflow runs: ".concat(r.status));const i=await r.json();if(console.debug("Found ".concat(i.workflow_runs.length," workflow runs for branch ").concat(e)),i.workflow_runs.length>0){const e=i.workflow_runs[0];return console.debug("Latest run: ".concat(e.status,"/").concat(e.conclusion," at ").concat(e.created_at)),e}return null}catch(t){return console.error("Error fetching latest workflow run for branch ".concat(e,":"),t),null}}async getWorkflowStatusForBranches(e){const t={};for(const n of e)try{const e=await this.getLatestWorkflowRun(n);t[n]=this.parseWorkflowStatus(e)}catch(s){console.error("Error getting workflow status for branch ".concat(n,":"),s),t[n]={status:"unknown",conclusion:null,url:null,runId:null,createdAt:null}}return t}parseWorkflowStatus(e){if(!e)return{status:"not_started",conclusion:null,url:null,runId:null,createdAt:null,displayStatus:"Not Started",badgeClass:"not-started",icon:"\u26aa"};const t=e.status,s=e.conclusion;let n,o,a;return"in_progress"===t||"queued"===t||"pending"===t?(n="In Progress",o="in-progress",a="\ud83d\udfe1"):"waiting"===t?(n="Awaiting Approval",o="waiting",a="\ud83d\udfe0"):"requested"===t?(n="Requested",o="requested",a="\ud83d\udd35"):"completed"===t?"success"===s?(n="Succeeded",o="succeeded",a="\ud83d\udfe2"):"failure"===s||"cancelled"===s||"timed_out"===s?(n="Failed",o="failed",a="\ud83d\udd34"):"action_required"===s?(n="Action Required",o="action-required",a="\ud83d\udfe0"):(n="Completed",o="completed",a="\ud83d\udfe6"):(n="Unknown",o="unknown",a="\u26ab"),{status:t,conclusion:s,url:e.html_url,runId:e.id,createdAt:new Date(e.created_at),displayStatus:n,badgeClass:o,icon:a}}async triggerWorkflow(e){try{if(!this.token)throw new Error("Authentication required to trigger workflows");console.debug("Triggering workflow for branch: ".concat(e));const t="main"===e,s=await fetch("".concat(this.baseURL,"/repos/").concat(this.owner,"/").concat(this.repo,"/actions/workflows"),{headers:this.getHeaders()});if(!s.ok)throw new Error("Failed to fetch workflows: ".concat(s.status));const n=await s.json();let o;if(o=t?n.workflows.find(e=>e.name.includes("Deploy Landing Page")||e.path.includes("landing-page-deployment.yml")):n.workflows.find(e=>e.name.includes("Deploy Feature Branch")||e.path.includes("branch-deployment.yml")),!o)throw new Error("No deployment workflow found for branch ".concat(e));console.debug("Triggering workflow: ".concat(o.name," (ID: ").concat(o.id,") for branch ").concat(e));const a=await fetch("".concat(this.baseURL,"/repos/").concat(this.owner,"/").concat(this.repo,"/actions/workflows/").concat(o.id,"/dispatches"),{method:"POST",headers:this.getHeaders(),body:JSON.stringify({ref:e,inputs:{branch:e}})});if(!a.ok){const t=await a.text();throw console.error("Workflow trigger failed:",{status:a.status,statusText:a.statusText,error:t,branch:e,workflowId:o.id}),new Error("Failed to trigger workflow: ".concat(a.status," ").concat(a.statusText," - ").concat(t))}return console.debug("Successfully triggered workflow for branch ".concat(e)),!0}catch(t){return console.error("Error triggering workflow for branch ".concat(e,":"),t),!1}}getActionsURL(){return"https://github.com/".concat(this.owner,"/").concat(this.repo,"/actions")}async getWorkflowURL(){try{const e=await this.getWorkflowId();return e?"https://github.com/".concat(this.owner,"/").concat(this.repo,"/actions/workflows/").concat(e):this.getActionsURL()}catch(e){return console.error("Error getting workflow URL:",e),this.getActionsURL()}}async checkWorkflowTriggerPermissions(){try{if(!this.token)return!1;return!!(await fetch("".concat(this.baseURL,"/repos/").concat(this.owner,"/").concat(this.repo,"/actions/workflows"),{headers:this.getHeaders()})).ok}catch(e){return console.debug("Cannot check workflow trigger permissions:",e),!1}}async checkWorkflowApprovalPermissions(){try{if(!this.token)return!1;return(await fetch("".concat(this.baseURL,"/repos/").concat(this.owner,"/").concat(this.repo,"/actions/runs?status=waiting"),{headers:this.getHeaders()})).ok}catch(e){return console.debug("Cannot check workflow approval permissions:",e),!1}}async approveWorkflowRun(e){try{if(!this.token)throw new Error("Authentication required to approve workflow runs");console.debug("Approving workflow run: ".concat(e));const t=await fetch("".concat(this.baseURL,"/repos/").concat(this.owner,"/").concat(this.repo,"/actions/runs/").concat(e,"/approve"),{method:"POST",headers:this.getHeaders()});if(!t.ok){const s=await t.text();throw console.error("Workflow approval failed:",{status:t.status,statusText:t.statusText,error:s,runId:e}),new Error("Failed to approve workflow run: ".concat(t.status," ").concat(t.statusText," - ").concat(s))}return console.debug("Successfully approved workflow run ".concat(e)),!0}catch(t){return console.error("Error approving workflow run ".concat(e,":"),t),!1}}isAuthenticated(){return!!this.token}},T=e=>{let{workflowStatus:t,branchName:s,onTriggerWorkflow:o,onApproveWorkflow:a,isAuthenticated:r,canTriggerWorkflows:i=!1,canApproveWorkflows:l=!1,isLoading:d=!1}=e;const[u,h]=(0,n.useState)(!1),[g,m]=(0,n.useState)(!1);return d?(0,c.jsxs)("div",{className:"workflow-status-section",children:[(0,c.jsx)("div",{className:"workflow-status-header",children:(0,c.jsx)("h4",{className:"workflow-status-title",children:"\u2699\ufe0f Build Status"})}),(0,c.jsx)("div",{className:"workflow-loading",children:"Loading workflow status..."})]}):t?(0,c.jsxs)("div",{className:"workflow-status-section",children:[(0,c.jsx)("div",{className:"workflow-status-header",children:(0,c.jsx)("h4",{className:"workflow-status-title",children:"\u2699\ufe0f Build Status"})}),(0,c.jsxs)("div",{className:"workflow-status-container",children:[(0,c.jsxs)("div",{className:"workflow-status-info",children:[t.url?(0,c.jsxs)("a",{href:t.url,target:"_blank",rel:"noopener noreferrer",className:"workflow-status-badge ".concat(t.badgeClass),children:[(0,c.jsx)("span",{children:t.icon}),t.displayStatus]}):(0,c.jsxs)("span",{className:"workflow-status-badge ".concat(t.badgeClass),children:[(0,c.jsx)("span",{children:t.icon}),t.displayStatus]}),t.createdAt&&(0,c.jsx)("span",{className:"workflow-status-details",children:(p=t.createdAt,p?new Intl.DateTimeFormat("en-US",{month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"}).format(p):"")})]}),(0,c.jsxs)("div",{className:"workflow-actions",children:[r&&i&&(0,c.jsx)("button",{onClick:async()=>{if(r&&!u&&o&&i){h(!0);try{await o(s)}finally{h(!1)}}},disabled:u,className:"workflow-trigger-btn",title:"Trigger build for ".concat(s),children:u?(0,c.jsx)(c.Fragment,{children:"\u23f3 Starting..."}):(0,c.jsx)(c.Fragment,{children:"\ud83d\udd04 Trigger Build"})}),r&&l&&"waiting"===(null===t||void 0===t?void 0:t.status)&&(0,c.jsx)("button",{onClick:async()=>{if(r&&!g&&a&&l&&null!==t&&void 0!==t&&t.runId){m(!0);try{await a(t.runId)}finally{m(!1)}}},disabled:g,className:"workflow-approve-btn",title:"Approve workflow run for ".concat(s),children:g?(0,c.jsx)(c.Fragment,{children:"\u23f3 Approving..."}):(0,c.jsx)(c.Fragment,{children:"\u2705 Approve Run"})}),(null===t||void 0===t?void 0:t.url)&&(0,c.jsx)("a",{href:t.url,target:"_blank",rel:"noopener noreferrer",className:"workflow-link",children:"\ud83d\udccb View Log"})]})]})]}):(0,c.jsxs)("div",{className:"workflow-status-section",children:[(0,c.jsx)("div",{className:"workflow-status-header",children:(0,c.jsx)("h4",{className:"workflow-status-title",children:"\u2699\ufe0f Build Status"})}),(0,c.jsx)("div",{className:"workflow-error",children:"Unable to load workflow status"})]});var p};var D=s(10739),_=s(73242),E=s(87977);const R=()=>{const[e,t]=(0,n.useState)(null),[s,a]=(0,n.useState)([]),[i,l]=(0,n.useState)(!0),[d,u]=(0,n.useState)(null),[h,g]=(0,n.useState)(!1),[m,p]=(0,n.useState)(!1),[b,f]=(0,n.useState)([]),[v,y]=(0,n.useState)(!1),[w,k]=(0,n.useState)(""),[x,N]=(0,n.useState)(!1),[S,j]=(0,n.useState)(null),[A,C]=(0,n.useState)(new Set),[R,P]=(0,n.useState)(!1),[G,H]=(0,n.useState)(!1),[L,F]=(0,n.useState)(null),[O,U]=(0,n.useState)(!1),[B,M]=(0,n.useState)(null),[K,q]=(0,n.useState)(null),[W,z]=(0,n.useState)(!1),[X,V]=(0,n.useState)(!0),[J,Y]=(0,n.useState)(!1),[Q,Z]=(0,n.useState)(!1),[$,ee]=(0,n.useState)(1),[te,se]=(0,n.useState)([]),[ne,oe]=(0,n.useState)(!1),ae=(0,n.useRef)(null),re=(0,n.useRef)(null),ie=(0,n.useRef)(null);(0,n.useEffect)(()=>{(async()=>{try{l(!0),u(null);const s=le();if(!s||"main"===s)return void l(!1);t({name:s,safeName:s.replace(/\//g,"-")});try{const e=await ce(s);e&&e.length>0&&a(e)}catch(e){console.debug("Could not fetch PR info:",e)}l(!1)}catch(s){console.error("Error detecting branch:",s),u(s.message),l(!1)}})()},[]),(0,n.useEffect)(()=>{const e=e=>{ae.current&&!ae.current.contains(e.target)&&(m&&p(!1),g(!1))};if(h)return document.addEventListener("mousedown",e),document.addEventListener("touchstart",e),()=>{document.removeEventListener("mousedown",e),document.removeEventListener("touchstart",e)}},[h,m]),(0,n.useEffect)(()=>()=>{re.current&&(clearInterval(re.current),re.current=null),ie.current&&(clearInterval(ie.current),ie.current=null)},[]),(0,n.useEffect)(()=>{h||(re.current&&(clearInterval(re.current),re.current=null),ie.current&&(clearInterval(ie.current),ie.current=null))},[h]);const le=()=>"copilot/fix-719",ce=async e=>{try{const t="litlfred",s="sgex";return await r.A.getPullRequestsForBranch(t,s,e)}catch(d){return console.debug("Failed to fetch PR info:",d),[]}},de=async function(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];try{y(!0);const i=30,[l,c]=await Promise.all([r.A.getPullRequestComments(e,t,s,n,i).catch(()=>[]),r.A.getPullRequestIssueComments(e,t,s,n,i).catch(()=>[])]),d=[...l.map(e=>(0,o.A)((0,o.A)({},e),{},{type:"review"})),...c.map(e=>(0,o.A)((0,o.A)({},e),{},{type:"issue"}))].sort((e,t)=>new Date(t.created_at)-new Date(e.created_at));if(a){const e=new Set(te.map(e=>e.id)),t=d.filter(t=>!e.has(t.id)),s=[...te,...t];se(s),f(s.slice(0,Math.min(5,s.length)))}else se(d),f(d.slice(0,Math.min(5,d.length)));return oe(d.length===i),d}catch(d){return console.debug("Failed to fetch comments:",d),[]}finally{y(!1)}},ue=async e=>{try{U(!0),r.A.isAuth()&&r.A.token&&I.setToken(r.A.token);const t=await I.getLatestWorkflowRun(e),s=I.parseWorkflowStatus(t);F(s)}catch(d){console.debug("Failed to fetch workflow status:",d),F(null)}finally{U(!1)}},he=async e=>{try{if(!r.A.isAuth())return console.warn("Authentication required to trigger workflows"),!1;I.setToken(r.A.token);const t=await I.triggerWorkflow(e);return t&&setTimeout(()=>{ue(e)},2e3),t}catch(d){return console.error("Failed to trigger workflow:",d),!1}},ge=async t=>{try{if(!r.A.isAuth())return console.warn("Authentication required to approve workflows"),!1;I.setToken(r.A.token);const s=await I.approveWorkflowRun(t);return s&&setTimeout(()=>{null!==e&&void 0!==e&&e.name&&ue(e.name)},2e3),s}catch(d){return console.error("Failed to approve workflow:",d),!1}},me=e=>{ie.current&&clearInterval(ie.current),ie.current=setInterval(async()=>{try{const t=null===L||void 0===L?void 0:L.status;await ue(e),null!==L&&void 0!==L&&L.status&&L.status!==t&&console.debug("Workflow status changed from ".concat(t," to ").concat(L.status))}catch(d){console.debug("Failed to auto-refresh workflow status:",d)}},3e4)},pe=e=>{const t=new Set(A);t.has(e)?t.delete(e):t.add(e),C(t)},be=async()=>{if(w.trim()&&r.A.isAuth()&&!x&&X)try{N(!0),j("submitting");const t="litlfred",n="sgex";if(console.debug("Submitting comment:",{authenticated:r.A.isAuth(),hasToken:!!r.A.token,commentLength:w.trim().length,prInfo:(null===s||void 0===s?void 0:s.length)||0,canComment:X}),s&&s.length>0){const o=s[0];console.debug("Submitting to PR:",o.number);try{const e=await r.A.createPullRequestComment(t,n,o.number,w.trim());console.debug("Comment submitted successfully:",e),j("success"),await de(t,n,o.number,1,!1),e&&e.id&&(M(e.id),setTimeout(()=>M(null),3e3)),k(""),H(!1),setTimeout(()=>j(null),3e3)}catch(e){console.error("GitHub API comment submission error:",{error:e,message:e.message,status:e.status,response:e.response});let t="Failed to submit comment. ";e.message.includes("401")?t+="Authentication failed - please check your token.":e.message.includes("403")||e.message.includes("Resource not accessible by personal access token")?(t+='Your personal access token does not have permission to create comments. Please use a token with "repo" or "public_repo" scope.',V(!1)):e.message.includes("404")?t+="Pull request not found.":e.message.includes("422")?t+="Invalid comment format.":t+="Please try again.",j({type:"error",message:t}),setTimeout(()=>j(null),7e3)}}else console.warn("No PR info available for comment submission"),j({type:"error",message:"No pull request found to comment on."}),setTimeout(()=>j(null),5e3)}catch(d){console.error("Unexpected error during comment submission:",d),j({type:"error",message:"Unexpected error occurred. Please try again."}),setTimeout(()=>j(null),5e3)}finally{N(!1)}},fe=e=>{if(!e)return"";return E.A.sanitize(e)},ve=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200;return e.length<=t?e:e.substring(0,t)+"..."},ye=e=>new Date(e).toLocaleDateString("en-US",{month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"}),we=async(t,s)=>{if(s&&(s.stopPropagation(),s.preventDefault()),t&&t.html_url&&!h){g(!0),p(!0);const s="litlfred",n="sgex";if(await de(s,n,t.number,1,!1),await(async(e,t)=>{if(!r.A.isAuth())return V(!1),Y(!1),void Z(!1);try{const s=await r.A.checkCommentPermissions(e,t);V(s),I.setToken(r.A.token);const[n,o]=await Promise.all([I.checkWorkflowTriggerPermissions(),I.checkWorkflowApprovalPermissions()]);Y(n),Z(o)}catch(d){console.debug("Error checking permissions:",d),V(!1),Y(!1),Z(!1)}})(s,n),r.A.isAuth()&&X)try{await r.A.checkRepositoryWritePermissions(s,n)&&!w.includes("@copilot")&&k("@copilot ")}catch(d){console.debug("Could not check collaborator status:",d)}if(r.A.isAuth())try{const e=await(async(e,t,s)=>{try{if(!r.A.isAuth())return null;const n=(await r.A.getPullRequestIssueComments(e,t,s)).filter(e=>"copilot"===e.user.login||e.user.login.includes("copilot")||e.body.includes("@copilot")||e.body.includes("copilot session")||e.body.includes("GitHub Copilot"));if(n.length>0){const o=n[0];let a=null;const r=/https:\/\/github\.com\/[^/]+\/[^/]+\/pull\/\d+\/agent-sessions\/[a-f0-9-]+/gi;for(const e of n){const t=e.body.match(r);if(t){a=t[0];break}}return a||(a="https://github.com/".concat(e,"/").concat(t,"/pull/").concat(s,"/agent-sessions")),{hasActiveCopilot:!0,latestActivity:o.created_at,sessionUrl:a,commentUrl:"https://github.com/".concat(e,"/").concat(t,"/pull/").concat(s,"#issuecomment-").concat(o.id),commentsCount:n.length,latestComment:o}}return{hasActiveCopilot:!1,commentsCount:0}}catch(d){return console.debug("Failed to fetch copilot session info:",d),null}})(s,n,t.number);q(e)}catch(d){console.debug("Could not fetch copilot session info:",d)}null!==e&&void 0!==e&&e.name&&(await ue(e.name),me(e.name)),((e,t,s)=>{re.current&&clearInterval(re.current),re.current=setInterval(async()=>{try{const n=await de(e,t,s,1,!1);if(n.length>0&&b.length>0){n[0].id!==b[0].id&&console.debug("New comments detected, refreshing...")}}catch(d){console.debug("Failed to auto-refresh comments:",d)}},6e4)})(s,n,t.number)}else t&&t.html_url&&h&&window.open(t.html_url,"_blank")},ke=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:30;return e.length<=t?e:e.substring(0,t)+"..."};return i||d||!e?null:(0,c.jsxs)("div",{className:"preview-badge-container",ref:ae,children:[s&&s.length>0?(0,c.jsxs)(c.Fragment,{children:[s.map((e,t)=>(0,c.jsx)("div",{className:"preview-badge clickable ".concat(h?"expanded":""," ").concat(m?"sticky":""),onClick:t=>we(e,t),title:h?"Click to view PR: ".concat(e.title):"Click to expand for comments: ".concat(e.title),children:(0,c.jsxs)("div",{className:"badge-content",children:[(0,c.jsx)("span",{className:"badge-label",children:"PR:"}),(0,c.jsxs)("span",{className:"badge-branch",children:["#",e.number]}),(0,c.jsx)("span",{className:"badge-separator",children:"|"}),(0,c.jsx)("span",{className:"badge-pr-title",children:ke(e.title)}),(0,c.jsx)("span",{className:"badge-expand-icon",children:h?"\u25bc":"\u25b6"})]})},e.id)),h&&(0,c.jsxs)("div",{className:"preview-badge-expanded",children:[(0,c.jsxs)("div",{className:"expanded-header",children:[(0,c.jsxs)("div",{className:"pr-info",children:[(0,c.jsx)("h3",{children:(0,c.jsxs)("a",{href:s[0].html_url,target:"_blank",rel:"noopener noreferrer",children:["#",s[0].number,": ",s[0].title]})}),(0,c.jsxs)("div",{className:"pr-meta",children:[(0,c.jsx)("span",{className:"pr-state","data-state":s[0].state,children:s[0].state}),(0,c.jsxs)("span",{className:"pr-author",children:["by ",(0,c.jsx)("a",{href:s[0].user.html_url,target:"_blank",rel:"noopener noreferrer",className:"pr-author-link",children:s[0].user.login})]})]})]}),(0,c.jsx)("button",{className:"close-button",onClick:e=>{e.stopPropagation(),g(!1),p(!1)},title:"Close expanded view",children:"\xd7"})]}),r.A.isAuth()&&(0,c.jsxs)("div",{className:"comment-form",children:[(0,c.jsx)("h4",{children:"Add Comment"}),!X&&(0,c.jsxs)("div",{className:"comment-disabled-notice",children:[(0,c.jsx)("strong",{children:"\ud83d\udca1 Comments disabled:"}),' Your personal access token does not have permission to create comments. Please use a token with "repo" or "public_repo" scope to enable commenting.']}),S&&(0,c.jsx)("div",{className:"comment-status comment-status-".concat("string"===typeof S?S:S.type),children:"string"===typeof S?(0,c.jsxs)(c.Fragment,{children:["submitting"===S&&"\u23f3 Submitting comment...","success"===S&&"\u2705 Comment submitted successfully!"]}):(0,c.jsx)(c.Fragment,{children:"error"===S.type&&"\u274c ".concat(S.message)})}),G?(0,c.jsxs)("div",{className:"comment-form-advanced",children:[(0,c.jsx)("div",{className:"markdown-editor-container",children:(0,c.jsx)(D.Ay,{value:w,onChange:e=>k(e||""),preview:"edit",height:300,visibleDragBar:!1,"data-color-mode":"light",hideToolbar:x||!X})}),(0,c.jsxs)("div",{className:"comment-form-actions",children:[(0,c.jsx)("button",{className:"btn-secondary",onClick:()=>H(!1),disabled:x||!X,children:"Simple Editor"}),(0,c.jsx)("button",{className:"submit-comment",onClick:be,disabled:!w.trim()||x||!X,children:x?"Submitting...":"Comment"})]})]}):(0,c.jsxs)("div",{className:"comment-form-simple",children:[(0,c.jsx)("textarea",{value:w,onChange:e=>k(e.target.value),placeholder:X?"Write a comment... (Click 'Advanced Editor' for markdown preview)":"Comment form disabled - token permissions required",rows:3,disabled:x||!X}),(0,c.jsxs)("div",{className:"comment-form-actions",children:[(0,c.jsx)("button",{className:"advanced-editor-btn",onClick:()=>H(!0),disabled:x||!X,children:"\ud83d\udcdd Advanced Editor"}),(0,c.jsx)("button",{className:"submit-comment",onClick:be,disabled:!w.trim()||x||!X,children:x?"Submitting...":"Comment"})]})]})]}),s[0].body&&(0,c.jsxs)("div",{className:"pr-description",children:[(0,c.jsx)("h4",{children:"Description"}),(0,c.jsxs)("div",{className:"pr-body",children:[(0,c.jsx)("div",{className:"markdown-content",children:(0,c.jsx)(_.oz,{children:fe(R?s[0].body:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:6;if(!e)return"";const s=e.split("\n");return s.length<=t?e:s.slice(0,t).join("\n")+"..."}(s[0].body))})}),s[0].body.split("\n").length>6&&(0,c.jsx)("button",{className:"description-toggle",onClick:()=>{P(!R)},children:R?"Show less":"Show more"})]})]}),(null===e||void 0===e?void 0:e.name)&&(0,c.jsx)("div",{className:"workflow-status-wrapper",children:(0,c.jsx)(T,{workflowStatus:L,branchName:e.name,onTriggerWorkflow:he,onApproveWorkflow:ge,isAuthenticated:r.A.isAuth(),canTriggerWorkflows:J,canApproveWorkflows:Q,isLoading:O})}),K&&(0,c.jsxs)("div",{className:"copilot-session-wrapper",children:[(0,c.jsx)("h4",{children:"\ud83e\udd16 GitHub Copilot Activity"}),K.hasActiveCopilot?(0,c.jsxs)("div",{className:"copilot-session-active",children:[(0,c.jsxs)("div",{className:"copilot-session-info",children:[(0,c.jsx)("span",{className:"copilot-status",children:"\u2705 Active Copilot session detected"}),(0,c.jsxs)("span",{className:"copilot-activity",children:["Last activity: ",ye(K.latestActivity)]}),(0,c.jsxs)("span",{className:"copilot-comments-count",children:[K.commentsCount," copilot comment(s) found"]})]}),(0,c.jsxs)("div",{className:"copilot-session-actions",children:[(0,c.jsx)("a",{href:K.sessionUrl,target:"_blank",rel:"noopener noreferrer",className:"copilot-session-link",children:"\ud83d\udd17 View Agent Session"}),K.commentUrl&&(0,c.jsx)("a",{href:K.commentUrl,target:"_blank",rel:"noopener noreferrer",className:"copilot-comment-link",children:"\ud83d\udcac Latest Comment"}),(0,c.jsx)("button",{className:"copilot-session-toggle",onClick:()=>z(!W),children:W?"\ud83d\udcdd Hide Session":"\ud83d\udc41\ufe0f Watch Session"})]}),W&&K.latestComment&&(0,c.jsxs)("div",{className:"copilot-session-modal",children:[(0,c.jsxs)("div",{className:"copilot-session-header",children:[(0,c.jsx)("strong",{children:"Latest Copilot Activity"}),(0,c.jsx)("span",{className:"copilot-comment-date",children:ye(K.latestComment.created_at)})]}),(0,c.jsxs)("div",{className:"copilot-session-content",children:[(0,c.jsxs)("div",{className:"copilot-comment-author",children:[(0,c.jsx)("img",{src:K.latestComment.user.avatar_url,alt:K.latestComment.user.login,className:"copilot-avatar"}),(0,c.jsx)("a",{href:K.latestComment.user.html_url,target:"_blank",rel:"noopener noreferrer",className:"copilot-username",children:K.latestComment.user.login})]}),(0,c.jsx)("div",{className:"copilot-comment-body",children:(0,c.jsx)("div",{className:"markdown-content",children:(0,c.jsx)(_.oz,{children:fe(K.latestComment.body)})})})]})]})]}):(0,c.jsxs)("div",{className:"copilot-session-inactive",children:[(0,c.jsx)("span",{className:"copilot-status",children:"\u26aa No active Copilot session detected"}),(0,c.jsx)("span",{className:"copilot-hint",children:"Start a conversation with @copilot to begin a session"})]})]}),(0,c.jsxs)("div",{className:"comments-section",children:[(0,c.jsxs)("h4",{children:["Recent Comments (",te.length>0?"".concat(b.length,"/").concat(te.length):"0",")"]}),v?(0,c.jsx)("div",{className:"loading",children:"Loading comments..."}):0===b.length?(0,c.jsx)("div",{className:"no-comments",children:"No comments yet"}):(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("div",{className:"comments-list",children:b.map(e=>{const t=A.has(e.id),s=e.body&&e.body.length>200,n=B===e.id,o=((e,t)=>{const s=new Set,n=e.body.match(/@(\w+)/g);n&&n.forEach(e=>{const t=e.substring(1);s.add(t)});const o=t.filter(t=>new Date(t.created_at)>new Date(e.created_at));return o.forEach(t=>{t.body.toLowerCase().includes("@".concat(e.user.login.toLowerCase()))&&s.add(t.user.login);const n=e.body.toLowerCase().split(" ").filter(e=>e.length>3);n.length>0&&n.some(s=>t.body.toLowerCase().includes(s)&&t.user.login!==e.user.login)&&s.add(t.user.login)}),(e.body.toLowerCase().includes("copilot")||e.user.login.toLowerCase().includes("copilot"))&&s.add("copilot"),o.some(t=>t.user.login.toLowerCase().includes("copilot")||t.body.toLowerCase().includes("@".concat(e.user.login.toLowerCase())))&&s.add("copilot"),s.delete(e.user.login),Array.from(s)})(e,b);return(0,c.jsxs)("div",{className:"comment ".concat(n?"comment-new-glow":""),children:[(0,c.jsxs)("div",{className:"comment-header",children:[(0,c.jsx)("img",{src:e.user.avatar_url,alt:e.user.login,className:"comment-avatar"}),(0,c.jsx)("a",{href:e.user.html_url,target:"_blank",rel:"noopener noreferrer",className:"comment-author",children:e.user.login}),(0,c.jsx)("span",{className:"comment-date",children:ye(e.created_at)}),(0,c.jsx)("span",{className:"comment-type",children:e.type}),o.length>0&&(0,c.jsx)("div",{className:"comment-viewers",children:o.map((e,t)=>(0,c.jsxs)("span",{className:"viewer-badge ".concat(e.toLowerCase().includes("copilot")?"viewer-badge-copilot":"viewer-badge-user"),title:"".concat(e," is looking at this comment"),children:[e.toLowerCase().includes("copilot")?"\ud83d\udc41\ufe0f":"\ud83d\udc40"," ",e]},t))})]}),(0,c.jsx)("div",{className:"comment-body",children:s&&!t?(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("div",{className:"comment-preview",children:(0,c.jsx)("div",{className:"markdown-content",children:(0,c.jsx)(_.oz,{children:fe(ve(e.body))})})}),(0,c.jsx)("button",{className:"comment-toggle",onClick:()=>pe(e.id),children:"Show more"})]}):(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("div",{className:"comment-full",children:(0,c.jsx)("div",{className:"markdown-content",children:(0,c.jsx)(_.oz,{children:fe(e.body)})})}),s&&(0,c.jsx)("button",{className:"comment-toggle",onClick:()=>pe(e.id),children:"Show less"})]})})]},e.id)})}),te.length>b.length&&(0,c.jsx)("div",{className:"comments-load-more",children:(0,c.jsx)("button",{className:"load-more-btn",onClick:async()=>{if(!s||0===s.length||v||!ne)return;const e=s[0],t=$+1;ee(t),await de("litlfred","sgex",e.number,t,!0)},disabled:v,children:v?"Loading...":"Load More Comments (".concat(te.length-b.length," remaining)")})})]})]}),(0,c.jsx)("div",{className:"expanded-footer",children:(0,c.jsx)("a",{href:s[0].html_url,target:"_blank",rel:"noopener noreferrer",className:"github-link",children:"View PR on GitHub \u2192"})})]})]}):(0,c.jsx)("div",{className:"preview-badge clickable ".concat(h?"expanded":""," ").concat(m?"sticky":""),onClick:async t=>{s&&s.length>0||(t.stopPropagation(),t.preventDefault(),m?(p(!1),g(!1)):(p(!0),g(!0),null!==e&&void 0!==e&&e.name&&(await ue(e.name),me(e.name))))},onMouseEnter:()=>{m||s&&0!==s.length||g(!0)},onMouseLeave:()=>{m||s&&0!==s.length||g(!1)},title:m?"Click to collapse":h?"Click to keep expanded":"\ud83d\udd0d Hover for branch details, click to pin: ".concat(e.name),children:(0,c.jsxs)("div",{className:"badge-content",children:[(0,c.jsx)("span",{className:"badge-label",children:"Preview:"}),(0,c.jsx)("span",{className:"badge-branch",children:e.name}),(0,c.jsx)("span",{className:"badge-expand-icon",children:h?"\u25bc":"\u25b6"})]})}),h&&(!s||0===s.length)&&(0,c.jsxs)("div",{className:"preview-badge-expanded",children:[(0,c.jsxs)("div",{className:"expanded-header",children:[(0,c.jsxs)("div",{className:"pr-info",children:[(0,c.jsxs)("h3",{children:["Preview Branch: ",e.name]}),(0,c.jsxs)("div",{className:"pr-meta",children:[(0,c.jsx)("span",{className:"pr-state","data-state":"unknown",children:"No PR found"}),(0,c.jsx)("span",{className:"pr-author",children:"Branch preview"})]})]}),(0,c.jsx)("button",{className:"close-button",onClick:e=>{e.stopPropagation(),g(!1),p(!1)},title:"Close expanded view",children:"\xd7"})]}),(0,c.jsxs)("div",{className:"pr-description",children:[(0,c.jsx)("h4",{children:"Branch Information"}),(0,c.jsxs)("div",{className:"pr-body",children:["This is a preview deployment from the ",(0,c.jsx)("code",{children:e.name})," branch.",(0,c.jsxs)("div",{style:{marginTop:"0.5rem"},children:[(0,c.jsx)("strong",{children:"Preview URL:"})," ",(0,c.jsxs)("code",{children:[window.location.origin,window.location.pathname]})]}),r.A.isAuth()?(0,c.jsx)("div",{style:{marginTop:"0.5rem",color:"#28a745"},children:"\u2705 Authenticated - You can view full PR details when available."}):(0,c.jsxs)("div",{style:{marginTop:"0.5rem",padding:"0.5rem",backgroundColor:"#f0f8ff",border:"1px solid #bee5eb",borderRadius:"4px"},children:[(0,c.jsx)("strong",{children:"\ud83d\udca1 Tip:"})," Sign in to GitHub to view pull request details, comments, and contribute to this branch."]})]})]}),(0,c.jsx)("div",{className:"workflow-status-wrapper",children:(0,c.jsx)(T,{workflowStatus:L,branchName:e.name,onTriggerWorkflow:he,onApproveWorkflow:ge,isAuthenticated:r.A.isAuth(),canTriggerWorkflows:J,canApproveWorkflows:Q,isLoading:O})}),(0,c.jsx)("div",{className:"expanded-footer",children:(0,c.jsx)("a",{href:"https://github.com/litlfred/sgex/tree/".concat(e.name),target:"_blank",rel:"noopener noreferrer",className:"github-link",children:"View Branch on GitHub \u2192"})})]})]})},P=()=>{const{pageName:e,profile:t,repository:s,branch:o,asset:a,isAuthenticated:i,navigate:l}=p(),[d,u]=(0,n.useState)(!1),[h,g]=(0,n.useState)(!1),[m,b]=(0,n.useState)(null);(0,n.useEffect)(()=>{if(i){(async()=>{try{const e=A.getCurrentUser();if(e)b(e);else{const e=await r.A.getCurrentUser();b(e)}}catch(e){console.debug("Could not fetch authenticated user:",e)}})()}else b(null)},[i]);const f=()=>{l("/")},v=e=>{C.removeBookmark(e),g(!1),setTimeout(()=>g(!0),50)},y=C.getBookmarkByUrl(window.location.pathname),w=C.getBookmarksGroupedByPage();return(0,c.jsxs)("header",{className:"page-header",children:[(0,c.jsxs)("div",{className:"page-header-left",children:[(0,c.jsxs)("button",{className:"sgex-logo",onClick:f,onKeyDown:e=>"Enter"===e.key||" "===e.key?f():null,style:{border:"none",background:"none",padding:0,cursor:"pointer"},children:[(0,c.jsx)("h1",{children:"SGEX Workbench"}),(0,c.jsx)("p",{className:"subtitle",children:"WHO SMART Guidelines Exchange"})]}),(0,c.jsx)(R,{})]}),(0,c.jsx)("div",{className:"page-header-right",children:(i||null!==t&&void 0!==t&&t.isDemo)&&m?(0,c.jsxs)("div",{className:"user-controls",children:[(0,c.jsxs)("button",{className:"user-info",onClick:()=>u(!d),onKeyDown:e=>("Enter"===e.key||" "===e.key)&&u(!d),style:{border:"none",background:"none",padding:0,cursor:"pointer",display:"flex",alignItems:"center"},children:[(0,c.jsx)("img",{src:m.avatar_url,alt:"User avatar",className:"user-avatar"}),(0,c.jsx)("span",{className:"user-name",children:m.name||m.login}),(0,c.jsx)("span",{className:"dropdown-arrow",children:"\u25bc"})]}),d&&(0,c.jsxs)("div",{className:"user-dropdown",children:[(0,c.jsxs)("button",{className:"dropdown-item",onClick:()=>{null!==m&&void 0!==m&&m.html_url?window.open(m.html_url,"_blank"):null!==m&&void 0!==m&&m.login&&window.open("https://github.com/".concat(m.login),"_blank")},children:[(0,c.jsx)("svg",{className:"github-icon",viewBox:"0 0 16 16",width:"16",height:"16",children:(0,c.jsx)("path",{d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"})}),"GitHub Profile"]}),y?(0,c.jsx)("button",{className:"dropdown-item bookmark-action",onClick:()=>v(y.id),children:"\u2b50 Remove Bookmark"}):(0,c.jsx)("button",{className:"dropdown-item bookmark-action",onClick:()=>{const t={user:null===m||void 0===m?void 0:m.login,repository:s,branch:o,asset:a},n=window.location.pathname;C.addBookmark(e,n,t),g(!1)},children:"\u2606 Add Bookmark"}),(0,c.jsxs)("div",{className:"bookmarks-section",children:[(0,c.jsxs)("button",{className:"dropdown-item bookmarks-header",onClick:()=>g(!h),onKeyDown:e=>("Enter"===e.key||" "===e.key)&&g(!h),children:["\ud83d\udcd6 Bookmarks",(0,c.jsx)("span",{className:"dropdown-arrow",children:h?"\u25b2":"\u25bc"})]}),h&&(0,c.jsx)("div",{className:"bookmarks-dropdown",children:w.length>0?(0,c.jsx)("div",{className:"bookmarks-list",children:w.map(e=>(0,c.jsxs)("div",{className:"bookmark-group",children:[(0,c.jsx)("div",{className:"bookmark-group-header",children:e.pageName}),e.bookmarks.map(e=>(0,c.jsxs)("div",{className:"bookmark-item",children:[(0,c.jsx)("button",{className:"bookmark-link",onClick:()=>(e=>{l(e.url),g(!1)})(e),title:e.url,children:e.title}),(0,c.jsx)("button",{className:"bookmark-remove",onClick:()=>v(e.id),title:"Remove bookmark",children:"\xd7"})]},e.id))]},e.pageName))}):(0,c.jsx)("div",{className:"no-bookmarks",children:"No bookmarks yet"})})]}),(0,c.jsx)("button",{className:"dropdown-item logout-btn",onClick:()=>{r.A.logout(),l("/")},children:"Logout"})]})]}):(0,c.jsx)("button",{className:"login-btn",onClick:f,children:"Login"})})]})},G=e=>{let{owner:t,repo:s,branch:o="main",className:a=""}=e;const[r,i]=(0,n.useState)(null),[l,d]=(0,n.useState)(!0),[u,h]=(0,n.useState)(!1);return(0,n.useEffect)(()=>{let e=!0;const n=async()=>{if(t&&s)try{d(!0);const n=await A.getAccessBadge(t,s,o);e&&(i(n),d(!1))}catch(n){console.error("Error loading access badge:",n),e&&(i({text:"Unknown",icon:"\u2753",color:"gray",description:"Unable to determine access level"}),d(!1))}else d(!1)};n();const a=A.addListener(()=>{n()});return()=>{e=!1,a()}},[t,s,o]),l?(0,c.jsxs)("div",{className:"access-badge loading ".concat(a),children:[(0,c.jsx)("span",{className:"access-badge-icon",children:"\u23f3"}),(0,c.jsx)("span",{className:"access-badge-text",children:"Loading..."})]}):r?(0,c.jsxs)("div",{className:"access-badge ".concat(r.color," ").concat(a),onMouseEnter:()=>h(!0),onMouseLeave:()=>h(!1),title:r.description,children:[(0,c.jsx)("span",{className:"access-badge-icon",role:"img","aria-label":r.text,children:r.icon}),(0,c.jsx)("span",{className:"access-badge-text",children:r.text}),u&&(0,c.jsx)("div",{className:"access-badge-tooltip",children:(0,c.jsxs)("div",{className:"tooltip-content",children:[(0,c.jsx)("strong",{children:r.text}),(0,c.jsx)("p",{children:r.description}),s&&(0,c.jsxs)("small",{children:["Repository: ",t,"/",s]})]})})]}):null},H=e=>{var t;let{customBreadcrumbs:s}=e;const{type:o,pageName:a,profile:i,repository:l,branch:d,navigate:m}=p(),[b,f]=(0,n.useState)([]),[v,y]=(0,n.useState)(!1),[w,k]=(0,n.useState)(""),[x,N]=(0,n.useState)(!1);(0,n.useEffect)(()=>{const e=e=>{v&&!e.target.closest(".page-context-branch-selector")&&(y(!1),k(""))};return document.addEventListener("mousedown",e),()=>{document.removeEventListener("mousedown",e)}},[v]),(0,n.useEffect)(()=>{(async()=>{if(!l||o!==h&&o!==g)f([]);else try{var e,t;N(!0);const s=(null===(e=l.owner)||void 0===e?void 0:e.login)||(null===(t=l.full_name)||void 0===t?void 0:t.split("/")[0]),n=(await r.A.getBranches(s,l.name)).sort((e,t)=>e.name.localeCompare(t.name));f(n)}catch(s){console.error("Failed to fetch branches for context:",s),f([])}finally{N(!1)}})()},[l,o]);const S=b.filter(e=>e.name.toLowerCase().includes(w.toLowerCase())),j=(()=>{if(s&&s.length>0)return s;const e=[];if(e.push({label:"Home",path:"/",onClick:()=>m("/")}),o!==u&&o!==h&&o!==g||!i||e.push({label:"Select Repository",path:"/dak-selection/".concat(i.login),onClick:()=>m("/dak-selection/".concat(i.login),{state:{profile:i}})}),(o===h||o===g)&&l){var t,n;const s=d&&"main"!==d?"/".concat(d):"",o=(null===(t=l.owner)||void 0===t?void 0:t.login)||(null===(n=l.full_name)||void 0===n?void 0:n.split("/")[0]);o&&e.push({label:"DAK Components",path:"/dashboard/".concat(o,"/").concat(l.name).concat(s),onClick:()=>m("/dashboard/".concat(o,"/").concat(l.name).concat(s))})}const r={landing:"Home","landing-unauthenticated":"Home",repositories:"Select Repository","dak-selection":"Select DAK","dak-action":"Choose DAK Action",dashboard:"DAK Components","dak-dashboard":"DAK Components","actor-editor":"Actor Definitions","component-editor":"Component Editor","bpmn-viewer":"Business Process Viewer","bpmn-editor":"Business Process Editor","decision-support-logic":"Decision Support Logic","core-data-dictionary-viewer":"Core Data Dictionary","testing-viewer":"Testing","pages-manager":"Pages",documentation:"Documentation"}[a]||a;return 0!==e.length&&e[e.length-1].label===r||e.push({label:r,current:!0}),e})();return!i&&!l&&j.length<=1?null:(0,c.jsx)("div",{className:"page-context-container",children:(0,c.jsxs)("div",{className:"page-context-content",children:[i&&(0,c.jsx)("img",{src:i.avatar_url,alt:"".concat(i.login," avatar"),className:"page-context-avatar"}),(0,c.jsxs)("div",{className:"page-context-info",children:[(0,c.jsxs)("div",{className:"page-context-row page-context-user-repo",children:[i&&(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("span",{className:"page-context-profile",onClick:()=>{null!==i&&void 0!==i&&i.html_url?window.open(i.html_url,"_blank"):null!==i&&void 0!==i&&i.login&&window.open("https://github.com/".concat(i.login),"_blank")},children:i.login}),l&&(0,c.jsx)("span",{className:"page-context-separator",children:"/"})]}),l&&(0,c.jsx)("span",{className:"page-context-repo",children:l.name}),d&&(o===h||o===g)&&(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("span",{className:"page-context-separator",children:"@"}),(0,c.jsxs)("div",{className:"page-context-branch-selector",children:[(0,c.jsxs)("button",{className:"page-context-branch-btn",onClick:()=>y(!v),title:"Switch branch",children:[(0,c.jsx)("span",{className:"branch-icon",children:"\ud83c\udf3f"}),d,(0,c.jsx)("span",{className:"branch-dropdown-arrow",children:v?"\u25b2":"\u25bc"})]}),v&&(0,c.jsxs)("div",{className:"branch-dropdown",children:[(0,c.jsx)("div",{className:"branch-search",children:(0,c.jsx)("input",{type:"text",placeholder:"Search branches...",value:w,onChange:e=>k(e.target.value),className:"branch-search-input",autoFocus:!1})}),(0,c.jsx)("div",{className:"branch-list",children:x?(0,c.jsx)("div",{className:"branch-item loading",children:"Loading branches..."}):S.length>0?S.map(e=>(0,c.jsxs)("button",{className:"branch-item ".concat(e.name===d?"current":""),onClick:()=>(e=>{const t=window.location.pathname.split("/");t.length>=5&&(5===t.length?t.push(e):t[5]=e,m(t.join("/"))),y(!1),k("")})(e.name),children:[(0,c.jsx)("span",{className:"branch-icon",children:"\ud83c\udf3f"}),e.name,e.name===d&&(0,c.jsx)("span",{className:"current-badge",children:"current"})]},e.name)):(0,c.jsx)("div",{className:"branch-item no-results",children:w?"No branches found":"No branches available"})})]})]})]})]}),j.length>1&&(0,c.jsx)("nav",{className:"page-context-row page-context-breadcrumbs","aria-label":"Breadcrumb navigation",children:(0,c.jsx)("ol",{className:"breadcrumb-list",children:j.map((e,t)=>(0,c.jsx)("li",{className:"breadcrumb-item",children:e.current?(0,c.jsx)("span",{className:"breadcrumb-current","aria-current":"page",children:e.label}):(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("button",{className:"breadcrumb-link",onClick:()=>e.onClick?e.onClick():m(e.path),"aria-label":"Navigate to ".concat(e.label),children:e.label}),(0,c.jsx)("span",{className:"breadcrumb-separator","aria-hidden":"true",children:"\u203a"})]})},t))})})]}),(o===h||o===g)&&l&&(0,c.jsxs)("div",{className:"page-context-actions",children:[(0,c.jsx)(G,{owner:(null===(t=l.owner)||void 0===t?void 0:t.login)||(null===i||void 0===i?void 0:i.login),repo:l.name,branch:d,className:"context-access-badge"}),(0,c.jsxs)("button",{className:"context-btn github-repo-btn",onClick:()=>{null!==l&&void 0!==l&&l.html_url&&window.open(l.html_url,"_blank")},title:"Open repository on GitHub",children:[(0,c.jsx)("svg",{className:"github-icon",viewBox:"0 0 16 16",width:"16",height:"16",children:(0,c.jsx)("path",{d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"})}),"Repository"]})]})]})})};var L=s(8292),F=s(19794);const O=e=>{let{error:t,onRetry:s}=e;const o=p(),a=o.pageName,[r,i]=(0,n.useState)(!1),l=(0,F.A)("sgex-mascot.png"),[d,u]=(0,n.useState)(""),h=(()=>{var e;const s=t.toLowerCase(),n=null===o||void 0===o?void 0:o.user,a=null===o||void 0===o||null===(e=o.repository)||void 0===e?void 0:e.name;if(s.includes("not found")||s.includes("not accessible")){if(s.includes("user"))return{title:"User Not Found",message:"The user ".concat(n?"'".concat(n,"'"):"in the URL"," could not be found on GitHub."),suggestions:["Check the spelling of the username","Verify the user account exists on GitHub","Try searching for the user on GitHub.com"],icon:"\ud83d\udc64"};if(s.includes("repository"))return{title:"Repository Not Found",message:"The repository ".concat(n&&a?"'".concat(n,"/").concat(a,"'"):"in the URL"," could not be accessed."),suggestions:["Check the spelling of the repository name","Verify the repository exists and is public","If it's a private repository, make sure you have access","Try visiting the repository directly on GitHub.com"],icon:"\ud83d\udcc1"}}return s.includes("not a valid dak")||s.includes("invalid dak")?{title:"Not a DAK Repository",message:"The repository ".concat(n&&a?"'".concat(n,"/").concat(a,"'"):"in the URL"," doesn't appear to contain WHO SMART Guidelines content."),suggestions:["Verify this is a WHO SMART Guidelines Digital Adaptation Kit","Check if the repository has a sushi-config.yaml file","Look for smart.who.int.base dependencies in the configuration","Try browsing other DAK repositories for examples"],icon:"\ud83d\udccb"}:s.includes("asset")&&s.includes("not found")?{title:"File Not Found",message:"The requested file could not be found in the repository.",suggestions:["Check if the file path is correct","Verify the file exists in the current branch","The file may have been moved or deleted","Try browsing the repository to find the correct path"],icon:"\ud83d\udcc4"}:{title:"Something Went Wrong",message:t,suggestions:["Try refreshing the page","Check your internet connection","The service may be temporarily unavailable"],icon:"\u26a0\ufe0f"}})();return(0,c.jsx)("div",{className:"error-handler",children:(0,c.jsxs)("div",{className:"error-content",children:[(0,c.jsx)("div",{className:"error-mascot-container",children:(0,c.jsx)(L.A,{helpContent:(0,c.jsx)("div",{className:"error-help-content",children:(0,c.jsxs)("div",{className:"error-mascot-large",children:[(0,c.jsx)("img",{src:l,alt:"SGEX Helper",className:"large-mascot-icon"}),(0,c.jsxs)("div",{className:"mascot-speech-bubble",children:[(0,c.jsx)("div",{className:"speech-content",children:"I'm sorry! Something went wrong."}),(0,c.jsx)("div",{className:"speech-tail"})]})]})}),position:"center"})}),(0,c.jsxs)("div",{className:"error-details",children:[(0,c.jsxs)("h2",{children:[h.icon," ",h.title]}),(0,c.jsx)("p",{className:"error-message",children:h.message}),h.suggestions&&(0,c.jsxs)("div",{className:"error-suggestions",children:[(0,c.jsx)("h3",{children:"\ud83d\udca1 Suggestions:"}),(0,c.jsx)("ul",{children:h.suggestions.map((e,t)=>(0,c.jsx)("li",{children:e},t))})]}),(0,c.jsxs)("div",{className:"error-actions",children:[(0,c.jsx)("button",{className:"error-btn primary",onClick:()=>{s?s():window.location.reload()},children:"\ud83d\udd04 Try Again"}),(0,c.jsx)("button",{className:"error-btn secondary",onClick:()=>{window.location.href="/sgex/"},children:"\ud83c\udfe0 Go Home"})]}),(0,c.jsxs)("div",{className:"bug-report-section",children:[(0,c.jsx)("h3",{children:"Help us improve SGEX"}),(0,c.jsx)("p",{children:"If this error persists, please let us know what happened:"}),(0,c.jsxs)("div",{className:"user-explanation",children:[(0,c.jsx)("label",{htmlFor:"user-explanation",children:"What were you trying to do when this error occurred?"}),(0,c.jsx)("textarea",{id:"user-explanation",value:d,onChange:e=>u(e.target.value),placeholder:"Please describe what you were doing when the error occurred...",rows:4})]}),r?(0,c.jsxs)("div",{className:"bug-report-sent",children:[(0,c.jsx)("span",{className:"success-icon",children:"\u2705"}),"Thank you! A bug report has been opened. We'll investigate this issue."]}):(0,c.jsx)("button",{className:"bug-report-btn",onClick:()=>{const e=(()=>{const e=encodeURIComponent("User should not have reached this page"),s=encodeURIComponent("\n**Error Information:**\n- Page: ".concat(a,"\n- URL: ").concat(window.location.href,"\n- Error: ").concat(t,"\n- Timestamp: ").concat((new Date).toISOString(),"\n- User Agent: ").concat(navigator.userAgent,"\n\n**Context:**\n- Browser: ").concat(navigator.userAgent,"\n- Viewport: ").concat(window.innerWidth,"x").concat(window.innerHeight,"\n- Referrer: ").concat(document.referrer||"Direct access","\n\n**User Explanation:**\n").concat(d||"No additional details provided","\n\n**Steps to Reproduce:**\n1. Navigate to: ").concat(window.location.href,"\n2. [Please add any additional steps]\n\n**Expected Behavior:**\nThe page should load without errors.\n\n**Actual Behavior:**\n").concat(t,"\n    "));return"https://github.com/litlfred/sgex/issues/new?title=".concat(e,"&body=").concat(s,"&labels=bug,user-error")})();window.open(e,"_blank"),i(!0)},children:"\ud83d\udce7 Send Bug Report"})]}),(0,c.jsx)("div",{className:"error-context",children:(0,c.jsxs)("details",{children:[(0,c.jsx)("summary",{children:"Technical Details"}),(0,c.jsxs)("div",{className:"technical-details",children:[(0,c.jsxs)("p",{children:[(0,c.jsx)("strong",{children:"Page:"})," ",a]}),(0,c.jsxs)("p",{children:[(0,c.jsx)("strong",{children:"URL:"})," ",window.location.href]}),(0,c.jsxs)("p",{children:[(0,c.jsx)("strong",{children:"Error:"})," ",t]}),(0,c.jsxs)("p",{children:[(0,c.jsx)("strong",{children:"Timestamp:"})," ",(new Date).toISOString()]})]})]})})]})]})})};class U extends n.Component{constructor(e){super(e),this.state={hasError:!1,error:null}}static getDerivedStateFromError(e){return{hasError:!0,error:e.message}}componentDidCatch(e,t){console.error("PageLayout caught an error:",e,t)}render(){return this.state.hasError?(0,c.jsx)("div",{className:"page-layout-error",children:(0,c.jsx)(O,{error:this.state.error,onRetry:()=>{this.setState({hasError:!1,error:null}),window.location.reload()}})}):this.props.children}}const B=e=>{let{children:t,showHeader:s=!0,showMascot:n=!0,showBreadcrumbs:o=!0,customBreadcrumbs:a}=e;const{loading:r,error:i,pageName:l}=p();return r?(0,c.jsxs)("div",{className:"page-layout",children:[s&&(0,c.jsx)(P,{}),(0,c.jsx)("main",{className:"page-main",children:(0,c.jsxs)("div",{className:"page-loading",children:[(0,c.jsx)("div",{className:"loading-spinner"}),(0,c.jsx)("p",{children:"Loading..."})]})}),n&&(0,c.jsx)(L.A,{pageId:"".concat(l,"-loading"),position:"bottom-right"})]}):i?(0,c.jsxs)("div",{className:"page-layout",children:[s&&(0,c.jsx)(P,{}),(0,c.jsx)("main",{className:"page-main",children:(0,c.jsx)(O,{error:i,onRetry:()=>window.location.reload()})})]}):(0,c.jsxs)("div",{className:"page-layout",children:[s&&(0,c.jsx)(P,{}),(0,c.jsx)(H,{customBreadcrumbs:o?a:[]}),(0,c.jsxs)("main",{className:"page-main",children:[t,n&&(0,c.jsx)(L.A,{pageId:l,position:"bottom-right",contextData:{}})]})]})},M=e=>{let{children:t,pageName:s,showHeader:n=!0,showMascot:o=!0,showBreadcrumbs:a=!0,customBreadcrumbs:r}=e;return(0,c.jsx)(U,{children:(0,c.jsx)(f,{pageName:s,children:(0,c.jsx)(B,{showHeader:n,showMascot:o,showBreadcrumbs:a,customBreadcrumbs:r,children:t})})})},K=()=>{const{type:e,user:t,profile:s,repository:n,branch:o,asset:a,params:r,navigate:i}=p();return{type:e,user:t,profile:s,repository:n,branch:o,asset:a,params:r,updateBranch:t=>{if(e===h||e===g){const e=window.location.pathname.split("/");e.length>=5&&(5===e.length?e.push(t):e[5]=t,i(e.join("/")))}},navigateToUser:e=>{i("/".concat(r.page||"dak-action","/").concat(e))},navigateToDAK:function(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main";i("/".concat(r.page||"dashboard","/").concat(e,"/").concat(t,"/").concat(s))},navigateToAsset:(e,t,s,n)=>{i("/".concat(r.page||"editor","/").concat(e,"/").concat(t,"/").concat(s,"/").concat(n))},navigate:i}},q=()=>{try{const e=K();if(!e.loading&&e.type!==h&&e.type!==g)throw new Error("useDAKParams can only be used on DAK or Asset pages. Current page type: ".concat(e.type));return{user:e.user,profile:e.profile,repository:e.repository,branch:e.branch,asset:e.asset,updateBranch:e.updateBranch,navigate:e.navigate}}catch(e){if(e.message.includes("usePage must be used within a PageProvider"))return console.log("useDAKParams: PageProvider not ready yet, returning empty data"),{user:null,profile:null,repository:null,branch:null,asset:null,updateBranch:()=>{},navigate:()=>{}};throw e}};var W=s(80045);const z=e=>{let{hasChanges:t=!1,isSavingLocal:s=!1,isSavingGitHub:n=!1,canSaveToGitHub:o=!1,localSaveSuccess:a=!1,githubSaveSuccess:r=!1,savedLocally:i=!1,onSaveLocal:l,onSaveGitHub:d,isDemo:u=!1,showLocalButton:h=!0,showGitHubButton:g=!0,buttonSize:m="medium",layout:p="horizontal"}=e;const b=!t||s||a,f=!t||n||r||!o,v=["save-buttons-container","layout-".concat(p),"size-".concat(m)].join(" "),y=(e,t,s)=>{const n=["save-button","save-button-".concat(e)];return t&&n.push("disabled"),s&&n.push("success"),n.join(" ")};return(0,c.jsxs)("div",{className:v,children:[h&&(0,c.jsxs)("button",{className:y("local",b,a),onClick:l,disabled:b,title:t?a?"Changes saved to local storage":s?"Saving to local storage...":"Save changes to browser local storage":"No changes to save",children:[(0,c.jsx)("span",{className:"button-icon",children:"\ud83d\udcbe"}),(0,c.jsx)("span",{className:"button-text",children:a?"Saved Locally \u2713":s?"Saving...":"Save Local"})]}),g&&o&&(0,c.jsxs)("button",{className:y("github",f,r),onClick:d,disabled:f,title:t?r?"Changes committed to GitHub":n?"Committing to GitHub...":"Commit changes to GitHub repository":"No changes to save",children:[(0,c.jsx)("span",{className:"button-icon",children:"\ud83d\udce4"}),(0,c.jsx)("span",{className:"button-text",children:r?"Committed \u2713":n?"Committing...":"Save to GitHub"})]}),g&&!o&&!u&&(0,c.jsxs)("div",{className:"github-unavailable",children:[(0,c.jsx)("span",{className:"unavailable-icon",children:"\ud83d\udd12"}),(0,c.jsx)("span",{className:"unavailable-text",children:"GitHub save unavailable"}),(0,c.jsx)("small",{children:"Login required for GitHub access"})]}),u&&(0,c.jsxs)("div",{className:"demo-mode-indicator",children:[(0,c.jsx)("span",{className:"demo-icon",children:"\ud83e\uddea"}),(0,c.jsx)("span",{className:"demo-text",children:"Demo Mode - Local save only"})]}),i&&(0,c.jsxs)("div",{className:"local-storage-indicator",children:[(0,c.jsx)("span",{className:"local-icon",children:"\ud83d\udcbe"}),(0,c.jsx)("span",{className:"local-text",children:"Local version available"})]})]})},X=e=>{let{isOpen:t=!1,commitMessage:s="",setCommitMessage:o,onCommit:a,onCancel:r,isSaving:i=!1,fileName:l="",suggestedMessage:d=""}=e;const u=(0,n.useRef)(null);(0,n.useEffect)(()=>{if(t&&u.current)if(u.current.focus(),s||d||!l)d&&!s&&o(d);else{const e="Update ".concat(l);o(e)}},[t,s,d,l,o]);return t?(0,c.jsx)("div",{className:"commit-dialog-overlay",onClick:e=>{e.target!==e.currentTarget||i||r()},role:"presentation",children:(0,c.jsxs)("div",{className:"commit-dialog",onKeyDown:e=>{"Escape"!==e.key||i?"Enter"===e.key&&(e.ctrlKey||e.metaKey)&&s.trim()&&!i&&a(s.trim()):r()},role:"dialog","aria-labelledby":"commit-dialog-title","aria-modal":"true",children:[(0,c.jsxs)("div",{className:"commit-dialog-header",children:[(0,c.jsx)("h3",{id:"commit-dialog-title",children:"Commit Changes to GitHub"}),(0,c.jsx)("button",{className:"close-button",onClick:r,disabled:i,"aria-label":"Close dialog",children:"\u2715"})]}),(0,c.jsxs)("div",{className:"commit-dialog-content",children:[l&&(0,c.jsxs)("div",{className:"file-info",children:[(0,c.jsx)("span",{className:"file-icon",children:"\ud83d\udcc4"}),(0,c.jsx)("span",{className:"file-name",children:l})]}),(0,c.jsxs)("div",{className:"commit-message-section",children:[(0,c.jsx)("label",{htmlFor:"commit-message",className:"commit-message-label",children:"Commit Message *"}),(0,c.jsx)("textarea",{id:"commit-message",ref:u,className:"commit-message-input",value:s,onChange:e=>o(e.target.value),placeholder:"Describe the changes you made...",rows:4,disabled:i,required:!0}),(0,c.jsx)("div",{className:"commit-message-help",children:(0,c.jsx)("small",{children:"Describe what changes you made and why. This will be visible in the repository's commit history."})})]}),(0,c.jsx)("div",{className:"commit-guidelines",children:(0,c.jsxs)("details",{children:[(0,c.jsx)("summary",{children:"Commit Message Guidelines"}),(0,c.jsxs)("ul",{children:[(0,c.jsx)("li",{children:"Use clear, descriptive language"}),(0,c.jsx)("li",{children:"Start with a verb (Add, Update, Fix, Remove, etc.)"}),(0,c.jsx)("li",{children:"Keep the first line under 72 characters"}),(0,c.jsx)("li",{children:"Add details in additional lines if needed"})]})]})})]}),(0,c.jsxs)("div",{className:"commit-dialog-footer",children:[(0,c.jsxs)("div",{className:"dialog-actions",children:[(0,c.jsx)("button",{className:"btn btn-secondary",onClick:r,disabled:i,children:"Cancel"}),(0,c.jsx)("button",{className:"btn btn-primary",onClick:()=>{s.trim()&&!i&&a(s.trim())},disabled:!s.trim()||i,children:i?(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("span",{className:"spinner"}),"Committing..."]}):"Commit Changes"})]}),(0,c.jsx)("div",{className:"keyboard-shortcut",children:(0,c.jsxs)("small",{children:["Press ",(0,c.jsx)("kbd",{children:"Ctrl+Enter"})," to commit or ",(0,c.jsx)("kbd",{children:"Esc"})," to cancel"]})})]})]})}):null};var V=s(22392);const J="local",Y="github",Q="success",Z="error",$="permission_denied",ee="demo_mode_blocked";const te=new class{constructor(){this.logger=v.A.getLogger("DataAccessLayer"),this.pendingOperations=new Map,this.assetCache=new Map}async initialize(e,t){this.logger.info("Initializing data access layer",{repository:null===e||void 0===e?void 0:e.full_name,branch:t}),V.A.initialize(e,t),await A.initialize()}async getAsset(e,t,s,n){const o="".concat(e,"/").concat(t,"/").concat(s,"/").concat(n);try{if("none"===await A.getRepositoryAccess(e,t,s))throw new Error("No access to this repository");const a=V.A.getStagingGround().files.find(e=>e.path===n);if(a)return this.logger.debug("Asset loaded from staging ground",{assetPath:n}),{content:a.content,source:"local",metadata:a.metadata,hasLocalChanges:!0};let i;return i=A.isDemoUser()&&A.isDemoDAK(e,t)?this.getDemoAssetContent(n):await r.A.getFileContent(e,t,n,s),this.assetCache.set(o,i),this.logger.debug("Asset loaded from GitHub",{assetPath:n,source:"github"}),{content:i,source:"github",hasLocalChanges:!1}}catch(a){throw this.logger.error("Error getting asset",{owner:e,repo:t,branch:s,assetPath:n,error:a.message}),a}}async saveAssetLocal(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const n=A.getUserType();if(V.A.updateFile(e,t,(0,o.A)((0,o.A)({},s),{},{savedBy:n,saveTarget:J})))return this.logger.info("Asset saved to local storage",{assetPath:e,userType:n}),{result:Q,message:"Changes saved to local staging area",target:J};throw new Error("Failed to save to local storage")}catch(n){return this.logger.error("Error saving asset locally",{assetPath:e,error:n.message}),{result:Z,message:"Failed to save locally: ".concat(n.message),target:J}}}async saveAssetGitHub(e,t,s,n,o,a){try{const g=A.getUserType();if(!await A.canSaveToGitHub(e,t,s))return"demo"===g?{result:ee,message:"Demo users cannot save to GitHub. Changes can be saved locally.",target:Y}:"unauthenticated"===g?{result:$,message:"Please authenticate to save changes to GitHub.",target:Y}:{result:$,message:"You do not have write access to this repository.",target:Y};const m=await r.A.updateFileContent(e,t,n,o,a,s);if(m.success){var i,l,c,d,u,h;V.A.removeFile(n);const o="".concat(e,"/").concat(t,"/").concat(s,"/").concat(n);return this.assetCache.delete(o),this.logger.info("Asset saved to GitHub",{owner:e,repo:t,branch:s,assetPath:n,commit:null===(i=m.data)||void 0===i||null===(l=i.commit)||void 0===l?void 0:l.sha}),{result:Q,message:"Changes successfully committed to GitHub",target:Y,commitSha:null===(c=m.data)||void 0===c||null===(d=c.commit)||void 0===d?void 0:d.sha,commitUrl:null===(u=m.data)||void 0===u||null===(h=u.commit)||void 0===h?void 0:h.html_url}}throw new Error(m.error||"GitHub commit failed")}catch(g){return this.logger.error("Error saving asset to GitHub",{owner:e,repo:t,branch:s,assetPath:n,error:g.message}),{result:Z,message:"Failed to save to GitHub: ".concat(g.message),target:Y}}}getDemoAssetContent(e){return{"input/vocabulary/ValueSet-anc-care-codes.json":JSON.stringify({resourceType:"ValueSet",id:"anc-care-codes",name:"ANCCareCodes",title:"ANC Care Codes (Demo)",status:"draft",description:"Demo value set for antenatal care codes",compose:{include:[{system:"http://example.org/anc-codes",concept:[{code:"anc-visit",display:"Antenatal Care Visit"},{code:"anc-screening",display:"Antenatal Screening"}]}]}},null,2),"input/actors/Patient.json":JSON.stringify({resourceType:"ActorDefinition",id:"patient",name:"Patient",title:"Patient (Demo)",status:"draft",description:"Demo patient actor definition",type:"person"},null,2),"README.md":"# Demo DAK Repository\n\nThis is a demo repository showing the structure of a SMART Guidelines DAK.\n\n## Components\n\n- **ValueSets**: Terminology definitions\n- **Actors**: System and person actors  \n- **Business Processes**: BPMN workflow definitions\n\nThis is demo data and cannot be saved to GitHub."}[e]||"# Demo Asset: ".concat(e,"\n\nThis is demo content for the asset located at: ").concat(e,"\n\nDemo users can edit this content and save it locally, but cannot commit changes to GitHub.")}async getSaveOptions(e,t,s){const n=A.getUserType(),o=await A.canSaveToGitHub(e,t,s),a=A.canSaveLocal(),r=A.getUIBehavior();return{canSaveLocal:a,canSaveGitHub:o,showSaveLocal:r.showSaveLocal,showSaveGitHub:r.showSaveToGitHub,confirmBeforeSave:r.confirmBeforeSave,userType:n,restrictions:this.getSaveRestrictions(n,o)}}getSaveRestrictions(e,t){switch(e){case"unauthenticated":return{localMessage:"Changes will be saved to your browser only",githubMessage:"Please authenticate to save to GitHub",githubDisabled:!0};case"demo":return{localMessage:"Changes will be saved to your browser only",githubMessage:"Demo users cannot save to GitHub",githubDisabled:!0};case"authenticated":return t?{localMessage:"Save changes to staging area",githubMessage:"Commit changes to GitHub repository",githubDisabled:!1}:{localMessage:"Changes will be saved to your browser only",githubMessage:"You do not have write access to this repository",githubDisabled:!0};default:return{localMessage:"Local saves only",githubMessage:"GitHub saves not available",githubDisabled:!0}}}getStagingGroundStatus(){return V.A.getStatus()}clearStagingGround(){return V.A.clearStagingGround()}getChangedFiles(){return V.A.getStagingGround().files}hasLocalChanges(e){return V.A.getStagingGround().files.some(t=>t.path===e)}async createAsset(e,t,s,n){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};if(!A.getUIBehavior().allowCreateNew)throw new Error("Current user type cannot create new assets");return this.saveAssetLocal(n,a,(0,o.A)((0,o.A)({},r),{},{isNew:!0,createdAt:Date.now()}))}async batchSaveLocal(e){const t=[];for(const s of e){const e=await this.saveAssetLocal(s.path,s.content,s.metadata);t.push((0,o.A)((0,o.A)({},e),{},{path:s.path}))}return{success:t.every(e=>e.result===Q),results:t}}async getAccessInfo(e,t,s){const[n,o,a]=await Promise.all([A.getRepositoryAccess(e,t,s),A.getAccessBadge(e,t,s),this.getSaveOptions(e,t,s)]);return{access:n,badge:o,saveOptions:a,userType:A.getUserType(),isDemo:A.isDemoUser()}}},se=["children","pageName","file","repository","branch","content","originalContent","hasChanges","onSave","onContentChange","customSaveToGitHub","showSaveButtons","saveButtonsPosition"],ne=e=>{let{children:t,pageName:s,file:a,repository:r,branch:i,content:l,originalContent:d,hasChanges:u=!1,onSave:h,onContentChange:g,customSaveToGitHub:m,showSaveButtons:p=!0,saveButtonsPosition:b="top"}=e,f=(0,W.A)(e,se);const[v,y]=(0,n.useState)(!1),[w,k]=(0,n.useState)(!1),[x,N]=(0,n.useState)(null),[S,j]=(0,n.useState)(!1),[A,C]=(0,n.useState)(!1),[I,T]=(0,n.useState)(null),[D,_]=(0,n.useState)(!1),[E,R]=(0,n.useState)("");(0,n.useEffect)(()=>{(async()=>{if(r)try{var e;const t=await te.getSaveOptions(null===(e=r.owner)||void 0===e?void 0:e.login,r.name,i);T(t)}catch(t){console.error("Error loading save options:",t)}})()},[r,i]);const P=(null===I||void 0===I?void 0:I.canSaveGitHub)&&(null===I||void 0===I?void 0:I.showSaveGitHub),G=(0,n.useCallback)(async()=>{if(u&&null!==a&&void 0!==a&&a.path)try{var e;y(!0),N(null),j(!1);const t=await te.saveAssetLocal(a.path,l,{repository:(null===r||void 0===r?void 0:r.full_name)||"".concat(null===r||void 0===r||null===(e=r.owner)||void 0===e?void 0:e.login,"/").concat(null===r||void 0===r?void 0:r.name),branch:i||(null===r||void 0===r?void 0:r.default_branch)||"main",fileName:a.name,timestamp:(new Date).toISOString()});if("success"!==t.result)throw new Error(t.message||"Failed to save to local storage");j(!0),h&&h(l,"local"),setTimeout(()=>{j(!1)},3e3)}catch(t){console.error("Error saving file locally:",t),N("Failed to save locally: ".concat(t.message))}finally{y(!1)}},[u,a,l,r,i,h]),H=(0,n.useCallback)(()=>{u&&P&&(N(null),_(!0))},[u,P]),L=(0,n.useCallback)(async e=>{if(e.trim()&&null!==a&&void 0!==a&&a.path)try{var t;if(k(!0),N(null),C(!1),m){if(!await m(e.trim()))throw new Error("Custom save function failed");return C(!0),_(!1),R(""),h&&h(l,"github"),void setTimeout(()=>{C(!1)},3e3)}const s=await te.saveAssetGitHub(null===r||void 0===r||null===(t=r.owner)||void 0===t?void 0:t.login,null===r||void 0===r?void 0:r.name,i,a.path,l,e.trim());if("success"!==s.result){let e=s.message;throw"demo_mode_blocked"===s.result?e="Demo users cannot save to GitHub. You can save changes locally instead.":"permission_denied"===s.result&&(e="You do not have permission to save to this repository."),new Error(e)}C(!0),_(!1),R(""),h&&h(l,"github"),setTimeout(()=>{C(!1)},3e3)}catch(s){console.error("Error saving file to GitHub:",s),N("Failed to save to GitHub: ".concat(s.message))}finally{k(!1)}},[a,l,r,i,h,m]),F=(0,n.useCallback)(()=>{_(!1),R("")},[]),O={hasChanges:u,isSavingLocal:v,isSavingGitHub:w,canSaveToGitHub:P,localSaveSuccess:S,githubSaveSuccess:A,onSaveLocal:G,onSaveGitHub:H};return(0,c.jsx)(M,(0,o.A)((0,o.A)({pageName:s},f),{},{children:(0,c.jsxs)("div",{className:"asset-editor-layout",children:[p&&("top"===b||"both"===b)&&(0,c.jsx)("div",{className:"save-buttons-top",children:(0,c.jsx)(z,(0,o.A)({},O))}),x&&(0,c.jsxs)("div",{className:"asset-editor-error",children:[(0,c.jsx)("span",{className:"error-icon",children:"\u26a0\ufe0f"}),x,(0,c.jsx)("button",{className:"btn-link error-dismiss",onClick:()=>N(null),children:"\u2715"})]}),S&&(0,c.jsxs)("div",{className:"asset-editor-success",children:[(0,c.jsx)("span",{className:"success-icon",children:"\u2705"}),"Changes saved locally successfully!"]}),A&&(0,c.jsxs)("div",{className:"asset-editor-success",children:[(0,c.jsx)("span",{className:"success-icon",children:"\u2705"}),"Changes committed to GitHub successfully!"]}),(0,c.jsx)("div",{className:"asset-editor-content",children:t}),p&&("bottom"===b||"both"===b)&&(0,c.jsx)("div",{className:"save-buttons-bottom",children:(0,c.jsx)(z,(0,o.A)({},O))}),D&&(0,c.jsx)(X,{isOpen:D,commitMessage:E,setCommitMessage:R,onCommit:L,onCancel:F,isSaving:w,fileName:null===a||void 0===a?void 0:a.name})]})}))};s(78362);const oe=["toolDefinition"],ae="viewer",re="editor",ie="dashboard",le="utility";class ce{constructor(e){this.id=e.id,this.name=e.name,this.title=e.title||e.name,this.description=e.description,this.type=e.type||le,this.route=e.route||"/".concat(this.id),this.icon=e.icon,this.category=e.category||"general",this.requiresAuth=!1!==e.requiresAuth,this.supportsDemo=!1!==e.supportsDemo,this.requiresDAK=e.requiresDAK||!1,this.assetTypes=e.assetTypes||[],this.assetPattern=e.assetPattern,this.viewerComponent=e.viewerComponent,this.editorComponent=e.editorComponent,this.dashboardComponent=e.dashboardComponent,this.onInit=e.onInit,this.onAssetLoad=e.onAssetLoad,this.onAssetSave=e.onAssetSave,this.onError=e.onError}supportsAsset(e){var t;return!(null!==(t=this.assetTypes)&&void 0!==t&&t.length||this.assetPattern)||(this.assetPattern?new RegExp(this.assetPattern).test(e):this.assetTypes.some(t=>e.includes(t)))}async canAccess(){return(!this.requiresAuth||!A.isUnauthenticated())&&!(!this.supportsDemo&&A.isDemoUser())}createComponent(){const e=this;return function(t){return(0,c.jsx)(de,(0,o.A)({toolDefinition:e},t))}}}const de=e=>{let{toolDefinition:t}=e,s=(0,W.A)(e,oe);const a=K(),[r,i]=n.useState({loading:!0,error:null,canAccess:!1,assets:[],content:null}),l=n.useCallback(async()=>{try{i(e=>(0,o.A)((0,o.A)({},e),{},{loading:!0,error:null}));if(!await t.canAccess())throw new Error("Access denied: This tool requires ".concat(t.requiresAuth?"authentication":"different user type"));a.repository&&await te.initialize(a.repository,a.branch);let s=[],n=null;if(a.asset&&(t.type===ae||t.type===re)){if(!t.supportsAsset(a.asset))throw new Error("This tool does not support asset type: ".concat(a.asset));{var e;const t=await te.getAsset(a.user,null===(e=a.repository)||void 0===e?void 0:e.name,a.branch,a.asset);s=[(0,o.A)({path:a.asset},t)],n=t.content}}t.onInit&&await t.onInit({pageParams:a,assets:s,content:n}),i({loading:!1,error:null,canAccess:!0,assets:s,content:n})}catch(s){console.error("Error initializing tool ".concat(t.id,":"),s),i({loading:!1,error:s.message,canAccess:!1,assets:[],content:null}),t.onError&&t.onError(s,{pageParams:a})}},[t,a]);n.useEffect(()=>{l()},[l]);const d=async(e,s)=>{if(a.asset)try{let n;if("local"===s)n=await te.saveAssetLocal(a.asset,e);else if("github"===s)throw new Error("GitHub save requires commit message - use handleGitHubSave instead");return t.onAssetSave&&await t.onAssetSave({asset:a.asset,content:e,saveType:s,result:n,pageParams:a}),n}catch(n){throw console.error("Error saving asset in tool ".concat(t.id,":"),n),n}},u=async(e,s)=>{if(a.asset)try{var n;const o=await te.saveAssetGitHub(a.user,null===(n=a.repository)||void 0===n?void 0:n.name,a.branch,a.asset,e,s);return t.onAssetSave&&await t.onAssetSave({asset:a.asset,content:e,saveType:"github",result:o,commitMessage:s,pageParams:a}),o}catch(o){throw console.error("Error saving asset to GitHub in tool ".concat(t.id,":"),o),o}};if(r.loading)return(0,c.jsx)(M,{pageName:t.id,children:(0,c.jsxs)("div",{className:"tool-loading",children:[(0,c.jsxs)("h2",{children:["Loading ",t.title,"..."]}),(0,c.jsx)("p",{children:"Initializing tool and checking access permissions."})]})});if(r.error||!r.canAccess)return(0,c.jsx)(M,{pageName:t.id,children:(0,c.jsxs)("div",{className:"tool-error",children:[(0,c.jsxs)("h2",{children:["Cannot Access ",t.title]}),(0,c.jsx)("p",{children:r.error||"Access denied"}),(0,c.jsx)("button",{onClick:()=>window.history.back(),children:"Go Back"})]})});return(()=>{const e=(0,o.A)({toolDefinition:t,pageParams:a,toolState:r,onAssetSave:d,onGitHubSave:u},s);switch(t.type){case re:if(t.editorComponent){const s=t.editorComponent;var n;return a.asset&&r.assets.length>0?(0,c.jsx)(ne,{pageName:t.id,file:{name:a.asset,path:a.asset},repository:a.repository,branch:a.branch,content:r.content,originalContent:null===(n=r.assets[0])||void 0===n?void 0:n.content,hasChanges:!1,onSave:d,onContentChange:e=>{i(t=>(0,o.A)((0,o.A)({},t),{},{content:e}))},children:(0,c.jsx)(s,(0,o.A)({},e))}):(0,c.jsx)(M,{pageName:t.id,children:(0,c.jsx)(s,(0,o.A)({},e))})}break;case ae:if(t.viewerComponent){const s=t.viewerComponent;return(0,c.jsx)(M,{pageName:t.id,children:(0,c.jsx)(s,(0,o.A)({},e))})}break;case ie:if(t.dashboardComponent){const s=t.dashboardComponent;return(0,c.jsx)(M,{pageName:t.id,children:(0,c.jsx)(s,(0,o.A)({},e))})}break;default:const s=t.viewerComponent||t.editorComponent||t.dashboardComponent;if(s)return(0,c.jsx)(M,{pageName:t.id,children:(0,c.jsx)(s,(0,o.A)({},e))})}return(0,c.jsx)(M,{pageName:t.id,children:(0,c.jsxs)("div",{className:"tool-fallback",children:[(0,c.jsx)("h1",{children:t.title}),(0,c.jsx)("p",{children:t.description}),(0,c.jsx)("p",{children:"No component defined for this tool."})]})})})()};new class{constructor(){this.tools=new Map}register(e){const t=new ce(e);return this.tools.set(t.id,t),t}get(e){return this.tools.get(e)}getAll(){return Array.from(this.tools.values())}getByCategory(e){return this.getAll().filter(t=>t.category===e)}getByAssetType(e){return this.getAll().filter(t=>t.supportsAsset(e))}async getAccessibleTools(){const e=this.getAll(),t=[];for(const s of e)await s.canAccess()&&t.push(s);return t}}},65240:(e,t,s)=>{s.d(t,{A:()=>o});var n=s(5452);const o=new class{constructor(){this.CACHE_KEY_PREFIX="sgex_repo_cache_",this.CACHE_EXPIRY_HOURS=24,this.logger=n.A.getLogger("RepositoryCacheService"),this.logger.debug("RepositoryCacheService initialized",{cacheExpiryHours:this.CACHE_EXPIRY_HOURS})}getCacheKey(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"user";return"".concat(this.CACHE_KEY_PREFIX).concat(t,"_").concat(e)}isStale(e){return Date.now()-e>60*this.CACHE_EXPIRY_HOURS*60*1e3}getCachedRepositories(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"user";try{var s;const n=this.getCacheKey(e,t);this.logger.cache("get",n);const o=localStorage.getItem(n);if(!o)return this.logger.cache("miss",n,"No cached data found"),null;const a=JSON.parse(o);return this.isStale(a.timestamp)?(this.logger.cache("expired",n,{age:Date.now()-a.timestamp}),localStorage.removeItem(n),null):(this.logger.cache("hit",n,{repositoryCount:(null===(s=a.repositories)||void 0===s?void 0:s.length)||0,age:Date.now()-a.timestamp}),{repositories:a.repositories,timestamp:a.timestamp,owner:a.owner,type:a.type})}catch(n){const s=this.getCacheKey(e,t);return this.logger.error("Error reading repository cache",{cacheKey:s,error:n.message}),console.warn("Error reading repository cache:",n),null}}setCachedRepositories(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"user",s=arguments.length>2?arguments[2]:void 0;try{const n=this.getCacheKey(e,t),o={repositories:s,timestamp:Date.now(),owner:e,type:t};return this.logger.cache("set",n,{repositoryCount:(null===s||void 0===s?void 0:s.length)||0,owner:e,type:t}),localStorage.setItem(n,JSON.stringify(o)),!0}catch(n){const s=this.getCacheKey(e,t);return this.logger.error("Error caching repositories",{cacheKey:s,error:n.message}),console.warn("Error caching repositories:",n),!1}}clearCache(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"user";try{const s=this.getCacheKey(e,t);return this.logger.cache("clear",s,{owner:e,type:t}),localStorage.removeItem(s),!0}catch(s){const n=this.getCacheKey(e,t);return this.logger.error("Error clearing repository cache",{cacheKey:n,error:s.message}),console.warn("Error clearing repository cache:",s),!1}}clearAllCaches(){try{return Object.keys(localStorage).forEach(e=>{e.startsWith(this.CACHE_KEY_PREFIX)&&localStorage.removeItem(e)}),!0}catch(e){return console.warn("Error clearing all repository caches:",e),!1}}getCacheInfo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"user";const s=this.getCachedRepositories(e,t);if(!s)return{exists:!1,stale:!0};const n=Date.now()-s.timestamp,o=Math.round(n/36e5);return{exists:!0,stale:this.isStale(s.timestamp),age:n,ageHours:o,repositoryCount:s.repositories.length,timestamp:new Date(s.timestamp).toISOString()}}}},78362:(e,t,s)=>{s.d(t,{A:()=>o});var n=s(89379);const o=new class{constructor(){this.storageKey="sgex_feature_files",this.metadataKey="sgex_feature_files_metadata"}getAllLocalChanges(){try{const e=localStorage.getItem(this.storageKey);return e?JSON.parse(e):{}}catch(e){return console.error("Error reading local changes:",e),{}}}getLocalContent(e){return this.getAllLocalChanges()[e]||null}saveLocal(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const o=this.getAllLocalChanges();o[e]=t,localStorage.setItem(this.storageKey,JSON.stringify(o));const a=this.getAllMetadata();return a[e]=(0,n.A)((0,n.A)({},s),{},{lastModified:(new Date).toISOString(),originalPath:e}),localStorage.setItem(this.metadataKey,JSON.stringify(a)),!0}catch(o){return console.error("Error saving to localStorage:",o),!1}}removeLocal(e){try{const t=this.getAllLocalChanges();delete t[e],localStorage.setItem(this.storageKey,JSON.stringify(t));const s=this.getAllMetadata();return delete s[e],localStorage.setItem(this.metadataKey,JSON.stringify(s)),!0}catch(t){return console.error("Error removing from localStorage:",t),!1}}getAllMetadata(){try{const e=localStorage.getItem(this.metadataKey);return e?JSON.parse(e):{}}catch(e){return console.error("Error reading metadata:",e),{}}}getMetadata(e){return this.getAllMetadata()[e]||null}hasLocalChanges(){const e=this.getAllLocalChanges();return Object.keys(e).length>0}getLocalChangesCount(){const e=this.getAllLocalChanges();return Object.keys(e).length}exportLocalChanges(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"json";const t=this.getAllLocalChanges(),s=this.getAllMetadata();if("json"===e){const e={exported:(new Date).toISOString(),version:"1.0",changes:t,metadata:s};return new Blob([JSON.stringify(e,null,2)],{type:"application/json"})}throw new Error("Export format '".concat(e,"' not supported"))}importLocalChanges(e){try{const t=JSON.parse(e);if(!t.changes||!t.metadata)throw new Error("Invalid import data format");const s=this.getAllLocalChanges(),o=this.getAllMetadata(),a=(0,n.A)((0,n.A)({},s),t.changes),r=(0,n.A)((0,n.A)({},o),t.metadata);return localStorage.setItem(this.storageKey,JSON.stringify(a)),localStorage.setItem(this.metadataKey,JSON.stringify(r)),!0}catch(t){return console.error("Error importing local changes:",t),!1}}clearAllLocalChanges(){localStorage.removeItem(this.storageKey),localStorage.removeItem(this.metadataKey)}getStorageInfo(){const e=this.getAllLocalChanges(),t=this.getAllMetadata(),s=JSON.stringify(e).length,n=JSON.stringify(t).length,o=s+n;return{fileCount:Object.keys(e).length,totalSize:o,changesSize:s,metadataSize:n,formattedSize:this.formatBytes(o)}}formatBytes(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]}}},89387:(e,t,s)=>{s.d(t,{A:()=>a});var n=s(55661),o=s(50404);const a=new class{async validateDAKRepository(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main";try{const o=await this.checkRepositoryExists(e,t),a=await this.fetchSushiConfig(e,t,s);if(!a)return o?(console.log("Repository ".concat(e,"/").concat(t," exists on GitHub - allowing access even without sushi-config.yaml")),!0):(console.log("No sushi-config.yaml found in ".concat(e,"/").concat(t," and repository doesn't exist")),!1);const r=n.Ay.load(a);if(!r||"object"!==typeof r)return o?(console.log("Invalid YAML format in sushi-config.yaml for ".concat(e,"/").concat(t," but repository exists - allowing access")),!0):(console.log("Invalid YAML format in sushi-config.yaml for ".concat(e,"/").concat(t)),!1);if(!r.dependencies||"object"!==typeof r.dependencies)return o?(console.log("No dependencies section found in sushi-config.yaml for ".concat(e,"/").concat(t," but repository exists - allowing access")),!0):(console.log("No dependencies section found in sushi-config.yaml for ".concat(e,"/").concat(t)),!1);return"smart.who.int.base"in r.dependencies?(console.log("Valid DAK repository found: ".concat(e,"/").concat(t," (has smart.who.int.base dependency)")),!0):o?(console.log("Repository ".concat(e,"/").concat(t," has sushi-config.yaml but missing smart.who.int.base dependency - allowing access since repository exists")),!0):(console.log("Repository ".concat(e,"/").concat(t," has sushi-config.yaml but missing smart.who.int.base dependency")),!1)}catch(o){return console.log("Error validating DAK repository ".concat(e,"/").concat(t,":"),o.message),!1}}async checkRepositoryExists(e,t){try{const s=o.A.isAuth()?o.A.octokit:null;return s?(await s.rest.repos.get({owner:e,repo:t}),console.log("Repository ".concat(e,"/").concat(t," exists on GitHub")),!0):(console.log("Cannot check repository existence for ".concat(e,"/").concat(t," - not authenticated")),!1)}catch(s){return 404===s.status?(console.log("Repository ".concat(e,"/").concat(t," does not exist on GitHub")),!1):(console.log("Error checking repository existence for ".concat(e,"/").concat(t,":"),s.message,"- assuming it might exist"),!0)}}async fetchSushiConfig(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main";try{const a=o.A.isAuth()?o.A.octokit:null;if(!a)return console.log("Cannot fetch sushi-config.yaml for ".concat(e,"/").concat(t," - not authenticated")),null;const r="main"===s?["main","master"]:[s];for(const s of r)try{const{data:n}=await a.rest.repos.getContent({owner:e,repo:t,path:"sushi-config.yaml",ref:s});if("file"===n.type&&n.content){const o=decodeURIComponent(escape(atob(n.content)));return console.log("Found sushi-config.yaml in ".concat(e,"/").concat(t," on branch ").concat(s)),o}}catch(n){console.log("sushi-config.yaml not found on branch ".concat(s," for ").concat(e,"/").concat(t,":"),404===n.status?"File not found":n.message);continue}return null}catch(a){return console.log("Error fetching sushi-config.yaml for ".concat(e,"/").concat(t,":"),a.message),null}}validateDemoDAKRepository(e,t){if(!e||!t||e.includes("/")||t.includes("/"))return console.log("Demo mode: Invalid repository format ".concat(e,"/").concat(t)),!1;const s=/^[a-zA-Z0-9._-]+$/;if(!s.test(e)||!s.test(t))return console.log("Demo mode: Invalid characters in repository name ".concat(e,"/").concat(t)),!1;const n="".concat(e,"/").concat(t);return console.log("Demo mode: ".concat(n," accepted as valid DAK repository (proper org/repo format)")),!0}}},93156:(e,t,s)=>{s.d(t,{A:()=>m});var n=s(65043),o=s(74117),a=s(19794),r=s(89379),i=s(50404),l=s(61528),c=s(55661);const d=new class{constructor(){this.templates=new Map,this.templateCache=new Map}async fetchIssueTemplates(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"litlfred",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"sgex";try{const s=await this._fetchTemplatesFromDirectory(e,t,".github/ISSUE_TEMPLATE"),n="".concat(e,"/").concat(t);return this.templateCache.set(n,{templates:s,fetchedAt:Date.now()}),s}catch(s){return console.warn("Failed to fetch issue templates:",s),this._getDefaultTemplates()}}async _fetchTemplatesFromDirectory(e,t,s){const n=[];try{const a=(await i.A.getDirectoryContents(e,t,s)).filter(e=>"file"===e.type&&(e.name.endsWith(".yml")||e.name.endsWith(".yaml"))&&"config.yml"!==e.name);for(const s of a)try{const o=await i.A.getFileContent(e,t,s.path),a=this._parseIssueTemplate(o,s.name);a&&n.push(a)}catch(o){console.warn("Failed to parse template ".concat(s.name,":"),o)}return n}catch(o){return console.warn("Failed to fetch templates from ".concat(s,":"),o),[]}}_parseIssueTemplate(e,t){try{const s=c.Ay.load(e);if(!s||!s.name||!s.body)return console.warn("Invalid template structure in ".concat(t)),null;const n=this._getTemplateType(t);return{id:t.replace(/\.(yml|yaml)$/,""),name:s.name,description:s.description||"",title:s.title||"",labels:s.labels||[],body:s.body||[],filename:t,type:n}}catch(s){return console.error("Failed to parse YAML template ".concat(t,":"),s),null}}_getTemplateType(e){const t=e.toLowerCase();return t.includes("bug")?"bug":t.includes("feature")?"feature":t.includes("question")?"question":t.includes("documentation")?"documentation":"general"}getDefaultTemplates(){return this._getDefaultTemplates()}_getDefaultTemplates(){return[{id:"bug_report",name:"Bug Report",description:"File a bug report to help us improve",title:"[Bug]: ",labels:["bug"],type:"bug",body:[{type:"textarea",id:"what-happened",attributes:{label:"What happened?",description:"A clear description of what the bug is."},validations:{required:!0}},{type:"textarea",id:"expected",attributes:{label:"Expected behavior",description:"What did you expect to happen?"},validations:{required:!0}},{type:"textarea",id:"steps",attributes:{label:"Steps to reproduce",description:"Steps to reproduce the behavior",placeholder:"1. Go to '...'\n2. Click on '....'\n3. See error"},validations:{required:!0}}]},{id:"feature_request",name:"Feature Request",description:"Suggest an idea for this project",title:"[Feature]: ",labels:["enhancement"],type:"feature",body:[{type:"textarea",id:"description",attributes:{label:"Feature Description",description:"A clear description of what you want to happen."},validations:{required:!0}},{type:"textarea",id:"use-case",attributes:{label:"Use Case",description:"Describe the use case and why this feature would be beneficial."},validations:{required:!0}}]},{id:"question",name:"Question",description:"Ask for help or clarification about SGEX Workbench",title:"[Question]: ",labels:["question"],type:"question",body:[{type:"textarea",id:"question",attributes:{label:"Your Question",description:"What would you like to know?"},validations:{required:!0}},{type:"textarea",id:"context",attributes:{label:"Context",description:"What were you trying to do when this question came up?"},validations:{required:!1}}]}]}async getTemplates(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"litlfred",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"sgex",s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n="".concat(e,"/").concat(t),o=this.templateCache.get(n);return!s&&o&&Date.now()-o.fetchedAt<36e5?o.templates:await this.fetchIssueTemplates(e,t)}generateIssueBody(e,t){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",o="";for(const r of e.body)if("markdown"===r.type)o+="".concat(r.attributes.value,"\n\n");else if(r.id&&t[r.id]){var a;const e=(null===(a=r.attributes)||void 0===a?void 0:a.label)||r.id,s=t[r.id];o+="## ".concat(e,"\n\n").concat(s,"\n\n")}if(s&&n){const e=this._truncateConsoleOutput(n);o+="## Console Output\n\n```\n".concat(e,"\n```\n\n")}return o+=this._generateEnvironmentInfo(),o.trim()}_truncateConsoleOutput(e){const t=32768;if(e.length<=t)return e;const s=e.substring(0,t);return"".concat(s,"\n\n... (output truncated to ").concat(t," characters)")}_generateEnvironmentInfo(){const e={userAgent:navigator.userAgent,url:window.location.href,timestamp:(new Date).toISOString(),viewport:{width:window.innerWidth,height:window.innerHeight},screen:{width:window.screen.width,height:window.screen.height}};return"## Environment\n\n```json\n".concat(JSON.stringify(e,null,2),"\n```")}captureConsoleOutput(){const e=[],t={};return["log","warn","error","info","debug"].forEach(e=>{t[e]=console[e]}),["log","warn","error","info","debug"].forEach(s=>{console[s]=function(){for(var n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];t[s].apply(console,o);const r=(new Date).toISOString(),i=o.map(e=>"object"===typeof e?JSON.stringify(e):String(e)).join(" ");e.push("[".concat(r,"] ").concat(s.toUpperCase(),": ").concat(i))}}),{stop:()=>(Object.keys(t).forEach(e=>{console[e]=t[e]}),e.join("\n")),getLogs:()=>e.join("\n")}}async submitIssue(e,t,s,n){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"";try{const d=(s.title||"")+(n.title||"Issue submitted via SGEX"),u=this.generateIssueBody(s,n,o,a),h=await i.A.createIssue(e,t,d,u,s.labels||[],[]);if(h.success&&h.issue&&i.A.isAuth())try{await l.A.addTrackedIssue((0,r.A)((0,r.A)({},h.issue),{},{repository:"".concat(e,"/").concat(t)}))}catch(c){console.warn("Failed to track created issue:",c)}return h}catch(d){return console.error("Failed to submit issue:",d),{success:!1,error:{message:d.message,type:"submission_error"}}}}generateIssueUrl(e,t,s,n){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"";const r=new URLSearchParams;s.filename&&r.set("template",s.filename),s.labels&&s.labels.length>0&&r.set("labels",s.labels.join(","));const i=(s.title||"")+(n.title||"");if(i&&r.set("title",i),s.filename&&s.body){for(const e of s.body)e.id&&n[e.id]&&r.set(e.id,n[e.id]);if(o&&a){const e=this._truncateConsoleOutput(a),t="console-output";r.set(t,"```\n".concat(e,"\n```"))}}else{const e=this.generateIssueBody(s,n,o,a);if(e){const t=2e3,s=e.length>t?e.substring(0,t)+"\n\n... (content truncated, please add remaining details)":e;r.set("body",s)}}return"https://github.com/".concat(e,"/").concat(t,"/issues/new?").concat(r.toString())}clearCache(){this.templateCache.clear()}};var u=s(70579);const h=e=>{let{onClose:t,contextData:s={}}=e;const[o,a]=(0,n.useState)([]),[l,c]=(0,n.useState)(null),[h,g]=(0,n.useState)({}),[m,p]=(0,n.useState)(!1),[b,f]=(0,n.useState)(!0),[v,y]=(0,n.useState)(!1),[w,k]=(0,n.useState)(!1),[x,N]=(0,n.useState)(null),[S,j]=(0,n.useState)(null),[A,C]=(0,n.useState)(null);(0,n.useEffect)(()=>{I()},[]),(0,n.useEffect)(()=>{const e=d.captureConsoleOutput();return C(e),()=>{e.stop()}},[]),(0,n.useEffect)(()=>{if(o.length>0&&!l){const e=o.find(e=>"bug"===e.type)||o[0];c(e),p("bug"===e.type)}},[o,l]);const I=async()=>{try{f(!0);const e=await d.getTemplates();a(e)}catch(e){console.error("Failed to load templates:",e),N("Failed to load bug report templates. Using defaults."),a(d.getDefaultTemplates())}finally{f(!1)}},T=(e,t)=>{g(s=>(0,r.A)((0,r.A)({},s),{},{[e]:t}))};return b?(0,u.jsxs)("div",{className:"bug-report-form",children:[(0,u.jsxs)("div",{className:"form-header",children:[(0,u.jsx)("h3",{children:"Loading Bug Report Templates..."}),(0,u.jsx)("button",{className:"close-btn",onClick:t,"aria-label":"Close bug report form",children:"\xd7"})]}),(0,u.jsx)("div",{className:"loading-spinner",children:"Loading..."})]}):null!==S&&void 0!==S&&S.urlOpened?(0,u.jsxs)("div",{className:"bug-report-form",children:[(0,u.jsxs)("div",{className:"form-header",children:[(0,u.jsx)("h3",{children:"Issue Form Opened"}),(0,u.jsx)("button",{className:"close-btn",onClick:t,"aria-label":"Close bug report form",children:"\xd7"})]}),(0,u.jsx)("div",{className:"success-message",children:(0,u.jsxs)("div",{children:[(0,u.jsx)("p",{children:"\u2705 Your issue form has been opened in a new tab."}),(0,u.jsx)("p",{children:"Please complete and submit the form in the GitHub tab to create your issue."}),(0,u.jsx)("p",{children:"If the tab didn't open, you can access it here:"}),(0,u.jsx)("a",{href:S.fallbackUrl,target:"_blank",rel:"noopener noreferrer",className:"issue-link",children:"Open Issue Form"})]})})]}):w&&null!==S&&void 0!==S&&S.success?(0,u.jsxs)("div",{className:"bug-report-form",children:[(0,u.jsxs)("div",{className:"form-header",children:[(0,u.jsx)("h3",{children:"Issue Submitted Successfully!"}),(0,u.jsx)("button",{className:"close-btn",onClick:t,"aria-label":"Close bug report form",children:"\xd7"})]}),(0,u.jsx)("div",{className:"success-message",children:S.manual?(0,u.jsxs)("div",{children:[(0,u.jsx)("p",{children:"\u2705 Your issue has been opened in a new tab."}),(0,u.jsx)("p",{children:"If the tab didn't open, you can access it here:"}),(0,u.jsx)("a",{href:S.fallbackUrl,target:"_blank",rel:"noopener noreferrer",className:"issue-link",children:"Open Issue Form"})]}):(0,u.jsxs)("div",{children:[(0,u.jsxs)("p",{children:["\u2705 Issue #",null===(D=S.issue)||void 0===D?void 0:D.number," has been created successfully!"]}),(0,u.jsxs)("a",{href:null===(_=S.issue)||void 0===_?void 0:_.html_url,target:"_blank",rel:"noopener noreferrer",className:"issue-link",children:["View Issue #",null===(E=S.issue)||void 0===E?void 0:E.number]})]})})]}):(0,u.jsxs)("div",{className:"bug-report-form",children:[(0,u.jsxs)("div",{className:"form-header",children:[(0,u.jsx)("h3",{children:"Report an Issue"}),(0,u.jsx)("button",{className:"close-btn",onClick:t,"aria-label":"Close bug report form",children:"\xd7"})]}),x&&(0,u.jsx)("div",{className:"error-message",children:(0,u.jsxs)("p",{children:["\u26a0\ufe0f ",x]})}),(null===S||void 0===S?void 0:S.error)&&"popup_blocked"===S.error.type&&(0,u.jsxs)("div",{className:"error-message",children:[(0,u.jsx)("p",{children:"\u26a0\ufe0f Pop-up blocked. Please allow pop-ups or use the link below:"}),(0,u.jsx)("div",{children:(0,u.jsx)("a",{href:S.fallbackUrl,target:"_blank",rel:"noopener noreferrer",className:"fallback-link",children:"Open GitHub Issue Form"})})]}),(0,u.jsxs)("form",{onSubmit:async e=>{if(e.preventDefault(),l){y(!0),N(null);try{const e=m&&A?A.getLogs():"";if(i.A.isAuthenticated){const s=await d.submitIssue("litlfred","sgex",l,h,m,e);var t;if(j(s),s.success)k(!0);else N((null===(t=s.error)||void 0===t?void 0:t.message)||"Failed to submit issue")}else{const t=d.generateIssueUrl("litlfred","sgex",l,h,m,e);try{const e=window.open(t,"_blank");!e||e.closed?j({success:!1,fallbackUrl:t,error:{type:"popup_blocked"}}):j({success:!0,fallbackUrl:t,manual:!0,urlOpened:!0})}catch(s){j({success:!1,fallbackUrl:t,error:{type:"popup_blocked"}})}}}catch(n){console.error("Failed to submit bug report:",n),N(n.message)}finally{y(!1)}}else N("Please select a template")},className:"report-form",children:[(0,u.jsxs)("div",{className:"form-field",children:[(0,u.jsxs)("label",{htmlFor:"template-select",className:"field-label",children:["Issue Type ",(0,u.jsx)("span",{className:"required",children:"*"})]}),(0,u.jsxs)("select",{id:"template-select",className:"field-input select-input",value:(null===l||void 0===l?void 0:l.id)||"",onChange:e=>{(e=>{c(e),g({}),p("bug"===e.type)})(o.find(t=>t.id===e.target.value))},required:!0,children:[(0,u.jsx)("option",{value:"",children:"Select issue type..."}),o.map(e=>(0,u.jsxs)("option",{value:e.id,children:[e.name," - ",e.description]},e.id))]})]}),(0,u.jsx)("div",{className:"form-field",children:(0,u.jsxs)("label",{className:"checkbox-label console-option",children:[(0,u.jsx)("input",{type:"checkbox",className:"checkbox-input",checked:m,onChange:e=>p(e.target.checked)}),"Include JavaScript console output in report",(0,u.jsx)("span",{className:"checkbox-help",children:"(Recommended for bug reports - helps developers debug issues)"})]})}),l&&(0,u.jsx)("div",{className:"template-fields",children:l.body.map(e=>(e=>{const{id:t,type:s,attributes:n={},validations:o={}}=e,{label:a,description:r,placeholder:i,options:l}=n,{required:c}=o;if("markdown"===s)return(0,u.jsx)("div",{className:"form-field markdown-field",children:(0,u.jsx)("div",{className:"markdown-content",dangerouslySetInnerHTML:{__html:n.value}})},t||Math.random());const d=t||"field_".concat(Math.random());switch(s){case"textarea":return(0,u.jsxs)("div",{className:"form-field",children:[(0,u.jsxs)("label",{htmlFor:d,className:"field-label",children:[a,c&&(0,u.jsx)("span",{className:"required",children:"*"})]}),r&&(0,u.jsx)("p",{className:"field-description",children:r}),(0,u.jsx)("textarea",{id:d,className:"field-input textarea-input",placeholder:i,value:h[d]||"",onChange:e=>T(d,e.target.value),required:c,rows:4})]},d);case"input":return(0,u.jsxs)("div",{className:"form-field",children:[(0,u.jsxs)("label",{htmlFor:d,className:"field-label",children:[a,c&&(0,u.jsx)("span",{className:"required",children:"*"})]}),r&&(0,u.jsx)("p",{className:"field-description",children:r}),(0,u.jsx)("input",{id:d,type:"text",className:"field-input text-input",placeholder:i,value:h[d]||"",onChange:e=>T(d,e.target.value),required:c})]},d);case"dropdown":return(0,u.jsxs)("div",{className:"form-field",children:[(0,u.jsxs)("label",{htmlFor:d,className:"field-label",children:[a,c&&(0,u.jsx)("span",{className:"required",children:"*"})]}),r&&(0,u.jsx)("p",{className:"field-description",children:r}),(0,u.jsxs)("select",{id:d,className:"field-input select-input",value:h[d]||"",onChange:e=>T(d,e.target.value),required:c,children:[(0,u.jsx)("option",{value:"",children:"Select an option..."}),null===l||void 0===l?void 0:l.map((e,t)=>(0,u.jsx)("option",{value:e.value||e,children:e.label||e},t))]})]},d);case"checkboxes":return(0,u.jsx)("div",{className:"form-field",children:(0,u.jsxs)("fieldset",{className:"checkbox-fieldset",children:[(0,u.jsxs)("legend",{className:"field-label",children:[a,c&&(0,u.jsx)("span",{className:"required",children:"*"})]}),r&&(0,u.jsx)("p",{className:"field-description",children:r}),null===l||void 0===l?void 0:l.map((e,t)=>{var s;return(0,u.jsxs)("label",{className:"checkbox-label",children:[(0,u.jsx)("input",{type:"checkbox",className:"checkbox-input",checked:(null===(s=h[d])||void 0===s?void 0:s.includes(e.value||e))||!1,onChange:t=>{const s=e.value||e,n=h[d]||[],o=t.target.checked?[...n,s]:n.filter(e=>e!==s);T(d,o)}}),e.label||e]},t)})]})},d);default:return(0,u.jsx)("div",{className:"form-field",children:(0,u.jsxs)("p",{className:"unsupported-field",children:["Unsupported field type: ",s]})},d)}})(e))}),(0,u.jsxs)("div",{className:"form-actions",children:[(0,u.jsx)("button",{type:"submit",className:"submit-btn primary",disabled:v||!l,children:v?"Opening...":i.A.isAuthenticated?"Submit Issue":"Open in GitHub"}),(0,u.jsx)("button",{type:"button",className:"cancel-btn secondary",onClick:t,children:"Cancel"}),l&&!(null!==S&&void 0!==S&&S.urlOpened)&&(0,u.jsx)("a",{href:(()=>{if(!l)return"";const e=m&&A?A.getLogs():"";return d.generateIssueUrl("litlfred","sgex",l,h,m,e)})(),target:"_blank",rel:"noopener noreferrer",className:"fallback-btn tertiary",children:"Open in GitHub"})]}),(0,u.jsx)("div",{className:"auth-status",children:i.A.isAuthenticated?(0,u.jsx)("p",{className:"auth-info authenticated",children:"\u2705 Authenticated - Issues will be submitted directly to GitHub"}):(0,u.jsx)("p",{className:"auth-info not-authenticated",children:"\u2139\ufe0f Not authenticated - Issue will open in GitHub for manual submission"})})]})]});var D,_,E};var g=s(6735);const m=e=>{let{topic:t,helpTopic:s,contextData:r,onClose:i}=e;const{t:l}=(0,o.Bd)(),[c,d]=(0,n.useState)(!1),[m,p]=(0,n.useState)(0),[b,f]=(0,n.useState)(!1),v=(0,a.A)("sgex-mascot.png");(0,n.useEffect)(()=>{const e=(e,t)=>{var s;const n=new URLSearchParams(t);r.pageId&&n.set("sgex_page",r.pageId);const o=window.location.href;return n.set("sgex_current_url",o),null!==(s=r.selectedDak)&&void 0!==s&&s.name&&n.set("sgex_selected_dak",r.selectedDak.name),"".concat(e,"?").concat(n.toString())};return window.helpModalInstance={openSgexIssue:t=>{if("bug"===t)return void f(!0);let s={};switch(t){case"feature":s.template="feature_request.yml",s.labels="enhancement";break;case"question":s.template="question.yml",s.labels="question";break;case"documentation":s.template="documentation.yml",s.labels="documentation";break;case"blank":s.labels="blank-issue";break;default:s.labels="needs-triage"}const n=e("https://github.com/litlfred/sgex/issues/new",s);try{const e=window.open(n,"_blank");var o,a;if(!e||e.closed)null===(o=window.helpModalInstance)||void 0===o||null===(a=o.showFallbackInstructions)||void 0===a||a.call(o,"github-blocked",n,t);else setTimeout(()=>{try{var s,o;if(e.closed||!e.location||"about:blank"===e.location.href)e.close(),null===(s=window.helpModalInstance)||void 0===s||null===(o=s.showFallbackInstructions)||void 0===o||o.call(s,"github-blocked",n,t)}catch(a){}},1e3)}catch(l){var r,i;console.warn("Failed to open GitHub issue:",l),null===(r=window.helpModalInstance)||void 0===r||null===(i=r.showFallbackInstructions)||void 0===i||i.call(r,"github-blocked",n,t)}},openDakIssue:t=>{const s=r.repository||r.selectedDak;if(!s)return void console.warn("No DAK repository specified for feedback");const n="https://github.com/".concat(s.owner,"/").concat(s.name,"/issues/new");let o={};switch(t){case"bug":o.template="dak_bug_report.yml",o.labels="bug,dak-issue";break;case"improvement":o.template="dak_feature_request.yml",o.labels="enhancement,dak-improvement";break;case"content":o.template="dak_content_error.yml",o.labels="content-issue,clinical-content";break;case"question":o.template="dak_question.yml",o.labels="question,dak-question";break;case"blank":o.labels="blank-issue,dak-feedback";break;default:o.labels="dak-feedback"}s.name&&(o.sgex_dak_repository="".concat(s.owner,"/").concat(s.name));const a=e(n,o);try{const e=window.open(a,"_blank");var i,l;if(!e||e.closed)null===(i=window.helpModalInstance)||void 0===i||null===(l=i.showFallbackInstructions)||void 0===l||l.call(i,"github-blocked",a,"dak-".concat(t));else setTimeout(()=>{try{var s,n;if(e.closed||!e.location||"about:blank"===e.location.href)e.close(),null===(s=window.helpModalInstance)||void 0===s||null===(n=s.showFallbackInstructions)||void 0===n||n.call(s,"github-blocked",a,"dak-".concat(t))}catch(o){}},1e3)}catch(u){var c,d;console.warn("Failed to open DAK issue:",u),null===(c=window.helpModalInstance)||void 0===c||null===(d=c.showFallbackInstructions)||void 0===d||d.call(c,"github-blocked",a,"dak-".concat(t))}},showFallbackInstructions:(e,t,s)=>{const n={"github-blocked":{title:"GitHub Access Required",message:'\n              <div class="help-fallback-notice">\n                <h4>\ud83d\udd17 GitHub Link Blocked</h4>\n                <p>It looks like GitHub access is restricted in your current environment.</p>\n                <h5>To report this issue:</h5>\n                <ol>\n                  <li>Copy the link below</li>\n                  <li>Open it in a browser with GitHub access</li>\n                  <li>Fill out the issue template</li>\n                </ol>\n                <div class="fallback-url">\n                  <strong>Link to copy:</strong><br>\n                  <textarea readonly onclick="this.select()" style="width: 100%; height: 60px; margin: 5px 0; padding: 5px; font-family: monospace; font-size: 12px;">'.concat(t,'</textarea>\n                </div>\n                <p><em>\ud83d\udca1 Tip: You can also email us at <a href="mailto:smart@who.int">smart@who.int</a> with your issue details.</em></p>\n              </div>\n            ')}}[e]||{title:"External Link Issue",message:"<p>Unable to open external link. Please copy and visit: <br><code>".concat(t,"</code></p>")},o=document.querySelector(".help-fallback-overlay");o&&o.remove();const a=document.createElement("div");a.className="help-fallback-overlay",a.style.cssText="\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.7);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 10000;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        ";const r=document.createElement("div");r.style.cssText="\n          background: white;\n          border-radius: 8px;\n          padding: 20px;\n          max-width: 500px;\n          max-height: 80vh;\n          overflow-y: auto;\n          position: relative;\n          box-shadow: 0 10px 25px rgba(0,0,0,0.3);\n        ",r.innerHTML='\n          <button onclick="this.closest(\'.help-fallback-overlay\').remove()" style="\n            position: absolute;\n            top: 10px;\n            right: 15px;\n            background: none;\n            border: none;\n            font-size: 24px;\n            cursor: pointer;\n            color: #666;\n          ">\xd7</button>\n          <h3 style="margin-top: 0; color: #333;">'.concat(n.title,'</h3>\n          <div style="color: #555; line-height: 1.5;">').concat(n.message,"</div>\n        "),a.appendChild(r),document.body.appendChild(a),a.addEventListener("click",e=>{e.target===a&&a.remove()}),setTimeout(()=>{document.body.contains(a)&&a.remove()},3e4)}},()=>{delete window.helpModalInstance}},[r]);const y=e=>{e.target===e.currentTarget&&i()},w=()=>{m>0&&p(m-1)},k=()=>{null!==s&&void 0!==s&&s.content&&m<s.content.length-1&&p(m+1)},x=()=>{if(null===s||void 0===s||!s.content||"slideshow"!==s.type)return null;const e=s.content,t=e[m];let n=t.content;return"provide-dak-feedback"===s.id&&(n=n.replace(/onclick="this\.openDakIssue\('([^']+)'\)"/g,"onclick=\"window.helpModalInstance?.openDakIssue('$1')\"")),(0,u.jsxs)("div",{className:"help-slideshow",children:[(0,u.jsxs)("div",{className:"slideshow-header",children:[(0,u.jsx)("h3",{children:t.title}),(0,u.jsxs)("div",{className:"slide-counter",children:[m+1," of ",e.length]})]}),(0,u.jsx)("div",{className:"slideshow-content",dangerouslySetInnerHTML:{__html:n}}),(0,u.jsxs)("div",{className:"slideshow-controls",children:[(0,u.jsx)("button",{onClick:w,disabled:0===m,className:"slide-nav-btn",children:"\u2190 Previous"}),(0,u.jsx)("div",{className:"slide-dots",children:e.map((e,t)=>(0,u.jsx)("button",{className:"slide-dot ".concat(t===m?"active":""),onClick:()=>p(t),"aria-label":"Go to slide ".concat(t+1)},t))}),(0,u.jsx)("button",{onClick:k,disabled:m===e.length-1,className:"slide-nav-btn",children:"Next \u2192"})]})]})},{title:N,content:S}=(()=>{if(s)return{title:s.title,content:"slideshow"===s.type?x():(0,u.jsx)("div",{className:"help-content",children:(0,u.jsxs)("div",{className:"mascot-message",children:[(0,u.jsx)("img",{src:v,alt:(0,g.lm)(l,g.ld.MASCOT_HELPER,"SGEX Helper"),className:"help-mascot"}),(0,u.jsx)("div",{className:"message-bubble",children:(0,u.jsx)("div",{dangerouslySetInnerHTML:{__html:s.content}})})]})})};switch(t){case"github-token":case"pat-help":return{title:"GitHub Authentication Help",content:(0,u.jsx)("div",{className:"help-content",children:(0,u.jsxs)("div",{className:"mascot-message",children:[(0,u.jsx)("img",{src:v,alt:(0,g.lm)(l,g.ld.MASCOT_HELPER,"SGEX Helper"),className:"help-mascot"}),(0,u.jsxs)("div",{className:"message-bubble",children:[(0,u.jsx)("p",{children:"SGEX Workbench uses GitHub Personal Access Tokens for secure authentication!"}),(0,u.jsx)("p",{children:(0,u.jsx)("strong",{children:"How it works:"})}),(0,u.jsxs)("ul",{children:[(0,u.jsx)("li",{children:"Create a Personal Access Token in your GitHub settings"}),(0,u.jsx)("li",{children:"Enter the token in the login form"}),(0,u.jsx)("li",{children:"SGEX will securely connect to your GitHub repositories"}),(0,u.jsx)("li",{children:"No backend server required - works entirely in your browser!"})]}),(0,u.jsx)("p",{children:"This approach ensures compliance with our no-backend requirement while keeping your data secure."}),(0,u.jsx)("p",{children:"If you're having trouble, please use the menu above to get additional support."})]})]})})};default:return{title:"SGEX Workbench Help",content:(0,u.jsx)("div",{className:"help-content",children:(0,u.jsxs)("div",{className:"mascot-message",children:[(0,u.jsx)("img",{src:v,alt:(0,g.lm)(l,g.ld.MASCOT_HELPER,"SGEX Helper"),className:"help-mascot"}),(0,u.jsxs)("div",{className:"message-bubble",children:[(0,u.jsx)("p",{children:"Hi! I'm here to help you with the SGEX Workbench."}),(0,u.jsx)("p",{children:"Use the menu in the top right to get additional support options."})]})]})})}}})();return b?(0,u.jsx)("div",{className:"help-modal-overlay bug-report-overlay",onClick:y,children:(0,u.jsx)(h,{onClose:()=>{f(!1),i()},contextData:r})}):(0,u.jsx)("div",{className:"help-modal-overlay",onClick:y,children:(0,u.jsxs)("div",{className:"help-modal",children:[(0,u.jsxs)("div",{className:"help-modal-header",children:[(0,u.jsx)("h2",{children:N}),(0,u.jsxs)("div",{className:"help-modal-actions",children:[(0,u.jsxs)("button",{className:"hamburger-menu-btn",onClick:()=>{d(!c)},"aria-label":"More options",children:[(0,u.jsx)("span",{}),(0,u.jsx)("span",{}),(0,u.jsx)("span",{})]}),(0,u.jsx)("button",{className:"close-btn",onClick:i,"aria-label":"Close help",children:"\xd7"})]}),c&&(0,u.jsxs)("div",{className:"help-menu-dropdown",children:[(0,u.jsxs)("button",{onClick:()=>{window.open("/sgex/docs/overview","_blank")},className:"menu-item",children:[(0,u.jsx)("span",{className:"menu-icon",children:"\ud83d\udcd6"}),"Documentation"]}),(0,u.jsxs)("button",{onClick:()=>{f(!0)},className:"menu-item",children:[(0,u.jsx)("img",{src:"/sgex/bug-report-icon.svg",alt:(0,g.lm)(l,g.ld.ICON_BUG_REPORT,"Bug Report"),className:"menu-icon"}),"File Bug Report"]}),r.repository&&(0,u.jsxs)("button",{onClick:()=>{var e;r.repository&&(null!==(e=window.helpModalInstance)&&void 0!==e&&e.openDakIssue&&window.helpModalInstance.openDakIssue("content"))},className:"menu-item",children:[(0,u.jsx)("span",{className:"menu-icon",children:"\ud83d\udcdd"}),"Provide DAK Feedback"]}),(0,u.jsxs)("button",{onClick:()=>{const e=(null===s||void 0===s?void 0:s.title)||t,n=encodeURIComponent("SGEX Workbench Support: ".concat(e)),o=encodeURIComponent("\nHello SMART Guidelines Team,\n\nI need assistance with the SGEX Workbench.\n\nTopic: ".concat(e,"\nPage: ").concat(window.location.pathname,"\n\nPlease describe your question or issue:\n\n\nBest regards,\n    ").trim());window.open("mailto:smart@who.int?subject=".concat(n,"&body=").concat(o))},className:"menu-item",children:[(0,u.jsx)("span",{className:"menu-icon",children:"\ud83d\udce7"}),"Email Support"]})]})]}),(0,u.jsx)("div",{className:"help-modal-content",children:S})]})})}}}]);
//# sourceMappingURL=148.c5da5b3a.chunk.js.map