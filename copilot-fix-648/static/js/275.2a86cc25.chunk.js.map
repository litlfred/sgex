{"version":3,"file":"static/js/275.2a86cc25.chunk.js","mappings":"iJAWO,MA6CMA,EAAwB,SAACC,EAAOC,EAAMC,GAA4B,IAAlBC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAEnE,GAAKH,GAAwB,kBAATA,EAMpB,IAAIA,EAAKM,SAAS,SACXC,EAAAA,EAAAA,IAAkBP,GAMzB,GA5DiCD,OAClB,OAALA,QAAK,IAALA,GAAAA,EAAOS,SAAgB,OAALT,QAAK,IAALA,GAAAA,EAAOU,SA2D/BC,CAAmBX,GAAQ,CAE7B,MAAMY,EArDuBC,KAE/B,IAAKA,GAAwC,kBAAjBA,EAC1B,OAAOC,OAAOC,SAASC,OAIzB,GAAIH,EAAaN,SAAS,gBAAkBM,EAAaN,SAAS,SAEhE,OADAU,QAAQC,KAAK,wCAAyCL,GAC/CC,OAAOC,SAASC,OAGzB,MAAMG,EAAWC,wBACXC,EAAUP,OAAOC,SAASC,OAG1BM,EAAYT,EAAaU,WAAW,KAAOV,EAAaW,MAAM,GAAKX,EAGzE,OAAKM,EAOE,GAAGE,IAFYF,EAASM,SAAS,KAAON,EAAWA,EAAW,MAEjCG,IAN3B,GAAGD,KAAWC,KAiCLI,CAAiBzB,GACjCa,OAAOa,KAAKf,EAAS,SAAU,sBACjC,MAEMT,EACFD,EAASD,EAAM,CAAEE,UAEjBD,EAASD,QAdTgB,QAAQC,KAAK,mDAAoDjB,QAPnEgB,QAAQC,KAAK,mCAwBjB,C,gGCxEA,MA4NA,EA5NwBU,KAAO,IAADC,EAAAC,EAAAC,EAC5B,MAAMhB,GAAWiB,EAAAA,EAAAA,MACX9B,GAAW+B,EAAAA,EAAAA,OACX,KAAEC,EAAI,KAAEC,EAAI,OAAEC,IAAWC,EAAAA,EAAAA,MAGxBC,EAASC,IAAcC,EAAAA,EAAAA,WAAuB,QAAdX,EAAAd,EAASZ,aAAK,IAAA0B,OAAA,EAAdA,EAAgBS,UAAW,OAC3DG,EAAYC,IAAiBF,EAAAA,EAAAA,WAAuB,QAAdV,EAAAf,EAASZ,aAAK,IAAA2B,OAAA,EAAdA,EAAgBW,aAAc,OACpEE,EAAgBC,IAAqBJ,EAAAA,EAAAA,WAAuB,QAAdT,EAAAhB,EAASZ,aAAK,IAAA4B,OAAA,EAAdA,EAAgBY,iBAAkBP,GAAU,OAC1FS,EAASC,IAAcN,EAAAA,EAAAA,WAAUF,IAAYG,IAC7CM,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,MAqMnC,OAlMAS,EAAAA,EAAAA,WAAU,KACuBC,WAAa,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAsBzC,GArBAtC,QAAQuC,IAAI,8DAAqD,CAC/DC,UAAW,CAAEvB,OAAMC,OAAMC,UACzBsB,aAAc,CACZC,aAAcrB,EACdsB,gBAAiBnB,EACjBoB,aAAqB,OAAPvB,QAAO,IAAPA,OAAO,EAAPA,EAASwB,MACvBC,mBAA8B,OAAVtB,QAAU,IAAVA,OAAU,EAAVA,EAAYuB,UAChCC,gBAA2B,OAAVxB,QAAU,IAAVA,GAAiB,QAAPU,EAAVV,EAAYyB,aAAK,IAAAf,OAAP,EAAVA,EAAmBW,OAEtCK,mBAAoBpD,EAASZ,MAC7BiE,qBAAsBrD,EAASZ,MAAQ,CACrCwD,aAAc5C,EAASZ,MAAMmC,QAC7BsB,gBAAiB7C,EAASZ,MAAMsC,WAChCoB,aAAoC,QAAxBT,EAAErC,EAASZ,MAAMmC,eAAO,IAAAc,OAAA,EAAtBA,EAAwBU,MACtCC,mBAA6C,QAA3BV,EAAEtC,EAASZ,MAAMsC,kBAAU,IAAAY,OAAA,EAAzBA,EAA2BW,UAC/CC,gBAA0C,QAA3BX,EAAEvC,EAASZ,MAAMsC,kBAAU,IAAAa,GAAO,QAAPC,EAAzBD,EAA2BY,aAAK,IAAAX,OAAP,EAAzBA,EAAkCO,OACjD,KACJO,gBAAiBC,EAAAA,EAAcC,SAC/BC,aAAclC,IAAYG,IAAeP,GAAQC,IAG7CG,GAAYG,IAAeP,IAAQC,EA6JvClB,QAAQuC,IAAI,oFAA2E,CACrFG,aAAcrB,EACdsB,gBAAiBnB,EACjBgC,eAAgBvC,EAChBwC,eAAgBvC,EAChBwC,OAASrC,GAAYG,EAAoC,0BAAvB,uBAEpCK,GAAW,OApKkC,CAC7C7B,QAAQuC,IAAI,sDAAuD,CACjEtB,OACAC,OACAC,SACAuB,aAAcrB,EACdsB,gBAAiBnB,EACjB0B,mBAAoBpD,EAASZ,MAC7BkE,gBAAiBC,EAAAA,EAAcC,WAGjC,IAKE,GAJAzB,GAAW,GACXE,EAAS,OAGJsB,EAAAA,EAAcC,SAAU,CAC3BtD,QAAQuC,IAAI,uEAIZ,IAFmBoB,EAAAA,EAAqBC,0BAA0B3C,EAAMC,GAStE,OANAlB,QAAQuC,IAAI,6EACZtD,EAAS,IAAK,CACZC,MAAO,CACL2E,eAAgB,mDAAmD5C,KAAQC,qCAMjFlB,QAAQuC,IAAI,0EACZ,MAAMuB,EAAc,CAClBjB,MAAO5B,EACP8C,KAAM9C,EAAK+C,OAAO,GAAGC,cAAgBhD,EAAKV,MAAM,GAChD2D,WAAY,sBAAsBjD,QAClCkD,KAAM,OACNC,QAAQ,GAGJC,EAAiB,CACrBN,KAAM7C,EACN6B,UAAW,GAAG9B,KAAQC,IACtB+B,MAAO,CAAEJ,MAAO5B,GAChBqD,eAAgBnD,GAAU,OAC1BoD,SAAU,sBAAsBtD,KAAQC,IACxCkD,QAAQ,GAaV,OAVApE,QAAQuC,IAAI,oDAA2C,CACrDlB,QAASyC,EACTtC,WAAY6C,EACZ3C,eAAgBP,GAAU,SAG5BG,EAAWwC,GACXrC,EAAc4C,GACd1C,EAAkBR,GAAU,aAC5BU,GAAW,EAEb,CAEA7B,QAAQuC,IAAI,8EAGZ,IAAIiC,EAAc,KAClB,IACExE,QAAQuC,IAAI,4DAAkDtB,KAE9DuD,QAD2BnB,EAAAA,EAAcoB,QAAQxD,GAEjDjB,QAAQuC,IAAI,gDAA4C,CACtDM,MAAO2B,EAAY3B,MACnBkB,KAAMS,EAAYT,KAClBI,KAAMK,EAAYL,MAEtB,CAAE,MAAOO,GAOP,OANA1E,QAAQ8B,MAAM,+CAA2C4C,QACzDzF,EAAS,IAAK,CACZC,MAAO,CACL2E,eAAgB,6CAA6C5C,oCAInE,CAGA,IAAI0D,EAAW,KACf,IACE3E,QAAQuC,IAAI,iDAAiDtB,KAAQC,KAErEyD,QAD2BtB,EAAAA,EAAcuB,cAAc3D,EAAMC,GAE7DlB,QAAQuC,IAAI,yDAA0D,CACpEwB,KAAMY,EAASZ,KACfhB,UAAW4B,EAAS5B,UACpBE,MAAO0B,EAAS1B,MAChBqB,eAAgBK,EAASL,gBAE7B,CAAE,MAAOI,GAOP,OANA1E,QAAQ8B,MAAM,8CAA+C4C,QAC7DzF,EAAS,IAAK,CACZC,MAAO,CACL2E,eAAgB,mDAAmD5C,KAAQC,oCAIjF,CAKA,UAFyByC,EAAAA,EAAqBkB,sBAAsB5D,EAAMC,EAAMC,GAAUwD,EAASL,gBASjG,OANAtE,QAAQuC,IAAI,cAActB,KAAQC,wCAClCjC,EAAS,IAAK,CACZC,MAAO,CACL2E,eAAgB,mDAAmD5C,KAAQC,qCAOjF,GAAIC,EACF,UACQkC,EAAAA,EAAcyB,UAAU7D,EAAMC,EAAMC,GAC1CQ,EAAkBR,EACpB,CAAE,MAAOuD,GACP1E,QAAQC,KAAK,WAAWkB,gDACxBQ,EAAkBgD,EAASL,eAC7B,MAEA3C,EAAkBgD,EAASL,gBAG7BtE,QAAQuC,IAAI,wCAAyC,CACnDlB,QAAS,CACPwB,MAAO2B,EAAY3B,MACnBkB,KAAMS,EAAYT,KAClBI,KAAMK,EAAYL,MAEpB3C,WAAY,CACVuC,KAAMY,EAASZ,KACfhB,UAAW4B,EAAS5B,UACpBE,MAAO0B,EAAS1B,MAChBqB,eAAgBK,EAASL,gBAE3B5C,eAAgBP,GAAUwD,EAASL,iBAGrChD,EAAWkD,GACX/C,EAAckD,GACd9C,GAAW,EACb,CAAE,MAAO6C,GACP1E,QAAQ8B,MAAM,uCAAwC4C,GACtD3C,EAAS,+DACTF,GAAW,EACb,CACF,GAYFkD,IACC,CAAC9D,EAAMC,EAAMC,EAAQE,EAASG,EAAYvC,EAAUa,EAASZ,QAEzD,CACLmC,UACAG,aACAE,iBACAE,UACAE,QACAb,OACAC,OACAC,OAAQA,GAAUO,EAClBzC,a,gDC9NJ,MAyNA,EAzNoB+F,IAAoD,IAAnD,KAAEC,EAAI,WAAEzD,EAAU,eAAEE,EAAc,QAAEL,GAAS2D,EAChE,MAAME,GAAeC,EAAAA,EAAAA,QAAO,MACtBC,GAAYD,EAAAA,EAAAA,QAAO,OAClBvD,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,MAuLnC,OArLAS,EAAAA,EAAAA,WAAU,KA4KJiD,GAAQzD,GAAc0D,EAAaG,QA3KnBpD,WAClB,GAAKgD,GAASzD,GAAe0D,EAAaG,QAE1C,IAAK,IAADnD,EAAAoD,EAAAC,EACF1D,GAAW,GACXE,EAAS,MAGLmD,EAAaG,UACfH,EAAaG,QAAQG,UAAY,IAGnC,MAAMvC,GAAwB,QAAhBf,EAAAV,EAAWyB,aAAK,IAAAf,OAAA,EAAhBA,EAAkBW,QAASrB,EAAWuB,UAAU0C,MAAM,KAAK,GACnEC,EAAWlE,EAAWuC,KACtB4B,EAAMjE,GAAkB,OAG9B,IAAIkE,EAEJ,IAJwB,QAATN,EAAAL,EAAKjG,YAAI,IAAAsG,OAAA,EAATA,EAAWhG,SAAS,YAAoB,QAAZiG,EAAIN,EAAKY,WAAG,IAAAN,OAAA,EAARA,EAAUjF,WAAW,UAIxD,CAEV,MAAMwF,EAAcb,EAAKlB,KAAKgC,QAAQ,QAAS,IAAIA,QAAQ,QAAS,KACpEH,EAAU,gcAMUX,EAAKlB,KAAKgC,QAAQ,gBAAiB,4LAI9BD,qgBAW2Bb,EAAKlB,KAAKgC,QAAQ,gBAAiB,0mCA2BzF,MAEE,IACEH,QAAgBvC,EAAAA,EAAc2C,eAAe/C,EAAOyC,EAAUT,EAAKjG,KAAM2G,EAC3E,CAAE,MAAOM,GACPjG,QAAQC,KAAK,oCAAqCgG,GAElD,MAAMH,EAAcb,EAAKlB,KAAKgC,QAAQ,QAAS,IAAIA,QAAQ,QAAS,KACpEH,EAAU,gcAMQX,EAAKlB,KAAKgC,QAAQ,gBAAiB,4LAI9BD,qgBAW2Bb,EAAKlB,KAAKgC,QAAQ,gBAAiB,0mCA2BvF,CAIF,MAAMG,EAAS,IAAIC,EAAAA,EACnBf,EAAUC,QAAUa,EAEpB,UAEQA,EAAOE,SAASlB,EAAaG,eAG7Ba,EAAOG,UAAUT,GAGRM,EAAOI,IAAI,UACnBC,KAAK,gBAEZ1E,GAAW,EACb,CAAE,MAAO2E,GACPxG,QAAQ8B,MAAM,6BAA8B0E,GAC5CzE,EAAS,0BACTF,GAAW,EACb,CAEF,CAAE,MAAO4E,GACPzG,QAAQ8B,MAAM,iCAAkC2E,GAChD1E,EAAS,0BACTF,GAAW,EACb,GAiBA6E,GAEA7E,GAAW,GAfG8E,KACd,GAAIvB,EAAUC,QAAS,CACrB,IACED,EAAUC,QAAQuB,SACpB,CAAE,MAAOC,GACP7G,QAAQC,KAAK,iCAAkC4G,EACjD,CACAzB,EAAUC,QAAU,IACtB,IAWD,CAACJ,EAAMzD,EAAYE,EAAgBL,IAElCO,GAEAkF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACfD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4BAMVlF,GAEAgF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,UAAGlF,UAOfgF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAoBpB,IAAKT,OC0K9C,EAxXiCgC,KAAO,IAADhF,EACrC,MAAMpC,GAAWiB,EAAAA,EAAAA,MACX9B,GAAW+B,EAAAA,EAAAA,OAGX,QACJK,EAAO,WACPG,EAAU,eACVE,EACAE,QAASuF,EACTrF,MAAOsF,GACLzG,IAGJX,QAAQuC,IAAI,6DAAoD,CAC9DG,aAAcrB,EACdsB,gBAAiBnB,EACjBoB,aAAqB,OAAPvB,QAAO,IAAPA,OAAO,EAAPA,EAASwB,MACvBwE,eAA0B,OAAV7F,QAAU,IAAVA,OAAU,EAAVA,EAAYuC,KAC5BjB,mBAA8B,OAAVtB,QAAU,IAAVA,OAAU,EAAVA,EAAYuB,UAChCC,gBAA2B,OAAVxB,QAAU,IAAVA,GAAiB,QAAPU,EAAVV,EAAYyB,aAAK,IAAAf,OAAP,EAAVA,EAAmBW,MACpCnB,iBACAyF,aACAC,aAIF,MAAM,UAAEE,GAAcxH,EAASZ,OAAS,CAAC,GAElCqI,EAAWC,IAAgBjG,EAAAA,EAAAA,UAAS,KACpCK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,OAC5BkG,EAAgBC,IAAqBnG,EAAAA,EAAAA,WAAS,IAGrDS,EAAAA,EAAAA,WAAU,KACiBC,WACvB,GAAIT,GAAcH,EAChB,IAAK,IAADsG,EAEF,MAAMC,EAAcvG,EAAQwG,QAA+B,QAA1BF,EAAInG,EAAWsG,mBAAW,IAAAH,OAAA,EAAtBA,EAAwBI,MAC7DL,EAAkBE,IAAe,EACnC,CAAE,MAAO9F,GACP9B,QAAQC,KAAK,qCAAsC6B,GACnD4F,GAAkB,EACpB,GAIJM,IACC,CAACxG,EAAYH,KAGhBW,EAAAA,EAAAA,WAAU,KACcC,WACpB,GAAKT,EAKL,IAAK,IAADyG,EAAAC,EAAAC,EAAAC,EACFvG,GAAW,GACXE,EAAS,MAGT/B,QAAQuC,IAAI,sEAA6D,CACvEwB,KAAMvC,EAAWuC,KACjBhB,UAAWvB,EAAWuB,UACtBE,MAAOzB,EAAWyB,MAClBoF,WAA4B,QAAlBJ,EAAEzG,EAAWyB,aAAK,IAAAgF,OAAA,EAAhBA,EAAkBpF,MAC9BuB,OAAQ5C,EAAW4C,OACnBG,SAAU/C,EAAW+C,SACrBD,eAAgB9C,EAAW8C,iBAE7BtE,QAAQuC,IAAI,mEAA0D,CACpEM,MAAc,OAAPxB,QAAO,IAAPA,OAAO,EAAPA,EAASwB,MAChBkB,KAAa,OAAP1C,QAAO,IAAPA,OAAO,EAAPA,EAAS0C,KACfK,OAAe,OAAP/C,QAAO,IAAPA,OAAO,EAAPA,EAAS+C,OACjBD,KAAa,OAAP9C,QAAO,IAAPA,OAAO,EAAPA,EAAS8C,OAGjB,MAAMlB,GAAwB,QAAhBiF,EAAA1G,EAAWyB,aAAK,IAAAiF,OAAA,EAAhBA,EAAkBrF,QAASrB,EAAWuB,UAAU0C,MAAM,KAAK,GACnEC,EAAWlE,EAAWuC,KACtB4B,EAAMjE,GAAkB,OAE9B1B,QAAQuC,IAAI,kEAAyD,CACnE+F,qBAAsC,QAAlBH,EAAE3G,EAAWyB,aAAK,IAAAkF,OAAA,EAAhBA,EAAkBtF,MACxC0F,mBAAoB/G,EAAWuB,UAC/ByF,cAAevF,EACfwF,iBAAkB/C,EAClBgD,aAAc/C,EACdgD,kBAAmC,QAAhBP,EAAA5G,EAAWyB,aAAK,IAAAmF,GAAhBA,EAAkBvF,MAAQ,cAAgB,oBAG/D7C,QAAQuC,IAAI,yEAA+DU,KAASyC,cAAqBC,MACzG3F,QAAQuC,IAAI,6DAA8D,CACxEqG,aAAc3F,EACdoE,eAAgB3B,EAChBC,IAAKA,EACLkD,mBAAoB,CAClB9E,KAAMvC,EAAWuC,KACjBhB,UAAWvB,EAAWuB,UACtBE,MAAOzB,EAAWyB,MAClBqB,eAAgB9C,EAAW8C,kBAI/B,MAAMiD,QAAkBlE,EAAAA,EAAcyF,aAAa7F,EAAOyC,EAAUC,GAGpE,GAAyB,IAArB4B,EAAUnI,QAAuB,OAAPiC,QAAO,IAAPA,GAAAA,EAAS+C,OAAQ,CAC7CpE,QAAQuC,IAAI,mEAyBZiF,EAxBkB,CAChB,CACEzD,KAAM,4BACN/E,KAAM,oDACN6G,IAAK,aACLkD,KAAM,KACNC,aAAc,IACdzE,SAAU,KAEZ,CACER,KAAM,4BACN/E,KAAM,oDACN6G,IAAK,aACLkD,KAAM,KACNC,aAAc,KAEhB,CACEjF,KAAM,8BACN/E,KAAM,sDACN6G,IAAK,aACLkD,KAAM,KACNC,aAAc,MAIpB,MACExB,EAAaD,GAGf1F,GAAW,EACb,CAAE,MAAOoH,GAAW,IAADC,EAIjB,GAHAlJ,QAAQ8B,MAAM,8CAA+CmH,GAGlD,OAAP5H,QAAO,IAAPA,GAAAA,EAAS+C,QAA0B,QAApB8E,EAAID,EAASE,eAAO,IAAAD,GAAhBA,EAAkB5J,SAAS,mBAAoB,CACpEU,QAAQuC,IAAI,sCA2BZ,OAFAiF,EAxBkB,CAChB,CACEzD,KAAM,4BACN/E,KAAM,oDACN6G,IAAK,aACLkD,KAAM,KACNC,aAAc,IACdzE,SAAU,KAEZ,CACER,KAAM,4BACN/E,KAAM,oDACN6G,IAAK,aACLkD,KAAM,KACNC,aAAc,KAEhB,CACEjF,KAAM,8BACN/E,KAAM,sDACN6G,IAAK,aACLkD,KAAM,KACNC,aAAc,YAIlBnH,GAAW,EAEb,CAGwB,MAApBoH,EAASG,QAAsC,MAApBH,EAASG,OACtCrH,EAAS,gIACoB,MAApBkH,EAASG,OAClBrH,EAAS,gFAETA,EAAS,8CAA8CkH,EAASE,WAGlE3B,EAAa,IACb3F,GAAW,EACb,MApIE5C,EAAS,MAuIboK,IACC,CAAChI,EAASG,EAAYvC,EAAUyC,IA6DnC,OAAIyF,GAEAL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CC,UACvDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,8CAMPI,GAEAN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCC,UACrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4BACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAII,KACJH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,UAAQwC,QAASA,IAAMrK,EAAS,KAAM8H,UAAU,qBAAoBC,SAAC,oBAGrEF,EAAAA,EAAAA,KAAA,UAAQwC,QAASA,IAAMzJ,OAAOC,SAASyJ,SAAUxC,UAAU,uBAAsBC,SAAC,kBASvF3F,GAAYG,GAMfsF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAU,CAACC,SAAS,6BAA4BzC,UAC/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,UAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAEhCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4BACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,yGAEqBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8BAAgC,QAAIF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4BAA8B,yCAIvGpF,GACCqF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aACfD,EAAAA,EAAAA,KAAA,KAAAE,SAAG,yCAEHlF,GACFgF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAGlF,OAEe,IAArByF,EAAUnI,QACZ6H,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SAAC,kBAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,2GAGLF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SACxBO,EAAUmC,IAAKzE,IACdgC,EAAAA,EAAAA,MAAA,OAAoBF,UAAU,YAAWC,SAAA,EACvCF,EAAAA,EAAAA,KAAC6C,EAAW,CACV1E,KAAMA,EACNzD,WAAYA,EACZE,eAAgBA,EAChBL,QAASA,KAGX4F,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SAAC,kBAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAE/B,EAAKlB,QAChCkD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAE/B,EAAKjG,QAClCiI,EAAAA,EAAAA,MAAA,QAAMF,UAAU,YAAWC,SAAA,EAAG/B,EAAK8D,KAAO,MAAMa,QAAQ,GAAG,mBAKjE3C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,UACEC,UAAU,sBACVuC,QAAUvK,GA5HX8K,EAAC9K,EAAOkG,KAAU,IAAD6E,EAClC,MAGM9K,EAAO,iBAHiB,QAAhB8K,EAAAtI,EAAWyB,aAAK,IAAA6G,OAAA,EAAhBA,EAAkBjH,QAASrB,EAAWuB,UAAU0C,MAAM,KAAK,MACxDjE,EAAWuC,QACbrC,GAAkB,UAC2BuD,EAAKjG,OAE3D+K,EAAkB,CACtB1I,UACAG,aACA8F,YACA0C,aAAc/E,EACdvD,iBACAuI,KAAM,SAGRnL,EAAAA,EAAAA,IAAsBC,EAAOC,EAAMC,EAAU8K,IA6GPF,CAAW9K,EAAOkG,GACtCiF,MAAM,gCAA+BlD,SACtC,6BAIDF,EAAAA,EAAAA,KAAA,UACEC,UAAW,wBAAwBU,EAA8B,GAAb,YACpD6B,QAAUvK,GA5JXoL,EAACpL,EAAOkG,KAAU,IAADmF,EAClC,IAAK3C,EAGH,YADA4C,MAAM,8FAIR,MAGMrL,EAAO,iBAHiB,QAAhBoL,EAAA5I,EAAWyB,aAAK,IAAAmH,OAAA,EAAhBA,EAAkBvH,QAASrB,EAAWuB,UAAU0C,MAAM,KAAK,MACxDjE,EAAWuC,QACbrC,GAAkB,UAC2BuD,EAAKjG,OAE3D+K,EAAkB,CACtB1I,UACAG,aACA8F,YACA0C,aAAc/E,EACdvD,iBACAuI,KAAM,SAGRnL,EAAAA,EAAAA,IAAsBC,EAAOC,EAAMC,EAAU8K,IAuIPI,CAAWpL,EAAOkG,GACtCiF,MAAOzC,EAAiB,oBAAsB,uBAC9C6C,UAAW7C,EAAeT,SAC3B,uBAIDF,EAAAA,EAAAA,KAAA,UACEC,UAAU,wBACVuC,QAAUvK,GA3HLwL,EAACxL,EAAOkG,KAAU,IAADuF,EACxC,MAGMxL,EAAO,iBAHiB,QAAhBwL,EAAAhJ,EAAWyB,aAAK,IAAAuH,OAAA,EAAhBA,EAAkB3H,QAASrB,EAAWuB,UAAU0C,MAAM,KAAK,MACxDjE,EAAWuC,QACbrC,GAAkB,UAC2BuD,EAAKjG,OAE3D+K,EAAkB,CACtB1I,UACAG,aACA8F,YACA0C,aAAc/E,EACdvD,mBAGF5C,EAAAA,EAAAA,IAAsBC,EAAOC,EAAMC,EAAU8K,IA6GPQ,CAAiBxL,EAAOkG,GAC5CiF,MAAM,uBAAsBlD,SAC7B,6BAzCK/B,EAAKY,kBApC3B5G,EAAS,MACF6H,EAAAA,EAAAA,KAAA,OAAAE,SAAK,oB","sources":["utils/navigationUtils.js","hooks/useDAKUrlParams.js","components/BPMNPreview.js","components/BusinessProcessSelection.js"],"sourcesContent":["/**\n * Utility functions for handling navigation with command-click support\n */\n\nimport { validateUrlScheme } from './securityUtils';\n\n/**\n * Detects if a click event should open in a new tab\n * @param {MouseEvent} event - The click event\n * @returns {boolean} - True if should open in new tab (Ctrl/Cmd+click)\n */\nexport const shouldOpenInNewTab = (event) => {\n  return !!(event?.ctrlKey || event?.metaKey); // Ctrl on Windows/Linux, Cmd on Mac\n};\n\n/**\n * Constructs a full URL from a relative path using the current base URL\n * @param {string} relativePath - The relative path (e.g., '/dashboard/user/repo')\n * @returns {string} - The full URL\n */\nexport const constructFullUrl = (relativePath) => {\n  // Validate the relative path to prevent XSS\n  if (!relativePath || typeof relativePath !== 'string') {\n    return window.location.origin;\n  }\n  \n  // Basic validation - don't allow dangerous protocols\n  if (relativePath.includes('javascript:') || relativePath.includes('data:')) { // eslint-disable-line no-script-url\n    console.warn('Blocked dangerous URL scheme in path:', relativePath);\n    return window.location.origin;\n  }\n  \n  const basePath = process.env.PUBLIC_URL || '';\n  const baseUrl = window.location.origin;\n  \n  // Remove leading slash from relativePath if present to avoid double slashes\n  const cleanPath = relativePath.startsWith('/') ? relativePath.slice(1) : relativePath;\n  \n  // Only add basePath if it's not empty\n  if (!basePath) {\n    return `${baseUrl}/${cleanPath}`;\n  }\n  \n  // Ensure basePath ends with slash for proper joining\n  const cleanBasePath = basePath.endsWith('/') ? basePath : basePath + '/';\n  \n  return `${baseUrl}${cleanBasePath}${cleanPath}`;\n};\n\n/**\n * Handles navigation with command-click support\n * @param {MouseEvent} event - The click event\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n */\nexport const handleNavigationClick = (event, path, navigate, state = null) => {\n  // Validate the path to prevent malicious navigation\n  if (!path || typeof path !== 'string') {\n    console.warn('Invalid navigation path provided');\n    return;\n  }\n  \n  // For external URLs, validate the scheme\n  if (path.includes('://')) {\n    if (!validateUrlScheme(path)) {\n      console.warn('Blocked navigation to potentially dangerous URL:', path);\n      return;\n    }\n  }\n  \n  if (shouldOpenInNewTab(event)) {\n    // Open in new tab\n    const fullUrl = constructFullUrl(path);\n    window.open(fullUrl, '_blank', 'noopener,noreferrer');\n  } else {\n    // Navigate in same tab\n    if (state) {\n      navigate(path, { state });\n    } else {\n      navigate(path);\n    }\n  }\n};\n\n/**\n * Creates a click handler that supports command-click for new tabs\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n * @returns {Function} - Click handler function\n */\nexport const createNavigationClickHandler = (path, navigate, state = null) => {\n  return (event) => {\n    handleNavigationClick(event, path, navigate, state);\n  };\n};","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport dakValidationService from '../services/dakValidationService';\n\n/**\n * Custom hook to handle DAK URL parameters (user, repo, branch) for DAK component pages.\n * This extracts and validates DAK parameters from the URL, similar to how DAKDashboard works.\n * \n * @returns {Object} Contains loading state, error, profile, repository, selectedBranch, and navigate function\n */\nconst useDAKUrlParams = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { user, repo, branch } = useParams();\n  \n  // Try to get data from location.state first, then from URL params\n  const [profile, setProfile] = useState(location.state?.profile || null);\n  const [repository, setRepository] = useState(location.state?.repository || null);\n  const [selectedBranch, setSelectedBranch] = useState(location.state?.selectedBranch || branch || null);\n  const [loading, setLoading] = useState(!profile || !repository);\n  const [error, setError] = useState(null);\n\n  // Fetch data from URL parameters if not available in location.state\n  useEffect(() => {\n    const fetchDataFromUrlParams = async () => {\n      console.log('🔍 useDAKUrlParams: Starting data fetch analysis:', {\n        urlParams: { user, repo, branch },\n        currentState: {\n          hasProfile: !!profile,\n          hasRepository: !!repository,\n          profileLogin: profile?.login,\n          repositoryFullName: repository?.full_name,\n          repositoryOwner: repository?.owner?.login\n        },\n        hasLocationState: !!location.state,\n        locationStateSummary: location.state ? {\n          hasProfile: !!location.state.profile,\n          hasRepository: !!location.state.repository,\n          profileLogin: location.state.profile?.login,\n          repositoryFullName: location.state.repository?.full_name,\n          repositoryOwner: location.state.repository?.owner?.login\n        } : null,\n        isAuthenticated: githubService.isAuth(),\n        needsFetch: (!profile || !repository) && user && repo\n      });\n\n      if ((!profile || !repository) && user && repo) {\n        console.log('useDAKUrlParams: Fetching data from URL parameters:', {\n          user, \n          repo, \n          branch,\n          hasProfile: !!profile,\n          hasRepository: !!repository,\n          hasLocationState: !!location.state,\n          isAuthenticated: githubService.isAuth()\n        });\n        \n        try {\n          setLoading(true);\n          setError(null);\n\n          // Check if githubService is authenticated (allow demo mode to proceed without auth)\n          if (!githubService.isAuth()) {\n            console.log('🚫 useDAKUrlParams: Not authenticated, entering demo mode');\n            // In demo mode, use the DAK validation service for demo repositories\n            const isValidDAK = dakValidationService.validateDemoDAKRepository(user, repo);\n            \n            if (!isValidDAK) {\n              console.log('❌ useDAKUrlParams: Demo DAK validation failed, redirecting home');\n              navigate('/', { \n                state: { \n                  warningMessage: `Could not access the requested DAK. Repository '${user}/${repo}' not found or not accessible.` \n                } \n              });\n              return;\n            }\n\n            console.log('✅ useDAKUrlParams: Demo DAK validation passed, creating demo data');\n            const demoProfile = {\n              login: user,\n              name: user.charAt(0).toUpperCase() + user.slice(1),\n              avatar_url: `https://github.com/${user}.png`,\n              type: 'User',\n              isDemo: true\n            };\n\n            const demoRepository = {\n              name: repo,\n              full_name: `${user}/${repo}`,\n              owner: { login: user },\n              default_branch: branch || 'main',\n              html_url: `https://github.com/${user}/${repo}`,\n              isDemo: true\n            };\n\n            console.log('📋 useDAKUrlParams: Setting demo state:', {\n              profile: demoProfile,\n              repository: demoRepository,\n              selectedBranch: branch || 'main'\n            });\n\n            setProfile(demoProfile);\n            setRepository(demoRepository);\n            setSelectedBranch(branch || 'main');\n            setLoading(false);\n            return;\n          }\n\n          console.log('🔐 useDAKUrlParams: Authenticated, fetching real repository data');\n\n          // Fetch user profile\n          let userProfile = null;\n          try {\n            console.log(`🔍 useDAKUrlParams: Fetching user profile for: ${user}`);\n            const userResponse = await githubService.getUser(user);\n            userProfile = userResponse;\n            console.log('✅ useDAKUrlParams: User profile fetched:', {\n              login: userProfile.login,\n              name: userProfile.name,\n              type: userProfile.type\n            });\n          } catch (err) {\n            console.error('❌ useDAKUrlParams: Error fetching user:', err);\n            navigate('/', { \n              state: { \n                warningMessage: `Could not access the requested DAK. User '${user}' not found or not accessible.` \n              } \n            });\n            return;\n          }\n\n          // Fetch repository\n          let repoData = null;\n          try {\n            console.log(`useDAKUrlParams: Fetching repository data for ${user}/${repo}`);\n            const repoResponse = await githubService.getRepository(user, repo);\n            repoData = repoResponse;\n            console.log('useDAKUrlParams: Repository data fetched successfully:', {\n              name: repoData.name,\n              full_name: repoData.full_name,\n              owner: repoData.owner,\n              default_branch: repoData.default_branch\n            });\n          } catch (err) {\n            console.error('useDAKUrlParams: Error fetching repository:', err);\n            navigate('/', { \n              state: { \n                warningMessage: `Could not access the requested DAK. Repository '${user}/${repo}' not found or not accessible.` \n              } \n            });\n            return;\n          }\n\n          // Validate that this is actually a DAK repository\n          const isValidDAK = await dakValidationService.validateDAKRepository(user, repo, branch || repoData.default_branch);\n          \n          if (!isValidDAK) {\n            console.log(`Repository ${user}/${repo} is not a valid DAK repository`);\n            navigate('/', { \n              state: { \n                warningMessage: `Could not access the requested DAK. Repository '${user}/${repo}' not found or not accessible.` \n              } \n            });\n            return;\n          }\n\n          // Validate branch if specified\n          if (branch) {\n            try {\n              await githubService.getBranch(user, repo, branch);\n              setSelectedBranch(branch);\n            } catch (err) {\n              console.warn(`Branch '${branch}' not found, falling back to default branch`);\n              setSelectedBranch(repoData.default_branch);\n            }\n          } else {\n            setSelectedBranch(repoData.default_branch);\n          }\n\n          console.log('useDAKUrlParams: Setting final state:', {\n            profile: {\n              login: userProfile.login,\n              name: userProfile.name,\n              type: userProfile.type\n            },\n            repository: {\n              name: repoData.name,\n              full_name: repoData.full_name,\n              owner: repoData.owner,\n              default_branch: repoData.default_branch\n            },\n            selectedBranch: branch || repoData.default_branch\n          });\n\n          setProfile(userProfile);\n          setRepository(repoData);\n          setLoading(false);\n        } catch (err) {\n          console.error('Error fetching data from URL params:', err);\n          setError('Failed to load DAK data. Please check the URL or try again.');\n          setLoading(false);\n        }\n      } else {\n        console.log('📋 useDAKUrlParams: Not fetching from URL params, using existing state:', {\n          hasProfile: !!profile,\n          hasRepository: !!repository,\n          hasUserParam: !!user,\n          hasRepoParam: !!repo,\n          reason: !profile || !repository ? 'missing URL params' : 'state already populated'\n        });\n        setLoading(false);\n      }\n    };\n\n    fetchDataFromUrlParams();\n  }, [user, repo, branch, profile, repository, navigate, location.state]);\n\n  return {\n    profile,\n    repository,\n    selectedBranch,\n    loading,\n    error,\n    user,\n    repo,\n    branch: branch || selectedBranch,\n    navigate\n  };\n};\n\nexport default useDAKUrlParams;","import React, { useState, useEffect, useRef } from 'react';\nimport BpmnViewer from 'bpmn-js/lib/NavigatedViewer';\nimport githubService from '../services/githubService';\nimport './BPMNPreview.css';\n\nconst BPMNPreview = ({ file, repository, selectedBranch, profile }) => {\n  const containerRef = useRef(null);\n  const viewerRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadPreview = async () => {\n      if (!file || !repository || !containerRef.current) return;\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Clean container\n        if (containerRef.current) {\n          containerRef.current.innerHTML = '';\n        }\n\n        const owner = repository.owner?.login || repository.full_name.split('/')[0];\n        const repoName = repository.name;\n        const ref = selectedBranch || 'main';\n        const isDemo = file.path?.includes('demo/') || file.sha?.startsWith('demo-');\n\n        let bpmnXml;\n\n        if (isDemo) {\n          // For demo files, create a representative BPMN diagram\n          const processName = file.name.replace('.bpmn', '').replace(/[-_]/g, ' ');\n          bpmnXml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" \n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" \n                  id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\" isExecutable=\"false\">\n    <bpmn:startEvent id=\"StartEvent_1\" name=\"Start\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${processName}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\" name=\"End\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\">\n      <bpmndi:BPMNShape id=\"StartEvent_1_di\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"152\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"158\" y=\"125\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Task_1_di\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"250\" y=\"60\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"EndEvent_1_di\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"402\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"410\" y=\"125\" width=\"20\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"188\" y=\"100\" />\n        <di:waypoint x=\"250\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"350\" y=\"100\" />\n        <di:waypoint x=\"402\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;\n        } else {\n          // For real files, try to load the actual BPMN content\n          try {\n            bpmnXml = await githubService.getFileContent(owner, repoName, file.path, ref);\n          } catch (fileError) {\n            console.warn('Could not load BPMN file content:', fileError);\n            // Fallback to a generic BPMN diagram if file can't be loaded\n            const processName = file.name.replace('.bpmn', '').replace(/[-_]/g, ' ');\n            bpmnXml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" \n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" \n                  id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\" isExecutable=\"false\">\n    <bpmn:startEvent id=\"StartEvent_1\" name=\"Start\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${processName}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\" name=\"End\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\">\n      <bpmndi:BPMNShape id=\"StartEvent_1_di\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"152\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"158\" y=\"125\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Task_1_di\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"250\" y=\"60\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"EndEvent_1_di\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"402\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"410\" y=\"125\" width=\"20\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"188\" y=\"100\" />\n        <di:waypoint x=\"250\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"350\" y=\"100\" />\n        <di:waypoint x=\"402\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;\n          }\n        }\n\n        // Create and initialize viewer with clean separation\n        const viewer = new BpmnViewer();\n        viewerRef.current = viewer;\n\n        try {\n          // Attach viewer to container first\n          await viewer.attachTo(containerRef.current);\n          \n          // Then import XML\n          await viewer.importXML(bpmnXml);\n          \n          // Fit to viewport for preview\n          const canvas = viewer.get('canvas');\n          canvas.zoom('fit-viewport');\n\n          setLoading(false);\n        } catch (importError) {\n          console.error('Failed to import BPMN XML:', importError);\n          setError('Failed to load preview');\n          setLoading(false);\n        }\n\n      } catch (renderError) {\n        console.error('Failed to render BPMN preview:', renderError);\n        setError('Failed to load preview');\n        setLoading(false);\n      }\n    };\n\n    // Cleanup function\n    const cleanup = () => {\n      if (viewerRef.current) {\n        try {\n          viewerRef.current.destroy();\n        } catch (cleanupError) {\n          console.warn('Error cleaning up BPMN viewer:', cleanupError);\n        }\n        viewerRef.current = null;\n      }\n    };\n\n    // Only run if we have all required props\n    if (file && repository && containerRef.current) {\n      loadPreview();\n    } else {\n      setLoading(false);\n    }\n\n    return cleanup;\n  }, [file, repository, selectedBranch, profile]);\n\n  if (loading) {\n    return (\n      <div className=\"bpmn-preview\">\n        <div className=\"preview-loading\">\n          <div className=\"preview-spinner\"></div>\n          <span>Loading preview...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bpmn-preview\">\n        <div className=\"preview-error\">\n          <span>❌ {error}</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bpmn-preview\">\n      <div className=\"preview-container\" ref={containerRef}>\n        {/* BPMN viewer will be rendered here */}\n      </div>\n    </div>\n  );\n};\n\nexport default BPMNPreview;","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport useDAKUrlParams from '../hooks/useDAKUrlParams';\nimport { PageLayout } from './framework';\nimport { handleNavigationClick } from '../utils/navigationUtils';\nimport BPMNPreview from './BPMNPreview';\nimport './BusinessProcessSelection.css';\n\nconst BusinessProcessSelection = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  // Use the DAK URL params hook to get profile, repository, and branch\n  const { \n    profile, \n    repository, \n    selectedBranch, \n    loading: dakLoading, \n    error: dakError \n  } = useDAKUrlParams();\n\n  // Debug logging for repository data flow\n  console.log('🚀 BusinessProcessSelection: Hook data received:', {\n    hasProfile: !!profile,\n    hasRepository: !!repository,\n    profileLogin: profile?.login,\n    repositoryName: repository?.name,\n    repositoryFullName: repository?.full_name,\n    repositoryOwner: repository?.owner?.login,\n    selectedBranch,\n    dakLoading,\n    dakError\n  });\n  \n  // Get component from location.state if available (when navigating from dashboard)\n  const { component } = location.state || {};\n  \n  const [bpmnFiles, setBpmnFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hasWriteAccess, setHasWriteAccess] = useState(false);\n\n  // Check write permissions\n  useEffect(() => {\n    const checkPermissions = async () => {\n      if (repository && profile) {\n        try {\n          // Simple permission check - in real app, this would use githubService\n          const writeAccess = profile.token && repository.permissions?.push;\n          setHasWriteAccess(writeAccess || false);\n        } catch (error) {\n          console.warn('Could not check write permissions:', error);\n          setHasWriteAccess(false);\n        }\n      }\n    };\n\n    checkPermissions();\n  }, [repository, profile]);\n\n  // Load BPMN files from repository\n  useEffect(() => {\n    const loadBpmnFiles = async () => {\n      if (!repository) {\n        navigate('/');\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Debug logging to understand repository data flow\n        console.log('📂 BusinessProcessSelection - Repository object analysis:', {\n          name: repository.name,\n          full_name: repository.full_name,\n          owner: repository.owner,\n          ownerLogin: repository.owner?.login,\n          isDemo: repository.isDemo,\n          html_url: repository.html_url,\n          default_branch: repository.default_branch\n        });\n        console.log('👤 BusinessProcessSelection - Profile object analysis:', {\n          login: profile?.login,\n          name: profile?.name,\n          isDemo: profile?.isDemo,\n          type: profile?.type\n        });\n\n        const owner = repository.owner?.login || repository.full_name.split('/')[0];\n        const repoName = repository.name;\n        const ref = selectedBranch || 'main';\n\n        console.log(`📋 BusinessProcessSelection: Derived repository info:`, {\n          original_owner_login: repository.owner?.login,\n          original_full_name: repository.full_name,\n          derived_owner: owner,\n          derived_repoName: repoName,\n          selected_ref: ref,\n          derivation_method: repository.owner?.login ? 'owner.login' : 'full_name.split'\n        });\n\n        console.log(`🔍 BusinessProcessSelection: About to fetch BPMN files from ${owner}/${repoName} (branch: ${ref})`);\n        console.log('BusinessProcessSelection: Final repository access details:', {\n          derivedOwner: owner,\n          repositoryName: repoName,\n          ref: ref,\n          fullRepositoryData: {\n            name: repository.name,\n            full_name: repository.full_name,\n            owner: repository.owner,\n            default_branch: repository.default_branch\n          }\n        });\n        \n        const bpmnFiles = await githubService.getBpmnFiles(owner, repoName, ref);\n        \n        // If no files found and we're in demo mode, provide fallback files\n        if (bpmnFiles.length === 0 && profile?.isDemo) {\n          console.log('No BPMN files found in demo mode, providing fallback demo files');\n          const demoFiles = [\n            {\n              name: 'patient-registration.bpmn',\n              path: 'demo/business-processes/patient-registration.bpmn',\n              sha: 'demo-sha-1',\n              size: 2048,\n              download_url: '#',\n              html_url: '#'\n            },\n            {\n              name: 'vaccination-workflow.bpmn',\n              path: 'demo/business-processes/vaccination-workflow.bpmn',\n              sha: 'demo-sha-2',\n              size: 3072,\n              download_url: '#'\n            },\n            {\n              name: 'appointment-scheduling.bpmn',\n              path: 'demo/business-processes/appointment-scheduling.bpmn',\n              sha: 'demo-sha-3',\n              size: 1536,\n              download_url: '#'\n            }\n          ];\n          setBpmnFiles(demoFiles);\n        } else {\n          setBpmnFiles(bpmnFiles);\n        }\n        \n        setLoading(false);\n      } catch (apiError) {\n        console.error('Failed to fetch BPMN files from repository:', apiError);\n        \n        // For demo mode or when network access fails, provide fallback BPMN files\n        if (profile?.isDemo || apiError.message?.includes('Failed to fetch')) {\n          console.log('Providing fallback demo BPMN files');\n          const demoFiles = [\n            {\n              name: 'patient-registration.bpmn',\n              path: 'demo/business-processes/patient-registration.bpmn',\n              sha: 'demo-sha-1',\n              size: 2048,\n              download_url: '#',\n              html_url: '#'\n            },\n            {\n              name: 'vaccination-workflow.bpmn',\n              path: 'demo/business-processes/vaccination-workflow.bpmn',\n              sha: 'demo-sha-2',\n              size: 3072,\n              download_url: '#'\n            },\n            {\n              name: 'appointment-scheduling.bpmn',\n              path: 'demo/business-processes/appointment-scheduling.bpmn',\n              sha: 'demo-sha-3',\n              size: 1536,\n              download_url: '#'\n            }\n          ];\n          setBpmnFiles(demoFiles);\n          setLoading(false);\n          return;\n        }\n        \n        // Check if this is an authentication error for a private repository\n        if (apiError.status === 401 || apiError.status === 403) {\n          setError('Authentication required to access this repository. Please ensure you have a valid GitHub token with appropriate permissions.');\n        } else if (apiError.status === 404) {\n          setError('Repository or branch not found. Please check the repository name and branch.');\n        } else {\n          setError(`Failed to load BPMN files from repository: ${apiError.message}`);\n        }\n        \n        setBpmnFiles([]);\n        setLoading(false);\n      }\n    };\n\n    loadBpmnFiles();\n  }, [profile, repository, navigate, selectedBranch]);\n\n  const handleEdit = (event, file) => {\n    if (!hasWriteAccess) {\n      // Show permission help message\n      alert('You need write permissions to edit BPMN files. Please check your GitHub token permissions.');\n      return;\n    }\n\n    const owner = repository.owner?.login || repository.full_name.split('/')[0];\n    const repoName = repository.name;\n    const branch = selectedBranch || 'main';\n    const path = `/bpmn-editor/${owner}/${repoName}/${branch}/${file.path}`;\n\n    const navigationState = {\n      profile,\n      repository,\n      component,\n      selectedFile: file,\n      selectedBranch,\n      mode: 'edit'\n    };\n    \n    handleNavigationClick(event, path, navigate, navigationState);\n  };\n\n  const handleView = (event, file) => {\n    const owner = repository.owner?.login || repository.full_name.split('/')[0];\n    const repoName = repository.name;\n    const branch = selectedBranch || 'main';\n    const path = `/bpmn-viewer/${owner}/${repoName}/${branch}/${file.path}`;\n\n    const navigationState = {\n      profile,\n      repository,\n      component,\n      selectedFile: file,\n      selectedBranch,\n      mode: 'view'\n    };\n    \n    handleNavigationClick(event, path, navigate, navigationState);\n  };\n\n  const handleViewSource = (event, file) => {\n    const owner = repository.owner?.login || repository.full_name.split('/')[0];\n    const repoName = repository.name;\n    const branch = selectedBranch || 'main';\n    const path = `/bpmn-source/${owner}/${repoName}/${branch}/${file.path}`;\n\n    const navigationState = {\n      profile,\n      repository,\n      component,\n      selectedFile: file,\n      selectedBranch\n    };\n    \n    handleNavigationClick(event, path, navigate, navigationState);\n  };\n\n  if (dakLoading) {\n    return (\n      <div className=\"business-process-selection loading-state\">\n        <div className=\"loading-content\">\n          <h2>Loading DAK Data...</h2>\n          <p>Fetching repository and user data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (dakError) {\n    return (\n      <div className=\"business-process-selection error-state\">\n        <div className=\"error-content\">\n          <h2>Error Loading DAK Data</h2>\n          <p>{dakError}</p>\n          <div className=\"error-actions\">\n            <button onClick={() => navigate('/')} className=\"action-btn primary\">\n              Return to Home\n            </button>\n            <button onClick={() => window.location.reload()} className=\"action-btn secondary\">\n              Retry\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!profile || !repository) {\n    navigate('/');\n    return <div>Redirecting...</div>;\n  }\n\n  return (\n    <PageLayout pageName=\"business-process-selection\">\n      <div className=\"business-process-selection\">\n      <div className=\"selection-content\">\n\n        <div className=\"selection-main\">\n          <div className=\"selection-intro\">\n            <h2>Business Process Files</h2>\n            <p>\n              Select a BPMN business process file to view, edit, or examine the source code.\n              Files are loaded from <code>input/business-processes/</code> or <code>input/business-process/</code> directories and subdirectories.\n            </p>\n          </div>\n\n          {loading ? (\n            <div className=\"loading\">\n              <div className=\"spinner\"></div>\n              <p>Loading business process files...</p>\n            </div>\n          ) : error ? (\n            <div className=\"error\">\n              <p>❌ {error}</p>\n            </div>\n          ) : bpmnFiles.length === 0 ? (\n            <div className=\"empty-state\">\n              <div className=\"empty-icon\">📋</div>\n              <h3>No BPMN Files Found</h3>\n              <p>No .bpmn files were found in the input/business-processes/ or input/business-process/ directories.</p>\n            </div>\n          ) : (\n            <div className=\"files-grid\">\n              {bpmnFiles.map((file) => (\n                <div key={file.sha} className=\"file-card\">\n                  <BPMNPreview \n                    file={file} \n                    repository={repository} \n                    selectedBranch={selectedBranch}\n                    profile={profile}\n                  />\n                  \n                  <div className=\"file-header\">\n                    <div className=\"file-icon\">🔄</div>\n                    <div className=\"file-details\">\n                      <h3 className=\"file-name\">{file.name}</h3>\n                      <div className=\"file-info-compact\">\n                        <span className=\"file-path\">{file.path}</span>\n                        <span className=\"file-size\">{(file.size / 1024).toFixed(1)} KB</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"file-actions\">\n                    <button \n                      className=\"action-btn view-btn\"\n                      onClick={(event) => handleView(event, file)}\n                      title=\"View BPMN diagram (read-only)\"\n                    >\n                      👁️ View\n                    </button>\n\n                    <button \n                      className={`action-btn edit-btn ${!hasWriteAccess ? 'disabled' : ''}`}\n                      onClick={(event) => handleEdit(event, file)}\n                      title={hasWriteAccess ? \"Edit BPMN diagram\" : \"Edit access required\"}\n                      disabled={!hasWriteAccess}\n                    >\n                      ✏️ Edit\n                    </button>\n\n                    <button \n                      className=\"action-btn source-btn\"\n                      onClick={(event) => handleViewSource(event, file)}\n                      title=\"View XML source code\"\n                    >\n                      📄 Source\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default BusinessProcessSelection;"],"names":["handleNavigationClick","event","path","navigate","state","arguments","length","undefined","includes","validateUrlScheme","ctrlKey","metaKey","shouldOpenInNewTab","fullUrl","relativePath","window","location","origin","console","warn","basePath","process","baseUrl","cleanPath","startsWith","slice","endsWith","constructFullUrl","open","useDAKUrlParams","_location$state","_location$state2","_location$state3","useLocation","useNavigate","user","repo","branch","useParams","profile","setProfile","useState","repository","setRepository","selectedBranch","setSelectedBranch","loading","setLoading","error","setError","useEffect","async","_repository$owner","_location$state$profi","_location$state$repos","_location$state$repos2","_location$state$repos3","log","urlParams","currentState","hasProfile","hasRepository","profileLogin","login","repositoryFullName","full_name","repositoryOwner","owner","hasLocationState","locationStateSummary","isAuthenticated","githubService","isAuth","needsFetch","hasUserParam","hasRepoParam","reason","dakValidationService","validateDemoDAKRepository","warningMessage","demoProfile","name","charAt","toUpperCase","avatar_url","type","isDemo","demoRepository","default_branch","html_url","userProfile","getUser","err","repoData","getRepository","validateDAKRepository","getBranch","fetchDataFromUrlParams","_ref","file","containerRef","useRef","viewerRef","current","_file$path","_file$sha","innerHTML","split","repoName","ref","bpmnXml","sha","processName","replace","getFileContent","fileError","viewer","BpmnViewer","attachTo","importXML","get","zoom","importError","renderError","loadPreview","cleanup","destroy","cleanupError","_jsx","className","children","_jsxs","BusinessProcessSelection","dakLoading","dakError","repositoryName","component","bpmnFiles","setBpmnFiles","hasWriteAccess","setHasWriteAccess","_repository$permissio","writeAccess","token","permissions","push","checkPermissions","_repository$owner2","_repository$owner3","_repository$owner4","_repository$owner5","ownerLogin","original_owner_login","original_full_name","derived_owner","derived_repoName","selected_ref","derivation_method","derivedOwner","fullRepositoryData","getBpmnFiles","size","download_url","apiError","_apiError$message","message","status","loadBpmnFiles","onClick","reload","PageLayout","pageName","map","BPMNPreview","toFixed","handleView","_repository$owner7","navigationState","selectedFile","mode","title","handleEdit","_repository$owner6","alert","disabled","handleViewSource","_repository$owner8"],"sourceRoot":""}