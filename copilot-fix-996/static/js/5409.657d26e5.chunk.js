"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[5409],{35409:(e,s,n)=>{n.r(s),n.d(s,{default:()=>o});var r=n(9950),c=n(29946),t=n(53782),i=n(44414);const a=()=>{const{profile:e,repository:s,branch:n}=(0,t.N5)(),a=null===e||void 0===e?void 0:e.login,o=null===s||void 0===s?void 0:s.name,l=n||(null===s||void 0===s?void 0:s.default_branch)||"main",[d,h]=(0,r.useState)([]),[u,p]=(0,r.useState)(!0),[f,m]=(0,r.useState)(null),[j,x]=(0,r.useState)(""),N=(0,r.useCallback)((e,s)=>{const n=[],r=s.split("\n");let c=null,t=!1;for(let h=0;h<r.length;h++){const s=r[h].trim();if(s.startsWith("Profile:")||s.startsWith("Instance:")){var i;const n=null===(i=s.split(":")[1])||void 0===i?void 0:i.trim();n&&(c={id:n,name:n,description:"",type:"FSH Profile/Instance",source:{type:"fsh",path:e,lineNumber:h+1}},t=!0)}if((s.includes("ActorDefinition")||s.includes("Actor")||s.toLowerCase().includes("persona")||s.toLowerCase().includes("role"))&&!c&&s.includes(":")){var a;const n=s.split(":"),r=null===(a=n[n.length-1])||void 0===a?void 0:a.trim();r&&(c={id:r,name:r,description:"Actor definition found",type:"FSH Actor",source:{type:"fsh",path:e,lineNumber:h+1}},t=!0)}if(c&&t){var o;if(s.startsWith("Title:"))c.name=(null===(o=s.split(":")[1])||void 0===o?void 0:o.trim().replace(/"/g,""))||c.id;else if(s.startsWith("Description:")){var l;c.description=(null===(l=s.split(":")[1])||void 0===l?void 0:l.trim().replace(/"/g,""))||""}else if(s.startsWith("Id:")){var d;c.id=(null===(d=s.split(":")[1])||void 0===d?void 0:d.trim())||c.id}(""===s||s.startsWith("Profile:")||s.startsWith("Instance:"))&&c.id&&h>0&&(n.push(c),c=null,t=!1)}}return c&&c.id&&n.push(c),n},[]),v=(0,r.useCallback)((e,s)=>{const n=[];try{const r=JSON.parse(s),c=function(s){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if("object"!==typeof s||null===s)return;if(Array.isArray(s))return void s.forEach((e,s)=>c(e,"".concat(r,"[").concat(s,"]")));const t=s.resourceType,i=s.id;t&&i&&("ActorDefinition"===t||"SGActorDefinition"===t||"Persona"===t||"SGPersona"===t||t.toLowerCase().includes("actor")||t.toLowerCase().includes("persona"))&&n.push({id:i,name:s.name||s.title||i,description:s.description||"".concat(t," resource"),type:"JSON ".concat(t),source:{type:"json",path:e,resourceType:t,fullPath:r}}),Object.keys(s).forEach(e=>{c(s[e],r?"".concat(r,".").concat(e):e)})};c(r)}catch(r){console.warn("Failed to parse JSON file ".concat(e,":"),r)}return n},[]),y=(0,r.useCallback)(async()=>{if(!c.A.isAuth()||!a||!o)return m("GitHub authentication required and repository information needed"),void p(!1);x("Starting scan..."),h([]);try{const n=[];x("Scanning FSH files in input/fsh/actors...");try{const s=await c.A.getDirectoryContents(a,o,"input/fsh/actors",l);for(const r of s)if("file"===r.type&&r.name.endsWith(".fsh")){x("Scanning FSH file: ".concat(r.name));try{const e=await c.A.getFileContent(a,o,r.path,l),s=N(r.path,e);n.push(...s)}catch(e){console.warn("Failed to read FSH file ".concat(r.path,":"),e)}}}catch(s){console.warn("No input/fsh/actors directory found or access denied:",s)}x("Scanning JSON files in inputs/resources...");try{const s=await c.A.getDirectoryContents(a,o,"inputs/resources",l);for(const r of s)if("file"===r.type&&r.name.endsWith(".json")){x("Scanning JSON file: ".concat(r.name));try{const e=await c.A.getFileContent(a,o,r.path,l),s=v(r.path,e);n.push(...s)}catch(e){console.warn("Failed to read JSON file ".concat(r.path,":"),e)}}}catch(s){console.warn("No inputs/resources directory found or access denied:",s)}x("Scan complete. Found ".concat(n.length," actors.")),h(n),m(null)}catch(f){console.error("Error scanning for actors:",f),m("Failed to scan repository: ".concat(f.message)),x("Scan failed")}finally{p(!1)}},[a,o,l,N,v]);(0,r.useEffect)(()=>{a&&o?y():(p(!1),m("Repository information not available"))},[a,o,l,y]);const g=(0,r.useCallback)(e=>{if(!a||!o||!e.source)return"#";const s="https://github.com/".concat(a,"/").concat(o,"/blob/").concat(l,"/").concat(e.source.path);return e.source.lineNumber?"".concat(s,"#L").concat(e.source.lineNumber):s},[a,o,l]);return u?(0,i.jsx)("div",{className:"persona-viewer",children:(0,i.jsxs)("div",{className:"loading-state",children:[(0,i.jsx)("div",{className:"loading-spinner"}),(0,i.jsx)("p",{children:"Loading user scenarios and personas..."}),j&&(0,i.jsx)("p",{className:"scan-status",children:j})]})}):f?(0,i.jsx)("div",{className:"persona-viewer",children:(0,i.jsxs)("div",{className:"error-state",children:[(0,i.jsx)("h2",{children:"Error"}),(0,i.jsx)("p",{children:f}),a&&o&&(0,i.jsx)("button",{onClick:y,className:"retry-button",children:"Retry Scan"})]})}):(0,i.jsxs)("div",{className:"persona-viewer",children:[(0,i.jsxs)("div",{className:"page-header",children:[(0,i.jsx)("h1",{children:"Generic Personas & Actor Definitions"}),(0,i.jsx)("p",{className:"page-description",children:"Actor definitions and personas found in this DAK repository for healthcare workflows."}),a&&o&&(0,i.jsxs)("div",{className:"repository-info",children:[(0,i.jsx)("strong",{children:"Repository:"})," ",a,"/",o,(0,i.jsxs)("span",{className:"branch-info",children:["(branch: ",l,")"]})]})]}),(0,i.jsxs)("div",{className:"scan-controls",children:[(0,i.jsx)("button",{onClick:y,className:"rescan-button",disabled:u,children:u?"Scanning...":"Rescan Repository"}),j&&(0,i.jsx)("p",{className:"scan-status",children:j})]}),(0,i.jsxs)("div",{className:"actors-summary",children:[(0,i.jsxs)("h2",{children:["Found Personas & Actors (",d.length,")"]}),0===d.length?(0,i.jsxs)("div",{className:"no-actors",children:[(0,i.jsx)("p",{children:"No actor definitions or personas found in this repository."}),(0,i.jsxs)("div",{className:"search-info",children:[(0,i.jsx)("h3",{children:"Searched in:"}),(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("code",{children:"input/fsh/actors/*.fsh"})," - FSH actor definitions (generous matching)"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("code",{children:"inputs/resources/*.json"})," - JSON ActorDefinition resources (strict matching)"]})]})]})]}):(0,i.jsx)("div",{className:"actors-list",children:d.map((e,s)=>(0,i.jsxs)("div",{className:"actor-card",children:[(0,i.jsxs)("div",{className:"actor-header",children:[(0,i.jsx)("h3",{className:"actor-name",children:e.name}),(0,i.jsx)("span",{className:"actor-type ".concat(e.source.type),children:e.type})]}),(0,i.jsxs)("div",{className:"actor-details",children:[(0,i.jsxs)("p",{className:"actor-id",children:[(0,i.jsx)("strong",{children:"ID:"})," ",e.id]}),e.description&&(0,i.jsx)("p",{className:"actor-description",children:e.description})]}),(0,i.jsxs)("div",{className:"actor-source",children:[(0,i.jsxs)("p",{className:"source-path",children:[(0,i.jsx)("strong",{children:"Source:"}),(0,i.jsxs)("a",{href:g(e),target:"_blank",rel:"noopener noreferrer",className:"source-link",children:[e.source.path,e.source.lineNumber&&" (line ".concat(e.source.lineNumber,")")]})]}),e.source.resourceType&&(0,i.jsxs)("p",{className:"resource-type",children:[(0,i.jsx)("strong",{children:"Resource Type:"})," ",e.source.resourceType]})]})]},s))})]})]})},o=()=>(0,i.jsx)(t.Mx,{pageName:"persona-viewer",children:(0,i.jsx)(a,{})})}}]);