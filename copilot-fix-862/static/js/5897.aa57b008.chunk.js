"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[5897],{55897:(e,a,o)=>{o.r(a),o.d(a,{default:()=>f});var t=o(89379),n=o(9950),r=o(85001),i=o(67818),s=o(29946),l=o(29473),c=o(42676),u=o(1932),d=o(63609);const g=e=>{if(!e)return!1;if(!0===e.isSAMLError)return!0;const a=e.message||"",o=a.toLowerCase();return 403===e.status&&(o.includes("saml enforcement")||o.includes("saml single sign-on")||o.includes("saml authorization required")||a.includes("must grant your Personal Access token access to this organization"))},h=e=>{const a=window.location.origin,o=window.location.pathname,t="".concat(a).concat(o,"?saml_authorized=1&org=").concat(e);try{localStorage.setItem("saml_return_url",t),localStorage.setItem("saml_org",e),localStorage.setItem("saml_timestamp",Date.now().toString()),console.log("Stored SAML return info in localStorage:",{returnUrl:t,organization:e})}catch(i){console.warn("Could not store SAML return info in localStorage:",i)}console.log("SAML Authorization URL Debug:",{origin:a,pathname:o,isGitHubPages:a.includes("github.io"),returnUrl:t,encodedReturnUrl:encodeURIComponent(t),organization:e});const n=encodeURIComponent(t),r="https://github.com/orgs/".concat(e,"/sso?return_to=").concat(n);return console.log("Final SAML authorization URL:",r),console.log("Expected return after SAML:",t),r};var m=o(44414);const f=()=>{const{t:e}=(0,i.Bd)(),[a,o]=(0,n.useState)(null),[f,A]=(0,n.useState)([]),[p,S]=(0,n.useState)(!1),[z,v]=(0,n.useState)(!1),[w,L]=(0,n.useState)(null),[b,x]=(0,n.useState)({}),[M,j]=(0,n.useState)(null),[O,_]=(0,n.useState)({isOpen:!1,errorInfo:null}),y=(0,n.useRef)(!1),N=(0,r.Zp)(),k=(0,r.zy)(),C=(0,n.useCallback)((e,a)=>{if(!s.A.isAuth())return;const o={};if(e){const a=l.A.getCachedRepositories(e.login,"user");a&&a.repositories&&(o["user-".concat(e.login)]=a.repositories.length)}a.forEach(e=>{const a=l.A.getCachedRepositories(e.login,"org");a&&a.repositories&&(o["org-".concat(e.login)]=a.repositories.length)}),x(o)},[]),I=(0,n.useCallback)(async function(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(y.current)return;y.current=!0,v(!0),L(null);const n=s.A.isAuth();console.log("fetchUserData: Current authentication state:",n,"forceRefresh:",e,"samlAuthorizedOrg:",a);try{const c=e?null:l.A.getCachedProfile(n);var r;if(c&&!e)return console.log("Using cached profile data",{organizationCount:(null===(r=c.organizations)||void 0===r?void 0:r.length)||0,hasUser:!!c.user,cacheAge:Date.now()-c.timestamp}),o(c.user),A(c.organizations),n&&C(c.user,c.organizations),v(!1),void(y.current=!1);console.log("No cached profile data found or forcing refresh, fetching fresh data");let u=null;n?(await s.A.checkTokenPermissions(),u=await s.A.getCurrentUser(),o(u)):(u=null,o(null));let d=[];if(n)try{d=await s.A.getUserOrganizations()}catch(w){console.error("Error fetching organizations:",w),d=[]}try{const e=await s.A.getWHOOrganization(),a=d.findIndex(e=>"WorldHealthOrganization"===e.login);a>=0?d[a]=(0,t.A)((0,t.A)((0,t.A)({},d[a]),e),{},{isWHO:!0}):d.unshift(e),console.log("WHO organization loaded successfully (no SAML needed)")}catch(i){console.warn("Could not fetch WHO organization data from API, using fallback:",i);const e=g(i),o="WorldHealthOrganization"===a;console.log("SAML Error Detection:",{isSAMLRequired:e,whoError:i.message,status:i.status,currentIsAuthenticated:n,samlAuthorizedOrg:a,samlOverride:o}),e&&!o?(console.log("SAML authorization available for WHO organization"),j("SAML authorization available for WHO organization. Click the organization to authorize access.")):o&&console.log("SAML authorization recently completed for WHO organization, treating as authorized");const r={id:"who-organization",login:"WorldHealthOrganization",name:"World Health Organization",description:"The World Health Organization is a specialized agency of the United Nations responsible for international public health.",avatar_url:"https://avatars.githubusercontent.com/u/12261302?s=200&v=4",html_url:"https://github.com/WorldHealthOrganization",type:"Organization",isWHO:!0,needsSAMLAuth:!o&&e};console.log("Creating WHO fallback organization:",{login:r.login,needsSAMLAuth:r.needsSAMLAuth,isWHO:r.isWHO,samlOverride:o});d.some(e=>"WorldHealthOrganization"===e.login)?d=d.map(a=>"WorldHealthOrganization"===a.login?(0,t.A)((0,t.A)({},a),{},{isWHO:!0,needsSAMLAuth:!o&&e}):a):d.unshift(r)}A(d),l.A.setCachedProfile(u,d,n),console.log("Profile data cached for 5 minutes"),n&&C(u,d)}catch(w){console.error("Error fetching user data:",w),n?(L("Failed to fetch user data. Please check your connection and try again."),S(!1),s.A.logout()):L("Unable to fetch additional data. Some features may be limited.")}finally{v(!1),y.current=!1}},[C]),H=e=>{const a=function(e,a){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{isRequired:t=!1,context:n="access organization data"}=o;return{type:"saml_enforcement",organization:a,isRequired:t,context:n,authorizationURL:h(a),documentationURL:"https://docs.github.com/articles/authenticating-to-a-github-organization-with-saml-single-sign-on/",title:t?"SAML Authorization Required":"SAML Authorization Available",message:t?"Access to ".concat(a," requires SAML authorization to ").concat(n,"."):"Your Personal Access Token can be authorized for ".concat(a," to ").concat(n,"."),instructions:['Click the "Authorize SAML" button to open GitHub\'s authorization page in a new tab',"Sign in to your organization's SAML identity provider if prompted",'Click "Authorize" to grant your Personal Access Token access to '.concat(a),"Return to this tab - SGEX will automatically detect when authorization is complete"],severity:t?"error":"warning"}}(new Error("SAML authorization required"),e,{isRequired:!1,context:"access additional organization features"});_({isOpen:!0,errorInfo:a})};(0,n.useEffect)(()=>{(()=>{const e=s.A.initializeFromStoredToken();e!==p&&(l.A.clearAllProfileCaches(),console.log("Authentication state changed, cleared profile cache")),S(!!e)})()},[p]),(0,n.useEffect)(()=>{var e;null!==(e=k.state)&&void 0!==e&&e.warningMessage&&(j(k.state.warningMessage),N(k.pathname,{replace:!0,state:{}}))},[k.state,N,k.pathname]),(0,n.useEffect)(()=>{const e=(()=>{const e=new URLSearchParams(window.location.search),a="1"===e.get("saml_authorized"),o=e.get("org");if(a&&o)return console.log("SAML return detected via URL parameters"),{organization:o,method:"url_params"};const t=document.referrer,n=t&&t.includes("github.com");try{const e=localStorage.getItem("saml_return_url"),a=localStorage.getItem("saml_org"),o=localStorage.getItem("saml_timestamp"),r=o&&Date.now()-parseInt(o)<9e5;if(a&&r){console.log("SAML return detected via localStorage fallback",{organization:a,storedReturnUrl:e,timestamp:new Date(parseInt(o)),referrer:t,fromGitHub:n,method:n?"localStorage_with_github_referrer":"localStorage_manual_return"}),localStorage.removeItem("saml_return_url"),localStorage.removeItem("saml_org"),localStorage.removeItem("saml_timestamp");const r=new URL(window.location);return r.searchParams.set("saml_authorized","1"),r.searchParams.set("org",a),window.history.replaceState({},document.title,r.href),{organization:a,method:n?"localStorage_with_github_referrer":"localStorage_manual_return",referrer:t}}a&&!r&&(console.log("Found old SAML localStorage data, clearing it",{organization:a,age:o?(Date.now()-parseInt(o))/1e3/60:"unknown",timestamp:o?new Date(parseInt(o)):"unknown"}),localStorage.removeItem("saml_return_url"),localStorage.removeItem("saml_org"),localStorage.removeItem("saml_timestamp"))}catch(r){console.warn("Error checking localStorage for SAML return data:",r)}return null})(),a=new URLSearchParams(window.location.search),o=a.has("code")||a.has("state");if(console.log("SAML Return Detection Debug:",{currentUrl:window.location.href,referrer:document.referrer,samlReturnInfo:e,hasOAuthParams:o,urlParams:Array.from(a.entries())}),e||o){const n=null===e||void 0===e?void 0:e.organization;if(console.log("Detected return from SAML authorization",{method:null===e||void 0===e?void 0:e.method,organization:n,hasOAuthParams:o,referrer:null===e||void 0===e?void 0:e.referrer}),l.A.clearAllProfileCaches(),e&&(j(null),n&&(j("\u2705 SAML authorization completed for ".concat(n,"! Organization access has been updated.")),setTimeout(()=>j(null),5e3)),n&&p&&(console.log("SAML authorization completed for ".concat(n,", immediately clearing SAML requirements")),A(e=>e.map(e=>e.login===n?(0,t.A)((0,t.A)({},e),{},{needsSAMLAuth:!1}):e)))),p&&I(!0,n||null),o||a.has("saml_authorized")){const e=new URL(window.location);["code","state","saml_authorized","org"].forEach(a=>{e.searchParams.delete(a)}),window.history.replaceState({},document.title,e.href)}}},[p,I]),(0,n.useEffect)(()=>{I()},[I]);const R=(e,a)=>{if(a.needsSAMLAuth&&p)return e.preventDefault(),void H(a.login);const o={profile:a};(0,u.hX)(e,"/dak-action/".concat(a.login),N,o)};return(0,m.jsxs)(c.Mx,{pageName:"select-profile",children:[z&&!a?(0,m.jsxs)("div",{className:"loading-section",children:[(0,m.jsx)("div",{className:"spinner"}),(0,m.jsx)("p",{children:"Loading profile data..."})]}):(0,m.jsxs)("div",{className:"select-profile-content",children:[M&&(0,m.jsx)("div",{className:"warning-message ".concat(M.includes("\u2705")?"success-message":""),children:(0,m.jsxs)("div",{className:"warning-content",children:[(0,m.jsxs)("div",{className:"warning-header",children:[(0,m.jsx)("span",{className:"warning-icon",children:M.includes("\u2705")?"\u2705":"\u26a0\ufe0f"}),(0,m.jsx)("span",{className:"warning-text",children:M})]}),(0,m.jsxs)("div",{className:"warning-actions",children:[M.includes("SAML authorization available")&&(0,m.jsx)("button",{className:"warning-action-btn refresh-btn",onClick:()=>{console.log("Manual refresh after SAML authorization requested"),l.A.clearAllProfileCaches(),I(!0,"WorldHealthOrganization"),j(null)},title:"Click if you just completed SAML authorization",children:"\ud83d\udd04 Refresh After SAML"}),(0,m.jsx)("button",{className:"warning-dismiss",onClick:()=>{j(null)},"aria-label":"Dismiss warning",children:"\xd7 Dismiss"})]})]})}),!p&&(0,m.jsx)("div",{className:"auth-status-message",children:(0,m.jsxs)("div",{className:"auth-status-content",children:[(0,m.jsx)("span",{className:"auth-status-icon",children:"\ud83d\udd13"}),(0,m.jsx)("span",{className:"auth-status-text",children:"You are browsing in unauthenticated mode. Some features like saving to GitHub will be disabled, but you can still explore and use local staging."})]})}),z?(0,m.jsxs)("div",{className:"loading-section",children:[(0,m.jsx)("div",{className:"spinner"}),(0,m.jsx)("p",{children:"Loading profile data..."})]}):(0,m.jsxs)("div",{className:"profile-selection",children:[(0,m.jsx)("h2",{children:e("organization.select")}),(0,m.jsxs)("p",{children:[e("organization.personal"),":"]}),w&&(0,m.jsx)("div",{className:"error-message",children:w}),(0,m.jsxs)("div",{className:"profile-grid-horizontal",children:[p&&a&&(0,m.jsxs)("div",{className:"profile-card",onClick:e=>R(e,(0,t.A)({type:"user"},a)),children:[(0,m.jsxs)("div",{className:"profile-card-header",children:[(0,m.jsx)("img",{src:null===a||void 0===a?void 0:a.avatar_url,alt:"Personal profile"}),b["user-".concat(null===a||void 0===a?void 0:a.login)]>0&&(0,m.jsx)("div",{className:"dak-count-badge",children:b["user-".concat(null===a||void 0===a?void 0:a.login)]})]}),(0,m.jsx)("h3",{children:(null===a||void 0===a?void 0:a.name)||(null===a||void 0===a?void 0:a.login)}),(0,m.jsx)("p",{children:"Personal repositories"}),(0,m.jsx)("div",{className:"profile-badges",children:(0,m.jsx)("span",{className:"profile-type",children:"Personal"})})]}),f.map(a=>("WorldHealthOrganization"===a.login&&console.log("WHO Organization Badge Debug (Render Time):",{orgLogin:a.login,needsSAMLAuth:a.needsSAMLAuth,isAuthenticated:p,githubServiceAuth:s.A.isAuth(),shouldShowBadge:a.needsSAMLAuth&&p,samlIndicatorCondition:a.needsSAMLAuth&&p,samlBadgeCondition:a.needsSAMLAuth&&p,orgObject:a}),(0,m.jsxs)("div",{className:"profile-card ".concat(a.isWHO?"who-org":""," ").concat(a.needsSAMLAuth?"needs-saml":""),onClick:e=>R(e,(0,t.A)({type:"org"},a)),children:[(0,m.jsxs)("div",{className:"profile-card-header",children:[(0,m.jsx)("img",{src:a.avatar_url||"https://github.com/".concat(a.login,".png"),alt:"".concat(a.name||a.login," organization")}),b["org-".concat(a.login)]>0&&(0,m.jsx)("div",{className:"dak-count-badge",children:b["org-".concat(a.login)]}),a.needsSAMLAuth&&p&&(0,m.jsx)("div",{className:"saml-indicator",title:"SAML authorization available",children:"\ud83d\udd10"})]}),(0,m.jsx)("h3",{children:a.name||a.login}),(0,m.jsxs)("p",{children:["@",a.login]}),(0,m.jsxs)("div",{className:"profile-badges",children:[(0,m.jsx)("span",{className:"profile-type",children:e("organization.organizations")}),a.isWHO&&(0,m.jsx)("span",{className:"who-badge",children:"WHO Official"}),a.needsSAMLAuth&&p&&(0,m.jsx)("span",{className:"saml-badge",children:"SAML Available"})]})]},a.login)))]})]})]}),(0,m.jsx)(d.A,{isOpen:O.isOpen,onClose:()=>_({isOpen:!1,errorInfo:null}),samlErrorInfo:O.errorInfo,onRetry:()=>{var e;return(async e=>{try{l.A.clearProfileCache(s.A.isAuth()),await I(!0),console.log("SAML authorization verification completed for ".concat(e)),j(null),_({isOpen:!1,errorInfo:null})}catch(w){if(g(w))return void console.log("SAML authorization still pending for ".concat(e,". This is normal - authorization may take a few moments to propagate."));console.error("Unexpected error during SAML authorization verification:",w),_({isOpen:!1,errorInfo:null})}})(null===(e=O.errorInfo)||void 0===e?void 0:e.organization)},onSkip:()=>{_({isOpen:!1,errorInfo:null}),j(null)}})]})}}}]);