"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[115],{60115:(e,n,i)=>{i.r(n),i.d(n,{default:()=>d});var t=i(9950),o=i(18518),a=i(46901),r=i(53782),s=i(96143),l=i(44414);const c=()=>{var e,n;const i=(0,o.zy)(),c=(0,o.Zp)(),d=(0,t.useRef)(null),m=(0,t.useRef)(null),{profile:u,repository:p,branch:h,asset:g,loading:w,error:v}=(0,r.N5)();console.log("BPMNViewer: Page framework data:",{profile:!!u,repository:!!p,branch:h,asset:g}),console.log("BPMNViewer: Location state (legacy):",i.state);const{component:N,selectedFile:b,selectedBranch:f}=i.state||{},M=u||(null===(e=i.state)||void 0===e?void 0:e.profile),y=p||(null===(n=i.state)||void 0===n?void 0:n.repository),B=h||f;console.log("BPMNViewer: Final computed values:",{currentProfile:!!M,currentRepository:!!y,currentBranch:B,asset:g});const P=(0,t.useMemo)(()=>g?{name:g.split("/").pop(),path:g}:b,[g,b]),[x,V]=(0,t.useState)(!0),[j,_]=(0,t.useState)("initializing"),[E,F]=(0,t.useState)(null),[k,C]=(0,t.useState)(!1),[S,z]=(0,t.useState)(!1),[L,A]=(0,t.useState)(!1);(0,t.useEffect)(()=>{(async()=>{if(y&&M)try{var e;const n=M.token&&(null===(e=y.permissions)||void 0===e?void 0:e.push);C(n||!1)}catch(E){console.warn("Could not check write permissions:",E),C(!1)}})()},[y,M]);const T=(0,t.useCallback)(async()=>{var e;if(console.log("\ud83d\ude80 BPMNViewer: loadBpmnContent called with:",{hasViewer:!!d.current,selectedFile:P,repository:y?{name:y.name,owner:y.owner}:null}),!d.current||!P||!y)return void console.warn("\u274c BPMNViewer: Missing required parameters for loadBpmnContent:",{hasViewer:!!d.current,hasSelectedFile:!!P,hasRepository:!!y});const n=(null===(e=y.owner)||void 0===e?void 0:e.login)||y.full_name.split("/")[0],i=y.name,t=B||"main";try{var o,r;let e;V(!0),F(null),_("initializing"),console.log("\ud83d\udd0d BPMNViewer: Repository and file analysis:",{repository:{name:y.name,full_name:y.full_name,owner:y.owner,isDemo:y.isDemo,default_branch:y.default_branch},selectedFile:{name:P.name,path:P.path,size:P.size},derivedOwner:n,repoName:i,ref:t,githubServiceAuthenticated:a.A.isAuth()}),_("fetching"),console.log("\ud83d\udcc2 BPMNViewer: Preparing to load BPMN content from ".concat(n,"/").concat(i,":").concat(P.path," (ref: ").concat(t,")")),console.log("\ud83d\udccb BPMNViewer: Full selected file object:",JSON.stringify(P,null,2));if((null===(o=P.path)||void 0===o?void 0:o.includes("demo/"))||(null===(r=P.sha)||void 0===r?void 0:r.startsWith("demo-"))){console.log("\ud83c\udfad BPMNViewer: Demo file detected, generating BPMN content locally"),_("generating");const n=P.name.replace(".bpmn","").replace(/[-_]/g," ");e='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(P.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(n,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(P.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}else _("downloading"),e=await a.A.getFileContent(n,i,P.path,t);if(_("validating"),!e||!e.trim())throw new Error("Empty or invalid BPMN file content");if(!e.includes("bpmn:definitions")&&!e.includes("<definitions"))throw new Error("File does not appear to contain valid BPMN XML content");_("importing"),console.log("\ud83c\udfa8 BPMNViewer: Importing XML into BPMN viewer..."),await d.current.importXML(e),_("centering");try{const e=d.current.get("canvas"),n=d.current.get("elementRegistry");console.log("\ud83c\udfaf BPMNViewer: Initializing viewport...");const i=async()=>{if(!await async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:30;for(let i=0;i<e;i++){const t=n.getAll().filter(e=>"bpmn:Process"!==e.type&&"bpmn:Collaboration"!==e.type&&!e.labelTarget);if(console.log("\ud83d\udd0d BPMNViewer: Element check ".concat(i+1,"/").concat(e,": ").concat(t.length," elements")),t.length>0)return!0;await new Promise(e=>requestAnimationFrame(e))}return!1}())return console.error("\u274c BPMNViewer: No elements found"),!1;const i=await async function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:30;for(let i=0;i<n;i++){const n=e.viewbox();if(null!==n&&void 0!==n&&n.outer&&n.outer.width>0&&n.outer.height>0)return console.log("\u2705 BPMNViewer: Canvas viewbox ready:",n.outer),n;await new Promise(e=>requestAnimationFrame(e))}return null}();if(!i)return console.error("\u274c BPMNViewer: Invalid viewbox"),!1;const t=m.current;if(!t)return console.error("\u274c BPMNViewer: Container not available"),!1;const o=t.offsetWidth||0,a=t.offsetHeight||0;if(0===o||0===a)return console.error("\u274c BPMNViewer: Container has invalid dimensions"),!1;const r=n.getAll(),s=r.filter(e=>void 0!==e.x&&void 0!==e.y&&void 0!==e.width&&void 0!==e.height&&e.width>0&&e.height>0&&!e.labelTarget);console.log("\ud83d\udcd0 BPMNViewer: Calculating viewport from element bounds...",{totalElements:r.length,visibleElements:s.length});let l,c=1/0,d=1/0,u=-1/0,p=-1/0;s.forEach(e=>{c=Math.min(c,e.x),d=Math.min(d,e.y),u=Math.max(u,e.x+e.width),p=Math.max(p,e.y+e.height)}),c!==1/0&&u!==-1/0&&c<u&&d<p?(l={x:c,y:d,width:u-c,height:p-d},console.log("\u2705 BPMNViewer: Calculated bounds from elements:",l)):(l={x:i.outer.x,y:i.outer.y,width:i.outer.width,height:i.outer.height},console.warn("\u26a0\ufe0f BPMNViewer: Using viewbox.outer as fallback:",l));const h=o/(l.width+40),g=a/(l.height+40),w=Math.min(h,g,1),v={x:l.x-(o/w-l.width)/2,y:l.y-(a/w-l.height)/2,width:o/w,height:a/w};console.log("\ud83d\udcca BPMNViewer: Calculated viewport:",{scale:w,diagramBounds:l,manualViewbox:v});try{console.log("\ud83c\udfaf BPMNViewer: Applying element-based manual viewbox..."),e.viewbox(v),await new Promise(e=>requestAnimationFrame(e));const n=e.zoom(),i=e.viewbox();return console.log("\u2705 BPMNViewer: Manual viewbox applied:",{zoom:n,viewbox:i}),!0}catch(N){console.error("\u274c BPMNViewer: Manual viewbox failed, trying fit-viewport:",N);try{return e.zoom("fit-viewport"),console.warn("\u26a0\ufe0f BPMNViewer: Used fit-viewport as fallback"),!0}catch(b){return console.error("\u274c BPMNViewer: All viewport methods failed:",b),!1}}};requestAnimationFrame(()=>{requestAnimationFrame(async()=>{await i(),console.log("\u2705 BPMNViewer: Viewport initialization complete")})});const t=()=>{requestAnimationFrame(()=>{var e;const n=null===(e=m.current)||void 0===e?void 0:e.querySelector("svg");n&&(n.style.opacity&&"0"!==n.style.opacity||(n.style.opacity="1"),"hidden"===n.style.visibility&&(n.style.visibility="visible"),"none"===n.style.display&&(n.style.display="block"),console.log("\u2705 BPMNViewer: SVG visibility ensured"))})};setTimeout(t,100),setTimeout(t,300),console.log("\u2705 BPMNViewer: Successfully loaded and centered BPMN diagram")}catch(s){console.warn("\u26a0\ufe0f BPMNViewer: Could not center diagram:",s)}_("complete"),V(!1)}catch(l){console.error("\ud83d\udca5 BPMNViewer: Error loading BPMN file:",l),console.error("\ud83d\udd0d BPMNViewer: Full error details:",{message:l.message,status:l.status,stack:l.stack,repository:{owner:n,name:i,ref:t},file:{name:P.name,path:P.path}}),_("error"),404===l.status?F("BPMN file not found in the repository."):403===l.status?F("Access denied. This repository may be private and require authentication."):l.message.includes("Empty or invalid BPMN")?F("The selected file appears to be empty or corrupted."):l.message.includes("does not appear to contain valid BPMN")?F("The selected file does not appear to contain valid BPMN XML content."):F("Failed to load BPMN diagram: ".concat(l.message)),V(!1)}},[P,y,B]),R=(0,t.useCallback)(()=>{m.current&&(m.current.innerHTML="",console.log("\ud83e\uddf9 BPMNViewer: Container cleaned up"))},[]);(0,t.useEffect)(()=>{const e=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;m.current?(console.log("\u2705 BPMNViewer: Container found on attempt ".concat(n+1)),(async()=>{if(console.log("\ud83d\udee0\ufe0f BPMNViewer: initializeViewer called with:",{hasContainer:!!m.current,hasViewer:!!d.current,selectedFile:P?P.name:"none",containerRefCurrent:m.current,viewerRefCurrent:d.current}),m.current&&!d.current&&P)try{R(),console.log("\ud83d\udd27 BPMNViewer: Creating new BPMN viewer..."),console.log("\ud83d\udd27 BPMNViewer: Container element details:",{tagName:m.current.tagName,className:m.current.className,clientWidth:m.current.clientWidth,clientHeight:m.current.clientHeight,innerHTML:m.current.innerHTML.length}),d.current=await(0,s._Q)({container:m.current}),console.log("\u2705 BPMNViewer: BPMN viewer initialized successfully"),console.log("\ud83d\udcde BPMNViewer: About to call loadBpmnContent()..."),T()}catch(E){console.error("\u274c BPMNViewer: Failed to initialize BPMN viewer:",E),console.error("\ud83d\udd0d BPMNViewer: Initialization error details:",{message:E.message,stack:E.stack,containerExists:!!m.current,containerContent:m.current?m.current.innerHTML:"N/A"}),E.message.includes("already exists")?(console.log('\ud83d\udd04 BPMNViewer: Detected "element already exists" error, attempting cleanup and retry...'),R(),setTimeout(async()=>{if(m.current&&!d.current)try{console.log("\ud83d\udd04 BPMNViewer: Retrying viewer creation after cleanup..."),d.current=await(0,s._Q)({container:m.current}),console.log("\u2705 BPMNViewer: BPMN viewer initialized successfully on retry"),T()}catch(e){console.error("\u274c BPMNViewer: Failed to initialize BPMN viewer on retry:",e),F("Failed to initialize BPMN viewer: ".concat(e.message)),V(!1)}},100)):(F("Failed to initialize BPMN viewer: ".concat(E.message)),V(!1))}else console.log("\u26a0\ufe0f BPMNViewer: Skipping viewer initialization:",{hasContainer:!!m.current,hasViewer:!!d.current,hasSelectedFile:!!P,reason:m.current?d.current?"Viewer already exists":P?"Unknown":"No selected file":"No container"})})()):n<50?(console.log("\u23f3 BPMNViewer: Container not ready, attempt ".concat(n+1,"/").concat(50,", retrying in 100ms...")),setTimeout(()=>e(n+1),100)):(console.error("\u274c BPMNViewer: Container never became available after maximum attempts"),F("Failed to initialize BPMN viewer: container not available"),V(!1))};return P?(console.log("\u23f0 BPMNViewer: Starting container readiness check for selectedFile:",P.name),e()):console.log("\u274c BPMNViewer: No currentSelectedFile, skipping viewer initialization"),()=>{if(d.current){try{d.current.destroy()}catch(E){console.warn("Warning cleaning up BPMN viewer:",E)}d.current=null}m.current&&m.current._bpmnObserver&&(m.current._bpmnObserver.disconnect(),delete m.current._bpmnObserver)}},[P,T,R]);(0,t.useEffect)(()=>()=>{document.body.classList.remove("enhanced-fullwidth-active")},[]),(0,t.useEffect)(()=>(S?document.body.classList.add("enhanced-fullwidth-active"):document.body.classList.remove("enhanced-fullwidth-active"),()=>{document.body.classList.remove("enhanced-fullwidth-active")}),[S]),(0,t.useEffect)(()=>{i.pathname.split("/").filter(e=>e).length>5?u||p||g||M||y||P||(console.log("BPMNViewer: On asset URL but no data available from framework or location state, redirecting to home"),c("/")):M&&y&&P||(console.log("BPMNViewer: Missing required data, redirecting to home:",{hasProfile:!!M,hasRepository:!!y,hasSelectedFile:!!P}),c("/"))},[M,y,P,u,p,g,i.pathname,c]);const D=i.pathname.split("/").filter(e=>e).length>5;return M&&y&&P?(0,l.jsx)("div",{className:"bpmn-viewer ".concat(S?"enhanced-fullwidth":""," ").concat(L?"auto-hide":""),children:(0,l.jsx)("div",{className:"viewer-content",children:(0,l.jsxs)("div",{className:"viewer-main",children:[(0,l.jsxs)("div",{className:"viewer-toolbar",children:[(0,l.jsxs)("div",{className:"toolbar-left",children:[(0,l.jsx)("h3",{children:P.name}),(0,l.jsxs)("div",{className:"artifact-badges",children:[(0,l.jsx)("span",{className:"artifact-badge bpmn",children:"\ud83d\udcca BPMN"}),(0,l.jsx)("span",{className:"dak-component-badge",children:"\ud83d\udd04 Business Process"})]}),(0,l.jsx)("span",{className:"view-mode-badge",children:"\ud83d\udc41\ufe0f Read-Only View"})]}),(0,l.jsxs)("div",{className:"toolbar-right",children:[(0,l.jsxs)("button",{className:"action-btn secondary",onClick:()=>{A(!L)},title:"Toggle auto-hide headers/footers",children:[L?"\ud83d\udccc":"\ud83d\udc41\ufe0f"," Auto-Hide"]}),(0,l.jsxs)("button",{className:"action-btn secondary",onClick:()=>{const e=!S;z(e),e?document.body.classList.add("enhanced-fullwidth-active"):document.body.classList.remove("enhanced-fullwidth-active")},title:"Toggle enhanced fullwidth mode",children:[S?"\ud83d\udd33":"\u26f6"," Full Container"]}),(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>{c("/business-process-selection",{state:{profile:M,repository:y,component:N,selectedBranch:B}})},children:"\u2190 Back to List"}),k&&(0,l.jsx)("button",{className:"action-btn primary",onClick:()=>{var e;if(!k)return void alert("You need write permissions to edit BPMN files. Please check your GitHub token permissions.");const n=(null===(e=y.owner)||void 0===e?void 0:e.login)||y.full_name.split("/")[0],i=y.name,t=B?"/bpmn-editor/".concat(n,"/").concat(i,"/").concat(B):"/bpmn-editor/".concat(n,"/").concat(i);c(t,{state:{profile:M,repository:y,component:N,selectedFile:P,selectedBranch:B,mode:"edit"}})},children:"\u270f\ufe0f Edit"})]})]}),(0,l.jsxs)("div",{className:"diagram-container",children:[x?(0,l.jsxs)("div",{className:"loading-overlay",children:[(0,l.jsx)("div",{className:"spinner"}),(0,l.jsxs)("div",{className:"loading-info",children:[(0,l.jsx)("p",{children:"Loading BPMN diagram..."}),(0,l.jsxs)("p",{className:"loading-details",children:["Fetching ",P.name," from ",y.name]}),(0,l.jsxs)("div",{className:"loading-progress",children:[(0,l.jsx)("div",{className:"loading-step ".concat("initializing"===j?"active":"fetching"===j||"downloading"===j||"generating"===j||"validating"===j||"importing"===j||"centering"===j||"complete"===j?"complete":""),children:"Initializing viewer"}),(0,l.jsx)("div",{className:"loading-step ".concat("fetching"===j||"downloading"===j||"generating"===j?"active":"validating"===j||"importing"===j||"centering"===j||"complete"===j?"complete":""),children:"generating"===j?"Generating demo content":"Fetching BPMN file"}),(0,l.jsx)("div",{className:"loading-step ".concat("validating"===j?"active":"importing"===j||"centering"===j||"complete"===j?"complete":""),children:"Validating BPMN XML"}),(0,l.jsx)("div",{className:"loading-step ".concat("importing"===j?"active":"centering"===j||"complete"===j?"complete":""),children:"Importing diagram"}),(0,l.jsx)("div",{className:"loading-step ".concat("centering"===j?"active":"complete"===j?"complete":""),children:"Centering view"})]}),(0,l.jsx)("p",{className:"loading-hint",children:"This may take a few moments for large files or slow connections."})]})]}):E?(0,l.jsxs)("div",{className:"error-overlay",children:[(0,l.jsxs)("p",{children:["\u274c ",E]}),(0,l.jsxs)("div",{className:"error-actions",children:[(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>T(),children:"\ud83d\udd04 Retry"}),(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>c("/business-process-selection",{state:{profile:M,repository:y,component:N,selectedBranch:B}}),children:"\u2190 Back to List"})]})]}):null,(0,l.jsx)("div",{className:"bpmn-container",ref:m,style:{display:x||E?"none":"block",width:"100%",height:"100%"}})]}),(0,l.jsxs)("div",{className:"diagram-info",children:[(0,l.jsxs)("div",{className:"condensed-file-info",children:[(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83d\udcc1"}),(0,l.jsx)("span",{className:"value",children:(null===P||void 0===P?void 0:P.name)||"No file"})]}),(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83d\udccf"}),(0,l.jsx)("span",{className:"value",children:null!==P&&void 0!==P&&P.size?"".concat((P.size/1024).toFixed(1)," KB"):"N/A"})]}),(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83c\udf3f"}),(0,l.jsx)("span",{className:"value",children:B||"main"})]})]}),(0,l.jsxs)("div",{className:"condensed-view-mode",children:[(0,l.jsx)("span",{className:"condensed-access-badge ".concat(k?"write":"read"),children:k?"\u270f\ufe0f Edit":"\ud83d\udc41\ufe0f Read"}),(0,l.jsx)("span",{className:"condensed-info-item",children:(0,l.jsx)("span",{className:"value",children:S?"\u26f6 Full Container":L?"\ud83d\udc41\ufe0f Auto-Hide":"\ud83d\udcfa Fullwidth"})})]})]})]})})}):!D||u&&p&&g?(0,l.jsx)("div",{children:"Loading or redirecting..."}):(0,l.jsx)("div",{children:"Loading framework data..."})},d=()=>(0,l.jsx)(r.Mx,{pageName:"bpmn-viewer",children:(0,l.jsx)(c,{})})},96143:(e,n,i)=>{i.d(n,{Cq:()=>o,Ub:()=>a,_Q:()=>r});var t=i(57335);async function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,t.sN)())(e)}async function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,t.uW)())(e)}async function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,t.M3)())(e)}}}]);