{"version":3,"file":"static/js/703.4fc3bff0.chunk.js","mappings":"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","sources":["utils/navigationUtils.js","services/oauthDeviceFlowService.js","components/CollaborationModal.js","components/OAuthLogin.js","components/WelcomePage.js"],"sourcesContent":["/**\n * Utility functions for handling navigation with command-click support\n */\n\n/**\n * Detects if a click event should open in a new tab\n * @param {MouseEvent} event - The click event\n * @returns {boolean} - True if should open in new tab (Ctrl/Cmd+click)\n */\nexport const shouldOpenInNewTab = (event) => {\n  return !!(event?.ctrlKey || event?.metaKey); // Ctrl on Windows/Linux, Cmd on Mac\n};\n\n/**\n * Constructs a full URL from a relative path using the current base URL\n * @param {string} relativePath - The relative path (e.g., '/dashboard/user/repo')\n * @returns {string} - The full URL\n */\nexport const constructFullUrl = (relativePath) => {\n  const basePath = process.env.PUBLIC_URL || '';\n  const baseUrl = window.location.origin;\n  \n  // Remove leading slash from relativePath if present to avoid double slashes\n  const cleanPath = relativePath.startsWith('/') ? relativePath.slice(1) : relativePath;\n  \n  // Only add basePath if it's not empty\n  if (!basePath) {\n    return `${baseUrl}/${cleanPath}`;\n  }\n  \n  // Ensure basePath ends with slash for proper joining\n  const cleanBasePath = basePath.endsWith('/') ? basePath : basePath + '/';\n  \n  return `${baseUrl}${cleanBasePath}${cleanPath}`;\n};\n\n/**\n * Handles navigation with command-click support\n * @param {MouseEvent} event - The click event\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n */\nexport const handleNavigationClick = (event, path, navigate, state = null) => {\n  if (shouldOpenInNewTab(event)) {\n    // Open in new tab\n    const fullUrl = constructFullUrl(path);\n    window.open(fullUrl, '_blank', 'noopener,noreferrer');\n  } else {\n    // Navigate in same tab\n    if (state) {\n      navigate(path, { state });\n    } else {\n      navigate(path);\n    }\n  }\n};\n\n/**\n * Creates a click handler that supports command-click for new tabs\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n * @returns {Function} - Click handler function\n */\nexport const createNavigationClickHandler = (path, navigate, state = null) => {\n  return (event) => {\n    handleNavigationClick(event, path, navigate, state);\n  };\n};","/**\n * GitHub OAuth Device Flow Service\n * \n * Implements GitHub's Device Flow (RFC 8628) for frontend-only OAuth authentication.\n * This service handles the complete Device Flow process:\n * 1. Request device and user codes from GitHub\n * 2. Display verification URL and user code to user\n * 3. Poll GitHub for access token after user authorization\n * 4. Store and validate OAuth tokens\n * \n * Features:\n * - 100% frontend implementation (no backend required)\n * - CORS compliant - all requests go directly to GitHub\n * - Uses only public OAuth client_id (no secrets)\n * - Secure token storage integration\n * - Rate limit handling and exponential backoff\n */\n\nimport logger from '../utils/logger';\nimport secureTokenStorage from './secureTokenStorage';\n\nclass OAuthDeviceFlowService {\n  constructor() {\n    this.logger = logger.getLogger('OAuthDeviceFlowService');\n    \n    // GitHub OAuth Device Flow endpoints (CORS enabled)\n    this.deviceCodeEndpoint = 'https://github.com/login/device/code';\n    this.tokenEndpoint = 'https://github.com/login/oauth/access_token';\n    this.verificationUri = 'https://github.com/login/device';\n    \n    // OAuth client configuration\n    this.clientId = process.env.REACT_APP_GITHUB_OAUTH_CLIENT_ID || '';\n    \n    // Device flow state\n    this.deviceCode = null;\n    this.userCode = null;\n    this.verificationUrl = null;\n    this.interval = 5; // Default polling interval in seconds\n    this.expiresIn = 900; // Default expiration time in seconds\n    this.pollingActive = false;\n    this.pollingTimeoutId = null;\n    \n    this.logger.debug('OAuthDeviceFlowService instance created', {\n      hasClientId: !!this.clientId,\n      clientIdMask: this.clientId ? `${this.clientId.substring(0, 8)}...` : 'none'\n    });\n  }\n\n  /**\n   * Check if OAuth Device Flow is properly configured\n   * @returns {object} Configuration status\n   */\n  checkConfiguration() {\n    const isConfigured = !!this.clientId;\n    \n    if (!isConfigured) {\n      this.logger.warn('OAuth Device Flow not configured - missing client ID');\n    }\n    \n    return {\n      isConfigured,\n      clientId: this.clientId ? `${this.clientId.substring(0, 8)}...` : null,\n      hasClientId: !!this.clientId\n    };\n  }\n\n  /**\n   * Step 1: Request device and user codes from GitHub\n   * @returns {object} Device authorization response\n   */\n  async requestDeviceCode() {\n    this.logger.debug('Requesting device code from GitHub');\n    \n    if (!this.clientId) {\n      throw new Error('OAuth client ID not configured. Please set REACT_APP_GITHUB_OAUTH_CLIENT_ID environment variable.');\n    }\n\n    const requestBody = new URLSearchParams({\n      client_id: this.clientId,\n      scope: 'repo read:org' // Standard scopes for SGEX functionality\n    });\n\n    try {\n      const response = await fetch(this.deviceCodeEndpoint, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: requestBody\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Device code request failed: ${response.status} ${response.statusText} - ${errorText}`);\n      }\n\n      const data = await response.json();\n      \n      // Store device flow data\n      this.deviceCode = data.device_code;\n      this.userCode = data.user_code;\n      this.verificationUrl = data.verification_uri || this.verificationUri;\n      this.interval = data.interval || 5;\n      this.expiresIn = data.expires_in || 900;\n\n      this.logger.debug('Device code received successfully', {\n        userCode: this.userCode,\n        verificationUrl: this.verificationUrl,\n        interval: this.interval,\n        expiresIn: this.expiresIn\n      });\n\n      return {\n        userCode: this.userCode,\n        verificationUrl: this.verificationUrl,\n        verificationUrlComplete: `${this.verificationUrl}?code=${this.userCode}`,\n        interval: this.interval,\n        expiresIn: this.expiresIn\n      };\n    } catch (error) {\n      this.logger.error('Failed to request device code', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Step 2: Poll GitHub for access token after user authorization\n   * @param {function} onUpdate - Callback for polling status updates\n   * @returns {Promise<object>} Token response or null if expired/cancelled\n   */\n  async pollForToken(onUpdate = () => {}) {\n    this.logger.debug('Starting token polling');\n    \n    if (!this.deviceCode) {\n      throw new Error('No device code available. Call requestDeviceCode() first.');\n    }\n\n    this.pollingActive = true;\n    const startTime = Date.now();\n    const expirationTime = startTime + (this.expiresIn * 1000);\n    let attempt = 0;\n    let currentInterval = this.interval;\n\n    const poll = async () => {\n      if (!this.pollingActive) {\n        this.logger.debug('Polling cancelled by user');\n        return null;\n      }\n\n      if (Date.now() > expirationTime) {\n        this.logger.warn('Device code expired during polling');\n        this.pollingActive = false;\n        onUpdate({ status: 'expired', message: 'Authorization code expired. Please start over.' });\n        return null;\n      }\n\n      attempt++;\n      this.logger.debug(`Polling attempt ${attempt}`, { interval: currentInterval });\n      \n      onUpdate({ \n        status: 'polling', \n        message: 'Waiting for authorization...', \n        attempt,\n        timeRemaining: Math.ceil((expirationTime - Date.now()) / 1000)\n      });\n\n      try {\n        const requestBody = new URLSearchParams({\n          client_id: this.clientId,\n          device_code: this.deviceCode,\n          grant_type: 'urn:ietf:params:oauth:grant-type:device_code'\n        });\n\n        const response = await fetch(this.tokenEndpoint, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: requestBody\n        });\n\n        const data = await response.json();\n\n        if (response.ok && data.access_token) {\n          // Success! We have an access token\n          this.pollingActive = false;\n          \n          const tokenData = {\n            access_token: data.access_token,\n            token_type: data.token_type || 'bearer',\n            scope: data.scope || 'repo read:org'\n          };\n\n          this.logger.debug('Access token received successfully', {\n            tokenType: tokenData.token_type,\n            scope: tokenData.scope,\n            tokenMask: secureTokenStorage.maskToken(tokenData.access_token)\n          });\n\n          onUpdate({ status: 'success', message: 'Authorization successful!' });\n          return tokenData;\n        }\n\n        // Handle specific error cases\n        if (data.error) {\n          switch (data.error) {\n            case 'authorization_pending':\n              // User hasn't authorized yet, continue polling\n              this.logger.debug('Authorization pending, continuing to poll');\n              break;\n              \n            case 'slow_down':\n              // GitHub is asking us to slow down\n              currentInterval = Math.min(currentInterval * 2, 60); // Exponential backoff, max 60s\n              this.logger.debug('Rate limited, slowing down polling', { newInterval: currentInterval });\n              onUpdate({ \n                status: 'slow_down', \n                message: 'Rate limited, slowing down polling...', \n                interval: currentInterval \n              });\n              break;\n              \n            case 'expired_token':\n              this.logger.warn('Device code expired');\n              this.pollingActive = false;\n              onUpdate({ status: 'expired', message: 'Authorization code expired. Please start over.' });\n              return null;\n              \n            case 'access_denied':\n              this.logger.warn('User denied authorization');\n              this.pollingActive = false;\n              onUpdate({ status: 'denied', message: 'Authorization was denied by user.' });\n              return null;\n              \n            default:\n              this.logger.error('Unknown error during token polling', { error: data.error, description: data.error_description });\n              this.pollingActive = false;\n              onUpdate({ status: 'error', message: `Authorization error: ${data.error_description || data.error}` });\n              return null;\n          }\n        }\n\n        // Continue polling\n        if (this.pollingActive) {\n          this.pollingTimeoutId = setTimeout(poll, currentInterval * 1000);\n        }\n\n      } catch (error) {\n        this.logger.error('Error during token polling', { error: error.message, attempt });\n        \n        // On network errors, continue polling with exponential backoff\n        currentInterval = Math.min(currentInterval * 1.5, 30);\n        onUpdate({ \n          status: 'error', \n          message: `Network error, retrying in ${currentInterval}s...`, \n          interval: currentInterval \n        });\n        \n        if (this.pollingActive) {\n          this.pollingTimeoutId = setTimeout(poll, currentInterval * 1000);\n        }\n      }\n    };\n\n    // Start polling\n    return poll();\n  }\n\n  /**\n   * Cancel active polling\n   */\n  cancelPolling() {\n    this.logger.debug('Cancelling OAuth polling');\n    this.pollingActive = false;\n    \n    if (this.pollingTimeoutId) {\n      clearTimeout(this.pollingTimeoutId);\n      this.pollingTimeoutId = null;\n    }\n  }\n\n  /**\n   * Complete OAuth Device Flow process\n   * @param {function} onUpdate - Callback for status updates\n   * @returns {Promise<object>} Complete authentication result\n   */\n  async authenticateWithDeviceFlow(onUpdate = () => {}) {\n    this.logger.debug('Starting complete OAuth Device Flow authentication');\n    \n    try {\n      // Step 1: Get device code\n      onUpdate({ status: 'requesting_code', message: 'Requesting authorization code...' });\n      const deviceAuth = await this.requestDeviceCode();\n      \n      // Step 2: Show user the verification URL and code\n      onUpdate({ \n        status: 'awaiting_authorization', \n        message: 'Please authorize the application in your browser',\n        deviceAuth \n      });\n      \n      // Step 3: Poll for token\n      const tokenData = await this.pollForToken(onUpdate);\n      \n      if (!tokenData) {\n        return { success: false, error: 'Authorization was not completed' };\n      }\n      \n      // Step 4: Store token securely\n      const stored = secureTokenStorage.storeToken(tokenData.access_token);\n      if (!stored) {\n        this.logger.error('Failed to store OAuth token securely');\n        return { success: false, error: 'Failed to store authentication token' };\n      }\n      \n      this.logger.debug('OAuth Device Flow authentication completed successfully');\n      \n      return {\n        success: true,\n        token: tokenData.access_token,\n        tokenType: 'oauth',\n        scope: tokenData.scope\n      };\n      \n    } catch (error) {\n      this.logger.error('OAuth Device Flow authentication failed', { error: error.message });\n      this.cancelPolling();\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Check if OAuth Device Flow is supported by the browser\n   * @returns {boolean} True if supported\n   */\n  static isSupported() {\n    return !!(window.fetch && window.URLSearchParams && window.Promise);\n  }\n\n  /**\n   * Get current polling status\n   * @returns {object} Polling status information\n   */\n  getPollingStatus() {\n    return {\n      isPolling: this.pollingActive,\n      hasDeviceCode: !!this.deviceCode,\n      userCode: this.userCode,\n      verificationUrl: this.verificationUrl,\n      interval: this.interval\n    };\n  }\n\n  /**\n   * Clear device flow state\n   */\n  reset() {\n    this.logger.debug('Resetting OAuth Device Flow state');\n    this.cancelPolling();\n    this.deviceCode = null;\n    this.userCode = null;\n    this.verificationUrl = null;\n    this.interval = 5;\n    this.expiresIn = 900;\n  }\n}\n\n// Create singleton instance\nconst oauthDeviceFlowService = new OAuthDeviceFlowService();\n\n// Export both the class and the singleton\nexport { OAuthDeviceFlowService };\nexport default oauthDeviceFlowService;","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useThemeImage from '../hooks/useThemeImage';\nimport { ALT_TEXT_KEYS, getAltText } from '../utils/imageAltTextHelper';\n\nconst CollaborationModal = ({ onClose }) => {\n  const { t } = useTranslation();\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // Theme-aware collaboration image\n  const collaborationImage = useThemeImage('collaboration.png');\n\n  const slides = [\n    {\n      title: \"Our Mission\",\n      content: (\n        <div className=\"slide-content\">\n          <p>\n            SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits (DAKs).\n          </p>\n          <p>\n            Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations through:\n          </p>\n          <ul>\n            <li><strong>Collaborative Development:</strong> Every contribution matters, whether reporting bugs, testing features, or sharing feedback</li>\n            <li><strong>AI-Powered Assistance:</strong> Hybrid approach combining human insight with AI coding agents for efficient development</li>\n            <li><strong>Community-Driven Evolution:</strong> Real-time improvement through collaborative discussion and iterative refinement</li>\n            <li><strong>Real-World Impact:</strong> Building tools that help healthcare workers worldwide deliver better patient care</li>\n          </ul>\n        </div>\n      )\n    },\n    {\n      title: \"How to Contribute\",\n      content: (\n        <div className=\"slide-content\">\n          <p>\n            Contributing to SGEX is a collaborative journey that combines human creativity with AI assistance:\n          </p>\n          <div className=\"contribution-steps\">\n            <div className=\"step\">\n              <span className=\"step-number\">1</span>\n              <div className=\"step-content\">\n                <h4>🐛 Start with Feedback</h4>\n                <p>Report bugs, request features, or suggest improvements through our issue tracker</p>\n              </div>\n            </div>\n            <div className=\"step\">\n              <span className=\"step-number\">2</span>\n              <div className=\"step-content\">\n                <h4>🤖 AI-Powered Development</h4>\n                <p>Issues may be assigned to coding agents for initial analysis and implementation</p>\n              </div>\n            </div>\n            <div className=\"step\">\n              <span className=\"step-number\">3</span>\n              <div className=\"step-content\">\n                <h4>🌟 Community Collaboration</h4>\n                <p>The community reviews, tests, and refines changes through collaborative discussion</p>\n              </div>\n            </div>\n            <div className=\"step\">\n              <span className=\"step-number\">4</span>\n              <div className=\"step-content\">\n                <h4>🚀 Real-Time Evolution</h4>\n                <p>The workbench continuously evolves based on actual usage and feedback from healthcare professionals</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: \"Get Started\",\n      content: (\n        <div className=\"slide-content\">\n          <div className=\"collaboration-image\">\n            <img src={collaborationImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_COLLABORATION, 'Collaboration in SGEX')} />\n          </div>\n          <p>\n            Every contribution helps improve digital health tools for healthcare workers worldwide. Whether you're reporting a bug, testing a feature, or sharing feedback, you're part of building the future of digital health tooling.\n          </p>\n          <div className=\"get-started-actions\">\n            <h4>Ready to contribute?</h4>\n            <button \n              className=\"action-link primary\"\n              onClick={() => {\n                // Navigate to current site instead of external URL\n                window.location.href = window.location.origin + '/sgex/';\n              }}\n            >\n              View Main Site\n            </button>\n            <p className=\"or-text\">or</p>\n            <button \n              className=\"action-link secondary\"\n              onClick={onClose}\n            >\n              Use the help mascot on any page to quickly report issues\n            </button>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: \"How to Pronounce\",\n      content: (\n        <div className=\"slide-content\">\n          <div className=\"pronunciation-image\">\n            <img \n              src=\"https://github.com/user-attachments/assets/ac49bc04-a463-476e-8f2c-56a89e4035eb\" \n              alt=\"How to Pronounce SGeX\" \n            />\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);\n  };\n\n  const goToSlide = (index) => {\n    setCurrentSlide(index);\n  };\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"collaboration-modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"collaboration-modal\">\n        <div className=\"modal-header\">\n          <h2>{slides[currentSlide].title}</h2>\n          <button className=\"close-button\" onClick={onClose}>\n            ×\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"slideshow-container\">\n            <div className=\"slide active\">\n              {slides[currentSlide].content}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-footer\">\n          <div className=\"slide-navigation\">\n            <button \n              className=\"nav-button prev\" \n              onClick={prevSlide}\n              disabled={currentSlide === 0}\n            >\n              ‹ Previous\n            </button>\n            \n            <div className=\"slide-indicators\">\n              {slides.map((_, index) => (\n                <button\n                  key={index}\n                  className={`indicator ${currentSlide === index ? 'active' : ''}`}\n                  onClick={() => goToSlide(index)}\n                />\n              ))}\n            </div>\n            \n            <button \n              className=\"nav-button next\" \n              onClick={nextSlide}\n              disabled={currentSlide === slides.length - 1}\n            >\n              Next ›\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CollaborationModal;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport oauthDeviceFlowService from '../services/oauthDeviceFlowService';\nimport logger from '../utils/logger';\nimport './OAuthLogin.css';\n\nconst OAuthLogin = ({ onAuthSuccess, onAuthCancel }) => {\n  const { t } = useTranslation();\n  const [authState, setAuthState] = useState('idle'); // idle, requesting, awaiting, polling, success, error\n  const [deviceAuth, setDeviceAuth] = useState(null);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [error, setError] = useState('');\n  const [pollingInfo, setPollingInfo] = useState({});\n  const [timeRemaining, setTimeRemaining] = useState(0);\n  const componentLogger = logger.getLogger('OAuthLogin');\n\n  useEffect(() => {\n    componentLogger.componentMount({ hasOnAuthSuccess: !!onAuthSuccess });\n    return () => {\n      componentLogger.componentUnmount();\n      // Cancel any ongoing polling when component unmounts\n      oauthDeviceFlowService.cancelPolling();\n    };\n  }, [componentLogger, onAuthSuccess]);\n\n  // Update status based on OAuth service updates\n  const handleOAuthUpdate = useCallback((update) => {\n    componentLogger.debug('OAuth status update', update);\n    \n    setPollingInfo(update);\n    \n    switch (update.status) {\n      case 'requesting_code':\n        setAuthState('requesting');\n        setStatusMessage(update.message);\n        setError('');\n        break;\n        \n      case 'awaiting_authorization':\n        setAuthState('awaiting');\n        setDeviceAuth(update.deviceAuth);\n        setStatusMessage(update.message);\n        setTimeRemaining(update.deviceAuth?.expiresIn || 900);\n        break;\n        \n      case 'polling':\n        setAuthState('polling');\n        setStatusMessage(`${update.message} (Attempt ${update.attempt})`);\n        setTimeRemaining(update.timeRemaining || 0);\n        break;\n        \n      case 'slow_down':\n        setStatusMessage(`${update.message} (Next check in ${update.interval}s)`);\n        break;\n        \n      case 'success':\n        setAuthState('success');\n        setStatusMessage(update.message);\n        break;\n        \n      case 'expired':\n        setAuthState('error');\n        setError(update.message);\n        break;\n        \n      case 'denied':\n        setAuthState('error');\n        setError(update.message);\n        break;\n        \n      case 'error':\n        setError(update.message);\n        break;\n        \n      default:\n        componentLogger.warn('Unknown OAuth update status', update);\n    }\n  }, [componentLogger]);\n\n  // Countdown timer for expiration\n  useEffect(() => {\n    if (authState === 'awaiting' || authState === 'polling') {\n      const timer = setInterval(() => {\n        setTimeRemaining(prev => Math.max(0, prev - 1));\n      }, 1000);\n      \n      return () => clearInterval(timer);\n    }\n  }, [authState]);\n\n  // Start OAuth Device Flow authentication\n  const handleStartOAuth = async () => {\n    componentLogger.userAction('OAuth authentication started');\n    setError('');\n    setAuthState('requesting');\n    \n    try {\n      const result = await oauthDeviceFlowService.authenticateWithDeviceFlow(handleOAuthUpdate);\n      \n      if (result.success) {\n        componentLogger.auth('OAuth authentication successful');\n        setAuthState('success');\n        \n        // Call success callback with token info\n        if (onAuthSuccess) {\n          onAuthSuccess({\n            token: result.token,\n            tokenType: result.tokenType,\n            scope: result.scope,\n            authMethod: 'oauth-device-flow'\n          });\n        }\n      } else {\n        componentLogger.warn('OAuth authentication failed', { error: result.error });\n        setAuthState('error');\n        setError(result.error || 'Authentication failed');\n      }\n    } catch (error) {\n      componentLogger.error('OAuth authentication error', { error: error.message });\n      setAuthState('error');\n      setError(error.message);\n    }\n  };\n\n  // Cancel OAuth authentication\n  const handleCancel = () => {\n    componentLogger.userAction('OAuth authentication cancelled');\n    oauthDeviceFlowService.cancelPolling();\n    oauthDeviceFlowService.reset();\n    setAuthState('idle');\n    setDeviceAuth(null);\n    setStatusMessage('');\n    setError('');\n    \n    if (onAuthCancel) {\n      onAuthCancel();\n    }\n  };\n\n  // Reset to try again\n  const handleReset = () => {\n    componentLogger.userAction('OAuth authentication reset');\n    oauthDeviceFlowService.reset();\n    setAuthState('idle');\n    setDeviceAuth(null);\n    setStatusMessage('');\n    setError('');\n  };\n\n  // Copy code to clipboard\n  const handleCopyCode = async () => {\n    if (deviceAuth?.userCode) {\n      try {\n        await navigator.clipboard.writeText(deviceAuth.userCode);\n        componentLogger.userAction('User code copied to clipboard');\n        // Could show a temporary \"Copied!\" message here\n      } catch (error) {\n        componentLogger.warn('Failed to copy code to clipboard', { error: error.message });\n      }\n    }\n  };\n\n  // Open verification URL in new tab\n  const handleOpenGitHub = () => {\n    if (deviceAuth?.verificationUrlComplete) {\n      window.open(deviceAuth.verificationUrlComplete, '_blank', 'noopener,noreferrer');\n      componentLogger.userAction('Verification URL opened');\n    }\n  };\n\n  // Format time remaining\n  const formatTimeRemaining = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Check if OAuth is configured\n  const config = oauthDeviceFlowService.checkConfiguration();\n  \n  if (!config.isConfigured) {\n    return (\n      <div className=\"oauth-login oauth-login--not-configured\">\n        <div className=\"oauth-login__header\">\n          <h3>GitHub OAuth Authentication</h3>\n        </div>\n        <div className=\"oauth-login__content\">\n          <div className=\"oauth-login__error\">\n            <p>OAuth authentication is not configured.</p>\n            <p>Please contact the administrator to set up OAuth client credentials.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"oauth-login\">\n      <div className=\"oauth-login__header\">\n        <h3>GitHub OAuth Authentication</h3>\n        <p className=\"oauth-login__description\">\n          Authenticate with GitHub using OAuth for the best experience. \n          This provides higher rate limits and seamless access to your repositories.\n        </p>\n      </div>\n\n      <div className=\"oauth-login__content\">\n        {authState === 'idle' && (\n          <div className=\"oauth-login__start\">\n            <button \n              className=\"oauth-login__button oauth-login__button--primary\"\n              onClick={handleStartOAuth}\n              type=\"button\"\n            >\n              🔐 Authenticate with GitHub OAuth\n            </button>\n            <p className=\"oauth-login__help\">\n              This will open GitHub in a new tab for secure authentication.\n              No passwords or tokens needed!\n            </p>\n          </div>\n        )}\n\n        {authState === 'requesting' && (\n          <div className=\"oauth-login__requesting\">\n            <div className=\"oauth-login__spinner\"></div>\n            <p>{statusMessage || 'Requesting authorization code...'}</p>\n          </div>\n        )}\n\n        {(authState === 'awaiting' || authState === 'polling') && deviceAuth && (\n          <div className=\"oauth-login__awaiting\">\n            <div className=\"oauth-login__instructions\">\n              <h4>Complete Authorization in GitHub</h4>\n              <div className=\"oauth-login__steps\">\n                <div className=\"oauth-login__step\">\n                  <span className=\"oauth-login__step-number\">1</span>\n                  <div className=\"oauth-login__step-content\">\n                    <p>Visit GitHub and enter this code:</p>\n                    <div className=\"oauth-login__code-container\">\n                      <code className=\"oauth-login__user-code\">{deviceAuth.userCode}</code>\n                      <button \n                        className=\"oauth-login__copy-button\"\n                        onClick={handleCopyCode}\n                        title=\"Copy code to clipboard\"\n                        type=\"button\"\n                      >\n                        📋\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"oauth-login__step\">\n                  <span className=\"oauth-login__step-number\">2</span>\n                  <div className=\"oauth-login__step-content\">\n                    <p>Click this button to open GitHub:</p>\n                    <button \n                      className=\"oauth-login__button oauth-login__button--github\"\n                      onClick={handleOpenGitHub}\n                      type=\"button\"\n                    >\n                      🚀 Open GitHub Authorization\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"oauth-login__status\">\n              <div className=\"oauth-login__waiting\">\n                <div className=\"oauth-login__spinner oauth-login__spinner--small\"></div>\n                <span>{statusMessage}</span>\n              </div>\n              \n              {timeRemaining > 0 && (\n                <div className=\"oauth-login__timer\">\n                  Time remaining: {formatTimeRemaining(timeRemaining)}\n                </div>\n              )}\n            </div>\n\n            <div className=\"oauth-login__actions\">\n              <button \n                className=\"oauth-login__button oauth-login__button--secondary\"\n                onClick={handleCancel}\n                type=\"button\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        )}\n\n        {authState === 'success' && (\n          <div className=\"oauth-login__success\">\n            <div className=\"oauth-login__success-icon\">✅</div>\n            <h4>Authentication Successful!</h4>\n            <p>You are now authenticated with GitHub OAuth.</p>\n          </div>\n        )}\n\n        {authState === 'error' && (\n          <div className=\"oauth-login__error\">\n            <div className=\"oauth-login__error-icon\">❌</div>\n            <h4>Authentication Failed</h4>\n            <p>{error}</p>\n            <div className=\"oauth-login__actions\">\n              <button \n                className=\"oauth-login__button oauth-login__button--primary\"\n                onClick={handleReset}\n                type=\"button\"\n              >\n                Try Again\n              </button>\n              <button \n                className=\"oauth-login__button oauth-login__button--secondary\"\n                onClick={handleCancel}\n                type=\"button\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        )}\n\n        {error && authState !== 'error' && (\n          <div className=\"oauth-login__warning\">\n            <p>{error}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OAuthLogin;","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport githubService from '../services/githubService';\nimport oauthDeviceFlowService from '../services/oauthDeviceFlowService';\nimport CollaborationModal from './CollaborationModal';\nimport HelpModal from './HelpModal';\nimport OAuthLogin from './OAuthLogin';\nimport helpContentService from '../services/helpContentService';\nimport { PageLayout } from './framework';\nimport { handleNavigationClick } from '../utils/navigationUtils';\nimport useThemeImage from '../hooks/useThemeImage';\nimport { ALT_TEXT_KEYS, getAltText } from '../utils/imageAltTextHelper';\n\nconst WelcomePage = () => {\n  const { t } = useTranslation();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showCollaborationModal, setShowCollaborationModal] = useState(false);\n  const [showPATHelp, setShowPATHelp] = useState(false);\n  const [warningMessage, setWarningMessage] = useState(null);\n  const [tokenName, setTokenName] = useState('');\n  const [patToken, setPatToken] = useState('');\n  const [patError, setPATError] = useState('');\n  const [patLoading, setPATLoading] = useState(false);\n  const [authMethod, setAuthMethod] = useState('oauth'); // 'oauth' or 'pat'\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Theme-aware image paths\n  const mascotImage = useThemeImage('sgex-mascot.png');\n  const authoringImage = useThemeImage('authoring.png');\n  const collaborationImage = useThemeImage('collaboration.png');\n\n  // Initial authentication check - runs once on mount\n  useEffect(() => {\n    const initializeAuth = () => {\n      // Check if user is already authenticated from previous session\n      const token = sessionStorage.getItem('github_token') || localStorage.getItem('github_token');\n      if (token) {\n        const success = githubService.authenticate(token);\n        if (success) {\n          setIsAuthenticated(true);\n        } else {\n          sessionStorage.removeItem('github_token');\n          localStorage.removeItem('github_token');\n        }\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // Listen for authentication state changes (for logout)\n  useEffect(() => {\n    const checkAuthState = () => {\n      setIsAuthenticated(githubService.isAuthenticated);\n    };\n\n    // Check periodically for auth state changes\n    const interval = setInterval(checkAuthState, 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Handle warning message from navigation state\n  useEffect(() => {\n    if (location.state?.warningMessage) {\n      setWarningMessage(location.state.warningMessage);\n      // Clear the warning message from navigation state to prevent it from persisting\n      navigate(location.pathname, { replace: true, state: {} });\n    }\n  }, [location.state, navigate, location.pathname]);\n\n  const handleAuthSuccess = (token, octokitInstance, username) => {\n    // Store token in session storage for this session\n    sessionStorage.setItem('github_token', token);\n    \n    // Store username if provided for better UX\n    if (username) {\n      sessionStorage.setItem('github_username', username);\n    }\n    \n    // Use the provided Octokit instance directly\n    githubService.authenticateWithOctokit(octokitInstance);\n    \n    setIsAuthenticated(true);\n  };\n\n  const handleAuthoringClick = (event) => {\n    handleNavigationClick(event, '/select_profile', navigate);\n  };\n\n  const handleDemoMode = (event) => {\n    // Create a mock profile for demonstration purposes\n    const demoProfile = {\n      login: 'demo-user',\n      name: 'Demo User',\n      avatar_url: 'https://github.com/github.png',\n      type: 'User',\n      isDemo: true\n    };\n    \n    // Navigate directly to DAK selection with edit action to show enhanced scanning\n    const navigationState = {\n      profile: demoProfile,\n      action: 'edit'\n    };\n    \n    handleNavigationClick(event, `/dak-selection/${demoProfile.login}`, navigate, navigationState);\n  };\n\n  const handleDismissWarning = () => {\n    setWarningMessage(null);\n  };\n\n  const handleCollaborationOpen = () => {\n    setShowCollaborationModal(true);\n  };\n\n  const handleCollaborationClose = () => {\n    setShowCollaborationModal(false);\n  };\n\n  const handlePATSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!patToken.trim()) {\n      setPATError(\"Please enter a GitHub Personal Access Token\");\n      return;\n    }\n\n    setPATLoading(true);\n    setPATError('');\n    \n    try {\n      // Test the token by creating an Octokit instance and making a test request\n      const { Octokit } = await import('@octokit/rest');\n      const octokit = new Octokit({ auth: patToken.trim() });\n      \n      // Test the token by fetching user info\n      const userResponse = await octokit.rest.users.getAuthenticated();\n      \n      // Call success callback with token and octokit instance\n      handleAuthSuccess(patToken.trim(), octokit, userResponse.data.login);\n    } catch (err) {\n      console.error('PAT authentication failed:', err);\n      \n      if (err.status === 401) {\n        setPATError('Invalid Personal Access Token. Please check your token and try again.');\n      } else if (err.status === 403) {\n        setPATError(\"Token doesn't have sufficient permissions. Please ensure your token has 'repo' and 'read:org' scopes.\");\n      } else {\n        setPATError('Authentication failed. Please check your connection and try again.');\n      }\n    } finally {\n      setPATLoading(false);\n    }\n  };\n\n  const handleTokenNameChange = (e) => {\n    setTokenName(e.target.value);\n    if (patError) setPATError(''); // Clear error when user starts typing\n  };\n\n  const handlePATTokenChange = (e) => {\n    setPatToken(e.target.value);\n    if (patError) setPATError(''); // Clear error when user starts typing\n  };\n\n  // Handle OAuth authentication success\n  const handleOAuthSuccess = (authData) => {\n    // OAuth authentication successful - use token to authenticate\n    import('@octokit/rest').then(({ Octokit }) => {\n      const octokit = new Octokit({ auth: authData.token });\n      githubService.authenticateWithOctokit(octokit);\n      githubService.authenticate(authData.token);\n      setIsAuthenticated(true);\n      \n      // Navigate to authoring interface\n      handleAuthoringClick();\n    });\n  };\n\n  // Handle OAuth authentication cancellation\n  const handleOAuthCancel = () => {\n    // OAuth cancelled - stay on current page\n  };\n\n  return (\n    <PageLayout pageName=\"welcome\" showBreadcrumbs={false}>\n      <div className=\"welcome-page-content\">\n        {warningMessage && (\n          <div className=\"warning-message\">\n            <div className=\"warning-content\">\n              <div className=\"warning-header\">\n                <span className=\"warning-icon\">⚠️</span>\n                <span className=\"warning-text\">{warningMessage}</span>\n              </div>\n              <button \n                className=\"warning-dismiss\" \n                onClick={handleDismissWarning}\n                aria-label=\"Dismiss warning\"\n              >\n                × Dismiss\n              </button>\n            </div>\n          </div>\n        )}\n\n        <div className=\"welcome-hero\">\n          <div className=\"welcome-intro\">\n            <div className=\"welcome-mascot\">\n              <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Workbench Helper')} />\n            </div>\n            <div className=\"welcome-text\">\n              <h1>SGEX Workbench</h1>\n              <h2>WHO SMART Guidelines Exchange</h2>\n              <p className=\"mission-statement\">\n                SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits (DAKs). Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"welcome-cards\">\n          <div className=\"card-grid\">\n            {/* Authoring Card - Always show */}\n            <button \n              className=\"action-card authoring-card\" \n              onClick={handleAuthoringClick}\n              onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && handleAuthoringClick()}\n            >\n              <div className=\"card-icon\">\n                <img src={authoringImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_AUTHORING, 'Authoring')} />\n              </div>\n              <p>Create, edit, or fork WHO SMART Guidelines Digital Adaptation Kits.</p>\n            </button>\n\n            {/* Authentication + Demo Card (Middle) - Only show when not authenticated */}\n            {!isAuthenticated && (\n              <div className=\"action-card auth-demo-card\">\n                {/* Authentication Method Selection */}\n                <div className=\"auth-method-selector\">\n                  <button\n                    className={`auth-method-btn ${authMethod === 'oauth' ? 'active' : ''}`}\n                    onClick={() => setAuthMethod('oauth')}\n                    type=\"button\"\n                  >\n                    🔐 OAuth (Recommended)\n                  </button>\n                  <button\n                    className={`auth-method-btn ${authMethod === 'pat' ? 'active' : ''}`}\n                    onClick={() => setAuthMethod('pat')}\n                    type=\"button\"\n                  >\n                    🔑 Personal Access Token\n                  </button>\n                </div>\n\n                {/* OAuth Authentication */}\n                {authMethod === 'oauth' && (\n                  <div className=\"oauth-section\">\n                    <OAuthLogin \n                      onAuthSuccess={handleOAuthSuccess}\n                      onAuthCancel={handleOAuthCancel}\n                    />\n                  </div>\n                )}\n\n                {/* PAT Authentication */}\n                {authMethod === 'pat' && (\n                  <div className=\"pat-section\">\n                    <h4>Quick PAT Login</h4>\n                    <form onSubmit={handlePATSubmit} className=\"pat-form\">\n                      <div className=\"form-group\">\n                        <input\n                          type=\"text\"\n                          value={tokenName}\n                          onChange={handleTokenNameChange}\n                          placeholder=\"Token name\"\n                          className=\"token-name-input\"\n                          disabled={patLoading}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"password\"\n                          value={patToken}\n                          onChange={handlePATTokenChange}\n                          placeholder=\"ghp_xxxxxxxxxxxxxxxxxxxx\"\n                          className={`token-input ${patError ? 'error' : ''}`}\n                          disabled={patLoading}\n                        />\n                      </div>\n                      <button \n                        type=\"submit\" \n                        className=\"pat-login-btn\" \n                        disabled={patLoading || !patToken.trim()}\n                      >\n                        {patLoading ? 'Signing In...' : '🔑 Sign In'}\n                      </button>\n                    </form>\n                    {patError && <div className=\"pat-error\">{patError}</div>}\n                    <div className=\"pat-help-link\">\n                      <button \n                        type=\"button\"\n                        className=\"pat-help-btn\" \n                        onClick={() => setShowPATHelp(true)}\n                      >\n                        📖 Help creating a PAT\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {/* Demo Section */}\n                <div className=\"demo-section\">\n                  <h4>Want to try without signing in?</h4>\n                  <button onClick={handleDemoMode} className=\"demo-btn\">\n                    🎭 Try Demo Mode\n                  </button>\n                  <p className=\"demo-note\">\n                    Demo mode showcases the enhanced DAK scanning display with mock data.\n                  </p>\n                </div>\n              </div>\n            )}\n\n            {/* Collaboration Card */}\n            <button \n              className=\"action-card collaboration-card\" \n              onClick={handleCollaborationOpen}\n              onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && handleCollaborationOpen()}\n            >\n              <div className=\"card-icon\">\n                <img src={collaborationImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_COLLABORATION, 'Collaboration')} />\n              </div>\n              <p>Learn about our mission, how to contribute, and join our community-driven development process.</p>\n            </button>\n          </div>\n        </div>\n\n        {/* Collaboration Modal */}\n        {showCollaborationModal && (\n          <CollaborationModal onClose={handleCollaborationClose} />\n        )}\n\n        {/* PAT Help Modal */}\n        {showPATHelp && (\n          <HelpModal\n            helpTopic={helpContentService.getHelpTopic('github-pat-setup')}\n            contextData={{ pageId: 'welcome' }}\n            onClose={() => setShowPATHelp(false)}\n          />\n        )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default WelcomePage;"],"names":["handleNavigationClick","event","path","navigate","state","arguments","length","undefined","ctrlKey","metaKey","shouldOpenInNewTab","fullUrl","relativePath","basePath","process","baseUrl","window","location","origin","cleanPath","startsWith","slice","concat","cleanBasePath","endsWith","constructFullUrl","open","constructor","this","logger","getLogger","deviceCodeEndpoint","tokenEndpoint","verificationUri","clientId","deviceCode","userCode","verificationUrl","interval","expiresIn","pollingActive","pollingTimeoutId","debug","hasClientId","clientIdMask","substring","checkConfiguration","isConfigured","warn","requestDeviceCode","Error","requestBody","URLSearchParams","client_id","scope","response","fetch","method","headers","body","ok","errorText","text","status","statusText","data","json","device_code","user_code","verification_uri","expires_in","verificationUrlComplete","error","message","pollForToken","onUpdate","expirationTime","Date","now","attempt","currentInterval","poll","async","timeRemaining","Math","ceil","grant_type","access_token","tokenData","token_type","tokenType","tokenMask","secureTokenStorage","maskToken","min","newInterval","description","error_description","setTimeout","cancelPolling","clearTimeout","authenticateWithDeviceFlow","deviceAuth","success","storeToken","token","isSupported","Promise","getPollingStatus","isPolling","hasDeviceCode","reset","_ref","onClose","t","useTranslation","currentSlide","setCurrentSlide","useState","collaborationImage","useThemeImage","slides","title","content","_jsxs","className","children","_jsx","src","alt","getAltText","ALT_TEXT_KEYS","IMAGE_COLLABORATION","onClick","href","e","target","currentTarget","prevSlide","prev","disabled","map","_","index","goToSlide","nextSlide","onAuthSuccess","onAuthCancel","authState","setAuthState","setDeviceAuth","statusMessage","setStatusMessage","setError","pollingInfo","setPollingInfo","setTimeRemaining","componentLogger","useEffect","componentMount","hasOnAuthSuccess","componentUnmount","oauthDeviceFlowService","handleOAuthUpdate","useCallback","update","_update$deviceAuth","timer","setInterval","max","clearInterval","handleCancel","userAction","result","auth","authMethod","type","navigator","clipboard","writeText","handleOpenGitHub","seconds","minutes","floor","remainingSeconds","toString","padStart","formatTimeRemaining","handleReset","WelcomePage","isAuthenticated","setIsAuthenticated","showCollaborationModal","setShowCollaborationModal","showPATHelp","setShowPATHelp","warningMessage","setWarningMessage","tokenName","setTokenName","patToken","setPatToken","patError","setPATError","patLoading","setPATLoading","setAuthMethod","useNavigate","useLocation","mascotImage","authoringImage","initializeAuth","sessionStorage","getItem","localStorage","githubService","authenticate","removeItem","checkAuthState","_location$state","pathname","replace","handleAuthoringClick","handleCollaborationOpen","PageLayout","pageName","showBreadcrumbs","handleDismissWarning","MASCOT_HELPER","onKeyDown","key","IMAGE_AUTHORING","OAuthLogin","authData","then","Octokit","octokit","authenticateWithOctokit","handleOAuthCancel","onSubmit","preventDefault","trim","userResponse","rest","users","getAuthenticated","octokitInstance","username","login","setItem","err","console","handleAuthSuccess","value","onChange","placeholder","demoProfile","name","avatar_url","isDemo","navigationState","profile","action","CollaborationModal","handleCollaborationClose","HelpModal","helpTopic","helpContentService","getHelpTopic","contextData","pageId"],"sourceRoot":""}