"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[5453],{55453:(e,n,o)=>{o.r(n),o.d(n,{default:()=>v});var i=o(9950),t=o(18518),s=o(46901),l=o(89379),r=o(88498);const a=()=>{var e,n,o;const a=(0,t.zy)(),d=(0,t.Zp)(),{user:c,repo:u,branch:p}=(0,t.g)(),[m,v]=(0,i.useState)((null===(e=a.state)||void 0===e?void 0:e.profile)||null),[g,h]=(0,i.useState)((null===(n=a.state)||void 0===n?void 0:n.repository)||null),[w,b]=(0,i.useState)((null===(o=a.state)||void 0===o?void 0:o.selectedBranch)||p||null),[f,y]=(0,i.useState)(!m||!g),[P,N]=(0,i.useState)(null);return(0,i.useEffect)(()=>{(async()=>{var e,n,o,i,t;if(console.log("\ud83d\udd0d useDAKUrlParams: Starting data fetch analysis:",{urlParams:{user:c,repo:u,branch:p},currentState:{hasProfile:!!m,hasRepository:!!g,profileLogin:null===m||void 0===m?void 0:m.login,repositoryFullName:null===g||void 0===g?void 0:g.full_name,repositoryOwner:null===g||void 0===g||null===(e=g.owner)||void 0===e?void 0:e.login},hasLocationState:!!a.state,locationStateSummary:a.state?{hasProfile:!!a.state.profile,hasRepository:!!a.state.repository,profileLogin:null===(n=a.state.profile)||void 0===n?void 0:n.login,repositoryFullName:null===(o=a.state.repository)||void 0===o?void 0:o.full_name,repositoryOwner:null===(i=a.state.repository)||void 0===i||null===(t=i.owner)||void 0===t?void 0:t.login}:null,isAuthenticated:s.A.isAuth(),needsFetch:(!m||!g)&&c&&u}),m&&g||!c||!u)console.log("\ud83d\udccb useDAKUrlParams: Not fetching from URL params, using existing state:",{hasProfile:!!m,hasRepository:!!g,hasUserParam:!!c,hasRepoParam:!!u,reason:m&&g?"state already populated":"missing URL params"}),y(!1);else{console.log("useDAKUrlParams: Fetching data from URL parameters:",{user:c,repo:u,branch:p,hasProfile:!!m,hasRepository:!!g,hasLocationState:!!a.state,isAuthenticated:s.A.isAuth()});try{if(y(!0),N(null),!s.A.isAuth()){console.log("\ud83d\udeab useDAKUrlParams: Not authenticated, using public access"),console.log("\ud83d\udc40 useDAKUrlParams: Unauthenticated public access, creating public profile");const e={login:c,name:c.charAt(0).toUpperCase()+c.slice(1),avatar_url:"https://github.com/".concat(c,".png"),type:"User"},n={name:u,full_name:"".concat(c,"/").concat(u),owner:{login:c},default_branch:p||"main",html_url:"https://github.com/".concat(c,"/").concat(u)};console.log("\ud83d\udccb useDAKUrlParams: Setting public access state:",{profile:e,repository:n,selectedBranch:p||"main"});try{sessionStorage.setItem("sgex_selected_user",c),sessionStorage.setItem("sgex_selected_repo",u),sessionStorage.setItem("sgex_selected_branch",p||"main");const e=sessionStorage.getItem("sgex_url_context"),n=e?JSON.parse(e):{},o=(0,l.A)((0,l.A)({},n),{},{user:c,repo:u,branch:p||"main",timestamp:Date.now()});sessionStorage.setItem("sgex_url_context",JSON.stringify(o)),"undefined"!==typeof window&&window.SGEX_ROUTING_LOGGER&&(window.SGEX_ROUTING_LOGGER.logSessionStorageUpdate("sgex_selected_user",c),window.SGEX_ROUTING_LOGGER.logSessionStorageUpdate("sgex_selected_repo",u),window.SGEX_ROUTING_LOGGER.logSessionStorageUpdate("sgex_selected_branch",p||"main")),console.log("\u2705 useDAKUrlParams: Updated session storage for public access navigation (fallback)")}catch(w){console.warn("Failed to update session storage:",w)}return v(e),h(n),b(p||"main"),void y(!1)}console.log("\ud83d\udd10 useDAKUrlParams: Authenticated, fetching real repository data");let e=null;try{console.log("\ud83d\udd0d useDAKUrlParams: Fetching user profile for: ".concat(c));e=await s.A.getUser(c),console.log("\u2705 useDAKUrlParams: User profile fetched:",{login:e.login,name:e.name,type:e.type})}catch(f){return console.error("\u274c useDAKUrlParams: Error fetching user:",f),void d("/",{state:{warningMessage:"Could not access the requested DAK. User '".concat(c,"' not found or not accessible.")}})}let n=null;try{console.log("useDAKUrlParams: Fetching repository data for ".concat(c,"/").concat(u));n=await s.A.getRepository(c,u),console.log("useDAKUrlParams: Repository data fetched successfully:",{name:n.name,full_name:n.full_name,owner:n.owner,default_branch:n.default_branch})}catch(f){return console.error("useDAKUrlParams: Error fetching repository:",f),void d("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(c,"/").concat(u,"' not found or not accessible.")}})}if(!await r.A.validateDAKRepository(c,u,p||n.default_branch))return console.log("Repository ".concat(c,"/").concat(u," is not a valid DAK repository")),void d("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(c,"/").concat(u,"' not found or not accessible.")}});if(p)try{await s.A.getBranch(c,u,p),b(p)}catch(f){console.warn("Branch '".concat(p,"' not found, falling back to default branch")),b(n.default_branch)}else b(n.default_branch);console.log("useDAKUrlParams: Setting final state:",{profile:{login:e.login,name:e.name,type:e.type},repository:{name:n.name,full_name:n.full_name,owner:n.owner,default_branch:n.default_branch},selectedBranch:p||n.default_branch});try{sessionStorage.setItem("sgex_selected_user",e.login),sessionStorage.setItem("sgex_selected_repo",n.name),sessionStorage.setItem("sgex_selected_branch",p||n.default_branch);const o=sessionStorage.getItem("sgex_url_context"),i=o?JSON.parse(o):{},t=(0,l.A)((0,l.A)({},i),{},{user:e.login,repo:n.name,branch:p||n.default_branch,timestamp:Date.now()});sessionStorage.setItem("sgex_url_context",JSON.stringify(t)),"undefined"!==typeof window&&window.SGEX_ROUTING_LOGGER&&(window.SGEX_ROUTING_LOGGER.logSessionStorageUpdate("sgex_selected_user",e.login),window.SGEX_ROUTING_LOGGER.logSessionStorageUpdate("sgex_selected_repo",n.name),window.SGEX_ROUTING_LOGGER.logSessionStorageUpdate("sgex_selected_branch",p||n.default_branch)),console.log("\u2705 useDAKUrlParams: Updated session storage for SPA navigation")}catch(w){console.warn("Failed to update session storage:",w)}v(e),h(n),y(!1)}catch(f){console.error("Error fetching data from URL params:",f),N("Failed to load DAK data. Please check the URL or try again."),y(!1)}}})()},[c,u,p,m,g,d,a.state]),{profile:m,repository:g,selectedBranch:w,loading:f,error:P,user:c,repo:u,branch:p||w,navigate:d}};var d=o(53782),c=o(1932),u=o(96143),p=o(44414);const m=e=>{let{file:n,repository:o,selectedBranch:t,profile:l}=e;const r=(0,i.useRef)(null),a=(0,i.useRef)(null),[d,c]=(0,i.useState)(!0),[m,v]=(0,i.useState)(null);return(0,i.useEffect)(()=>(n&&o?(console.log("\ud83d\ude80 BPMNPreview: Starting loadPreview for:",n.name),(async()=>{if(!n||!o)return void console.log("\ud83d\udeab BPMNPreview: Missing required props:",{hasFile:!!n,hasRepository:!!o,fileName:null===n||void 0===n?void 0:n.name});const e=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;r.current?(console.log("\u2705 BPMNPreview: Container found on attempt ".concat(n+1)),i()):n<20?(console.log("\u23f3 BPMNPreview: Container not ready, attempt ".concat(n+1,"/").concat(20)),setTimeout(()=>e(n+1),100)):(console.error("\u274c BPMNPreview: Container never became available"),v("Failed to initialize preview container"),c(!1))},i=async()=>{try{var e,i,l,d;c(!0),v(null),r.current&&(r.current.innerHTML="");const G=(null===(e=o.owner)||void 0===e?void 0:e.login)||o.full_name.split("/")[0],T=o.name,I=t||"main",O=(null===(i=n.path)||void 0===i?void 0:i.includes("demo/"))||(null===(l=n.sha)||void 0===l?void 0:l.startsWith("demo-"));let K;if(console.log("\ud83c\udfac BPMNPreview: Starting preview load for file:",{fileName:n.name,filePath:n.path,owner:G,repoName:T,ref:I,isDemo:O,hasDownloadUrl:!!n.download_url}),O){const e=n.name.replace(".bpmn","").replace(/[-_]/g," ");K='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(e,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}else{console.log("\ud83d\udce5 BPMNPreview: Attempting to load real BPMN file content...");try{var p,m;if(console.log("\ud83c\udf10 BPMNPreview: Calling githubService.getFileContent with params:",{owner:G,repoName:T,path:n.path,ref:I}),K=await s.A.getFileContent(G,T,n.path,I),console.log("\u2705 BPMNPreview: Successfully loaded BPMN content, length:",null===(p=K)||void 0===p?void 0:p.length),console.log("\ud83d\udd0d BPMNPreview: Content preview (first 100 chars):",null===(m=K)||void 0===m?void 0:m.substring(0,100)),!K||"string"!==typeof K)throw new Error("Invalid content received: not a string");if(!K.includes("bpmn:definitions")&&!K.includes("<definitions"))throw console.warn("\u26a0\ufe0f BPMNPreview: Content does not appear to be valid BPMN XML"),console.log("\ud83d\udd0d BPMNPreview: Full content received:",K),new Error("Content does not appear to be valid BPMN");console.log("\u2705 BPMNPreview: BPMN content validation passed")}catch(j){console.warn("\u274c BPMNPreview: Could not load BPMN file content:",j.message,j.status),console.error("\ud83d\udd0d BPMNPreview: File loading error details:",{error:j,stack:j.stack,fileName:n.name,filePath:n.path,owner:G,repoName:T,ref:I});const e=n.name.replace(".bpmn","").replace(/[-_]/g," ");console.log("\ud83d\udd04 BPMNPreview: Using fallback BPMN diagram for:",e),K='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(e,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}}console.log("\ud83d\udd27 BPMNPreview: Creating BPMN viewer..."),console.log("\ud83d\udd0d BPMNPreview: About to create viewer with BPMN content length:",null===(d=K)||void 0===d?void 0:d.length);const z=await(0,u._Q)();a.current=z,console.log("\u2705 BPMNPreview: BPMN viewer instance created successfully");try{var g,h,w,b,f,y,P,N,_,B,M,S,x,E,A;console.log("\ud83d\udd17 BPMNPreview: Attaching viewer to container..."),console.log("\ud83d\udd0d BPMNPreview: Container element details:",{exists:!!r.current,className:null===(g=r.current)||void 0===g?void 0:g.className,width:null===(h=r.current)||void 0===h?void 0:h.offsetWidth,height:null===(w=r.current)||void 0===w?void 0:w.offsetHeight,parentExists:!(null===(b=r.current)||void 0===b||!b.parentElement)});const e=function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;return new Promise((o,i)=>{setTimeout(()=>{i(new Error("".concat(e," timeout after ").concat(n,"ms")))},n)})},o=z.attachTo(r.current);await Promise.race([o,e("Viewer attach",5e3)]),console.log("\u2705 BPMNPreview: Successfully attached viewer to container"),console.log("\ud83d\udcca BPMNPreview: Importing BPMN XML..."),console.log("\ud83d\udd0d BPMNPreview: XML content preview (first 200 chars):",null===(f=K)||void 0===f?void 0:f.substring(0,200));const i=Date.now(),t=z.importXML(K),s=await Promise.race([t,e("XML import",15e3)]),l=Date.now()-i;console.log("\u2705 BPMNPreview: Successfully imported BPMN XML in ".concat(l,"ms")),console.log("\ud83d\udcca BPMNPreview: Import result details:",{warnings:(null===s||void 0===s||null===(y=s.warnings)||void 0===y?void 0:y.length)||0,hasWarnings:!(null===s||void 0===s||null===(P=s.warnings)||void 0===P||!P.length),warningDetails:null===s||void 0===s?void 0:s.warnings}),(null===s||void 0===s||null===(N=s.warnings)||void 0===N?void 0:N.length)>0&&console.warn("\u26a0\ufe0f BPMNPreview: Import warnings:",s.warnings),console.log("\ud83c\udfaf BPMNPreview: Fitting to viewport...");const a=z.get("canvas");console.log("\ud83d\udd0d BPMNPreview: Canvas service retrieved:",!!a);const d=null===(_=r.current)||void 0===_?void 0:_.querySelector("svg");console.log("\ud83d\udcd0 BPMNPreview: SVG state BEFORE zoom:",{exists:!!d,width:null===d||void 0===d?void 0:d.getAttribute("width"),height:null===d||void 0===d?void 0:d.getAttribute("height"),viewBox:null===d||void 0===d?void 0:d.getAttribute("viewBox"),style:{display:null===d||void 0===d?void 0:d.style.display,visibility:null===d||void 0===d?void 0:d.style.visibility,opacity:null===d||void 0===d?void 0:d.style.opacity,width:null===d||void 0===d?void 0:d.style.width,height:null===d||void 0===d?void 0:d.style.height},computedStyle:d?{display:window.getComputedStyle(d).display,visibility:window.getComputedStyle(d).visibility,opacity:window.getComputedStyle(d).opacity}:null,childCount:(null===d||void 0===d||null===(B=d.children)||void 0===B?void 0:B.length)||0}),setTimeout(()=>{try{a.zoom("fit-viewport"),console.log("\u2705 BPMNPreview: Zoom to fit-viewport completed")}catch(e){console.error("\u274c BPMNPreview: Zoom failed:",e)}},0);const u=a.viewbox(),p=null===(M=r.current)||void 0===M?void 0:M.querySelector("svg");console.log("\ud83d\udcd0 BPMNPreview: Viewport state AFTER zoom:",{viewbox:u,outer:null===u||void 0===u?void 0:u.outer,inner:null===u||void 0===u?void 0:u.inner,scale:null===u||void 0===u?void 0:u.scale,containerDimensions:{width:null===(S=r.current)||void 0===S?void 0:S.offsetWidth,height:null===(x=r.current)||void 0===x?void 0:x.offsetHeight,clientWidth:null===(E=r.current)||void 0===E?void 0:E.clientWidth,clientHeight:null===(A=r.current)||void 0===A?void 0:A.clientHeight},svgAttributes:{width:null===p||void 0===p?void 0:p.getAttribute("width"),height:null===p||void 0===p?void 0:p.getAttribute("height"),viewBox:null===p||void 0===p?void 0:p.getAttribute("viewBox"),transform:null===p||void 0===p?void 0:p.getAttribute("transform")},svgStyles:{display:null===p||void 0===p?void 0:p.style.display,visibility:null===p||void 0===p?void 0:p.style.visibility,opacity:null===p||void 0===p?void 0:p.style.opacity,backgroundColor:null===p||void 0===p?void 0:p.style.backgroundColor},svgComputedStyles:p?{display:window.getComputedStyle(p).display,visibility:window.getComputedStyle(p).visibility,opacity:window.getComputedStyle(p).opacity,backgroundColor:window.getComputedStyle(p).backgroundColor}:null}),console.log("\u2705 BPMNPreview: Successfully fitted to viewport");const m=()=>{if(z&&r.current)try{const e=z.get("canvas"),n=e.viewbox(),o=e.zoom();e.zoom(o);const i=r.current.querySelector("svg");i&&(i.style.opacity="1",i.style.visibility="visible",i.style.display="block"),r.current&&(r.current.scrollTop=r.current.scrollTop),console.log("\ud83c\udfa8 BPMNPreview: Forced SVG visibility and canvas update",{viewbox:n,zoom:o,svgVisible:null===i||void 0===i?void 0:i.style.visibility,svgOpacity:null===i||void 0===i?void 0:i.style.opacity,svgDisplay:null===i||void 0===i?void 0:i.style.display})}catch(e){console.warn("\u26a0\ufe0f BPMNPreview: Could not force canvas update:",e)}};setTimeout(m,100),setTimeout(m,200),setTimeout(m,400),setTimeout(()=>{var e,n,o,i,t,s,l,d,c,u,p,m,v,g,h,w,b;const f=a.viewbox(),y=null===(e=r.current)||void 0===e?void 0:e.querySelector("svg"),P=(null===y||void 0===y?void 0:y.querySelectorAll("g"))||[],N=(null===y||void 0===y?void 0:y.querySelectorAll("[data-element-id]"))||[];console.log("\ud83d\udd0d BPMNPreview: Final rendering state:",{viewbox:{outer:null===f||void 0===f?void 0:f.outer,inner:null===f||void 0===f?void 0:f.inner,scale:null===f||void 0===f?void 0:f.scale},svg:{exists:!!y,width:null===y||void 0===y?void 0:y.getAttribute("width"),height:null===y||void 0===y?void 0:y.getAttribute("height"),viewBox:null===y||void 0===y?void 0:y.getAttribute("viewBox"),childCount:(null===y||void 0===y||null===(n=y.children)||void 0===n?void 0:n.length)||0,gElementCount:P.length,shapeElementCount:N.length,style:{display:null===y||void 0===y?void 0:y.style.display,visibility:null===y||void 0===y?void 0:y.style.visibility,opacity:null===y||void 0===y?void 0:y.style.opacity},computedStyle:y?{display:window.getComputedStyle(y).display,visibility:window.getComputedStyle(y).visibility,opacity:window.getComputedStyle(y).opacity,backgroundColor:window.getComputedStyle(y).backgroundColor,fill:window.getComputedStyle(y).fill}:null},container:{hasChildren:(null===(o=r.current)||void 0===o||null===(i=o.children)||void 0===i?void 0:i.length)||0,dimensions:{offsetWidth:null===(t=r.current)||void 0===t?void 0:t.offsetWidth,offsetHeight:null===(s=r.current)||void 0===s?void 0:s.offsetHeight,scrollWidth:null===(l=r.current)||void 0===l?void 0:l.scrollWidth,scrollHeight:null===(d=r.current)||void 0===d?void 0:d.scrollHeight},style:{display:null===(c=r.current)||void 0===c?void 0:c.style.display,visibility:null===(u=r.current)||void 0===u?void 0:u.style.visibility,backgroundColor:null===(p=r.current)||void 0===p?void 0:p.style.backgroundColor},computedStyle:r.current?{display:window.getComputedStyle(r.current).display,visibility:window.getComputedStyle(r.current).visibility,backgroundColor:window.getComputedStyle(r.current).backgroundColor}:null},hasElements:(null===f||void 0===f||null===(m=f.inner)||void 0===m?void 0:m.width)>0&&(null===f||void 0===f||null===(v=f.inner)||void 0===v?void 0:v.height)>0,containerHasContent:(null===(g=r.current)||void 0===g||null===(h=g.children)||void 0===h?void 0:h.length)>0}),0===(null===(w=r.current)||void 0===w||null===(b=w.children)||void 0===b?void 0:b.length)?console.error("\u274c BPMNPreview: Container is EMPTY after rendering - CRITICAL ISSUE"):y?0===N.length?console.warn("\u26a0\ufe0f BPMNPreview: SVG exists but has no BPMN shape elements - possible rendering issue"):console.log("\u2705 BPMNPreview: Diagram appears to be properly rendered with ".concat(N.length," shapes")):console.error("\u274c BPMNPreview: No SVG element found after rendering - CRITICAL ISSUE")},500),console.log("\ud83c\udf89 BPMNPreview: Successfully rendered preview for: ".concat(n.name)),c(!1)}catch(L){var D,C,F,k,R,U;console.error("\u274c BPMNPreview: Failed to import BPMN XML:",L),console.error("\ud83d\udd0d BPMNPreview: Import error details:",{message:L.message,stack:L.stack,fileName:n.name,xmlLength:null===(D=K)||void 0===D?void 0:D.length,xmlPreview:null===(C=K)||void 0===C?void 0:C.substring(0,300),containerState:{exists:!!r.current,hasChildren:(null===(F=r.current)||void 0===F||null===(k=F.children)||void 0===k?void 0:k.length)||0,clientHeight:null===(R=r.current)||void 0===R?void 0:R.clientHeight,clientWidth:null===(U=r.current)||void 0===U?void 0:U.clientWidth}}),v("Failed to load preview: ".concat(L.message)),c(!1)}}catch(G){console.error("\u274c BPMNPreview: Failed to render BPMN preview:",G.message||G),console.log("\ud83d\udd0d BPMNPreview: Error details:",{fileName:n.name,filePath:n.path,errorMessage:G.message,errorStack:G.stack}),v("Failed to load preview"),c(!1)}};e()})()):(console.log("\u23ed\ufe0f BPMNPreview: Skipping loadPreview, missing props:",{hasFile:!!n,hasRepository:!!o,fileName:null===n||void 0===n?void 0:n.name}),c(!1)),()=>{if(a.current){try{a.current.destroy()}catch(e){console.warn("Error cleaning up BPMN viewer:",e)}a.current=null}}),[n,o,t,l]),(0,p.jsxs)("div",{className:"bpmn-preview",children:[d&&(0,p.jsxs)("div",{className:"preview-loading",children:[(0,p.jsx)("div",{className:"preview-spinner"}),(0,p.jsx)("span",{children:"Loading preview..."})]}),m&&(0,p.jsx)("div",{className:"preview-error",children:(0,p.jsxs)("span",{children:["\u274c ",m]})}),(0,p.jsx)("div",{className:"preview-container",ref:r,style:{display:d||m?"none":"block"}})]})},v=()=>{var e;const n=(0,t.zy)(),o=(0,t.Zp)(),{profile:l,repository:r,selectedBranch:u,loading:v,error:g}=a();console.log("\ud83d\ude80 BusinessProcessSelection: Hook data received:",{hasProfile:!!l,hasRepository:!!r,profileLogin:null===l||void 0===l?void 0:l.login,repositoryName:null===r||void 0===r?void 0:r.name,repositoryFullName:null===r||void 0===r?void 0:r.full_name,repositoryOwner:null===r||void 0===r||null===(e=r.owner)||void 0===e?void 0:e.login,selectedBranch:u,dakLoading:v,dakError:g});const{component:h}=n.state||{},[w,b]=(0,i.useState)([]),[f,y]=(0,i.useState)(!0),[P,N]=(0,i.useState)(null),[_,B]=(0,i.useState)(!1);(0,i.useEffect)(()=>{(async()=>{if(r&&l)try{var e;const n=l.token&&(null===(e=r.permissions)||void 0===e?void 0:e.push);B(n||!1)}catch(P){console.warn("Could not check write permissions:",P),B(!1)}})()},[r,l]),(0,i.useEffect)(()=>{(async()=>{if(r)try{var e,n,i,t;y(!0),N(null),console.log("\ud83d\udcc2 BusinessProcessSelection - Repository object analysis:",{name:r.name,full_name:r.full_name,owner:r.owner,ownerLogin:null===(e=r.owner)||void 0===e?void 0:e.login,isDemo:r.isDemo,html_url:r.html_url,default_branch:r.default_branch}),console.log("\ud83d\udc64 BusinessProcessSelection - Profile object analysis:",{login:null===l||void 0===l?void 0:l.login,name:null===l||void 0===l?void 0:l.name,isDemo:null===l||void 0===l?void 0:l.isDemo,type:null===l||void 0===l?void 0:l.type});const o=(null===(n=r.owner)||void 0===n?void 0:n.login)||r.full_name.split("/")[0],a=r.name,d=u||"main";console.log("\ud83d\udccb BusinessProcessSelection: Derived repository info:",{original_owner_login:null===(i=r.owner)||void 0===i?void 0:i.login,original_full_name:r.full_name,derived_owner:o,derived_repoName:a,selected_ref:d,derivation_method:null!==(t=r.owner)&&void 0!==t&&t.login?"owner.login":"full_name.split"}),console.log("\ud83d\udd0d BusinessProcessSelection: About to fetch BPMN files from ".concat(o,"/").concat(a," (branch: ").concat(d,")")),console.log("BusinessProcessSelection: Final repository access details:",{derivedOwner:o,repositoryName:a,ref:d,fullRepositoryData:{name:r.name,full_name:r.full_name,owner:r.owner,default_branch:r.default_branch}});const c=await s.A.getBpmnFiles(o,a,d);if(console.log("\ud83d\udcca BusinessProcessSelection: Received BPMN files:",{count:c.length,files:c.map(e=>{var n;return{name:e.name,path:e.path,size:e.size,hasDownloadUrl:!!e.download_url,sha:null===(n=e.sha)||void 0===n?void 0:n.substring(0,8)}})}),0===c.length&&null!==l&&void 0!==l&&l.isDemo){console.log("No BPMN files found in demo mode, providing fallback demo files");b([{name:"patient-registration.bpmn",path:"demo/business-processes/patient-registration.bpmn",sha:"demo-sha-1",size:2048,download_url:"#",html_url:"#"},{name:"vaccination-workflow.bpmn",path:"demo/business-processes/vaccination-workflow.bpmn",sha:"demo-sha-2",size:3072,download_url:"#"},{name:"appointment-scheduling.bpmn",path:"demo/business-processes/appointment-scheduling.bpmn",sha:"demo-sha-3",size:1536,download_url:"#"}])}else b(c);y(!1)}catch(d){var a;if(console.error("Failed to fetch BPMN files from repository:",d),null!==l&&void 0!==l&&l.isDemo||null!==(a=d.message)&&void 0!==a&&a.includes("Failed to fetch")){console.log("Providing fallback demo BPMN files");return b([{name:"patient-registration.bpmn",path:"demo/business-processes/patient-registration.bpmn",sha:"demo-sha-1",size:2048,download_url:"#",html_url:"#"},{name:"vaccination-workflow.bpmn",path:"demo/business-processes/vaccination-workflow.bpmn",sha:"demo-sha-2",size:3072,download_url:"#"},{name:"appointment-scheduling.bpmn",path:"demo/business-processes/appointment-scheduling.bpmn",sha:"demo-sha-3",size:1536,download_url:"#"}]),void y(!1)}401===d.status||403===d.status?N("Authentication required to access this repository. Please ensure you have a valid GitHub token with appropriate permissions."):404===d.status?N("Repository or branch not found. Please check the repository name and branch."):N("Failed to load BPMN files from repository: ".concat(d.message)),b([]),y(!1)}else o("/")})()},[l,r,o,u]);return v?(0,p.jsx)("div",{className:"business-process-selection loading-state",children:(0,p.jsxs)("div",{className:"loading-content",children:[(0,p.jsx)("h2",{children:"Loading DAK Data..."}),(0,p.jsx)("p",{children:"Fetching repository and user data..."})]})}):g?(0,p.jsx)("div",{className:"business-process-selection error-state",children:(0,p.jsxs)("div",{className:"error-content",children:[(0,p.jsx)("h2",{children:"Error Loading DAK Data"}),(0,p.jsx)("p",{children:g}),(0,p.jsxs)("div",{className:"error-actions",children:[(0,p.jsx)("button",{onClick:()=>o("/"),className:"action-btn primary",children:"Return to Home"}),(0,p.jsx)("button",{onClick:()=>window.location.reload(),className:"action-btn secondary",children:"Retry"})]})]})}):l&&r?(0,p.jsx)(d.Mx,{pageName:"business-process-selection",children:(0,p.jsx)("div",{className:"business-process-selection",children:(0,p.jsx)("div",{className:"selection-content",children:(0,p.jsxs)("div",{className:"selection-main",children:[(0,p.jsxs)("div",{className:"selection-intro",children:[(0,p.jsx)("h2",{children:"Business Process Files"}),(0,p.jsxs)("p",{children:["Select a BPMN business process file to view, edit, or examine the source code. Files are loaded from ",(0,p.jsx)("code",{children:"input/business-processes/"})," or ",(0,p.jsx)("code",{children:"input/business-process/"})," directories and subdirectories."]})]}),f?(0,p.jsxs)("div",{className:"loading",children:[(0,p.jsx)("div",{className:"spinner"}),(0,p.jsx)("p",{children:"Loading business process files..."})]}):P?(0,p.jsx)("div",{className:"error",children:(0,p.jsxs)("p",{children:["\u274c ",P]})}):0===w.length?(0,p.jsxs)("div",{className:"empty-state",children:[(0,p.jsx)("div",{className:"empty-icon",children:"\ud83d\udccb"}),(0,p.jsx)("h3",{children:"No BPMN Files Found"}),(0,p.jsx)("p",{children:"No .bpmn files were found in the input/business-processes/ or input/business-process/ directories."})]}):(0,p.jsx)("div",{className:"files-grid",children:w.map(e=>(0,p.jsxs)("div",{className:"file-card",children:[(0,p.jsx)(m,{file:e,repository:r,selectedBranch:u,profile:l}),(0,p.jsxs)("div",{className:"file-header",children:[(0,p.jsx)("div",{className:"file-icon",children:"\ud83d\udd04"}),(0,p.jsx)("div",{className:"file-details",children:(0,p.jsxs)("h3",{className:"file-name",children:[e.name," \xb7 ",(e.size/1024).toFixed(1)," KB"]})})]}),(0,p.jsxs)("div",{className:"file-actions",children:[(0,p.jsx)("button",{className:"action-btn view-btn",onClick:n=>((e,n)=>{var i;const t=(null===(i=r.owner)||void 0===i?void 0:i.login)||r.full_name.split("/")[0],s=r.name,a=u||"main",d="/bpmn-viewer/".concat(t,"/").concat(s,"/").concat(a,"/").concat(n.path),p={profile:l,repository:r,component:h,selectedFile:n,selectedBranch:u,mode:"view"};(0,c.hX)(e,d,o,p)})(n,e),title:"View BPMN diagram (read-only)",children:"\ud83d\udc41\ufe0f View"}),(0,p.jsx)("button",{className:"action-btn edit-btn ".concat(_?"":"disabled"),onClick:n=>((e,n)=>{var i;if(!_)return void alert("You need write permissions to edit BPMN files. Please check your GitHub token permissions.");const t=(null===(i=r.owner)||void 0===i?void 0:i.login)||r.full_name.split("/")[0],s=r.name,a=u||"main",d="/bpmn-editor/".concat(t,"/").concat(s,"/").concat(a,"/").concat(n.path),p={profile:l,repository:r,component:h,selectedFile:n,selectedBranch:u,mode:"edit"};(0,c.hX)(e,d,o,p)})(n,e),title:_?"Edit BPMN diagram":"Edit access required",disabled:!_,children:"\u270f\ufe0f Edit"}),(0,p.jsx)("button",{className:"action-btn source-btn",onClick:n=>((e,n)=>{var i;const t=(null===(i=r.owner)||void 0===i?void 0:i.login)||r.full_name.split("/")[0],s=r.name,a=u||"main",d="/bpmn-source/".concat(t,"/").concat(s,"/").concat(a,"/").concat(n.path),p={profile:l,repository:r,component:h,selectedFile:n,selectedBranch:u};(0,c.hX)(e,d,o,p)})(n,e),title:"View XML source code",children:"\ud83d\udcc4 Source"})]})]},e.sha))})]})})})}):(o("/"),(0,p.jsx)("div",{children:"Redirecting..."}))}},96143:(e,n,o)=>{o.d(n,{Ub:()=>t,_Q:()=>s});var i=o(57335);async function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,i.uW)())(e)}async function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,i.M3)())(e)}}}]);