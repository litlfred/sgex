"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[567],{13333:(e,n,o)=>{o.d(n,{hX:()=>i});const i=function(e,n,o){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if((e=>!!(null!==e&&void 0!==e&&e.ctrlKey||null!==e&&void 0!==e&&e.metaKey))(e)){const e=(e=>{const n="/sgex/copilot-fix-757",o=window.location.origin,i=e.startsWith("/")?e.slice(1):e;if(!n)return"".concat(o,"/").concat(i);const t=n.endsWith("/")?n:n+"/";return"".concat(o).concat(t).concat(i)})(n);window.open(e,"_blank","noopener,noreferrer")}else i?o(n,{state:i}):o(n)}},73567:(e,n,o)=>{o.r(n),o.d(n,{default:()=>u});var i=o(65043),t=o(73537),s=o(50404),a=o(89387);const l=()=>{var e,n,o;const l=(0,t.zy)(),r=(0,t.Zp)(),{user:c,repo:d,branch:m}=(0,t.g)(),[p,u]=(0,i.useState)((null===(e=l.state)||void 0===e?void 0:e.profile)||null),[h,v]=(0,i.useState)((null===(n=l.state)||void 0===n?void 0:n.repository)||null),[g,w]=(0,i.useState)((null===(o=l.state)||void 0===o?void 0:o.selectedBranch)||m||null),[f,b]=(0,i.useState)(!p||!h),[P,N]=(0,i.useState)(null);return(0,i.useEffect)(()=>{(async()=>{var e,n,o,i,t;if(console.log("\ud83d\udd0d useDAKUrlParams: Starting data fetch analysis:",{urlParams:{user:c,repo:d,branch:m},currentState:{hasProfile:!!p,hasRepository:!!h,profileLogin:null===p||void 0===p?void 0:p.login,repositoryFullName:null===h||void 0===h?void 0:h.full_name,repositoryOwner:null===h||void 0===h||null===(e=h.owner)||void 0===e?void 0:e.login},hasLocationState:!!l.state,locationStateSummary:l.state?{hasProfile:!!l.state.profile,hasRepository:!!l.state.repository,profileLogin:null===(n=l.state.profile)||void 0===n?void 0:n.login,repositoryFullName:null===(o=l.state.repository)||void 0===o?void 0:o.full_name,repositoryOwner:null===(i=l.state.repository)||void 0===i||null===(t=i.owner)||void 0===t?void 0:t.login}:null,isAuthenticated:s.A.isAuth(),needsFetch:(!p||!h)&&c&&d}),p&&h||!c||!d)console.log("\ud83d\udccb useDAKUrlParams: Not fetching from URL params, using existing state:",{hasProfile:!!p,hasRepository:!!h,hasUserParam:!!c,hasRepoParam:!!d,reason:p&&h?"state already populated":"missing URL params"}),b(!1);else{console.log("useDAKUrlParams: Fetching data from URL parameters:",{user:c,repo:d,branch:m,hasProfile:!!p,hasRepository:!!h,hasLocationState:!!l.state,isAuthenticated:s.A.isAuth()});try{if(b(!0),N(null),!s.A.isAuth()){console.log("\ud83d\udeab useDAKUrlParams: Not authenticated, entering demo mode");if(!a.A.validateDemoDAKRepository(c,d))return console.log("\u274c useDAKUrlParams: Demo DAK validation failed, redirecting home"),void r("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(c,"/").concat(d,"' not found or not accessible.")}});console.log("\u2705 useDAKUrlParams: Demo DAK validation passed, creating demo data");const e={login:c,name:c.charAt(0).toUpperCase()+c.slice(1),avatar_url:"https://github.com/".concat(c,".png"),type:"User",isDemo:!0},n={name:d,full_name:"".concat(c,"/").concat(d),owner:{login:c},default_branch:m||"main",html_url:"https://github.com/".concat(c,"/").concat(d),isDemo:!0};return console.log("\ud83d\udccb useDAKUrlParams: Setting demo state:",{profile:e,repository:n,selectedBranch:m||"main"}),u(e),v(n),w(m||"main"),void b(!1)}console.log("\ud83d\udd10 useDAKUrlParams: Authenticated, fetching real repository data");let e=null;try{console.log("\ud83d\udd0d useDAKUrlParams: Fetching user profile for: ".concat(c));e=await s.A.getUser(c),console.log("\u2705 useDAKUrlParams: User profile fetched:",{login:e.login,name:e.name,type:e.type})}catch(g){return console.error("\u274c useDAKUrlParams: Error fetching user:",g),void r("/",{state:{warningMessage:"Could not access the requested DAK. User '".concat(c,"' not found or not accessible.")}})}let n=null;try{console.log("useDAKUrlParams: Fetching repository data for ".concat(c,"/").concat(d));n=await s.A.getRepository(c,d),console.log("useDAKUrlParams: Repository data fetched successfully:",{name:n.name,full_name:n.full_name,owner:n.owner,default_branch:n.default_branch})}catch(g){return console.error("useDAKUrlParams: Error fetching repository:",g),void r("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(c,"/").concat(d,"' not found or not accessible.")}})}if(!await a.A.validateDAKRepository(c,d,m||n.default_branch))return console.log("Repository ".concat(c,"/").concat(d," is not a valid DAK repository")),void r("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(c,"/").concat(d,"' not found or not accessible.")}});if(m)try{await s.A.getBranch(c,d,m),w(m)}catch(g){console.warn("Branch '".concat(m,"' not found, falling back to default branch")),w(n.default_branch)}else w(n.default_branch);console.log("useDAKUrlParams: Setting final state:",{profile:{login:e.login,name:e.name,type:e.type},repository:{name:n.name,full_name:n.full_name,owner:n.owner,default_branch:n.default_branch},selectedBranch:m||n.default_branch}),u(e),v(n),b(!1)}catch(g){console.error("Error fetching data from URL params:",g),N("Failed to load DAK data. Please check the URL or try again."),b(!1)}}})()},[c,d,m,p,h,r,l.state]),{profile:p,repository:h,selectedBranch:g,loading:f,error:P,user:c,repo:d,branch:m||g,navigate:r}};var r=o(62148),c=o(13333),d=o(37840),m=o(70579);const p=e=>{let{file:n,repository:o,selectedBranch:t,profile:a}=e;const l=(0,i.useRef)(null),r=(0,i.useRef)(null),[c,p]=(0,i.useState)(!0),[u,h]=(0,i.useState)(null);return(0,i.useEffect)(()=>(n&&o&&l.current?(console.log("\ud83d\ude80 BPMNPreview: Starting loadPreview for:",n.name),(async()=>{if(n&&o&&l.current)try{var e,i,a,c;p(!0),h(null),l.current&&(l.current.innerHTML="");const C=(null===(e=o.owner)||void 0===e?void 0:e.login)||o.full_name.split("/")[0],K=o.name,z=t||"main",T=(null===(i=n.path)||void 0===i?void 0:i.includes("demo/"))||(null===(a=n.sha)||void 0===a?void 0:a.startsWith("demo-"));let X;if(console.log("\ud83c\udfac BPMNPreview: Starting preview load for file:",{fileName:n.name,filePath:n.path,owner:C,repoName:K,ref:z,isDemo:T,hasDownloadUrl:!!n.download_url}),T){const e=n.name.replace(".bpmn","").replace(/[-_]/g," ");X='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(e,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}else{console.log("\ud83d\udce5 BPMNPreview: Attempting to load real BPMN file content...");try{var m,u;if(console.log("\ud83c\udf10 BPMNPreview: Calling githubService.getFileContent with params:",{owner:C,repoName:K,path:n.path,ref:z}),X=await s.A.getFileContent(C,K,n.path,z),console.log("\u2705 BPMNPreview: Successfully loaded BPMN content, length:",null===(m=X)||void 0===m?void 0:m.length),console.log("\ud83d\udd0d BPMNPreview: Content preview (first 100 chars):",null===(u=X)||void 0===u?void 0:u.substring(0,100)),!X||"string"!==typeof X)throw new Error("Invalid content received: not a string");if(!X.includes("bpmn:definitions")&&!X.includes("<definitions"))throw console.warn("\u26a0\ufe0f BPMNPreview: Content does not appear to be valid BPMN XML"),console.log("\ud83d\udd0d BPMNPreview: Full content received:",X),new Error("Content does not appear to be valid BPMN");console.log("\u2705 BPMNPreview: BPMN content validation passed")}catch(L){console.warn("\u274c BPMNPreview: Could not load BPMN file content:",L.message,L.status),console.error("\ud83d\udd0d BPMNPreview: File loading error details:",{error:L,stack:L.stack,fileName:n.name,filePath:n.path,owner:C,repoName:K,ref:z});const e=n.name.replace(".bpmn","").replace(/[-_]/g," ");console.log("\ud83d\udd04 BPMNPreview: Using fallback BPMN diagram for:",e),X='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(e,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}}console.log("\ud83d\udd27 BPMNPreview: Creating BPMN viewer..."),console.log("\ud83d\udd0d BPMNPreview: About to create viewer with BPMN content length:",null===(c=X)||void 0===c?void 0:c.length);const q=await(0,d._Q)();r.current=q,console.log("\u2705 BPMNPreview: BPMN viewer instance created successfully");try{var v,g,w,f,b,P,N,B,_,y,M,x,E,D;console.log("\ud83d\udd17 BPMNPreview: Attaching viewer to container..."),console.log("\ud83d\udd0d BPMNPreview: Container element details:",{exists:!!l.current,className:null===(v=l.current)||void 0===v?void 0:v.className,width:null===(g=l.current)||void 0===g?void 0:g.offsetWidth,height:null===(w=l.current)||void 0===w?void 0:w.offsetHeight,parentExists:!(null===(f=l.current)||void 0===f||!f.parentElement)});const e=function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;return new Promise((o,i)=>{setTimeout(()=>{i(new Error("".concat(e," timeout after ").concat(n,"ms")))},n)})},o=q.attachTo(l.current);await Promise.race([o,e("Viewer attach",5e3)]),console.log("\u2705 BPMNPreview: Successfully attached viewer to container"),console.log("\ud83d\udcca BPMNPreview: Importing BPMN XML..."),console.log("\ud83d\udd0d BPMNPreview: XML content preview (first 200 chars):",null===(b=X)||void 0===b?void 0:b.substring(0,200));const i=Date.now(),t=q.importXML(X),s=await Promise.race([t,e("XML import",15e3)]),a=Date.now()-i;console.log("\u2705 BPMNPreview: Successfully imported BPMN XML in ".concat(a,"ms")),console.log("\ud83d\udcca BPMNPreview: Import result details:",{warnings:(null===s||void 0===s||null===(P=s.warnings)||void 0===P?void 0:P.length)||0,hasWarnings:!(null===s||void 0===s||null===(N=s.warnings)||void 0===N||!N.length),warningDetails:null===s||void 0===s?void 0:s.warnings}),(null===s||void 0===s||null===(B=s.warnings)||void 0===B?void 0:B.length)>0&&console.warn("\u26a0\ufe0f BPMNPreview: Import warnings:",s.warnings),console.log("\ud83c\udfaf BPMNPreview: Fitting to viewport...");const r=q.get("canvas");console.log("\ud83d\udd0d BPMNPreview: Canvas service retrieved:",!!r);const c=Date.now();r.zoom("fit-viewport");const d=Date.now()-c;console.log("\u2705 BPMNPreview: Successfully fitted to viewport in ".concat(d,"ms"));const m=r.viewbox();console.log("\ud83d\udd0d BPMNPreview: Final viewport details:",{viewbox:m,hasElements:(null===(_=m.inner)||void 0===_?void 0:_.width)>0&&(null===(y=m.inner)||void 0===y?void 0:y.height)>0,containerHasContent:(null===(M=l.current)||void 0===M||null===(x=M.children)||void 0===x?void 0:x.length)>0}),0===(null===(E=l.current)||void 0===E||null===(D=E.children)||void 0===D?void 0:D.length)&&console.warn("\u26a0\ufe0f BPMNPreview: Container is empty after rendering - potential issue"),console.log("\ud83c\udf89 BPMNPreview: Successfully rendered preview for: ".concat(n.name)),p(!1)}catch(U){var S,F,j,A,k,R;console.error("\u274c BPMNPreview: Failed to import BPMN XML:",U),console.error("\ud83d\udd0d BPMNPreview: Import error details:",{message:U.message,stack:U.stack,fileName:n.name,xmlLength:null===(S=X)||void 0===S?void 0:S.length,xmlPreview:null===(F=X)||void 0===F?void 0:F.substring(0,300),containerState:{exists:!!l.current,hasChildren:(null===(j=l.current)||void 0===j||null===(A=j.children)||void 0===A?void 0:A.length)||0,clientHeight:null===(k=l.current)||void 0===k?void 0:k.clientHeight,clientWidth:null===(R=l.current)||void 0===R?void 0:R.clientWidth}}),h("Failed to load preview: ".concat(U.message)),p(!1)}}catch(C){console.error("\u274c BPMNPreview: Failed to render BPMN preview:",C.message||C),console.log("\ud83d\udd0d BPMNPreview: Error details:",{fileName:n.name,filePath:n.path,errorMessage:C.message,errorStack:C.stack}),h("Failed to load preview"),p(!1)}else console.log("\ud83d\udeab BPMNPreview: Missing required props:",{hasFile:!!n,hasRepository:!!o,hasContainer:!!l.current,fileName:null===n||void 0===n?void 0:n.name})})()):(console.log("\u23ed\ufe0f BPMNPreview: Skipping loadPreview, missing props:",{hasFile:!!n,hasRepository:!!o,hasContainer:!!l.current,fileName:null===n||void 0===n?void 0:n.name}),p(!1)),()=>{if(r.current){try{r.current.destroy()}catch(e){console.warn("Error cleaning up BPMN viewer:",e)}r.current=null}}),[n,o,t,a]),c?(0,m.jsx)("div",{className:"bpmn-preview",children:(0,m.jsxs)("div",{className:"preview-loading",children:[(0,m.jsx)("div",{className:"preview-spinner"}),(0,m.jsx)("span",{children:"Loading preview..."})]})}):u?(0,m.jsx)("div",{className:"bpmn-preview",children:(0,m.jsx)("div",{className:"preview-error",children:(0,m.jsxs)("span",{children:["\u274c ",u]})})}):(0,m.jsx)("div",{className:"bpmn-preview",children:(0,m.jsx)("div",{className:"preview-container",ref:l})})},u=()=>{var e;const n=(0,t.zy)(),o=(0,t.Zp)(),{profile:a,repository:d,selectedBranch:u,loading:h,error:v}=l();console.log("\ud83d\ude80 BusinessProcessSelection: Hook data received:",{hasProfile:!!a,hasRepository:!!d,profileLogin:null===a||void 0===a?void 0:a.login,repositoryName:null===d||void 0===d?void 0:d.name,repositoryFullName:null===d||void 0===d?void 0:d.full_name,repositoryOwner:null===d||void 0===d||null===(e=d.owner)||void 0===e?void 0:e.login,selectedBranch:u,dakLoading:h,dakError:v});const{component:g}=n.state||{},[w,f]=(0,i.useState)([]),[b,P]=(0,i.useState)(!0),[N,B]=(0,i.useState)(null),[_,y]=(0,i.useState)(!1);(0,i.useEffect)(()=>{(async()=>{if(d&&a)try{var e;const n=a.token&&(null===(e=d.permissions)||void 0===e?void 0:e.push);y(n||!1)}catch(N){console.warn("Could not check write permissions:",N),y(!1)}})()},[d,a]),(0,i.useEffect)(()=>{(async()=>{if(d)try{var e,n,i,t;P(!0),B(null),console.log("\ud83d\udcc2 BusinessProcessSelection - Repository object analysis:",{name:d.name,full_name:d.full_name,owner:d.owner,ownerLogin:null===(e=d.owner)||void 0===e?void 0:e.login,isDemo:d.isDemo,html_url:d.html_url,default_branch:d.default_branch}),console.log("\ud83d\udc64 BusinessProcessSelection - Profile object analysis:",{login:null===a||void 0===a?void 0:a.login,name:null===a||void 0===a?void 0:a.name,isDemo:null===a||void 0===a?void 0:a.isDemo,type:null===a||void 0===a?void 0:a.type});const o=(null===(n=d.owner)||void 0===n?void 0:n.login)||d.full_name.split("/")[0],l=d.name,r=u||"main";console.log("\ud83d\udccb BusinessProcessSelection: Derived repository info:",{original_owner_login:null===(i=d.owner)||void 0===i?void 0:i.login,original_full_name:d.full_name,derived_owner:o,derived_repoName:l,selected_ref:r,derivation_method:null!==(t=d.owner)&&void 0!==t&&t.login?"owner.login":"full_name.split"}),console.log("\ud83d\udd0d BusinessProcessSelection: About to fetch BPMN files from ".concat(o,"/").concat(l," (branch: ").concat(r,")")),console.log("BusinessProcessSelection: Final repository access details:",{derivedOwner:o,repositoryName:l,ref:r,fullRepositoryData:{name:d.name,full_name:d.full_name,owner:d.owner,default_branch:d.default_branch}});const c=await s.A.getBpmnFiles(o,l,r);if(console.log("\ud83d\udcca BusinessProcessSelection: Received BPMN files:",{count:c.length,files:c.map(e=>{var n;return{name:e.name,path:e.path,size:e.size,hasDownloadUrl:!!e.download_url,sha:null===(n=e.sha)||void 0===n?void 0:n.substring(0,8)}})}),0===c.length&&null!==a&&void 0!==a&&a.isDemo){console.log("No BPMN files found in demo mode, providing fallback demo files");f([{name:"patient-registration.bpmn",path:"demo/business-processes/patient-registration.bpmn",sha:"demo-sha-1",size:2048,download_url:"#",html_url:"#"},{name:"vaccination-workflow.bpmn",path:"demo/business-processes/vaccination-workflow.bpmn",sha:"demo-sha-2",size:3072,download_url:"#"},{name:"appointment-scheduling.bpmn",path:"demo/business-processes/appointment-scheduling.bpmn",sha:"demo-sha-3",size:1536,download_url:"#"}])}else f(c);P(!1)}catch(r){var l;if(console.error("Failed to fetch BPMN files from repository:",r),null!==a&&void 0!==a&&a.isDemo||null!==(l=r.message)&&void 0!==l&&l.includes("Failed to fetch")){console.log("Providing fallback demo BPMN files");return f([{name:"patient-registration.bpmn",path:"demo/business-processes/patient-registration.bpmn",sha:"demo-sha-1",size:2048,download_url:"#",html_url:"#"},{name:"vaccination-workflow.bpmn",path:"demo/business-processes/vaccination-workflow.bpmn",sha:"demo-sha-2",size:3072,download_url:"#"},{name:"appointment-scheduling.bpmn",path:"demo/business-processes/appointment-scheduling.bpmn",sha:"demo-sha-3",size:1536,download_url:"#"}]),void P(!1)}401===r.status||403===r.status?B("Authentication required to access this repository. Please ensure you have a valid GitHub token with appropriate permissions."):404===r.status?B("Repository or branch not found. Please check the repository name and branch."):B("Failed to load BPMN files from repository: ".concat(r.message)),f([]),P(!1)}else o("/")})()},[a,d,o,u]);return h?(0,m.jsx)("div",{className:"business-process-selection loading-state",children:(0,m.jsxs)("div",{className:"loading-content",children:[(0,m.jsx)("h2",{children:"Loading DAK Data..."}),(0,m.jsx)("p",{children:"Fetching repository and user data..."})]})}):v?(0,m.jsx)("div",{className:"business-process-selection error-state",children:(0,m.jsxs)("div",{className:"error-content",children:[(0,m.jsx)("h2",{children:"Error Loading DAK Data"}),(0,m.jsx)("p",{children:v}),(0,m.jsxs)("div",{className:"error-actions",children:[(0,m.jsx)("button",{onClick:()=>o("/"),className:"action-btn primary",children:"Return to Home"}),(0,m.jsx)("button",{onClick:()=>window.location.reload(),className:"action-btn secondary",children:"Retry"})]})]})}):a&&d?(0,m.jsx)(r.Mx,{pageName:"business-process-selection",children:(0,m.jsx)("div",{className:"business-process-selection",children:(0,m.jsx)("div",{className:"selection-content",children:(0,m.jsxs)("div",{className:"selection-main",children:[(0,m.jsxs)("div",{className:"selection-intro",children:[(0,m.jsx)("h2",{children:"Business Process Files"}),(0,m.jsxs)("p",{children:["Select a BPMN business process file to view, edit, or examine the source code. Files are loaded from ",(0,m.jsx)("code",{children:"input/business-processes/"})," or ",(0,m.jsx)("code",{children:"input/business-process/"})," directories and subdirectories."]})]}),b?(0,m.jsxs)("div",{className:"loading",children:[(0,m.jsx)("div",{className:"spinner"}),(0,m.jsx)("p",{children:"Loading business process files..."})]}):N?(0,m.jsx)("div",{className:"error",children:(0,m.jsxs)("p",{children:["\u274c ",N]})}):0===w.length?(0,m.jsxs)("div",{className:"empty-state",children:[(0,m.jsx)("div",{className:"empty-icon",children:"\ud83d\udccb"}),(0,m.jsx)("h3",{children:"No BPMN Files Found"}),(0,m.jsx)("p",{children:"No .bpmn files were found in the input/business-processes/ or input/business-process/ directories."})]}):(0,m.jsx)("div",{className:"files-grid",children:w.map(e=>(0,m.jsxs)("div",{className:"file-card",children:[(0,m.jsx)(p,{file:e,repository:d,selectedBranch:u,profile:a}),(0,m.jsxs)("div",{className:"file-header",children:[(0,m.jsx)("div",{className:"file-icon",children:"\ud83d\udd04"}),(0,m.jsxs)("div",{className:"file-details",children:[(0,m.jsx)("h3",{className:"file-name",children:e.name}),(0,m.jsxs)("div",{className:"file-info-compact",children:[(0,m.jsx)("span",{className:"file-path",children:e.path}),(0,m.jsxs)("span",{className:"file-size",children:[(e.size/1024).toFixed(1)," KB"]})]})]})]}),(0,m.jsxs)("div",{className:"file-actions",children:[(0,m.jsx)("button",{className:"action-btn view-btn",onClick:n=>((e,n)=>{var i;const t=(null===(i=d.owner)||void 0===i?void 0:i.login)||d.full_name.split("/")[0],s=d.name,l=u||"main",r="/bpmn-viewer/".concat(t,"/").concat(s,"/").concat(l,"/").concat(n.path),m={profile:a,repository:d,component:g,selectedFile:n,selectedBranch:u,mode:"view"};(0,c.hX)(e,r,o,m)})(n,e),title:"View BPMN diagram (read-only)",children:"\ud83d\udc41\ufe0f View"}),(0,m.jsx)("button",{className:"action-btn edit-btn ".concat(_?"":"disabled"),onClick:n=>((e,n)=>{var i;if(!_)return void alert("You need write permissions to edit BPMN files. Please check your GitHub token permissions.");const t=(null===(i=d.owner)||void 0===i?void 0:i.login)||d.full_name.split("/")[0],s=d.name,l=u||"main",r="/bpmn-editor/".concat(t,"/").concat(s,"/").concat(l,"/").concat(n.path),m={profile:a,repository:d,component:g,selectedFile:n,selectedBranch:u,mode:"edit"};(0,c.hX)(e,r,o,m)})(n,e),title:_?"Edit BPMN diagram":"Edit access required",disabled:!_,children:"\u270f\ufe0f Edit"}),(0,m.jsx)("button",{className:"action-btn source-btn",onClick:n=>((e,n)=>{var i;const t=(null===(i=d.owner)||void 0===i?void 0:i.login)||d.full_name.split("/")[0],s=d.name,l=u||"main",r="/bpmn-source/".concat(t,"/").concat(s,"/").concat(l,"/").concat(n.path),m={profile:a,repository:d,component:g,selectedFile:n,selectedBranch:u};(0,c.hX)(e,r,o,m)})(n,e),title:"View XML source code",children:"\ud83d\udcc4 Source"})]})]},e.sha))})]})})})}):(o("/"),(0,m.jsx)("div",{children:"Redirecting..."}))}}}]);
//# sourceMappingURL=567.27effc44.chunk.js.map