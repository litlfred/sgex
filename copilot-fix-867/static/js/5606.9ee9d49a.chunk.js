"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[5606],{44076:(e,t,s)=>{s.d(t,{A:()=>i});var a=s(85571);const i=new class{constructor(){this.logger=a.A.getLogger("CQLIntrospectionService")}parseCQLText(e){try{const t={dataElements:new Set,libraries:new Set,valueSets:new Set,parameters:new Set,definitions:new Set,context:null,errors:[]};if(!e||"string"!==typeof e)return t.errors.push("Invalid CQL text provided"),this.formatResult(t);const s=e.split("\n");for(let e=0;e<s.length;e++){const a=s[e].trim();if(!a||a.startsWith("//")||a.startsWith("/*"))continue;const i=a.match(/context\s+(\w+)/i);i&&(t.context=i[1]);const r=a.match(/include\s+([^\s]+)/i);r&&t.libraries.add(r[1]);(a.match(/"[^"]*"/g)||[]).forEach(e=>{const s=e.replace(/"/g,"");this.isValueSetReference(s)&&t.valueSets.add(s)});const n=a.match(/\s+in\s+"([^"]+)"/g);n&&n.forEach(e=>{const s=e.match(/in\s+"([^"]+)"/);s&&t.valueSets.add(s[1])});const l=a.match(/\s+in\s+([A-Z][a-zA-Z\s]+)(?:\s|$)/);if(l){const e=l[1].trim();e&&"true"!==e&&"false"!==e&&t.valueSets.add(e)}const c=a.match(/\[([A-Z][a-zA-Z]+)\]/g);c&&c.forEach(e=>{const s=e.replace(/[[\]]/g,"");t.dataElements.add(s)});const o=a.match(/parameter\s+([^\s:]+)/i);o&&t.parameters.add(o[1]);const d=a.match(/define\s+([^\s:]+)/i);d&&t.definitions.add(d[1]);const u=a.match(/(\w+)\.(\w+)/g);u&&u.forEach(e=>{t.dataElements.add(e)})}return this.logger.info("Parsed CQL text",{dataElements:t.dataElements.size,libraries:t.libraries.size,valueSets:t.valueSets.size}),this.formatResult(t)}catch(t){return this.logger.error("Failed to parse CQL text:",t),{dataElements:[],libraries:[],valueSets:[],parameters:[],definitions:[],context:null,errors:[t.message]}}}parseELMJson(e){try{var t,s,a,i;const r={dataElements:new Set,libraries:new Set,valueSets:new Set,parameters:new Set,definitions:new Set,context:null,errors:[]};if(!e||!e.library)return r.errors.push("Invalid ELM JSON provided"),this.formatResult(r);const n=e.library;return null!==(t=n.includes)&&void 0!==t&&t.def&&n.includes.def.forEach(e=>{e.localIdentifier&&r.libraries.add(e.localIdentifier)}),null!==(s=n.parameters)&&void 0!==s&&s.def&&n.parameters.def.forEach(e=>{e.name&&r.parameters.add(e.name)}),null!==(a=n.statements)&&void 0!==a&&a.def&&n.statements.def.forEach(e=>{e.name&&r.definitions.add(e.name),e.context&&!r.context&&(r.context=e.context),this.extractFromExpression(e.expression,r)}),null!==(i=n.valueSets)&&void 0!==i&&i.def&&n.valueSets.def.forEach(e=>{e.name&&r.valueSets.add(e.name)}),this.logger.info("Parsed ELM JSON",{dataElements:r.dataElements.size,libraries:r.libraries.size,valueSets:r.valueSets.size}),this.formatResult(r)}catch(r){return this.logger.error("Failed to parse ELM JSON:",r),{dataElements:[],libraries:[],valueSets:[],parameters:[],definitions:[],context:null,errors:[r.message]}}}extractFromExpression(e,t){var s,a;if(e)switch(e.type){case"Retrieve":if(e.dataType){const s=this.extractResourceType(e.dataType);s&&t.dataElements.add(s)}break;case"Property":e.path&&t.dataElements.add(e.path),this.extractFromExpression(e.source,t);break;case"InValueSet":e.valueset&&t.valueSets.add(e.valueset),this.extractFromExpression(e.code,t);break;case"Equal":case"NotEqual":case"Less":case"Greater":case"And":case"Or":this.extractFromExpression(null===(s=e.operand)||void 0===s?void 0:s[0],t),this.extractFromExpression(null===(a=e.operand)||void 0===a?void 0:a[1],t);break;case"Exists":case"Not":this.extractFromExpression(e.operand,t);break;case"Query":e.source&&e.source.forEach(e=>{this.extractFromExpression(e.expression,t)}),this.extractFromExpression(e.where,t);break;default:e.operand&&Array.isArray(e.operand)&&e.operand.forEach(e=>{this.extractFromExpression(e,t)})}}extractResourceType(e){const t=e.match(/\{[^}]+\}(\w+)/);return t?t[1]:e}isValueSetReference(e){return e.includes("urn:")||e.includes("http:")||e.includes("oid:")||e.includes(" Codes")||e.includes(" Values")||e.includes(" Set")||/^[A-Z][a-zA-Z\s]+$/.test(e)}formatResult(e){return{dataElements:Array.from(e.dataElements),libraries:Array.from(e.libraries),valueSets:Array.from(e.valueSets),parameters:Array.from(e.parameters),definitions:Array.from(e.definitions),context:e.context,errors:e.errors}}extractLibraryReferences(e){const t=[];if(!e)return t;return e.split("\n").forEach((e,s)=>{const a=e.trim(),i=a.match(/include\s+([^\s]+)(\s+version\s+[^\s]+)?(\s+called\s+([^\s]+))?/i);var r;i&&t.push({type:"include",library:i[1],version:null===(r=i[2])||void 0===r?void 0:r.replace(/\s*version\s+/i,"").trim(),alias:i[4],line:s+1,text:a});const n=a.matchAll(/([A-Z][a-zA-Z0-9_]*)\s*\.\s*([a-zA-Z][a-zA-Z0-9_]*)/g);for(const l of n)t.push({type:"function-call",library:l[1],function:l[2],line:s+1,text:a})}),t}getSummary(e){const t=this.parseCQLText(e),s=this.extractLibraryReferences(e);return{context:t.context,dataElementCount:t.dataElements.length,libraryCount:t.libraries.length,valueSetCount:t.valueSets.length,parameterCount:t.parameters.length,definitionCount:t.definitions.length,libraryReferences:s.length,hasErrors:t.errors.length>0,errors:t.errors}}}},67802:(e,t,s)=>{s.d(t,{A:()=>r});var a=s(85571),i=s(44076);const r=new class{constructor(){this.logger=a.A.getLogger("CQLValidationService"),this.dataDictionary=new Map,this.upstreamDependencies=new Map}loadDataDictionary(e){try{if(this.dataDictionary.clear(),!e||!e.concepts)return void this.logger.warn("No data dictionary concepts provided");e.concepts.forEach(e=>{if(e.Code&&this.dataDictionary.set(e.Code,e),e.Display&&this.dataDictionary.set(e.Display,e),e.Definition){this.extractDefinitionKeys(e.Definition).forEach(t=>{this.dataDictionary.set(t,e)})}}),this.logger.info("Loaded data dictionary with ".concat(e.concepts.length," concepts"))}catch(t){throw this.logger.error("Failed to load data dictionary:",t),t}}loadUpstreamDependencies(e){try{this.upstreamDependencies.clear(),e.forEach((e,t)=>{const s=new Map;e.concepts&&e.concepts.forEach(e=>{e.Code&&s.set(e.Code,e),e.Display&&s.set(e.Display,e)}),this.upstreamDependencies.set(e.name||"dependency-".concat(t),s)}),this.logger.info("Loaded ".concat(e.length," upstream dependencies"))}catch(t){throw this.logger.error("Failed to load upstream dependencies:",t),t}}validateCQL(e){try{const t={isValid:!0,errors:[],warnings:[],dataElementValidation:[],valueSetValidation:[],libraryValidation:[],summary:{totalElements:0,validElements:0,invalidElements:0,missingElements:0}},s=i.A.parseCQLText(e);return s.errors.length>0&&(t.errors.push(...s.errors),t.isValid=!1),t.dataElementValidation=this.validateDataElements(s.dataElements),t.valueSetValidation=this.validateValueSets(s.valueSets),t.libraryValidation=this.validateLibraryReferences(s.libraries),this.calculateValidationSummary(t),t.isValid=0===t.errors.length&&0===t.summary.invalidElements,this.logger.info("CQL validation completed",{isValid:t.isValid,errorCount:t.errors.length,warningCount:t.warnings.length}),t}catch(t){return this.logger.error("CQL validation failed:",t),{isValid:!1,errors:[t.message],warnings:[],dataElementValidation:[],valueSetValidation:[],libraryValidation:[],summary:{totalElements:0,validElements:0,invalidElements:0,missingElements:0}}}}validateDataElements(e){return e.map(e=>{const t={element:e,isValid:!1,source:null,concept:null,issues:[]};if(this.dataDictionary.has(e))return t.isValid=!0,t.source="local",t.concept=this.dataDictionary.get(e),t;for(const[a,i]of this.upstreamDependencies)if(i.has(e))return t.isValid=!0,t.source=a,t.concept=i.get(e),t;const s=this.findSimilarElements(e);return s.length>0?t.issues.push({type:"suggestion",message:"Element not found, did you mean: ".concat(s.join(", "),"?")}):t.issues.push({type:"missing",message:"Element not found in data dictionary or upstream dependencies"}),t})}validateValueSets(e){return e.map(e=>{const t={valueSet:e,isValid:!1,source:null,issues:[]};return this.isValidValueSetFormat(e)?(t.isValid=!0,t.source="format"):t.issues.push({type:"format",message:"Value set reference does not follow expected format"}),t})}validateLibraryReferences(e){return e.map(e=>{const t={library:e,isValid:!0,source:"unknown",issues:[]};return t.issues.push({type:"warning",message:"Library reference not verified - ensure library is available at runtime"}),t})}findSimilarElements(e){const t=[],s=e.toLowerCase();for(const[a]of this.dataDictionary)if((a.toLowerCase().includes(s)||s.includes(a.toLowerCase()))&&(t.push(a),t.length>=3))break;return t}isValidValueSetFormat(e){return[/^urn:oid:\d+(\.\d+)*$/,/^https?:\/\/.*/,/.*\s+(Codes|Values|Set)$/,/^[A-Z][a-zA-Z0-9\s]+$/].some(t=>t.test(e))}extractDefinitionKeys(e){if(!e)return[];const t=[],s=e.match(/\b[A-Z][a-z]+\b/g);s&&t.push(...s);const a=e.match(/\w+\.\w+/g);return a&&t.push(...a),[...new Set(t)]}calculateValidationSummary(e){const t=e.summary;e.dataElementValidation.forEach(e=>{t.totalElements++,e.isValid?t.validElements++:(t.invalidElements++,e.issues.some(e=>"missing"===e.type)&&t.missingElements++)}),e.valueSetValidation.forEach(e=>{t.totalElements++,e.isValid?t.validElements++:t.invalidElements++})}generateReport(e){const t=[];t.push("=== CQL Validation Report ==="),t.push(""),t.push("Summary:"),t.push("  Total Elements: ".concat(e.summary.totalElements)),t.push("  Valid Elements: ".concat(e.summary.validElements)),t.push("  Invalid Elements: ".concat(e.summary.invalidElements)),t.push("  Missing Elements: ".concat(e.summary.missingElements)),t.push("  Overall Status: ".concat(e.isValid?"VALID":"INVALID")),t.push(""),e.errors.length>0&&(t.push("Errors:"),e.errors.forEach(e=>{t.push("  - ".concat(e))}),t.push(""));const s=e.dataElementValidation.filter(e=>!e.isValid);return s.length>0&&(t.push("Invalid Data Elements:"),s.forEach(e=>{t.push("  - ".concat(e.element)),e.issues.forEach(e=>{t.push("    ".concat(e.type,": ").concat(e.message))})}),t.push("")),e.warnings.length>0&&(t.push("Warnings:"),e.warnings.forEach(e=>{t.push("  - ".concat(e))})),t.join("\n")}clear(){this.dataDictionary.clear(),this.upstreamDependencies.clear(),this.logger.info("CQL validation service cleared")}}},85606:(e,t,s)=>{s.d(t,{A:()=>u});var a=s(9950),i=s(44182),r=s(85571);const n=new class{constructor(){this.logger=r.A.getLogger("CQLExecutionService"),this.elmLibraries=new Map,this.valueSetDB=new Map,this.codeService=null}initialize(){this.codeService=new i.CodeService(this.valueSetDB),this.logger.info("CQL Execution Service initialized")}loadLibrary(e,t){try{if(!t||"object"!==typeof t)throw new Error("Invalid ELM JSON provided");return this.elmLibraries.set(e,t),this.logger.info("Loaded library: ".concat(e)),!0}catch(s){throw this.logger.error("Failed to load library ".concat(e,":"),s),s}}translateCQL(e){return this.logger.warn("CQL translation not implemented - provide ELM JSON directly"),{library:{identifier:{id:"Demo",version:"1.0.0"},schemaIdentifier:{id:"urn:hl7-org:elm",version:"r1"},usings:{def:[{localIdentifier:"System",uri:"urn:hl7-org:elm-types:r1"}]},statements:{def:[{name:"Patient",context:"Patient",expression:{type:"SingletonFrom",operand:{dataType:"{http://hl7.org/fhir}Patient",type:"Retrieve"}}}]}}}}async executeLibrary(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{this.codeService||this.initialize();const a=this.elmLibraries.get(e);if(!a)throw new Error("Library ".concat(e," not loaded"));const r=new i.Repository(a),n=i.PatientSource.FHIRv401();if(t&&t.length>0){const e=this.prepareTestData(t);n.loadBundles([e])}const l=new i.Executor(r,this.codeService,s).exec(n);return this.logger.info("Executed library ".concat(e),{resultCount:Object.keys(l.patientResults||{}).length}),{success:!0,libraryName:e,results:l.patientResults||{},unfilteredResults:l.unfilteredResults||{},localIdPatientResultsMap:l.localIdPatientResultsMap||{}}}catch(a){return this.logger.error("Failed to execute library ".concat(e,":"),a),{success:!1,libraryName:e,error:a.message,results:{}}}}prepareTestData(e){const t={resourceType:"Bundle",id:"test-data-bundle",type:"collection",entry:[]};return e.forEach((e,s)=>{e&&e.resourceType&&t.entry.push({fullUrl:"urn:uuid:test-resource-".concat(s),resource:e})}),t}loadValueSets(e){try{e.forEach(e=>{e.id&&e.codes&&this.valueSetDB.set(e.id,e.codes)}),this.codeService=new i.CodeService(this.valueSetDB),this.logger.info("Loaded ".concat(e.length," value sets"))}catch(t){throw this.logger.error("Failed to load value sets:",t),t}}getLoadedLibraries(){return Array.from(this.elmLibraries.keys())}clear(){this.elmLibraries.clear(),this.valueSetDB.clear(),this.codeService=null,this.logger.info("CQL Execution Service cleared")}getLibraryInfo(e){var t,s,a,i;const r=this.elmLibraries.get(e);if(!r)return null;const n=r.library||{};return{name:e,identifier:n.identifier||{},usings:(null===(t=n.usings)||void 0===t?void 0:t.def)||[],includes:(null===(s=n.includes)||void 0===s?void 0:s.def)||[],statements:(null===(a=n.statements)||void 0===a?void 0:a.def)||[],parameters:(null===(i=n.parameters)||void 0===i?void 0:i.def)||[]}}};var l=s(44076),c=s(67802),o=s(38659),d=s(44414);const u=e=>{let{file:t,content:s="",repository:i,branch:r="main",isDemo:u=!1,onSave:h,onLibraryClick:m,dataDictionary:p,testData:v=[]}=e;const[x,g]=(0,a.useState)(s),[f,y]=(0,a.useState)(!1),[E,j]=(0,a.useState)(null),[b,S]=(0,a.useState)(null),[N,L]=(0,a.useState)(null),[w,C]=(0,a.useState)(null),[V,D]=(0,a.useState)(null),[A,R]=(0,a.useState)(!1),[Q,k]=(0,a.useState)([]),[F,I]=(0,a.useState)("editor");(0,a.useEffect)(()=>{(async()=>{try{const[e,t]=await Promise.all([(0,o.ph)(),(0,o.Vq)()]);j(()=>e),S(t)}catch(e){console.error("Failed to load syntax highlighter:",e)}})()},[]),(0,a.useEffect)(()=>{g(s)},[s]),(0,a.useEffect)(()=>{if(x){const e=l.A.parseCQLText(x);D(e)}},[x]),(0,a.useEffect)(()=>{p&&c.A.loadDataDictionary(p)},[p]);const q=e=>{g(e.target.value)},z=()=>{h&&h(x,"staging")},T=async()=>{if(x.trim()){R(!0),I("execution");try{const e=n.translateCQL(x),t="Demo_".concat(Date.now());n.loadLibrary(t,e);const s=await n.executeLibrary(t,Q);L(s)}catch(e){L({success:!1,error:e.message,results:{}})}finally{R(!1)}}else alert("Please enter CQL content to execute")},P=()=>{if(!x.trim())return void alert("Please enter CQL content to validate");I("validation");const e=c.A.validateCQL(x);C(e)},M=()=>t?{name:t.name||"CQL File",path:t.path||"untitled.cql"}:{name:"New CQL File",path:"untitled.cql"};return(0,d.jsxs)("div",{className:"cql-editor",children:[(0,d.jsxs)("div",{className:"cql-tabs",children:[(0,d.jsx)("button",{className:"tab ".concat("editor"===F?"active":""),onClick:()=>I("editor"),children:"Editor"}),(0,d.jsx)("button",{className:"tab ".concat("execution"===F?"active":""),onClick:()=>I("execution"),children:"Execution"}),(0,d.jsx)("button",{className:"tab ".concat("validation"===F?"active":""),onClick:()=>I("validation"),children:"Validation"}),(0,d.jsx)("button",{className:"tab ".concat("introspection"===F?"active":""),onClick:()=>I("introspection"),children:"Introspection"})]}),(0,d.jsxs)("div",{className:"cql-tab-content",children:["editor"===F&&(0,d.jsxs)("div",{className:"cql-editor-container",children:[(0,d.jsxs)("div",{className:"editor-header",children:[(0,d.jsxs)("div",{className:"editor-title",children:[(0,d.jsx)("h3",{children:M().name}),(0,d.jsx)("div",{className:"file-path",children:M().path})]}),(0,d.jsxs)("div",{className:"editor-actions",children:[(0,d.jsx)("button",{onClick:()=>y(!f),className:"edit-btn",children:f?"Preview":"Edit"}),f&&(0,d.jsx)("button",{onClick:z,className:"save-btn",children:"Save to Staging"})]})]}),(0,d.jsx)("div",{className:"editor-content",children:f?(0,d.jsxs)("div",{className:"editor-split",children:[(0,d.jsx)("textarea",{value:x,onChange:q,className:"cql-editor-textarea",placeholder:"Enter your CQL content here...",spellCheck:!1}),(0,d.jsxs)("div",{className:"editor-preview",children:[(0,d.jsx)("h4",{children:"Preview:"}),E&&b?(0,d.jsx)("syntaxHighlighter",{language:"sql",style:b,customStyle:{margin:0,borderRadius:"4px",fontSize:"14px",lineHeight:"1.5"},children:x||"// CQL content will appear here..."}):(0,d.jsx)("pre",{className:"cql-preview",children:x||"// CQL content will appear here..."})]})]}):(0,d.jsx)("div",{className:"cql-viewer",children:E&&b?(0,d.jsx)("syntaxHighlighter",{language:"sql",style:b,customStyle:{margin:0,borderRadius:"4px",fontSize:"14px",lineHeight:"1.5",minHeight:"400px"},children:x}):(0,d.jsx)("pre",{className:"cql-content",children:x})})}),(0,d.jsxs)("div",{className:"editor-footer",children:[(0,d.jsxs)("div",{className:"editor-info",children:[(0,d.jsxs)("span",{children:["CQL File \u2022 ",x.split("\n").length," lines"]}),i&&(0,d.jsxs)("span",{children:["Repository: ",i.full_name]}),r&&(0,d.jsxs)("span",{children:["Branch: ",r]})]}),(0,d.jsxs)("div",{className:"cql-actions",children:[(0,d.jsx)("button",{onClick:T,disabled:A,className:"execute-btn",children:A?"Executing...":"Execute CQL"}),(0,d.jsx)("button",{onClick:P,className:"validate-btn",children:"Validate"})]})]})]}),"execution"===F&&(0,d.jsxs)("div",{className:"cql-execution-panel",children:[(0,d.jsx)("h4",{children:"Execution Results"}),(0,d.jsxs)("div",{className:"test-data-selector",children:[(0,d.jsx)("label",{children:"Test Data:"}),(0,d.jsxs)("select",{value:Q.length,onChange:e=>{const t=parseInt(e.target.value),s=Array(t).fill(null).map((e,t)=>({resourceType:"Patient",id:"patient-".concat(t+1),name:[{given:["Test"],family:"Patient".concat(t+1)}]}));k(s)},children:[(0,d.jsx)("option",{value:"0",children:"No test data"}),(0,d.jsx)("option",{value:"1",children:"1 test patient"}),(0,d.jsx)("option",{value:"3",children:"3 test patients"}),(0,d.jsx)("option",{value:"5",children:"5 test patients"})]})]}),N&&(0,d.jsx)("div",{className:"execution-results",children:N.success?(0,d.jsxs)("div",{className:"results-success",children:[(0,d.jsx)("h5",{children:"\u2705 Execution Successful"}),(0,d.jsxs)("div",{className:"results-data",children:[(0,d.jsx)("strong",{children:"Library:"})," ",N.libraryName,(0,d.jsx)("br",{}),(0,d.jsx)("strong",{children:"Results:"}),(0,d.jsx)("pre",{children:JSON.stringify(N.results,null,2)})]})]}):(0,d.jsxs)("div",{className:"results-error",children:[(0,d.jsx)("h5",{children:"\u274c Execution Failed"}),(0,d.jsx)("div",{className:"error-message",children:N.error})]})})]}),"validation"===F&&(0,d.jsxs)("div",{className:"cql-validation-panel",children:[(0,d.jsx)("h4",{children:"Validation Results"}),w&&(0,d.jsxs)("div",{className:"validation-results",children:[(0,d.jsxs)("div",{className:"validation-summary ".concat(w.isValid?"valid":"invalid"),children:[(0,d.jsx)("h5",{children:w.isValid?"\u2705 Valid":"\u274c Invalid"}),(0,d.jsxs)("div",{className:"validation-stats",children:[(0,d.jsxs)("span",{children:["Total Elements: ",w.summary.totalElements]}),(0,d.jsxs)("span",{children:["Valid: ",w.summary.validElements]}),(0,d.jsxs)("span",{children:["Invalid: ",w.summary.invalidElements]}),(0,d.jsxs)("span",{children:["Missing: ",w.summary.missingElements]})]})]}),w.errors.length>0&&(0,d.jsxs)("div",{className:"validation-errors",children:[(0,d.jsx)("h6",{children:"Errors:"}),(0,d.jsx)("ul",{children:w.errors.map((e,t)=>(0,d.jsx)("li",{className:"error-item",children:e},t))})]}),w.dataElementValidation.length>0&&(0,d.jsxs)("div",{className:"data-element-validation",children:[(0,d.jsx)("h6",{children:"Data Elements:"}),w.dataElementValidation.map((e,t)=>(0,d.jsxs)("div",{className:"element-validation ".concat(e.isValid?"valid":"invalid"),children:[(0,d.jsx)("span",{className:"element-name",children:e.element}),(0,d.jsxs)("span",{className:"element-status",children:[e.isValid?"\u2705":"\u274c",e.source&&" (".concat(e.source,")")]}),e.issues.length>0&&(0,d.jsx)("div",{className:"element-issues",children:e.issues.map((e,t)=>(0,d.jsx)("div",{className:"issue",children:e.message},t))})]},t))]})]})]}),"introspection"===F&&(0,d.jsxs)("div",{className:"cql-introspection-panel",children:[(0,d.jsx)("h4",{children:"Introspection Results"}),V&&(0,d.jsxs)("div",{className:"introspection-results",children:[(0,d.jsxs)("div",{className:"introspection-summary",children:[(0,d.jsxs)("div",{className:"summary-item",children:[(0,d.jsx)("strong",{children:"Context:"})," ",V.context||"Not specified"]}),(0,d.jsxs)("div",{className:"summary-item",children:[(0,d.jsx)("strong",{children:"Data Elements:"})," ",V.dataElements.length]}),(0,d.jsxs)("div",{className:"summary-item",children:[(0,d.jsx)("strong",{children:"Libraries:"})," ",V.libraries.length]}),(0,d.jsxs)("div",{className:"summary-item",children:[(0,d.jsx)("strong",{children:"Value Sets:"})," ",V.valueSets.length]})]}),V.dataElements.length>0&&(0,d.jsxs)("div",{className:"introspection-section",children:[(0,d.jsx)("h6",{children:"Data Elements Referenced:"}),(0,d.jsx)("ul",{className:"element-list",children:V.dataElements.map((e,t)=>(0,d.jsx)("li",{className:"element-item",children:e},t))})]}),V.libraries.length>0&&(0,d.jsxs)("div",{className:"introspection-section",children:[(0,d.jsx)("h6",{children:"Library Dependencies:"}),(0,d.jsx)("ul",{className:"library-list",children:V.libraries.map((e,t)=>(0,d.jsxs)("li",{className:"library-item",children:[(0,d.jsx)("span",{className:"library-name",children:e}),(0,d.jsx)("button",{className:"library-link",onClick:()=>{return t=e,void(m?m(t):alert("Navigate to library: ".concat(t)));var t},title:"Navigate to library: ".concat(e),children:"View"})]},t))})]}),V.valueSets.length>0&&(0,d.jsxs)("div",{className:"introspection-section",children:[(0,d.jsx)("h6",{children:"Value Sets:"}),(0,d.jsx)("ul",{className:"valueset-list",children:V.valueSets.map((e,t)=>(0,d.jsx)("li",{className:"valueset-item",children:e},t))})]}),V.definitions.length>0&&(0,d.jsxs)("div",{className:"introspection-section",children:[(0,d.jsx)("h6",{children:"Definitions:"}),(0,d.jsx)("ul",{className:"definition-list",children:V.definitions.map((e,t)=>(0,d.jsx)("li",{className:"definition-item",children:e},t))})]})]})]})]})]})}}}]);