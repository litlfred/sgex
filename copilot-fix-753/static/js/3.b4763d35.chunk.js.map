{"version":3,"file":"static/js/3.b4763d35.chunk.js","mappings":"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","sources":["../node_modules/ajv/lib/compile/validate/applicability.ts","../node_modules/fast-deep-equal/index.js","../node_modules/ajv/lib/compile/validate/defaults.ts","../node_modules/ajv/lib/vocabularies/applicator/items.ts","../node_modules/fast-uri/lib/utils.js","../node_modules/ajv/lib/compile/validate/subschema.ts","../node_modules/ajv/lib/vocabularies/validation/limitNumber.ts","../node_modules/ajv/lib/vocabularies/core/ref.ts","../node_modules/ajv/lib/vocabularies/core/index.ts","../node_modules/ajv/lib/vocabularies/discriminator/types.ts","../node_modules/ajv/lib/vocabularies/format/format.ts","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/ajv/lib/runtime/ucs2length.ts","../node_modules/ajv/lib/runtime/validation_error.ts","../node_modules/ajv/lib/core.ts","../node_modules/ajv/lib/vocabularies/validation/limitLength.ts","../node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","../node_modules/ajv/lib/compile/index.ts","../node_modules/ajv/lib/compile/rules.ts","../node_modules/ajv/lib/compile/codegen/scope.ts","../node_modules/ajv/lib/compile/codegen/index.ts","../node_modules/ajv/lib/compile/validate/keyword.ts","../node_modules/ajv/lib/vocabularies/code.ts","../node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts","../node_modules/fast-uri/lib/schemes.js","../node_modules/ajv/lib/compile/resolve.ts","../node_modules/ajv/lib/vocabularies/core/id.ts","../node_modules/ajv/lib/vocabularies/applicator/index.ts","../node_modules/ajv/lib/compile/errors.ts","../node_modules/ajv/lib/vocabularies/validation/limitItems.ts","../node_modules/ajv/lib/compile/validate/boolSchema.ts","../node_modules/ajv/lib/compile/ref_error.ts","../node_modules/ajv/lib/runtime/equal.ts","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts","../node_modules/fast-uri/lib/scopedChars.js","../node_modules/ajv/lib/vocabularies/applicator/items2020.ts","../node_modules/ajv/lib/vocabularies/applicator/contains.ts","../node_modules/ajv/lib/vocabularies/validation/limitProperties.ts","../node_modules/ajv/lib/vocabularies/validation/const.ts","../node_modules/ajv/lib/vocabularies/applicator/dependencies.ts","../node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts","../node_modules/ajv/lib/compile/validate/index.ts","../node_modules/ajv/lib/compile/codegen/code.ts","../node_modules/ajv/lib/vocabularies/metadata.ts","../node_modules/ajv/lib/vocabularies/validation/enum.ts","../node_modules/ajv/lib/compile/validate/dataType.ts","../node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts","../node_modules/ajv/lib/vocabularies/applicator/properties.ts","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/ajv/lib/runtime/uri.ts","../node_modules/ajv/lib/ajv.ts","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/json-schema-traverse/index.js","../node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts","../node_modules/ajv/lib/vocabularies/applicator/thenElse.ts","../node_modules/ajv/lib/vocabularies/applicator/anyOf.ts","../node_modules/fast-uri/index.js","../node_modules/ajv/lib/vocabularies/validation/required.ts","../node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts","../node_modules/ajv/lib/vocabularies/applicator/allOf.ts","../node_modules/ajv/lib/vocabularies/validation/multipleOf.ts","../node_modules/ajv/lib/compile/util.ts","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/ajv/lib/vocabularies/discriminator/index.ts","../node_modules/ajv/lib/compile/names.ts","../node_modules/ajv/lib/vocabularies/validation/pattern.ts","../node_modules/ajv/lib/vocabularies/validation/index.ts","../node_modules/ajv/lib/vocabularies/applicator/if.ts","../node_modules/ajv/lib/vocabularies/applicator/oneOf.ts","../node_modules/ajv/lib/vocabularies/format/index.ts","../node_modules/ajv/lib/vocabularies/applicator/not.ts","../node_modules/ajv/lib/vocabularies/draft7.ts"],"sourcesContent":["import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n","import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n","'use strict'\n\nconst { HEX } = require('./scopedChars')\n\nconst IPV4_REG = /^(?:(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)$/u\n\nfunction normalizeIPv4 (host) {\n  if (findToken(host, '.') < 3) { return { host, isIPV4: false } }\n  const matches = host.match(IPV4_REG) || []\n  const [address] = matches\n  if (address) {\n    return { host: stripLeadingZeros(address, '.'), isIPV4: true }\n  } else {\n    return { host, isIPV4: false }\n  }\n}\n\n/**\n * @param {string[]} input\n * @param {boolean} [keepZero=false]\n * @returns {string|undefined}\n */\nfunction stringArrayToHexStripped (input, keepZero = false) {\n  let acc = ''\n  let strip = true\n  for (const c of input) {\n    if (HEX[c] === undefined) return undefined\n    if (c !== '0' && strip === true) strip = false\n    if (!strip) acc += c\n  }\n  if (keepZero && acc.length === 0) acc = '0'\n  return acc\n}\n\nfunction getIPV6 (input) {\n  let tokenCount = 0\n  const output = { error: false, address: '', zone: '' }\n  const address = []\n  const buffer = []\n  let isZone = false\n  let endipv6Encountered = false\n  let endIpv6 = false\n\n  function consume () {\n    if (buffer.length) {\n      if (isZone === false) {\n        const hex = stringArrayToHexStripped(buffer)\n        if (hex !== undefined) {\n          address.push(hex)\n        } else {\n          output.error = true\n          return false\n        }\n      }\n      buffer.length = 0\n    }\n    return true\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const cursor = input[i]\n    if (cursor === '[' || cursor === ']') { continue }\n    if (cursor === ':') {\n      if (endipv6Encountered === true) {\n        endIpv6 = true\n      }\n      if (!consume()) { break }\n      tokenCount++\n      address.push(':')\n      if (tokenCount > 7) {\n        // not valid\n        output.error = true\n        break\n      }\n      if (i - 1 >= 0 && input[i - 1] === ':') {\n        endipv6Encountered = true\n      }\n      continue\n    } else if (cursor === '%') {\n      if (!consume()) { break }\n      // switch to zone detection\n      isZone = true\n    } else {\n      buffer.push(cursor)\n      continue\n    }\n  }\n  if (buffer.length) {\n    if (isZone) {\n      output.zone = buffer.join('')\n    } else if (endIpv6) {\n      address.push(buffer.join(''))\n    } else {\n      address.push(stringArrayToHexStripped(buffer))\n    }\n  }\n  output.address = address.join('')\n  return output\n}\n\nfunction normalizeIPv6 (host) {\n  if (findToken(host, ':') < 2) { return { host, isIPV6: false } }\n  const ipv6 = getIPV6(host)\n\n  if (!ipv6.error) {\n    let newHost = ipv6.address\n    let escapedHost = ipv6.address\n    if (ipv6.zone) {\n      newHost += '%' + ipv6.zone\n      escapedHost += '%25' + ipv6.zone\n    }\n    return { host: newHost, escapedHost, isIPV6: true }\n  } else {\n    return { host, isIPV6: false }\n  }\n}\n\nfunction stripLeadingZeros (str, token) {\n  let out = ''\n  let skip = true\n  const l = str.length\n  for (let i = 0; i < l; i++) {\n    const c = str[i]\n    if (c === '0' && skip) {\n      if ((i + 1 <= l && str[i + 1] === token) || i + 1 === l) {\n        out += c\n        skip = false\n      }\n    } else {\n      if (c === token) {\n        skip = true\n      } else {\n        skip = false\n      }\n      out += c\n    }\n  }\n  return out\n}\n\nfunction findToken (str, token) {\n  let ind = 0\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === token) ind++\n  }\n  return ind\n}\n\nconst RDS1 = /^\\.\\.?\\//u\nconst RDS2 = /^\\/\\.(?:\\/|$)/u\nconst RDS3 = /^\\/\\.\\.(?:\\/|$)/u\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/u\n\nfunction removeDotSegments (input) {\n  const output = []\n\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, '')\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, '/')\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, '/')\n      output.pop()\n    } else if (input === '.' || input === '..') {\n      input = ''\n    } else {\n      const im = input.match(RDS5)\n      if (im) {\n        const s = im[0]\n        input = input.slice(s.length)\n        output.push(s)\n      } else {\n        throw new Error('Unexpected dot segment condition')\n      }\n    }\n  }\n  return output.join('')\n}\n\nfunction normalizeComponentEncoding (components, esc) {\n  const func = esc !== true ? escape : unescape\n  if (components.scheme !== undefined) {\n    components.scheme = func(components.scheme)\n  }\n  if (components.userinfo !== undefined) {\n    components.userinfo = func(components.userinfo)\n  }\n  if (components.host !== undefined) {\n    components.host = func(components.host)\n  }\n  if (components.path !== undefined) {\n    components.path = func(components.path)\n  }\n  if (components.query !== undefined) {\n    components.query = func(components.query)\n  }\n  if (components.fragment !== undefined) {\n    components.fragment = func(components.fragment)\n  }\n  return components\n}\n\nfunction recomposeAuthority (components) {\n  const uriTokens = []\n\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo)\n    uriTokens.push('@')\n  }\n\n  if (components.host !== undefined) {\n    let host = unescape(components.host)\n    const ipV4res = normalizeIPv4(host)\n\n    if (ipV4res.isIPV4) {\n      host = ipV4res.host\n    } else {\n      const ipV6res = normalizeIPv6(ipV4res.host)\n      if (ipV6res.isIPV6 === true) {\n        host = `[${ipV6res.escapedHost}]`\n      } else {\n        host = components.host\n      }\n    }\n    uriTokens.push(host)\n  }\n\n  if (typeof components.port === 'number' || typeof components.port === 'string') {\n    uriTokens.push(':')\n    uriTokens.push(String(components.port))\n  }\n\n  return uriTokens.length ? uriTokens.join('') : undefined\n};\n\nmodule.exports = {\n  recomposeAuthority,\n  normalizeComponentEncoding,\n  removeDotSegments,\n  normalizeIPv4,\n  normalizeIPv6,\n  stringArrayToHexStripped\n}\n","import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n","import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n","import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n","import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n","export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","function _taggedTemplateLiteral(e, t) {\n  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(t)\n    }\n  }));\n}\nmodule.exports = _taggedTemplateLiteral, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport {URIComponent} from \"fast-uri\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URIComponent,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n","import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = (typeof _jsonTypes)[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n","import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n","import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private rhs?: SafeExpr\n  ) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(\n    readonly lhs: Code,\n    public rhs: SafeExpr,\n    private readonly sideEffects?: boolean\n  ) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(\n    lhs: Code,\n    private readonly op: Code,\n    rhs: SafeExpr,\n    sideEffects?: boolean\n  ) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(\n    private condition: Code | boolean,\n    nodes?: ChildNode[]\n  ) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(\n    public name: Name,\n    public args: Code,\n    public async?: boolean\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n","import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n","import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n","'use strict'\n\nconst UUID_REG = /^[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}$/iu\nconst URN_REG = /([\\da-z][\\d\\-a-z]{0,31}):((?:[\\w!$'()*+,\\-.:;=@]|%[\\da-f]{2})+)/iu\n\nfunction isSecure (wsComponents) {\n  return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === 'wss'\n}\n\nfunction httpParse (components) {\n  if (!components.host) {\n    components.error = components.error || 'HTTP URIs must have a host.'\n  }\n\n  return components\n}\n\nfunction httpSerialize (components) {\n  const secure = String(components.scheme).toLowerCase() === 'https'\n\n  // normalize the default port\n  if (components.port === (secure ? 443 : 80) || components.port === '') {\n    components.port = undefined\n  }\n\n  // normalize the empty path\n  if (!components.path) {\n    components.path = '/'\n  }\n\n  // NOTE: We do not parse query strings for HTTP URIs\n  // as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n  // and not the HTTP spec.\n\n  return components\n}\n\nfunction wsParse (wsComponents) {\n// indicate if the secure flag is set\n  wsComponents.secure = isSecure(wsComponents)\n\n  // construct resouce name\n  wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '')\n  wsComponents.path = undefined\n  wsComponents.query = undefined\n\n  return wsComponents\n}\n\nfunction wsSerialize (wsComponents) {\n// normalize the default port\n  if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === '') {\n    wsComponents.port = undefined\n  }\n\n  // ensure scheme matches secure flag\n  if (typeof wsComponents.secure === 'boolean') {\n    wsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws')\n    wsComponents.secure = undefined\n  }\n\n  // reconstruct path from resource name\n  if (wsComponents.resourceName) {\n    const [path, query] = wsComponents.resourceName.split('?')\n    wsComponents.path = (path && path !== '/' ? path : undefined)\n    wsComponents.query = query\n    wsComponents.resourceName = undefined\n  }\n\n  // forbid fragment component\n  wsComponents.fragment = undefined\n\n  return wsComponents\n}\n\nfunction urnParse (urnComponents, options) {\n  if (!urnComponents.path) {\n    urnComponents.error = 'URN can not be parsed'\n    return urnComponents\n  }\n  const matches = urnComponents.path.match(URN_REG)\n  if (matches) {\n    const scheme = options.scheme || urnComponents.scheme || 'urn'\n    urnComponents.nid = matches[1].toLowerCase()\n    urnComponents.nss = matches[2]\n    const urnScheme = `${scheme}:${options.nid || urnComponents.nid}`\n    const schemeHandler = SCHEMES[urnScheme]\n    urnComponents.path = undefined\n\n    if (schemeHandler) {\n      urnComponents = schemeHandler.parse(urnComponents, options)\n    }\n  } else {\n    urnComponents.error = urnComponents.error || 'URN can not be parsed.'\n  }\n\n  return urnComponents\n}\n\nfunction urnSerialize (urnComponents, options) {\n  const scheme = options.scheme || urnComponents.scheme || 'urn'\n  const nid = urnComponents.nid.toLowerCase()\n  const urnScheme = `${scheme}:${options.nid || nid}`\n  const schemeHandler = SCHEMES[urnScheme]\n\n  if (schemeHandler) {\n    urnComponents = schemeHandler.serialize(urnComponents, options)\n  }\n\n  const uriComponents = urnComponents\n  const nss = urnComponents.nss\n  uriComponents.path = `${nid || options.nid}:${nss}`\n\n  options.skipEscape = true\n  return uriComponents\n}\n\nfunction urnuuidParse (urnComponents, options) {\n  const uuidComponents = urnComponents\n  uuidComponents.uuid = uuidComponents.nss\n  uuidComponents.nss = undefined\n\n  if (!options.tolerant && (!uuidComponents.uuid || !UUID_REG.test(uuidComponents.uuid))) {\n    uuidComponents.error = uuidComponents.error || 'UUID is not valid.'\n  }\n\n  return uuidComponents\n}\n\nfunction urnuuidSerialize (uuidComponents) {\n  const urnComponents = uuidComponents\n  // normalize UUID\n  urnComponents.nss = (uuidComponents.uuid || '').toLowerCase()\n  return urnComponents\n}\n\nconst http = {\n  scheme: 'http',\n  domainHost: true,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst https = {\n  scheme: 'https',\n  domainHost: http.domainHost,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst ws = {\n  scheme: 'ws',\n  domainHost: true,\n  parse: wsParse,\n  serialize: wsSerialize\n}\n\nconst wss = {\n  scheme: 'wss',\n  domainHost: ws.domainHost,\n  parse: ws.parse,\n  serialize: ws.serialize\n}\n\nconst urn = {\n  scheme: 'urn',\n  parse: urnParse,\n  serialize: urnSerialize,\n  skipNormalize: true\n}\n\nconst urnuuid = {\n  scheme: 'urn:uuid',\n  parse: urnuuidParse,\n  serialize: urnuuidSerialize,\n  skipNormalize: true\n}\n\nconst SCHEMES = {\n  http,\n  https,\n  ws,\n  wss,\n  urn,\n  'urn:uuid': urnuuid\n}\n\nmodule.exports = SCHEMES\n","import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponent} from \"fast-uri\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponent): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let innerBaseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") innerBaseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = innerBaseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(innerBaseId ? _resolve(innerBaseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n","import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n","import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n","import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n","import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n","// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n","'use strict'\n\nconst HEX = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  A: 10,\n  b: 11,\n  B: 11,\n  c: 12,\n  C: 12,\n  d: 13,\n  D: 13,\n  e: 14,\n  E: 14,\n  f: 15,\n  F: 15\n}\n\nmodule.exports = {\n  HEX\n}\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n","import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n","// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n","import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n","import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import * as uri from \"fast-uri\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n","import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nexport class Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nmodule.exports.Ajv = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n","'use strict'\n\nconst { normalizeIPv6, normalizeIPv4, removeDotSegments, recomposeAuthority, normalizeComponentEncoding } = require('./lib/utils')\nconst SCHEMES = require('./lib/schemes')\n\nfunction normalize (uri, options) {\n  if (typeof uri === 'string') {\n    uri = serialize(parse(uri, options), options)\n  } else if (typeof uri === 'object') {\n    uri = parse(serialize(uri, options), options)\n  }\n  return uri\n}\n\nfunction resolve (baseURI, relativeURI, options) {\n  const schemelessOptions = Object.assign({ scheme: 'null' }, options)\n  const resolved = resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true)\n  return serialize(resolved, { ...schemelessOptions, skipEscape: true })\n}\n\nfunction resolveComponents (base, relative, options, skipNormalization) {\n  const target = {}\n  if (!skipNormalization) {\n    base = parse(serialize(base, options), options) // normalize base components\n    relative = parse(serialize(relative, options), options) // normalize relative components\n  }\n  options = options || {}\n\n  if (!options.tolerant && relative.scheme) {\n    target.scheme = relative.scheme\n    // target.authority = relative.authority;\n    target.userinfo = relative.userinfo\n    target.host = relative.host\n    target.port = relative.port\n    target.path = removeDotSegments(relative.path || '')\n    target.query = relative.query\n  } else {\n    if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n      // target.authority = relative.authority;\n      target.userinfo = relative.userinfo\n      target.host = relative.host\n      target.port = relative.port\n      target.path = removeDotSegments(relative.path || '')\n      target.query = relative.query\n    } else {\n      if (!relative.path) {\n        target.path = base.path\n        if (relative.query !== undefined) {\n          target.query = relative.query\n        } else {\n          target.query = base.query\n        }\n      } else {\n        if (relative.path.charAt(0) === '/') {\n          target.path = removeDotSegments(relative.path)\n        } else {\n          if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n            target.path = '/' + relative.path\n          } else if (!base.path) {\n            target.path = relative.path\n          } else {\n            target.path = base.path.slice(0, base.path.lastIndexOf('/') + 1) + relative.path\n          }\n          target.path = removeDotSegments(target.path)\n        }\n        target.query = relative.query\n      }\n      // target.authority = base.authority;\n      target.userinfo = base.userinfo\n      target.host = base.host\n      target.port = base.port\n    }\n    target.scheme = base.scheme\n  }\n\n  target.fragment = relative.fragment\n\n  return target\n}\n\nfunction equal (uriA, uriB, options) {\n  if (typeof uriA === 'string') {\n    uriA = unescape(uriA)\n    uriA = serialize(normalizeComponentEncoding(parse(uriA, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriA === 'object') {\n    uriA = serialize(normalizeComponentEncoding(uriA, true), { ...options, skipEscape: true })\n  }\n\n  if (typeof uriB === 'string') {\n    uriB = unescape(uriB)\n    uriB = serialize(normalizeComponentEncoding(parse(uriB, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriB === 'object') {\n    uriB = serialize(normalizeComponentEncoding(uriB, true), { ...options, skipEscape: true })\n  }\n\n  return uriA.toLowerCase() === uriB.toLowerCase()\n}\n\nfunction serialize (cmpts, opts) {\n  const components = {\n    host: cmpts.host,\n    scheme: cmpts.scheme,\n    userinfo: cmpts.userinfo,\n    port: cmpts.port,\n    path: cmpts.path,\n    query: cmpts.query,\n    nid: cmpts.nid,\n    nss: cmpts.nss,\n    uuid: cmpts.uuid,\n    fragment: cmpts.fragment,\n    reference: cmpts.reference,\n    resourceName: cmpts.resourceName,\n    secure: cmpts.secure,\n    error: ''\n  }\n  const options = Object.assign({}, opts)\n  const uriTokens = []\n\n  // find scheme handler\n  const schemeHandler = SCHEMES[(options.scheme || components.scheme || '').toLowerCase()]\n\n  // perform scheme specific serialization\n  if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options)\n\n  if (components.path !== undefined) {\n    if (!options.skipEscape) {\n      components.path = escape(components.path)\n\n      if (components.scheme !== undefined) {\n        components.path = components.path.split('%3A').join(':')\n      }\n    } else {\n      components.path = unescape(components.path)\n    }\n  }\n\n  if (options.reference !== 'suffix' && components.scheme) {\n    uriTokens.push(components.scheme, ':')\n  }\n\n  const authority = recomposeAuthority(components)\n  if (authority !== undefined) {\n    if (options.reference !== 'suffix') {\n      uriTokens.push('//')\n    }\n\n    uriTokens.push(authority)\n\n    if (components.path && components.path.charAt(0) !== '/') {\n      uriTokens.push('/')\n    }\n  }\n  if (components.path !== undefined) {\n    let s = components.path\n\n    if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n      s = removeDotSegments(s)\n    }\n\n    if (authority === undefined) {\n      s = s.replace(/^\\/\\//u, '/%2F') // don't allow the path to start with \"//\"\n    }\n\n    uriTokens.push(s)\n  }\n\n  if (components.query !== undefined) {\n    uriTokens.push('?', components.query)\n  }\n\n  if (components.fragment !== undefined) {\n    uriTokens.push('#', components.fragment)\n  }\n  return uriTokens.join('')\n}\n\nconst hexLookUp = Array.from({ length: 127 }, (_v, k) => /[^!\"$&'()*+,\\-.;=_`a-z{}~]/u.test(String.fromCharCode(k)))\n\nfunction nonSimpleDomain (value) {\n  let code = 0\n  for (let i = 0, len = value.length; i < len; ++i) {\n    code = value.charCodeAt(i)\n    if (code > 126 || hexLookUp[code]) {\n      return true\n    }\n  }\n  return false\n}\n\nconst URI_PARSE = /^(?:([^#/:?]+):)?(?:\\/\\/((?:([^#/?@]*)@)?(\\[[^#/?\\]]+\\]|[^#/:?]*)(?::(\\d*))?))?([^#?]*)(?:\\?([^#]*))?(?:#((?:.|[\\n\\r])*))?/u\n\nfunction parse (uri, opts) {\n  const options = Object.assign({}, opts)\n  const parsed = {\n    scheme: undefined,\n    userinfo: undefined,\n    host: '',\n    port: undefined,\n    path: '',\n    query: undefined,\n    fragment: undefined\n  }\n  const gotEncoding = uri.indexOf('%') !== -1\n  let isIP = false\n  if (options.reference === 'suffix') uri = (options.scheme ? options.scheme + ':' : '') + '//' + uri\n\n  const matches = uri.match(URI_PARSE)\n\n  if (matches) {\n    // store each component\n    parsed.scheme = matches[1]\n    parsed.userinfo = matches[3]\n    parsed.host = matches[4]\n    parsed.port = parseInt(matches[5], 10)\n    parsed.path = matches[6] || ''\n    parsed.query = matches[7]\n    parsed.fragment = matches[8]\n\n    // fix port number\n    if (isNaN(parsed.port)) {\n      parsed.port = matches[5]\n    }\n    if (parsed.host) {\n      const ipv4result = normalizeIPv4(parsed.host)\n      if (ipv4result.isIPV4 === false) {\n        const ipv6result = normalizeIPv6(ipv4result.host)\n        parsed.host = ipv6result.host.toLowerCase()\n        isIP = ipv6result.isIPV6\n      } else {\n        parsed.host = ipv4result.host\n        isIP = true\n      }\n    }\n    if (parsed.scheme === undefined && parsed.userinfo === undefined && parsed.host === undefined && parsed.port === undefined && parsed.query === undefined && !parsed.path) {\n      parsed.reference = 'same-document'\n    } else if (parsed.scheme === undefined) {\n      parsed.reference = 'relative'\n    } else if (parsed.fragment === undefined) {\n      parsed.reference = 'absolute'\n    } else {\n      parsed.reference = 'uri'\n    }\n\n    // check for reference errors\n    if (options.reference && options.reference !== 'suffix' && options.reference !== parsed.reference) {\n      parsed.error = parsed.error || 'URI is not a ' + options.reference + ' reference.'\n    }\n\n    // find scheme handler\n    const schemeHandler = SCHEMES[(options.scheme || parsed.scheme || '').toLowerCase()]\n\n    // check if scheme can't handle IRIs\n    if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n      // if host component is a domain name\n      if (parsed.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost)) && isIP === false && nonSimpleDomain(parsed.host)) {\n        // convert Unicode IDN -> ASCII IDN\n        try {\n          parsed.host = URL.domainToASCII(parsed.host.toLowerCase())\n        } catch (e) {\n          parsed.error = parsed.error || \"Host's domain name can not be converted to ASCII: \" + e\n        }\n      }\n      // convert IRI -> URI\n    }\n\n    if (!schemeHandler || (schemeHandler && !schemeHandler.skipNormalize)) {\n      if (gotEncoding && parsed.scheme !== undefined) {\n        parsed.scheme = unescape(parsed.scheme)\n      }\n      if (gotEncoding && parsed.host !== undefined) {\n        parsed.host = unescape(parsed.host)\n      }\n      if (parsed.path) {\n        parsed.path = escape(unescape(parsed.path))\n      }\n      if (parsed.fragment) {\n        parsed.fragment = encodeURI(decodeURIComponent(parsed.fragment))\n      }\n    }\n\n    // perform scheme specific parsing\n    if (schemeHandler && schemeHandler.parse) {\n      schemeHandler.parse(parsed, options)\n    }\n  } else {\n    parsed.error = parsed.error || 'URI can not be parsed.'\n  }\n  return parsed\n}\n\nconst fastUri = {\n  SCHEMES,\n  normalize,\n  resolve,\n  resolveComponents,\n  equal,\n  serialize,\n  parse\n}\n\nmodule.exports = fastUri\nmodule.exports.default = fastUri\nmodule.exports.fastUri = fastUri\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n","import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          const ref = sch.$ref\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n          if (sch === undefined) throw new MissingRefError(it.opts.uriResolver, it.baseId, ref)\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n","import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n","import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n","import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n"],"names":["shouldUseGroup","schema","group","rules","some","rule","shouldUseRule","undefined","keyword","_a","definition","implements","kwd","exports","_ref","type","self","RULES","types","module","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","codegen_1","require","util_1","assignDefault","it","prop","defaultValue","gen","compositeRule","data","opts","childData","_","_templateObject","_taggedTemplateLiteral","getProperty","checkStrictMode","concat","condition","_templateObject2","useDefaults","_templateObject3","if","_templateObject4","stringify","ty","properties","items","default","forEach","sch","code_1","def","schemaType","before","code","cxt","validateTuple","alwaysValidSchema","ok","validateArray","extraItems","schArr","arguments","parentSchema","errSchemaPath","l","fullTuple","minItems","maxItems","strictTuples","msg","checkStrictTuple","unevaluated","mergeEvaluated","valid","name","len","const","subschema","schemaProp","dataProp","HEX","IPV4_REG","normalizeIPv4","host","findToken","isIPV4","matches","match","address","stripLeadingZeros","stringArrayToHexStripped","input","keepZero","acc","strip","c","normalizeIPv6","isIPV6","ipv6","tokenCount","output","error","zone","buffer","isZone","endipv6Encountered","endIpv6","consume","hex","push","cursor","join","getIPV6","newHost","escapedHost","str","token","out","skip","ind","RDS1","RDS2","RDS3","RDS5","recomposeAuthority","components","uriTokens","userinfo","unescape","ipV4res","ipV6res","port","String","normalizeComponentEncoding","esc","func","escape","scheme","path","query","fragment","removeDotSegments","replace","pop","im","Error","s","slice","schemaPath","topSchemaRef","escapeFragment","_ref2","dataPropType","dpType","dataTypes","propertyName","errorPath","dataPathArr","dataContextProps","let","getErrorPath","jsPropertySyntax","parentDataProperty","_templateObject5","Name","_nextData","dataLevel","definedProperties","Set","parentData","dataNames","_ref3","jtdDiscriminator","jtdMetadata","createErrors","allErrors","ops","operators","KWDs","maximum","okStr","LTE","fail","GT","minimum","GTE","LT","exclusiveMaximum","exclusiveMinimum","message","schemaCode","params","$data","fail$data","ref_error_1","names_1","compile_1","$ref","baseId","schemaEnv","env","validateName","root","callRef","$async","rootName","scopeValue","ref","callRootRef","schOrEnv","resolveRef","uriResolver","SchemaEnv","v","getValidate","callValidate","schName","schCxt","nil","inlineRefSchema","validate","passCxt","passContext","this","addErrorsFrom","errs","assign","vErrors","_templateObject6","errors","_templateObject7","addEvaluatedFrom","schEvaluated","evaluated","props","dynamicProps","var","_templateObject8","dynamicItems","_templateObject9","try","callValidateCode","e","ValidationError","throw","callAsyncRef","result","id_1","ref_1","core","DiscrError","ruleType","validateFormats","fmts","formats","fDef","fType","format","or","strictSchema","callFormat","_templateObject0","validData","_templateObject1","_templateObject10","invalidFmt","validate$DataFormat","formatDef","logger","warn","unknownMsg","unknownFormat","fmtType","fmtRef","fmtDef","regexpCode","_templateObject11","fmt","_templateObject12","getFormat","pass","async","_templateObject13","_templateObject14","_templateObject15","validCondition","validateFormat","defineProperty","ownKeys","r","t","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","apply","getOwnPropertyDescriptors","defineProperties","__esModule","ucs2length","value","pos","charCodeAt","super","ajv","validation","validate_1","get","KeywordCxt","CodeGen","validation_error_1","rules_1","codegen_2","resolve_1","dataType_1","$dataRefSchema","uri_1","defaultRegExp","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","errorDataPath","nullable","jsonPointers","extendRefs","missingRefs","processCode","sourceCode","strictDefaults","strictKeywords","uniqueItems","unknownFormats","cache","serialize","ajvErrors","deprecatedOptions","ignoreKeywordsWithRef","unicode","Ajv","schemas","refs","_compilations","_loading","_cache","Map","_objectSpread","strict","_optz","optimize","regExp","_c","_b","_d","_f","_e","strictNumbers","_h","_g","strictTypes","_k","_j","_m","_l","strictRequired","_p","_o","loopRequired","_q","loopEnum","_r","meta","_s","messages","_t","inlineRefs","_u","schemaId","_v","addUsedSchema","_w","validateSchema","_x","_y","unicodeRegExp","_z","int32range","_0","requiredOptions","es5","lines","scope","ValueScope","prefixes","noLogs","console","log","getLogger","formatOpt","getRules","checkOptions","_metaOpts","getMetaSchemaOptions","addInitialFormats","_addVocabularies","_addDefaultMetaSchema","keywords","addInitialKeywords","addMetaSchema","addInitialSchemas","addKeyword","_dataRefSchema","id","$id","defaultMeta","schemaKeyRef","getSchema","compile","_meta","_addSchema","_compileSchemaEnv","compileAsync","loadSchema","runCompileAsync","_schema","loadMetaSchema","$schema","_compileAsync","checkLoaded","loadMissingSchema","missingSchema","missingRef","_loadSchema","addSchema","p","_validateSchema","normalizeId","_checkUnique","throwOrLogError","errorsText","keyRef","getSchEnv","resolveSchema","removeSchema","_removeAllSchemas","clear","delete","cacheKey","addVocabulary","definitions","kwdOrDef","checkKeyword","eachItem","addRule","keywordMetaschema","getJSONTypes","k","getKeyword","all","removeKeyword","findIndex","splice","addFormat","separator","dataVar","map","instancePath","reduce","text","$dataMetaSchema","metaSchema","keywordsJsonPointers","JSON","parse","jsonPointer","segments","split","seg","schemaOrData","regex","test","jtd","localRefs","getSchemaRefs","set","startsWith","_compileMetaSchema","compileSchema","currentOpts","checkOpts","options","opt","optsSchemas","defs","metaOpts","MissingRefError","KEYWORD_NAME","dataType","post","ruleGroup","find","addBeforeRule","_rule","$dataRef","anyOf","ucs2length_1","comp","op","useFunc","freeze","raw","dynamicAnchors","_sch","getCompilingSchema","rootId","getFullPath","ownProperties","_ValidationError","scopeName","schemaCxt","add","validateFunctionCode","validateCode","scopeRefs","process","Function","makeValidate","scopeValues","_values","inlineOrCompile","inlineRef","schEnv","sameSchemaEnv","s1","s2","resolve","refPath","_getFullPath","getJsonPointer","schOrRef","schId","resolveUrl","schOrFunc","PREVENT_SCOPE_CHANGE","parsedRef","part","partSchema","unescapeFragment","has","schemaHasRulesButRef","jsonTypes","x","groups","number","string","array","object","integer","boolean","null","ValueError","UsedValueState","Scope","parent","_names","_prefixes","_parent","toName","nameOrPrefix","prefix","_newName","ng","_nameGroup","index","ValueScopeName","nameStr","setValue","property","itemIndex","scopePath","line","_scope","_n","valueKey","vs","_name","getValue","keyOrRef","values","_reduceValues","scopeCode","usedValues","getCode","valueCode","nameSet","Started","varKinds","Completed","scope_1","code_2","strConcat","scope_2","_Code","EQ","NEQ","NOT","OR","AND","ADD","Node","optimizeNodes","optimizeNames","_constants","Def","varKind","rhs","render","names","constants","optimizeExpr","_CodeOrName","Assign","lhs","sideEffects","addExprNames","AssignOp","Label","label","_ref4","Break","_ref5","Throw","_ref6","AnyCode","_ref7","ParentNode","nodes","n","subtractNames","addNames","BlockNode","Root","Else","kind","If","else","cond","ns","not","For","ForLoop","iteration","ForRange","from","to","ForIter","loop","iterable","Func","args","_async","Return","Try","catch","finally","Catch","Finally","expr","replaceName","_items","par","extScope","_blockStarts","_extScope","_nodes","_root","prefixOrName","getScopeValue","_def","constant","_leafNode","_constant","_len","keyValues","_key","addCodeArg","thenBody","elseBody","_blockNode","endIf","elseIf","_elseNode","_endBlockNode","_for","node","forBody","endFor","for","forRange","forOf","arr","forIn","obj","break","return","tryBody","catchCode","finallyCode","_currNode","block","body","nodeCount","endBlock","toClose","funcBody","endFunc","N1","N2","andCode","mappend","_len2","_key2","orCode","y","_len3","_key3","errors_1","modifyData","useKeyword","macroSchema","macro","schemaRef","checkAsyncKeyword","validateRef","assignValid","_await","passSchema","modifying","reportErrs","block$data","ruleErrs","validateAsync","validateErrs","validateSync","extendErrors","addErrs","allowUndefined","st","includes","deps","dependencies","util_2","hasPropFunc","isOwnProperty","noPropertyInData","allSchemaProperties","schemaMap","setParams","missingProperty","missing","and","context","dataAndSchema","valCxt","rootData","dynamicRef","newRegExp","pattern","u","rx","validArr","validateItems","notValid","Type","Num","schValid","mergeValidEvaluated","reset","validateAdditionalItems","UUID_REG","URN_REG","isSecure","wsComponents","secure","toLowerCase","httpParse","httpSerialize","http","domainHost","ws","resourceName","SCHEMES","https","wss","urn","urnComponents","nid","nss","urnScheme","schemeHandler","uriComponents","skipEscape","skipNormalize","uuidComponents","uuid","tolerant","traverse","SIMPLE_INLINED","limit","hasRef","countKeys","REF_KEYWORDS","count","Infinity","resolver","TRAILING_SLASH_HASH","ANCHOR","baseIds","pathPrefix","schemaRefs","allKeys","jsonPtr","parentJsonPtr","fullPath","innerBaseId","addRef","_resolve","ambiguos","checkAmbiguosRef","addAnchor","anchor","$anchor","$dynamicAnchor","sch1","sch2","additionalItems_1","prefixItems_1","items_1","items2020_1","contains_1","dependencies_1","propertyNames_1","additionalProperties_1","properties_1","patternProperties_1","not_1","anyOf_1","oneOf_1","allOf_1","if_1","thenElse_1","draft2020","applicator","addError","errObj","err","returnErrors","_templateObject16","_templateObject17","keywordError","errorPaths","overrideAllErrors","errorObjectCode","errsCount","schemaValue","verbose","E","_templateObject18","errorInstancePath","errorSchemaPath","_ref8","_templateObject22","_templateObject23","extraErrorProps","errorObject","instPath","_templateObject19","Str","schPath","_templateObject20","_templateObject21","boolError","falseSchemaError","reportError","toPropertyKey","configurable","writable","equal_1","j","itemTypes","getSchemaTypes","loopN","item","wrongType","checkDataTypes","DataType","Wrong","indices","loopN2","eql","outer","A","B","C","d","D","f","F","prefixItems","trackErrors","min","max","minContains","maxContains","next","validateItemsWithCount","checkLimits","_valid","depsCount","property_ies","propDeps","schDeps","propertyDeps","schemaDeps","splitDependencies","validatePropertyDeps","validateSchemaDeps","hasProperty","propertyInData","depProp","checkReportMissingProp","checkMissingProp","reportMissingProp","boolSchema_1","applicability_1","dataType_2","defaults_1","keyword_1","subschema_1","validateFunction","funcSourceUrl","destructureValCxtES5","destructureValCxt","subschemaCode","isSchemaObj","checkKeywords","schemaCxtHasRules","$comment","commentKeyword","updateContext","checkAsyncSchema","typeAndKeywords","subSchemaObjCode","boolOrEmptySchema","checkUnknownRules","checkRefsAndKeywords","schemaKeywords","coerceAndCheckDataType","_templateObject24","typeErrors","groupKeywords","checkDataType","iterateKeywords","reportTypeError","_templateObject31","includesType","strictTypesError","withTypes","ts","narrowSchemaTypes","checkContextTypes","allowUnionTypes","checkMultipleTypes","hasApplicableType","checkKeywordTypes","checkStrictTypes","keywordCode","assignDefaults","schTs","kwdT","checkNoDefault","resetEvaluated","_templateObject25","_templateObject26","_templateObject27","_templateObject29","_templateObject30","assignEvaluated","_templateObject28","returnResults","topSchemaObjCode","topBoolOrEmptySchema","validateKeywordUsage","schemaRefOrVal","getData","validSchemaType","successAction","failAction","failResult","_templateObject32","invalid$data","append","errorParams","_error","reportExtraError","$dataError","keyword$DataError","resetErrorsCount","codeBlock","$dataValid","check$data","_templateObject33","_templateObject34","wrong$DataType","validateSchemaRef","_templateObject35","invalid$DataSchema","appl","getSubschema","extendSubschemaData","extendSubschemaMode","nextContext","funcKeywordCode","macroKeywordCode","JSON_POINTER","RELATIVE_JSON_POINTER","exec","up","errorMsg","segment","_templateObject36","unescapeJsonPointer","_templateObject37","pointerType","IDENTIFIER","emptyStr","_str","strs","plus","safeStringify","res","mergeExprItems","arg","c1","c2","useLoop","getEql","vSchema","equalCode","every","isJSONType","coerceTo","coerceTypes","COERCIBLE","coerceToTypes","checkTypes","schemaHasRulesForType","coerced","coerceSpecificType","assignParentData","coerceData","strictNums","correct","Correct","numCond","_cond","toHash","notObj","typeError","getTypeErrorContext","removeAdditional","additionalProperties","allProps","hasDefault","applyPropertySchema","_typeof","Symbol","iterator","uri","core_1","draft7_1","discriminator_1","draft7MetaSchema","META_SUPPORT_DATA","META_SCHEMA_ID","discriminator","toPrimitive","cb","_traverse","pre","rootSchema","parentKeyword","keyIndex","arrayKeywords","propsKeywords","escapeJsonPtr","skipKeywords","additionalItems","contains","propertyNames","then","allOf","oneOf","$defs","patternProperties","enum","required","multipleOf","maxLength","minLength","maxProperties","minProperties","additionalProperty","patProps","deleteAdditional","additionalPropertyCode","applyAdditionalSchema","definedProp","propsSchema","usePattern","isAdditional","validateUnion","resolveComponents","base","relative","skipNormalization","target","charAt","lastIndexOf","cmpts","reference","authority","absolutePath","hexLookUp","fromCharCode","URI_PARSE","parsed","gotEncoding","indexOf","isIP","parseInt","isNaN","ipv4result","ipv6result","unicodeSupport","nonSimpleDomain","URL","domainToASCII","encodeURI","decodeURIComponent","fastUri","normalize","baseURI","relativeURI","schemelessOptions","uriA","uriB","loopAllRequired","allErrorsMode","loopUntilMissing","exitOnErrorMode","requiredKey","patterns","alwaysValidPatterns","checkProperties","allowMatchingProperties","evaluatedPropsToName","checkMatchingProperties","pat","validateProperties","alwaysValid","validatePatternProperties","prec","multipleOfPrecision","invalid","schemaHasRules","escapeJsonPointer","makeMergeEvaluated","mergeNames","mergeToName","mergeValues","resultToName","ps","setEvaluated","hash","encodeURIComponent","xs","Math","snippets","mode","isNumber","TypeError","Number","types_1","discrError","tagName","Tag","tag","mapping","applyTagSchema","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","addMapping","tagValue","getMapping","Mapping","validateMapping","json","jsonPos","jsonLen","jsonPart","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","const_1","enum_1","ifClause","hasThen","hasSchema","hasElse","validateIf","validateClause","passing","validation_1","applicator_1","format_1","metadata_1","draft7Vocabularies","metadataVocabulary","contentVocabulary"],"sourceRoot":""}