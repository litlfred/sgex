"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[2603],{82603:(e,n,o)=>{var t,a,c,l,r;o.r(n),o.d(n,{LAYOUT_ENGINES:()=>s,default:()=>b,generateArchimateLayout:()=>d,generateFMLMappingLayout:()=>f,generateLogicalModelLayout:()=>i}),(t||(t={})).load=function(){return o.e(5597).then(o.bind(o,15597)).then(e=>e.Base91.load())},(e=>{e.load=function(){return o.e(4193).then(o.bind(o,64193)).then(e=>e.DuckDB.load())}})(a||(a={})),(e=>{e.load=function(){return o.e(6090).then(o.bind(o,66090)).then(e=>e.Expat.load())}})(c||(c={})),(e=>{e.load=function(){return o.e(9151).then(o.bind(o,59151)).then(e=>e.Graphviz.load())}})(l||(l={})),(e=>{e.load=function(){return o.e(2009).then(o.bind(o,92009)).then(e=>e.Zstd.load())}})(r||(r={}));const s={DOT:{name:"dot",description:"Hierarchical layouts, good for directed graphs and trees",useCase:"Logical model hierarchies, data flow diagrams"},NEATO:{name:"neato",description:"Spring model layouts, good for undirected graphs",useCase:"Concept relationships, general network diagrams"},FDP:{name:"fdp",description:"Force-directed placement, good for large graphs",useCase:"Large ArchiMate models, complex mappings"},CIRCO:{name:"circo",description:"Circular layout, good for cyclic structures",useCase:"Process cycles, feedback loops"},TWOPI:{name:"twopi",description:"Radial layout with one central node",useCase:"Hub-and-spoke models, central concept diagrams"}};async function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{engine:t=s.DOT.name,nodeSpacing:a=100,rankSep:c=100,nodeSep:r=50,rankDir:i="TB"}=o;try{const o=await l.load();let a='digraph LogicalModels {\n      rankdir="'.concat(i,'";\n      ranksep="').concat(c/72,'";\n      nodesep="').concat(r/72,'";\n      splines="ortho";\n      overlap="false";\n      \n      node [shape=box, style="rounded,filled", fillcolor="#e1f5fe", fontname="Arial", fontsize="10", margin="0.1,0.05"];\n      edge [color="#666666", fontname="Arial", fontsize="8"];\n    ');e.forEach((e,n)=>{const o="lm_".concat(n),t=m(e)||"Model-".concat(n+1),c=y(e),l=c>0?"".concat(p(t),"\\n(").concat(c," elements)"):p(t),r=function(e){const n=y(e);return 0===n?"#ffcdd2":n<=5?"#c8e6c9":n<=15?"#bbdefb":"#d1c4e9"}(e),s=p(function(e){var n;return null!==(n=e.metadata)&&void 0!==n&&n.description?e.metadata.description:e.description?e.description:"FHIR Logical Model"}(e)||"FHIR Logical Model");a+="\n        ".concat(o,' [label="').concat(l,'", fillcolor="').concat(r,'", tooltip="').concat(s,'"];')}),n.forEach((e,n)=>{const o="lm_".concat(e.sourceIndex||0),t="lm_".concat(e.targetIndex||1),c=p(e.type||"relates to"),l=p(e.description||"Model relationship");a+="\n        ".concat(o," -> ").concat(t,' [label="').concat(c,'", tooltip="').concat(l,'"];')}),a+="\n}";const s=o.layout(a,"svg",t);return{svg:s,coordinates:u(s,e),engine:t,dotString:a,success:!0}}catch(d){return console.error("GraphViz layout generation failed:",d),{error:d.message,fallbackCoordinates:g(e,a),success:!1}}}async function d(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{engine:o=s.NEATO.name,showDataObjects:t=!0,groupByType:a=!0,clusterSpacing:c=150}=n;if(!e||!e.elements)return{svg:'<svg width="400" height="200"><text x="50" y="100" font-family="Arial" font-size="14" fill="#666">No elements to layout</text></svg>',coordinates:{},engine:"none",success:!0};try{const n=await l.load();let c='digraph ArchimateModel {\n      compound="true";\n      clusterrank="local";\n      rankdir="TB";\n      splines="spline";\n      overlap="false";\n    ';if(a){const n=e.elements.filter(e=>"ApplicationComponent"===e.type),o=e.elements.filter(e=>"DataObject"===e.type);n.length>0&&(c+='\n          subgraph cluster_apps {\n            label="Logical Models";\n            style="rounded,filled";\n            fillcolor="#f0f8ff";\n            color="#4682b4";\n            \n            node [shape=box, style="rounded,filled", fillcolor="#87ceeb"];',n.forEach(e=>{const n=p(e.name),o=p(e.description);c+="\n            ".concat(e.id,' [label="').concat(n,'", tooltip="').concat(o,'"];')}),c+="\n          }"),t&&o.length>0&&(c+='\n          subgraph cluster_data {\n            label="DAK Concepts";\n            style="rounded,filled";\n            fillcolor="#f5f5dc";\n            color="#daa520";\n            \n            node [shape=ellipse, style="filled", fillcolor="#f0e68c"];',o.forEach(e=>{const n=p(e.name),o=p(e.description);c+="\n            ".concat(e.id,' [label="').concat(n,'", tooltip="').concat(o,'"];')}),c+="\n          }")}else c+='\n      node [fontname="Arial", fontsize="10"];',e.elements.forEach(e=>{const n="ApplicationComponent"===e.type?"box":"ellipse",o="ApplicationComponent"===e.type?"#87ceeb":"#f0e68c",t=p(e.name),a=p(e.description);c+="\n          ".concat(e.id,' [label="').concat(t,'", shape="').concat(n,'", style="filled", fillcolor="').concat(o,'", tooltip="').concat(a,'"];')});e.relationships&&(c+='\n      edge [fontname="Arial", fontsize="8"];',e.relationships.forEach(e=>{const n=p(e.name||e.type),o=p(e.description||"ArchiMate relationship");c+="\n          ".concat(e.source," -> ").concat(e.target,' [label="').concat(n,'", tooltip="').concat(o,'"];')})),c+="\n}";const r=n.layout(c,"svg",o);return{svg:r,coordinates:u(r,e.elements),engine:o,dotString:c,success:!0}}catch(r){return console.error("ArchiMate layout generation failed:",r),{error:r.message,fallbackCoordinates:g(e.elements,150),success:!1}}}async function f(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{engine:a=s.DOT.name,orientation:c="LR",sourceColor:r="#e3f2fd",targetColor:i="#f3e5f5",mappingColor:d="#ffeb3b"}=t;try{const t=await l.load();let s='digraph FMLMapping {\n      rankdir="'.concat(c,'";\n      ranksep="2.0";\n      nodesep="1.0";\n      splines="ortho";\n      compound="true";\n      \n      subgraph cluster_source {\n        label="Source Models";\n        style="filled";\n        fillcolor="').concat(r,'";\n        rank="source";\n        \n        node [shape=box, style="rounded,filled", fillcolor="#2196f3", fontcolor="white"];');e.forEach((e,n)=>{const o="src_".concat(n),t=p(m(e)||"Source-".concat(n+1));s+="\n        ".concat(o,' [label="').concat(t,'"];')}),s+='\n      }\n      \n      subgraph cluster_target {\n        label="Target Models";\n        style="filled";\n        fillcolor="'.concat(i,'";\n        rank="sink";\n        \n        node [shape=box, style="rounded,filled", fillcolor="#9c27b0", fontcolor="white"];'),n.forEach((e,n)=>{const o="tgt_".concat(n),t=p(m(e)||"Target-".concat(n+1));s+="\n        ".concat(o,' [label="').concat(t,'"];')}),s+='\n      }\n      \n      edge [color="'.concat(d,'", fontcolor="#ff6f00", style="bold"];'),o.forEach((e,n)=>{const o="src_".concat(e.sourceIndex||0),t="tgt_".concat(e.targetIndex||0),a=p(e.name||"Map-".concat(n+1)),c=p(e.expression||"FML mapping");s+="\n      ".concat(o," -> ").concat(t,' [label="').concat(a,'", tooltip="').concat(c,'"];')}),s+="\n}";const f=t.layout(s,"svg",a),g=[...e,...n];return{svg:f,coordinates:u(f,g),engine:a,dotString:s,success:!0}}catch(f){return console.error("FML mapping layout generation failed:",f),{error:f.message,fallbackCoordinates:h(e,n),success:!1}}}function p(e){return e?e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"").replace(/\t/g," "):""}function u(e,n){const o={};try{const t=(new DOMParser).parseFromString(e,"image/svg+xml");t.querySelectorAll("g.node").forEach((e,n)=>{const t=e.querySelector("title"),a=t?t.textContent.trim():null;if(a){const n=e.getAttribute("transform");if(n){const e=n.match(/translate\(([^,]+),([^)]+)\)/);e&&(o[a]={x:parseFloat(e[1]),y:parseFloat(e[2])})}}}),0===Object.keys(o).length&&n.forEach((e,n)=>{const t=e.id||"node_".concat(n);o[t]={x:100+n%3*200,y:100+150*Math.floor(n/3)}})}catch(t){console.warn("Failed to extract coordinates from SVG:",t),n.forEach((e,n)=>{const t=e.id||"node_".concat(n);o[t]={x:100+n%3*200,y:100+150*Math.floor(n/3)}})}return o}function g(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:150;const o={},t=Math.ceil(Math.sqrt(e.length));return e.forEach((e,a)=>{const c=Math.floor(a/t),l=a%t;o[e.id||a]={x:50+l*n,y:50+c*n}}),o}function h(e,n){const o={};return e.forEach((e,n)=>{o["src_".concat(n)]={x:100,y:100+150*n}}),n.forEach((e,n)=>{o["tgt_".concat(n)]={x:500,y:100+150*n}}),o}function m(e){var n,o;return null!==(n=e.metadata)&&void 0!==n&&n.title?e.metadata.title:null!==(o=e.metadata)&&void 0!==o&&o.logical?e.metadata.logical:e.name?e.name:e.fileName?e.fileName.replace(/\.(fsh|json)$/,""):null}function y(e){if(e.elements&&Array.isArray(e.elements))return e.elements.length;if(e.content){const n=e.content.match(/^\s*\*\s+/gm);return n?n.length:0}return 0}const b={LAYOUT_ENGINES:s,generateLogicalModelLayout:i,generateArchimateLayout:d,generateFMLMappingLayout:f,generateFallbackLayout:g,escapeLabel:p}}}]);