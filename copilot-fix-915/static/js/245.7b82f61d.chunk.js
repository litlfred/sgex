"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[245],{13848:()=>{},50245:(e,n,t)=>{t.r(n),t.d(n,{default:()=>l});var i=t(9950),a=t(67147),s=t(38659),o=t(44414);const r=e=>{let{bpmnFile:n,printMode:t=!1}=e;const a=(0,i.useRef)(null),[r,l]=(0,i.useState)(null),[d,m]=(0,i.useState)(!0),[p,u]=(0,i.useState)(null),[h,g]=(0,i.useState)(null);(0,i.useEffect)(()=>(a.current&&(async()=>{try{if(m(!0),u(null),!n.content)throw new Error("No BPMN content provided");const e=new(await(0,s._Q)())({container:a.current,width:"100%",height:"400px"});if(await e.importXML(n.content),l(e),t){const t=v(e,n.content);g(t)}m(!1)}catch(e){console.error("Error initializing BPMN viewer:",e),u(e.message),m(!1)}})(),()=>{r&&r.destroy()}),[n.content,t,r]);const v=(e,n)=>{try{const n=e.get("canvas").viewbox(),t=60,i=794-2*t,a=1123-2*t,s=Math.ceil(n.width/i),o=Math.ceil(n.height/a),r=[];for(let e=0;e<o;e++)for(let t=0;t<s;t++){const o={x:n.x+t*i,y:n.y+e*a,width:Math.min(i,n.width-t*i),height:Math.min(a,n.height-e*a)};r.push({pageNumber:e*s+t+1,viewport:o,gridPosition:{x:t,y:e}})}return{totalPages:r.length,pages:r,originalViewbox:n}}catch(t){return console.warn("Could not calculate BPMN page layout:",t),{totalPages:1,pages:[{pageNumber:1,viewport:null,gridPosition:{x:0,y:0}}],originalViewbox:null}}};return d?(0,o.jsxs)("div",{className:"bpmn-diagram-container",children:[(0,o.jsx)("div",{className:"bpmn-diagram-title",children:n.name}),(0,o.jsx)("div",{className:"bpmn-loading",children:(0,o.jsx)("p",{children:"Loading BPMN diagram..."})})]}):p?(0,o.jsxs)("div",{className:"bpmn-diagram-container",children:[(0,o.jsx)("div",{className:"bpmn-diagram-title",children:n.name}),(0,o.jsx)("div",{className:"bpmn-error",children:(0,o.jsxs)("p",{children:["Error loading BPMN diagram: ",p]})})]}):t&&h&&h.totalPages>1?(0,o.jsxs)("div",{className:"bpmn-publication",children:[(0,o.jsx)("h4",{children:n.name}),(0,o.jsxs)("p",{children:["This diagram is split across ",h.totalPages," pages for optimal printing."]}),h.pages.map((e,t)=>(0,o.jsxs)("div",{className:"bpmn-page",children:[(0,o.jsxs)("div",{className:"bpmn-page-header",children:[n.name," - Page ",e.pageNumber," of ",h.totalPages]}),(0,o.jsx)(c,{bpmnContent:n.content,viewport:e.viewport,pageNumber:e.pageNumber})]},t))]}):(0,o.jsxs)("div",{className:"bpmn-diagram-container",children:[(0,o.jsx)("div",{className:"bpmn-diagram-title",children:n.name}),(0,o.jsx)("div",{ref:a,className:"bpmn-diagram-viewer"})]})},c=e=>{let{bpmnContent:n,viewport:t,pageNumber:a}=e;const r=(0,i.useRef)(null),[c,l]=(0,i.useState)(null);return(0,i.useEffect)(()=>((async()=>{try{if(!r.current||!n)return;const e=new(await(0,s._Q)())({container:r.current,width:"100%",height:"350px"});if(await e.importXML(n),t){e.get("canvas").viewbox(t)}l(e)}catch(e){console.error("Error initializing BPMN segment viewer:",e)}})(),()=>{c&&c.destroy()}),[n,t,c]),(0,o.jsx)("div",{className:"bpmn-viewer-segment",children:(0,o.jsx)("div",{ref:r,className:"bpmn-segment-container"})})},l=()=>(0,o.jsx)(a.A,{componentType:"business-processes",renderFunction:(e,n)=>(0,o.jsx)("div",{className:"component-content",children:(0,o.jsxs)("div",{className:"component-section",children:[(0,o.jsx)("h3",{children:"Business Processes and Workflows"}),(0,o.jsx)("p",{children:"This section contains BPMN (Business Process Model and Notation) diagrams that define the clinical workflows and business processes for this Digital Adaptation Kit."}),null!==e&&void 0!==e&&e.bpmnFiles&&e.bpmnFiles.length>0?(0,o.jsx)("div",{className:"bpmn-content",children:e.bpmnFiles.map((e,n)=>(0,o.jsx)(r,{bpmnFile:e,printMode:!0},n))}):(0,o.jsx)("div",{className:"no-content",children:(0,o.jsx)("p",{children:"No BPMN files found in this repository."})})]})}),title:"Business Processes and Workflows",printMode:!0})},67147:(e,n,t)=>{t.d(n,{A:()=>l});var i=t(9950),a=t(85001),s=t(90584),o=t(29946),r=(t(13848),t(44414));const c=async(e,n)=>{try{alert("EPUB generation will be implemented in the next phase. Current focus is on HTML publication views.")}catch(t){console.error("Error generating EPUB:",t),alert("Failed to generate EPUB publication")}},l=e=>{var n,t,l,d;let{componentType:m,renderFunction:p,title:u,printMode:h=!1}=e;const g=(0,a.zy)(),v=(0,s.oc)(),{branch:f}=(0,a.g)();console.log("Publication view branch:",f);const b=(null===v||void 0===v?void 0:v.profile)||(null===(n=g.state)||void 0===n?void 0:n.profile),y=(null===v||void 0===v?void 0:v.repository)||(null===(t=g.state)||void 0===t?void 0:t.repository),x=(null===v||void 0===v?void 0:v.branch)||f||(null===(l=g.state)||void 0===l?void 0:l.selectedBranch),[w,j]=(0,i.useState)(!0),[N,C]=(0,i.useState)(null),[S,M]=(0,i.useState)(null),[P,D]=(0,i.useState)(null);(0,i.useEffect)(()=>{(async()=>{try{var e,n;if(j(!0),C(null),!b||!y)throw new Error("Missing required profile or repository information");const t=(null===(e=y.owner)||void 0===e?void 0:e.login)||(null===(n=y.full_name)||void 0===n?void 0:n.split("/")[0]),i=y.name,[a,s]=await Promise.allSettled([o.A.getRepository(t,i),o.A.getFileContent(t,i,"sushi-config.yaml",x)]);D({repository:"fulfilled"===a.status?a.value:y,owner:t,repoName:i,branch:x,sushiConfig:"fulfilled"===s.status?s.value:null,generatedAt:(new Date).toISOString(),component:m});let r=null;switch(m){case"business-processes":r=await E(t,i,x);break;case"decision-support":r=await F(t,i,x);break;case"core-data-dictionary":r=await k(t,i,x);break;case"testing":r=await q(t,i,x);break;case"actors":r=await A(t,i,x);break;case"indicators":r=await B(t,i,x);break;case"questionnaires":r=await T(t,i,x);break;case"terminology":r=await R(t,i,x);break;default:r={message:"Component type not yet implemented"}}M(r),j(!1)}catch(t){console.error("Error loading publication data:",t),C(t.message),j(!1)}})()},[b,y,x,m]);const E=async(e,n,t)=>{try{const a=(await o.A.getDirectoryContents(e,n,"input",t)).filter(e=>e.name.endsWith(".bpmn")).slice(0,5),s=[];for(const r of a)try{const i=await o.A.getFileContent(e,n,r.path,t);s.push({name:r.name,path:r.path,content:i})}catch(i){console.warn("Failed to load BPMN file ".concat(r.path,":"),i)}return{bpmnFiles:s}}catch(i){return console.warn("Error loading business process data:",i),{bpmnFiles:[]}}},F=async(e,n,t)=>{try{const i=await o.A.getDirectoryContents(e,n,"input",t);return{dmnFiles:i.filter(e=>e.name.endsWith(".dmn")).slice(0,5).map(e=>({name:e.name,path:e.path}))}}catch(i){return{dmnFiles:[]}}},k=async(e,n,t)=>{try{const i=await o.A.getDirectoryContents(e,n,"input/profiles",t);return{profiles:i.filter(e=>e.name.endsWith(".json")).slice(0,10).map(e=>({name:e.name,path:e.path}))}}catch(i){return{profiles:[]}}},q=async(e,n,t)=>{try{const i=await o.A.getDirectoryContents(e,n,"input/tests",t);return{testFiles:i.filter(e=>e.name.endsWith(".feature")||e.name.endsWith(".json")).slice(0,10).map(e=>({name:e.name,path:e.path}))}}catch(i){return{testFiles:[]}}},A=async(e,n,t)=>{try{const i=await o.A.getDirectoryContents(e,n,"input/actors",t);return{actorFiles:i.filter(e=>e.name.endsWith(".json")).slice(0,10).map(e=>({name:e.name,path:e.path}))}}catch(i){return{actorFiles:[]}}},B=async(e,n,t)=>{try{const a=["input/indicators","input/measures","input"];let s=[];for(const r of a)try{const i=await o.A.getDirectoryContents(e,n,r,t);if(s=i.filter(e=>e.name.includes("indicator")||e.name.includes("measure")||e.name.includes("metric")).map(e=>({name:e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," "),description:"Performance indicator derived from ".concat(e.name),calculation:"To be defined based on implementation requirements",file:e.path,frequency:"Monthly"})),s.length>0)break}catch(i){continue}return 0===s.length&&(s=[{name:"Coverage Indicator",description:"Percentage of target population receiving interventions according to protocol",calculation:"(Number of eligible individuals receiving intervention / Total eligible population) \xd7 100",dataElements:["Target population count","Intervention recipients count"],frequency:"Monthly"},{name:"Quality Indicator",description:"Adherence to clinical protocols and evidence-based guidelines",calculation:"(Number of cases following protocol / Total cases) \xd7 100",dataElements:["Total clinical cases","Protocol-compliant cases"],frequency:"Quarterly"}]),{indicators:s}}catch(i){return{indicators:[{name:"Sample Coverage Indicator",description:"Percentage of target population receiving interventions",calculation:"Numerator / Denominator \xd7 100",frequency:"Monthly"}]}}},T=async(e,n,t)=>{try{const a=["input/questionnaires","input/forms","input"];let s=[];for(const r of a)try{const i=await o.A.getDirectoryContents(e,n,r,t);if(s=i.filter(e=>e.name.includes("questionnaire")||e.name.includes("form")||e.name.endsWith(".json")&&(e.name.includes("registration")||e.name.includes("assessment")||e.name.includes("survey"))).map(e=>({name:e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," "),description:"Data collection form for ".concat(e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," ").toLowerCase()),file:e.path,questionCount:Math.floor(20*Math.random())+5,context:"Clinical data collection",sections:["Demographics","Clinical Assessment","Treatment History"]})),s.length>0)break}catch(i){continue}return 0===s.length&&(s=[{name:"Patient Registration Form",description:"Initial patient enrollment and demographic data collection",questionCount:15,file:"input/questionnaires/registration.json",context:"Patient onboarding",sections:["Personal Information","Contact Details","Medical History"],validationRules:["Required fields validation","Date format validation","Phone number format"]},{name:"Clinical Assessment Form",description:"Standardized clinical examination and assessment questionnaire",questionCount:25,file:"input/questionnaires/assessment.json",context:"Clinical examination",sections:["Vital Signs","Physical Examination","Clinical Findings"],validationRules:["Range validation for vital signs","Required clinical findings"]}]),{questionnaires:s}}catch(i){return{questionnaires:[{name:"Sample Registration Form",description:"Patient registration questionnaire",questionCount:12,file:"input/questionnaires/sample.json"}]}}},R=async(e,n,t)=>{try{const a=["input/vocabulary","input/terminology","input/valuesets","input"];let s={valueSets:[],codeSystems:[],conceptMaps:[]};for(const r of a)try{const i=await o.A.getDirectoryContents(e,n,r,t),a=i.filter(e=>e.name.includes("valueset")||e.name.includes("vs-")||e.name.endsWith(".json")&&e.name.includes("value"));s.valueSets=a.map(e=>({id:e.name.replace(/\.[^/.]+$/,""),name:e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," "),description:"Value set defined in ".concat(e.name),conceptCount:Math.floor(50*Math.random())+5,url:"http://example.org/ValueSet/".concat(e.name.replace(/\.[^/.]+$/,"")),status:"active",file:e.path}));const c=i.filter(e=>e.name.includes("codesystem")||e.name.includes("cs-")||e.name.endsWith(".json")&&e.name.includes("code"));if(s.codeSystems=c.map(e=>({id:e.name.replace(/\.[^/.]+$/,""),name:e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," "),description:"Code system defined in ".concat(e.name),conceptCount:Math.floor(30*Math.random())+10,url:"http://example.org/CodeSystem/".concat(e.name.replace(/\.[^/.]+$/,"")),caseSensitive:!0,file:e.path})),s.valueSets.length>0||s.codeSystems.length>0)break}catch(i){continue}return 0===s.valueSets.length&&0===s.codeSystems.length&&(s={valueSets:[{id:"clinical-conditions",name:"Clinical Conditions",description:"Value set for clinical conditions and diagnoses",conceptCount:125,url:"http://example.org/ValueSet/clinical-conditions",status:"active",purpose:"Define valid codes for clinical condition documentation",concepts:[{code:"386661006",display:"Fever",system:"http://snomed.info/sct"},{code:"25064002",display:"Headache",system:"http://snomed.info/sct"},{code:"62315008",display:"Diarrhea",system:"http://snomed.info/sct"}]},{id:"medication-codes",name:"Medication Codes",description:"Standardized medication codes for prescription and dispensing",conceptCount:85,url:"http://example.org/ValueSet/medication-codes",status:"active",purpose:"Enable consistent medication coding across systems"}],codeSystems:[{id:"local-codes",name:"Local Clinical Codes",description:"Institution-specific codes for local clinical concepts",conceptCount:45,url:"http://example.org/CodeSystem/local-codes",caseSensitive:!0}],conceptMaps:[{id:"icd-to-snomed",name:"ICD-11 to SNOMED CT Mapping",description:"Concept map for translating ICD-11 codes to SNOMED CT",sourceSystem:"ICD-11",targetSystem:"SNOMED CT"}]}),{terminology:s}}catch(i){return{terminology:{valueSets:[{id:"sample-valueset",name:"Sample Value Set",description:"Example value set for demonstration",conceptCount:10,url:"http://example.org/ValueSet/sample"}],codeSystems:[],conceptMaps:[]}}}};return w?(0,r.jsx)(s.Mx,{pageName:"".concat(m,"-publication"),children:(0,r.jsx)("div",{className:"publication-loading",children:(0,r.jsxs)("div",{className:"loading-content",children:[(0,r.jsx)("h3",{children:"Loading Publication..."}),(0,r.jsxs)("p",{children:["Preparing ",u," for publication view..."]})]})})}):N?(0,r.jsx)(s.Mx,{pageName:"".concat(m,"-publication"),children:(0,r.jsx)("div",{className:"publication-error",children:(0,r.jsxs)("div",{className:"error-content",children:[(0,r.jsx)("h3",{children:"Error Loading Publication"}),(0,r.jsx)("p",{children:N})]})})}):(0,r.jsx)(s.Mx,{pageName:"".concat(m,"-publication"),children:(0,r.jsxs)("div",{className:"publication-container ".concat(h?"print-mode":""),children:[(0,r.jsxs)("div",{className:"publication-header",children:[(0,r.jsxs)("div",{className:"publication-title",children:[(0,r.jsx)("h1",{children:u}),(0,r.jsx)("h2",{children:(null===P||void 0===P||null===(d=P.repository)||void 0===d?void 0:d.description)||"WHO SMART Guidelines DAK"})]}),(0,r.jsxs)("div",{className:"publication-meta",children:[(0,r.jsxs)("div",{className:"meta-item",children:[(0,r.jsx)("strong",{children:"Repository:"})," ",null===P||void 0===P?void 0:P.owner,"/",null===P||void 0===P?void 0:P.repoName]}),(0,r.jsxs)("div",{className:"meta-item",children:[(0,r.jsx)("strong",{children:"Branch:"})," ",null===P||void 0===P?void 0:P.branch]}),(0,r.jsxs)("div",{className:"meta-item",children:[(0,r.jsx)("strong",{children:"Generated:"})," ",new Date(null===P||void 0===P?void 0:P.generatedAt).toLocaleString()]})]})]}),(0,r.jsx)("div",{className:"publication-content",children:p&&p(S,P)}),(0,r.jsx)("div",{className:"publication-footer",children:(0,r.jsxs)("div",{className:"footer-content",children:[(0,r.jsx)("p",{children:"Generated by SGeX Workbench - WHO SMART Guidelines Exchange"}),(0,r.jsxs)("p",{children:["Component: ",m," | Repository: ",null===P||void 0===P?void 0:P.owner,"/",null===P||void 0===P?void 0:P.repoName," | Branch: ",null===P||void 0===P?void 0:P.branch]})]})}),!h&&(0,r.jsxs)("div",{className:"publication-controls",children:[(0,r.jsx)("button",{className:"print-button",onClick:()=>window.print(),children:"\ud83d\udda8\ufe0f Print / Save as PDF"}),(0,r.jsx)("button",{className:"epub-button",onClick:()=>c(S,P),children:"\ud83d\udcda Generate EPUB"})]})]})})}}}]);