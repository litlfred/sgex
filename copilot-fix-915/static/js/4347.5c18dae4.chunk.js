"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[4347],{4347:(e,n,i)=>{i.r(n),i.d(n,{default:()=>s});i(9950);var t=i(67147),a=i(44414);const s=()=>(0,a.jsx)(t.A,{componentType:"core-data-dictionary",renderFunction:(e,n)=>(0,a.jsx)("div",{className:"component-content",children:(0,a.jsxs)("div",{className:"component-section",children:[(0,a.jsx)("h3",{children:"Core Data Dictionary"}),(0,a.jsx)("p",{children:"This section defines the essential data structures, terminology, and FHIR profiles that standardize clinical data capture and exchange for this Digital Adaptation Kit."}),null!==e&&void 0!==e&&e.profiles&&e.profiles.length>0?(0,a.jsxs)("div",{className:"core-data-content",children:[(0,a.jsx)("h4",{children:"FHIR Profiles and Structure Definitions"}),(0,a.jsx)("div",{className:"file-list",children:e.profiles.map((e,n)=>(0,a.jsxs)("div",{className:"file-item",children:[(0,a.jsx)("span",{className:"file-icon",children:"\ud83d\udccb"}),(0,a.jsx)("span",{className:"file-name",children:e.name}),(0,a.jsx)("span",{className:"file-path",children:e.path})]},n))}),(0,a.jsxs)("div",{className:"data-elements-info",children:[(0,a.jsx)("h4",{children:"Core Data Elements"}),(0,a.jsx)("p",{children:"The FHIR profiles listed above define the standardized data structures for clinical information exchange. These profiles ensure consistent data collection and interoperability across different healthcare systems by defining:"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Patient demographic and clinical data structures"}),(0,a.jsx)("li",{children:"Observation and measurement definitions"}),(0,a.jsx)("li",{children:"Procedure and intervention coding standards"}),(0,a.jsx)("li",{children:"Medication and immunization profiles"}),(0,a.jsx)("li",{children:"Diagnostic and care plan representations"})]})]}),(0,a.jsxs)("div",{className:"terminology-info",children:[(0,a.jsx)("h4",{children:"Terminology Services"}),(0,a.jsx)("p",{children:"This DAK leverages standardized terminology from:"}),(0,a.jsxs)("ul",{children:[(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{children:"OCL (Open Concept Lab)"})," - Community-driven terminology management"]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{children:"SNOMED CT"})," - International clinical terminology standard"]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{children:"ICD-11"})," - WHO International Classification of Diseases"]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{children:"LOINC"})," - Laboratory and clinical observation codes"]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{children:"WHO Smart Guidelines Value Sets"})," - Specialized clinical terminologies"]})]})]}),(0,a.jsxs)("div",{className:"product-data-info",children:[(0,a.jsx)("h4",{children:"Product Master Data"}),(0,a.jsx)("p",{children:"Product information management through PCMT (Product Catalogue Management Tool) provides standardized product data for:"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Medications and pharmaceutical products"}),(0,a.jsx)("li",{children:"Medical devices and diagnostic equipment"}),(0,a.jsx)("li",{children:"Vaccines and immunization products"}),(0,a.jsx)("li",{children:"Laboratory test kits and supplies"})]})]})]}):(0,a.jsx)("div",{className:"no-content",children:(0,a.jsx)("p",{children:"No FHIR profiles found in this repository."})})]})}),title:"Core Data Dictionary",printMode:!0})},13848:()=>{},67147:(e,n,i)=>{i.d(n,{A:()=>l});var t=i(9950),a=i(85001),s=i(90584),o=i(29946),c=(i(13848),i(44414));const r=async(e,n)=>{try{alert("EPUB generation will be implemented in the next phase. Current focus is on HTML publication views.")}catch(i){console.error("Error generating EPUB:",i),alert("Failed to generate EPUB publication")}},l=e=>{var n,i,l,d;let{componentType:m,renderFunction:u,title:p,printMode:h=!1}=e;const g=(0,a.zy)(),f=(0,s.oc)(),{branch:v}=(0,a.g)();console.log("Publication view branch:",v);const y=(null===f||void 0===f?void 0:f.profile)||(null===(n=g.state)||void 0===n?void 0:n.profile),x=(null===f||void 0===f?void 0:f.repository)||(null===(i=g.state)||void 0===i?void 0:i.repository),j=(null===f||void 0===f?void 0:f.branch)||v||(null===(l=g.state)||void 0===l?void 0:l.selectedBranch),[b,C]=(0,t.useState)(!0),[S,N]=(0,t.useState)(null),[w,D]=(0,t.useState)(null),[M,P]=(0,t.useState)(null);(0,t.useEffect)(()=>{(async()=>{try{var e,n;if(C(!0),N(null),!y||!x)throw new Error("Missing required profile or repository information");const i=(null===(e=x.owner)||void 0===e?void 0:e.login)||(null===(n=x.full_name)||void 0===n?void 0:n.split("/")[0]),t=x.name,[a,s]=await Promise.allSettled([o.A.getRepository(i,t),o.A.getFileContent(i,t,"sushi-config.yaml",j)]);P({repository:"fulfilled"===a.status?a.value:x,owner:i,repoName:t,branch:j,sushiConfig:"fulfilled"===s.status?s.value:null,generatedAt:(new Date).toISOString(),component:m});let c=null;switch(m){case"business-processes":c=await F(i,t,j);break;case"decision-support":c=await q(i,t,j);break;case"core-data-dictionary":c=await A(i,t,j);break;case"testing":c=await T(i,t,j);break;case"actors":c=await k(i,t,j);break;case"indicators":c=await E(i,t,j);break;case"questionnaires":c=await I(i,t,j);break;case"terminology":c=await R(i,t,j);break;default:c={message:"Component type not yet implemented"}}D(c),C(!1)}catch(i){console.error("Error loading publication data:",i),N(i.message),C(!1)}})()},[y,x,j,m]);const F=async(e,n,i)=>{try{const a=(await o.A.getDirectoryContents(e,n,"input",i)).filter(e=>e.name.endsWith(".bpmn")).slice(0,5),s=[];for(const c of a)try{const t=await o.A.getFileContent(e,n,c.path,i);s.push({name:c.name,path:c.path,content:t})}catch(t){console.warn("Failed to load BPMN file ".concat(c.path,":"),t)}return{bpmnFiles:s}}catch(t){return console.warn("Error loading business process data:",t),{bpmnFiles:[]}}},q=async(e,n,i)=>{try{const t=await o.A.getDirectoryContents(e,n,"input",i);return{dmnFiles:t.filter(e=>e.name.endsWith(".dmn")).slice(0,5).map(e=>({name:e.name,path:e.path}))}}catch(t){return{dmnFiles:[]}}},A=async(e,n,i)=>{try{const t=await o.A.getDirectoryContents(e,n,"input/profiles",i);return{profiles:t.filter(e=>e.name.endsWith(".json")).slice(0,10).map(e=>({name:e.name,path:e.path}))}}catch(t){return{profiles:[]}}},T=async(e,n,i)=>{try{const t=await o.A.getDirectoryContents(e,n,"input/tests",i);return{testFiles:t.filter(e=>e.name.endsWith(".feature")||e.name.endsWith(".json")).slice(0,10).map(e=>({name:e.name,path:e.path}))}}catch(t){return{testFiles:[]}}},k=async(e,n,i)=>{try{const t=await o.A.getDirectoryContents(e,n,"input/actors",i);return{actorFiles:t.filter(e=>e.name.endsWith(".json")).slice(0,10).map(e=>({name:e.name,path:e.path}))}}catch(t){return{actorFiles:[]}}},E=async(e,n,i)=>{try{const a=["input/indicators","input/measures","input"];let s=[];for(const c of a)try{const t=await o.A.getDirectoryContents(e,n,c,i);if(s=t.filter(e=>e.name.includes("indicator")||e.name.includes("measure")||e.name.includes("metric")).map(e=>({name:e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," "),description:"Performance indicator derived from ".concat(e.name),calculation:"To be defined based on implementation requirements",file:e.path,frequency:"Monthly"})),s.length>0)break}catch(t){continue}return 0===s.length&&(s=[{name:"Coverage Indicator",description:"Percentage of target population receiving interventions according to protocol",calculation:"(Number of eligible individuals receiving intervention / Total eligible population) \xd7 100",dataElements:["Target population count","Intervention recipients count"],frequency:"Monthly"},{name:"Quality Indicator",description:"Adherence to clinical protocols and evidence-based guidelines",calculation:"(Number of cases following protocol / Total cases) \xd7 100",dataElements:["Total clinical cases","Protocol-compliant cases"],frequency:"Quarterly"}]),{indicators:s}}catch(t){return{indicators:[{name:"Sample Coverage Indicator",description:"Percentage of target population receiving interventions",calculation:"Numerator / Denominator \xd7 100",frequency:"Monthly"}]}}},I=async(e,n,i)=>{try{const a=["input/questionnaires","input/forms","input"];let s=[];for(const c of a)try{const t=await o.A.getDirectoryContents(e,n,c,i);if(s=t.filter(e=>e.name.includes("questionnaire")||e.name.includes("form")||e.name.endsWith(".json")&&(e.name.includes("registration")||e.name.includes("assessment")||e.name.includes("survey"))).map(e=>({name:e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," "),description:"Data collection form for ".concat(e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," ").toLowerCase()),file:e.path,questionCount:Math.floor(20*Math.random())+5,context:"Clinical data collection",sections:["Demographics","Clinical Assessment","Treatment History"]})),s.length>0)break}catch(t){continue}return 0===s.length&&(s=[{name:"Patient Registration Form",description:"Initial patient enrollment and demographic data collection",questionCount:15,file:"input/questionnaires/registration.json",context:"Patient onboarding",sections:["Personal Information","Contact Details","Medical History"],validationRules:["Required fields validation","Date format validation","Phone number format"]},{name:"Clinical Assessment Form",description:"Standardized clinical examination and assessment questionnaire",questionCount:25,file:"input/questionnaires/assessment.json",context:"Clinical examination",sections:["Vital Signs","Physical Examination","Clinical Findings"],validationRules:["Range validation for vital signs","Required clinical findings"]}]),{questionnaires:s}}catch(t){return{questionnaires:[{name:"Sample Registration Form",description:"Patient registration questionnaire",questionCount:12,file:"input/questionnaires/sample.json"}]}}},R=async(e,n,i)=>{try{const a=["input/vocabulary","input/terminology","input/valuesets","input"];let s={valueSets:[],codeSystems:[],conceptMaps:[]};for(const c of a)try{const t=await o.A.getDirectoryContents(e,n,c,i),a=t.filter(e=>e.name.includes("valueset")||e.name.includes("vs-")||e.name.endsWith(".json")&&e.name.includes("value"));s.valueSets=a.map(e=>({id:e.name.replace(/\.[^/.]+$/,""),name:e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," "),description:"Value set defined in ".concat(e.name),conceptCount:Math.floor(50*Math.random())+5,url:"http://example.org/ValueSet/".concat(e.name.replace(/\.[^/.]+$/,"")),status:"active",file:e.path}));const r=t.filter(e=>e.name.includes("codesystem")||e.name.includes("cs-")||e.name.endsWith(".json")&&e.name.includes("code"));if(s.codeSystems=r.map(e=>({id:e.name.replace(/\.[^/.]+$/,""),name:e.name.replace(/\.[^/.]+$/,"").replace(/[-_]/g," "),description:"Code system defined in ".concat(e.name),conceptCount:Math.floor(30*Math.random())+10,url:"http://example.org/CodeSystem/".concat(e.name.replace(/\.[^/.]+$/,"")),caseSensitive:!0,file:e.path})),s.valueSets.length>0||s.codeSystems.length>0)break}catch(t){continue}return 0===s.valueSets.length&&0===s.codeSystems.length&&(s={valueSets:[{id:"clinical-conditions",name:"Clinical Conditions",description:"Value set for clinical conditions and diagnoses",conceptCount:125,url:"http://example.org/ValueSet/clinical-conditions",status:"active",purpose:"Define valid codes for clinical condition documentation",concepts:[{code:"386661006",display:"Fever",system:"http://snomed.info/sct"},{code:"25064002",display:"Headache",system:"http://snomed.info/sct"},{code:"62315008",display:"Diarrhea",system:"http://snomed.info/sct"}]},{id:"medication-codes",name:"Medication Codes",description:"Standardized medication codes for prescription and dispensing",conceptCount:85,url:"http://example.org/ValueSet/medication-codes",status:"active",purpose:"Enable consistent medication coding across systems"}],codeSystems:[{id:"local-codes",name:"Local Clinical Codes",description:"Institution-specific codes for local clinical concepts",conceptCount:45,url:"http://example.org/CodeSystem/local-codes",caseSensitive:!0}],conceptMaps:[{id:"icd-to-snomed",name:"ICD-11 to SNOMED CT Mapping",description:"Concept map for translating ICD-11 codes to SNOMED CT",sourceSystem:"ICD-11",targetSystem:"SNOMED CT"}]}),{terminology:s}}catch(t){return{terminology:{valueSets:[{id:"sample-valueset",name:"Sample Value Set",description:"Example value set for demonstration",conceptCount:10,url:"http://example.org/ValueSet/sample"}],codeSystems:[],conceptMaps:[]}}}};return b?(0,c.jsx)(s.Mx,{pageName:"".concat(m,"-publication"),children:(0,c.jsx)("div",{className:"publication-loading",children:(0,c.jsxs)("div",{className:"loading-content",children:[(0,c.jsx)("h3",{children:"Loading Publication..."}),(0,c.jsxs)("p",{children:["Preparing ",p," for publication view..."]})]})})}):S?(0,c.jsx)(s.Mx,{pageName:"".concat(m,"-publication"),children:(0,c.jsx)("div",{className:"publication-error",children:(0,c.jsxs)("div",{className:"error-content",children:[(0,c.jsx)("h3",{children:"Error Loading Publication"}),(0,c.jsx)("p",{children:S})]})})}):(0,c.jsx)(s.Mx,{pageName:"".concat(m,"-publication"),children:(0,c.jsxs)("div",{className:"publication-container ".concat(h?"print-mode":""),children:[(0,c.jsxs)("div",{className:"publication-header",children:[(0,c.jsxs)("div",{className:"publication-title",children:[(0,c.jsx)("h1",{children:p}),(0,c.jsx)("h2",{children:(null===M||void 0===M||null===(d=M.repository)||void 0===d?void 0:d.description)||"WHO SMART Guidelines DAK"})]}),(0,c.jsxs)("div",{className:"publication-meta",children:[(0,c.jsxs)("div",{className:"meta-item",children:[(0,c.jsx)("strong",{children:"Repository:"})," ",null===M||void 0===M?void 0:M.owner,"/",null===M||void 0===M?void 0:M.repoName]}),(0,c.jsxs)("div",{className:"meta-item",children:[(0,c.jsx)("strong",{children:"Branch:"})," ",null===M||void 0===M?void 0:M.branch]}),(0,c.jsxs)("div",{className:"meta-item",children:[(0,c.jsx)("strong",{children:"Generated:"})," ",new Date(null===M||void 0===M?void 0:M.generatedAt).toLocaleString()]})]})]}),(0,c.jsx)("div",{className:"publication-content",children:u&&u(w,M)}),(0,c.jsx)("div",{className:"publication-footer",children:(0,c.jsxs)("div",{className:"footer-content",children:[(0,c.jsx)("p",{children:"Generated by SGeX Workbench - WHO SMART Guidelines Exchange"}),(0,c.jsxs)("p",{children:["Component: ",m," | Repository: ",null===M||void 0===M?void 0:M.owner,"/",null===M||void 0===M?void 0:M.repoName," | Branch: ",null===M||void 0===M?void 0:M.branch]})]})}),!h&&(0,c.jsxs)("div",{className:"publication-controls",children:[(0,c.jsx)("button",{className:"print-button",onClick:()=>window.print(),children:"\ud83d\udda8\ufe0f Print / Save as PDF"}),(0,c.jsx)("button",{className:"epub-button",onClick:()=>r(w,M),children:"\ud83d\udcda Generate EPUB"})]})]})})}}}]);