openapi: 3.0.3
info:
  title: DAK FAQ MCP Server API
  version: 1.0.0
  description: |
    API for WHO SMART Guidelines Digital Adaptation Kit (DAK) FAQ functionality.
    All endpoints are rooted under `/mcp` for Model Context Protocol compatibility.
    
    This server provides:
    - FAQ question catalog and execution
    - DAK component information (value sets, decision tables, business processes, personas, questionnaires)
    - Health monitoring and schema validation
    
    The server is designed for local-only operation (127.0.0.1) and should not be exposed to remote networks.
  contact:
    name: WHO SMART Guidelines
    url: https://smart.who.int
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://127.0.0.1:3001/mcp
    description: Local development server

tags:
  - name: health
    description: Server health and status endpoints
  - name: faq
    description: FAQ question management and execution
  - name: dak-components
    description: DAK component information endpoints

paths:
  /health:
    get:
      tags: [health]
      summary: Get server health status
      description: Returns the current health status and version information of the DAK FAQ MCP server.
      operationId: getHealth
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: healthy
                timestamp: "2025-01-08T12:00:00.000Z"
                version: "1.0.0"
                description: "DAK FAQ MCP Server - Local Only"

  /faq/questions/catalog:
    get:
      tags: [faq]
      summary: Get catalog of available FAQ questions
      description: Returns a list of available FAQ questions with optional filtering capabilities.
      operationId: getFAQCatalog
      parameters:
        - name: level
          in: query
          description: Filter by question level
          required: false
          schema:
            type: string
            enum: [dak, component, asset]
          example: dak
        - name: tags
          in: query
          description: Comma-separated list of tags to filter by
          required: false
          schema:
            type: string
          example: "metadata,basic"
        - name: componentType
          in: query
          description: Filter by component type
          required: false
          schema:
            type: string
          example: "business-process"
        - name: assetType
          in: query
          description: Filter by asset type
          required: false
          schema:
            type: string
          example: "questionnaire"
        - name: format
          in: query
          description: Response format
          required: false
          schema:
            type: string
            enum: [json, openapi]
            default: json
      responses:
        '200':
          description: Catalog retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogResponse'
              example:
                success: true
                timestamp: "2025-01-08T12:00:00.000Z"
                filters: {
                  level: "dak",
                  tags: ["metadata"]
                }
                count: 3
                questions:
                  - id: "dak-name"
                    level: "dak"
                    title: "DAK Name"
                    description: "Get the name of the Digital Adaptation Kit"
                    parameters: []
                    tags: ["metadata", "basic"]
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /faq/questions/execute:
    post:
      tags: [faq]
      summary: Execute FAQ questions in batch
      description: Execute one or more FAQ questions and return their results.
      operationId: executeFAQBatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteRequestBody'
            example:
              requests:
                - questionId: "dak-name"
                  parameters:
                    locale: "en_US"
                - questionId: "dak-description"
                  parameters:
                    locale: "en_US"
              context:
                repositoryPath: "/path/to/dak"
      responses:
        '200':
          description: Questions executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExecuteResponse'
              example:
                success: true
                timestamp: "2025-01-08T12:00:00.000Z"
                results:
                  - questionId: "dak-name"
                    success: true
                    result:
                      structured: { name: "Example DAK" }
                      narrative: "<h4>DAK Name</h4><p>The name of this DAK is <strong>Example DAK</strong>.</p>"
                      errors: []
                      warnings: []
                      meta: {}
                    timestamp: "2025-01-08T12:00:00.000Z"
                summary:
                  total: 2
                  successful: 2
                  failed: 0
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /faq/execute:
    post:
      tags: [faq]
      summary: Execute a single FAQ question (alias endpoint)
      description: Alternative endpoint for executing a single FAQ question.
      operationId: executeFAQSingle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExecuteRequest'
                - type: object
                  properties:
                    context:
                      type: object
                      properties:
                        repositoryPath:
                          type: string
            example:
              questionId: "dak-name"
              parameters:
                locale: "en_US"
              context:
                repositoryPath: "/path/to/dak"
      responses:
        '200':
          description: Question executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteResponse'
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /faq/valuesets:
    get:
      tags: [dak-components]
      summary: List value sets available in this DAK
      description: Returns a list of all value sets defined in the Digital Adaptation Kit.
      operationId: getValueSets
      responses:
        '200':
          description: Value sets retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValueSetListResponse'
              example:
                success: true
                timestamp: "2025-01-08T12:00:00.000Z"
                count: 3
                valueSets:
                  - id: "anc-care-settings"
                    name: "ANC Care Settings"
                    description: "Settings where antenatal care can be provided"
                    conceptCount: 5
                  - id: "pregnancy-risk-factors"
                    name: "Pregnancy Risk Factors"
                    description: "Risk factors during pregnancy"
                    conceptCount: 12
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /faq/decision-tables:
    get:
      tags: [dak-components]
      summary: List decision tables available in this DAK
      description: Returns a list of all decision tables (DMN files) in the Digital Adaptation Kit.
      operationId: getDecisionTables
      responses:
        '200':
          description: Decision tables retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionTableListResponse'
              example:
                success: true
                timestamp: "2025-01-08T12:00:00.000Z"
                count: 2
                decisionTables:
                  - id: "anc-contact-schedule"
                    name: "ANC Contact Schedule"
                    description: "Decision logic for scheduling antenatal care contacts"
                    file: "input/pagecontent/anc-contact-schedule.dmn"
                  - id: "immunization-schedule"
                    name: "Immunization Schedule"
                    description: "Decision logic for immunization scheduling"
                    file: "input/pagecontent/immunization-schedule.dmn"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /faq/business-processes:
    get:
      tags: [dak-components]
      summary: List business processes in this DAK
      description: Returns a list of all business processes defined in the Digital Adaptation Kit.
      operationId: getBusinessProcesses
      responses:
        '200':
          description: Business processes retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProcessListResponse'
              example:
                success: true
                timestamp: "2025-01-08T12:00:00.000Z"
                count: 3
                businessProcesses:
                  - id: "anc-contact-process"
                    name: "ANC Contact Process"
                    description: "End-to-end process for antenatal care contacts"
                  - id: "immunization-workflow"
                    name: "Immunization Workflow"
                    description: "Workflow for vaccine administration and tracking"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /faq/personas:
    get:
      tags: [dak-components]
      summary: List personas/actors in this DAK
      description: Returns a list of all personas and actors defined in the Digital Adaptation Kit.
      operationId: getPersonas
      responses:
        '200':
          description: Personas retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonaListResponse'
              example:
                success: true
                timestamp: "2025-01-08T12:00:00.000Z"
                count: 4
                personas:
                  - id: "anc-nurse"
                    name: "ANC Nurse"
                    role: "Healthcare Provider"
                    description: "Nurse specializing in antenatal care services"
                  - id: "community-health-worker"
                    name: "Community Health Worker"
                    role: "Community Healthcare"
                    description: "Health worker providing services at community level"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /faq/questionnaires:
    get:
      tags: [dak-components]
      summary: List questionnaires available in this DAK
      description: Returns a list of all questionnaires defined in the Digital Adaptation Kit.
      operationId: getQuestionnaires
      responses:
        '200':
          description: Questionnaires retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireListResponse'
              example:
                success: true
                timestamp: "2025-01-08T12:00:00.000Z"
                count: 4
                questionnaires:
                  - id: "anc-registration"
                    name: "ANC Registration"
                    description: "Initial registration questionnaire for antenatal care"
                    questionCount: 15
                  - id: "anc-contact"
                    name: "ANC Contact"
                    description: "Questionnaire for routine antenatal care contacts"
                    questionCount: 25
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      required: [status, timestamp, version, description]
      properties:
        status:
          type: string
          description: Health status of the server
          example: healthy
        timestamp:
          type: string
          format: date-time
          description: Timestamp when health check was performed
        version:
          type: string
          description: Version of the server
          example: "1.0.0"
        description:
          type: string
          description: Description of the server
          example: "DAK FAQ MCP Server - Local Only"

    ErrorResponse:
      type: object
      required: [error]
      properties:
        error:
          type: object
          required: [message, code, timestamp]
          properties:
            message:
              type: string
              description: Human-readable error message
            code:
              type: string
              description: Machine-readable error code
            timestamp:
              type: string
              format: date-time
              description: Timestamp when error occurred
            details:
              type: array
              items:
                type: string
              description: Additional error details
            path:
              type: string
              description: Request path that caused the error
            method:
              type: string
              description: HTTP method that caused the error

    FAQQuestion:
      type: object
      required: [id, level, title, description, parameters, tags]
      properties:
        id:
          type: string
          description: Unique identifier for the question
        level:
          type: string
          enum: [dak, component, asset]
          description: Level at which the question applies
        title:
          type: string
          description: Human-readable title of the question
        description:
          type: string
          description: Detailed description of what the question does
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/FAQParameter'
          description: Parameters required by the question
        tags:
          type: array
          items:
            type: string
          description: Tags for categorizing the question
        componentType:
          type: string
          description: Type of component this question applies to
        assetType:
          type: string
          description: Type of asset this question applies to
        version:
          type: string
          description: Version of the question

    FAQParameter:
      type: object
      required: [name, type, required, description]
      properties:
        name:
          type: string
          description: Parameter name
        type:
          type: string
          description: Parameter data type
        required:
          type: boolean
          description: Whether the parameter is required
        description:
          type: string
          description: Description of the parameter
        defaultValue:
          description: Default value for the parameter

    ExecuteRequest:
      type: object
      required: [questionId]
      properties:
        questionId:
          type: string
          description: ID of the question to execute
        parameters:
          type: object
          description: Parameters for question execution
          additionalProperties: true
        assetFiles:
          type: array
          items:
            type: string
          description: Asset files to process

    ExecuteRequestBody:
      type: object
      required: [requests]
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/ExecuteRequest'
          description: List of questions to execute
        context:
          type: object
          properties:
            repositoryPath:
              type: string
              description: Path to the DAK repository
          additionalProperties: true
          description: Execution context

    ExecuteResponse:
      type: object
      required: [success, questionId, timestamp]
      properties:
        success:
          type: boolean
          description: Whether the execution was successful
        questionId:
          type: string
          description: ID of the executed question
        result:
          type: object
          properties:
            structured:
              type: object
              description: Structured data result
              additionalProperties: true
            narrative:
              type: string
              description: HTML narrative result
            errors:
              type: array
              items:
                type: string
              description: Execution errors
            warnings:
              type: array
              items:
                type: string
              description: Execution warnings
            meta:
              type: object
              description: Metadata about the execution
              additionalProperties: true
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: string
        timestamp:
          type: string
          format: date-time

    BatchExecuteResponse:
      type: object
      required: [success, timestamp, results, summary]
      properties:
        success:
          type: boolean
          description: Whether the batch execution was successful
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the execution
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExecuteResponse'
          description: Results of each executed question
        summary:
          type: object
          required: [total, successful, failed]
          properties:
            total:
              type: integer
              description: Total number of questions executed
            successful:
              type: integer
              description: Number of successfully executed questions
            failed:
              type: integer
              description: Number of failed questions

    CatalogResponse:
      type: object
      required: [success, timestamp, filters, count, questions]
      properties:
        success:
          type: boolean
          description: Whether the catalog retrieval was successful
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the response
        filters:
          type: object
          description: Applied filters
          additionalProperties: true
        count:
          type: integer
          description: Number of questions returned
        questions:
          type: array
          items:
            $ref: '#/components/schemas/FAQQuestion'
          description: List of FAQ questions

    ValueSet:
      type: object
      required: [id, name]
      properties:
        id:
          type: string
          description: Unique identifier for the value set
        name:
          type: string
          description: Human-readable name of the value set
        description:
          type: string
          description: Description of the value set
        conceptCount:
          type: integer
          description: Number of concepts in the value set

    ValueSetListResponse:
      type: object
      required: [success, timestamp, count, valueSets]
      properties:
        success:
          type: boolean
          description: Whether the retrieval was successful
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the response
        count:
          type: integer
          description: Number of value sets returned
        valueSets:
          type: array
          items:
            $ref: '#/components/schemas/ValueSet'
          description: List of value sets

    DecisionTable:
      type: object
      required: [id, name, file]
      properties:
        id:
          type: string
          description: Unique identifier for the decision table
        name:
          type: string
          description: Human-readable name of the decision table
        description:
          type: string
          description: Description of the decision table
        file:
          type: string
          description: Path to the DMN file

    DecisionTableListResponse:
      type: object
      required: [success, timestamp, count, decisionTables]
      properties:
        success:
          type: boolean
          description: Whether the retrieval was successful
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the response
        count:
          type: integer
          description: Number of decision tables returned
        decisionTables:
          type: array
          items:
            $ref: '#/components/schemas/DecisionTable'
          description: List of decision tables

    BusinessProcess:
      type: object
      required: [id, name]
      properties:
        id:
          type: string
          description: Unique identifier for the business process
        name:
          type: string
          description: Human-readable name of the business process
        description:
          type: string
          description: Description of the business process

    BusinessProcessListResponse:
      type: object
      required: [success, timestamp, count, businessProcesses]
      properties:
        success:
          type: boolean
          description: Whether the retrieval was successful
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the response
        count:
          type: integer
          description: Number of business processes returned
        businessProcesses:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcess'
          description: List of business processes

    Persona:
      type: object
      required: [id, name]
      properties:
        id:
          type: string
          description: Unique identifier for the persona
        name:
          type: string
          description: Human-readable name of the persona
        role:
          type: string
          description: Role of the persona
        description:
          type: string
          description: Description of the persona

    PersonaListResponse:
      type: object
      required: [success, timestamp, count, personas]
      properties:
        success:
          type: boolean
          description: Whether the retrieval was successful
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the response
        count:
          type: integer
          description: Number of personas returned
        personas:
          type: array
          items:
            $ref: '#/components/schemas/Persona'
          description: List of personas

    Questionnaire:
      type: object
      required: [id, name]
      properties:
        id:
          type: string
          description: Unique identifier for the questionnaire
        name:
          type: string
          description: Human-readable name of the questionnaire
        description:
          type: string
          description: Description of the questionnaire
        questionCount:
          type: integer
          description: Number of questions in the questionnaire

    QuestionnaireListResponse:
      type: object
      required: [success, timestamp, count, questionnaires]
      properties:
        success:
          type: boolean
          description: Whether the retrieval was successful
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the response
        count:
          type: integer
          description: Number of questionnaires returned
        questionnaires:
          type: array
          items:
            $ref: '#/components/schemas/Questionnaire'
          description: List of questionnaires