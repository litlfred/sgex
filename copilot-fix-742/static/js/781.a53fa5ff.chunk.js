"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[781],{92781:(e,n,t)=>{t.r(n),t.d(n,{default:()=>V});var i=t(65043),s=t(73537),a=t(74117),o=t(50404),r=t(89387),c=t(88691),l=t(93156),d=t(19794),u=t(70579);const m=e=>{let{helpTopic:n,contextData:t={}}=e;const[s,a]=(0,i.useState)(!1),o=(0,d.A)("sgex-mascot.png");return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)("button",{className:"help-button",onClick:()=>{a(!0)},title:"Get Help","aria-label":"Get Help",children:(0,u.jsx)("img",{src:o,alt:"SGEX Helper",className:"help-mascot-icon"})}),s&&(0,u.jsx)(l.A,{topic:n,contextData:t,onClose:()=>{a(!1)}})]})};var h=t(98757),p=t(79839),g=t(89379),v=t(55661);const f={id:"dak-sushi-base",component:"dak-structure",level:"error",fileTypes:["yaml"],descriptionKey:"validation.dak.sushiBase.description",description:"DAK IG SHALL have smart.who.int.base as a dependency",async validate(e,n,t){if(!e.endsWith("sushi-config.yaml"))return null;try{const t=v.load(n);return t&&"object"===typeof t?t.dependencies&&"object"===typeof t.dependencies?t.dependencies["smart.who.int.base"]?null:{validationId:"dak-sushi-base",component:"dak-structure",level:"error",description:"DAK IG SHALL have smart.who.int.base as a dependency",filePath:e,message:"Missing required smart.who.int.base dependency",line:f.findLineNumber&&f.findLineNumber(n,"dependencies")||1,column:1,suggestion:'Add "smart.who.int.base: current" to dependencies section'}:{validationId:"dak-sushi-base",component:"dak-structure",level:"error",description:"DAK IG SHALL have smart.who.int.base as a dependency",filePath:e,message:"sushi-config.yaml missing dependencies section",line:f.findLineNumber&&f.findLineNumber(n,"dependencies")||1,column:1,suggestion:"Add dependencies section with smart.who.int.base dependency"}:{validationId:"dak-sushi-base",component:"dak-structure",level:"error",description:"DAK IG SHALL have smart.who.int.base as a dependency",filePath:e,message:"sushi-config.yaml must contain a valid YAML object",line:1,column:1,suggestion:"Ensure the file contains proper YAML object structure"}}catch(a){var i,s;return{validationId:"dak-sushi-base",component:"dak-structure",level:"error",description:"DAK IG SHALL have smart.who.int.base as a dependency",filePath:e,message:"YAML parsing error: ".concat(a.message),line:(null===(i=a.mark)||void 0===i?void 0:i.line)||1,column:(null===(s=a.mark)||void 0===s?void 0:s.column)||1,suggestion:"Fix YAML syntax errors"}}},findLineNumber(e,n){const t=e.split("\n");for(let i=0;i<t.length;i++)if(t[i].includes(n))return i+1;return null}},y=f,b={id:"bpmn-business-rule-task-id",component:"business-processes",level:"error",fileTypes:["bpmn","xml"],descriptionKey:"validation.bpmn.businessRuleTaskId.description",description:"In BPMN diagrams a bpmn:businessRuleTask SHALL have an @id attribute",async validate(e,n,t){if(!e.endsWith(".bpmn")&&!e.endsWith(".xml")&&!(e=>e.includes("http://www.omg.org/spec/BPMN/")||e.includes("businessRuleTask")||e.includes("bpmn:"))(n))return null;try{const t=/<bpmn:businessRuleTask(?![^>]*\sid\s*=)[^>]*>/g,i=n.match(t);if(i&&i.length>0){const t=i[0],s=n.indexOf(t),a=n.substring(0,s).split("\n").length;return{validationId:"bpmn-business-rule-task-id",component:"business-processes",level:"error",description:"In BPMN diagrams a bpmn:businessRuleTask SHALL have an @id attribute",filePath:e,message:"Found ".concat(i.length," businessRuleTask").concat(i.length>1?"s":""," without required @id attribute"),line:a,column:1,suggestion:'Add id attribute to each bpmn:businessRuleTask element, e.g., <bpmn:businessRuleTask id="BusinessRuleTask_1">'}}return null}catch(i){return{validationId:"bpmn-business-rule-task-id",component:"business-processes",level:"error",description:"In BPMN diagrams a bpmn:businessRuleTask SHALL have an @id attribute",filePath:e,message:"Error parsing BPMN: ".concat(i.message),line:1,column:1,suggestion:"Ensure the BPMN file is well-formed XML"}}},findLineNumber(e,n){const t=e.split("\n");for(let i=0;i<t.length;i++)if(t[i].includes(n))return i+1;return null}},x={id:"dmn-decision-label-id",component:"decision-support-logic",level:"error",fileTypes:["dmn","xml"],descriptionKey:"validation.dmn.decisionLabelId.description",description:"In DMN diagrams, decisions SHALL have both label and id attributes",async validate(e,n,t){if(!e.endsWith(".dmn")&&!e.endsWith(".xml")&&!(e=>e.includes("http://www.omg.org/spec/DMN/")||e.includes("dmndi:")||e.includes("dmn:")||e.includes("decision"))(n))return null;try{const t=/<dmn:decision[^>]*>/g,i=Array.from(n.matchAll(t));for(let s=0;s<i.length;s++){const t=i[s],a=t[0],o=/\sid\s*=\s*["'][^"']*["']/.test(a),r=/\slabel\s*=\s*["'][^"']*["']/.test(a);if(!o||!r){const i=t.index||0,s=n.substring(0,i).split("\n").length;let a="Decision element missing required attributes: ";const c=[];return o||c.push("id"),r||c.push("label"),a+=c.join(", "),{validationId:"dmn-decision-label-id",component:"decision-support-logic",level:"error",description:"In DMN diagrams, decisions SHALL have both label and id attributes",filePath:e,message:a,line:s,column:1,suggestion:"Add missing attributes to dmn:decision element: ".concat(c.map(e=>"".concat(e,'="value"')).join(", "))}}}return null}catch(i){return{validationId:"dmn-decision-label-id",component:"decision-support-logic",level:"error",description:"In DMN diagrams, decisions SHALL have both label and id attributes",filePath:e,message:"Error parsing DMN: ".concat(i.message),line:1,column:1,suggestion:"Ensure the DMN file is well-formed XML"}}},findLineNumber(e,n){const t=e.split("\n");for(let i=0;i<t.length;i++)if(t[i].includes(n))return i+1;return null}},w={id:"dmn-bpmn-cross-reference",component:"business-processes",level:"warning",fileTypes:["bpmn","xml"],descriptionKey:"validation.dmnBpmn.crossReference.description",description:"In BPMN business rule tasks that reference DMN files, the referenced DMN decision SHALL exist",async validate(e,n,t){if(!e.endsWith(".bpmn")&&!e.endsWith(".xml")&&!(e=>e.includes("http://www.omg.org/spec/BPMN/")||e.includes("businessRuleTask")||e.includes("bpmn:"))(n))return null;if(!n.includes("businessRuleTask"))return null;try{const i=(e=>{const n=[],t=/dmn[:\-_]?(?:decision|ref|name)[\s]*=[\s]*["']([^"']+)["']/gi;let i;for(;null!==(i=t.exec(e));)n.push(i[1]);return n})(n);if(0===i.length)return null;const s=(t.dakFiles||[]).filter(e=>e.path.endsWith(".dmn")||(e=>e.includes("http://www.omg.org/spec/DMN/")||e.includes("dmn:")||e.includes("<decision"))(e.content));if(0===s.length)return{validationId:"dmn-bpmn-cross-reference",component:"business-processes",level:"warning",description:"In BPMN business rule tasks that reference DMN files, the referenced DMN decision SHALL exist",filePath:e,message:"BPMN file references DMN decisions but no DMN files found in DAK",line:1,column:1,suggestion:"Add the referenced DMN files to the DAK or remove DMN references from business rule tasks"};const a=[];s.forEach(e=>{const n=(e=>{const n=[],t=/<dmn:decision[^>]+(?:id|name)[\s]*=[\s]*["']([^"']+)["']/gi;let i;for(;null!==(i=t.exec(e));)n.push(i[1]);return n})(e.content);a.push(...n)});const o=i.filter(e=>!a.includes(e));return o.length>0?{validationId:"dmn-bpmn-cross-reference",component:"business-processes",level:"warning",description:"In BPMN business rule tasks that reference DMN files, the referenced DMN decision SHALL exist",filePath:e,message:"BPMN references missing DMN decisions: ".concat(o.join(", ")),line:1,column:1,suggestion:"Create DMN decisions with IDs: ".concat(o.join(", ")," or update BPMN references to match existing decisions: ").concat(a.join(", "))}:null}catch(i){return{validationId:"dmn-bpmn-cross-reference",component:"business-processes",level:"error",description:"In BPMN business rule tasks that reference DMN files, the referenced DMN decision SHALL exist",filePath:e,message:"Error validating DMN-BPMN cross-references: ".concat(i.message),line:1,column:1,suggestion:"Check BPMN and DMN file structure and references"}}},findLineNumber(e,n){const t=e.split("\n");for(let i=0;i<t.length;i++)if(t[i].includes(n))return i+1;return null}};const N={id:"xml-well-formed",component:"file-structure",level:"error",fileTypes:["xml","bpmn","dmn"],descriptionKey:"validation.xml.wellFormed.description",description:"XML files must be well-formed according to XML 1.0 specification",async validate(e,n,t){if(!e.endsWith(".xml")&&!e.endsWith(".bpmn")&&!e.endsWith(".dmn")&&!function(e){const n=e.trim();return n.startsWith("<?xml")||n.startsWith("<")&&(n.includes("xmlns")||n.includes("<?xml"))}(n))return null;try{const t=new DOMParser,i=t.parseFromString(n,"text/xml").querySelector("parsererror");if(i){const n=i.textContent||"Unknown parsing error",t=n.match(/line (\d+)/i),s=n.match(/column (\d+)/i);let a=1,o=1;return t&&(a=parseInt(t[1],10)),s&&(o=parseInt(s[1],10)),{validationId:"xml-well-formed",component:"file-structure",level:"error",description:"XML files must be well-formed according to XML 1.0 specification",filePath:e,message:"XML parsing error: ".concat(n),line:a,column:o,suggestion:"Fix XML syntax errors such as unclosed tags, invalid characters, or malformed attributes"}}return null}catch(i){return{validationId:"xml-well-formed",component:"file-structure",level:"error",description:"XML files must be well-formed according to XML 1.0 specification",filePath:e,message:"XML validation error: ".concat(i.message),line:1,column:1,suggestion:"Ensure the XML file follows valid XML 1.0 syntax"}}}};const j={id:"json-valid",component:"file-structure",level:"error",fileTypes:["json"],descriptionKey:"validation.json.valid.description",description:"JSON files must be valid JSON",async validate(e,n,t){if(!e.endsWith(".json")&&!function(e){const n=e.trim();return n.startsWith("{")&&n.endsWith("}")||n.startsWith("[")&&n.endsWith("]")}(n))return null;try{return JSON.parse(n),null}catch(i){const t=i.message.match(/line (\d+)/i),s=i.message.match(/column (\d+)/i),a=i.message.match(/position (\d+)/i);let o=1,r=1;if(t)o=parseInt(t[1],10);else if(a){const e=parseInt(a[1],10),t=n.substring(0,e).split("\n");o=t.length,r=t[t.length-1].length+1}return s&&(r=parseInt(s[1],10)),{validationId:"json-valid",component:"file-structure",level:"error",description:"JSON files must be valid JSON",filePath:e,message:"JSON syntax error: ".concat(i.message),line:o,column:r,suggestion:"Fix JSON syntax errors such as missing commas, quotes, or brackets"}}}},A={id:"file-naming-conventions",component:"file-structure",level:"warning",fileTypes:["*"],descriptionKey:"validation.fileNaming.conventions.description",description:"Files SHALL follow WHO SMART Guidelines naming conventions",async validate(e,n,t){const i=(e=>e.split("/").pop()||e)(e),s=[".gitignore",".npmignore",".env",".env.local",".env.development",".env.production"];if(s.includes(i))return null;if(i.startsWith(".")&&!s.includes(i))return null;try{if(!(e=>/^[a-zA-Z0-9._-]+$/.test(e))(i))return{validationId:"file-naming-conventions",component:"file-structure",level:"error",description:"Files SHALL follow WHO SMART Guidelines naming conventions",filePath:e,message:"File name contains invalid characters",line:1,column:1,suggestion:"Use only alphanumeric characters, hyphens, underscores, and dots in file names"};if(i.includes(" "))return{validationId:"file-naming-conventions",component:"file-structure",level:"error",description:"Files SHALL follow WHO SMART Guidelines naming conventions",filePath:e,message:"File name contains spaces",line:1,column:1,suggestion:"Replace spaces with hyphens or underscores"};if(!(e=>/^[a-z0-9-]+(\.[a-z0-9]+)*$/.test(e))(i)){const n=/[A-Z]/.test(i),t=i.includes("_");let s="File name does not follow recommended naming conventions",a="Use lowercase letters with hyphens for better consistency";return n?(s="File name contains uppercase letters",a="Convert to lowercase for better consistency with WHO SMART Guidelines"):t&&(s="File name uses underscores instead of hyphens",a="Consider using hyphens instead of underscores for consistency"),{validationId:"file-naming-conventions",component:"file-structure",level:"warning",description:"Files SHALL follow WHO SMART Guidelines naming conventions",filePath:e,message:s,line:1,column:1,suggestion:a}}return null}catch(a){return{validationId:"file-naming-conventions",component:"file-structure",level:"error",description:"Files SHALL follow WHO SMART Guidelines naming conventions",filePath:e,message:"Error validating file name: ".concat(a.message),line:1,column:1,suggestion:"Check file name format and characters"}}}},S={"dak-structure":{id:"dak-structure",name:"DAK Structure",description:"Overall DAK repository structure and configuration"},"business-processes":{id:"business-processes",name:"Business Processes",description:"BPMN workflows and process definitions"},"decision-support-logic":{id:"decision-support-logic",name:"Decision Support Logic",description:"DMN decision tables and business rules"},"core-data-elements":{id:"core-data-elements",name:"Core Data Elements",description:"Terminology and data model definitions"},indicators:{id:"indicators",name:"Program Indicators",description:"Performance indicators and measures"},publications:{id:"publications",name:"Publications",description:"Health interventions and recommendations"},requirements:{id:"requirements",name:"Requirements",description:"Functional and non-functional requirements"},"test-scenarios":{id:"test-scenarios",name:"Test Scenarios",description:"Test cases and validation scenarios"},personas:{id:"personas",name:"Generic Personas",description:"User roles and actor definitions"},"user-scenarios":{id:"user-scenarios",name:"User Scenarios",description:"Use case narratives and workflows"},"file-structure":{id:"file-structure",name:"File Structure",description:"General file format and structure validations"}},k="error",C="warning",L="info";const M=new class{constructor(){this.validations=new Map,this.componentValidations=new Map,this.initializeValidations()}initializeValidations(){[y,b,x,w,N,j,A].forEach(e=>{this.registerValidation(e)}),console.log("Registered ".concat(this.validations.size," validation definitions"))}registerValidation(e){if(!e.id)throw new Error("Validation must have an id");this.validations.has(e.id)&&console.warn("Validation ".concat(e.id," is already registered. Overwriting.")),this.validations.set(e.id,e),this.componentValidations.has(e.component)||this.componentValidations.set(e.component,[]),this.componentValidations.get(e.component).push(e)}getAllValidations(){return Array.from(this.validations.values())}getValidation(e){return this.validations.get(e)}getValidationsForComponent(e){return this.componentValidations.get(e)||[]}getValidationsForFileType(e){return this.getAllValidations().filter(n=>n.fileTypes.includes("*")||n.fileTypes.includes(e))}getValidationsByLevel(e){return this.getAllValidations().filter(n=>n.level===e)}getComponentSummary(){const e={};return Object.values(S).forEach(n=>{const t=this.getValidationsForComponent(n.id);e[n.id]=(0,g.A)((0,g.A)({},n),{},{validationCount:t.length,errorCount:t.filter(e=>e.level===k).length,warningCount:t.filter(e=>e.level===C).length,infoCount:t.filter(e=>e.level===L).length})}),e}async validateFile(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=this.getFileExtension(e),s=this.getValidationsForFileType(i),a=[];for(const r of s)try{const i=await r.validate(e,n,t);i&&a.push((0,g.A)({validationId:r.id,component:r.component,level:r.level,description:r.description,filePath:e},i))}catch(o){console.error("Error running validation ".concat(r.id,":"),o),a.push({validationId:r.id,component:r.component,level:k,description:"Validation execution failed",filePath:e,message:"Validation error: ".concat(o.message),suggestion:"Contact support if this error persists"})}return a}async validateByComponent(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=this.getValidationsForComponent(e),s=[];for(const o of n)for(const e of i)try{const n=this.getFileExtension(o.path);if(!e.fileTypes.includes("*")&&!e.fileTypes.includes(n))continue;const i=await e.validate(o.path,o.content,t);i&&s.push((0,g.A)({validationId:e.id,component:e.component,level:e.level,description:e.description,filePath:o.path},i))}catch(a){console.error("Error running validation ".concat(e.id," on ").concat(o.path,":"),a),s.push({validationId:e.id,component:e.component,level:k,description:"Validation execution failed",filePath:o.path,message:"Validation error: ".concat(a.message),suggestion:"Contact support if this error persists"})}return s}getFileExtension(e){const n=e.split(".");return n.length>1?n[n.length-1].toLowerCase():""}canSave(e){return!e.some(e=>e.level===k)}formatResults(e){const n={error:0,warning:0,info:0},t={},i={};return e.forEach(e=>{n[e.level]++,t[e.component]||(t[e.component]=[]),t[e.component].push(e),i[e.filePath]||(i[e.filePath]=[]),i[e.filePath].push(e)}),{summary:n,byComponent:t,byFile:i,canSave:this.canSave(e),total:e.length}}};const D=new class{constructor(){this.registry=M,this.cache=new Map,this.cacheTimeout=3e5}async validateDAK(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const s="".concat(e,"/").concat(n,"/").concat(t);if(!i.forceRefresh&&this.cache.has(s)){const e=this.cache.get(s);if(Date.now()-e.timestamp<this.cacheTimeout)return e.results}try{const i=await this.getDAKFiles(e,n,t);if(!i||0===i.length)return{error:"Could not retrieve DAK files",summary:{error:1,warning:0,info:0},byComponent:{},byFile:{},canSave:!1,total:1};const a={owner:e,repo:n,branch:t,dakFiles:i,githubService:o.A},r=[];for(const e of i){const n=await this.registry.validateFile(e.path,e.content,a);r.push(...n)}const c=this.registry.formatResults(r);return c.metadata={owner:e,repo:n,branch:t,filesValidated:i.length,validatedAt:(new Date).toISOString(),validationFrameworkVersion:"1.0.0"},this.cache.set(s,{results:c,timestamp:Date.now()}),c}catch(a){return console.error("Error validating DAK:",a),{error:"Validation failed: ".concat(a.message),summary:{error:1,warning:0,info:0},byComponent:{},byFile:{},canSave:!1,total:1}}}async validateComponent(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!S[e])throw new Error("Unknown DAK component: ".concat(e));try{const i=(0,g.A)({component:e,dakFiles:n},t.context),s=await this.registry.validateByComponent(e,n,i);return this.registry.formatResults(s)}catch(i){return console.error("Error validating component ".concat(e,":"),i),{error:"Component validation failed: ".concat(i.message),summary:{error:1,warning:0,info:0},byComponent:{},byFile:{},canSave:!1,total:1}}}async validateFile(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const i=(0,g.A)({},t.context),s=await this.registry.validateFile(e,n,i);return this.registry.formatResults(s)}catch(i){return console.error("Error validating file ".concat(e,":"),i),{error:"File validation failed: ".concat(i.message),summary:{error:1,warning:0,info:0},byComponent:{},byFile:{},canSave:!1,total:1}}}async validateStagingGround(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{const t=e.files||[],i=(0,g.A)({stagingGround:!0,dakFiles:t},n.context),s=[];for(const e of t){const n=await this.registry.validateFile(e.path,e.content,i);s.push(...n)}const a=this.registry.formatResults(s);return a.metadata={stagingGround:!0,filesValidated:t.length,validatedAt:(new Date).toISOString(),canUpload:a.canSave},a}catch(t){return console.error("Error validating staging ground:",t),{error:"Staging ground validation failed: ".concat(t.message),summary:{error:1,warning:0,info:0},byComponent:{},byFile:{},canSave:!1,total:1}}}getValidationSummary(){return this.registry.getComponentSummary()}getValidationsForComponent(e){return this.registry.getValidationsForComponent(e)}async runValidation(e,n,t){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const s=this.registry.getValidation(e);if(!s)throw new Error("Validation not found: ".concat(e));try{const e=await s.validate(n,t,i);return e?(0,g.A)({validationId:s.id,component:s.component,level:s.level,description:s.description,filePath:n},e):null}catch(a){return console.error("Error running validation ".concat(e,":"),a),{validationId:s.id,component:s.component,level:k,description:"Validation execution failed",filePath:n,message:"Validation error: ".concat(a.message),suggestion:"Contact support if this error persists"}}}async canSaveFiles(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const t=[];for(const i of e){const e=await this.registry.validateFile(i.path,i.content,n);t.push(...e)}return this.registry.canSave(t)}async getEditorValidation(e,n,t){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const s=this.getFileExtension(e),a=this.registry.getValidationsForComponent(t),o=this.registry.getValidationsForFileType(s),r=new Set([...a,...o]),c=[];for(const d of r)try{const t=await d.validate(e,n,i);t&&c.push((0,g.A)({validationId:d.id,component:d.component,level:d.level,description:d.description,filePath:e},t))}catch(l){console.error("Error in editor validation ".concat(d.id,":"),l)}return c}async getDAKFiles(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main";try{if(!o.A.isAuth())throw new Error("GitHub authentication required");const s=await o.A.getRepositoryTree(e,n,t);if(!s||!s.tree)throw new Error("Could not retrieve repository tree");const a=s.tree.filter(e=>"blob"===e.type&&this.isRelevantFile(e.path)),r=[],c=100,l=a.slice(0,c);for(const d of l)try{const i=await o.A.getFileContent(e,n,d.path,t);i&&r.push({path:d.path,content:i,size:d.size,sha:d.sha})}catch(i){console.warn("Could not get content for ".concat(d.path,":"),i.message)}return r}catch(i){throw console.error("Error getting DAK files:",i),i}}isRelevantFile(e){if(e.startsWith(".")&&".gitignore"!==e)return!1;if(e.includes("node_modules/")||e.includes("build/")||e.includes("dist/")||e.includes(".git/"))return!1;const n=this.getFileExtension(e);return["yaml","yml","json","xml","bpmn","dmn","md","txt","fsh","feature","js","ts"].includes(n)||"sushi-config.yaml"===e||"README.md"===e}getFileExtension(e){const n=e.split(".");return n.length>1?n[n.length-1].toLowerCase():""}clearCache(){this.cache.clear()}getCacheStats(){return{size:this.cache.size,entries:Array.from(this.cache.keys())}}},I=e=>{var n;let{repository:t,profile:s,selectedBranch:o,onValidationComplete:r}=e;const{t:c}=(0,a.Bd)(),[l,d]=(0,i.useState)(!1),[m,h]=(0,i.useState)(!1),[p,g]=(0,i.useState)(null),[v,f]=(0,i.useState)("all"),[y,b]=(0,i.useState)([]),x=M.getComponentSummary(),w=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"all";if(t&&s){h(!0),f(e);try{var n;const i=(null===(n=t.owner)||void 0===n?void 0:n.login)||t.full_name.split("/")[0],s=t.name,a=o||t.default_branch||"main";let c;if("all"===e)c=await D.validateDAK(i,s,a);else{const n=(await D.getDAKFiles(i,s,a)).filter(n=>{return((t=n.path).endsWith("sushi-config.yaml")?"dak-structure":t.endsWith(".bpmn")?"business-processes":t.endsWith(".dmn")?"decision-support-logic":t.includes("questionnaire")?"core-data-elements":t.includes("measure")?"indicators":t.includes("test")||t.endsWith(".feature")?"test-scenarios":t.includes("requirement")?"requirements":"file-structure")===e;var t});c=await D.validateComponent(e,n)}g(c);const l={timestamp:Date.now(),component:e,summary:c.summary,canSave:c.canSave,totalIssues:c.total};b(e=>[l,...e.slice(0,4)]),r&&r(c)}catch(i){console.error("Validation failed:",i),g({error:"Validation failed: ".concat(i.message),summary:{error:1,warning:0,info:0},byComponent:{},byFile:{},canSave:!1,total:1})}finally{h(!1)}}else console.warn("Cannot run validation without repository and profile")},N=e=>{switch(e){case k:return"\ud83d\udeab";case C:return"\u26a0\ufe0f";case L:return"\u2139\ufe0f";default:return"\u2753"}},j=e=>{switch(e){case k:return"validation-error";case C:return"validation-warning";case L:return"validation-info";default:return"validation-unknown"}};(0,i.useEffect)(()=>{t&&s&&!m&&w("all")},[null===t||void 0===t?void 0:t.name,null===t||void 0===t||null===(n=t.owner)||void 0===n?void 0:n.login,o]);return(0,u.jsxs)("div",{className:"validation-panel",children:[(0,u.jsxs)("div",{className:"validation-panel-header",onClick:()=>d(!l),children:[(0,u.jsxs)("h2",{className:"validation-panel-title",children:["DAK Validation",p&&(0,u.jsxs)("span",{className:"validation-count",children:["(",p?p.summary.error+p.summary.warning+p.summary.info:0," issues)"]})]}),(0,u.jsx)("button",{className:"expand-button","aria-label":"Toggle validation panel",children:l?"\ud83d\udd3d":"\ud83d\udd3c"})]}),l&&(0,u.jsxs)("div",{className:"validation-panel-content",children:[(0,u.jsxs)("div",{className:"component-selector",children:[(0,u.jsx)("label",{htmlFor:"component-select",children:"Validate Component:"}),(0,u.jsxs)("select",{id:"component-select",value:v,onChange:e=>f(e.target.value),disabled:m,children:[(0,u.jsx)("option",{value:"all",children:"All Components"}),Object.entries(S).map(e=>{var n;let[t,i]=e;return(0,u.jsxs)("option",{value:t,children:[i.name," (",(null===(n=x[t])||void 0===n?void 0:n.validationCount)||0," validations)"]},t)})]}),(0,u.jsx)("button",{className:"validate-button",onClick:()=>w(v),disabled:m||!t||!s,children:m?"Validating...":"Run Validation"})]}),(null===p||void 0===p?void 0:p.error)&&(0,u.jsxs)("div",{className:"validation-error-message",children:[(0,u.jsx)("strong",{children:"Error:"})," ",p.error]}),(()=>{if(!p)return null;const{summary:e}=p,n=e.error>0||e.warning>0||e.info>0;return(0,u.jsxs)("div",{className:"validation-summary",children:[(0,u.jsxs)("div",{className:"summary-header",children:[(0,u.jsx)("h3",{children:"Validation Summary"}),(0,u.jsx)("div",{className:"save-indicator ".concat(p.canSave?"can-save":"cannot-save"),children:p.canSave?"\u2705 Can Save":"\u274c Cannot Save"})]}),n?(0,u.jsxs)("div",{className:"summary-counts",children:[e.error>0&&(0,u.jsxs)("span",{className:"summary-count summary-error",children:["\ud83d\udeab ",e.error," Errors"]}),e.warning>0&&(0,u.jsxs)("span",{className:"summary-count summary-warning",children:["\u26a0\ufe0f ",e.warning," Warnings"]}),e.info>0&&(0,u.jsxs)("span",{className:"summary-count summary-info",children:["\u2139\ufe0f ",e.info," Info"]})]}):(0,u.jsx)("div",{className:"summary-success",children:"\u2705 All validations passed!"}),p.metadata&&(0,u.jsx)("div",{className:"validation-metadata",children:(0,u.jsxs)("small",{children:[p.metadata.filesValidated," files validated",p.metadata.validatedAt&&" at ".concat(new Date(p.metadata.validatedAt).toLocaleTimeString())]})})]})})(),m&&(0,u.jsxs)("div",{className:"validation-loading",children:[(0,u.jsx)("div",{className:"loading-spinner",children:"\u23f3"}),(0,u.jsx)("span",{children:"Running validation..."})]}),!m&&p&&!p.error&&(0,u.jsxs)("div",{className:"validation-results",children:[(0,u.jsx)("h3",{children:"Validation Results"}),p&&p.byComponent?(0,u.jsx)("div",{className:"validation-results-by-component",children:Object.entries(p.byComponent).map(e=>{var n;let[t,i]=e;return(0,u.jsxs)("div",{className:"component-validation-section",children:[(0,u.jsxs)("h4",{className:"component-title",children:[(null===(n=S[t])||void 0===n?void 0:n.name)||t," (",i.length,")"]}),(0,u.jsx)("div",{className:"component-results",children:i.map((e,n)=>((e,n)=>{var t,i;return(0,u.jsxs)("div",{className:"validation-result ".concat(j(e.level)),children:[(0,u.jsxs)("div",{className:"validation-result-header",children:[(0,u.jsx)("span",{className:"validation-icon",children:N(e.level)}),(0,u.jsx)("span",{className:"validation-level",children:(i=e.level,c("validation.levels.".concat(i),i))}),(0,u.jsx)("span",{className:"validation-component",children:(null===(t=S[e.component])||void 0===t?void 0:t.name)||e.component})]}),(0,u.jsxs)("div",{className:"validation-result-content",children:[(0,u.jsx)("div",{className:"validation-message",children:e.message}),(0,u.jsx)("div",{className:"validation-file",children:e.filePath}),e.line&&(0,u.jsxs)("div",{className:"validation-location",children:["Line ",e.line,e.column&&", Column ".concat(e.column)]}),e.suggestion&&(0,u.jsxs)("div",{className:"validation-suggestion",children:[(0,u.jsx)("strong",{children:"Suggestion:"})," ",e.suggestion]})]})]},"".concat(e.validationId,"-").concat(n))})(e,n))})]},t)})}):(0,u.jsx)("div",{className:"no-results",children:"No validation results available"})]}),0===y.length?null:(0,u.jsxs)("div",{className:"validation-history",children:[(0,u.jsx)("h4",{children:"Recent Validations"}),(0,u.jsx)("div",{className:"history-list",children:y.map((e,n)=>{var t,i;return(0,u.jsxs)("div",{className:"history-entry",children:[(0,u.jsxs)("div",{className:"history-header",children:[(0,u.jsx)("span",{className:"history-component",children:"all"===e.component?"All Components":(null===(t=S[e.component])||void 0===t?void 0:t.name)||e.component}),(0,u.jsx)("span",{className:"history-time",children:(i=e.timestamp,new Date(i).toLocaleTimeString())})]}),(0,u.jsxs)("div",{className:"history-summary",children:[(0,u.jsx)("span",{className:"history-save-status ".concat(e.canSave?"can-save":"cannot-save"),children:e.canSave?"\u2705":"\u274c"}),(0,u.jsxs)("span",{className:"history-counts",children:[e.summary.error>0&&"\ud83d\udeab ".concat(e.summary.error," "),e.summary.warning>0&&"\u26a0\ufe0f ".concat(e.summary.warning," "),e.summary.info>0&&"\u2139\ufe0f ".concat(e.summary.info," "),0===e.totalIssues&&"All passed"]})]})]},"".concat(e.timestamp,"-").concat(n))})})]})]})]})};var F=t(52962),P=t(62148),T=t(13333),R=t(6735);const E=()=>{var e,n,t,l;const{t:g}=(0,a.Bd)(),v=(0,s.zy)(),f=(0,s.Zp)(),{user:y,repo:b,branch:x}=(0,s.g)(),w=(0,d.A)("sgex-mascot.png"),[N,j]=(0,i.useState)((null===(e=v.state)||void 0===e?void 0:e.profile)||null),[A,S]=(0,i.useState)((null===(n=v.state)||void 0===n?void 0:n.repository)||null),[k,C]=(0,i.useState)(!N||!A),[L,M]=(0,i.useState)(null),[D,P]=(0,i.useState)(!1),[E,V]=(0,i.useState)(!1),[_,B]=(0,i.useState)("core"),[K,H]=(0,i.useState)((null===(t=v.state)||void 0===t?void 0:t.selectedBranch)||x||null),[W,O]=(0,i.useState)({}),[q,G]=(0,i.useState)(!1),X=e=>{let{component:n,handleComponentClick:t,t:s}=e;const[a,o]=(0,i.useState)(!1),[r,c]=(0,i.useState)(!1),l=(0,d.A)(n.cardImage);return(0,u.jsxs)("div",{className:"component-card ".concat(n.type.toLowerCase()," large-card ").concat(a?"image-loaded":""),onClick:e=>t(e,n),style:{"--component-color":n.color},tabIndex:0,role:"button","aria-label":"".concat(n.name," - ").concat(n.description),onKeyDown:e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),t(e,n))},children:[(0,u.jsx)("div",{className:"component-header",children:(0,u.jsxs)("div",{className:"component-image-container",children:[(0,u.jsx)("img",{src:l,alt:(0,R.lm)(s,R.ld.ICON_DAK_COMPONENT,n.name,{name:n.name}),className:"component-card-image",onLoad:()=>{o(!0),c(!1)},onError:()=>{c(!0),o(!1)},style:{display:r?"none":"block"}}),r&&(0,u.jsx)("div",{className:"component-icon",style:{color:n.color},children:n.icon})]})}),(0,u.jsxs)("div",{className:"component-content",children:[(0,u.jsx)("h4",{className:a&&!r?"visually-hidden":"",children:n.name}),(0,u.jsx)("p",{className:a&&!r?"visually-hidden":"",children:n.description}),(0,u.jsxs)("div",{className:"component-meta",children:[(0,u.jsx)("div",{className:"file-types",children:n.fileTypes.map(e=>(0,u.jsx)("span",{className:"file-type-tag",children:e},e))}),(0,u.jsxs)("div",{className:"file-count",children:[n.count," files"]})]})]})]})};(0,i.useEffect)(()=>{(async()=>{if(N&&A||!y||!b)C(!1);else try{if(C(!0),M(null),!o.A.isAuth()){if(window.location.pathname.includes("/dashboard/")){if(!r.A.validateDemoDAKRepository(y,b))return void f("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(y,"/").concat(b,"' not found or not accessible.")}});const e={login:y,name:y.charAt(0).toUpperCase()+y.slice(1),avatar_url:"https://github.com/".concat(y,".png"),type:"User",isDemo:!0},n={name:b,full_name:"".concat(y,"/").concat(b),owner:{login:y},default_branch:x||"main",html_url:"https://github.com/".concat(y,"/").concat(b),isDemo:!0};return j(e),S(n),H(x||"main"),void C(!1)}return M(g("auth.authRequired")),void C(!1)}let n=null;try{n=await o.A.getUser(y)}catch(e){return console.error("Error fetching user:",e),void f("/",{state:{warningMessage:"Could not access the requested DAK. User '".concat(y,"' not found or not accessible.")}})}let t=null;try{t=await o.A.getRepository(y,b)}catch(e){return console.error("Error fetching repository:",e),void f("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(y,"/").concat(b,"' not found or not accessible.")}})}if(!await r.A.validateDAKRepository(y,b,x||t.default_branch))return console.log("Repository ".concat(y,"/").concat(b," is not a valid DAK repository")),void f("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(y,"/").concat(b,"' not found or not accessible.")}});if(x)try{await o.A.getBranch(y,b,x),H(x)}catch(e){console.warn("Branch '".concat(x,"' not found, falling back to default branch")),H(t.default_branch)}else H(t.default_branch);j(n),S(t),C(!1)}catch(e){console.error("Error fetching data from URL params:",e),M("Failed to load dashboard data. Please check the URL or try again."),C(!1)}})()},[y,b,x,N,A,f,g]),(0,i.useEffect)(()=>{if(A){const e=c.default.getSelectedBranch(A);if(e)H(e);else if(N&&"demo-user"===N.login){const e=A.default_branch||"main";H(e),c.default.setSelectedBranch(A,e)}}},[A,N]);(0,i.useEffect)(()=>{A&&!k&&(async()=>{if(A)try{var e;const n=(null===(e=A.owner)||void 0===e?void 0:e.login)||A.full_name.split("/")[0],t=A.name,i=(await o.A.getIssues(n,t,{state:"all",per_page:100})).filter(e=>!e.pull_request),s=i.filter(e=>"open"===e.state).length,a=i.filter(e=>"closed"===e.state).length;O({total:i.length,open:s,closed:a})}catch(n){console.warn("Could not load issue counts:",n),O({total:0,open:0,closed:0})}})()},[A,k]),(0,i.useEffect)(()=>{(async()=>{if(A&&N)try{var e;const n=await o.A.checkRepositoryWritePermissions((null===(e=A.owner)||void 0===e?void 0:e.login)||A.full_name.split("/")[0],A.name);P(n)}catch(L){console.warn("Could not check write permissions:",L),P(!1)}C(!1)})()},[A,N]),(0,i.useEffect)(()=>{const e=e=>{q&&!e.target.closest(".user-menu-container")&&G(!1)};return document.addEventListener("mousedown",e),()=>{document.removeEventListener("mousedown",e)}},[q]);const z=[{id:"health-interventions",name:g("dak.healthInterventions"),description:"Clinical guidelines and health intervention specifications that define evidence-based care recommendations",icon:"\ud83d\udcd6",cardImage:"dashboard/dak_interventions.png",type:"L2",color:"#0078d4",fileTypes:["IRIS","Publication"],count:5,editor:"Publication reference manager with IRIS integration"},{id:"generic-personas",name:g("dak.genericPersonas"),description:"Standardized user roles and actor definitions that represent different types of healthcare workers and patients",icon:"\ud83d\udc65",cardImage:"dashboard/dak_personas.png",type:"L2",color:"#107c10",fileTypes:["Actor","Role"],count:8,editor:"Persona definition editor with role-based access specifications"},{id:"user-scenarios",name:g("dak.userScenarios"),description:"Narrative descriptions of how different personas interact with the system in specific healthcare contexts",icon:"\ud83d\udcdd",cardImage:"dashboard/dak_user_scenarios.png",type:"L2",color:"#881798",fileTypes:["Narrative","Use Case"],count:12,editor:"Scenario editor with workflow visualization"},{id:"business-processes",name:g("dak.businessProcesses"),description:"BPMN workflows and business process definitions that model clinical workflows and care pathways",icon:"\ud83d\udd04",cardImage:"dashboard/dak_business_processes.png",type:"L2",color:"#d13438",fileTypes:["BPMN","XML"],count:15,editor:"Graphical BPMN editor with SVG visualization"},{id:"core-data-elements",name:g("dak.coreDataElements"),description:"Essential data structures and terminology needed for clinical data capture and exchange (includes Terminology Services via OCL and Product Master Data via PCMT)",icon:"\ud83d\uddc3\ufe0f",cardImage:"dashboard/dak_core_data_elements.png",type:"L2",color:"#ff8c00",fileTypes:["OCL","Concept","PCMT","Product"],count:W.total||89,editor:"Data element editor with OCL and PCMT integration"},{id:"decision-support",name:g("dak.decisionSupportLogic"),description:"DMN decision tables and clinical decision support rules that encode clinical logic",icon:"\ud83c\udfaf",cardImage:"dashboard/dak_decision_support_logic.png",type:"L2",color:"#00bcf2",fileTypes:["DMN","XML"],count:24,editor:"DMN decision table editor with validation"},{id:"program-indicators",name:g("dak.programIndicators"),description:"Performance indicators and measurement definitions for monitoring and evaluation",icon:"\ud83d\udcca",cardImage:"dashboard/dak_indicators.png",type:"L2",color:"#498205",fileTypes:["Measure","Logic"],count:18,editor:"Indicator definition editor with measurement logic"},{id:"functional-requirements",name:g("dak.requirements"),description:"System requirements specifications that define capabilities and constraints",icon:"\u2699\ufe0f",cardImage:"dashboard/dak_requirements.png",type:"L2",color:"#6b69d6",fileTypes:["Requirements","Specification"],count:32,editor:"Requirements editor with structured templates"},{id:"test-scenarios",name:g("dak.testScenarios")||"Test Scenarios",description:"Feature files and test scenarios for validating the DAK implementation",icon:"\ud83e\uddea",cardImage:"dashboard/dak_testing.png",type:"L2",color:"#8b5cf6",fileTypes:["Feature","Test"],count:0,editor:"Testing viewer with feature file browser"}],U=(e,n)=>{const t={profile:N,repository:A,component:n,selectedBranch:K};if("decision-support"===n.id){var i;const n=(null===(i=A.owner)||void 0===i?void 0:i.login)||A.full_name.split("/")[0],s=A.name,a=K?"/decision-support-logic/".concat(n,"/").concat(s,"/").concat(K):"/decision-support-logic/".concat(n,"/").concat(s);return void(0,T.hX)(e,a,f,t)}if("business-processes"===n.id){var s;const n=(null===(s=A.owner)||void 0===s?void 0:s.login)||A.full_name.split("/")[0],i=A.name,a=K?"/business-process-selection/".concat(n,"/").concat(i,"/").concat(K):"/business-process-selection/".concat(n,"/").concat(i);return void(0,T.hX)(e,a,f,t)}if("health-interventions"!==n.id){if("core-data-elements"===n.id){var a;const n=y||(null===(a=A.owner)||void 0===a?void 0:a.login)||A.full_name.split("/")[0],i=b||A.name,s=K,o=s?"/core-data-dictionary-viewer/".concat(n,"/").concat(i,"/").concat(s):"/core-data-dictionary-viewer/".concat(n,"/").concat(i);return void(0,T.hX)(e,o,f,t)}if("generic-personas"===n.id){var o;const n=(null===(o=A.owner)||void 0===o?void 0:o.login)||A.full_name.split("/")[0],i=A.name,s=K?"/actor-editor/".concat(n,"/").concat(i,"/").concat(K):"/actor-editor/".concat(n,"/").concat(i);return void(0,T.hX)(e,s,f,t)}if("test-scenarios"===n.id){var r;const n=(null===(r=A.owner)||void 0===r?void 0:r.login)||A.full_name.split("/")[0],i=A.name,s=K?"/testing-viewer/".concat(n,"/").concat(i,"/").concat(K):"/testing-viewer/".concat(n,"/").concat(i);return void(0,T.hX)(e,s,f,t)}D?(0,T.hX)(e,"/editor/".concat(n.id),f,t):V(!0)}else(0,T.hX)(e,"/editor/".concat(n.id),f,t)};return k?(0,u.jsx)("div",{className:"dak-dashboard loading-state",children:(0,u.jsxs)("div",{className:"loading-content",children:[(0,u.jsx)("h2",{children:"Loading Dashboard..."}),(0,u.jsx)("p",{children:"Fetching repository and user data..."})]})}):L?(0,u.jsx)("div",{className:"dak-dashboard error-state",children:(0,u.jsxs)("div",{className:"error-content",children:[(0,u.jsx)("h2",{children:g("dashboard.errorLoading")}),(0,u.jsx)("p",{children:L}),(0,u.jsxs)("div",{className:"error-actions",children:[(0,u.jsx)("button",{onClick:()=>f("/"),className:"action-btn primary",children:g("navigation.home")}),(0,u.jsx)("button",{onClick:()=>window.location.reload(),className:"action-btn secondary",children:g("common.retry")})]})]})}):N&&A?(0,u.jsxs)("div",{className:"dak-dashboard",children:[(0,u.jsx)("div",{className:"dashboard-content",children:(0,u.jsxs)("div",{className:"dashboard-main",children:[(0,u.jsxs)("div",{className:"dashboard-intro",children:[(0,u.jsx)("h2",{children:g("dak.components")}),(0,u.jsxs)("p",{children:["Select a component to edit content for ",(0,u.jsx)("strong",{children:A.name}),K&&(0,u.jsxs)("span",{children:[" on branch ",(0,u.jsx)("code",{className:"branch-display",children:K})]}),". Components are organized according to the WHO SMART Guidelines framework."]})]}),(0,u.jsx)(F.A,{profile:N,repository:A,selectedBranch:K}),A&&K&&(0,u.jsx)(h.A,{repository:A,selectedBranch:K,hasWriteAccess:D,profile:N}),(0,u.jsxs)("div",{className:"tab-navigation-fullwidth",children:[(0,u.jsxs)("button",{className:"tab-button-fullwidth ".concat("core"===_?"active":""),onClick:()=>B("core"),children:[(0,u.jsx)("span",{className:"tab-icon",children:"\u2b50"}),(0,u.jsx)("span",{className:"tab-text",children:"9 Core Components"})]}),(0,u.jsxs)("button",{className:"tab-button-fullwidth ".concat("publications"===_?"active":""),onClick:()=>B("publications"),children:[(0,u.jsx)("span",{className:"tab-icon",children:"\ud83d\udcda"}),(0,u.jsx)("span",{className:"tab-text",children:"Publications"})]}),(0,u.jsxs)("button",{className:"tab-button-fullwidth ".concat("other"===_?"active":""),onClick:()=>B("other"),children:[(0,u.jsx)("span",{className:"tab-icon",children:"\ud83d\udd27"}),(0,u.jsx)("span",{className:"tab-text",children:"Other DAK Components"})]})]}),"core"===_&&(0,u.jsxs)("div",{className:"components-section active",children:[(0,u.jsxs)("div",{className:"section-header",children:[(0,u.jsx)("h3",{className:"section-title",children:g("dak.components")}),(0,u.jsx)("p",{className:"section-description",children:"Essential components that form the foundation of any WHO SMART Guidelines Digital Adaptation Kit"})]}),(0,u.jsx)("div",{className:"components-grid core-components",children:z.map(e=>(0,u.jsx)(X,{component:e,handleComponentClick:U,t:g},e.id))})]}),"other"===_&&(0,u.jsxs)("div",{className:"components-section other-components active",children:[(0,u.jsxs)("div",{className:"section-header",children:[(0,u.jsx)("h3",{className:"section-title",children:"Other DAK Components"}),(0,u.jsx)("p",{className:"section-description",children:"Additional specialized components for advanced DAK functionality and implementation"})]}),(0,u.jsx)("div",{className:"components-grid other-components",children:(0,u.jsxs)("div",{className:"component-card l3",onClick:e=>{var n;const t=(null===(n=A.owner)||void 0===n?void 0:n.login)||A.full_name.split("/")[0],i=A.name,s=K?"/questionnaire-editor/".concat(t,"/").concat(i,"/").concat(K):"/questionnaire-editor/".concat(t,"/").concat(i),a={profile:N,repository:A,component:{id:"questionnaire-editor",name:"FHIR Questionnaires",description:"Structured questionnaires and forms for data collection using FHIR standard"},selectedBranch:K};(0,T.hX)(e,s,f,a)},style:{"--component-color":"#17a2b8"},children:[(0,u.jsx)("div",{className:"component-header",children:(0,u.jsx)("div",{className:"component-icon",style:{color:"#17a2b8"},children:"\ud83d\udccb"})}),(0,u.jsxs)("div",{className:"component-content",children:[(0,u.jsx)("h4",{children:"FHIR Questionnaires"}),(0,u.jsx)("p",{children:"Structured questionnaires and forms for data collection using FHIR Questionnaire standard"}),(0,u.jsxs)("div",{className:"component-meta",children:[(0,u.jsxs)("div",{className:"file-types",children:[(0,u.jsx)("span",{className:"file-type-tag",children:"JSON"}),(0,u.jsx)("span",{className:"file-type-tag",children:"FHIR"})]}),(0,u.jsx)("div",{className:"file-count",children:"questionnaires/"})]})]})]})})]}),"publications"===_&&(0,u.jsx)("div",{className:"components-section publications-section active",children:(0,u.jsx)(p.A,{profile:N,repository:A,selectedBranch:K,hasWriteAccess:D})}),(0,u.jsx)(I,{repository:A,profile:N,selectedBranch:K,onValidationComplete:e=>{console.log("Validation completed:",e)}})]})}),E&&(0,u.jsx)("div",{className:"permission-dialog-overlay",children:(0,u.jsxs)("div",{className:"permission-dialog",children:[(0,u.jsxs)("div",{className:"dialog-header",children:[(0,u.jsx)("h3",{children:"Edit Access Required"}),(0,u.jsx)("button",{className:"dialog-close",onClick:()=>V(!1),children:"\xd7"})]}),(0,u.jsxs)("div",{className:"dialog-content",children:[(0,u.jsxs)("div",{className:"dialog-mascot",children:[(0,u.jsx)("img",{src:w,alt:(0,R.lm)(g,R.ld.MASCOT_HELPER,"SGEX Helper"),className:"dialog-mascot-img"}),(0,u.jsxs)("div",{className:"mascot-message",children:[(0,u.jsx)("p",{children:"You need edit permissions to modify DAK components!"}),(0,u.jsx)("p",{children:"Your current token only provides read access to this repository."})]})]}),(0,u.jsxs)("div",{className:"permission-options",children:[(0,u.jsxs)("div",{className:"option-card",children:[(0,u.jsx)("h4",{children:"\ud83d\udd27 Upgrade Your Token"}),(0,u.jsx)("p",{children:"Create a new fine-grained token with write permissions for this repository."}),(0,u.jsxs)("div",{className:"option-buttons",children:[(0,u.jsx)("a",{href:"https://github.com/settings/personal-access-tokens/new",target:"_blank",rel:"noopener noreferrer",className:"btn-primary",children:"Create New Token"}),(0,u.jsx)(m,{helpTopic:"github-token",contextData:{repository:{owner:(null===(l=A.owner)||void 0===l?void 0:l.login)||A.full_name.split("/")[0],name:A.name},requiredScopes:["Contents: Write","Metadata: Read","Pull requests: Write"],permissionMode:"edit",upgradeMode:!0}})]})]}),(0,u.jsxs)("div",{className:"option-card",children:[(0,u.jsx)("h4",{children:"\ud83d\udc41\ufe0f Continue in Read-Only Mode"}),(0,u.jsx)("p",{children:"Browse and view DAK components without editing capabilities."}),(0,u.jsx)("button",{className:"btn-secondary",onClick:()=>V(!1),children:"Continue Read-Only"})]})]})]})]})})]}):(f("/"),(0,u.jsx)("div",{children:"Redirecting..."}))},V=()=>(0,u.jsx)(P.Mx,{pageName:"dak-dashboard",children:(0,u.jsx)(E,{})})}}]);
//# sourceMappingURL=781.a53fa5ff.chunk.js.map