name: PR Review Deployment

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  actions: write
  pull-requests: write

jobs:
  check-approval-and-deploy:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    
    steps:
      - name: Get PR information
        id: pr_info
        uses: actions/github-script@v8
        with:
          script: |
            const pr = context.payload.pull_request;
            const branchName = pr.head.ref;
            const baseBranch = pr.base.ref;
            
            console.log(`PR #${pr.number}: ${branchName} -> ${baseBranch}`);
            console.log(`Review state: ${context.payload.review.state}`);
            
            // Filter out branches that should not be deployed
            const excludedBranches = ['gh-pages', 'deploy'];
            if (excludedBranches.includes(branchName)) {
              console.log(`Branch ${branchName} is excluded from automatic deployment`);
              core.setOutput('should_deploy', 'false');
              core.setOutput('reason', `Branch '${branchName}' is excluded from automatic deployment`);
            } else {
              console.log(`Branch ${branchName} is eligible for deployment`);
              core.setOutput('should_deploy', 'true');
              core.setOutput('branch_name', branchName);
              core.setOutput('pr_number', pr.number);
            }
            
            return {
              shouldDeploy: excludedBranches.includes(branchName) ? false : true,
              branchName: branchName,
              prNumber: pr.number,
              baseBranch: baseBranch
            };

      - name: Comment on PR with deployment option
        if: steps.pr_info.outputs.should_deploy == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const branchName = '${{ steps.pr_info.outputs.branch_name }}';
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            const approvedAt = new Date().toISOString().replace('T', ' ').substring(0, 19) + ' UTC';
            
            // Check if deployment comment already exists
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const deploymentComment = comments.find(comment => 
              comment.body.includes('Deployment Status:') ||
              (comment.body.includes('🚀 Deploy Feature Branch') && 
               comment.body.includes(`branch: ${branchName}`))
            );
            
            // Get latest commit message for recent change summary
            const { data: commits } = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: branchName,
              per_page: 1
            });
            const commitMessage = commits.length > 0 ? commits[0].commit.message.split('\n')[0] : 'No recent commits';
            const commitSha = commits.length > 0 ? commits[0].sha.substring(0, 7) : 'unknown';
            
            const commentBody = `## 🚀 Deployment Status: Ready for Deployment ✅
            
            **🔗 Quick Actions:**
            - 🚀 [Deploy ${branchName}](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/workflows/branch-deployment.yml?branch=${encodeURIComponent(branchName)})
            - 📄 [View workflow logs](https://github.com/${context.repo.owner}/${context.repo.repo}/actions)
            
            ---
            
            ## 📝 Recent Change Summary
            **Latest commit:** \`${commitSha}\` - ${commitMessage}
            **Approved at:** ${approvedAt}
            
            ---
            
            ## 📊 Overall Progress
            **Branch:** \`${branchName}\`
            **Status:** ✅ Approved and ready for deployment
            **Preview URL (after deployment):** <a href="https://litlfred.github.io/sgex/${branchName.replace(/\//g, '-')}/" target="_blank">https://litlfred.github.io/sgex/${branchName.replace(/\//g, '-')}/</a> 📋
            
            ---
            
            💡 *Click deploy link above, then "Run workflow". Branch name will be pre-filled.*`;
            
            if (deploymentComment) {
              // Update existing deployment comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: deploymentComment.id,
                body: commentBody
              });
              console.log(`✅ Updated existing deployment comment on PR #${prNumber}`);
            } else {
              // Create new deployment comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log(`✅ Created new deployment comment on PR #${prNumber}`);
            }

      - name: Comment on excluded branch
        if: steps.pr_info.outputs.should_deploy == 'false'
        uses: actions/github-script@v8
        with:
          script: |
            const branchName = '${{ steps.pr_info.outputs.branch_name }}';
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            const reason = '${{ steps.pr_info.outputs.reason }}';
            
            const commentBody = `## ℹ️ Deployment Skipped
            
            **Branch:** \`${branchName}\` | **Reason:** ${reason}
            
            ---
            
            💡 *Branches \`gh-pages\` and \`deploy\` are excluded from feature deployments.*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
            
            console.log(`ℹ️ Posted exclusion comment on PR #${prNumber}`);