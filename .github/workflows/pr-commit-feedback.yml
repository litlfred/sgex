name: PR Commit Feedback

on:
  # Trigger on pushes to feature branches (for copilot commits and direct pushes)
  push:
    branches-ignore:
      - main
      - develop
      - gh-pages
      - deploy
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/**'
  # Additional trigger for pull request events to ensure comprehensive coverage
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]  # Only for PRs targeting main branch
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/**'

permissions:
  contents: read
  actions: read
  pull-requests: write
  deployments: write

jobs:
  check-deployment-status:
    runs-on: ubuntu-latest
    
    steps:
      - name: Get commit and PR information
        id: pr_info
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = context.ref.replace('refs/heads/', '');
            const commitSha = context.sha;
            
            // Find PR for this branch
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${branchName}`
            });
            
            const prNumber = prs.length > 0 ? prs[0].number : null;
            
            console.log(`Branch: ${branchName}, PR: ${prNumber}, Commit: ${commitSha}`);
            
            core.setOutput('pr_number', prNumber);
            core.setOutput('branch_name', branchName);
            core.setOutput('commit_sha', commitSha);
            
            return { prNumber, branchName, commitSha };

      - name: Comment on PR with workflow access and controls
        if: steps.pr_info.outputs.pr_number
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = '${{ steps.pr_info.outputs.branch_name }}';
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            const commitSha = '${{ steps.pr_info.outputs.commit_sha }}';
            const timestampUTC = new Date().toISOString().replace('T', ' ').substring(0, 19) + ' UTC';
            
            // Create direct workflow dispatch URLs with pre-filled parameters
            const branchDeploymentUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/workflows/branch-deployment.yml`;
            const landingPageDeploymentUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/workflows/landing-page-deployment.yml`;
            const workflowsListUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions`;
            
            // Create action buttons for workflow access
            const commentBody = `## 🚀 Deployment Workflows Available
            
            Manual deployment workflows are now accessible from the GitHub UI for this branch.
            
            **Branch:** \`${branchName}\`
            **Latest Commit:** \`${commitSha.substring(0, 7)}\`
            **Updated:** ${timestampUTC}
            
            ### 🎯 Quick Deploy Actions
            
            <table>
            <tr>
            <td align="center">
            <a href="${branchDeploymentUrl}" target="_blank"><img src="https://img.shields.io/badge/🌿_DEPLOY_BRANCH-4CAF50?style=for-the-badge&logo=github&logoColor=white" alt="Deploy Branch" /></a><br/>
            <sub><b>Deploy ${branchName} for preview</b></sub>
            </td>
            <td align="center">
            <a href="${landingPageDeploymentUrl}" target="_blank"><img src="https://img.shields.io/badge/🏠_DEPLOY_LANDING-2196F3?style=for-the-badge&logo=github&logoColor=white" alt="Deploy Landing Page" /></a><br/>
            <sub><b>Deploy main to landing page</b></sub>
            </td>
            </tr>
            </table>
            
            ### 📊 Workflow Status & Controls
            
            <table>
            <tr>
            <td align="center">
            <a href="${workflowsListUrl}" target="_blank"><img src="https://img.shields.io/badge/📋_ALL_WORKFLOWS-6C757D?style=for-the-badge&logo=github&logoColor=white" alt="All Workflows" /></a><br/>
            <sub><b>View all deployment workflows</b></sub>
            </td>
            <td align="center">
            <a href="${workflowsListUrl}/runs" target="_blank"><img src="https://img.shields.io/badge/📊_BUILD_HISTORY-FF9800?style=for-the-badge&logo=github&logoColor=white" alt="Build History" /></a><br/>
            <sub><b>View recent build history</b></sub>
            </td>
            </tr>
            </table>
            
            ### 📋 How to Deploy
            
            **For Branch Preview:**
            1. Click "DEPLOY BRANCH" above
            2. Click "Run workflow" button  
            3. Branch name will be pre-filled as: \`${branchName}\`
            4. Click "Run workflow" to confirm
            5. Preview will be available at: \`https://litlfred.github.io/sgex/${branchName.replace(/\//g, '-')}/\`
            
            **For Landing Page Update:**
            1. Click "DEPLOY LANDING" above
            2. Click "Run workflow" button
            3. Confirm deployment (deploys from main branch)
            4. Landing page will be updated at: \`https://litlfred.github.io/sgex/\`
            
            ### ⚡ Automatic Deployment
            
            - **Branch previews** are triggered automatically when you push commits to feature branches
            - **Landing page** deployments are manual only to prevent accidental overwrites
            - Check the "ALL WORKFLOWS" link above to monitor deployment progress
            
            ---
            
            💡 *This PR was updated with commit \`${commitSha.substring(0, 7)}\`. Deployment workflows are ready to use.*
            
            _Note: Manual workflows provide full control over when and what gets deployed._`;
            
            // Find existing workflow access comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const existingWorkflowComment = comments.find(comment => 
              comment.body.includes('Deployment Workflows Available') ||
              comment.body.includes('Manual deployment workflows are now accessible')
            );
            
            if (existingWorkflowComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingWorkflowComment.id,
                body: commentBody
              });
              console.log(`✅ Updated existing workflow access comment on PR #${prNumber}`);
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log(`✅ Created new workflow access comment on PR #${prNumber}`);
            }

      - name: Wait for deployment workflow to start
        if: steps.pr_info.outputs.pr_number
        run: |
          echo "Waiting 30 seconds for deployment workflow to start..."
          sleep 30

      - name: Check deployment workflow status
        id: workflow_status
        if: steps.pr_info.outputs.pr_number
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = '${{ steps.pr_info.outputs.branch_name }}';
            const commitSha = '${{ steps.pr_info.outputs.commit_sha }}';
            
            // Find recent workflow runs for the branch deployment workflow
            const { data: workflowRuns } = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'branch-deployment.yml',
              head_sha: commitSha,
              per_page: 5
            });
            
            console.log(`Found ${workflowRuns.total_count} workflow runs for commit ${commitSha}`);
            
            let latestRun = null;
            let needsApproval = false;
            let isCompleted = false;
            let deploymentStatus = 'unknown';
            
            if (workflowRuns.total_count > 0) {
              latestRun = workflowRuns.workflow_runs[0];
              
              console.log(`Latest run: ${latestRun.id}, Status: ${latestRun.status}, Conclusion: ${latestRun.conclusion}`);
              
              // Check if workflow needs approval
              if (latestRun.status === 'queued' && latestRun.conclusion === 'action_required') {
                needsApproval = true;
                deploymentStatus = 'approval_required';
              } else if (latestRun.status === 'completed') {
                isCompleted = true;
                if (latestRun.conclusion === 'success') {
                  deploymentStatus = 'success';
                } else if (latestRun.conclusion === 'failure') {
                  deploymentStatus = 'failure';
                } else {
                  deploymentStatus = latestRun.conclusion;
                }
              } else if (latestRun.status === 'in_progress') {
                deploymentStatus = 'running';
              }
            }
            
            core.setOutput('needs_approval', needsApproval.toString());
            core.setOutput('is_completed', isCompleted.toString());
            core.setOutput('deployment_status', deploymentStatus);
            core.setOutput('workflow_run_id', latestRun ? latestRun.id : '');
            core.setOutput('workflow_run_url', latestRun ? latestRun.html_url : '');
            
            return {
              needsApproval,
              isCompleted,
              deploymentStatus,
              workflowRunId: latestRun ? latestRun.id : null,
              workflowRunUrl: latestRun ? latestRun.html_url : null
            };

      - name: Comment on PR for build in progress
        if: steps.pr_info.outputs.pr_number && steps.workflow_status.outputs.deployment_status == 'running'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            const branchName = '${{ steps.pr_info.outputs.branch_name }}';
            const commitSha = '${{ steps.pr_info.outputs.commit_sha }}';
            const workflowRunId = '${{ steps.workflow_status.outputs.workflow_run_id }}';
            const workflowRunUrl = '${{ steps.workflow_status.outputs.workflow_run_url }}';
            const startedAt = new Date().toISOString().replace('T', ' ').substring(0, 19) + ' UTC';
            
            // Create workflow dispatch URL for restarting if needed
            const workflowDispatchUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/workflows/branch-deployment.yml?branch=${encodeURIComponent(branchName)}`;
            
            const commentBody = `## 🔄 Build In Progress
            
            A deployment build is currently running for your latest commit.
            
            **Branch:** \`${branchName}\`
            **Commit:** \`${commitSha.substring(0, 7)}\`
            **Started:** ${startedAt}
            **Status:** 🔵 Building...
            
            ### 📋 Build Progress
            
            <table>
            <tr>
            <td align="center">
            <a href="${workflowRunUrl}"><img src="https://img.shields.io/badge/📊_WATCH_BUILD-2196F3?style=for-the-badge&logo=github&logoColor=white" alt="Watch Build" /></a><br/>
            <sub><b>View live build progress</b></sub>
            </td>
            <td align="center">
            <a href="${workflowDispatchUrl}"><img src="https://img.shields.io/badge/🔄_RESTART_BUILD-FF9800?style=for-the-badge&logo=github&logoColor=white" alt="Restart Build" /></a><br/>
            <sub><b>Cancel and restart build</b></sub>
            </td>
            </tr>
            </table>
            
            ### ⏱️ What's Happening
            
            The deployment workflow is currently:
            - 🔨 Building your changes
            - 🧪 Running tests and quality checks  
            - 📦 Preparing deployment packages
            - 🚀 Getting ready to deploy to preview
            
            ### 📋 Instructions
            
            **To monitor:** Click "WATCH BUILD" above to see real-time progress and logs
            
            **To restart:** Click "RESTART BUILD" above if the build seems stuck (branch name will be pre-filled)
            
            ---
            
            💡 *This build was started automatically when you pushed commit \`${commitSha.substring(0, 7)}\`. The comment will be updated when the build completes.*
            
            _Note: Build typically takes 2-5 minutes depending on the changes. You'll get another notification when it's done._`;
            
            // Find existing deployment-related comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('Deployment Approval Required') || 
              comment.body.includes('Branch Preview Ready!') ||
              comment.body.includes('Branch Preview Failed!') ||
              comment.body.includes('Build In Progress')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              console.log(`✅ Updated existing comment on PR #${prNumber} with build progress`);
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log(`✅ Created new build progress comment on PR #${prNumber}`);
            }

      - name: Comment on PR for approval needed
        if: steps.pr_info.outputs.pr_number && steps.workflow_status.outputs.needs_approval == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            const branchName = '${{ steps.pr_info.outputs.branch_name }}';
            const commitSha = '${{ steps.pr_info.outputs.commit_sha }}';
            const workflowRunId = '${{ steps.workflow_status.outputs.workflow_run_id }}';
            const workflowRunUrl = '${{ steps.workflow_status.outputs.workflow_run_url }}';
            const createdAt = new Date().toISOString().replace('T', ' ').substring(0, 19) + ' UTC';
            
            // Create direct workflow dispatch URL with pre-filled branch name
            const approvalUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${workflowRunId}`;
            const workflowDispatchUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/workflows/branch-deployment.yml?branch=${encodeURIComponent(branchName)}`;
            
            const commentBody = `## ⏳ Deployment Approval Required
            
            A new commit has been pushed and the deployment workflow is awaiting approval.
            
            **Branch:** \`${branchName}\`
            **Commit:** \`${commitSha.substring(0, 7)}\`
            **Created:** ${createdAt}
            **Status:** 🟡 Waiting for Approval
            
            ### 🚀 Quick Actions
            
            <table>
            <tr>
            <td align="center">
            <a href="${approvalUrl}"><img src="https://img.shields.io/badge/✅_APPROVE_&_RUN-4CAF50?style=for-the-badge&logo=github&logoColor=white" alt="Approve and Run" /></a><br/>
            <sub><b>Click to approve deployment</b></sub>
            </td>
            <td align="center">
            <a href="${workflowDispatchUrl}"><img src="https://img.shields.io/badge/🔄_REDEPLOY_BRANCH-2196F3?style=for-the-badge&logo=github&logoColor=white" alt="Redeploy Branch" /></a><br/>
            <sub><b>Manual restart deployment</b></sub>
            </td>
            </tr>
            </table>
            
            ### 📋 Instructions
            
            **To approve:** Click the "APPROVE & RUN" button above, then click "Approve and run" on the workflow page.
            
            **To redeploy:** Click the "REDEPLOY BRANCH" button above, then click "Run workflow" and the branch will be pre-filled.
            
            **Alternative actions:**
            - 📄 [View Workflow Details](${workflowRunUrl}) - See full workflow information
            
            ---
            
            💡 *This notification was created automatically when your commit triggered a deployment workflow that requires approval.*
            
            _Note: Once approved, the deployment will proceed and this comment will be updated with deployment results._`;
            
            // Find existing approval/deployment comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('Deployment Approval Required') || 
              comment.body.includes('Branch Preview Ready!') ||
              comment.body.includes('Branch Preview Failed!') ||
              comment.body.includes('Build In Progress')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              console.log(`✅ Updated existing comment on PR #${prNumber} with approval request`);
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log(`✅ Created new approval comment on PR #${prNumber}`);
            }

      - name: Comment on PR for deployment status update
        if: steps.pr_info.outputs.pr_number && steps.workflow_status.outputs.is_completed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            const branchName = '${{ steps.pr_info.outputs.branch_name }}';
            const commitSha = '${{ steps.pr_info.outputs.commit_sha }}';
            const deploymentStatus = '${{ steps.workflow_status.outputs.deployment_status }}';
            const workflowRunUrl = '${{ steps.workflow_status.outputs.workflow_run_url }}';
            const completedAt = new Date().toISOString().replace('T', ' ').substring(0, 19) + ' UTC';
            
            let statusIcon, statusText, statusColor;
            
            if (deploymentStatus === 'success') {
              statusIcon = '✅';
              statusText = '🟢 Successfully Deployed';
              statusColor = 'success';
            } else if (deploymentStatus === 'failure') {
              statusIcon = '❌';
              statusText = '🔴 Deployment Failed';
              statusColor = 'failure';
            } else {
              statusIcon = '⚠️';
              statusText = `🟡 ${deploymentStatus}`;
              statusColor = 'warning';
            }
            
            // Calculate deployment URLs
            const safeBranchName = branchName.replace(/[^a-zA-Z0-9]/g, '-');
            const branchTargetName = `sgex-preview-${safeBranchName}`;
            const mainTargetName = 'sgex-main-app';
            const branchUrl = `https://litlfred.github.io/sgex/${branchName === 'main' ? 'main' : safeBranchName}/`;
            const mainAppUrl = 'https://litlfred.github.io/sgex/main/';
            const workflowDispatchUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/workflows/branch-deployment.yml?branch=${encodeURIComponent(branchName)}`;
            
            let commentBody;
            
            if (deploymentStatus === 'success') {
              commentBody = `## ${statusIcon} Branch Preview Ready!
              
              **Branch:** \`${branchName}\`
              **Status:** ${statusText}
              **Commit:** \`${commitSha.substring(0, 7)}\`
              **Deployed:** ${completedAt}
              
              ### 🌐 Preview URLs
              
              <table>
              <tr>
              <td align="center">
              <a href="${branchUrl}" target="_blank"><img src="https://img.shields.io/badge/🌐_BRANCH_PREVIEW-4CAF50?style=for-the-badge&logo=github&logoColor=white" alt="Branch Preview" /></a><br/>
              <sub><b>Open branch preview</b></sub>
              </td>
              <td align="center">
              <a href="${mainAppUrl}" target="_blank"><img src="https://img.shields.io/badge/🏠_MAIN_APP-2196F3?style=for-the-badge&logo=github&logoColor=white" alt="Main App" /></a><br/>
              <sub><b>Open main application</b></sub>
              </td>
              </tr>
              </table>
              
              ### 🔄 Deployment Actions
              
              <table>
              <tr>
              <td align="center">
              <a href="${workflowDispatchUrl}"><img src="https://img.shields.io/badge/🚀_REDEPLOY_BRANCH-FF9800?style=for-the-badge&logo=github&logoColor=white" alt="Redeploy Branch" /></a><br/>
              <sub><b>Redeploy this branch</b></sub>
              </td>
              <td align="center">
              <a href="${workflowRunUrl}"><img src="https://img.shields.io/badge/📄_BUILD_LOGS-6C757D?style=for-the-badge&logo=github&logoColor=white" alt="Build Logs" /></a><br/>
              <sub><b>View deployment details</b></sub>
              </td>
              </tr>
              </table>
              
              ### 📋 Instructions
              **To redeploy:** Click "REDEPLOY BRANCH" above, then click "Run workflow" (branch name will be pre-filled)
              
              ---
              💡 *This branch preview was deployed successfully and will remain until the next deployment.*
              
              _Note: This deployment only updates the branch subdirectory and does not affect the landing page._`;
            } else {
              commentBody = `## ${statusIcon} Branch Preview Failed!
              
              **Branch:** \`${branchName}\`
              **Status:** ${statusText}
              **Commit:** \`${commitSha.substring(0, 7)}\`
              **Failed:** ${completedAt}
              
              ### 🔍 Troubleshooting Actions
              
              <table>
              <tr>
              <td align="center">
              <a href="${workflowRunUrl}"><img src="https://img.shields.io/badge/📄_CHECK_LOGS-DC3545?style=for-the-badge&logo=github&logoColor=white" alt="Check Logs" /></a><br/>
              <sub><b>View error details</b></sub>
              </td>
              <td align="center">
              <a href="${workflowDispatchUrl}"><img src="https://img.shields.io/badge/🔄_RETRY_BUILD-FF9800?style=for-the-badge&logo=github&logoColor=white" alt="Retry Build" /></a><br/>
              <sub><b>Restart deployment</b></sub>
              </td>
              </tr>
              </table>
              
              ### 💡 Common Issues
              - Build errors in code changes
              - Missing dependencies or npm install issues
              - GitHub Pages deployment limits
              - Network connectivity issues
              
              ### 📋 Instructions
              **To retry:** Click "RETRY BUILD" above, then click "Run workflow" (branch name will be pre-filled)
              
              ---
              ❗ *Please check the build logs above and fix any issues before restarting the deployment.*
              
              _Note: The previous deployment (if any) remains active until this branch is successfully deployed._`;
            }
            
            // Find existing deployment comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('Deployment Approval Required') ||
              comment.body.includes('Branch Preview Ready!') || 
              comment.body.includes('Branch Preview Failed!') ||
              comment.body.includes('Build In Progress')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              console.log(`✅ Updated existing comment on PR #${prNumber} with deployment status`);
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log(`✅ Created new deployment status comment on PR #${prNumber}`);
            }

      - name: Update deployment status for PR
        if: steps.pr_info.outputs.pr_number
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = '${{ steps.pr_info.outputs.branch_name }}';
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            const commitSha = '${{ steps.pr_info.outputs.commit_sha }}';
            const deploymentStatus = '${{ steps.workflow_status.outputs.deployment_status }}';
            
            // Calculate deployment URL
            const safeBranchName = branchName.replace(/[^a-zA-Z0-9]/g, '-');
            const deploymentUrl = `https://litlfred.github.io/sgex/${branchName === 'main' ? 'main' : safeBranchName}/`;
            
            console.log(`Creating deployment status for branch: ${branchName}, status: ${deploymentStatus}`);
            
            try {
              // Create or update deployment for this branch
              const { data: deployment } = await github.rest.repos.createDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: commitSha,
                environment: `branch-preview-${safeBranchName}`,
                description: `Branch preview deployment for ${branchName}`,
                auto_merge: false,
                required_contexts: []
              });
              
              console.log(`Created deployment ${deployment.id} for ${branchName}`);
              
              // Set deployment status based on workflow result
              let state = 'pending';
              let description = 'Deployment in progress';
              
              if (deploymentStatus === 'success') {
                state = 'success';
                description = 'Branch preview deployed successfully';
              } else if (deploymentStatus === 'failure') {
                state = 'failure';
                description = 'Branch preview deployment failed';
              } else if (deploymentStatus === 'running') {
                state = 'in_progress';
                description = 'Branch preview deployment in progress';
              }
              
              // Update deployment status
              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
                state: state,
                description: description,
                environment_url: deploymentStatus === 'success' ? deploymentUrl : undefined,
                log_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${{ github.run_id }}`
              });
              
              console.log(`Updated deployment status to: ${state}`);
              
            } catch (error) {
              console.error('Error creating/updating deployment:', error);
              // Don't fail the workflow if deployment status update fails
            }