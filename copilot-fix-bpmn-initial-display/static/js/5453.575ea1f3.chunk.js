"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[5453],{55453:(e,n,o)=>{o.r(n),o.d(n,{default:()=>v});var i=o(9950),t=o(69396),l=o(46901),s=o(88498);const r=()=>{var e,n,o;const r=(0,t.zy)(),a=(0,t.Zp)(),{user:d,repo:c,branch:u}=(0,t.g)(),[m,v]=(0,i.useState)((null===(e=r.state)||void 0===e?void 0:e.profile)||null),[p,h]=(0,i.useState)((null===(n=r.state)||void 0===n?void 0:n.repository)||null),[g,w]=(0,i.useState)((null===(o=r.state)||void 0===o?void 0:o.selectedBranch)||u||null),[b,f]=(0,i.useState)(!m||!p),[P,y]=(0,i.useState)(null);return(0,i.useEffect)(()=>{(async()=>{var e,n,o,i,t;if(console.log("\ud83d\udd0d useDAKUrlParams: Starting data fetch analysis:",{urlParams:{user:d,repo:c,branch:u},currentState:{hasProfile:!!m,hasRepository:!!p,profileLogin:null===m||void 0===m?void 0:m.login,repositoryFullName:null===p||void 0===p?void 0:p.full_name,repositoryOwner:null===p||void 0===p||null===(e=p.owner)||void 0===e?void 0:e.login},hasLocationState:!!r.state,locationStateSummary:r.state?{hasProfile:!!r.state.profile,hasRepository:!!r.state.repository,profileLogin:null===(n=r.state.profile)||void 0===n?void 0:n.login,repositoryFullName:null===(o=r.state.repository)||void 0===o?void 0:o.full_name,repositoryOwner:null===(i=r.state.repository)||void 0===i||null===(t=i.owner)||void 0===t?void 0:t.login}:null,isAuthenticated:l.A.isAuth(),needsFetch:(!m||!p)&&d&&c}),m&&p||!d||!c)console.log("\ud83d\udccb useDAKUrlParams: Not fetching from URL params, using existing state:",{hasProfile:!!m,hasRepository:!!p,hasUserParam:!!d,hasRepoParam:!!c,reason:m&&p?"state already populated":"missing URL params"}),f(!1);else{console.log("useDAKUrlParams: Fetching data from URL parameters:",{user:d,repo:c,branch:u,hasProfile:!!m,hasRepository:!!p,hasLocationState:!!r.state,isAuthenticated:l.A.isAuth()});try{if(f(!0),y(null),!l.A.isAuth()){console.log("\ud83d\udeab useDAKUrlParams: Not authenticated, using public access"),console.log("\ud83d\udc40 useDAKUrlParams: Unauthenticated public access, creating public profile");const e={login:d,name:d.charAt(0).toUpperCase()+d.slice(1),avatar_url:"https://github.com/".concat(d,".png"),type:"User"},n={name:c,full_name:"".concat(d,"/").concat(c),owner:{login:d},default_branch:u||"main",html_url:"https://github.com/".concat(d,"/").concat(c)};return console.log("\ud83d\udccb useDAKUrlParams: Setting public access state:",{profile:e,repository:n,selectedBranch:u||"main"}),v(e),h(n),w(u||"main"),void f(!1)}console.log("\ud83d\udd10 useDAKUrlParams: Authenticated, fetching real repository data");let e=null;try{console.log("\ud83d\udd0d useDAKUrlParams: Fetching user profile for: ".concat(d));e=await l.A.getUser(d),console.log("\u2705 useDAKUrlParams: User profile fetched:",{login:e.login,name:e.name,type:e.type})}catch(g){return console.error("\u274c useDAKUrlParams: Error fetching user:",g),void a("/",{state:{warningMessage:"Could not access the requested DAK. User '".concat(d,"' not found or not accessible.")}})}let n=null;try{console.log("useDAKUrlParams: Fetching repository data for ".concat(d,"/").concat(c));n=await l.A.getRepository(d,c),console.log("useDAKUrlParams: Repository data fetched successfully:",{name:n.name,full_name:n.full_name,owner:n.owner,default_branch:n.default_branch})}catch(g){return console.error("useDAKUrlParams: Error fetching repository:",g),void a("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(d,"/").concat(c,"' not found or not accessible.")}})}if(!await s.A.validateDAKRepository(d,c,u||n.default_branch))return console.log("Repository ".concat(d,"/").concat(c," is not a valid DAK repository")),void a("/",{state:{warningMessage:"Could not access the requested DAK. Repository '".concat(d,"/").concat(c,"' not found or not accessible.")}});if(u)try{await l.A.getBranch(d,c,u),w(u)}catch(g){console.warn("Branch '".concat(u,"' not found, falling back to default branch")),w(n.default_branch)}else w(n.default_branch);console.log("useDAKUrlParams: Setting final state:",{profile:{login:e.login,name:e.name,type:e.type},repository:{name:n.name,full_name:n.full_name,owner:n.owner,default_branch:n.default_branch},selectedBranch:u||n.default_branch}),v(e),h(n),f(!1)}catch(g){console.error("Error fetching data from URL params:",g),y("Failed to load DAK data. Please check the URL or try again."),f(!1)}}})()},[d,c,u,m,p,a,r.state]),{profile:m,repository:p,selectedBranch:g,loading:b,error:P,user:d,repo:c,branch:u||g,navigate:a}};var a=o(53782),d=o(1932),c=o(96143),u=o(44414);const m=e=>{let{file:n,repository:o,selectedBranch:t,profile:s}=e;const r=(0,i.useRef)(null),a=(0,i.useRef)(null),[d,m]=(0,i.useState)(!0),[v,p]=(0,i.useState)(null);return(0,i.useEffect)(()=>(n&&o?(console.log("\ud83d\ude80 BPMNPreview: Starting loadPreview for:",n.name),(async()=>{if(!n||!o)return void console.log("\ud83d\udeab BPMNPreview: Missing required props:",{hasFile:!!n,hasRepository:!!o,fileName:null===n||void 0===n?void 0:n.name});const e=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;r.current?(console.log("\u2705 BPMNPreview: Container found on attempt ".concat(n+1)),i()):n<20?(console.log("\u23f3 BPMNPreview: Container not ready, attempt ".concat(n+1,"/").concat(20)),setTimeout(()=>e(n+1),100)):(console.error("\u274c BPMNPreview: Container never became available"),p("Failed to initialize preview container"),m(!1))},i=async()=>{try{var e,i,s,d;m(!0),p(null),r.current&&(r.current.innerHTML="");const D=(null===(e=o.owner)||void 0===e?void 0:e.login)||o.full_name.split("/")[0],j=o.name,R=t||"main",L=(null===(i=n.path)||void 0===i?void 0:i.includes("demo/"))||(null===(s=n.sha)||void 0===s?void 0:s.startsWith("demo-"));let U;if(console.log("\ud83c\udfac BPMNPreview: Starting preview load for file:",{fileName:n.name,filePath:n.path,owner:D,repoName:j,ref:R,isDemo:L,hasDownloadUrl:!!n.download_url}),L){const e=n.name.replace(".bpmn","").replace(/[-_]/g," ");U='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(e,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}else{console.log("\ud83d\udce5 BPMNPreview: Attempting to load real BPMN file content...");try{var u,v;if(console.log("\ud83c\udf10 BPMNPreview: Calling githubService.getFileContent with params:",{owner:D,repoName:j,path:n.path,ref:R}),U=await l.A.getFileContent(D,j,n.path,R),console.log("\u2705 BPMNPreview: Successfully loaded BPMN content, length:",null===(u=U)||void 0===u?void 0:u.length),console.log("\ud83d\udd0d BPMNPreview: Content preview (first 100 chars):",null===(v=U)||void 0===v?void 0:v.substring(0,100)),!U||"string"!==typeof U)throw new Error("Invalid content received: not a string");if(!U.includes("bpmn:definitions")&&!U.includes("<definitions"))throw console.warn("\u26a0\ufe0f BPMNPreview: Content does not appear to be valid BPMN XML"),console.log("\ud83d\udd0d BPMNPreview: Full content received:",U),new Error("Content does not appear to be valid BPMN");console.log("\u2705 BPMNPreview: BPMN content validation passed")}catch(C){console.warn("\u274c BPMNPreview: Could not load BPMN file content:",C.message,C.status),console.error("\ud83d\udd0d BPMNPreview: File loading error details:",{error:C,stack:C.stack,fileName:n.name,filePath:n.path,owner:D,repoName:j,ref:R});const e=n.name.replace(".bpmn","").replace(/[-_]/g," ");console.log("\ud83d\udd04 BPMNPreview: Using fallback BPMN diagram for:",e),U='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(e,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(n.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}}console.log("\ud83d\udd27 BPMNPreview: Creating BPMN viewer..."),console.log("\ud83d\udd0d BPMNPreview: About to create viewer with BPMN content length:",null===(d=U)||void 0===d?void 0:d.length);const z=await(0,c._Q)();a.current=z,console.log("\u2705 BPMNPreview: BPMN viewer instance created successfully");try{var h,g,w,b,f,P,y,N,B,M;console.log("\ud83d\udd17 BPMNPreview: Attaching viewer to container..."),console.log("\ud83d\udd0d BPMNPreview: Container element details:",{exists:!!r.current,className:null===(h=r.current)||void 0===h?void 0:h.className,width:null===(g=r.current)||void 0===g?void 0:g.offsetWidth,height:null===(w=r.current)||void 0===w?void 0:w.offsetHeight,parentExists:!(null===(b=r.current)||void 0===b||!b.parentElement)});const e=function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;return new Promise((o,i)=>{setTimeout(()=>{i(new Error("".concat(e," timeout after ").concat(n,"ms")))},n)})},o=z.attachTo(r.current);await Promise.race([o,e("Viewer attach",5e3)]),console.log("\u2705 BPMNPreview: Successfully attached viewer to container"),console.log("\ud83d\udcca BPMNPreview: Importing BPMN XML..."),console.log("\ud83d\udd0d BPMNPreview: XML content preview (first 200 chars):",null===(f=U)||void 0===f?void 0:f.substring(0,200));const i=Date.now(),t=z.importXML(U),l=await Promise.race([t,e("XML import",15e3)]),s=Date.now()-i;console.log("\u2705 BPMNPreview: Successfully imported BPMN XML in ".concat(s,"ms")),console.log("\ud83d\udcca BPMNPreview: Import result details:",{warnings:(null===l||void 0===l||null===(P=l.warnings)||void 0===P?void 0:P.length)||0,hasWarnings:!(null===l||void 0===l||null===(y=l.warnings)||void 0===y||!y.length),warningDetails:null===l||void 0===l?void 0:l.warnings}),(null===l||void 0===l||null===(N=l.warnings)||void 0===N?void 0:N.length)>0&&console.warn("\u26a0\ufe0f BPMNPreview: Import warnings:",l.warnings),console.log("\ud83c\udfaf BPMNPreview: Fitting to viewport...");const a=z.get("canvas");console.log("\ud83d\udd0d BPMNPreview: Canvas service retrieved:",!!a);const d=null===(B=r.current)||void 0===B?void 0:B.querySelector("svg");console.log("\ud83d\udcd0 BPMNPreview: SVG state BEFORE zoom:",{exists:!!d,width:null===d||void 0===d?void 0:d.getAttribute("width"),height:null===d||void 0===d?void 0:d.getAttribute("height"),viewBox:null===d||void 0===d?void 0:d.getAttribute("viewBox"),style:{display:null===d||void 0===d?void 0:d.style.display,visibility:null===d||void 0===d?void 0:d.style.visibility,opacity:null===d||void 0===d?void 0:d.style.opacity,width:null===d||void 0===d?void 0:d.style.width,height:null===d||void 0===d?void 0:d.style.height},computedStyle:d?{display:window.getComputedStyle(d).display,visibility:window.getComputedStyle(d).visibility,opacity:window.getComputedStyle(d).opacity}:null,childCount:(null===d||void 0===d||null===(M=d.children)||void 0===M?void 0:M.length)||0});const c=e=>{if(!e)return!1;const n=e.getBoundingClientRect(),o=n.width||e.offsetWidth,i=n.height||e.offsetHeight,t=window.getComputedStyle(e);return console.log("[BPMN Preview] Container dimensions check:",{offsetWidth:e.offsetWidth,offsetHeight:e.offsetHeight,clientWidth:e.clientWidth,clientHeight:e.clientHeight,"boundingRect.width":n.width,"boundingRect.height":n.height,"computedStyle.width":t.width,"computedStyle.height":t.height,hasValidDimensions:o>0&&i>0}),o>0&&i>0},u=function(e,n){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:50,i=0;const t=()=>{c(e)?(console.log("[BPMN Preview] Valid dimensions found after ".concat(i," RAF cycles")),n()):i<o?(i++,requestAnimationFrame(t)):(console.warn("[BPMN Preview] WARNING: Gave up waiting for valid container dimensions after",o,"attempts"),n())};requestAnimationFrame(t)},v=()=>{const e=r.current,n=null===e||void 0===e?void 0:e.querySelector("svg"),o=null===n||void 0===n?void 0:n.querySelector(".viewport"),i=null===o||void 0===o?void 0:o.getAttribute("transform"),t=a.viewbox();console.log("[BPMN Preview] Viewport transform before zoom:",i||"none"),console.log("[BPMN Preview] Pre-zoom state:",{"viewbox.outer":null===t||void 0===t?void 0:t.outer,"viewbox.scale":null===t||void 0===t?void 0:t.scale});try{a.zoom("fit-viewport"),console.log("\u2705 BPMNPreview: Zoom to fit-viewport completed"),requestAnimationFrame(()=>{var e,n,i,t,l;const s=null===o||void 0===o?void 0:o.getAttribute("transform"),d=a.viewbox(),c=null===(e=r.current)||void 0===e?void 0:e.querySelector("svg");if(console.log("[BPMN Preview] Viewport transform after zoom:",s||"none"),console.log("\ud83d\udcd0 BPMNPreview: Viewport state AFTER zoom:",{viewbox:d,outer:null===d||void 0===d?void 0:d.outer,inner:null===d||void 0===d?void 0:d.inner,scale:null===d||void 0===d?void 0:d.scale,containerDimensions:{width:null===(n=r.current)||void 0===n?void 0:n.offsetWidth,height:null===(i=r.current)||void 0===i?void 0:i.offsetHeight,clientWidth:null===(t=r.current)||void 0===t?void 0:t.clientWidth,clientHeight:null===(l=r.current)||void 0===l?void 0:l.clientHeight},svgAttributes:{width:null===c||void 0===c?void 0:c.getAttribute("width"),height:null===c||void 0===c?void 0:c.getAttribute("height"),viewBox:null===c||void 0===c?void 0:c.getAttribute("viewBox"),transform:null===c||void 0===c?void 0:c.getAttribute("transform")},svgStyles:{display:null===c||void 0===c?void 0:c.style.display,visibility:null===c||void 0===c?void 0:c.style.visibility,opacity:null===c||void 0===c?void 0:c.style.opacity,backgroundColor:null===c||void 0===c?void 0:c.style.backgroundColor},svgComputedStyles:c?{display:window.getComputedStyle(c).display,visibility:window.getComputedStyle(c).visibility,opacity:window.getComputedStyle(c).opacity,backgroundColor:window.getComputedStyle(c).backgroundColor}:null}),s&&s.includes("matrix(0 0 0 0 0 0)")){console.log("[BPMN Preview] WARNING: Viewport transform is all zeros after zoom!");try{const e=d.outer;e&&e.width>0&&e.height>0&&(console.log("[BPMN Preview] Attempting manual viewbox recovery"),a.viewbox({x:0,y:0,width:e.width,height:e.height}),console.log("[BPMN Preview] Manual viewbox recovery completed"))}catch(u){console.log("[BPMN Preview] Manual viewbox recovery failed:",u)}}c&&(c.style.opacity="1",c.style.visibility="visible",c.style.display="block")})}catch(l){console.error("\u274c BPMNPreview: Zoom failed:",l)}},p=()=>{if(z&&r.current)try{const e=z.get("canvas");e.viewbox();const n=e.zoom();e.zoom(n);const o=r.current.querySelector("svg");o&&(o.style.opacity="1",o.style.visibility="visible",o.style.display="block"),console.log("\ud83c\udfa8 BPMNPreview: Forced canvas update",{zoom:n,svgVisible:null===o||void 0===o?void 0:o.style.visibility,svgOpacity:null===o||void 0===o?void 0:o.style.opacity})}catch(e){console.warn("\u26a0\ufe0f BPMNPreview: Could not force canvas update:",e)}};requestAnimationFrame(()=>{console.log("[BPMN Preview] First RAF callback: layout should be painted");const e=r.current;c(e)?(console.log("[BPMN Preview] Container dimensions valid, proceeding with callback"),requestAnimationFrame(()=>{console.log("[BPMN Preview] Second RAF callback: executing zoom"),v()})):(console.log("[BPMN Preview] Container dimensions not ready, waiting..."),u(e,()=>{console.log("[BPMN Preview] Container ready, proceeding with zoom"),requestAnimationFrame(v)}))});const _=e=>{let n=Math.ceil(e/16);const o=()=>{n>0?(n--,requestAnimationFrame(o)):p()};requestAnimationFrame(o)};_(100),_(200),_(400),console.log("\u2705 BPMNPreview: Initiated viewport fitting sequence"),setTimeout(()=>{var e,n,o,i,t,l,s,d,c,u,m,v,p,h,g,w,b;const f=a.viewbox(),P=null===(e=r.current)||void 0===e?void 0:e.querySelector("svg"),y=(null===P||void 0===P?void 0:P.querySelectorAll("g"))||[],N=(null===P||void 0===P?void 0:P.querySelectorAll("[data-element-id]"))||[];console.log("\ud83d\udd0d BPMNPreview: Final rendering state:",{viewbox:{outer:null===f||void 0===f?void 0:f.outer,inner:null===f||void 0===f?void 0:f.inner,scale:null===f||void 0===f?void 0:f.scale},svg:{exists:!!P,width:null===P||void 0===P?void 0:P.getAttribute("width"),height:null===P||void 0===P?void 0:P.getAttribute("height"),viewBox:null===P||void 0===P?void 0:P.getAttribute("viewBox"),childCount:(null===P||void 0===P||null===(n=P.children)||void 0===n?void 0:n.length)||0,gElementCount:y.length,shapeElementCount:N.length,style:{display:null===P||void 0===P?void 0:P.style.display,visibility:null===P||void 0===P?void 0:P.style.visibility,opacity:null===P||void 0===P?void 0:P.style.opacity},computedStyle:P?{display:window.getComputedStyle(P).display,visibility:window.getComputedStyle(P).visibility,opacity:window.getComputedStyle(P).opacity,backgroundColor:window.getComputedStyle(P).backgroundColor,fill:window.getComputedStyle(P).fill}:null},container:{hasChildren:(null===(o=r.current)||void 0===o||null===(i=o.children)||void 0===i?void 0:i.length)||0,dimensions:{offsetWidth:null===(t=r.current)||void 0===t?void 0:t.offsetWidth,offsetHeight:null===(l=r.current)||void 0===l?void 0:l.offsetHeight,scrollWidth:null===(s=r.current)||void 0===s?void 0:s.scrollWidth,scrollHeight:null===(d=r.current)||void 0===d?void 0:d.scrollHeight},style:{display:null===(c=r.current)||void 0===c?void 0:c.style.display,visibility:null===(u=r.current)||void 0===u?void 0:u.style.visibility,backgroundColor:null===(m=r.current)||void 0===m?void 0:m.style.backgroundColor},computedStyle:r.current?{display:window.getComputedStyle(r.current).display,visibility:window.getComputedStyle(r.current).visibility,backgroundColor:window.getComputedStyle(r.current).backgroundColor}:null},hasElements:(null===f||void 0===f||null===(v=f.inner)||void 0===v?void 0:v.width)>0&&(null===f||void 0===f||null===(p=f.inner)||void 0===p?void 0:p.height)>0,containerHasContent:(null===(h=r.current)||void 0===h||null===(g=h.children)||void 0===g?void 0:g.length)>0}),0===(null===(w=r.current)||void 0===w||null===(b=w.children)||void 0===b?void 0:b.length)?console.error("\u274c BPMNPreview: Container is EMPTY after rendering - CRITICAL ISSUE"):P?0===N.length?console.warn("\u26a0\ufe0f BPMNPreview: SVG exists but has no BPMN shape elements - possible rendering issue"):console.log("\u2705 BPMNPreview: Diagram appears to be properly rendered with ".concat(N.length," shapes")):console.error("\u274c BPMNPreview: No SVG element found after rendering - CRITICAL ISSUE")},500),console.log("\ud83c\udf89 BPMNPreview: Successfully rendered preview for: ".concat(n.name)),m(!1)}catch(k){var _,x,S,E,A,F;console.error("\u274c BPMNPreview: Failed to import BPMN XML:",k),console.error("\ud83d\udd0d BPMNPreview: Import error details:",{message:k.message,stack:k.stack,fileName:n.name,xmlLength:null===(_=U)||void 0===_?void 0:_.length,xmlPreview:null===(x=U)||void 0===x?void 0:x.substring(0,300),containerState:{exists:!!r.current,hasChildren:(null===(S=r.current)||void 0===S||null===(E=S.children)||void 0===E?void 0:E.length)||0,clientHeight:null===(A=r.current)||void 0===A?void 0:A.clientHeight,clientWidth:null===(F=r.current)||void 0===F?void 0:F.clientWidth}}),p("Failed to load preview: ".concat(k.message)),m(!1)}}catch(D){console.error("\u274c BPMNPreview: Failed to render BPMN preview:",D.message||D),console.log("\ud83d\udd0d BPMNPreview: Error details:",{fileName:n.name,filePath:n.path,errorMessage:D.message,errorStack:D.stack}),p("Failed to load preview"),m(!1)}};e()})()):(console.log("\u23ed\ufe0f BPMNPreview: Skipping loadPreview, missing props:",{hasFile:!!n,hasRepository:!!o,fileName:null===n||void 0===n?void 0:n.name}),m(!1)),()=>{if(a.current){try{a.current.destroy()}catch(e){console.warn("Error cleaning up BPMN viewer:",e)}a.current=null}}),[n,o,t,s]),(0,u.jsxs)("div",{className:"bpmn-preview",children:[d&&(0,u.jsxs)("div",{className:"preview-loading",children:[(0,u.jsx)("div",{className:"preview-spinner"}),(0,u.jsx)("span",{children:"Loading preview..."})]}),v&&(0,u.jsx)("div",{className:"preview-error",children:(0,u.jsxs)("span",{children:["\u274c ",v]})}),(0,u.jsx)("div",{className:"preview-container",ref:r,style:{display:d||v?"none":"block"}})]})},v=()=>{var e;const n=(0,t.zy)(),o=(0,t.Zp)(),{profile:s,repository:c,selectedBranch:v,loading:p,error:h}=r();console.log("\ud83d\ude80 BusinessProcessSelection: Hook data received:",{hasProfile:!!s,hasRepository:!!c,profileLogin:null===s||void 0===s?void 0:s.login,repositoryName:null===c||void 0===c?void 0:c.name,repositoryFullName:null===c||void 0===c?void 0:c.full_name,repositoryOwner:null===c||void 0===c||null===(e=c.owner)||void 0===e?void 0:e.login,selectedBranch:v,dakLoading:p,dakError:h});const{component:g}=n.state||{},[w,b]=(0,i.useState)([]),[f,P]=(0,i.useState)(!0),[y,N]=(0,i.useState)(null),[B,M]=(0,i.useState)(!1);(0,i.useEffect)(()=>{(async()=>{if(c&&s)try{var e;const n=s.token&&(null===(e=c.permissions)||void 0===e?void 0:e.push);M(n||!1)}catch(y){console.warn("Could not check write permissions:",y),M(!1)}})()},[c,s]),(0,i.useEffect)(()=>{(async()=>{if(c)try{var e,n,i,t;P(!0),N(null),console.log("\ud83d\udcc2 BusinessProcessSelection - Repository object analysis:",{name:c.name,full_name:c.full_name,owner:c.owner,ownerLogin:null===(e=c.owner)||void 0===e?void 0:e.login,isDemo:c.isDemo,html_url:c.html_url,default_branch:c.default_branch}),console.log("\ud83d\udc64 BusinessProcessSelection - Profile object analysis:",{login:null===s||void 0===s?void 0:s.login,name:null===s||void 0===s?void 0:s.name,isDemo:null===s||void 0===s?void 0:s.isDemo,type:null===s||void 0===s?void 0:s.type});const o=(null===(n=c.owner)||void 0===n?void 0:n.login)||c.full_name.split("/")[0],r=c.name,a=v||"main";console.log("\ud83d\udccb BusinessProcessSelection: Derived repository info:",{original_owner_login:null===(i=c.owner)||void 0===i?void 0:i.login,original_full_name:c.full_name,derived_owner:o,derived_repoName:r,selected_ref:a,derivation_method:null!==(t=c.owner)&&void 0!==t&&t.login?"owner.login":"full_name.split"}),console.log("\ud83d\udd0d BusinessProcessSelection: About to fetch BPMN files from ".concat(o,"/").concat(r," (branch: ").concat(a,")")),console.log("BusinessProcessSelection: Final repository access details:",{derivedOwner:o,repositoryName:r,ref:a,fullRepositoryData:{name:c.name,full_name:c.full_name,owner:c.owner,default_branch:c.default_branch}});const d=await l.A.getBpmnFiles(o,r,a);if(console.log("\ud83d\udcca BusinessProcessSelection: Received BPMN files:",{count:d.length,files:d.map(e=>{var n;return{name:e.name,path:e.path,size:e.size,hasDownloadUrl:!!e.download_url,sha:null===(n=e.sha)||void 0===n?void 0:n.substring(0,8)}})}),0===d.length&&null!==s&&void 0!==s&&s.isDemo){console.log("No BPMN files found in demo mode, providing fallback demo files");b([{name:"patient-registration.bpmn",path:"demo/business-processes/patient-registration.bpmn",sha:"demo-sha-1",size:2048,download_url:"#",html_url:"#"},{name:"vaccination-workflow.bpmn",path:"demo/business-processes/vaccination-workflow.bpmn",sha:"demo-sha-2",size:3072,download_url:"#"},{name:"appointment-scheduling.bpmn",path:"demo/business-processes/appointment-scheduling.bpmn",sha:"demo-sha-3",size:1536,download_url:"#"}])}else b(d);P(!1)}catch(a){var r;if(console.error("Failed to fetch BPMN files from repository:",a),null!==s&&void 0!==s&&s.isDemo||null!==(r=a.message)&&void 0!==r&&r.includes("Failed to fetch")){console.log("Providing fallback demo BPMN files");return b([{name:"patient-registration.bpmn",path:"demo/business-processes/patient-registration.bpmn",sha:"demo-sha-1",size:2048,download_url:"#",html_url:"#"},{name:"vaccination-workflow.bpmn",path:"demo/business-processes/vaccination-workflow.bpmn",sha:"demo-sha-2",size:3072,download_url:"#"},{name:"appointment-scheduling.bpmn",path:"demo/business-processes/appointment-scheduling.bpmn",sha:"demo-sha-3",size:1536,download_url:"#"}]),void P(!1)}401===a.status||403===a.status?N("Authentication required to access this repository. Please ensure you have a valid GitHub token with appropriate permissions."):404===a.status?N("Repository or branch not found. Please check the repository name and branch."):N("Failed to load BPMN files from repository: ".concat(a.message)),b([]),P(!1)}else o("/")})()},[s,c,o,v]);return p?(0,u.jsx)("div",{className:"business-process-selection loading-state",children:(0,u.jsxs)("div",{className:"loading-content",children:[(0,u.jsx)("h2",{children:"Loading DAK Data..."}),(0,u.jsx)("p",{children:"Fetching repository and user data..."})]})}):h?(0,u.jsx)("div",{className:"business-process-selection error-state",children:(0,u.jsxs)("div",{className:"error-content",children:[(0,u.jsx)("h2",{children:"Error Loading DAK Data"}),(0,u.jsx)("p",{children:h}),(0,u.jsxs)("div",{className:"error-actions",children:[(0,u.jsx)("button",{onClick:()=>o("/"),className:"action-btn primary",children:"Return to Home"}),(0,u.jsx)("button",{onClick:()=>window.location.reload(),className:"action-btn secondary",children:"Retry"})]})]})}):s&&c?(0,u.jsx)(a.Mx,{pageName:"business-process-selection",children:(0,u.jsx)("div",{className:"business-process-selection",children:(0,u.jsx)("div",{className:"selection-content",children:(0,u.jsxs)("div",{className:"selection-main",children:[(0,u.jsxs)("div",{className:"selection-intro",children:[(0,u.jsx)("h2",{children:"Business Process Files"}),(0,u.jsxs)("p",{children:["Select a BPMN business process file to view, edit, or examine the source code. Files are loaded from ",(0,u.jsx)("code",{children:"input/business-processes/"})," or ",(0,u.jsx)("code",{children:"input/business-process/"})," directories and subdirectories."]})]}),f?(0,u.jsxs)("div",{className:"loading",children:[(0,u.jsx)("div",{className:"spinner"}),(0,u.jsx)("p",{children:"Loading business process files..."})]}):y?(0,u.jsx)("div",{className:"error",children:(0,u.jsxs)("p",{children:["\u274c ",y]})}):0===w.length?(0,u.jsxs)("div",{className:"empty-state",children:[(0,u.jsx)("div",{className:"empty-icon",children:"\ud83d\udccb"}),(0,u.jsx)("h3",{children:"No BPMN Files Found"}),(0,u.jsx)("p",{children:"No .bpmn files were found in the input/business-processes/ or input/business-process/ directories."})]}):(0,u.jsx)("div",{className:"files-grid",children:w.map(e=>(0,u.jsxs)("div",{className:"file-card",children:[(0,u.jsx)(m,{file:e,repository:c,selectedBranch:v,profile:s}),(0,u.jsxs)("div",{className:"file-header",children:[(0,u.jsx)("div",{className:"file-icon",children:"\ud83d\udd04"}),(0,u.jsx)("div",{className:"file-details",children:(0,u.jsxs)("h3",{className:"file-name",children:[e.name," \xb7 ",(e.size/1024).toFixed(1)," KB"]})})]}),(0,u.jsxs)("div",{className:"file-actions",children:[(0,u.jsx)("button",{className:"action-btn view-btn",onClick:n=>((e,n)=>{var i;const t=(null===(i=c.owner)||void 0===i?void 0:i.login)||c.full_name.split("/")[0],l=c.name,r=v||"main",a="/bpmn-viewer/".concat(t,"/").concat(l,"/").concat(r,"/").concat(n.path),u={profile:s,repository:c,component:g,selectedFile:n,selectedBranch:v,mode:"view"};(0,d.hX)(e,a,o,u)})(n,e),title:"View BPMN diagram (read-only)",children:"\ud83d\udc41\ufe0f View"}),(0,u.jsx)("button",{className:"action-btn edit-btn ".concat(B?"":"disabled"),onClick:n=>((e,n)=>{var i;if(!B)return void alert("You need write permissions to edit BPMN files. Please check your GitHub token permissions.");const t=(null===(i=c.owner)||void 0===i?void 0:i.login)||c.full_name.split("/")[0],l=c.name,r=v||"main",a="/bpmn-editor/".concat(t,"/").concat(l,"/").concat(r,"/").concat(n.path),u={profile:s,repository:c,component:g,selectedFile:n,selectedBranch:v,mode:"edit"};(0,d.hX)(e,a,o,u)})(n,e),title:B?"Edit BPMN diagram":"Edit access required",disabled:!B,children:"\u270f\ufe0f Edit"}),(0,u.jsx)("button",{className:"action-btn source-btn",onClick:n=>((e,n)=>{var i;const t=(null===(i=c.owner)||void 0===i?void 0:i.login)||c.full_name.split("/")[0],l=c.name,r=v||"main",a="/bpmn-source/".concat(t,"/").concat(l,"/").concat(r,"/").concat(n.path),u={profile:s,repository:c,component:g,selectedFile:n,selectedBranch:v};(0,d.hX)(e,a,o,u)})(n,e),title:"View XML source code",children:"\ud83d\udcc4 Source"})]})]},e.sha))})]})})})}):(o("/"),(0,u.jsx)("div",{children:"Redirecting..."}))}},96143:(e,n,o)=>{o.d(n,{Cq:()=>t,Ub:()=>l,_Q:()=>s});var i=o(57335);async function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,i.sN)())(e)}async function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,i.uW)())(e)}async function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(await(0,i.M3)())(e)}}}]);