"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[166],{23166:(e,n,i)=>{i.r(n),i.d(n,{default:()=>d});var t=i(65043),a=i(73537),o=i(50404),s=i(62148),r=i(37840),l=i(70579);const c=()=>{const e=(0,a.zy)(),n=(0,a.Zp)(),i=(0,t.useRef)(null),c=(0,t.useRef)(null),d=(0,s.oc)();console.log("BPMNViewer: Framework data received:",d),console.log("BPMNViewer: Location state:",e.state);const{profile:m,repository:p,component:u,selectedFile:g,selectedBranch:h}=e.state||{},w=(null===d||void 0===d?void 0:d.profile)||m,v=(null===d||void 0===d?void 0:d.repository)||p,N=(null===d||void 0===d?void 0:d.branch)||h,b=null===d||void 0===d?void 0:d.asset;console.log("BPMNViewer: Final computed values:",{currentProfile:!!w,currentRepository:!!v,currentBranch:N,assetPath:b});const f=(0,t.useMemo)(()=>b?{name:b.split("/").pop(),path:b}:g,[b,g]),[B,M]=(0,t.useState)(!0),[P,y]=(0,t.useState)("initializing"),[x,j]=(0,t.useState)(null),[_,V]=(0,t.useState)(!1),[E,F]=(0,t.useState)(!1),[k,C]=(0,t.useState)(!1);(0,t.useEffect)(()=>{(async()=>{if(v&&w)try{var e;const n=w.token&&(null===(e=v.permissions)||void 0===e?void 0:e.push);V(n||!1)}catch(x){console.warn("Could not check write permissions:",x),V(!1)}})()},[v,w]);const S=(0,t.useCallback)(async()=>{var e;if(console.log("\ud83d\ude80 BPMNViewer: loadBpmnContent called with:",{hasViewer:!!i.current,selectedFile:f,repository:v?{name:v.name,owner:v.owner}:null}),!i.current||!f||!v)return void console.warn("\u274c BPMNViewer: Missing required parameters for loadBpmnContent:",{hasViewer:!!i.current,hasSelectedFile:!!f,hasRepository:!!v});const n=(null===(e=v.owner)||void 0===e?void 0:e.login)||v.full_name.split("/")[0],t=v.name,a=N||"main";try{var s,r;let e;M(!0),j(null),y("initializing"),console.log("\ud83d\udd0d BPMNViewer: Repository and file analysis:",{repository:{name:v.name,full_name:v.full_name,owner:v.owner,isDemo:v.isDemo,default_branch:v.default_branch},selectedFile:{name:f.name,path:f.path,size:f.size},derivedOwner:n,repoName:t,ref:a,githubServiceAuthenticated:o.A.isAuth()}),y("fetching"),console.log("\ud83d\udcc2 BPMNViewer: Preparing to load BPMN content from ".concat(n,"/").concat(t,":").concat(f.path," (ref: ").concat(a,")")),console.log("\ud83d\udccb BPMNViewer: Full selected file object:",JSON.stringify(f,null,2));if((null===(s=f.path)||void 0===s?void 0:s.includes("demo/"))||(null===(r=f.sha)||void 0===r?void 0:r.startsWith("demo-"))){console.log("\ud83c\udfad BPMNViewer: Demo file detected, generating BPMN content locally"),y("generating");const n=f.name.replace(".bpmn","").replace(/[-_]/g," ");e='<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" \n                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI" \n                  id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="Process_'.concat(f.name.replace(/[^a-zA-Z0-9]/g,"_"),'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id="Task_1" name="').concat(n,'">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id="EndEvent_1" name="End">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_1" />\n    <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_1" targetRef="EndEvent_1" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_').concat(f.name.replace(/[^a-zA-Z0-9]/g,"_"),'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="152" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="158" y="125" width="24" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="Task_1_di" bpmnElement="Task_1">\n        <dc:Bounds x="250" y="60" width="100" height="80" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id="EndEvent_1_di" bpmnElement="EndEvent_1">\n        <dc:Bounds x="402" y="82" width="36" height="36" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x="410" y="125" width="20" height="14" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id="Flow_1_di" bpmnElement="Flow_1">\n        <di:waypoint x="188" y="100" />\n        <di:waypoint x="250" y="100" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id="Flow_2_di" bpmnElement="Flow_2">\n        <di:waypoint x="350" y="100" />\n        <di:waypoint x="402" y="100" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}else y("downloading"),e=await o.A.getFileContent(n,t,f.path,a);if(y("validating"),!e||!e.trim())throw new Error("Empty or invalid BPMN file content");if(!e.includes("bpmn:definitions")&&!e.includes("<definitions"))throw new Error("File does not appear to contain valid BPMN XML content");y("importing"),console.log("\ud83c\udfa8 BPMNViewer: Importing XML into BPMN viewer..."),await i.current.importXML(e),y("centering");try{i.current.get("canvas").zoom("fit-viewport"),console.log("\u2705 BPMNViewer: Successfully loaded and centered BPMN diagram")}catch(l){console.warn("\u26a0\ufe0f BPMNViewer: Could not center diagram:",l)}setTimeout(()=>{const e=c.current;if(e){const n=e.querySelector("svg");n&&(n.style.opacity="1",n.style.visibility="visible",console.log("\ud83c\udfa8 BPMNViewer: Forced SVG visibility"))}},100),y("complete"),M(!1)}catch(d){console.error("\ud83d\udca5 BPMNViewer: Error loading BPMN file:",d),console.error("\ud83d\udd0d BPMNViewer: Full error details:",{message:d.message,status:d.status,stack:d.stack,repository:{owner:n,name:t,ref:a},file:{name:f.name,path:f.path}}),y("error"),404===d.status?j("BPMN file not found in the repository."):403===d.status?j("Access denied. This repository may be private and require authentication."):d.message.includes("Empty or invalid BPMN")?j("The selected file appears to be empty or corrupted."):d.message.includes("does not appear to contain valid BPMN")?j("The selected file does not appear to contain valid BPMN XML content."):j("Failed to load BPMN diagram: ".concat(d.message)),M(!1)}},[f,v,N]),L=(0,t.useCallback)(()=>{c.current&&(c.current.innerHTML="",console.log("\ud83e\uddf9 BPMNViewer: Container cleaned up"))},[]);(0,t.useEffect)(()=>{const e=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;c.current?(console.log("\u2705 BPMNViewer: Container found on attempt ".concat(n+1)),(async()=>{if(console.log("\ud83d\udee0\ufe0f BPMNViewer: initializeViewer called with:",{hasContainer:!!c.current,hasViewer:!!i.current,selectedFile:f?f.name:"none",containerRefCurrent:c.current,viewerRefCurrent:i.current}),c.current&&!i.current&&f)try{L(),console.log("\ud83d\udd27 BPMNViewer: Creating new BPMN viewer..."),console.log("\ud83d\udd27 BPMNViewer: Container element details:",{tagName:c.current.tagName,className:c.current.className,clientWidth:c.current.clientWidth,clientHeight:c.current.clientHeight,innerHTML:c.current.innerHTML.length}),i.current=await(0,r._Q)({container:c.current}),console.log("\u2705 BPMNViewer: BPMN viewer initialized successfully"),console.log("\ud83d\udcde BPMNViewer: About to call loadBpmnContent()..."),S()}catch(x){console.error("\u274c BPMNViewer: Failed to initialize BPMN viewer:",x),console.error("\ud83d\udd0d BPMNViewer: Initialization error details:",{message:x.message,stack:x.stack,containerExists:!!c.current,containerContent:c.current?c.current.innerHTML:"N/A"}),x.message.includes("already exists")?(console.log('\ud83d\udd04 BPMNViewer: Detected "element already exists" error, attempting cleanup and retry...'),L(),setTimeout(async()=>{if(c.current&&!i.current)try{console.log("\ud83d\udd04 BPMNViewer: Retrying viewer creation after cleanup..."),i.current=await(0,r._Q)({container:c.current}),console.log("\u2705 BPMNViewer: BPMN viewer initialized successfully on retry"),S()}catch(e){console.error("\u274c BPMNViewer: Failed to initialize BPMN viewer on retry:",e),j("Failed to initialize BPMN viewer: ".concat(e.message)),M(!1)}},100)):(j("Failed to initialize BPMN viewer: ".concat(x.message)),M(!1))}else console.log("\u26a0\ufe0f BPMNViewer: Skipping viewer initialization:",{hasContainer:!!c.current,hasViewer:!!i.current,hasSelectedFile:!!f,reason:c.current?i.current?"Viewer already exists":f?"Unknown":"No selected file":"No container"})})()):n<50?(console.log("\u23f3 BPMNViewer: Container not ready, attempt ".concat(n+1,"/").concat(50,", retrying in 100ms...")),setTimeout(()=>e(n+1),100)):(console.error("\u274c BPMNViewer: Container never became available after maximum attempts"),j("Failed to initialize BPMN viewer: container not available"),M(!1))};return f?(console.log("\u23f0 BPMNViewer: Starting container readiness check for selectedFile:",f.name),e()):console.log("\u274c BPMNViewer: No currentSelectedFile, skipping viewer initialization"),()=>{if(i.current){try{i.current.destroy()}catch(x){console.warn("Warning cleaning up BPMN viewer:",x)}i.current=null}}},[f,S,L]);(0,t.useEffect)(()=>()=>{document.body.classList.remove("enhanced-fullwidth-active")},[]),(0,t.useEffect)(()=>(E?document.body.classList.add("enhanced-fullwidth-active"):document.body.classList.remove("enhanced-fullwidth-active"),()=>{document.body.classList.remove("enhanced-fullwidth-active")}),[E]),(0,t.useEffect)(()=>{e.pathname.split("/").filter(e=>e).length>5?null!==d&&void 0!==d&&d.profile||null!==d&&void 0!==d&&d.repository||null!==d&&void 0!==d&&d.asset||w||v||f||(console.log("BPMNViewer: On asset URL but no data available from framework or location state, redirecting to home"),n("/")):w&&v&&f||(console.log("BPMNViewer: Missing required data, redirecting to home:",{hasProfile:!!w,hasRepository:!!v,hasSelectedFile:!!f}),n("/"))},[w,v,f,d,e.pathname,n]);const z=e.pathname.split("/").filter(e=>e).length>5;return w&&v&&f?(0,l.jsx)("div",{className:"bpmn-viewer ".concat(E?"enhanced-fullwidth":""," ").concat(k?"auto-hide":""),children:(0,l.jsx)("div",{className:"viewer-content",children:(0,l.jsxs)("div",{className:"viewer-main",children:[(0,l.jsxs)("div",{className:"viewer-toolbar",children:[(0,l.jsxs)("div",{className:"toolbar-left",children:[(0,l.jsx)("h3",{children:f.name}),(0,l.jsxs)("div",{className:"artifact-badges",children:[(0,l.jsx)("span",{className:"artifact-badge bpmn",children:"\ud83d\udcca BPMN"}),(0,l.jsx)("span",{className:"dak-component-badge",children:"\ud83d\udd04 Business Process"})]}),(0,l.jsx)("span",{className:"view-mode-badge",children:"\ud83d\udc41\ufe0f Read-Only View"})]}),(0,l.jsxs)("div",{className:"toolbar-right",children:[(0,l.jsxs)("button",{className:"action-btn secondary",onClick:()=>{C(!k)},title:"Toggle auto-hide headers/footers",children:[k?"\ud83d\udccc":"\ud83d\udc41\ufe0f"," Auto-Hide"]}),(0,l.jsxs)("button",{className:"action-btn secondary",onClick:()=>{const e=!E;F(e),e?document.body.classList.add("enhanced-fullwidth-active"):document.body.classList.remove("enhanced-fullwidth-active")},title:"Toggle enhanced fullwidth mode",children:[E?"\ud83d\udd33":"\u26f6"," Full Container"]}),(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>{n("/business-process-selection",{state:{profile:w,repository:v,component:u,selectedBranch:N}})},children:"\u2190 Back to List"}),_&&(0,l.jsx)("button",{className:"action-btn primary",onClick:()=>{var e;if(!_)return void alert("You need write permissions to edit BPMN files. Please check your GitHub token permissions.");const i=(null===(e=v.owner)||void 0===e?void 0:e.login)||v.full_name.split("/")[0],t=v.name,a=N?"/bpmn-editor/".concat(i,"/").concat(t,"/").concat(N):"/bpmn-editor/".concat(i,"/").concat(t);n(a,{state:{profile:w,repository:v,component:u,selectedFile:f,selectedBranch:N,mode:"edit"}})},children:"\u270f\ufe0f Edit"})]})]}),(0,l.jsxs)("div",{className:"diagram-container",children:[B?(0,l.jsxs)("div",{className:"loading-overlay",children:[(0,l.jsx)("div",{className:"spinner"}),(0,l.jsxs)("div",{className:"loading-info",children:[(0,l.jsx)("p",{children:"Loading BPMN diagram..."}),(0,l.jsxs)("p",{className:"loading-details",children:["Fetching ",f.name," from ",v.name]}),(0,l.jsxs)("div",{className:"loading-progress",children:[(0,l.jsx)("div",{className:"loading-step ".concat("initializing"===P?"active":"fetching"===P||"downloading"===P||"generating"===P||"validating"===P||"importing"===P||"centering"===P||"complete"===P?"complete":""),children:"Initializing viewer"}),(0,l.jsx)("div",{className:"loading-step ".concat("fetching"===P||"downloading"===P||"generating"===P?"active":"validating"===P||"importing"===P||"centering"===P||"complete"===P?"complete":""),children:"generating"===P?"Generating demo content":"Fetching BPMN file"}),(0,l.jsx)("div",{className:"loading-step ".concat("validating"===P?"active":"importing"===P||"centering"===P||"complete"===P?"complete":""),children:"Validating BPMN XML"}),(0,l.jsx)("div",{className:"loading-step ".concat("importing"===P?"active":"centering"===P||"complete"===P?"complete":""),children:"Importing diagram"}),(0,l.jsx)("div",{className:"loading-step ".concat("centering"===P?"active":"complete"===P?"complete":""),children:"Centering view"})]}),(0,l.jsx)("p",{className:"loading-hint",children:"This may take a few moments for large files or slow connections."})]})]}):x?(0,l.jsxs)("div",{className:"error-overlay",children:[(0,l.jsxs)("p",{children:["\u274c ",x]}),(0,l.jsxs)("div",{className:"error-actions",children:[(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>S(),children:"\ud83d\udd04 Retry"}),(0,l.jsx)("button",{className:"action-btn secondary",onClick:()=>n("/business-process-selection",{state:{profile:w,repository:v,component:u,selectedBranch:N}}),children:"\u2190 Back to List"})]})]}):null,(0,l.jsx)("div",{className:"bpmn-container",ref:c,style:{display:B||x?"none":"block",width:"100%",height:"100%"}})]}),(0,l.jsxs)("div",{className:"diagram-info",children:[(0,l.jsxs)("div",{className:"condensed-file-info",children:[(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83d\udcc1"}),(0,l.jsx)("span",{className:"value",children:(null===f||void 0===f?void 0:f.name)||"No file"})]}),(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83d\udccf"}),(0,l.jsx)("span",{className:"value",children:null!==f&&void 0!==f&&f.size?"".concat((f.size/1024).toFixed(1)," KB"):"N/A"})]}),(0,l.jsxs)("div",{className:"condensed-info-item",children:[(0,l.jsx)("span",{className:"label",children:"\ud83c\udf3f"}),(0,l.jsx)("span",{className:"value",children:N||"main"})]})]}),(0,l.jsxs)("div",{className:"condensed-view-mode",children:[(0,l.jsx)("span",{className:"condensed-access-badge ".concat(_?"write":"read"),children:_?"\u270f\ufe0f Edit":"\ud83d\udc41\ufe0f Read"}),(0,l.jsx)("span",{className:"condensed-info-item",children:(0,l.jsx)("span",{className:"value",children:E?"\u26f6 Full Container":k?"\ud83d\udc41\ufe0f Auto-Hide":"\ud83d\udcfa Fullwidth"})})]})]})]})})}):!z||null!==d&&void 0!==d&&d.profile&&null!==d&&void 0!==d&&d.repository&&null!==d&&void 0!==d&&d.asset?(0,l.jsx)("div",{children:"Loading or redirecting..."}):(0,l.jsx)("div",{children:"Loading framework data..."})},d=()=>(0,l.jsx)(s.Mx,{pageName:"bpmn-viewer",children:(0,l.jsx)(c,{})})}}]);
//# sourceMappingURL=166.b03abf9e.chunk.js.map