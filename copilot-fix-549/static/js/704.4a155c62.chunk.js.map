{"version":3,"file":"static/js/704.4a155c62.chunk.js","mappings":"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","sources":["utils/navigationUtils.js","services/dakComplianceService.js","components/SaveDialog.js","components/StagingGround.js","services/sushiWasmService.js","utils/wasmLoader.js","components/SushiErrorBoundary.js","components/SushiRunner.js","components/Publications.js","components/ForkStatusBar.js","components/DAKDashboardWithFramework.js"],"sourcesContent":["/**\n * Utility functions for handling navigation with command-click support\n */\n\n/**\n * Detects if a click event should open in a new tab\n * @param {MouseEvent} event - The click event\n * @returns {boolean} - True if should open in new tab (Ctrl/Cmd+click)\n */\nexport const shouldOpenInNewTab = (event) => {\n  return !!(event?.ctrlKey || event?.metaKey); // Ctrl on Windows/Linux, Cmd on Mac\n};\n\n/**\n * Constructs a full URL from a relative path using the current base URL\n * @param {string} relativePath - The relative path (e.g., '/dashboard/user/repo')\n * @returns {string} - The full URL\n */\nexport const constructFullUrl = (relativePath) => {\n  const basePath = process.env.PUBLIC_URL || '';\n  const baseUrl = window.location.origin;\n  \n  // Remove leading slash from relativePath if present to avoid double slashes\n  const cleanPath = relativePath.startsWith('/') ? relativePath.slice(1) : relativePath;\n  \n  // Only add basePath if it's not empty\n  if (!basePath) {\n    return `${baseUrl}/${cleanPath}`;\n  }\n  \n  // Ensure basePath ends with slash for proper joining\n  const cleanBasePath = basePath.endsWith('/') ? basePath : basePath + '/';\n  \n  return `${baseUrl}${cleanBasePath}${cleanPath}`;\n};\n\n/**\n * Handles navigation with command-click support\n * @param {MouseEvent} event - The click event\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n */\nexport const handleNavigationClick = (event, path, navigate, state = null) => {\n  if (shouldOpenInNewTab(event)) {\n    // Open in new tab\n    const fullUrl = constructFullUrl(path);\n    window.open(fullUrl, '_blank', 'noopener,noreferrer');\n  } else {\n    // Navigate in same tab\n    if (state) {\n      navigate(path, { state });\n    } else {\n      navigate(path);\n    }\n  }\n};\n\n/**\n * Creates a click handler that supports command-click for new tabs\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n * @returns {Function} - Click handler function\n */\nexport const createNavigationClickHandler = (path, navigate, state = null) => {\n  return (event) => {\n    handleNavigationClick(event, path, navigate, state);\n  };\n};","/**\n * DAK Compliance Service\n * \n * Provides comprehensive validation for DAK components with support for error, warning, and info levels.\n * Designed to work in multiple environments: React client-side, command-line, and IDE integration.\n */\n\nimport yaml from 'js-yaml';\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\n\n// Import schema as a module\nconst sushiConfigSchema = require('../schemas/sushi-config.json');\n\nclass DAKComplianceService {\n  constructor() {\n    this.validators = new Map();\n    this.initializeSchemaValidator();\n    this.initializeDefaultValidators();\n  }\n\n  /**\n   * Initialize AJV schema validator for sushi-config.yaml\n   */\n  initializeSchemaValidator() {\n    this.ajv = new Ajv({ allErrors: true, verbose: true });\n    addFormats(this.ajv);\n    this.sushiConfigValidator = this.ajv.compile(sushiConfigSchema);\n  }\n\n  /**\n   * Initialize default validators for common DAK file types\n   */\n  initializeDefaultValidators() {\n    // XML file validators (general)\n    this.addValidator('xml', 'xml-well-formed', {\n      level: 'error',\n      description: 'XML files must be well-formed',\n      validator: this.validateXMLWellFormed.bind(this)\n    });\n\n    // BPMN file validators\n    this.addValidator('bpmn', 'xml-well-formed', {\n      level: 'error',\n      description: 'BPMN files must be well-formed XML',\n      validator: this.validateXMLWellFormed.bind(this)\n    });\n\n    this.addValidator('bpmn', 'bpmn-namespace', {\n      level: 'error',\n      description: 'BPMN files must use correct BPMN 2.0 namespace',\n      validator: this.validateBPMNNamespace.bind(this)\n    });\n\n    this.addValidator('bpmn', 'has-start-event', {\n      level: 'warning',\n      description: 'BPMN process should have at least one start event',\n      validator: this.validateBPMNStartEvent.bind(this)\n    });\n\n    // DMN file validators\n    this.addValidator('dmn', 'xml-well-formed', {\n      level: 'error',\n      description: 'DMN files must be well-formed XML',\n      validator: this.validateXMLWellFormed.bind(this)\n    });\n\n    this.addValidator('dmn', 'dmn-namespace', {\n      level: 'error',\n      description: 'DMN files must use correct DMN 1.3 namespace',\n      validator: this.validateDMNNamespace.bind(this)\n    });\n\n    // JSON file validators\n    this.addValidator('json', 'json-valid', {\n      level: 'error',\n      description: 'JSON files must be valid JSON',\n      validator: this.validateJSONSyntax.bind(this)\n    });\n\n    // FHIR resource validators\n    this.addValidator('json', 'fhir-resource-type', {\n      level: 'info',\n      description: 'FHIR resources should have valid resourceType',\n      validator: this.validateFHIRResourceType.bind(this)\n    });\n\n    // General file validators\n    this.addValidator('*', 'file-size-limit', {\n      level: 'warning',\n      description: 'Files should be under 1MB for optimal performance',\n      validator: this.validateFileSize.bind(this)\n    });\n\n    this.addValidator('*', 'filename-conventions', {\n      level: 'info',\n      description: 'Files should follow naming conventions',\n      validator: this.validateFilenameConventions.bind(this)\n    });\n\n    // WHO SMART Guidelines specific validators\n    this.addValidator('yaml', 'sushi-config-valid', {\n      level: 'error',\n      description: 'sushi-config.yaml must be valid and contain required fields',\n      validator: this.validateSushiConfig.bind(this)\n    });\n  }\n\n  /**\n   * Add a new validator\n   */\n  addValidator(fileType, validatorId, config) {\n    if (!this.validators.has(fileType)) {\n      this.validators.set(fileType, new Map());\n    }\n    this.validators.get(fileType).set(validatorId, config);\n  }\n\n  /**\n   * Remove a validator\n   */\n  removeValidator(fileType, validatorId) {\n    if (this.validators.has(fileType)) {\n      this.validators.get(fileType).delete(validatorId);\n    }\n  }\n\n  /**\n   * Validate a single file\n   */\n  async validateFile(filePath, content) {\n    const results = [];\n    const fileExtension = this.getFileExtension(filePath);\n    const fileName = this.getFileName(filePath);\n\n    // Get validators for this file type and universal validators\n    const typeValidators = this.validators.get(fileExtension) || new Map();\n    const universalValidators = this.validators.get('*') || new Map();\n\n    // Run type-specific validators\n    for (const [validatorId, config] of typeValidators) {\n      try {\n        const result = await config.validator(filePath, content, fileName);\n        if (result) {\n          results.push({\n            validatorId,\n            level: config.level,\n            description: config.description,\n            ...result\n          });\n        }\n      } catch (error) {\n        results.push({\n          validatorId,\n          level: 'error',\n          description: 'Validator execution failed',\n          message: error.message,\n          filePath\n        });\n      }\n    }\n\n    // Run universal validators\n    for (const [validatorId, config] of universalValidators) {\n      try {\n        const result = await config.validator(filePath, content, fileName);\n        if (result) {\n          results.push({\n            validatorId,\n            level: config.level,\n            description: config.description,\n            ...result\n          });\n        }\n      } catch (error) {\n        results.push({\n          validatorId,\n          level: 'error',\n          description: 'Validator execution failed',\n          message: error.message,\n          filePath\n        });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Validate entire staging ground\n   */\n  async validateStagingGround(stagingGround) {\n    const results = {\n      summary: { error: 0, warning: 0, info: 0 },\n      files: {},\n      validatedAt: Date.now()\n    };\n\n    for (const file of stagingGround.files) {\n      const fileResults = await this.validateFile(file.path, file.content);\n      results.files[file.path] = fileResults;\n\n      // Update summary counts\n      fileResults.forEach(result => {\n        if (result.level === 'error') results.summary.error++;\n        else if (result.level === 'warning') results.summary.warning++;\n        else if (result.level === 'info') results.summary.info++;\n      });\n    }\n\n    return results;\n  }\n\n  /**\n   * Check if staging ground can be saved (no error-level violations)\n   */\n  async canSave(stagingGround) {\n    const validation = await this.validateStagingGround(stagingGround);\n    return validation.summary.error === 0;\n  }\n\n  // Validator implementations\n\n  async validateXMLWellFormed(filePath, content) {\n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, 'text/xml');\n      const parserError = doc.querySelector('parsererror');\n      \n      if (parserError) {\n        return {\n          message: 'XML is not well-formed: ' + parserError.textContent,\n          filePath\n        };\n      }\n      return null;\n    } catch (error) {\n      return {\n        message: 'Failed to parse XML: ' + error.message,\n        filePath\n      };\n    }\n  }\n\n  async validateBPMNNamespace(filePath, content) {\n    if (!content.includes('xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"')) {\n      return {\n        message: 'BPMN file missing correct BPMN 2.0 namespace declaration',\n        filePath,\n        suggestion: 'Add xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" to root element'\n      };\n    }\n    return null;\n  }\n\n  async validateBPMNStartEvent(filePath, content) {\n    if (!content.includes('<startEvent') && !content.includes('<bpmn:startEvent')) {\n      return {\n        message: 'BPMN process should contain at least one start event',\n        filePath,\n        suggestion: 'Add a start event to begin the process flow'\n      };\n    }\n    return null;\n  }\n\n  async validateDMNNamespace(filePath, content) {\n    if (!content.includes('xmlns:dmn=\"https://www.omg.org/spec/DMN/20191111/MODEL/\"')) {\n      return {\n        message: 'DMN file missing correct DMN 1.3 namespace declaration',\n        filePath,\n        suggestion: 'Add xmlns:dmn=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" to root element'\n      };\n    }\n    return null;\n  }\n\n  async validateJSONSyntax(filePath, content) {\n    try {\n      JSON.parse(content);\n      return null;\n    } catch (error) {\n      return {\n        message: 'Invalid JSON syntax: ' + error.message,\n        filePath\n      };\n    }\n  }\n\n  async validateFHIRResourceType(filePath, content) {\n    try {\n      const json = JSON.parse(content);\n      const validResourceTypes = [\n        'StructureDefinition', 'ValueSet', 'CodeSystem', 'ConceptMap',\n        'Questionnaire', 'PlanDefinition', 'ActivityDefinition', 'Measure',\n        'Library', 'ImplementationGuide', 'Bundle', 'Patient', 'Practitioner'\n      ];\n\n      if (json.resourceType && !validResourceTypes.includes(json.resourceType)) {\n        return {\n          message: `Unknown FHIR resourceType: ${json.resourceType}`,\n          filePath,\n          suggestion: 'Verify the resourceType is correct for FHIR R4'\n        };\n      }\n      return null;\n    } catch (error) {\n      // Not JSON, skip this validator\n      return null;\n    }\n  }\n\n  async validateFileSize(filePath, content) {\n    const sizeInBytes = new Blob([content]).size;\n    const maxSize = 1024 * 1024; // 1MB\n\n    if (sizeInBytes > maxSize) {\n      return {\n        message: `File size (${(sizeInBytes / 1024 / 1024).toFixed(1)}MB) exceeds recommended limit of 1MB`,\n        filePath,\n        suggestion: 'Consider breaking large files into smaller components'\n      };\n    }\n    return null;\n  }\n\n  async validateFilenameConventions(filePath, content) {\n    const fileName = this.getFileName(filePath);\n    const issues = [];\n\n    // Check for spaces in filename\n    if (fileName.includes(' ')) {\n      issues.push('avoid spaces in filenames');\n    }\n\n    // Check for special characters\n    if (/[<>:\"|?*]/.test(fileName)) {\n      issues.push('avoid special characters (<>:\"|?*)');\n    }\n\n    // Check for very long names\n    if (fileName.length > 100) {\n      issues.push('filename is very long (>100 characters)');\n    }\n\n    if (issues.length > 0) {\n      return {\n        message: `Filename convention issues: ${issues.join(', ')}`,\n        filePath,\n        suggestion: 'Use lowercase letters, numbers, hyphens, and underscores'\n      };\n    }\n    return null;\n  }\n\n  async validateSushiConfig(filePath, content) {\n    if (!filePath.endsWith('sushi-config.yaml')) {\n      return null;\n    }\n\n    try {\n      // Parse YAML content\n      let parsedConfig;\n      try {\n        parsedConfig = yaml.load(content);\n      } catch (yamlError) {\n        return {\n          message: `Invalid YAML syntax: ${yamlError.message}`,\n          filePath,\n          suggestion: 'Fix YAML syntax errors and ensure proper indentation'\n        };\n      }\n\n      if (!parsedConfig || typeof parsedConfig !== 'object') {\n        return {\n          message: 'sushi-config.yaml must contain a valid YAML object',\n          filePath,\n          suggestion: 'Ensure the file contains proper YAML object structure'\n        };\n      }\n\n      // Validate against JSON schema\n      const isValid = this.sushiConfigValidator(parsedConfig);\n      \n      if (!isValid) {\n        const errors = this.sushiConfigValidator.errors;\n        const errorMessages = errors.map(error => {\n          const field = error.instancePath ? error.instancePath.replace('/', '') : error.params?.missingProperty || 'root';\n          let message = `${field}: ${error.message}`;\n          \n          if (error.params?.allowedValues) {\n            message += ` (allowed: ${error.params.allowedValues.join(', ')})`;\n          }\n          \n          return message;\n        });\n\n        return {\n          message: `sushi-config.yaml validation errors: ${errorMessages.join('; ')}`,\n          filePath,\n          suggestion: 'Review the sushi-config.yaml specification at https://fshschool.org/docs/sushi/configuration/',\n          details: errors\n        };\n      }\n\n      // Additional WHO SMART Guidelines specific validation\n      const whoValidation = this.validateWHOSmartGuidelines(parsedConfig);\n      if (whoValidation) {\n        return whoValidation;\n      }\n\n      return null;\n    } catch (error) {\n      return {\n        message: 'Failed to validate sushi-config.yaml: ' + error.message,\n        filePath,\n        suggestion: 'Check file format and content structure'\n      };\n    }\n  }\n\n  /**\n   * Additional validation for WHO SMART Guidelines compliance\n   */\n  validateWHOSmartGuidelines(config) {\n    const issues = [];\n\n    // Check for smart.who.int.base dependency\n    if (!config.dependencies || !config.dependencies['smart.who.int.base']) {\n      issues.push('missing smart.who.int.base dependency (required for WHO DAK compliance)');\n    }\n\n    // Check canonical URL pattern for WHO guidelines\n    if (config.canonical && config.canonical.includes('smart.who.int')) {\n      if (!config.id.startsWith('smart.who.int')) {\n        issues.push('id should start with \"smart.who.int\" when using WHO canonical URL');\n      }\n    }\n\n    // Check for required WHO metadata\n    if (config.canonical && config.canonical.includes('smart.who.int')) {\n      if (!config.publisher || !config.publisher.toLowerCase().includes('world health organization')) {\n        issues.push('publisher should include \"World Health Organization\" for WHO guidelines');\n      }\n\n      if (!config.jurisdiction || !Array.isArray(config.jurisdiction)) {\n        issues.push('jurisdiction should be specified for WHO guidelines');\n      }\n    }\n\n    if (issues.length > 0) {\n      return {\n        message: `WHO SMART Guidelines compliance issues: ${issues.join(', ')}`,\n        filePath: 'sushi-config.yaml',\n        suggestion: 'Ensure compliance with WHO SMART Guidelines requirements'\n      };\n    }\n\n    return null;\n  }\n\n  // Utility methods\n\n  getFileExtension(filePath) {\n    const parts = filePath.split('.');\n    return parts.length > 1 ? parts[parts.length - 1].toLowerCase() : '';\n  }\n\n  getFileName(filePath) {\n    return filePath.split('/').pop() || filePath;\n  }\n\n  /**\n   * Format validation results for display\n   */\n  formatValidationResults(validation) {\n    const formatted = {\n      canSave: validation.summary.error === 0,\n      summary: validation.summary,\n      files: []\n    };\n\n    Object.entries(validation.files).forEach(([filePath, results]) => {\n      if (results.length > 0) {\n        formatted.files.push({\n          path: filePath,\n          issues: results.map(result => ({\n            level: result.level,\n            message: result.message,\n            description: result.description,\n            suggestion: result.suggestion\n          }))\n        });\n      }\n    });\n\n    return formatted;\n  }\n\n  /**\n   * Get validation summary for UI display\n   */\n  getValidationSummary(validation) {\n    return {\n      error: validation.summary.error,\n      warning: validation.summary.warning,\n      info: validation.summary.info,\n      canSave: validation.summary.error === 0,\n      hasIssues: validation.summary.error + validation.summary.warning + validation.summary.info > 0\n    };\n  }\n}\n\n// Create singleton instance\nconst dakComplianceService = new DAKComplianceService();\n\nexport default dakComplianceService;","import React, { useState, useEffect } from 'react';\nimport githubService from '../services/githubService';\nimport dakComplianceService from '../services/dakComplianceService';\nimport stagingGroundService from '../services/stagingGroundService';\n\nconst SaveDialog = ({ \n  isOpen, \n  onClose, \n  stagingGround, \n  validation, \n  repository, \n  selectedBranch,\n  hasWriteAccess,\n  onSaveSuccess \n}) => {\n  const [commitMessage, setCommitMessage] = useState('');\n  const [overrideValidation, setOverrideValidation] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [showValidationDetails, setShowValidationDetails] = useState(false);\n\n  // Reset state when dialog opens\n  useEffect(() => {\n    if (isOpen) {\n      setCommitMessage(stagingGround?.message || '');\n      setOverrideValidation(false);\n      setIsSaving(false);\n      setError(null);\n      setShowValidationDetails(false);\n    }\n  }, [isOpen, stagingGround]);\n\n  if (!isOpen) return null;\n\n  const validationSummary = validation ? dakComplianceService.getValidationSummary(validation) : null;\n  const canSave = validationSummary ? (validationSummary.canSave || overrideValidation) : true;\n  const hasErrors = validationSummary ? validationSummary.error > 0 : false;\n\n  const handleSave = async () => {\n    if (!commitMessage.trim()) {\n      setError('Commit message is required');\n      return;\n    }\n\n    if (!hasWriteAccess) {\n      setError('You need write permissions to save changes');\n      return;\n    }\n\n    if (hasErrors && !overrideValidation) {\n      setError('Cannot save with validation errors. Enable override option to proceed anyway.');\n      return;\n    }\n\n    setIsSaving(true);\n    setError(null);\n\n    try {\n      const owner = repository.owner?.login || repository.full_name.split('/')[0];\n      \n      if (repository.isDemo || (repository.owner && repository.owner.login === 'demo-user')) {\n        // Simulate save in demo mode\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        onSaveSuccess({\n          sha: 'demo-commit-sha',\n          message: commitMessage,\n          url: `https://github.com/${repository.full_name}/commit/demo-commit-sha`\n        });\n        return;\n      }\n\n      // Create commit with multiple files\n      const result = await githubService.createCommit(\n        owner,\n        repository.name,\n        selectedBranch,\n        commitMessage.trim(),\n        stagingGround.files\n      );\n\n      onSaveSuccess({\n        sha: result.sha,\n        message: commitMessage,\n        url: result.html_url\n      });\n\n    } catch (err) {\n      console.error('Error saving changes:', err);\n      setError(getErrorMessage(err));\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const getErrorMessage = (error) => {\n    if (error.status === 409) {\n      return 'Conflict detected. The branch has been updated since you started. Please refresh and try again.';\n    } else if (error.status === 403) {\n      return 'Permission denied. Check that your token has write access to this repository.';\n    } else if (error.status === 404) {\n      return 'Repository or branch not found. Please verify the repository exists and you have access.';\n    } else if (error.message) {\n      return error.message;\n    } else {\n      return 'An unexpected error occurred while saving. Please try again.';\n    }\n  };\n\n  const formatValidationIcon = (level) => {\n    switch (level) {\n      case 'error': return '🔴';\n      case 'warning': return '🟡';\n      case 'info': return '🟢';\n      default: return '❓';\n    }\n  };\n\n  // Handle removing individual file\n  const handleRemoveFile = (filePath) => {\n    if (window.confirm(`Are you sure you want to remove \"${filePath}\" from staging? This cannot be undone.`)) {\n      stagingGroundService.removeFile(filePath);\n    }\n  };\n\n  return (\n    <div className=\"save-dialog-overlay\">\n      <div className=\"save-dialog\">\n        <div className=\"dialog-header\">\n          <h3>💾 Save Changes</h3>\n          <button \n            className=\"dialog-close\"\n            onClick={onClose}\n            disabled={isSaving}\n          >\n            ×\n          </button>\n        </div>\n\n        <div className=\"dialog-content\">\n          {/* Files Summary */}\n          <div className=\"save-summary\">\n            <h4>Files to be committed ({stagingGround?.files?.length || 0}):</h4>\n            <div className=\"files-list\">\n              {stagingGround?.files?.map((file, index) => (\n                <div key={index} className=\"file-item\">\n                  <span className=\"file-icon\">📄</span>\n                  <span className=\"file-path\">{file.path}</span>\n                  <span className=\"file-size\">\n                    {(new Blob([file.content]).size / 1024).toFixed(1)} KB\n                  </span>\n                  <button\n                    className=\"remove-file-btn\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleRemoveFile(file.path);\n                    }}\n                    title={`Remove ${file.path} from staging`}\n                    disabled={isSaving}\n                  >\n                    🗑️\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Validation Status */}\n          {validationSummary && (\n            <div className=\"validation-section\">\n              <div \n                className={`validation-summary ${validationSummary.hasIssues ? 'has-issues' : 'clean'}`}\n                onClick={() => setShowValidationDetails(!showValidationDetails)}\n              >\n                <div className=\"validation-header\">\n                  <h4>🚦 Validation Status</h4>\n                  <div className=\"validation-badges\">\n                    {validationSummary.error > 0 && (\n                      <span className=\"validation-badge error\">\n                        🔴 {validationSummary.error}\n                      </span>\n                    )}\n                    {validationSummary.warning > 0 && (\n                      <span className=\"validation-badge warning\">\n                        🟡 {validationSummary.warning}\n                      </span>\n                    )}\n                    {validationSummary.info > 0 && (\n                      <span className=\"validation-badge info\">\n                        🟢 {validationSummary.info}\n                      </span>\n                    )}\n                    {!validationSummary.hasIssues && (\n                      <span className=\"validation-badge success\">\n                        ✅ All clear\n                      </span>\n                    )}\n                  </div>\n                  <span className={`expand-icon ${showValidationDetails ? 'expanded' : ''}`}>\n                    ▼\n                  </span>\n                </div>\n              </div>\n\n              {showValidationDetails && validation && (\n                <div className=\"validation-details\">\n                  {Object.entries(validation.files).map(([filePath, results]) => (\n                    results.length > 0 && (\n                      <div key={filePath} className=\"file-validation\">\n                        <h5>📄 {filePath}</h5>\n                        <div className=\"validation-issues\">\n                          {results.map((result, index) => (\n                            <div key={index} className={`validation-issue ${result.level}`}>\n                              <span className=\"issue-icon\">{formatValidationIcon(result.level)}</span>\n                              <div className=\"issue-content\">\n                                <div className=\"issue-message\">{result.message}</div>\n                                {result.suggestion && (\n                                  <div className=\"issue-suggestion\">💡 {result.suggestion}</div>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )\n                  ))}\n                </div>\n              )}\n\n              {/* Override option for errors */}\n              {hasErrors && (\n                <div className=\"override-section\">\n                  <label className=\"override-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      checked={overrideValidation}\n                      onChange={(e) => setOverrideValidation(e.target.checked)}\n                    />\n                    <span className=\"checkmark\"></span>\n                    Override validation errors and save anyway\n                  </label>\n                  <p className=\"override-warning\">\n                    ⚠️ Saving with validation errors may cause issues with your DAK.\n                    Only enable this if you're sure about your changes.\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Commit Message */}\n          <div className=\"commit-message-section\">\n            <label htmlFor=\"commit-message\">\n              <h4>✍️ Commit Message</h4>\n            </label>\n            <textarea\n              id=\"commit-message\"\n              className=\"commit-message-input\"\n              value={commitMessage}\n              onChange={(e) => setCommitMessage(e.target.value)}\n              placeholder=\"Describe your changes...\"\n              rows={3}\n              disabled={isSaving}\n              required\n            />\n            <div className=\"commit-tips\">\n              <p>💡 <strong>Tip:</strong> Write a clear, descriptive message about what you changed and why.</p>\n            </div>\n          </div>\n\n          {/* Error Display */}\n          {error && (\n            <div className=\"error-section\">\n              <div className=\"error-message\">\n                <span className=\"error-icon\">❌</span>\n                {error}\n              </div>\n            </div>\n          )}\n\n          {/* Repository Info */}\n          <div className=\"repo-info\">\n            <div className=\"info-item\">\n              <span className=\"info-label\">Repository:</span>\n              <span className=\"info-value\">{repository?.full_name}</span>\n            </div>\n            <div className=\"info-item\">\n              <span className=\"info-label\">Branch:</span>\n              <span className=\"info-value\">{selectedBranch}</span>\n            </div>\n            <div className=\"info-item\">\n              <span className=\"info-label\">Access:</span>\n              <span className={`info-value ${hasWriteAccess ? 'write' : 'read'}`}>\n                {hasWriteAccess ? '✏️ Write' : '👁️ Read-only'}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"dialog-actions\">\n          <button\n            className=\"action-btn secondary\"\n            onClick={onClose}\n            disabled={isSaving}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"action-btn primary\"\n            onClick={handleSave}\n            disabled={!canSave || !commitMessage.trim() || isSaving || !hasWriteAccess}\n          >\n            {isSaving ? (\n              <>\n                <span className=\"saving-spinner\">⏳</span>\n                Saving...\n              </>\n            ) : (\n              <>💾 Save Changes</>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SaveDialog;","import React, { useState, useEffect, useCallback } from 'react';\nimport stagingGroundService from '../services/stagingGroundService';\nimport dakComplianceService from '../services/dakComplianceService';\nimport SaveDialog from './SaveDialog';\n\nconst StagingGround = ({ repository, selectedBranch, hasWriteAccess, profile, onStagingFilesChange }) => {\n  const [stagingGround, setStagingGround] = useState(null);\n  const [validation, setValidation] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n\n  // Load staging ground data\n  const loadStagingGroundData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const currentStagingGround = stagingGroundService.getStagingGround();\n      setStagingGround(currentStagingGround);\n      \n      // Notify parent component about staging files\n      if (onStagingFilesChange) {\n        onStagingFilesChange(currentStagingGround.files || []);\n      }\n      \n      if (currentStagingGround.files.length > 0) {\n        await validateStagingGround(currentStagingGround);\n      }\n    } catch (err) {\n      setError('Failed to load staging ground data');\n      console.error('Error loading staging ground:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [onStagingFilesChange]);\n\n  // Initialize staging ground service\n  useEffect(() => {\n    if (repository && selectedBranch) {\n      stagingGroundService.initialize(repository, selectedBranch);\n      loadStagingGroundData();\n\n      // Subscribe to staging ground changes\n      const unsubscribe = stagingGroundService.addListener((updatedStagingGround) => {\n        setStagingGround(updatedStagingGround);\n        validateStagingGround(updatedStagingGround);\n        \n        // Notify parent component about staging files\n        if (onStagingFilesChange) {\n          onStagingFilesChange(updatedStagingGround.files || []);\n        }\n      });\n\n      return unsubscribe;\n    }\n  }, [repository, selectedBranch, loadStagingGroundData, onStagingFilesChange]);\n\n  // Validate staging ground\n  const validateStagingGround = async (stagingGroundData) => {\n    if (!stagingGroundData || stagingGroundData.files.length === 0) {\n      setValidation(null);\n      return;\n    }\n\n    try {\n      const validationResult = await dakComplianceService.validateStagingGround(stagingGroundData);\n      setValidation(validationResult);\n    } catch (err) {\n      console.error('Error validating staging ground:', err);\n      setValidation(null);\n    }\n  };\n\n  // Handle saving changes\n  const handleSave = () => {\n    if (!hasWriteAccess) {\n      alert('You need write permissions to save changes to this repository.');\n      return;\n    }\n    \n    setShowSaveDialog(true);\n  };\n\n  // Handle successful save\n  const handleSaveSuccess = (result) => {\n    setShowSaveDialog(false);\n    \n    // Clear staging ground after successful save\n    stagingGroundService.clearStagingGround();\n    \n    // Show success message\n    alert(`Changes saved successfully! Commit: ${result.sha.substring(0, 7)}`);\n  };\n\n  // Handle clearing staging ground\n  const handleClearChanges = () => {\n    if (window.confirm('Are you sure you want to discard all changes? This cannot be undone.')) {\n      stagingGroundService.clearStagingGround();\n    }\n  };\n\n  // Handle removing individual file\n  const handleRemoveFile = (filePath) => {\n    if (window.confirm(`Are you sure you want to remove \"${filePath}\" from staging? This cannot be undone.`)) {\n      stagingGroundService.removeFile(filePath);\n    }\n  };\n\n  // Get validation summary for display\n  const getValidationSummary = () => {\n    if (!validation) {\n      return { error: 0, warning: 0, info: 0, canSave: true };\n    }\n    return dakComplianceService.getValidationSummary(validation);\n  };\n\n  // Format file list for display\n  const formatFileList = () => {\n    if (!stagingGround || !stagingGround.files) return [];\n    \n    return stagingGround.files.map(file => ({\n      path: file.path,\n      size: new Blob([file.content]).size,\n      lastModified: file.timestamp\n    }));\n  };\n\n  const validationSummary = getValidationSummary();\n  const hasChanges = stagingGround && stagingGround.files.length > 0;\n  const filesCount = stagingGround ? stagingGround.files.length : 0;\n\n  return (\n    <div className=\"staging-ground-section\">\n      <div className=\"section-header\">\n        <h3 className=\"section-title\">\n          <span className=\"section-icon\">📝</span>\n          Staging Ground\n          {hasChanges && (\n            <span className=\"files-badge\">\n              {filesCount} file{filesCount !== 1 ? 's' : ''}\n            </span>\n          )}\n        </h3>\n        <p className=\"section-description\">\n          Changes made through DAK component editors are staged here before being committed to the repository.\n          Review and commit your changes when ready.\n        </p>\n      </div>\n\n      <div className=\"staging-content\">\n        {loading ? (\n          <div className=\"loading-indicator\">\n            <span className=\"loading-spinner\">⏳</span>\n            Loading staging ground...\n          </div>\n        ) : error ? (\n          <div className=\"error-message\">\n            <span className=\"error-icon\">⚠️</span>\n            {error}\n          </div>\n        ) : (\n          <>\n            {/* Staging Status Bar */}\n            <div className=\"staging-status-bar\">\n              <div className=\"status-indicators\">\n                {/* Validation stoplight */}\n                <div className=\"validation-stoplight\">\n                  <div className={`stoplight-indicator error ${validationSummary.error === 0 ? 'lit' : ''}`}>\n                    🔴\n                    {validationSummary.error > 0 && (\n                      <span className=\"indicator-badge\">{validationSummary.error}</span>\n                    )}\n                  </div>\n                  <div className={`stoplight-indicator warning ${validationSummary.warning === 0 ? 'lit' : ''}`}>\n                    🟡\n                    {validationSummary.warning > 0 && (\n                      <span className=\"indicator-badge\">{validationSummary.warning}</span>\n                    )}\n                  </div>\n                  <div className={`stoplight-indicator info ${validationSummary.info === 0 ? 'lit' : ''}`}>\n                    🟢\n                    {validationSummary.info > 0 && (\n                      <span className=\"indicator-badge\">{validationSummary.info}</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Save button */}\n              <button\n                className={`save-btn ${!hasChanges || !validationSummary.canSave ? 'disabled' : ''}`}\n                onClick={handleSave}\n                disabled={!hasChanges || !hasWriteAccess}\n                title={\n                  !hasChanges ? 'No changes to save' :\n                  !hasWriteAccess ? 'Write access required' :\n                  !validationSummary.canSave ? 'Fix validation errors first' :\n                  'Save changes to repository'\n                }\n              >\n                💾 Save Changes\n              </button>\n            </div>\n\n            {/* Changed Files Section */}\n            <div className=\"staging-files-section\">\n              <h4>📁 Changed Files</h4>\n              {hasChanges ? (\n                <div className=\"changed-files\">\n                  {formatFileList().map((file, index) => (\n                    <div key={index} className=\"file-item\">\n                      <div className=\"file-info\">\n                        <span className=\"file-icon\">📄</span>\n                        <span className=\"file-path\">{file.path}</span>\n                      </div>\n                      <div className=\"file-meta\">\n                        <span className=\"file-size\">\n                          {(file.size / 1024).toFixed(1)} KB\n                        </span>\n                        <span className=\"file-time\">\n                          {new Date(file.lastModified).toLocaleTimeString()}\n                        </span>\n                        <button\n                          className=\"remove-file-btn\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleRemoveFile(file.path);\n                          }}\n                          title={`Remove ${file.path} from staging`}\n                        >\n                          🗑️\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                  <div className=\"file-actions\">\n                    <button\n                      className=\"action-btn secondary small\"\n                      onClick={handleClearChanges}\n                    >\n                      🗑️ Clear All Changes\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"no-changes\">\n                  <p>No changes in staging ground</p>\n                  <p className=\"help-text\">\n                    Changes made through DAK component editors will appear here before being saved to the repository.\n                  </p>\n                </div>\n              )}\n            </div>\n\n            {/* Commit Message Preview */}\n            {hasChanges && stagingGround.message && (\n              <div className=\"commit-message-section\">\n                <h4>✍️ Commit Message</h4>\n                <div className=\"commit-preview\">\n                  <p>{stagingGround.message}</p>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n\n      {/* Save Dialog */}\n      <SaveDialog\n        isOpen={showSaveDialog}\n        onClose={() => setShowSaveDialog(false)}\n        stagingGround={stagingGround}\n        validation={validation}\n        repository={repository}\n        selectedBranch={selectedBranch}\n        hasWriteAccess={hasWriteAccess}\n        onSaveSuccess={handleSaveSuccess}\n      />\n    </div>\n  );\n};\n\nexport default StagingGround;","/**\n * SUSHI WebAssembly Service\n * \n * This service manages the loading and execution of SUSHI via WebAssembly.\n * It provides a bridge between the React application and the WASM module.\n * Optimized for memory efficiency and browser stability.\n */\n\nclass VirtualFileSystem {\n  constructor() {\n    this.files = new Map();\n    this.directories = new Set();\n    this.maxMemoryUsage = 20 * 1024 * 1024; // Reduced to 20MB limit\n    this.currentMemoryUsage = 0;\n  }\n\n  writeFile(path, content) {\n    // Normalize path\n    const normalizedPath = path.startsWith('/') ? path.substring(1) : path;\n    \n    // Check memory limits\n    const contentSize = new TextEncoder().encode(content).length;\n    if (this.currentMemoryUsage + contentSize > this.maxMemoryUsage) {\n      throw new Error(`Memory limit exceeded. Cannot store file ${normalizedPath} (${(contentSize / 1024 / 1024).toFixed(1)}MB)`);\n    }\n    \n    // Ensure parent directories exist\n    const pathParts = normalizedPath.split('/');\n    for (let i = 0; i < pathParts.length - 1; i++) {\n      const dirPath = pathParts.slice(0, i + 1).join('/');\n      this.directories.add(dirPath);\n    }\n    \n    // Store file content as Uint8Array for WASM compatibility\n    const encoder = new TextEncoder();\n    const data = encoder.encode(content);\n    \n    // Remove old file if exists to update memory usage\n    if (this.files.has(normalizedPath)) {\n      const oldData = this.files.get(normalizedPath);\n      this.currentMemoryUsage -= oldData.length;\n    }\n    \n    this.files.set(normalizedPath, data);\n    this.currentMemoryUsage += data.length;\n    \n    return true;\n  }\n\n  readFile(path) {\n    const normalizedPath = path.startsWith('/') ? path.substring(1) : path;\n    const data = this.files.get(normalizedPath);\n    \n    if (!data) {\n      return null;\n    }\n    \n    // Convert back to string for JavaScript consumption\n    const decoder = new TextDecoder();\n    return decoder.decode(data);\n  }\n\n  exists(path) {\n    const normalizedPath = path.startsWith('/') ? path.substring(1) : path;\n    return this.files.has(normalizedPath) || this.directories.has(normalizedPath);\n  }\n\n  listDirectory(path) {\n    const normalizedPath = path.startsWith('/') ? path.substring(1) : path;\n    const prefix = normalizedPath ? `${normalizedPath}/` : '';\n    \n    const items = [];\n    \n    // Add files\n    for (const filePath of this.files.keys()) {\n      if (filePath.startsWith(prefix)) {\n        const relativePath = filePath.substring(prefix.length);\n        if (!relativePath.includes('/')) { // Direct child only\n          items.push({\n            name: relativePath,\n            type: 'file',\n            path: filePath\n          });\n        }\n      }\n    }\n    \n    // Add directories\n    for (const dirPath of this.directories) {\n      if (dirPath.startsWith(prefix)) {\n        const relativePath = dirPath.substring(prefix.length);\n        if (!relativePath.includes('/')) { // Direct child only\n          items.push({\n            name: relativePath,\n            type: 'directory',\n            path: dirPath\n          });\n        }\n      }\n    }\n    \n    return items;\n  }\n\n  clear() {\n    this.files.clear();\n    this.directories.clear();\n    this.currentMemoryUsage = 0;\n  }\n\n  getMemoryUsage() {\n    return {\n      used: this.currentMemoryUsage,\n      limit: this.maxMemoryUsage,\n      percentage: (this.currentMemoryUsage / this.maxMemoryUsage) * 100\n    };\n  }\n}\n\nclass SushiWASMRunner {\n  constructor() {\n    this.wasmModule = null;\n    this.fs = new VirtualFileSystem();\n    this.isInitialized = false;\n    this.initializationPromise = null;\n  }\n\n  async initialize() {\n    if (this.isInitialized) {\n      return this.wasmModule;\n    }\n    \n    if (this.initializationPromise) {\n      return this.initializationPromise;\n    }\n    \n    this.initializationPromise = this._loadWasmModule();\n    return this.initializationPromise;\n  }\n\n  async _loadWasmModule() {\n    try {\n      // For now, we'll create a fallback implementation that uses the existing fsh-sushi\n      // dependency but in a browser-compatible way. This is a stepping stone to full WASM.\n      \n      // Import the SUSHI library dynamically to avoid build issues\n      const sushiModule = await this._importSushiLibrary();\n      \n      this.wasmModule = sushiModule;\n      this.isInitialized = true;\n      \n      return this.wasmModule;\n    } catch (error) {\n      console.error('Failed to load SUSHI WASM module:', error);\n      throw new Error(`SUSHI WASM initialization failed: ${error.message}`);\n    }\n  }\n\n  async _importSushiLibrary() {\n    // This is a bridge implementation that provides a WASM-like interface\n    // for future migration. For now, we avoid direct fsh-sushi imports\n    // due to Node.js dependency conflicts in browser environment.\n    \n    console.log('Creating fallback SUSHI implementation for browser environment');\n    \n    // Return a mock implementation with WASM-style interface\n    return {\n      ccall: this._createFallbackCCall.bind(this),\n      FS: {\n        writeFile: this.fs.writeFile.bind(this.fs),\n        readFile: this.fs.readFile.bind(this.fs),\n        exists: this.fs.exists.bind(this.fs)\n      }\n    };\n  }\n\n  _createFallbackCCall() {\n    return (functionName, returnType, paramTypes, params) => {\n      if (functionName === 'runSushi') {\n        return this._runFallbackCompilation(params[0]);\n      }\n      throw new Error(`Unsupported WASM function: ${functionName}`);\n    };\n  }\n\n  async _runFallbackCompilation(workspacePath) {\n    // Fallback implementation using the existing custom FSH parser\n    // This maintains the current functionality while providing WASM interface\n    \n    const outputFiles = [];\n    const errors = [];\n    const warnings = [];\n\n    try {\n      const fshFiles = this._getAllFshFiles();\n      const configContent = this.fs.readFile('sushi-config.yaml');\n      \n      let config = {\n        name: 'browser-generated-ig',\n        version: '1.0.0',\n        fhirVersion: '4.0.1',\n        canonical: 'http://example.org/fhir/ig/browser-generated'\n      };\n\n      if (configContent) {\n        try {\n          const yaml = await import('js-yaml');\n          config = yaml.default.load(configContent);\n        } catch (err) {\n          warnings.push(`Failed to parse sushi-config.yaml: ${err.message}`);\n        }\n      } else {\n        warnings.push('No sushi-config.yaml found, using default configuration');\n      }\n\n      // Use the existing FSH parsing logic from SushiRunner\n      for (const { content } of fshFiles) {\n        const definitions = this._extractFSHDefinitions(content);\n        \n        // Generate FHIR resources using the same logic as the current implementation\n        const resources = this._generateFHIRResources(definitions, config);\n        outputFiles.push(...resources);\n      }\n\n      // Return object directly instead of JSON string to avoid parsing issues\n      return {\n        success: true,\n        files: outputFiles,\n        errors: errors,\n        warnings: warnings\n      };\n\n    } catch (error) {\n      return {\n        success: false,\n        files: [],\n        errors: [error.message],\n        warnings: warnings\n      };\n    }\n  }\n\n  _getAllFshFiles() {\n    const fshFiles = [];\n    \n    // Recursively collect all .fsh files\n    const collectFiles = (path = '') => {\n      const items = this.fs.listDirectory(path);\n      \n      for (const item of items) {\n        if (item.type === 'file' && item.name.endsWith('.fsh')) {\n          const content = this.fs.readFile(item.path);\n          if (content) {\n            fshFiles.push({\n              path: item.path,\n              content: content\n            });\n          }\n        } else if (item.type === 'directory') {\n          collectFiles(item.path);\n        }\n      }\n    };\n\n    collectFiles('input/fsh');\n    return fshFiles;\n  }\n\n  _extractFSHDefinitions(content) {\n    // Reuse the existing FSH parsing logic from SushiRunner\n    const definitions = {\n      profiles: [],\n      instances: [],\n      valueSets: [],\n      codeSystems: [],\n      extensions: []\n    };\n    \n    const lines = content.split('\\n');\n    let currentDefinition = null;\n    let currentType = null;\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      \n      // Detect definition types\n      if (line.startsWith('Profile:')) {\n        currentType = 'profiles';\n        currentDefinition = {\n          name: line.substring(8).trim(),\n          type: 'Profile',\n          parent: null,\n          id: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      } else if (line.startsWith('Instance:')) {\n        currentType = 'instances';\n        currentDefinition = {\n          name: line.substring(9).trim(),\n          type: 'Instance',\n          instanceOf: null,\n          usage: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      } else if (line.startsWith('ValueSet:')) {\n        currentType = 'valueSets';\n        currentDefinition = {\n          name: line.substring(9).trim(),\n          type: 'ValueSet',\n          id: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      } else if (line.startsWith('CodeSystem:')) {\n        currentType = 'codeSystems';\n        currentDefinition = {\n          name: line.substring(11).trim(),\n          type: 'CodeSystem',\n          id: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      } else if (line.startsWith('Extension:')) {\n        currentType = 'extensions';\n        currentDefinition = {\n          name: line.substring(10).trim(),\n          type: 'Extension',\n          id: null,\n          title: null,\n          description: null,\n          rules: []\n        };\n      }\n      \n      // Parse properties\n      if (currentDefinition) {\n        if (line.startsWith('Parent:')) {\n          currentDefinition.parent = line.substring(7).trim();\n        } else if (line.startsWith('InstanceOf:')) {\n          currentDefinition.instanceOf = line.substring(11).trim();\n        } else if (line.startsWith('Usage:')) {\n          currentDefinition.usage = line.substring(6).trim();\n        } else if (line.startsWith('Id:')) {\n          currentDefinition.id = line.substring(3).trim();\n        } else if (line.startsWith('Title:')) {\n          currentDefinition.title = line.substring(6).trim().replace(/['\"]/g, '');\n        } else if (line.startsWith('Description:')) {\n          currentDefinition.description = line.substring(12).trim().replace(/['\"]/g, '');\n        } else if (line.startsWith('* ')) {\n          currentDefinition.rules.push(line.substring(2).trim());\n        }\n        \n        // If we hit a new definition or end of content, save current one\n        if ((line.includes(':') && !line.startsWith('* ') && \n             !line.startsWith('Parent:') && !line.startsWith('InstanceOf:') &&\n             !line.startsWith('Usage:') && !line.startsWith('Id:') &&\n             !line.startsWith('Title:') && !line.startsWith('Description:')) ||\n            i === lines.length - 1) {\n          \n          if (currentDefinition && currentType && currentDefinition.name) {\n            definitions[currentType].push(currentDefinition);\n          }\n          currentDefinition = null;\n          currentType = null;\n          i--; // Re-process this line for the new definition\n        }\n      }\n    }\n    \n    return definitions;\n  }\n\n  _generateFHIRResources(definitions, config) {\n    const resources = [];\n\n    // Generate StructureDefinitions from profiles\n    definitions.profiles.forEach(profile => {\n      const profileId = profile.id || profile.name.toLowerCase().replace(/\\s+/g, '-');\n      const structureDefinition = {\n        resourceType: 'StructureDefinition',\n        id: profileId,\n        url: `${config.canonical}/StructureDefinition/${profileId}`,\n        name: profile.name,\n        title: profile.title || profile.name,\n        status: 'draft',\n        fhirVersion: config.fhirVersion || '4.0.1',\n        kind: 'resource',\n        abstract: false,\n        type: profile.parent === 'Patient' ? 'Patient' : \n               profile.parent === 'Observation' ? 'Observation' :\n               profile.parent || 'DomainResource',\n        baseDefinition: `http://hl7.org/fhir/StructureDefinition/${profile.parent || 'DomainResource'}`,\n        derivation: 'constraint',\n        description: profile.description || `Profile for ${profile.name}`\n      };\n      \n      if (profile.rules.length > 0) {\n        structureDefinition.differential = {\n          element: profile.rules.map((rule, index) => ({\n            id: `${structureDefinition.type}.${rule.split(' ')[0]}`,\n            path: `${structureDefinition.type}.${rule.split(' ')[0]}`,\n            short: `Rule: ${rule}`\n          }))\n        };\n      }\n      \n      resources.push({\n        path: `StructureDefinition-${profileId}.json`,\n        content: JSON.stringify(structureDefinition, null, 2),\n        resourceType: 'StructureDefinition'\n      });\n    });\n\n    // Generate instances\n    definitions.instances.forEach(instance => {\n      const instanceId = instance.name.toLowerCase().replace(/\\s+/g, '-');\n      const resourceType = instance.instanceOf === 'Patient' ? 'Patient' :\n                         instance.instanceOf === 'Observation' ? 'Observation' :\n                         'Patient'; // Default fallback\n                         \n      const fhirInstance = {\n        resourceType: resourceType,\n        id: instanceId,\n        meta: {\n          profile: instance.instanceOf ? [`${config.canonical}/StructureDefinition/${instance.instanceOf}`] : undefined\n        }\n      };\n      \n      // Add basic properties based on resource type\n      if (resourceType === 'Patient') {\n        fhirInstance.name = [{\n          family: instance.name.split(' ').pop(),\n          given: instance.name.split(' ').slice(0, -1)\n        }];\n      }\n      \n      resources.push({\n        path: `${instanceId}.json`,\n        content: JSON.stringify(fhirInstance, null, 2),\n        resourceType: resourceType\n      });\n    });\n\n    // Generate ValueSets\n    definitions.valueSets.forEach(vs => {\n      const vsId = vs.id || vs.name.toLowerCase().replace(/\\s+/g, '-');\n      const valueSet = {\n        resourceType: 'ValueSet',\n        id: vsId,\n        url: `${config.canonical}/ValueSet/${vsId}`,\n        name: vs.name,\n        title: vs.title || vs.name,\n        status: 'draft',\n        description: vs.description || `ValueSet for ${vs.name}`,\n        compose: {\n          include: [{\n            system: 'http://example.org/codes',\n            concept: [\n              { code: 'example1', display: 'Example Code 1' },\n              { code: 'example2', display: 'Example Code 2' }\n            ]\n          }]\n        }\n      };\n      \n      resources.push({\n        path: `ValueSet-${vsId}.json`,\n        content: JSON.stringify(valueSet, null, 2),\n        resourceType: 'ValueSet'\n      });\n    });\n\n    // Generate CodeSystems\n    definitions.codeSystems.forEach(cs => {\n      const csId = cs.id || cs.name.toLowerCase().replace(/\\s+/g, '-');\n      const codeSystem = {\n        resourceType: 'CodeSystem',\n        id: csId,\n        url: `${config.canonical}/CodeSystem/${csId}`,\n        name: cs.name,\n        title: cs.title || cs.name,\n        status: 'draft',\n        content: 'complete',\n        description: cs.description || `CodeSystem for ${cs.name}`,\n        concept: [\n          { code: 'concept1', display: 'Concept 1' },\n          { code: 'concept2', display: 'Concept 2' }\n        ]\n      };\n      \n      resources.push({\n        path: `CodeSystem-${csId}.json`,\n        content: JSON.stringify(codeSystem, null, 2),\n        resourceType: 'CodeSystem'\n      });\n    });\n\n    return resources;\n  }\n\n  async runSushi(config, fshFiles) {\n    if (!this.isInitialized) {\n      await this.initialize();\n    }\n\n    // Clear previous files and check memory\n    this.fs.clear();\n    \n    // Check total size of input files\n    const totalSize = fshFiles.reduce((sum, file) => sum + (file.content?.length || 0), 0);\n    if (totalSize > 15 * 1024 * 1024) { // Reduced to 15MB limit\n      throw new Error(`Input files too large (${(totalSize / 1024 / 1024).toFixed(1)}MB). Consider processing fewer files at once.`);\n    }\n\n    try {\n      // Write configuration\n      if (config) {\n        const configYaml = typeof config === 'string' ? config : \n          (await import('js-yaml')).default.dump(config);\n        this.fs.writeFile('sushi-config.yaml', configYaml);\n      }\n\n      // Write FSH files with size validation\n      for (const file of fshFiles) {\n        const filePath = file.path || `input/fsh/${file.name}`;\n        \n        // Skip very large files to prevent crashes\n        if (file.content && file.content.length > 2 * 1024 * 1024) { // Reduced to 2MB per file\n          console.warn(`Skipping large file ${file.name} (${(file.content.length / 1024 / 1024).toFixed(1)}MB)`);\n          continue;\n        }\n        \n        this.fs.writeFile(filePath, file.content || '');\n      }\n\n      // Execute SUSHI via WASM interface\n      const result = this.wasmModule.ccall(\n        'runSushi',           // Function name\n        'string',             // Return type\n        ['string'],           // Parameter types\n        ['/workspace']        // Parameters\n      );\n\n      // Handle both JSON string and object returns\n      if (typeof result === 'string') {\n        return JSON.parse(result);\n      } else {\n        return result; // Already an object\n      }\n      \n    } catch (error) {\n      // Clear memory on error\n      this.fs.clear();\n      throw error;\n    }\n  }\n}\n\n// Singleton instance\nconst sushiWasmService = new SushiWASMRunner();\n\nexport default sushiWasmService;","/**\n * WebAssembly Loader Utility\n * \n * Provides utilities for loading and managing WebAssembly modules\n * with proper error handling and browser compatibility.\n */\n\nexport class WasmLoader {\n  constructor() {\n    this.loadedModules = new Map();\n    this.loadingPromises = new Map();\n  }\n\n  /**\n   * Load a WebAssembly module with caching\n   * @param {string} moduleName - Name of the module for caching\n   * @param {string|ArrayBuffer} source - URL to WASM file or ArrayBuffer\n   * @param {Object} imports - WebAssembly imports object\n   * @returns {Promise<WebAssembly.Instance>}\n   */\n  async loadModule(moduleName, source, imports = {}) {\n    // Check if already loaded\n    if (this.loadedModules.has(moduleName)) {\n      return this.loadedModules.get(moduleName);\n    }\n\n    // Check if currently loading\n    if (this.loadingPromises.has(moduleName)) {\n      return this.loadingPromises.get(moduleName);\n    }\n\n    // Start loading\n    const loadingPromise = this._loadModuleInternal(source, imports);\n    this.loadingPromises.set(moduleName, loadingPromise);\n\n    try {\n      const instance = await loadingPromise;\n      this.loadedModules.set(moduleName, instance);\n      this.loadingPromises.delete(moduleName);\n      return instance;\n    } catch (error) {\n      this.loadingPromises.delete(moduleName);\n      throw error;\n    }\n  }\n\n  async _loadModuleInternal(source, imports) {\n    let wasmBytes;\n\n    if (source instanceof ArrayBuffer) {\n      wasmBytes = source;\n    } else if (typeof source === 'string') {\n      // Load from URL\n      const response = await fetch(source);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch WASM module: ${response.statusText}`);\n      }\n      wasmBytes = await response.arrayBuffer();\n    } else {\n      throw new Error('Invalid WASM source: must be URL string or ArrayBuffer');\n    }\n\n    // Compile and instantiate\n    const module = await WebAssembly.compile(wasmBytes);\n    const instance = await WebAssembly.instantiate(module, imports);\n\n    return instance;\n  }\n\n  /**\n   * Check if WebAssembly is supported in this browser\n   * @returns {boolean}\n   */\n  static isSupported() {\n    return typeof WebAssembly === 'object' &&\n           typeof WebAssembly.instantiate === 'function';\n  }\n\n  /**\n   * Get information about WebAssembly support\n   * @returns {Object}\n   */\n  static getSupportInfo() {\n    const support = {\n      basic: typeof WebAssembly === 'object',\n      streaming: typeof WebAssembly.instantiateStreaming === 'function',\n      threads: typeof SharedArrayBuffer !== 'undefined',\n      simd: false // SIMD detection is more complex\n    };\n\n    // Check for SIMD support (simplified check)\n    try {\n      support.simd = typeof WebAssembly.v128 !== 'undefined';\n    } catch (e) {\n      support.simd = false;\n    }\n\n    return support;\n  }\n\n  /**\n   * Clear the module cache\n   */\n  clearCache() {\n    this.loadedModules.clear();\n    this.loadingPromises.clear();\n  }\n\n  /**\n   * Remove a specific module from cache\n   * @param {string} moduleName \n   */\n  unloadModule(moduleName) {\n    this.loadedModules.delete(moduleName);\n    this.loadingPromises.delete(moduleName);\n  }\n}\n\n/**\n * Performance monitor for comparing JavaScript vs WebAssembly execution\n */\nexport class WasmPerformanceMonitor {\n  constructor() {\n    this.metrics = new Map();\n  }\n\n  /**\n   * Start timing an operation\n   * @param {string} operationName \n   * @param {string} implementation - 'js' or 'wasm'\n   */\n  startTiming(operationName, implementation = 'unknown') {\n    const key = `${operationName}-${implementation}`;\n    this.metrics.set(key, {\n      startTime: performance.now(),\n      implementation,\n      operationName\n    });\n  }\n\n  /**\n   * End timing an operation\n   * @param {string} operationName \n   * @param {string} implementation \n   * @returns {number} Duration in milliseconds\n   */\n  endTiming(operationName, implementation = 'unknown') {\n    const key = `${operationName}-${implementation}`;\n    const metric = this.metrics.get(key);\n    \n    if (!metric) {\n      console.warn(`No timing started for ${key}`);\n      return 0;\n    }\n\n    const duration = performance.now() - metric.startTime;\n    metric.duration = duration;\n    metric.endTime = performance.now();\n\n    return duration;\n  }\n\n  /**\n   * Get performance comparison between implementations\n   * @param {string} operationName \n   * @returns {Object}\n   */\n  getComparison(operationName) {\n    const jsKey = `${operationName}-js`;\n    const wasmKey = `${operationName}-wasm`;\n    \n    const jsMetric = this.metrics.get(jsKey);\n    const wasmMetric = this.metrics.get(wasmKey);\n\n    if (!jsMetric || !wasmMetric) {\n      return null;\n    }\n\n    const speedup = jsMetric.duration / wasmMetric.duration;\n    \n    return {\n      javascript: {\n        duration: jsMetric.duration,\n        implementation: 'JavaScript'\n      },\n      webassembly: {\n        duration: wasmMetric.duration,\n        implementation: 'WebAssembly'\n      },\n      speedup: speedup,\n      winner: speedup > 1 ? 'WebAssembly' : 'JavaScript',\n      improvement: speedup > 1 ? \n        `${((speedup - 1) * 100).toFixed(1)}% faster` :\n        `${((1 - speedup) * 100).toFixed(1)}% slower`\n    };\n  }\n\n  /**\n   * Get all performance metrics\n   * @returns {Array}\n   */\n  getAllMetrics() {\n    return Array.from(this.metrics.values());\n  }\n\n  /**\n   * Clear all metrics\n   */\n  clear() {\n    this.metrics.clear();\n  }\n}\n\n// Singleton instances\nexport const wasmLoader = new WasmLoader();\nexport const performanceMonitor = new WasmPerformanceMonitor();","import React from 'react';\nimport './SushiErrorBoundary.css';\n\nclass SushiErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      hasError: false, \n      error: null, \n      errorInfo: null,\n      memoryInfo: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Capture memory information if available\n    const memoryInfo = performance.memory ? {\n      used: (performance.memory.usedJSHeapSize / 1024 / 1024).toFixed(1),\n      total: (performance.memory.totalJSHeapSize / 1024 / 1024).toFixed(1),\n      limit: (performance.memory.jsHeapSizeLimit / 1024 / 1024).toFixed(1)\n    } : null;\n\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n      memoryInfo: memoryInfo\n    });\n\n    // Log the error for debugging\n    console.error('SUSHI Error Boundary caught an error:', error, errorInfo);\n    \n    // Attempt memory cleanup\n    if (window.gc && typeof window.gc === 'function') {\n      try {\n        window.gc();\n      } catch (e) {\n        console.warn('Manual garbage collection failed:', e);\n      }\n    }\n  }\n\n  handleReset = () => {\n    this.setState({ \n      hasError: false, \n      error: null, \n      errorInfo: null,\n      memoryInfo: null\n    });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"sushi-error-boundary\">\n          <div className=\"error-content\">\n            <h3>🍣 SUSHI Processing Error</h3>\n            <p>\n              Something went wrong during FHIR Shorthand compilation. This may be due to:\n            </p>\n            <ul>\n              <li>Large FSH files causing memory issues</li>\n              <li>Complex FSH syntax that exceeded processing limits</li>\n              <li>Browser memory constraints</li>\n              <li>Incompatible FSH definitions</li>\n            </ul>\n\n            {this.state.memoryInfo && (\n              <div className=\"memory-info\">\n                <h4>💾 Memory Usage</h4>\n                <p>\n                  Used: {this.state.memoryInfo.used} MB / \n                  Total: {this.state.memoryInfo.total} MB / \n                  Limit: {this.state.memoryInfo.limit} MB\n                </p>\n              </div>\n            )}\n\n            <div className=\"error-suggestions\">\n              <h4>💡 Suggestions to Resolve</h4>\n              <ul>\n                <li>Try processing fewer FSH files at once</li>\n                <li>Split large FSH files into smaller ones</li>\n                <li>Refresh the page to clear memory</li>\n                <li>Use a browser with more available memory</li>\n                <li>Close other browser tabs to free up memory</li>\n              </ul>\n            </div>\n\n            <div className=\"error-actions\">\n              <button \n                onClick={this.handleReset}\n                className=\"reset-btn\"\n              >\n                🔄 Try Again\n              </button>\n              <button \n                onClick={() => window.location.reload()}\n                className=\"reload-btn\"\n              >\n                🚀 Reload Page\n              </button>\n            </div>\n\n            {process.env.NODE_ENV === 'development' && (\n              <details className=\"error-details\">\n                <summary>🔍 Technical Details (Development)</summary>\n                <div className=\"error-stack\">\n                  <h5>Error:</h5>\n                  <pre>{this.state.error && this.state.error.toString()}</pre>\n                  \n                  <h5>Component Stack:</h5>\n                  <pre>{this.state.errorInfo.componentStack}</pre>\n                  \n                  <h5>Error Stack:</h5>\n                  <pre>{this.state.error && this.state.error.stack}</pre>\n                </div>\n              </details>\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default SushiErrorBoundary;","import React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport githubService from '../services/githubService';\nimport sushiWasmService from '../services/sushiWasmService';\nimport { WasmLoader, performanceMonitor } from '../utils/wasmLoader';\nimport SushiErrorBoundary from './SushiErrorBoundary';\nimport './SushiRunner.css';\n\nconst SushiRunner = ({ repository, selectedBranch, profile, stagingFiles = [] }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [logs, setLogs] = useState([]);\n  const [generatedFiles, setGeneratedFiles] = useState([]);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [activeTab, setActiveTab] = useState('logs');\n  const [logLevelToggles, setLogLevelToggles] = useState({\n    info: true,\n    success: true,\n    warning: true,\n    error: true\n  });\n  const [searchText, setSearchText] = useState('');\n  const [sushiConfig, setSushiConfig] = useState(null);\n  const [fshFiles, setFshFiles] = useState([]);\n  const [includeStagingFiles, setIncludeStagingFiles] = useState(false);\n  const [error, setError] = useState(null);\n  const [executionMode, setExecutionMode] = useState('auto'); // 'auto', 'wasm', 'javascript'\n  const [wasmSupported, setWasmSupported] = useState(false);\n  const [wasmInitialized, setWasmInitialized] = useState(false);\n\n  const owner = repository.owner?.login || repository.full_name.split('/')[0];\n  const repoName = repository.name;\n\n  const addLog = useCallback((message, type = 'info') => {\n    setLogs(prev => [...prev, {\n      id: Date.now() + Math.random(),\n      message,\n      type,\n      timestamp: new Date().toISOString()\n    }]);\n  }, []);\n\n  // Check WebAssembly support on component mount\n  useEffect(() => {\n    const checkWasmSupport = async () => {\n      const supported = WasmLoader.isSupported();\n      setWasmSupported(supported);\n      \n      if (supported) {\n        addLog('🚀 WebAssembly support detected', 'success');\n        \n        // Initialize WASM service\n        try {\n          await sushiWasmService.initialize();\n          setWasmInitialized(true);\n          addLog('✅ SUSHI WebAssembly service initialized', 'success');\n        } catch (err) {\n          addLog(`⚠️ WASM initialization failed, falling back to JavaScript: ${err.message}`, 'warning');\n        }\n      } else {\n        addLog('⚠️ WebAssembly not supported, using JavaScript fallback', 'warning');\n      }\n    };\n\n    checkWasmSupport();\n  }, [addLog]);\n\n  const fetchRepositoryFiles = async () => {\n    try {\n      addLog('🔍 Fetching sushi-config.yaml...', 'info');\n      \n      let config = null;\n      try {\n        const configContent = await githubService.getFileContent(\n          owner, \n          repoName, \n          'sushi-config.yaml', \n          selectedBranch\n        );\n        config = configContent;\n        setSushiConfig(config);\n        addLog('✅ Found sushi-config.yaml', 'success');\n      } catch (err) {\n        addLog('⚠️ sushi-config.yaml not found in repository', 'warning');\n      }\n\n      addLog('🔍 Scanning input/fsh directory recursively...', 'info');\n      \n      const fshFiles = [];\n      try {\n        // Recursively scan for FSH files\n        const scanDirectory = async (dirPath, depth = 0) => {\n          const maxDepth = 5; // Prevent infinite recursion\n          if (depth > maxDepth) {\n            addLog(`⚠️ Maximum directory depth reached for ${dirPath}`, 'warning');\n            return;\n          }\n\n          try {\n            const contents = await githubService.getDirectoryContents(\n              owner,\n              repoName,\n              dirPath,\n              selectedBranch\n            );\n            \n            for (const item of contents) {\n              if (item.type === 'file' && item.name.endsWith('.fsh')) {\n                try {\n                  const fileContent = await githubService.getFileContent(\n                    owner,\n                    repoName,\n                    item.path,\n                    selectedBranch\n                  );\n                  fshFiles.push({\n                    name: item.name,\n                    path: item.path,\n                    content: fileContent\n                  });\n                  addLog(`📄 Found ${item.path}`, 'success');\n                } catch (err) {\n                  addLog(`❌ Failed to fetch ${item.path}: ${err.message}`, 'error');\n                }\n              } else if (item.type === 'dir') {\n                // Recursively scan subdirectories\n                addLog(`📁 Scanning subdirectory: ${item.path}`, 'info');\n                await scanDirectory(item.path, depth + 1);\n              }\n            }\n          } catch (err) {\n            addLog(`⚠️ Could not scan directory ${dirPath}: ${err.message}`, 'warning');\n          }\n        };\n\n        await scanDirectory('input/fsh');\n      } catch (err) {\n        addLog('⚠️ input/fsh directory not found or empty', 'warning');\n      }\n\n      setFshFiles(fshFiles);\n      addLog(`📊 Found ${fshFiles.length} FSH files in repository`, 'info');\n      \n      return { config, fshFiles };\n    } catch (err) {\n      addLog(`❌ Error fetching repository files: ${err.message}`, 'error');\n      throw err;\n    }\n  };\n\n  const integrateStagingFiles = (repoFshFiles) => {\n    // Start with repository files\n    const integratedFiles = [...repoFshFiles];\n    \n    // Override/add staging files\n    stagingFiles.forEach(stagingFile => {\n      if (stagingFile.path && stagingFile.path.endsWith('.fsh')) {\n        const fileName = stagingFile.path.split('/').pop();\n        const existingIndex = integratedFiles.findIndex(f => f.name === fileName);\n        \n        if (existingIndex >= 0) {\n          // Override existing file\n          integratedFiles[existingIndex] = {\n            ...integratedFiles[existingIndex],\n            content: stagingFile.content,\n            isFromStaging: true\n          };\n          addLog(`🔄 Overriding ${fileName} with staging version`, 'info');\n        } else {\n          // Add new file from staging\n          integratedFiles.push({\n            name: fileName,\n            path: stagingFile.path,\n            content: stagingFile.content,\n            isFromStaging: true\n          });\n          addLog(`➕ Adding ${fileName} from staging`, 'info');\n        }\n      }\n    });\n\n    return integratedFiles;\n  };\n\n  const runSushiInBrowser = async (config, files) => {\n    try {\n      // Determine execution mode\n      const useWasm = executionMode === 'wasm' || \n                     (executionMode === 'auto' && wasmSupported && wasmInitialized);\n      \n      const mode = useWasm ? 'WebAssembly' : 'JavaScript';\n      addLog(`🚀 Starting FHIR Shorthand compilation using ${mode}...`, 'info');\n      \n      // Start performance monitoring\n      performanceMonitor.startTiming('sushi-compilation', useWasm ? 'wasm' : 'js');\n      \n      let result;\n      \n      if (useWasm) {\n        addLog('🔧 Using WebAssembly SUSHI engine...', 'info');\n        result = await runSushiWithWasm(config, files);\n      } else {\n        addLog('⚙️ Using JavaScript fallback engine...', 'info');\n        result = await runSushiWithJavaScript(config, files);\n      }\n      \n      // End performance monitoring\n      const duration = performanceMonitor.endTiming('sushi-compilation', useWasm ? 'wasm' : 'js');\n      addLog(`⏱️ Compilation completed in ${duration.toFixed(2)}ms using ${mode}`, 'success');\n      \n      return result;\n      \n    } catch (err) {\n      addLog(`❌ Compilation failed: ${err.message}`, 'error');\n      \n      // If WASM failed, try JavaScript fallback\n      if (executionMode === 'auto' && wasmSupported) {\n        addLog('🔄 Attempting JavaScript fallback...', 'info');\n        try {\n          return await runSushiWithJavaScript(config, files);\n        } catch (fallbackErr) {\n          addLog(`❌ JavaScript fallback also failed: ${fallbackErr.message}`, 'error');\n          throw fallbackErr;\n        }\n      }\n      \n      throw err;\n    }\n  };\n\n  const runSushiWithWasm = async (config, files) => {\n    try {\n      addLog('📦 Preparing WebAssembly execution environment...', 'info');\n      \n      // Use the WASM service\n      const result = await sushiWasmService.runSushi(config, files);\n      \n      if (result.success) {\n        addLog(`✅ WebAssembly compilation successful`, 'success');\n        addLog(`📊 Generated ${result.files.length} FHIR resources`, 'success');\n        \n        // Convert WASM output to the expected format\n        const generatedResources = result.files.map(file => ({\n          type: file.resourceType,\n          filename: file.path,\n          content: file.content,\n          id: file.path.split('.')[0],\n          resourceType: file.resourceType\n        }));\n        \n        setGeneratedFiles(generatedResources);\n        \n        // Log any warnings\n        result.warnings.forEach(warning => {\n          addLog(`⚠️ ${warning}`, 'warning');\n        });\n        \n        return {\n          success: true,\n          resourceCount: result.files.length,\n          warnings: result.warnings,\n          errors: result.errors,\n          generatedFiles: generatedResources\n        };\n      } else {\n        // Log errors from WASM compilation\n        result.errors.forEach(error => {\n          addLog(`❌ ${error}`, 'error');\n        });\n        \n        throw new Error(`WASM compilation failed: ${result.errors.join(', ')}`);\n      }\n      \n    } catch (err) {\n      addLog(`💥 WebAssembly execution failed: ${err.message}`, 'error');\n      throw err;\n    }\n  };\n\n  const runSushiWithJavaScript = async (config, files) => {\n    try {\n      addLog('🚀 Starting FHIR Shorthand compilation...', 'info');\n      \n      addLog('ℹ️ Using JavaScript FSH processor with enhanced crash prevention', 'info');\n      \n      // Enhanced memory monitoring with much stricter limits\n      const checkMemoryUsage = () => {\n        if (performance.memory && performance.memory.usedJSHeapSize) {\n          const memoryMB = (performance.memory.usedJSHeapSize / 1024 / 1024);\n          const memoryLimitMB = 30; // Much stricter: 30MB hard limit\n          const memoryWarningMB = 20; // Warning at 20MB\n          \n          if (memoryMB > memoryLimitMB) {\n            throw new Error(`Memory limit exceeded: ${memoryMB.toFixed(1)}MB > ${memoryLimitMB}MB. Processing stopped to prevent browser crash.`);\n          }\n          \n          if (memoryMB > memoryWarningMB) {\n            addLog(`⚠️ High memory usage: ${memoryMB.toFixed(1)}MB (approaching ${memoryLimitMB}MB limit)`, 'warning');\n          }\n          \n          return memoryMB;\n        }\n        return 0;\n      };\n      \n      const initialMemory = checkMemoryUsage();\n      addLog(`💾 Initial memory usage: ${initialMemory.toFixed(1)} MB`, 'info');\n      \n      // Implement much stricter file size limits to prevent crashes\n      const maxFileSize = 1 * 1024 * 1024; // Reduced to 1MB per file\n      const maxTotalSize = 5 * 1024 * 1024; // Reduced to 5MB total\n      const maxFiles = 5; // Reduced to maximum 5 files to prevent crashes\n      \n      let totalSize = 0;\n      const validFiles = [];\n      \n      for (const file of files.slice(0, maxFiles)) {\n        const fileSize = file.content ? file.content.length : 0;\n        \n        if (fileSize > maxFileSize) {\n          addLog(`❌ Skipping ${file.name}: too large (${(fileSize / 1024 / 1024).toFixed(1)}MB > 1MB limit)`, 'error');\n          continue;\n        }\n        \n        if (totalSize + fileSize > maxTotalSize) {\n          addLog(`⚠️ Stopping file processing: total size limit reached (${(totalSize / 1024 / 1024).toFixed(1)}MB)`, 'warning');\n          break;\n        }\n        \n        totalSize += fileSize;\n        validFiles.push(file);\n      }\n      \n      if (files.length > maxFiles) {\n        addLog(`⚠️ Limited to first ${maxFiles} files (${files.length} total) to prevent browser crashes`, 'warning');\n      }\n      \n      addLog(`📊 Processing ${validFiles.length} files (${(totalSize / 1024 / 1024).toFixed(1)}MB total)`, 'info');\n      \n      addLog('📦 Loading YAML processing library...', 'info');\n      const yaml = await import('js-yaml');\n      addLog('✅ Libraries loaded successfully', 'success');\n      \n      addLog('📝 Processing configuration...', 'info');\n      \n      // Prepare configuration\n      let configObj = null;\n      if (config) {\n        try {\n          configObj = typeof config === 'string' ? yaml.default.load(config) : config;\n          addLog(`📋 Package: ${configObj.name || 'Unknown'}`, 'success');\n          addLog(`📋 Version: ${configObj.version || 'Unknown'}`, 'success');\n          addLog(`📋 FHIR Version: ${configObj.fhirVersion || 'Unknown'}`, 'success');\n        } catch (err) {\n          addLog(`⚠️ Could not parse config: ${err.message}`, 'warning');\n        }\n      } else {\n        // Create a default configuration\n        configObj = {\n          name: 'browser-generated-ig',\n          version: '1.0.0',\n          fhirVersion: '4.0.1',\n          id: 'browser.generated.ig',\n          canonical: 'http://example.org/fhir/ig/browser-generated',\n          status: 'draft'\n        };\n        addLog('📋 Using default configuration', 'info');\n      }\n\n      addLog(`🔍 Analyzing ${validFiles.length} FSH files with crash prevention...`, 'info');\n      \n      const generatedResources = [];\n      let processedCount = 0;\n      const maxResourcesPerFile = 3; // Reduced from 5 to 3 resources per file\n      const maxTotalResources = 15; // Reduced from 50 to 15 total resources\n      \n      // Process files one at a time to prevent memory buildup\n      const chunkSize = 1; // Process 1 file at a time for maximum safety\n      \n      for (let i = 0; i < validFiles.length; i += chunkSize) {\n        const chunk = validFiles.slice(i, i + chunkSize);\n        \n        for (const file of chunk) {\n          addLog(`📄 Processing ${file.name} (${processedCount + 1}/${validFiles.length})...`, 'info');\n          \n          // Enhanced memory check before processing each file\n          const currentMemory = checkMemoryUsage();\n          \n          // Stop if we're approaching memory limits (much stricter threshold)\n          if (currentMemory > 15) { // Reduced from 80MB to 15MB threshold\n            addLog(`⚠️ Stopping processing due to high memory usage (${currentMemory.toFixed(1)}MB)`, 'warning');\n            break;\n          }\n          \n          // Stop if we've reached resource limits\n          if (generatedResources.length >= maxTotalResources) {\n            addLog(`⚠️ Reached maximum resource limit (${maxTotalResources}), stopping processing`, 'warning');\n            break;\n          }\n          \n          const content = file.content;\n          \n          // Enhanced FSH parsing with stricter limits\n          const extractFSHDefinitions = (content) => {\n            try {\n              const definitions = {\n                profiles: [],\n                instances: [],\n                valueSets: [],\n                codeSystems: [],\n                extensions: []\n              };\n              \n              // Check for empty or invalid content\n              if (!content || typeof content !== 'string') {\n                return definitions;\n              }\n              \n              // Much stricter line processing limit to prevent memory issues\n              const lines = content.split('\\n');\n              const maxLinesToProcess = 500; // Reduced from 1k to 500 lines per file\n              \n              if (lines.length > maxLinesToProcess) {\n                addLog(`  ⚠️ File is large (${lines.length} lines). Processing first ${maxLinesToProcess} lines only.`, 'warning');\n              }\n              \n              const linesToProcess = lines.slice(0, Math.min(lines.length, maxLinesToProcess));\n              \n              let currentDefinition = null;\n              let currentType = null;\n              let definitionCount = 0;\n              const maxDefinitionsPerFile = 5; // Reduced from 10 to 5 definitions per file\n              \n              for (let i = 0; i < linesToProcess.length && definitionCount < maxDefinitionsPerFile; i++) {\n                const line = linesToProcess[i].trim();\n                \n                // Skip empty lines and comments to improve performance\n                if (!line || line.startsWith('//') || line.startsWith('/*')) {\n                  continue;\n                }\n                \n                // Detect definition types\n                if (line.startsWith('Profile:')) {\n                  if (definitionCount >= maxDefinitionsPerFile) break;\n                  currentType = 'profiles';\n                  currentDefinition = {\n                    name: line.substring(8).trim(),\n                    type: 'Profile',\n                    parent: null,\n                    id: null,\n                    title: null,\n                    description: null,\n                    rules: []\n                  };\n                  definitionCount++;\n                } else if (line.startsWith('Instance:')) {\n                  if (definitionCount >= maxDefinitionsPerFile) break;\n                  currentType = 'instances';\n                  currentDefinition = {\n                    name: line.substring(9).trim(),\n                    type: 'Instance',\n                    instanceOf: null,\n                    usage: null,\n                    title: null,\n                    description: null,\n                    rules: []\n                  };\n                  definitionCount++;\n                } else if (line.startsWith('ValueSet:')) {\n                  if (definitionCount >= maxDefinitionsPerFile) break;\n                  currentType = 'valueSets';\n                  currentDefinition = {\n                    name: line.substring(9).trim(),\n                    type: 'ValueSet',\n                    id: null,\n                    title: null,\n                    description: null,\n                    rules: []\n                  };\n                  definitionCount++;\n                } else if (line.startsWith('CodeSystem:')) {\n                  if (definitionCount >= maxDefinitionsPerFile) break;\n                  currentType = 'codeSystems';\n                  currentDefinition = {\n                    name: line.substring(11).trim(),\n                    type: 'CodeSystem',\n                    id: null,\n                    title: null,\n                    description: null,\n                    rules: []\n                  };\n                  definitionCount++;\n                } else if (line.startsWith('Extension:')) {\n                  if (definitionCount >= maxDefinitionsPerFile) break;\n                  currentType = 'extensions';\n                  currentDefinition = {\n                    name: line.substring(10).trim(),\n                    type: 'Extension',\n                    id: null,\n                    title: null,\n                    description: null,\n                    rules: []\n                  };\n                  definitionCount++;\n                }\n                \n                // Parse properties\n                if (currentDefinition) {\n                  if (line.startsWith('Parent:')) {\n                    currentDefinition.parent = line.substring(7).trim();\n                  } else if (line.startsWith('InstanceOf:')) {\n                    currentDefinition.instanceOf = line.substring(11).trim();\n                  } else if (line.startsWith('Usage:')) {\n                    currentDefinition.usage = line.substring(6).trim();\n                  } else if (line.startsWith('Id:')) {\n                    currentDefinition.id = line.substring(3).trim();\n                  } else if (line.startsWith('Title:')) {\n                    currentDefinition.title = line.substring(6).trim().replace(/['\"]/g, '');\n                  } else if (line.startsWith('Description:')) {\n                    currentDefinition.description = line.substring(12).trim().replace(/['\"]/g, '');\n                  } else if (line.startsWith('* ')) {\n                    // Much stricter rule limit to prevent memory issues\n                    if (currentDefinition.rules.length < 5) {\n                      currentDefinition.rules.push(line.substring(2).trim());\n                    }\n                  }\n                  \n                  // If we hit a new definition or end of content, save current one\n                  if ((line.includes(':') && !line.startsWith('* ') && \n                       !line.startsWith('Parent:') && !line.startsWith('InstanceOf:') &&\n                       !line.startsWith('Usage:') && !line.startsWith('Id:') &&\n                       !line.startsWith('Title:') && !line.startsWith('Description:')) ||\n                      i === linesToProcess.length - 1) {\n                    \n                    if (currentDefinition && currentType && currentDefinition.name) {\n                      definitions[currentType].push(currentDefinition);\n                    }\n                    currentDefinition = null;\n                    currentType = null;\n                    i--; // Re-process this line for the new definition\n                  }\n                }\n              }\n              \n              if (definitionCount >= maxDefinitionsPerFile) {\n                addLog(`  ⚠️ Limited to ${maxDefinitionsPerFile} definitions per file to prevent browser crashes`, 'warning');\n              }\n              \n              return definitions;\n            } catch (err) {\n              addLog(`  ❌ Error parsing FSH content: ${err.message}`, 'error');\n              return {\n                profiles: [],\n                instances: [],\n                valueSets: [],\n                codeSystems: [],\n                extensions: []\n              };\n            }\n          };\n          \n          const definitions = extractFSHDefinitions(content);\n          \n          // Generate FHIR resources with strict memory management\n          let resourcesFromThisFile = 0;\n          const remainingResourceSlots = maxTotalResources - generatedResources.length;\n          const maxFromThisFile = Math.min(maxResourcesPerFile, remainingResourceSlots);\n          \n          // Process profiles with strict limits\n          for (const profile of definitions.profiles.slice(0, Math.min(1, maxFromThisFile - resourcesFromThisFile))) {\n            if (resourcesFromThisFile >= maxFromThisFile) break;\n            \n            try {\n              const profileId = profile.id || profile.name.toLowerCase().replace(/\\s+/g, '-');\n              const structureDefinition = {\n                resourceType: 'StructureDefinition',\n                id: profileId,\n                url: `${configObj.canonical}/StructureDefinition/${profileId}`,\n                name: profile.name,\n                title: profile.title || profile.name,\n                status: 'draft',\n                fhirVersion: configObj.fhirVersion || '4.0.1',\n                kind: 'resource',\n                abstract: false,\n                type: profile.parent === 'Patient' ? 'Patient' : \n                       profile.parent === 'Observation' ? 'Observation' :\n                       profile.parent || 'DomainResource',\n                baseDefinition: `http://hl7.org/fhir/StructureDefinition/${profile.parent || 'DomainResource'}`,\n                derivation: 'constraint',\n                description: profile.description || `Profile for ${profile.name}`\n              };\n              \n              // Limit differential elements to prevent memory issues\n              if (profile.rules.length > 0) {\n                structureDefinition.differential = {\n                  element: profile.rules.slice(0, 2).map((rule, index) => ({ // Reduced to 2 elements max\n                    id: `${structureDefinition.type}.${rule.split(' ')[0]}`,\n                    path: `${structureDefinition.type}.${rule.split(' ')[0]}`,\n                    short: `Rule: ${rule}`\n                  }))\n                };\n              }\n              \n              generatedResources.push({\n                type: 'StructureDefinition',\n                filename: `StructureDefinition-${profileId}.json`,\n                content: JSON.stringify(structureDefinition, null, 2),\n                id: profileId,\n                name: profile.name,\n                title: structureDefinition.title,\n                url: structureDefinition.url\n              });\n              \n              resourcesFromThisFile++;\n              addLog(`  📊 Generated StructureDefinition: ${profile.name}`, 'success');\n            } catch (err) {\n              addLog(`  ❌ Error generating StructureDefinition for ${profile.name}: ${err.message}`, 'error');\n            }\n          }\n          \n          // Process instances with strict limits\n          for (const instance of definitions.instances.slice(0, Math.min(1, maxFromThisFile - resourcesFromThisFile))) {\n            if (resourcesFromThisFile >= maxFromThisFile) break;\n            \n            try {\n              const instanceId = instance.name.toLowerCase().replace(/\\s+/g, '-');\n              const resourceType = instance.instanceOf === 'Patient' ? 'Patient' :\n                                 instance.instanceOf === 'Observation' ? 'Observation' :\n                                 'Patient'; // Default fallback\n                                 \n              const fhirInstance = {\n                resourceType: resourceType,\n                id: instanceId,\n                meta: {\n                  profile: instance.instanceOf ? [`${configObj.canonical}/StructureDefinition/${instance.instanceOf}`] : undefined\n                }\n              };\n              \n              // Add minimal properties to reduce memory usage\n              if (resourceType === 'Patient') {\n                fhirInstance.name = [{\n                  family: instance.name.split(' ').pop(),\n                  given: instance.name.split(' ').slice(0, -1)\n                }];\n              }\n              \n              generatedResources.push({\n                type: resourceType,\n                filename: `${instanceId}.json`,\n                content: JSON.stringify(fhirInstance, null, 2),\n                id: instanceId,\n                resourceType: resourceType\n              });\n              \n              resourcesFromThisFile++;\n              addLog(`  📊 Generated ${resourceType} instance: ${instance.name}`, 'success');\n            } catch (err) {\n              addLog(`  ❌ Error generating instance for ${instance.name}: ${err.message}`, 'error');\n            }\n          }\n          \n          // Process ValueSets and CodeSystems with even stricter limits\n          for (const vs of definitions.valueSets.slice(0, Math.min(1, maxFromThisFile - resourcesFromThisFile))) {\n            if (resourcesFromThisFile >= maxFromThisFile) break;\n            \n            try {\n              const vsId = vs.id || vs.name.toLowerCase().replace(/\\s+/g, '-');\n              const valueSet = {\n                resourceType: 'ValueSet',\n                id: vsId,\n                url: `${configObj.canonical}/ValueSet/${vsId}`,\n                name: vs.name,\n                title: vs.title || vs.name,\n                status: 'draft',\n                description: vs.description || `ValueSet for ${vs.name}`,\n                compose: {\n                  include: [{\n                    system: 'http://example.org/codes',\n                    concept: [\n                      { code: 'example1', display: 'Example Code 1' }\n                    ]\n                  }]\n                }\n              };\n              \n              generatedResources.push({\n                type: 'ValueSet',\n                filename: `ValueSet-${vsId}.json`,\n                content: JSON.stringify(valueSet, null, 2),\n                id: vsId,\n                name: vs.name,\n                title: valueSet.title,\n                url: valueSet.url\n              });\n              \n              resourcesFromThisFile++;\n              addLog(`  📊 Generated ValueSet: ${vs.name}`, 'success');\n            } catch (err) {\n              addLog(`  ❌ Error generating ValueSet for ${vs.name}: ${err.message}`, 'error');\n            }\n          }\n          \n          if (file.isFromStaging) {\n            addLog(`  🏗️ File from staging ground`, 'info');\n          }\n          \n          processedCount++;\n          \n          // Clear file content from memory immediately after processing\n          file.content = null;\n          \n          // Force garbage collection more frequently\n          if (window.gc && typeof window.gc === 'function') {\n            window.gc();\n          }\n        }\n        \n        // Yield control for longer periods between chunks to prevent blocking\n        await new Promise(resolve => setTimeout(resolve, 200)); // Increased to 200ms delay between files\n        \n        // Enhanced memory monitoring after each file\n        const memoryAfterChunk = checkMemoryUsage();\n        addLog(`💾 Memory after file: ${memoryAfterChunk.toFixed(1)} MB (processed ${Math.min(i + chunkSize, validFiles.length)}/${validFiles.length})`, 'info');\n        \n        // Break if memory is getting too high (much lower threshold)\n        if (memoryAfterChunk > 20) {\n          addLog(`⚠️ Stopping processing due to high memory usage`, 'warning');\n          break;\n        }\n      }\n\n      // Set generated files\n      setGeneratedFiles(generatedResources);\n      \n      // Final memory check\n      const finalMemory = checkMemoryUsage();\n      addLog(`💾 Final memory usage: ${finalMemory.toFixed(1)} MB`, 'info');\n      \n      addLog('✨ FSH compilation completed with crash prevention!', 'success');\n      addLog(`📦 Generated ${generatedResources.length} FHIR resources total (limited for stability)`, 'success');\n      \n      // Check for staging files\n      const stagingCount = validFiles.filter(f => f.isFromStaging).length;\n      if (stagingCount > 0) {\n        addLog(`🏗️ ${stagingCount} file(s) from staging ground included`, 'info');\n      }\n      \n      // Handle edge cases\n      if (validFiles.length === 0) {\n        addLog('⚠️ No FSH files found or all files too large to process safely', 'warning');\n      }\n      \n      if (!config) {\n        addLog('⚠️ No sushi-config.yaml found - used default configuration', 'warning');\n      }\n      \n      // Safety warnings\n      if (generatedResources.length >= maxTotalResources) {\n        addLog(`⚠️ Output limited to ${maxTotalResources} resources to prevent browser crashes`, 'warning');\n      }\n      \n      if (validFiles.length < files.length) {\n        addLog(`⚠️ ${files.length - validFiles.length} files skipped due to size limits`, 'warning');\n      }\n\n      return {\n        success: true,\n        resourceCount: generatedResources.length,\n        warnings: [],\n        errors: [],\n        generatedFiles: generatedResources\n      };\n      \n    } catch (err) {\n      addLog(`❌ Compilation failed: ${err.message}`, 'error');\n      \n      // Log additional error details if available\n      if (err.stack) {\n        console.error('Compilation error stack:', err.stack);\n      }\n      \n      throw err;\n    }\n  };\n\n  const handleRunSushi = async (withStagingFiles = false) => {\n    setIsRunning(true);\n    setShowModal(true);\n    setLogs([]);\n    setGeneratedFiles([]);\n    setActiveTab('logs');\n    setError(null);\n    setIncludeStagingFiles(withStagingFiles);\n\n    try {\n      addLog('🏁 Starting SUSHI client-side execution...', 'info');\n      \n      if (withStagingFiles && stagingFiles.length > 0) {\n        addLog(`🗂️ Including ${stagingFiles.length} staging files`, 'info');\n      }\n\n      // Fetch repository files\n      const { config, fshFiles: repoFiles } = await fetchRepositoryFiles();\n      \n      // Integrate staging files if requested\n      const finalFiles = withStagingFiles ? \n        integrateStagingFiles(repoFiles) : \n        repoFiles;\n\n      if (withStagingFiles) {\n        addLog(`📊 Final file count: ${finalFiles.length} FSH files`, 'info');\n      }\n\n      // Run SUSHI\n      await runSushiInBrowser(config, finalFiles);\n      \n      addLog('🎉 SUSHI execution completed successfully!', 'success');\n      \n    } catch (err) {\n      setError(err.message);\n      addLog(`💥 Execution failed: ${err.message}`, 'error');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const toggleLogLevel = useCallback((level) => {\n    setLogLevelToggles(prev => ({\n      ...prev,\n      [level]: !prev[level]\n    }));\n  }, []);\n\n  const clearLogs = useCallback(() => {\n    setLogs([]);\n    setGeneratedFiles([]);\n    setActiveTab('logs');\n    setLogLevelToggles({\n      info: true,\n      success: true,\n      warning: true,\n      error: true\n    });\n    setSearchText('');\n  }, []);\n\n  const copyAllLogs = useCallback(async () => {\n    const logText = logs.map(log => \n      `[${new Date(log.timestamp).toLocaleTimeString()}] ${log.message}`\n    ).join('\\n');\n    \n    try {\n      await navigator.clipboard.writeText(logText);\n    } catch (err) {\n      console.error('Failed to copy logs:', err);\n    }\n  }, [logs]);\n\n  const copyLogMessage = useCallback(async (message) => {\n    try {\n      await navigator.clipboard.writeText(message);\n    } catch (err) {\n      console.error('Failed to copy log message:', err);\n    }\n  }, []);\n\n  // Function to detect and create links for files mentioned in log messages\n  const parseLogMessage = useCallback((message, logId) => {\n    // More precise regex to find valid file paths - must be preceded by whitespace or start of line\n    // and must be a complete path (not part of a longer word)\n    const filePathRegex = /(?:^|\\s)((?:input\\/fsh\\/[a-zA-Z0-9_/-]*\\/)?[a-zA-Z0-9_.-]+\\.(?:fsh|yaml|yml|json))(?=\\s|$|[.,!])/g;\n    const matches = [...message.matchAll(filePathRegex)];\n    \n    if (matches.length === 0) {\n      return <span>{message}</span>;\n    }\n    \n    let lastIndex = 0;\n    const elements = [];\n    let elementCounter = 0; // Add counter for unique keys\n    \n    matches.forEach((match, index) => {\n      const fullMatch = match[0];\n      const filePath = match[1];\n      const matchIndex = match.index;\n      \n      // Add text before the match\n      if (matchIndex > lastIndex) {\n        elements.push(\n          <span key={`${logId}-text-${elementCounter++}`}>\n            {message.substring(lastIndex, matchIndex)}\n          </span>\n        );\n      }\n      \n      // Add the leading whitespace if present\n      const leadingWhitespace = fullMatch.substring(0, fullMatch.indexOf(filePath));\n      if (leadingWhitespace) {\n        elements.push(\n          <span key={`${logId}-ws-${elementCounter++}`}>\n            {leadingWhitespace}\n          </span>\n        );\n      }\n      \n      // Determine link type based on file location and validate the file exists\n      const createFileLink = (path, text, keyIndex) => {\n        // Check if file exists in our known file lists to avoid creating invalid links\n        const isKnownRepoFile = fshFiles.some(f => f.path === path);\n        const isFromStaging = stagingFiles.some(f => f.path && (f.path === path || f.path.endsWith(`/${path.split('/').pop()}`)));\n        const isSushiConfig = path === 'sushi-config.yaml';\n        \n        // Only create links for files we know exist\n        if (!isKnownRepoFile && !isFromStaging && !isSushiConfig) {\n          // File not found in our known files, return as plain text\n          return (\n            <span key={`${logId}-text-${keyIndex}`} className=\"file-mention\">\n              {text}\n            </span>\n          );\n        }\n        \n        if (isFromStaging) {\n          // Link to staging ground\n          return (\n            <span key={`${logId}-staging-${keyIndex}`} className=\"file-link staging-link\" title=\"File from Staging Ground\">\n              📝 {text}\n            </span>\n          );\n        } else if (path.startsWith('input/fsh/')) {\n          // Determine DAK component based on directory structure\n          const getDakComponentLink = (fshPath) => {\n            const pathParts = fshPath.split('/');\n            if (pathParts.length > 2) {\n              const subDir = pathParts[2];\n              switch (subDir) {\n                case 'profiles':\n                  return { component: 'Profiles', icon: '👤' };\n                case 'examples':\n                  return { component: 'Examples', icon: '📋' };\n                case 'valuesets':\n                  return { component: 'ValueSets', icon: '📊' };\n                case 'codesystems':\n                  return { component: 'CodeSystems', icon: '🔢' };\n                case 'extensions':\n                  return { component: 'Extensions', icon: '🔧' };\n                default:\n                  return { component: 'FSH Files', icon: '📄' };\n              }\n            }\n            return { component: 'FSH Files', icon: '📄' };\n          };\n          \n          const dakInfo = getDakComponentLink(path);\n          return (\n            <span key={`${logId}-dak-${keyIndex}`} className=\"file-link dak-link\" title={`View in DAK ${dakInfo.component}`}>\n              {dakInfo.icon} {text}\n            </span>\n          );\n        } else {\n          // Link to GitHub source for valid repository files\n          const githubUrl = `https://github.com/${owner}/${repoName}/blob/${selectedBranch}/${path}`;\n          return (\n            <a \n              key={`${logId}-github-${keyIndex}`}\n              href={githubUrl} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\" \n              className=\"file-link github-link\"\n              title=\"Open in GitHub\"\n            >\n              🔗 {text}\n            </a>\n          );\n        }\n      };\n      \n      elements.push(createFileLink(filePath, filePath, elementCounter++));\n      lastIndex = matchIndex + fullMatch.length;\n    });\n    \n    // Add remaining text\n    if (lastIndex < message.length) {\n      elements.push(\n        <span key={`${logId}-text-end-${elementCounter++}`}>\n          {message.substring(lastIndex)}\n        </span>\n      );\n    }\n    \n    return <span>{elements}</span>;\n  }, [owner, repoName, selectedBranch, stagingFiles, fshFiles]);\n\n  // Optimized filtered logs with useMemo to prevent unnecessary re-computations\n  const filteredLogs = useMemo(() => {\n    return logs.filter(log => {\n      // Filter by log level toggles\n      const isLevelEnabled = logLevelToggles[log.type];\n      \n      // Filter by search text\n      const matchesSearch = searchText === '' || \n        log.message.toLowerCase().includes(searchText.toLowerCase());\n      \n      return isLevelEnabled && matchesSearch;\n    });\n  }, [logs, logLevelToggles, searchText]);\n\n  // Separate component for log controls to prevent re-renders\n  const LogControls = React.memo(({ \n    logLevelToggles, \n    onToggleLogLevel, \n    searchText, \n    onSearchChange, \n    filteredCount, \n    totalCount \n  }) => {\n    const handleSearchChange = useCallback((e) => {\n      onSearchChange(e.target.value);\n    }, [onSearchChange]);\n\n    return (\n      <div className=\"log-controls\">\n        <div className=\"log-level-toggles\">\n          <label className=\"toggle-group-label\">Show levels:</label>\n          <div className=\"toggle-buttons\">\n            {[\n              { key: 'info', label: 'Info', icon: 'ℹ️' },\n              { key: 'success', label: 'Success', icon: '✅' },\n              { key: 'warning', label: 'Warning', icon: '⚠️' },\n              { key: 'error', label: 'Error', icon: '❌' }\n            ].map(({ key, label, icon }) => (\n              <button\n                key={key}\n                className={`log-toggle-btn ${logLevelToggles[key] ? 'active' : 'inactive'}`}\n                onClick={() => onToggleLogLevel(key)}\n                title={`Toggle ${label} messages`}\n              >\n                {icon} {label}\n              </button>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"log-search-group\">\n          <label htmlFor=\"log-search\">Search logs:</label>\n          <input\n            id=\"log-search\"\n            type=\"text\"\n            value={searchText}\n            onChange={handleSearchChange}\n            placeholder=\"Search log messages...\"\n            className=\"log-search-input\"\n          />\n        </div>\n        \n        <div className=\"log-stats\">\n          {searchText || Object.values(logLevelToggles).some(v => !v) ? (\n            <span>Showing {filteredCount} of {totalCount} logs</span>\n          ) : (\n            <span>{totalCount} logs</span>\n          )}\n        </div>\n      </div>\n    );\n  });\n\n  const handleSearchChange = useCallback((value) => {\n    setSearchText(value);\n  }, []);\n\n  const viewFile = useCallback((file) => {\n    setSelectedFile(file);\n    setShowFileViewer(true);\n  }, []);\n\n  const closeFileViewer = useCallback(() => {\n    setShowFileViewer(false);\n    setSelectedFile(null);\n  }, []);\n\n  const getResourceTypeIcon = (type) => {\n    switch (type) {\n      case 'StructureDefinition': return '🏗️';\n      case 'Patient': return '👤';\n      case 'ValueSet': return '📊';\n      case 'CodeSystem': return '🔢';\n      case 'Organization': return '🏢';\n      case 'Practitioner': return '👨‍⚕️';\n      case 'Observation': return '📋';\n      default: return '📄';\n    }\n  };\n\n  const FileViewerModal = () => {\n    if (!selectedFile) return null;\n\n    return (\n      <div className=\"file-viewer-overlay\">\n        <div className=\"file-viewer-modal\">\n          <div className=\"file-viewer-header\">\n            <h3>\n              {getResourceTypeIcon(selectedFile.type)} {selectedFile.filename}\n            </h3>\n            <div className=\"file-viewer-actions\">\n              <button\n                onClick={() => navigator.clipboard.writeText(selectedFile.content)}\n                className=\"copy-file-btn\"\n                title=\"Copy file content to clipboard\"\n              >\n                📋 Copy\n              </button>\n              <button\n                onClick={closeFileViewer}\n                className=\"close-file-viewer-btn\"\n              >\n                ✕\n              </button>\n            </div>\n          </div>\n          <div className=\"file-viewer-content\">\n            <SyntaxHighlighter\n              language=\"json\"\n              style={oneLight}\n              showLineNumbers={true}\n              wrapLines={true}\n              customStyle={{\n                fontSize: '14px',\n                lineHeight: '1.4',\n                maxHeight: '70vh',\n                overflow: 'auto'\n              }}\n            >\n              {selectedFile.content}\n            </SyntaxHighlighter>\n          </div>\n          <div className=\"file-viewer-footer\">\n            <span className=\"file-info\">\n              Resource Type: {selectedFile.type} | \n              Size: {(selectedFile.content.length / 1024).toFixed(1)} KB\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const LogModal = () => (\n    <div className=\"sushi-modal-overlay\">\n      <div className=\"sushi-modal\">\n        <div className=\"sushi-modal-header\">\n          <h3>\n            🍣 SUSHI Client-Side Execution \n            {includeStagingFiles && <span className=\"staging-badge\">+ Staging</span>}\n          </h3>\n          <div className=\"modal-actions\">\n            <button \n              onClick={copyAllLogs}\n              className=\"copy-all-btn\"\n              disabled={logs.length === 0}\n              title=\"Copy all logs to clipboard\"\n            >\n              📋 Copy All\n            </button>\n            <button \n              onClick={clearLogs}\n              className=\"clear-logs-btn\"\n              disabled={isRunning}\n            >\n              🗑️ Clear\n            </button>\n            <button \n              onClick={() => setShowModal(false)}\n              className=\"close-modal-btn\"\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n        \n        <LogControls\n          logLevelToggles={logLevelToggles}\n          onToggleLogLevel={toggleLogLevel}\n          searchText={searchText}\n          onSearchChange={handleSearchChange}\n          filteredCount={filteredLogs.length}\n          totalCount={logs.length}\n        />\n        \n        {generatedFiles.length > 0 && (\n          <div className=\"modal-section-toggle\">\n            <div className=\"toggle-options\">\n              <button \n                className={`toggle-btn ${activeTab === 'logs' ? 'active' : ''}`}\n                onClick={() => setActiveTab('logs')}\n              >\n                📄 Logs & Messages\n              </button>\n              <button \n                className={`toggle-btn ${activeTab === 'files' ? 'active' : ''}`}\n                onClick={() => setActiveTab('files')}\n              >\n                📦 Generated Resources\n              </button>\n            </div>\n            <div className=\"section-info\">\n              {activeTab === 'logs' ? (\n                <span className=\"info-text\">{logs.length} log entries • Use toggles to filter by level</span>\n              ) : (\n                <span className=\"info-text\">{generatedFiles.length} FHIR resources generated</span>\n              )}\n            </div>\n          </div>\n        )}\n        \n        <div className=\"sushi-modal-content\">\n          {(activeTab === 'logs' || generatedFiles.length === 0) && (\n            <div className=\"log-container\">\n              {filteredLogs.map(log => (\n                <div key={log.id} className={`log-entry log-${log.type}`}>\n                  <span className=\"log-timestamp\">\n                    {new Date(log.timestamp).toLocaleTimeString()}\n                  </span>\n                  <span className=\"log-message\">\n                    {parseLogMessage(log.message, log.id)}\n                  </span>\n                  <button \n                    onClick={() => copyLogMessage(log.message)}\n                    className=\"copy-log-btn\"\n                    title=\"Copy this message to clipboard\"\n                  >\n                    📋\n                  </button>\n                </div>\n              ))}\n              \n              {isRunning && (\n                <div className=\"log-entry log-running\">\n                  <span className=\"log-timestamp\">\n                    {new Date().toLocaleTimeString()}\n                  </span>\n                  <span className=\"log-message\">\n                    <span className=\"spinner\">⏳</span> Processing...\n                  </span>\n                  <div className=\"copy-log-btn-placeholder\"></div>\n                </div>\n              )}\n              \n              {filteredLogs.length === 0 && !isRunning && logs.length > 0 && (\n                <div className=\"log-placeholder\">\n                  No logs match the current filter criteria...\n                </div>\n              )}\n              \n              {logs.length === 0 && !isRunning && (\n                <div className=\"log-placeholder\">\n                  Logs will appear here during SUSHI execution...\n                </div>\n              )}\n              \n              {error && (\n                <div className=\"error-summary\">\n                  <h4>❌ Execution Error</h4>\n                  <p>{error}</p>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {activeTab === 'files' && generatedFiles.length > 0 && (\n            <div className=\"generated-files-container\">\n              <div className=\"generated-files-section\">\n                <h4>📦 Generated FHIR Resources ({generatedFiles.length})</h4>\n                <div className=\"generated-files-grid\">\n                  {generatedFiles.map((file, index) => (\n                    <div key={index} className=\"generated-file-card\">\n                      <div className=\"file-card-header\">\n                        <span className=\"file-icon\">{getResourceTypeIcon(file.type)}</span>\n                        <span className=\"file-name\">{file.filename}</span>\n                      </div>\n                      <div className=\"file-card-details\">\n                        <span className=\"file-type\">{file.type}</span>\n                        <span className=\"file-size\">\n                          {(file.content.length / 1024).toFixed(1)} KB\n                        </span>\n                      </div>\n                      <div className=\"file-card-actions\">\n                        <button\n                          onClick={() => viewFile(file)}\n                          className=\"view-file-btn\"\n                          title=\"View resource content\"\n                        >\n                          👁️ View\n                        </button>\n                        <button\n                          onClick={() => navigator.clipboard.writeText(file.content)}\n                          className=\"copy-file-btn\"\n                          title=\"Copy to clipboard\"\n                        >\n                          📋\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"fhir-viewer-suggestions\">\n                  <h5>💡 Enhanced FHIR Viewing Options</h5>\n                  <p>For better FHIR resource visualization, consider these viewers:</p>\n                  <ul>\n                    <li><strong>FHIR Tree Viewer:</strong> <code>npm install @types/fhir</code> + custom tree renderer</li>\n                    <li><strong>FHIR Path Viewer:</strong> <code>npm install fhirpath</code> for interactive querying</li>\n                    <li><strong>FHIR UI:</strong> <code>npm install @asymmetrik/fhir-kit-client</code> with UI components</li>\n                    <li><strong>HL7 FHIR Viewer:</strong> Integration with official HL7 FHIR viewers</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"sushi-modal-footer\">\n          <div className=\"execution-info\">\n            {isRunning ? (\n              <span className=\"status-running\">🔄 Running SUSHI...</span>\n            ) : logs.length > 0 ? (\n              <span className=\"status-complete\">✅ Execution complete</span>\n            ) : (\n              <span className=\"status-ready\">🍣 Ready to run SUSHI</span>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <SushiErrorBoundary>\n      <div className=\"sushi-runner-section\">\n        <div \n          className={`sushi-status-bar ${isExpanded ? 'expanded' : 'collapsed'}`}\n          onClick={() => setIsExpanded(!isExpanded)}\n        >\n          <div className=\"status-bar-header\">\n            <span className=\"status-icon\">🍣</span>\n            <span className=\"status-title\">SUSHI (FHIR Shorthand)</span>\n            <span className=\"expand-icon\">{isExpanded ? '▼' : '▶'}</span>\n          </div>\n          \n          {!isExpanded && (\n            <div className=\"status-summary\">\n              Client-side FHIR Implementation Guide compilation\n            </div>\n          )}\n        </div>\n\n        {isExpanded && (\n          <div className=\"sushi-controls\">\n            <div className=\"sushi-description\">\n              <p>\n                Run SUSHI (FHIR Shorthand) compilation directly in your browser to generate \n                FHIR Implementation Guide resources from FSH files.\n              </p>\n            </div>\n\n            <div className=\"execution-options\">\n              <div className=\"execution-mode-selector\">\n                <h4>⚙️ Execution Mode</h4>\n                <div className=\"mode-options\">\n                  <label className=\"mode-option\">\n                    <input \n                      type=\"radio\" \n                      name=\"executionMode\" \n                      value=\"auto\" \n                      checked={executionMode === 'auto'}\n                      onChange={(e) => setExecutionMode(e.target.value)}\n                    />\n                    <span className=\"mode-label\">\n                      🤖 Auto (WebAssembly when available)\n                      {wasmSupported && wasmInitialized && <span className=\"wasm-badge\">WASM Ready</span>}\n                    </span>\n                  </label>\n                  \n                  {wasmSupported && (\n                    <label className=\"mode-option\">\n                      <input \n                        type=\"radio\" \n                        name=\"executionMode\" \n                        value=\"wasm\" \n                        checked={executionMode === 'wasm'}\n                        onChange={(e) => setExecutionMode(e.target.value)}\n                        disabled={!wasmInitialized}\n                      />\n                      <span className=\"mode-label\">\n                        🚀 WebAssembly (High Performance)\n                        {!wasmInitialized && <span className=\"loading-badge\">Initializing...</span>}\n                      </span>\n                    </label>\n                  )}\n                  \n                  <label className=\"mode-option\">\n                    <input \n                      type=\"radio\" \n                      name=\"executionMode\" \n                      value=\"javascript\" \n                      checked={executionMode === 'javascript'}\n                      onChange={(e) => setExecutionMode(e.target.value)}\n                    />\n                    <span className=\"mode-label\">\n                      ⚙️ JavaScript (Fallback)\n                    </span>\n                  </label>\n                </div>\n                \n                {!wasmSupported && (\n                  <div className=\"wasm-not-supported\">\n                    <p>⚠️ WebAssembly is not supported in this browser. JavaScript fallback will be used.</p>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"option-group\">\n                <h4>📂 Repository Files Only</h4>\n                <p>\n                  Compile using sushi-config.yaml and input/fsh files from the GitHub repository ({selectedBranch} branch).\n                </p>\n                <button\n                  className=\"run-sushi-btn primary\"\n                  onClick={() => handleRunSushi(false)}\n                  disabled={isRunning}\n                >\n                  {isRunning ? '⏳ Running...' : '🚀 Run SUSHI'}\n                </button>\n              </div>\n\n              {stagingFiles.length > 0 && (\n                <div className=\"option-group\">\n                  <h4>🏗️ Repository + Staging Files</h4>\n                  <p>\n                    Compile using repository files, with staging ground files ({stagingFiles.length} files) \n                    overriding any repository files with the same name.\n                  </p>\n                  <button\n                    className=\"run-sushi-btn secondary\"\n                    onClick={() => handleRunSushi(true)}\n                    disabled={isRunning}\n                  >\n                    {isRunning ? '⏳ Running...' : '🚀 Run SUSHI + Staging'}\n                  </button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"sushi-status\">\n              <div className=\"status-item\">\n                <span className=\"label\">Execution:</span>\n                <span className=\"value\">\n                  {wasmSupported && wasmInitialized ? '🚀 WebAssembly Ready' : '⚙️ JavaScript'}\n                </span>\n              </div>\n              <div className=\"status-item\">\n                <span className=\"label\">Config:</span>\n                <span className=\"value\">{sushiConfig ? '✅ Found' : '❓ Unknown'}</span>\n              </div>\n              <div className=\"status-item\">\n                <span className=\"label\">FSH Files:</span>\n                <span className=\"value\">{fshFiles.length} in repository</span>\n              </div>\n              {stagingFiles.length > 0 && (\n                <div className=\"status-item\">\n                  <span className=\"label\">Staging:</span>\n                  <span className=\"value\">{stagingFiles.filter(f => f.path && f.path.endsWith('.fsh')).length} FSH files</span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {showModal && <LogModal />}\n        {showFileViewer && <FileViewerModal />}\n      </div>\n    </SushiErrorBoundary>\n  );\n};\n\nexport default SushiRunner;","import React, { useState, useEffect } from 'react';\nimport githubService from '../services/githubService';\nimport StagingGround from './StagingGround';\nimport SushiRunner from './SushiRunner';\nimport './Publications.css';\n\nconst Publications = ({ profile, repository, selectedBranch, hasWriteAccess }) => {\n  const [branches, setBranches] = useState([]);\n  const [workflows, setWorkflows] = useState([]);\n  const [workflowRuns, setWorkflowRuns] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [stagingFiles, setStagingFiles] = useState([]);\n\n  const owner = repository.owner?.login || repository.full_name.split('/')[0];\n  const repoName = repository.name;\n\n  useEffect(() => {\n    const fetchPublicationData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Handle demo mode - provide mock data\n        if (profile?.isDemo) {\n          const mockBranches = [\n            { name: 'main', commit: { sha: 'abc123' } },\n            { name: 'feature/updates', commit: { sha: 'def456' } },\n            { name: 'dev', commit: { sha: 'ghi789' } }\n          ];\n          setBranches(mockBranches);\n\n          const mockWorkflows = [\n            { id: 'pages-build', name: 'Deploy to GitHub Pages', triggers: ['push', 'manual'] }\n          ];\n          setWorkflows(mockWorkflows);\n\n          // Mock workflow runs\n          const mockWorkflowRuns = {\n            'main': { \n              status: 'completed', \n              conclusion: 'success', \n              html_url: `https://github.com/${owner}/${repoName}/actions/runs/123456`,\n              updated_at: new Date().toISOString()\n            },\n            'feature/updates': { \n              status: 'completed', \n              conclusion: 'action_required', \n              html_url: `https://github.com/${owner}/${repoName}/actions/runs/123457`,\n              updated_at: new Date().toISOString()\n            },\n            'dev': { \n              status: 'completed', \n              conclusion: 'failure', \n              html_url: `https://github.com/${owner}/${repoName}/actions/runs/123458`,\n              updated_at: new Date().toISOString()\n            }\n          };\n          setWorkflowRuns(mockWorkflowRuns);\n          setLoading(false);\n          return;\n        }\n\n        // Fetch branches (excluding gh-pages)\n        const branchesData = await githubService.getBranches(owner, repoName);\n        const filteredBranches = branchesData.filter(branch => branch.name !== 'gh-pages');\n        setBranches(filteredBranches);\n\n        // Fetch workflows to find ghbuild workflow\n        const workflowsData = await githubService.getWorkflows(owner, repoName);\n        setWorkflows(workflowsData);\n\n        // Find the ghbuild workflow (look for workflow with 'build' or 'publish' in name)\n        const ghbuildWorkflow = workflowsData.find(workflow => \n          workflow.name.toLowerCase().includes('build') || \n          workflow.name.toLowerCase().includes('publish') ||\n          workflow.name.toLowerCase().includes('pages')\n        );\n\n        // Fetch recent workflow runs for each branch if ghbuild workflow exists and has valid ID\n        if (ghbuildWorkflow && ghbuildWorkflow.id) {\n          const runsByBranch = {};\n          for (const branch of filteredBranches) {\n            try {\n              const runs = await githubService.getWorkflowRunsForWorkflow(\n                owner, \n                repoName, \n                ghbuildWorkflow.id,\n                { branch: branch.name, per_page: 1 }\n              );\n              if (runs.length > 0) {\n                runsByBranch[branch.name] = runs[0];\n              }\n            } catch (err) {\n              console.warn(`Could not fetch workflow runs for branch ${branch.name}:`, err);\n            }\n          }\n          setWorkflowRuns(runsByBranch);\n        } else if (ghbuildWorkflow && !ghbuildWorkflow.id) {\n          console.warn('Found workflow but missing ID:', ghbuildWorkflow);\n        }\n\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching publication data:', err);\n        setError('Failed to load publication data');\n        setLoading(false);\n      }\n    };\n\n    fetchPublicationData();\n  }, [owner, repoName, profile?.isDemo]);\n\n  const getPublicationUrl = (branchName) => {\n    if (branchName === repository.default_branch || branchName === 'main') {\n      return `https://${owner}.github.io/${repoName}/`;\n    } else {\n      return `https://${owner}.github.io/${repoName}/branches/${branchName}/`;\n    }\n  };\n\n  const getWorkflowStatusIcon = (branchName) => {\n    const run = workflowRuns[branchName];\n    if (!run) return { icon: '⚪', title: 'No recent workflow runs', link: null };\n\n    const status = run.status;\n    const conclusion = run.conclusion;\n\n    if (status === 'in_progress' || status === 'queued') {\n      return { \n        icon: '🔄', \n        title: 'Workflow running', \n        link: run.html_url,\n        className: 'running' \n      };\n    } else if (conclusion === 'success') {\n      return { \n        icon: '✅', \n        title: 'Last build successful', \n        link: run.html_url,\n        className: 'success' \n      };\n    } else if (conclusion === 'failure') {\n      return { \n        icon: '❌', \n        title: 'Last build failed', \n        link: run.html_url,\n        className: 'failure' \n      };\n    } else if (conclusion === 'action_required') {\n      return { \n        icon: '⏳', \n        title: 'Workflow requires approval', \n        link: run.html_url,\n        className: 'approval-required' \n      };\n    } else {\n      return { \n        icon: '⚠️', \n        title: `Build ${conclusion || status}`, \n        link: run.html_url,\n        className: 'warning' \n      };\n    }\n  };\n\n  const handleRestartWorkflow = async (branchName) => {\n    // Handle demo mode\n    if (profile?.isDemo) {\n      alert(`Demo Mode: Workflow restart simulated for branch: ${branchName}`);\n      return;\n    }\n\n    const ghbuildWorkflow = workflows.find(workflow => \n      workflow.name.toLowerCase().includes('build') || \n      workflow.name.toLowerCase().includes('publish') ||\n      workflow.name.toLowerCase().includes('pages')\n    );\n\n    if (!ghbuildWorkflow) {\n      alert('No suitable workflow found to restart');\n      return;\n    }\n\n    if (!ghbuildWorkflow.id) {\n      alert('Workflow found but missing ID - cannot restart');\n      console.warn('Workflow missing ID:', ghbuildWorkflow);\n      return;\n    }\n\n    try {\n      await githubService.triggerWorkflow(owner, repoName, ghbuildWorkflow.id, branchName);\n      alert(`Workflow restarted for branch: ${branchName}`);\n      \n      // Refresh workflow runs after a delay\n      setTimeout(() => {\n        window.location.reload();\n      }, 2000);\n    } catch (err) {\n      console.error('Error restarting workflow:', err);\n      alert('Failed to restart workflow. Please check your permissions.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"publications-loading\">\n        <div className=\"loading-content\">\n          <h3>Loading Publications...</h3>\n          <p>Fetching branch and workflow information...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"publications-error\">\n        <div className=\"error-content\">\n          <h3>Error Loading Publications</h3>\n          <p>{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"publications-section\">\n      {/* SUSHI Runner Section */}\n      <SushiRunner\n        repository={repository}\n        selectedBranch={selectedBranch}\n        profile={profile}\n        stagingFiles={stagingFiles}\n      />\n      \n      {/* Staging Ground Section */}\n      <StagingGround\n        repository={repository}\n        selectedBranch={selectedBranch}\n        hasWriteAccess={hasWriteAccess}\n        profile={profile}\n        onStagingFilesChange={setStagingFiles}\n      />\n      \n      <div className=\"section-header\">\n        <h3 className=\"section-title\">Published DAK Content</h3>\n        <p className=\"section-description\">\n          Access published Implementation Guide content for this DAK repository. Each branch is published \n          automatically via GitHub Actions to GitHub Pages.\n        </p>\n      </div>\n\n      <div className=\"publications-grid\">\n        {branches.map((branch) => {\n          const isMainBranch = branch.name === repository.default_branch || branch.name === 'main';\n          const publicationUrl = getPublicationUrl(branch.name);\n          const workflowStatus = getWorkflowStatusIcon(branch.name);\n\n          return (\n            <div key={branch.name} className={`publication-card ${isMainBranch ? 'main-branch' : ''}`}>\n              <div className=\"publication-header\">\n                <div className=\"branch-info\">\n                  <span className=\"branch-icon\">🌿</span>\n                  <span className=\"branch-name\">{branch.name}</span>\n                  {isMainBranch && <span className=\"main-badge\">MAIN</span>}\n                </div>\n                <div className=\"workflow-status\">\n                  {workflowStatus.link ? (\n                    <a \n                      href={workflowStatus.link} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className={`status-icon ${workflowStatus.className || ''}`}\n                      title={workflowStatus.title}\n                    >\n                      {workflowStatus.icon}\n                    </a>\n                  ) : (\n                    <span \n                      className={`status-icon ${workflowStatus.className || ''}`}\n                      title={workflowStatus.title}\n                    >\n                      {workflowStatus.icon}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"publication-content\">\n                <div className=\"publication-url\">\n                  <label>Published at:</label>\n                  <a \n                    href={publicationUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"publication-link\"\n                  >\n                    {publicationUrl}\n                    <span className=\"external-link\">↗</span>\n                  </a>\n                </div>\n\n                <div className=\"publication-actions\">\n                  <button\n                    className=\"restart-workflow-btn\"\n                    onClick={() => handleRestartWorkflow(branch.name)}\n                    disabled={!hasWriteAccess}\n                    title={hasWriteAccess ? 'Restart build workflow for this branch' : 'Write permissions required'}\n                  >\n                    🔄 Rebuild\n                  </button>\n                  \n                  <a \n                    href={`https://github.com/${owner}/${repoName}/tree/${branch.name}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"view-source-btn\"\n                    title=\"View source code for this branch\"\n                  >\n                    👁️ View Source\n                  </a>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {branches.length === 0 && (\n        <div className=\"no-branches\">\n          <p>No publishable branches found (excluding gh-pages).</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Publications;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport { handleNavigationClick } from '../utils/navigationUtils';\n\nconst ForkStatusBar = ({ profile, repository, selectedBranch }) => {\n  const navigate = useNavigate();\n  \n  const [isExpanded, setIsExpanded] = useState(false);\n  const [forks, setForks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [parentRepository, setParentRepository] = useState(null);\n\n  // Get session storage key for this repository\n  const getStorageKey = React.useCallback(() => {\n    if (!repository) return null;\n    return `sgex_fork_status_${repository.full_name}`;\n  }, [repository]);\n\n  // Load expansion state from session storage\n  useEffect(() => {\n    const storageKey = getStorageKey();\n    if (storageKey) {\n      const savedState = sessionStorage.getItem(storageKey);\n      if (savedState !== null) {\n        setIsExpanded(JSON.parse(savedState));\n      }\n    }\n  }, [getStorageKey]);\n\n  // Save expansion state to session storage\n  const toggleExpansion = () => {\n    const newState = !isExpanded;\n    setIsExpanded(newState);\n    \n    const storageKey = getStorageKey();\n    if (storageKey) {\n      sessionStorage.setItem(storageKey, JSON.stringify(newState));\n    }\n  };\n\n  // Fetch forks and parent repository info when component mounts\n  useEffect(() => {\n    const fetchRepositoryInfo = async () => {\n      if (!repository) return;\n      \n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Check if we need to fetch full repository details to get parent info\n        let fullRepository = repository;\n        if (!repository.parent && (repository.fork === true || repository.fork === undefined)) {\n          // Fetch full repository details to get parent information\n          try {\n            fullRepository = await githubService.getRepository(repository.owner.login, repository.name);\n          } catch (repoErr) {\n            console.warn('Could not fetch full repository details:', repoErr);\n            // Continue with existing repository data\n          }\n        }\n        \n        // Set parent repository if this is a fork\n        if (fullRepository.fork && fullRepository.parent) {\n          setParentRepository(fullRepository.parent);\n        }\n        \n        // Fetch forks for the current repository being viewed\n        const forks = await githubService.getRepositoryForks(repository.owner.login, repository.name);\n        setForks(forks);\n      } catch (err) {\n        console.error('Error fetching repository information:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRepositoryInfo();\n  }, [repository]);\n\n  // Generate DAK dashboard URL for a fork\n  const getForkDashboardUrl = (fork) => {\n    const owner = fork.owner.login;\n    const repoName = fork.name;\n    const branch = fork.default_branch || 'main';\n    return `/dashboard/${owner}/${repoName}/${branch}`;\n  };\n\n  // Handle parent repository navigation\n  const handleParentClick = (event) => {\n    if (!parentRepository) return;\n    \n    const dashboardUrl = getForkDashboardUrl(parentRepository);\n    const navigationState = {\n      profile: {\n        login: parentRepository.owner.login,\n        name: parentRepository.owner.login,\n        avatar_url: parentRepository.owner.avatar_url,\n        type: parentRepository.owner.type\n      },\n      repository: parentRepository,\n      selectedBranch: parentRepository.default_branch || 'main'\n    };\n    \n    handleNavigationClick(event, dashboardUrl, navigate, navigationState);\n  };\n\n  // Handle fork navigation\n  const handleForkClick = (event, fork) => {\n    const dashboardUrl = getForkDashboardUrl(fork);\n    const navigationState = {\n      profile: {\n        login: fork.owner.login,\n        name: fork.owner.login,\n        avatar_url: fork.owner.avatar_url,\n        type: fork.owner.type\n      },\n      repository: fork,\n      selectedBranch: fork.default_branch || 'main'\n    };\n    \n    handleNavigationClick(event, dashboardUrl, navigate, navigationState);\n  };\n\n  if (!repository || loading) {\n    return (\n      <div className=\"fork-status-bar loading\">\n        <div className=\"fork-status-header\">\n          <div className=\"fork-badge-placeholder\">\n            <span className=\"fork-icon\">🍴</span>\n            <span className=\"fork-count\">...</span>\n          </div>\n          <span className=\"fork-status-title\">Loading repository info...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"fork-status-bar error\">\n        <div className=\"fork-status-header\">\n          <div className=\"fork-badge\">\n            <span className=\"fork-icon\">🍴</span>\n            <span className=\"fork-count\">?</span>\n          </div>\n          <span className=\"fork-status-title\">Unable to load repository info</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`fork-status-bar ${isExpanded ? 'expanded' : 'collapsed'}`}>\n      <div className=\"fork-status-header\" onClick={toggleExpansion}>\n        <div className=\"fork-badge\">\n          <span className=\"fork-icon\">🍴</span>\n          <span className=\"fork-count\">{forks.length}</span>\n        </div>\n        <span className=\"fork-status-title\">\n          {parentRepository ? (\n            <>\n              Fork of{' '}\n              <span \n                className=\"parent-repo-link\" \n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleParentClick(e);\n                }}\n              >\n                {parentRepository.owner.login}/{parentRepository.name}\n              </span>\n              {forks.length > 0 && (\n                <> • {forks.length} fork{forks.length !== 1 ? 's' : ''}</>\n              )}\n            </>\n          ) : (\n            <>\n              {forks.length} fork{forks.length !== 1 ? 's' : ''} of {repository?.name || 'repository'}\n            </>\n          )}\n        </span>\n        <button className=\"fork-toggle-btn\" aria-label={isExpanded ? 'Collapse' : 'Expand'}>\n          <span className={`toggle-icon ${isExpanded ? 'expanded' : ''}`}>▼</span>\n        </button>\n      </div>\n      \n      {isExpanded && (\n        <div className=\"fork-list\">\n          {parentRepository && (\n            <div className=\"parent-section\">\n              <h4 className=\"section-title\">Parent Repository</h4>\n              <div \n                className=\"fork-item parent-item\"\n                onClick={(event) => handleParentClick(event)}\n              >\n                <div className=\"fork-avatar\">\n                  <img \n                    src={parentRepository.owner.avatar_url} \n                    alt={parentRepository.owner.login}\n                    className=\"fork-owner-avatar\"\n                  />\n                </div>\n                <div className=\"fork-info\">\n                  <div className=\"fork-name\">\n                    <strong>{parentRepository.owner.login}/{parentRepository.name}</strong>\n                    <span className=\"parent-badge\">Parent</span>\n                  </div>\n                  <div className=\"fork-description\">\n                    {parentRepository.description || 'No description available'}\n                  </div>\n                  <div className=\"fork-stats\">\n                    <span className=\"fork-stat\">\n                      ⭐ {parentRepository.stargazers_count}\n                    </span>\n                    <span className=\"fork-stat\">\n                      📝 {parentRepository.open_issues_count} issues\n                    </span>\n                    <span className=\"fork-stat\">\n                      📅 Updated {new Date(parentRepository.updated_at).toLocaleDateString()}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"fork-actions\">\n                  <span className=\"fork-link-hint\">Click to view DAK →</span>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {forks.length === 0 ? (\n            !parentRepository && (\n              <div className=\"no-forks\">\n                <p>No forks found for this repository.</p>\n              </div>\n            )\n          ) : (\n            <div className=\"forks-section\">\n              {parentRepository && <h4 className=\"section-title\">Forks ({forks.length})</h4>}\n              <div className=\"fork-items\">\n                {forks.map((fork) => (\n                  <div \n                    key={fork.id} \n                    className=\"fork-item\"\n                    onClick={(event) => handleForkClick(event, fork)}\n                  >\n                    <div className=\"fork-avatar\">\n                      <img \n                        src={fork.owner.avatar_url} \n                        alt={fork.owner.login}\n                        className=\"fork-owner-avatar\"\n                      />\n                    </div>\n                    <div className=\"fork-info\">\n                      <div className=\"fork-name\">\n                        <strong>{fork.owner.login}/{fork.name}</strong>\n                      </div>\n                      <div className=\"fork-description\">\n                        {fork.description || 'No description available'}\n                      </div>\n                      <div className=\"fork-stats\">\n                        <span className=\"fork-stat\">\n                          ⭐ {fork.stargazers_count}\n                        </span>\n                        <span className=\"fork-stat\">\n                          📝 {fork.open_issues_count} issues\n                        </span>\n                        <span className=\"fork-stat\">\n                          📅 Updated {new Date(fork.updated_at).toLocaleDateString()}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"fork-actions\">\n                      <span className=\"fork-link-hint\">Click to view DAK →</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ForkStatusBar;","import React, { useState, useEffect } from 'react';\nimport { PageLayout, useDAKParams } from './framework';\nimport githubService from '../services/githubService';\nimport branchContextService from '../services/branchContextService';\nimport DAKStatusBox from './DAKStatusBox';\nimport Publications from './Publications';\nimport ForkStatusBar from './ForkStatusBar';\n\nconst DAKDashboardWithFramework = () => {\n  return (\n    <PageLayout pageName=\"dashboard\">\n      <DAKDashboardContent />\n    </PageLayout>\n  );\n};\n\nconst DAKDashboardContent = () => {\n  const { profile, repository, branch, navigate } = useDAKParams();\n  \n  const [hasWriteAccess, setHasWriteAccess] = useState(false);\n  const [showPermissionDialog, setShowPermissionDialog] = useState(false);\n  const [activeTab, setActiveTab] = useState('core'); // 'core', 'additional', or 'publications'\n  const [issueCounts, setIssueCounts] = useState({});\n\n  // Check write permissions\n  useEffect(() => {\n    const checkWritePermissions = async () => {\n      if (!repository || !githubService.isAuth()) {\n        setHasWriteAccess(false);\n        return;\n      }\n\n      try {\n        // Check repository permissions\n        const hasPermission = await githubService.checkRepositoryWritePermissions(repository.owner.login, repository.name);\n        setHasWriteAccess(hasPermission);\n      } catch (error) {\n        console.error('Error checking repository permissions:', error);\n        setHasWriteAccess(false);\n      }\n    };\n\n    checkWritePermissions();\n  }, [repository]);\n\n  // Set branch context\n  useEffect(() => {\n    if (profile && repository && branch) {\n      branchContextService.setBranchContext(profile.login, repository.name, branch);\n    }\n  }, [profile, repository, branch]);\n\n  // Fetch issue counts for repository (if authenticated)\n  useEffect(() => {\n    const fetchIssueCounts = async () => {\n      if (!repository || !githubService.isAuth()) {\n        return;\n      }\n\n      try {\n        const issues = await githubService.getIssues(repository.owner.login, repository.name);\n        \n        // Count issues by label\n        const counts = {};\n        issues.forEach(issue => {\n          issue.labels.forEach(label => {\n            counts[label.name] = (counts[label.name] || 0) + 1;\n          });\n        });\n        \n        setIssueCounts(counts);\n      } catch (error) {\n        console.warn('Could not fetch issue counts:', error);\n      }\n    };\n\n    fetchIssueCounts();\n  }, [repository]);\n\n  const handleComponentNavigate = (componentPath) => {\n    if (profile && repository) {\n      navigate(`/${componentPath}/${profile.login}/${repository.name}/${branch}`, {\n        state: {\n          profile,\n          repository,\n          selectedBranch: branch\n        }\n      });\n    }\n  };\n\n  const handlePublicationNavigate = () => {\n    if (profile && repository) {\n      navigate(`/publications/${profile.login}/${repository.name}/${branch}`, {\n        state: {\n          profile,\n          repository,\n          selectedBranch: branch\n        }\n      });\n    }\n  };\n\n  // Define the 9 core DAK components based on WHO SMART Guidelines documentation\n  const dakComponents = [\n    // Core Components (Level 2)\n    {\n      id: 'health-interventions',\n      title: 'Health Interventions and Recommendations',\n      description: 'Clinical guidelines and health intervention specifications that define evidence-based care recommendations',\n      icon: '📖',\n      path: 'health-interventions',\n      level: 'Level 2: Core Components',\n      color: '#0078d4'\n    },\n    {\n      id: 'generic-personas',\n      title: 'Generic Personas',\n      description: 'Standardized user roles and actor definitions that represent different types of healthcare workers and patients',\n      icon: '👥',\n      path: 'actor-editor',\n      level: 'Level 2: Core Components',\n      color: '#107c10'\n    },\n    {\n      id: 'user-scenarios',\n      title: 'User Scenarios',\n      description: 'Narrative descriptions of how different personas interact with the system in specific healthcare contexts',\n      icon: '📝',\n      path: 'user-scenarios',\n      level: 'Level 2: Core Components',\n      color: '#881798'\n    },\n    {\n      id: 'business-processes',\n      title: 'Generic Business Processes and Workflows',\n      description: 'BPMN workflows and business process definitions that model clinical workflows and care pathways',\n      icon: '🔄',\n      path: 'business-process-selection',\n      level: 'Level 2: Core Components',\n      color: '#d13438'\n    },\n    {\n      id: 'core-data-elements',\n      title: 'Core Data Elements',\n      description: 'Essential data structures and terminology needed for clinical data capture and exchange',\n      icon: '🗃️',\n      path: 'core-data-dictionary-viewer',\n      level: 'Level 2: Core Components',\n      color: '#ff8c00'\n    },\n    {\n      id: 'decision-support',\n      title: 'Decision-Support Logic',\n      description: 'DMN decision tables and clinical decision support rules that encode clinical logic',\n      icon: '🎯',\n      path: 'decision-support-logic',\n      level: 'Level 2: Core Components',\n      color: '#00bcf2'\n    },\n    {\n      id: 'program-indicators',\n      title: 'Program Indicators',\n      description: 'Performance indicators and measurement definitions for monitoring and evaluation',\n      icon: '📊',\n      path: 'program-indicators',\n      level: 'Level 2: Core Components',\n      color: '#498205'\n    },\n    {\n      id: 'functional-requirements',\n      title: 'Functional and Non-Functional Requirements',\n      description: 'System requirements specifications that define capabilities and constraints',\n      icon: '⚙️',\n      path: 'functional-requirements',\n      level: 'Level 2: Core Components',\n      color: '#6b69d6'\n    },\n    {\n      id: 'testing',\n      title: 'Testing',\n      description: 'Feature files and test scenarios for validating the DAK implementation',\n      icon: '🧪',\n      path: 'testing-viewer',\n      level: 'Level 2: Core Components',\n      color: '#8b5cf6'\n    },\n    // Additional Components (Level 3)\n    {\n      id: 'terminology',\n      title: 'Terminology',\n      description: 'Code systems, value sets, and concept maps',\n      icon: '🏷️',\n      path: 'terminology',\n      level: 'Level 3: Technical Implementation',\n      color: '#ff8c00'\n    },\n    {\n      id: 'profiles',\n      title: 'FHIR Profiles',\n      description: 'FHIR resource profiles and constraints',\n      icon: '🔧',\n      path: 'profiles',\n      level: 'Level 3: Technical Implementation',\n      color: '#00bcf2'\n    },\n    {\n      id: 'extensions',\n      title: 'FHIR Extensions',\n      description: 'Custom FHIR extensions and modifications',\n      icon: '🧩',\n      path: 'extensions',\n      level: 'Level 3: Technical Implementation',\n      color: '#498205'\n    },\n    {\n      id: 'test-data',\n      title: 'Test Data & Examples',\n      description: 'Sample data and testing resources',\n      icon: '🧪',\n      path: 'test-data',\n      level: 'Level 3: Technical Implementation',\n      color: '#8b5cf6'\n    }\n  ];\n\n  const coreComponents = dakComponents.filter(comp => comp.level.includes('Level 2: Core Components'));\n  const additionalComponents = dakComponents.filter(comp => comp.level.includes('Level 3: Technical Implementation'));\n\n  return (\n    <div className=\"dak-dashboard\">\n        <div className=\"dashboard-header\">\n          <div className=\"dashboard-title\">\n            <h1>{repository?.name} Dashboard</h1>\n            <p className=\"dashboard-subtitle\">\n              Digital Adaptation Kit for {profile?.name || profile?.login}\n            </p>\n          </div>\n        </div>\n\n        {/* Fork Status Bar - shows forks of sgex repository */}\n        <ForkStatusBar \n          profile={profile}\n          repository={repository}\n          selectedBranch={branch}\n        />\n\n        {repository && (\n          <DAKStatusBox \n            repository={repository}\n            profile={profile}\n            selectedBranch={branch}\n            issueCounts={issueCounts}\n          />\n        )}\n\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'core' ? 'active' : ''}`}\n            onClick={() => setActiveTab('core')}\n          >\n            <span className=\"tab-icon\">⭐</span>\n            <span className=\"tab-text\">9 Core Components</span>\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'additional' ? 'active' : ''}`}\n            onClick={() => setActiveTab('additional')}\n          >\n            <span className=\"tab-icon\">🔧</span>\n            <span className=\"tab-text\">Additional Components ({additionalComponents.length})</span>\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'publications' ? 'active' : ''}`}\n            onClick={() => setActiveTab('publications')}\n          >\n            <span className=\"tab-icon\">📚</span>\n            <span className=\"tab-text\">Publications</span>\n          </button>\n        </div>\n\n        <div className=\"dashboard-content\">\n          {activeTab === 'core' && (\n            <div className=\"components-grid core-components\">\n              {coreComponents.map(component => (\n                <div \n                  key={component.id}\n                  className=\"component-card\"\n                  onClick={() => handleComponentNavigate(component.path)}\n                >\n                  <div className=\"component-icon\">{component.icon}</div>\n                  <h3>{component.title}</h3>\n                  <p>{component.description}</p>\n                  {issueCounts[component.id] > 0 && (\n                    <div className=\"issue-badge\">\n                      {issueCounts[component.id]} issues\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'additional' && (\n            <div className=\"components-grid additional-components\">\n              {additionalComponents.map(component => (\n                <div \n                  key={component.id}\n                  className=\"component-card\"\n                  onClick={() => handleComponentNavigate(component.path)}\n                >\n                  <div className=\"component-icon\">{component.icon}</div>\n                  <h3>{component.title}</h3>\n                  <p>{component.description}</p>\n                  {issueCounts[component.id] > 0 && (\n                    <div className=\"issue-badge\">\n                      {issueCounts[component.id]} issues\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'publications' && (\n            <div className=\"publications-section\">\n              <Publications \n                repository={repository}\n                profile={profile}\n                selectedBranch={branch}\n                onNavigate={handlePublicationNavigate}\n              />\n            </div>\n          )}\n        </div>\n\n        {showPermissionDialog && (\n          <div className=\"permission-dialog\">\n            <div className=\"dialog-overlay\" onClick={() => setShowPermissionDialog(false)}></div>\n            <div className=\"dialog-content\">\n              <h3>Repository Permissions</h3>\n              <p>\n                You have {hasWriteAccess ? 'write' : 'read-only'} access to this repository.\n                {!hasWriteAccess && ' You can view content but cannot make changes.'}\n              </p>\n              <button onClick={() => setShowPermissionDialog(false)}>\n                Got it\n              </button>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default DAKDashboardWithFramework;"],"names":["handleNavigationClick","event","path","navigate","state","arguments","length","undefined","ctrlKey","metaKey","shouldOpenInNewTab","fullUrl","relativePath","basePath","process","baseUrl","window","location","origin","cleanPath","startsWith","slice","concat","cleanBasePath","endsWith","constructFullUrl","open","sushiConfigSchema","require","constructor","this","validators","Map","initializeSchemaValidator","initializeDefaultValidators","ajv","Ajv","allErrors","verbose","addFormats","sushiConfigValidator","compile","addValidator","level","description","validator","validateXMLWellFormed","bind","validateBPMNNamespace","validateBPMNStartEvent","validateDMNNamespace","validateJSONSyntax","validateFHIRResourceType","validateFileSize","validateFilenameConventions","validateSushiConfig","fileType","validatorId","config","has","set","get","removeValidator","delete","validateFile","filePath","content","results","fileExtension","getFileExtension","fileName","getFileName","typeValidators","universalValidators","result","push","_objectSpread","error","message","validateStagingGround","stagingGround","summary","warning","info","files","validatedAt","Date","now","file","fileResults","forEach","canSave","parser","DOMParser","parserError","parseFromString","querySelector","textContent","includes","suggestion","JSON","parse","json","validResourceTypes","resourceType","sizeInBytes","Blob","size","toFixed","issues","test","join","parsedConfig","yaml","yamlError","errors","errorMessages","map","_error$params","_error$params2","field","instancePath","replace","params","missingProperty","allowedValues","details","whoValidation","validateWHOSmartGuidelines","dependencies","canonical","id","publisher","toLowerCase","jurisdiction","Array","isArray","parts","split","pop","formatValidationResults","validation","formatted","Object","entries","_ref","getValidationSummary","hasIssues","_stagingGround$files","_stagingGround$files2","isOpen","onClose","repository","selectedBranch","hasWriteAccess","onSaveSuccess","commitMessage","setCommitMessage","useState","overrideValidation","setOverrideValidation","isSaving","setIsSaving","setError","showValidationDetails","setShowValidationDetails","useEffect","validationSummary","dakComplianceService","hasErrors","getErrorMessage","status","formatValidationIcon","_jsx","className","children","_jsxs","onClick","disabled","index","e","stopPropagation","confirm","stagingGroundService","removeFile","title","_ref2","type","checked","onChange","target","htmlFor","value","placeholder","rows","required","full_name","async","trim","_repository$owner","owner","login","isDemo","Promise","resolve","setTimeout","sha","url","githubService","createCommit","name","html_url","err","console","_Fragment","profile","onStagingFilesChange","setStagingGround","setValidation","loading","setLoading","showSaveDialog","setShowSaveDialog","loadStagingGroundData","useCallback","currentStagingGround","getStagingGround","initialize","addListener","updatedStagingGround","stagingGroundData","validationResult","hasChanges","filesCount","handleSave","alert","lastModified","timestamp","toLocaleTimeString","handleClearChanges","clearStagingGround","SaveDialog","substring","VirtualFileSystem","directories","Set","maxMemoryUsage","currentMemoryUsage","writeFile","normalizedPath","contentSize","TextEncoder","encode","Error","pathParts","i","dirPath","add","data","oldData","readFile","TextDecoder","decode","exists","listDirectory","prefix","items","keys","clear","getMemoryUsage","used","limit","percentage","wasmModule","fs","isInitialized","initializationPromise","_loadWasmModule","sushiModule","_importSushiLibrary","log","ccall","_createFallbackCCall","FS","functionName","returnType","paramTypes","_runFallbackCompilation","workspacePath","outputFiles","warnings","fshFiles","_getAllFshFiles","configContent","version","fhirVersion","default","load","definitions","_extractFSHDefinitions","resources","_generateFHIRResources","success","_this","collectFiles","item","profiles","instances","valueSets","codeSystems","extensions","lines","currentDefinition","currentType","line","parent","rules","instanceOf","usage","profileId","structureDefinition","kind","abstract","baseDefinition","derivation","differential","element","rule","short","stringify","instance","instanceId","fhirInstance","meta","family","given","vs","vsId","valueSet","compose","include","system","concept","code","display","cs","csId","codeSystem","runSushi","totalSize","reduce","sum","_file$content","configYaml","dump","warn","WasmLoader","loadedModules","loadingPromises","loadModule","moduleName","source","imports","loadingPromise","_loadModuleInternal","wasmBytes","ArrayBuffer","response","fetch","ok","statusText","arrayBuffer","module","WebAssembly","instantiate","isSupported","getSupportInfo","support","basic","streaming","instantiateStreaming","threads","SharedArrayBuffer","simd","v128","clearCache","unloadModule","performanceMonitor","metrics","startTiming","operationName","implementation","key","startTime","performance","endTiming","metric","duration","endTime","getComparison","jsKey","wasmKey","jsMetric","wasmMetric","speedup","javascript","webassembly","winner","improvement","getAllMetrics","from","values","SushiErrorBoundary","React","props","super","handleReset","setState","hasError","errorInfo","memoryInfo","getDerivedStateFromError","componentDidCatch","memory","usedJSHeapSize","total","totalJSHeapSize","jsHeapSizeLimit","gc","render","reload","stagingFiles","isExpanded","setIsExpanded","isRunning","setIsRunning","showModal","setShowModal","logs","setLogs","generatedFiles","setGeneratedFiles","showFileViewer","setShowFileViewer","selectedFile","setSelectedFile","activeTab","setActiveTab","logLevelToggles","setLogLevelToggles","searchText","setSearchText","sushiConfig","setSushiConfig","setFshFiles","includeStagingFiles","setIncludeStagingFiles","executionMode","setExecutionMode","wasmSupported","setWasmSupported","wasmInitialized","setWasmInitialized","repoName","addLog","prev","Math","random","toISOString","supported","sushiWasmService","checkWasmSupport","runSushiWithWasm","generatedResources","filename","resourceCount","runSushiWithJavaScript","checkMemoryUsage","memoryMB","memoryLimitMB","memoryWarningMB","initialMemory","maxFileSize","maxTotalSize","maxFiles","validFiles","fileSize","configObj","processedCount","maxResourcesPerFile","maxTotalResources","chunkSize","chunk","currentMemory","extractFSHDefinitions","maxLinesToProcess","linesToProcess","min","definitionCount","maxDefinitionsPerFile","resourcesFromThisFile","remainingResourceSlots","maxFromThisFile","isFromStaging","memoryAfterChunk","finalMemory","stagingCount","filter","f","stack","handleRunSushi","withStagingFiles","repoFiles","getFileContent","scanDirectory","depth","contents","getDirectoryContents","fileContent","fetchRepositoryFiles","finalFiles","repoFshFiles","integratedFiles","stagingFile","existingIndex","findIndex","integrateStagingFiles","useWasm","mode","fallbackErr","runSushiInBrowser","toggleLogLevel","clearLogs","copyAllLogs","logText","navigator","clipboard","writeText","copyLogMessage","parseLogMessage","logId","matches","matchAll","lastIndex","elements","elementCounter","match","fullMatch","matchIndex","leadingWhitespace","indexOf","createFileLink","text","keyIndex","isKnownRepoFile","some","dakInfo","fshPath","component","icon","getDakComponentLink","githubUrl","href","rel","filteredLogs","useMemo","isLevelEnabled","matchesSearch","LogControls","onToggleLogLevel","onSearchChange","filteredCount","totalCount","handleSearchChange","label","_ref3","v","viewFile","closeFileViewer","getResourceTypeIcon","FileViewerModal","SyntaxHighlighter","language","style","oneLight","showLineNumbers","wrapLines","customStyle","fontSize","lineHeight","maxHeight","overflow","LogModal","branches","setBranches","workflows","setWorkflows","workflowRuns","setWorkflowRuns","setStagingFiles","commit","triggers","mockWorkflowRuns","conclusion","updated_at","filteredBranches","getBranches","branch","workflowsData","getWorkflows","ghbuildWorkflow","find","workflow","runsByBranch","runs","getWorkflowRunsForWorkflow","per_page","fetchPublicationData","SushiRunner","StagingGround","isMainBranch","default_branch","publicationUrl","branchName","workflowStatus","run","link","getWorkflowStatusIcon","triggerWorkflow","handleRestartWorkflow","useNavigate","forks","setForks","parentRepository","setParentRepository","getStorageKey","storageKey","savedState","sessionStorage","getItem","fullRepository","fork","getRepository","repoErr","getRepositoryForks","fetchRepositoryInfo","getForkDashboardUrl","handleParentClick","dashboardUrl","navigationState","avatar_url","toggleExpansion","newState","setItem","src","alt","stargazers_count","open_issues_count","toLocaleDateString","handleForkClick","DAKDashboardContent","useDAKParams","setHasWriteAccess","showPermissionDialog","setShowPermissionDialog","issueCounts","setIssueCounts","isAuth","hasPermission","checkRepositoryWritePermissions","checkWritePermissions","branchContextService","setBranchContext","getIssues","counts","issue","labels","fetchIssueCounts","handleComponentNavigate","componentPath","dakComponents","color","coreComponents","comp","additionalComponents","ForkStatusBar","DAKStatusBox","Publications","onNavigate","handlePublicationNavigate","DAKDashboardWithFramework","PageLayout","pageName"],"sourceRoot":""}