{"version":3,"file":"static/js/412.eee89325.chunk.js","mappings":"mLAMA,MAqFA,EArFwBA,KACtB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,yRAEhCC,IAAmBD,EAAAA,EAAAA,UAAS,wRAG7BE,EAAO,CACXC,KAAM,uBACNC,KAAM,uCAIFC,EAAa,CACjBF,KAAM,WACNG,MAAO,CAAEC,MAAO,aAChBC,UAAW,sBAQPC,EAAaX,IAAYG,EAE/B,OACES,EAAAA,EAAAA,KAACC,EAAAA,GAAiB,CAChBC,SAAS,oBACTV,KAAMA,EACNG,WAAYA,EACZQ,OAAO,OACPf,QAASA,EACTG,gBAAiBA,EACjBQ,WAAYA,EACZK,QAAQ,EACRC,OAjBeC,CAACC,EAAcC,KAChCC,QAAQC,IAAI,YAAYF,KAAaD,GACrCI,MAAM,oBAAoBH,OAgBxBI,oBAAoB,MAAKC,UAEzBC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,QAAS,OACTC,WAAY,UACZC,aAAc,MACdC,UAAW,SACXT,SAAA,EACAb,EAAAA,EAAAA,KAAA,MAAAa,SAAI,iCACJb,EAAAA,EAAAA,KAAA,KAAAa,SAAG,qFAEHb,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,iBAAgBV,UAC7Bb,EAAAA,EAAAA,KAAA,UAAAa,SAAQ,qBAEVb,EAAAA,EAAAA,KAAA,YACEwB,GAAG,iBACHC,MAAOrC,EACPsC,SAAWC,GAAMtC,EAAWsC,EAAEC,OAAOH,OACrCV,MAAO,CACLc,KAAM,EACNP,UAAW,QACXH,QAAS,OACTW,WAAY,YACZC,SAAU,OACVC,OAAQ,iBACRX,aAAc,UAIlBP,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,QAAS,OACTE,IAAK,OACLa,SAAU,SACVE,MAAO,QACPpB,SAAA,EACAC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,SAAOrB,EAAKC,SAClBqB,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,eAAalB,EAAWG,cAC9BE,EAAAA,EAAAA,KAAA,QAAAa,SAAM,kBACNb,EAAAA,EAAAA,KAAA,QAAAa,SAAM,oBACLd,IAAcC,EAAAA,EAAAA,KAAA,QAAMe,MAAO,CAAEkB,MAAO,WAAYpB,SAAC,mC","sources":["components/AssetEditorTest.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { AssetEditorLayout } from './framework';\n\n/**\n * Simple test component to demonstrate the asset editor framework\n */\nconst AssetEditorTest = () => {\n  const [content, setContent] = useState('# Example Feature File\\n\\nFeature: Test Feature\\n  In order to test the asset editor framework\\n  As a developer\\n  I want to edit and save content\\n\\n  Scenario: Edit content\\n    Given I have content to edit\\n    When I make changes\\n    Then I can save locally or to GitHub');\n  \n  const [originalContent] = useState('# Example Feature File\\n\\nFeature: Test Feature\\n  In order to test the asset editor framework\\n  As a developer\\n  I want to edit and save content\\n\\n  Scenario: Edit content\\n    Given I have content to edit\\n    When I make changes\\n    Then I can save locally or to GitHub');\n\n  // Mock file object\n  const file = {\n    name: 'test-feature.feature',\n    path: 'input/features/test-feature.feature'\n  };\n\n  // Mock repository object\n  const repository = {\n    name: 'test-dak',\n    owner: { login: 'demo-user' },\n    full_name: 'demo-user/test-dak'\n  };\n\n  const handleSave = (savedContent, saveType) => {\n    console.log(`Saved to ${saveType}:`, savedContent);\n    alert(`Content saved to ${saveType}!`);\n  };\n\n  const hasChanges = content !== originalContent;\n\n  return (\n    <AssetEditorLayout\n      pageName=\"asset-editor-test\"\n      file={file}\n      repository={repository}\n      branch=\"main\"\n      content={content}\n      originalContent={originalContent}\n      hasChanges={hasChanges}\n      isDemo={true}\n      onSave={handleSave}\n      saveButtonsPosition=\"top\"\n    >\n      <div style={{ \n        display: 'flex', \n        flexDirection: 'column', \n        gap: '1rem',\n        padding: '1rem',\n        background: '#f8f9fa',\n        borderRadius: '8px',\n        minHeight: '400px'\n      }}>\n        <h3>Asset Editor Framework Test</h3>\n        <p>This demonstrates the new asset editor framework with independent save buttons.</p>\n        \n        <label htmlFor=\"content-editor\">\n          <strong>Edit Content:</strong>\n        </label>\n        <textarea\n          id=\"content-editor\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          style={{\n            flex: 1,\n            minHeight: '300px',\n            padding: '1rem',\n            fontFamily: 'monospace',\n            fontSize: '14px',\n            border: '1px solid #ddd',\n            borderRadius: '4px'\n          }}\n        />\n        \n        <div style={{ \n          display: 'flex', \n          gap: '1rem', \n          fontSize: '0.9rem',\n          color: '#666'\n        }}>\n          <span>File: {file.name}</span>\n          <span>Repository: {repository.full_name}</span>\n          <span>Branch: main</span>\n          <span>Demo Mode: true</span>\n          {hasChanges && <span style={{ color: '#007bff' }}>â€¢ Unsaved changes</span>}\n        </div>\n      </div>\n    </AssetEditorLayout>\n  );\n};\n\nexport default AssetEditorTest;"],"names":["AssetEditorTest","content","setContent","useState","originalContent","file","name","path","repository","owner","login","full_name","hasChanges","_jsx","AssetEditorLayout","pageName","branch","isDemo","onSave","handleSave","savedContent","saveType","console","log","alert","saveButtonsPosition","children","_jsxs","style","display","flexDirection","gap","padding","background","borderRadius","minHeight","htmlFor","id","value","onChange","e","target","flex","fontFamily","fontSize","border","color"],"sourceRoot":""}