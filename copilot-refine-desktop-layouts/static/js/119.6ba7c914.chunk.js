(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[119],{4122:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RequirementsComponent=void 0;const o=n(68190),s=n(64968);class i extends s.BaseDAKComponentObject{constructor(e,t,n,s){super(o.DAKComponentType.REQUIREMENTS,e,t,n,s)}async determineFilePath(e){const t=e.id||"requirements";return"input/requirements/".concat(t,".md")}serializeToFile(e){const t=e;if(t.markdown)return t.markdown;const n=t.title||"Functional and Non-Functional Requirements";let o="# ".concat(n,"\n\n");return t.functional&&Array.isArray(t.functional)&&(o+="## Functional Requirements\n\n",t.functional.forEach((e,t)=>{o+="### FR".concat(t+1,": ").concat(e.title||e.name,"\n\n"),e.description&&(o+="".concat(e.description,"\n\n"))})),t.nonFunctional&&Array.isArray(t.nonFunctional)&&(o+="## Non-Functional Requirements\n\n",t.nonFunctional.forEach((e,t)=>{o+="### NFR".concat(t+1,": ").concat(e.title||e.name,"\n\n"),e.description&&(o+="".concat(e.description,"\n\n"))})),o}parseFromFile(e){const t={requirements:[],functional:[],nonFunctional:[]},n=e.split("\n");let o="",s=null;for(const i of n){const e=i.trim();e.startsWith("# ")?t.title=e.substring(2):e.startsWith("## Functional Requirements")?o="functional":e.startsWith("## Non-Functional Requirements")?o="nonFunctional":e.startsWith("### FR")||e.startsWith("### NFR")?(s&&("functional"===o?t.functional.push(s):"nonFunctional"===o&&t.nonFunctional.push(s)),s={title:e.substring(e.indexOf(":")+1).trim(),description:""}):e&&s&&(s.description+=e+" ")}return s&&("functional"===o?t.functional.push(s):"nonFunctional"===o&&t.nonFunctional.push(s)),t.markdown=e,t}async validate(e){const t=[],n=[],o=e;o.id||n.push({code:"MISSING_ID",message:"Requirements should have an id"});const s=o.functional&&o.functional.length>0,i=o.nonFunctional&&o.nonFunctional.length>0;return s||i||n.push({code:"NO_REQUIREMENTS",message:"Requirements should contain at least one functional or non-functional requirement"}),{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}}t.RequirementsComponent=i},4520:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TestScenarioComponent=t.RequirementsComponent=t.ProgramIndicatorComponent=t.UserScenarioComponent=t.HealthInterventionsComponent=t.DecisionSupportLogicComponent=t.BusinessProcessWorkflowComponent=t.CoreDataElementComponent=t.GenericPersonaComponent=void 0;var o=n(47087);Object.defineProperty(t,"GenericPersonaComponent",{enumerable:!0,get:function(){return o.GenericPersonaComponent}});var s=n(37875);Object.defineProperty(t,"CoreDataElementComponent",{enumerable:!0,get:function(){return s.CoreDataElementComponent}});var i=n(95067);Object.defineProperty(t,"BusinessProcessWorkflowComponent",{enumerable:!0,get:function(){return i.BusinessProcessWorkflowComponent}});var r=n(97836);Object.defineProperty(t,"DecisionSupportLogicComponent",{enumerable:!0,get:function(){return r.DecisionSupportLogicComponent}});var a=n(95036);Object.defineProperty(t,"HealthInterventionsComponent",{enumerable:!0,get:function(){return a.HealthInterventionsComponent}});var c=n(79690);Object.defineProperty(t,"UserScenarioComponent",{enumerable:!0,get:function(){return c.UserScenarioComponent}});var u=n(77452);Object.defineProperty(t,"ProgramIndicatorComponent",{enumerable:!0,get:function(){return u.ProgramIndicatorComponent}});var p=n(4122);Object.defineProperty(t,"RequirementsComponent",{enumerable:!0,get:function(){return p.RequirementsComponent}});var l=n(58059);Object.defineProperty(t,"TestScenarioComponent",{enumerable:!0,get:function(){return l.TestScenarioComponent}})},12790:()=>{},22396:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,s)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(){var e=function(t){return e=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},e(t)};return function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var i=e(t),r=0;r<i.length;r++)"default"!==i[r]&&o(n,t,i[r]);return s(n,t),n}}(),r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DAKValidationService=void 0;const a=r(n(58900)),c=r(n(36245)),u=i(n(81502)),p=i(n(12790)),l=i(n(41190)),d=n(68190);t.DAKValidationService=class{constructor(){this.ajv=new a.default({allErrors:!0,verbose:!0}),(0,c.default)(this.ajv),this.loadDAKSchema()}loadDAKSchema(){try{const e=p.join("/","../schemas/dak.schema.json");u.existsSync(e)?(this.dakSchema=JSON.parse(u.readFileSync(e,"utf8")),this.ajv.addSchema(this.dakSchema,"dak")):(this.dakSchema={type:"object",properties:{resourceType:{type:"string",const:"DAK"},id:{type:"string"},name:{type:"string"},title:{type:"string"},description:{type:"string"},version:{type:"string"},status:{type:"string"},publicationUrl:{type:"string"},license:{type:"string"},copyrightYear:{type:"string"},publisher:{type:"object",properties:{name:{type:"string"},url:{type:"string"}}}},required:["resourceType","id","name","title","description","version","status"]},this.ajv.addSchema(this.dakSchema,"dak"))}catch(e){this.dakSchema={type:"object",properties:{resourceType:{type:"string"}}},this.ajv.addSchema(this.dakSchema,"dak")}}async validateDAKRepository(e){const t=[],n=[];try{const s=p.join(e,"sushi-config.yaml");if(!u.existsSync(s))return t.push({code:"MISSING_SUSHI_CONFIG",message:"Repository must contain a sushi-config.yaml file in the root directory",filePath:"sushi-config.yaml"}),{isValid:!1,errors:t,warnings:n,timestamp:new Date};const i=u.readFileSync(s,"utf8");let r;try{r=l.parse(i)}catch(o){return t.push({code:"INVALID_YAML",message:"sushi-config.yaml contains invalid YAML: ".concat(o),filePath:"sushi-config.yaml"}),{isValid:!1,errors:t,warnings:n,timestamp:new Date}}r.dependencies?r.dependencies["smart.who.int.base"]||n.push({code:"MISSING_SMART_BASE_DEPENDENCY",message:"DAK should include smart.who.int.base dependency for WHO SMART Guidelines compliance",filePath:"sushi-config.yaml"}):t.push({code:"MISSING_DEPENDENCIES",message:"sushi-config.yaml must contain a dependencies section",filePath:"sushi-config.yaml"});const a=["id","name","title","description","version","status"];for(const e of a)r[e]||t.push({code:"MISSING_REQUIRED_FIELD",message:"sushi-config.yaml must contain required field: ".concat(e),filePath:"sushi-config.yaml"});const c=this.getExpectedComponentDirectories();for(const[t,o]of Object.entries(c)){let s=!1;for(const t of o){const n=p.join(e,t);if(u.existsSync(n)){s=!0;break}}s||n.push({code:"MISSING_COMPONENT_DIRECTORY",message:"DAK component directory not found for ".concat(t,". Expected one of: ").concat(o.join(", ")),component:t})}}catch(s){t.push({code:"VALIDATION_ERROR",message:"Unexpected error during validation: ".concat(s)})}return{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}validateDAKObject(e){const t=[];try{const o=this.ajv.getSchema("dak");if(!o)throw new Error("DAK schema not loaded");if(!o(e)&&o.errors)for(const e of o.errors){var n;t.push({code:"SCHEMA_VALIDATION_ERROR",message:"".concat(e.instancePath||"root",": ").concat(e.message),component:null===(n=e.instancePath)||void 0===n?void 0:n.split("/")[1]})}}catch(o){t.push({code:"VALIDATION_ERROR",message:"Schema validation failed: ".concat(o)})}return{isValid:0===t.length,errors:t,warnings:[],timestamp:new Date}}extractDAKMetadata(e){try{const t=p.join(e,"sushi-config.yaml");if(!u.existsSync(t))return null;const n=u.readFileSync(t,"utf8");return l.parse(n)}catch(t){return null}}getExpectedComponentDirectories(){return{[d.DAKComponentType.HEALTH_INTERVENTIONS]:["input/pagecontent","input/pages"],[d.DAKComponentType.PERSONAS]:["input/actors","input/personas"],[d.DAKComponentType.USER_SCENARIOS]:["input/scenarios","input/use-cases"],[d.DAKComponentType.BUSINESS_PROCESSES]:["input/business-processes","input/workflows"],[d.DAKComponentType.DATA_ELEMENTS]:["input/profiles","input/extensions"],[d.DAKComponentType.DECISION_LOGIC]:["input/decision-tables","input/logic"],[d.DAKComponentType.INDICATORS]:["input/measures","input/indicators"],[d.DAKComponentType.REQUIREMENTS]:["input/requirements"],[d.DAKComponentType.TEST_SCENARIOS]:["input/tests","input/examples"]}}validateComponentFile(e,t){const n=[],o=[];try{if(!u.existsSync(e))return n.push({code:"FILE_NOT_FOUND",message:"Component file not found: ".concat(e),filePath:e,component:t}),{isValid:!1,errors:n,warnings:o,timestamp:new Date};const s=p.extname(e).toLowerCase();p.basename(e);switch(t){case d.DAKComponentType.BUSINESS_PROCESSES:".bpmn"===s&&this.validateBPMNFile(e,n,o);break;case d.DAKComponentType.DECISION_LOGIC:".dmn"===s&&this.validateDMNFile(e,n,o);break;case d.DAKComponentType.DATA_ELEMENTS:".json"!==s&&".fsh"!==s||this.validateFHIRProfileFile(e,n,o)}}catch(s){n.push({code:"VALIDATION_ERROR",message:"Error validating component file: ".concat(s),filePath:e,component:t})}return{isValid:0===n.length,errors:n,warnings:o,timestamp:new Date}}validateBPMNFile(e,t,n){try{const n=u.readFileSync(e,"utf8");n.includes("bpmn:definitions")||t.push({code:"INVALID_BPMN",message:"BPMN file must contain bpmn:definitions element",filePath:e}),n.includes("bpmn:process")||t.push({code:"MISSING_BPMN_PROCESS",message:"BPMN file must contain at least one bpmn:process element",filePath:e})}catch(o){t.push({code:"BPMN_READ_ERROR",message:"Failed to read BPMN file: ".concat(o),filePath:e})}}validateDMNFile(e,t,n){try{u.readFileSync(e,"utf8").includes("dmn:definitions")||t.push({code:"INVALID_DMN",message:"DMN file must contain dmn:definitions element",filePath:e})}catch(o){t.push({code:"DMN_READ_ERROR",message:"Failed to read DMN file: ".concat(o),filePath:e})}}validateFHIRProfileFile(e,t,n){try{const o=u.readFileSync(e,"utf8"),s=p.extname(e).toLowerCase();if(".json"===s){JSON.parse(o).resourceType||t.push({code:"MISSING_RESOURCE_TYPE",message:"FHIR profile must have resourceType field",filePath:e})}else".fsh"===s&&(o.includes("Profile:")||o.includes("Extension:")||n.push({code:"UNRECOGNIZED_FSH",message:"FSH file should contain Profile: or Extension: definitions",filePath:e}))}catch(o){t.push({code:"FHIR_PROFILE_READ_ERROR",message:"Failed to read FHIR profile file: ".concat(o),filePath:e})}}}},24903:(e,t,n)=>{"use strict";var o=n(12897).default;Object.defineProperty(t,"__esModule",{value:!0}),t.StagingGroundIntegrationService=void 0;t.StagingGroundIntegrationService=class{constructor(e,t,n){this.stagingGroundService=e,this.repository=t,this.branch=n,this.dakJsonPath="dak.json",this.stagingGroundService.initialize(t,n)}async loadDakJson(){try{const t=this.stagingGroundService.getStagingGround().files.find(e=>e.path===this.dakJsonPath);if(t&&t.content)try{return JSON.parse(t.content)}catch(e){console.warn("Failed to parse dak.json from staging ground:",e)}return console.log("dak.json not found in staging ground, would fetch from repository"),null}catch(e){return console.error("Error loading dak.json:",e),null}}async saveDakJson(e){try{const t=JSON.stringify(e,null,2);return this.stagingGroundService.updateFile(this.dakJsonPath,t,{source:"dak-core",componentType:"dak-metadata",updatedAt:Date.now()})}catch(t){return console.error("Error saving dak.json to staging ground:",t),!1}}async updateComponentSources(e,t){try{let n=await this.loadDakJson()||{};return n[this.getComponentKey(e)]=t,await this.saveDakJson(n)}catch(n){return console.error("Error updating component sources for ".concat(e,":"),n),!1}}async saveComponentArtifact(e,t,n,s){try{const i=t.startsWith("input/")?t:"input/".concat(t);return this.stagingGroundService.updateFile(i,n,o(o({source:"dak-component-object",componentType:e},s),{},{savedAt:Date.now()}))}catch(i){return console.error("Error saving component artifact for ".concat(e,":"),i),!1}}async loadComponentArtifact(e){try{const t=e.startsWith("input/")?e:"input/".concat(e),n=this.stagingGroundService.getStagingGround().files.find(e=>e.path===t);return n&&n.content?n.content:(console.log("Artifact ".concat(t," not found in staging ground, would fetch from repository")),null)}catch(t){return console.error("Error loading component artifact ".concat(e,":"),t),null}}async removeComponentArtifact(e){try{const t=e.startsWith("input/")?e:"input/".concat(e);return this.stagingGroundService.removeFile(t)}catch(t){return console.error("Error removing component artifact ".concat(e,":"),t),!1}}getStatus(){return this.stagingGroundService.getStatus()}hasChanges(){return this.stagingGroundService.hasChanges()}getComponentKey(e){return{"health-interventions":"healthInterventions",personas:"personas","user-scenarios":"userScenarios","business-processes":"businessProcesses","core-data-elements":"dataElements","decision-logic":"decisionLogic",indicators:"indicators",requirements:"requirements","test-scenarios":"testScenarios"}[e]||e}createRelativeUrlSource(e,t){return{url:e.startsWith("input/")?e.substring(6):e,metadata:o(o({},t),{},{type:"relative-file",createdAt:(new Date).toISOString()})}}createInlineSource(e,t){return{instance:e,metadata:o(o({},t),{},{type:"inline",createdAt:(new Date).toISOString()})}}}},27913:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DAKFactory=void 0;const o=n(47612),s=n(24903);t.DAKFactory=class{constructor(e,t){this.sourceResolver=e,this.stagingGroundService=t}async createFromRepository(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main";const i={owner:e,repo:t,branch:n},r=new s.StagingGroundIntegrationService(this.stagingGroundService,i,n),a=await r.loadDakJson();return new o.DAKObject(i,this.sourceResolver,r,a||void 0)}async createFromDakJson(e,t){const n=new s.StagingGroundIntegrationService(this.stagingGroundService,t,t.branch||"main");return new o.DAKObject(t,this.sourceResolver,n,e)}createEmpty(e,t){const n={resourceType:"DAK",id:(null===t||void 0===t?void 0:t.id)||"".concat(e.owner,".").concat(e.repo),name:(null===t||void 0===t?void 0:t.name)||e.repo,title:(null===t||void 0===t?void 0:t.title)||e.repo,description:(null===t||void 0===t?void 0:t.description)||"",version:(null===t||void 0===t?void 0:t.version)||"0.1.0",status:(null===t||void 0===t?void 0:t.status)||"draft",publicationUrl:(null===t||void 0===t?void 0:t.publicationUrl)||"",license:(null===t||void 0===t?void 0:t.license)||"CC-BY-4.0",copyrightYear:(null===t||void 0===t?void 0:t.copyrightYear)||(new Date).getFullYear().toString(),publisher:(null===t||void 0===t?void 0:t.publisher)||{name:e.owner,url:""}},i=new s.StagingGroundIntegrationService(this.stagingGroundService,e,e.branch||"main");return new o.DAKObject(e,this.sourceResolver,i,n)}}},33709:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,s)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(){var e=function(t){return e=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},e(t)};return function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var i=e(t),r=0;r<i.length;r++)"default"!==i[r]&&o(n,t,i[r]);return s(n,t),n}}();Object.defineProperty(t,"__esModule",{value:!0}),t.dakService=t.DAKService=void 0;const r=i(n(12790)),a=i(n(81502)),c=n(68190),u=n(22396);class p{constructor(){this.validationService=new u.DAKValidationService}fromLocalRepository(e){return this.loadDAKFromPath(e)}fromGitHubRepository(e,t){return{owner:e,repo:t,branch:arguments.length>2&&void 0!==arguments[2]?arguments[2]:"main",isValidDAK:void 0,lastValidated:void 0}}async validateRepository(e){if(this.isLocalRepository(e)){const t=this.getLocalRepositoryPath(e);return await this.validationService.validateDAKRepository(t)}throw new Error("Remote repository validation not yet implemented")}async loadMetadata(e){if(this.isLocalRepository(e)){const t=this.getLocalRepositoryPath(e);return this.validationService.extractDAKMetadata(t)}throw new Error("Remote metadata loading not yet implemented")}async getComponents(e){const t=[];if(!this.isLocalRepository(e))throw new Error("Remote component detection not yet implemented");{const n=this.getLocalRepositoryPath(e);for(const e of Object.values(c.DAKComponentType))await this.hasComponent(n,e)&&t.push(e)}return t}async getAssets(e,t){if(this.isLocalRepository(e)){const n=this.getLocalRepositoryPath(e);return this.findAssetFiles(n,t)}throw new Error("Remote asset discovery not yet implemented")}async validateComponentFile(e,t,n){if(this.isLocalRepository(e)){const o=this.getLocalRepositoryPath(e),s=r.join(o,t);return this.validationService.validateComponentFile(s,n)}throw new Error("Remote file validation not yet implemented")}async getSummary(e){const[t,n,o]=await Promise.all([this.loadMetadata(e),this.validateRepository(e),this.getComponents(e)]),s={};for(const i of Object.values(c.DAKAssetType)){const t=await this.getAssets(e,i);s[i]=t.length}return{metadata:t,isValid:n.isValid,components:o,assetCounts:s,lastValidated:n.timestamp}}async loadDAKFromPath(e){const t=this.validationService.extractDAKMetadata(e),n=await this.validationService.validateDAKRepository(e);return{owner:"local",repo:r.basename(e),branch:"local",dakMetadata:t,isValidDAK:n.isValid,lastValidated:n.timestamp}}isLocalRepository(e){return"local"===e.owner&&"local"===e.branch}getLocalRepositoryPath(e){return e.repo}async hasComponent(e,t){const n=this.getComponentDirectories(t);for(const o of n){const t=r.join(e,o);if(a.existsSync(t)){if(a.readdirSync(t).length>0)return!0}}return!1}getComponentDirectories(e){return{[c.DAKComponentType.HEALTH_INTERVENTIONS]:["input/pagecontent","input/pages"],[c.DAKComponentType.PERSONAS]:["input/actors","input/personas"],[c.DAKComponentType.USER_SCENARIOS]:["input/scenarios","input/use-cases"],[c.DAKComponentType.BUSINESS_PROCESSES]:["input/business-processes","input/workflows"],[c.DAKComponentType.DATA_ELEMENTS]:["input/profiles","input/extensions"],[c.DAKComponentType.DECISION_LOGIC]:["input/decision-tables","input/logic"],[c.DAKComponentType.INDICATORS]:["input/measures","input/indicators"],[c.DAKComponentType.REQUIREMENTS]:["input/requirements"],[c.DAKComponentType.TEST_SCENARIOS]:["input/tests","input/examples"]}[e]||[]}findAssetFiles(e,t){const n=[],o=this.getAssetExtensions(t),s=this.getAssetSearchDirectories(t);for(const i of s){const t=r.join(e,i);a.existsSync(t)&&this.findFilesRecursively(t,o,n,e)}return n}getAssetExtensions(e){return{[c.DAKAssetType.BPMN]:[".bpmn"],[c.DAKAssetType.DMN]:[".dmn"],[c.DAKAssetType.FHIR_PROFILE]:[".json",".fsh"],[c.DAKAssetType.FHIR_EXTENSION]:[".json",".fsh"],[c.DAKAssetType.VALUE_SET]:[".json",".fsh"],[c.DAKAssetType.CODE_SYSTEM]:[".json",".fsh"],[c.DAKAssetType.QUESTIONNAIRE]:[".json",".fsh"],[c.DAKAssetType.MEASURE]:[".json",".fsh"],[c.DAKAssetType.ACTOR_DEFINITION]:[".json",".fsh"]}[e]||[]}getAssetSearchDirectories(e){return{[c.DAKAssetType.BPMN]:["input/business-processes","input/workflows"],[c.DAKAssetType.DMN]:["input/decision-tables","input/logic"],[c.DAKAssetType.FHIR_PROFILE]:["input/profiles"],[c.DAKAssetType.FHIR_EXTENSION]:["input/extensions"],[c.DAKAssetType.VALUE_SET]:["input/vocabulary"],[c.DAKAssetType.CODE_SYSTEM]:["input/vocabulary"],[c.DAKAssetType.QUESTIONNAIRE]:["input/questionnaires"],[c.DAKAssetType.MEASURE]:["input/measures"],[c.DAKAssetType.ACTOR_DEFINITION]:["input/actors"]}[e]||["input"]}findFilesRecursively(e,t,n,o){const s=a.readdirSync(e);for(const i of s){const s=r.join(e,i);if(a.statSync(s).isDirectory())this.findFilesRecursively(s,t,n,o);else{const e=r.extname(i).toLowerCase();t.includes(e)&&n.push(r.relative(o,s))}}}}t.DAKService=p,t.dakService=new p},37875:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CoreDataElementComponent=void 0;const o=n(68190),s=n(64968);class i extends s.BaseDAKComponentObject{constructor(e,t,n,s){super(o.DAKComponentType.DATA_ELEMENTS,e,t,n,s)}async determineFilePath(e){const t=e.id||"new-data-element";return"input/vocabulary/".concat(t,".json")}serializeToFile(e){return JSON.stringify(e,null,2)}parseFromFile(e){return JSON.parse(e)}async validate(e){const t=[],n=[];if(e.type){const n=["valueset","codesystem","conceptmap","logicalmodel"];n.includes(e.type)||t.push({code:"INVALID_TYPE",message:"Invalid type: ".concat(e.type,". Must be one of: ").concat(n.join(", "))})}else t.push({code:"MISSING_TYPE",message:"Core Data Element must have a type (valueset, codesystem, conceptmap, or logicalmodel)"});if(e.canonical)try{new URL(e.canonical)}catch(o){t.push({code:"INVALID_CANONICAL",message:"Invalid canonical URI: ".concat(e.canonical)})}else t.push({code:"MISSING_CANONICAL",message:"Core Data Element must have a canonical URI"});return e.id||n.push({code:"MISSING_ID",message:"Core Data Element should have an id for better tracking"}),e.description||n.push({code:"MISSING_DESCRIPTION",message:"Core Data Element should have a description"}),{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}}t.CoreDataElementComponent=i},47087:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GenericPersonaComponent=void 0;const o=n(68190),s=n(64968);class i extends s.BaseDAKComponentObject{constructor(e,t,n,s){super(o.DAKComponentType.PERSONAS,e,t,n,s)}async determineFilePath(e){const t=e.id||"new-persona";return"input/fsh/actors/".concat(t,".fsh")}serializeToFile(e){const t=e,n=t.id||"GenericPersona",o=t.title||t.name||n,s=t.description||"";let i="Instance: ".concat(n,"\n");return i+="InstanceOf: GenericPersona\n",i+='Title: "'.concat(o,'"\n'),i+='Description: "'.concat(s,'"\n'),i+="Usage: #definition\n",i+="* code = #generic-persona\n",t.name&&(i+='* name = "'.concat(t.name,'"\n')),i}parseFromFile(e){const t=e.split("\n"),n={personas:[]};for(const a of t){const e=a.trim();var o;if(e.startsWith("Instance:"))n.id=null===(o=e.split(":")[1])||void 0===o?void 0:o.trim();else if(e.startsWith("Title:")){var s;n.title=null===(s=e.split(":")[1])||void 0===s?void 0:s.trim().replace(/"/g,"")}else if(e.startsWith("Description:")){var i;n.description=null===(i=e.split(":")[1])||void 0===i?void 0:i.trim().replace(/"/g,"")}else if(e.includes("* name =")){var r;n.name=null===(r=e.split("=")[1])||void 0===r?void 0:r.trim().replace(/"/g,"")}}return n}async validate(e){const t=[],n=[],o=e;return o.id||n.push({code:"MISSING_ID",message:"Generic Persona should have an id"}),o.name||o.title||t.push({code:"MISSING_NAME",message:"Generic Persona must have either a name or title"}),{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}}t.GenericPersonaComponent=i},47612:(e,t,n)=>{"use strict";var o=n(12897).default;Object.defineProperty(t,"__esModule",{value:!0}),t.DAKObject=void 0;const s=n(68190),i=n(4520);t.DAKObject=class{constructor(e,t,n,o){this.repository=e,this.sourceResolver=t,this.stagingGroundIntegration=n,this.dak=o||this.createEmptyDAK(),this.componentObjects=new Map,this.initializeComponents()}getComponent(e){const t=this.componentObjects.get(e);if(!t)throw new Error("Component not found: ".concat(e));return t}get personas(){return this.getComponent(s.DAKComponentType.PERSONAS)}get dataElements(){return this.getComponent(s.DAKComponentType.DATA_ELEMENTS)}get businessProcesses(){return this.getComponent(s.DAKComponentType.BUSINESS_PROCESSES)}get healthInterventions(){return this.getComponent(s.DAKComponentType.HEALTH_INTERVENTIONS)}get userScenarios(){return this.getComponent(s.DAKComponentType.USER_SCENARIOS)}get decisionLogic(){return this.getComponent(s.DAKComponentType.DECISION_LOGIC)}get indicators(){return this.getComponent(s.DAKComponentType.INDICATORS)}get requirements(){return this.getComponent(s.DAKComponentType.REQUIREMENTS)}get testScenarios(){return this.getComponent(s.DAKComponentType.TEST_SCENARIOS)}getMetadata(){return{id:this.dak.id,name:this.dak.name,title:this.dak.title,description:this.dak.description,version:this.dak.version,status:this.dak.status,publicationUrl:this.dak.publicationUrl,license:this.dak.license,copyrightYear:this.dak.copyrightYear,publisher:this.dak.publisher}}async updateMetadata(e){this.dak=o(o({},this.dak),e),await this.saveDakJson()}toJSON(){const e=o(o({},this.dak),{},{resourceType:"DAK"});for(const[t,n]of this.componentObjects){const o=n.getSources();if(o.length>0){e[this.getDAKPropertyName(t)]=o}}return e}async saveDakJson(){const e=this.toJSON();await this.stagingGroundIntegration.saveDakJson(e)}async updateComponentSources(e,t){const n=this.getDAKPropertyName(e);this.dak[n]=t,await this.saveDakJson()}initializeComponents(){this.componentObjects.set(s.DAKComponentType.HEALTH_INTERVENTIONS,new i.HealthInterventionsComponent(this.repository,this.sourceResolver,this.stagingGroundIntegration,e=>this.updateComponentSources(s.DAKComponentType.HEALTH_INTERVENTIONS,e))),this.componentObjects.set(s.DAKComponentType.PERSONAS,new i.GenericPersonaComponent(this.repository,this.sourceResolver,this.stagingGroundIntegration,e=>this.updateComponentSources(s.DAKComponentType.PERSONAS,e))),this.componentObjects.set(s.DAKComponentType.USER_SCENARIOS,new i.UserScenarioComponent(this.repository,this.sourceResolver,this.stagingGroundIntegration,e=>this.updateComponentSources(s.DAKComponentType.USER_SCENARIOS,e))),this.componentObjects.set(s.DAKComponentType.BUSINESS_PROCESSES,new i.BusinessProcessWorkflowComponent(this.repository,this.sourceResolver,this.stagingGroundIntegration,e=>this.updateComponentSources(s.DAKComponentType.BUSINESS_PROCESSES,e))),this.componentObjects.set(s.DAKComponentType.DATA_ELEMENTS,new i.CoreDataElementComponent(this.repository,this.sourceResolver,this.stagingGroundIntegration,e=>this.updateComponentSources(s.DAKComponentType.DATA_ELEMENTS,e))),this.componentObjects.set(s.DAKComponentType.DECISION_LOGIC,new i.DecisionSupportLogicComponent(this.repository,this.sourceResolver,this.stagingGroundIntegration,e=>this.updateComponentSources(s.DAKComponentType.DECISION_LOGIC,e))),this.componentObjects.set(s.DAKComponentType.INDICATORS,new i.ProgramIndicatorComponent(this.repository,this.sourceResolver,this.stagingGroundIntegration,e=>this.updateComponentSources(s.DAKComponentType.INDICATORS,e))),this.componentObjects.set(s.DAKComponentType.REQUIREMENTS,new i.RequirementsComponent(this.repository,this.sourceResolver,this.stagingGroundIntegration,e=>this.updateComponentSources(s.DAKComponentType.REQUIREMENTS,e))),this.componentObjects.set(s.DAKComponentType.TEST_SCENARIOS,new i.TestScenarioComponent(this.repository,this.sourceResolver,this.stagingGroundIntegration,e=>this.updateComponentSources(s.DAKComponentType.TEST_SCENARIOS,e))),this.loadSourcesIntoComponents()}loadSourcesIntoComponents(){if(this.dak.healthInterventions){const e=this.componentObjects.get(s.DAKComponentType.HEALTH_INTERVENTIONS);e&&e.initializeSources(this.dak.healthInterventions)}if(this.dak.personas){const e=this.componentObjects.get(s.DAKComponentType.PERSONAS);e&&e.initializeSources(this.dak.personas)}if(this.dak.userScenarios){const e=this.componentObjects.get(s.DAKComponentType.USER_SCENARIOS);e&&e.initializeSources(this.dak.userScenarios)}if(this.dak.businessProcesses){const e=this.componentObjects.get(s.DAKComponentType.BUSINESS_PROCESSES);e&&e.initializeSources(this.dak.businessProcesses)}if(this.dak.dataElements){const e=this.componentObjects.get(s.DAKComponentType.DATA_ELEMENTS);e&&e.initializeSources(this.dak.dataElements)}if(this.dak.decisionLogic){const e=this.componentObjects.get(s.DAKComponentType.DECISION_LOGIC);e&&e.initializeSources(this.dak.decisionLogic)}if(this.dak.indicators){const e=this.componentObjects.get(s.DAKComponentType.INDICATORS);e&&e.initializeSources(this.dak.indicators)}if(this.dak.requirements){const e=this.componentObjects.get(s.DAKComponentType.REQUIREMENTS);e&&e.initializeSources(this.dak.requirements)}if(this.dak.testScenarios){const e=this.componentObjects.get(s.DAKComponentType.TEST_SCENARIOS);e&&e.initializeSources(this.dak.testScenarios)}}createEmptyDAK(){return{resourceType:"DAK",id:this.repository.owner+"."+this.repository.repo,name:this.repository.repo,title:this.repository.repo,description:"",version:"0.1.0",status:"draft",publicationUrl:"",license:"CC-BY-4.0",copyrightYear:(new Date).getFullYear().toString(),publisher:{name:this.repository.owner,url:""}}}getDAKPropertyName(e){return{[s.DAKComponentType.HEALTH_INTERVENTIONS]:"healthInterventions",[s.DAKComponentType.PERSONAS]:"personas",[s.DAKComponentType.USER_SCENARIOS]:"userScenarios",[s.DAKComponentType.BUSINESS_PROCESSES]:"businessProcesses",[s.DAKComponentType.DATA_ELEMENTS]:"dataElements",[s.DAKComponentType.DECISION_LOGIC]:"decisionLogic",[s.DAKComponentType.INDICATORS]:"indicators",[s.DAKComponentType.REQUIREMENTS]:"requirements",[s.DAKComponentType.TEST_SCENARIOS]:"testScenarios"}[e]}}},58059:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TestScenarioComponent=void 0;const o=n(68190),s=n(64968);class i extends s.BaseDAKComponentObject{constructor(e,t,n,s){super(o.DAKComponentType.TEST_SCENARIOS,e,t,n,s)}async determineFilePath(e){const t=e.id||"new-test-scenario";return"input/tests/".concat(t,".json")}serializeToFile(e){return JSON.stringify(e,null,2)}parseFromFile(e){return JSON.parse(e)}async validate(e){const t=[],n=[],o=e;return o.id||n.push({code:"MISSING_ID",message:"Test Scenario should have an id"}),o.title||o.name||t.push({code:"MISSING_TITLE",message:"Test Scenario must have a title or name"}),o.testCases||o.scenarios||n.push({code:"NO_TEST_CASES",message:"Test Scenario should contain at least one test case"}),o.description||n.push({code:"MISSING_DESCRIPTION",message:"Test Scenario should have a description"}),{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}}t.TestScenarioComponent=i},64968:(e,t,n)=>{"use strict";var o=n(12897).default;Object.defineProperty(t,"__esModule",{value:!0}),t.BaseDAKComponentObject=void 0;t.BaseDAKComponentObject=class{constructor(e,t,n,o,s){this.componentType=e,this.repository=t,this.sourceResolver=n,this.stagingGroundIntegration=o,this.sources=[],this.cache=new Map,this.onSourcesChanged=s}getSources(){return[...this.sources]}async addSource(e){const t=this.sourceResolver.validateSource(e);if(!t.isValid)throw new Error("Invalid source: ".concat(t.errors.join(", ")));this.sources.push(e),await this.syncSources()}async updateSource(e,t){if(e<0||e>=this.sources.length)throw new Error("Invalid source index: ".concat(e));this.sources[e]=o(o({},this.sources[e]),t),await this.syncSources()}async removeSource(e){if(e<0||e>=this.sources.length)throw new Error("Invalid source index: ".concat(e));this.sources.splice(e,1),await this.syncSources()}async retrieveAll(){const e=[];for(let n=0;n<this.sources.length;n++){const o=this.sources[n];try{const t=await this.sourceResolver.resolveSource(o,this.repository);e.push(t.data);const n=t.data;n&&n.id&&this.cache.set(n.id,t.data)}catch(t){console.error("Failed to resolve source ".concat(n," for ").concat(this.componentType,":"),t)}}return e}async retrieveById(e){if(this.cache.has(e))return this.cache.get(e);const t=(await this.retrieveAll()).find(t=>t.id===e);return t&&this.cache.set(e,t),t||null}async save(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{path:n,inline:o=!1,message:s="Update ".concat(this.componentType),updateExisting:i=!0}=t;if(o)await this.saveInline(e,i);else if(n)await this.saveToFile(e,n,s);else{const t=await this.determineFilePath(e);await this.saveToFile(e,t,s)}}async validate(e){const t=[],n=[];return e.id||n.push({code:"MISSING_ID",message:"Instance data should have an id property"}),{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}async validateAll(){const e=await this.retrieveAll(),t=[];for(const n of e)t.push(await this.validate(n));return t}async saveInline(e,t){if(t){const t=this.sources.findIndex(e=>void 0!==e.instance);if(t>=0)return void await this.updateSource(t,{instance:e})}await this.addSource({instance:e,metadata:{addedAt:(new Date).toISOString(),addedBy:"sgex-workbench",sourceType:"inline"}})}async saveToFile(e,t,n){const o=this.serializeToFile(e);await this.stagingGroundIntegration.saveComponentArtifact(this.componentType,t,o,{message:n});const s=this.stagingGroundIntegration.createRelativeUrlSource(t,{lastValidated:(new Date).toISOString(),savedBy:"sgex-workbench"}),i=this.sources.findIndex(e=>e.url===s.url);i>=0?await this.updateSource(i,s):await this.addSource(s);const r=e;r.id&&this.cache.set(r.id,e)}async syncSources(){await this.stagingGroundIntegration.updateComponentSources(this.componentType,this.sources),this.onSourcesChanged&&await this.onSourcesChanged(this.sources)}initializeSources(e){this.sources=e}}},68190:(e,t)=>{"use strict";var n,o;Object.defineProperty(t,"__esModule",{value:!0}),t.DAKAssetType=t.DAKComponentType=void 0,function(e){e.HEALTH_INTERVENTIONS="healthInterventions",e.PERSONAS="personas",e.USER_SCENARIOS="userScenarios",e.BUSINESS_PROCESSES="businessProcesses",e.DATA_ELEMENTS="dataElements",e.DECISION_LOGIC="decisionLogic",e.INDICATORS="indicators",e.REQUIREMENTS="requirements",e.TEST_SCENARIOS="testScenarios"}(n||(t.DAKComponentType=n={})),function(e){e.BPMN="bpmn",e.DMN="dmn",e.FHIR_PROFILE="fhir-profile",e.FHIR_EXTENSION="fhir-extension",e.VALUE_SET="value-set",e.CODE_SYSTEM="code-system",e.QUESTIONNAIRE="questionnaire",e.MEASURE="measure",e.ACTOR_DEFINITION="actor-definition"}(o||(t.DAKAssetType=o={}))},70832:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SourceResolutionService=void 0;t.SourceResolutionService=class{constructor(e){this.cache=new Map,this.cacheTTL=3e5,e&&(this.cacheTTL=e)}async resolveSource(e,t){const n=this.determineSourceType(e),o=this.getCacheKey(e,t),s=this.getFromCache(o);if(s)return{data:s,source:e,resolutionMethod:"cache",resolvedAt:new Date};let i,r;try{switch(n){case"canonical":i=await this.resolveCanonical(e.canonical),r="canonical";break;case"url-absolute":i=await this.resolveAbsoluteUrl(e.url),r="url-absolute";break;case"url-relative":i=await this.resolveRelativeUrl(e.url,t),r="url-relative";break;case"inline":i=this.resolveInline(e.instance),r="inline";break;default:throw new Error("Unable to determine source type for source: ".concat(JSON.stringify(e)))}return this.addToCache(o,i),{data:i,source:e,resolutionMethod:r,resolvedAt:new Date}}catch(a){throw new Error("Failed to resolve source (type: ".concat(n,"): ").concat(a))}}determineSourceType(e){if(void 0!==e.instance)return"inline";if(e.url)try{return new URL(e.url),"url-absolute"}catch(t){return"url-relative"}if(e.canonical)return"canonical";throw new Error("Source must have at least one of: canonical, url, or instance")}validateSource(e){const t=[],n=[];let o;try{o=this.determineSourceType(e)}catch(s){return t.push("".concat(s)),{isValid:!1,sourceType:"inline",errors:t,warnings:n}}switch(o){case"canonical":this.isValidUrl(e.canonical)||t.push("Invalid canonical IRI: ".concat(e.canonical));break;case"url-absolute":this.isValidUrl(e.url)||t.push("Invalid absolute URL: ".concat(e.url));break;case"url-relative":this.isValidRelativePath(e.url)||t.push("Invalid relative URL: ".concat(e.url));break;case"inline":null!==e.instance&&void 0!==e.instance||t.push("Inline instance cannot be null or undefined")}return{isValid:0===t.length,sourceType:o,errors:t,warnings:n}}clearCache(){this.cache.clear()}clearCacheForSource(e,t){const n=this.getCacheKey(e,t);this.cache.delete(n)}async resolveCanonical(e){const t=await fetch(e);if(!t.ok)throw new Error("Failed to fetch canonical resource: ".concat(t.status," ").concat(t.statusText));const n=t.headers.get("content-type");if(null!==n&&void 0!==n&&n.includes("application/json"))return await t.json();return await t.text()}async resolveAbsoluteUrl(e){const t=await fetch(e);if(!t.ok)throw new Error("Failed to fetch URL: ".concat(t.status," ").concat(t.statusText));const n=t.headers.get("content-type");if(null!==n&&void 0!==n&&n.includes("application/json"))return await t.json();return await t.text()}async resolveRelativeUrl(e,t){const n="input/".concat(e);throw new Error("Relative URL resolution not yet implemented. "+"Path: ".concat(n," in ").concat(t.owner,"/").concat(t.repo,"/").concat(t.branch||"main"))}resolveInline(e){return e}getCacheKey(e,t){const n=this.determineSourceType(e),o=e.canonical||e.url||JSON.stringify(e.instance),s="".concat(t.owner,"/").concat(t.repo,"/").concat(t.branch||"main");return"".concat(n,":").concat(s,":").concat(o)}getFromCache(e){const t=this.cache.get(e);return t?Date.now()-t.timestamp>this.cacheTTL?(this.cache.delete(e),null):t.data:null}addToCache(e,t){this.cache.set(e,{data:t,timestamp:Date.now()})}isValidUrl(e){try{return new URL(e),!0}catch(t){return!1}}isValidRelativePath(e){return!e.startsWith("/")&&!e.startsWith("\\")&&!e.includes("..")}}},77452:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProgramIndicatorComponent=void 0;const o=n(68190),s=n(64968);class i extends s.BaseDAKComponentObject{constructor(e,t,n,s){super(o.DAKComponentType.INDICATORS,e,t,n,s)}async determineFilePath(e){const t=e.id||"new-indicator";return"input/indicators/".concat(t,".json")}serializeToFile(e){return JSON.stringify(e,null,2)}parseFromFile(e){return JSON.parse(e)}async validate(e){const t=[],n=[],o=e;return o.id||n.push({code:"MISSING_ID",message:"Program Indicator should have an id"}),o.name||o.title||t.push({code:"MISSING_NAME",message:"Program Indicator must have a name or title"}),o.description||n.push({code:"MISSING_DESCRIPTION",message:"Program Indicator should have a description"}),o.numerator||o.denominator||n.push({code:"MISSING_CALCULATION",message:"Program Indicator should define numerator and denominator"}),{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}}t.ProgramIndicatorComponent=i},79690:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserScenarioComponent=void 0;const o=n(68190),s=n(64968);class i extends s.BaseDAKComponentObject{constructor(e,t,n,s){super(o.DAKComponentType.USER_SCENARIOS,e,t,n,s)}async determineFilePath(e){const t=e.id||"new-scenario";return"input/scenarios/".concat(t,".md")}serializeToFile(e){const t=e;if(t.markdown)return t.markdown;const n=t.title||t.name||"User Scenario",o=t.description||"";let s="# ".concat(n,"\n\n");return o&&(s+="".concat(o,"\n\n")),t.actors&&Array.isArray(t.actors)&&(s+="## Actors\n\n",t.actors.forEach(e=>{s+="- ".concat(e,"\n")}),s+="\n"),t.steps&&Array.isArray(t.steps)&&(s+="## Steps\n\n",t.steps.forEach((e,t)=>{s+="".concat(t+1,". ").concat(e,"\n")})),s}parseFromFile(e){const t={scenarios:[],actors:[],steps:[]},n=e.split("\n");let o="";for(const s of n){const e=s.trim();e.startsWith("# ")?t.title=e.substring(2):e.startsWith("## ")?o=e.substring(3).toLowerCase():e.startsWith("- ")&&"actors"===o?t.actors.push(e.substring(2)):/^\d+\.\s/.test(e)&&"steps"===o&&t.steps.push(e.replace(/^\d+\.\s/,""))}return t.markdown=e,t}async validate(e){const t=[],n=[],o=e;return o.id||n.push({code:"MISSING_ID",message:"User Scenario should have an id"}),o.title||o.name||t.push({code:"MISSING_TITLE",message:"User Scenario must have a title or name"}),o.actors&&0!==o.actors.length||n.push({code:"NO_ACTORS",message:"User Scenario should define at least one actor"}),o.steps&&0!==o.steps.length||n.push({code:"NO_STEPS",message:"User Scenario should define at least one step"}),{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}}t.UserScenarioComponent=i},81502:()=>{},90119:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,s)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),s=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||o(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.DAKAssetType=t.DAKComponentType=t.StagingGroundIntegrationService=t.DAKFactory=t.DAKObject=t.SourceResolutionService=t.decisionTableCore=t.DecisionTableCore=t.questionnaireDefinitionCore=t.QuestionnaireDefinitionCore=t.actorDefinitionCore=t.ActorDefinitionCore=t.DAKValidationService=t.dakService=t.DAKService=void 0,s(n(68190),t);var i=n(33709);Object.defineProperty(t,"DAKService",{enumerable:!0,get:function(){return i.DAKService}}),Object.defineProperty(t,"dakService",{enumerable:!0,get:function(){return i.dakService}});var r=n(22396);Object.defineProperty(t,"DAKValidationService",{enumerable:!0,get:function(){return r.DAKValidationService}});var a=n(64738);Object.defineProperty(t,"ActorDefinitionCore",{enumerable:!0,get:function(){return a.ActorDefinitionCore}}),Object.defineProperty(t,"actorDefinitionCore",{enumerable:!0,get:function(){return a.actorDefinitionCore}});var c=n(84198);Object.defineProperty(t,"QuestionnaireDefinitionCore",{enumerable:!0,get:function(){return c.QuestionnaireDefinitionCore}}),Object.defineProperty(t,"questionnaireDefinitionCore",{enumerable:!0,get:function(){return c.questionnaireDefinitionCore}});var u=n(34708);Object.defineProperty(t,"DecisionTableCore",{enumerable:!0,get:function(){return u.DecisionTableCore}}),Object.defineProperty(t,"decisionTableCore",{enumerable:!0,get:function(){return u.decisionTableCore}});var p=n(70832);Object.defineProperty(t,"SourceResolutionService",{enumerable:!0,get:function(){return p.SourceResolutionService}}),s(n(64968),t),s(n(4520),t);var l=n(47612);Object.defineProperty(t,"DAKObject",{enumerable:!0,get:function(){return l.DAKObject}});var d=n(27913);Object.defineProperty(t,"DAKFactory",{enumerable:!0,get:function(){return d.DAKFactory}});var m=n(24903);Object.defineProperty(t,"StagingGroundIntegrationService",{enumerable:!0,get:function(){return m.StagingGroundIntegrationService}}),s(n(62600),t),s(n(9646),t);var h=n(68190);Object.defineProperty(t,"DAKComponentType",{enumerable:!0,get:function(){return h.DAKComponentType}}),Object.defineProperty(t,"DAKAssetType",{enumerable:!0,get:function(){return h.DAKAssetType}})},95036:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HealthInterventionsComponent=void 0;const o=n(68190),s=n(64968);class i extends s.BaseDAKComponentObject{constructor(e,t,n,s){super(o.DAKComponentType.HEALTH_INTERVENTIONS,e,t,n,s)}async determineFilePath(e){const t=e.id||"health-interventions";return"input/pagecontent/l2-dak-".concat(t,".md")}serializeToFile(e){const t=e;if(t.markdown)return t.markdown;const n=t.title||"Health Interventions",o=t.description||"";let s="# ".concat(n,"\n\n");return o&&(s+="".concat(o,"\n\n")),t.interventions&&Array.isArray(t.interventions)&&(s+="## Interventions\n\n",t.interventions.forEach(e=>{s+="- ".concat(e.name||e.title||"Intervention","\n")})),s}parseFromFile(e){const t={interventions:[]},n=e.split("\n");let o="";for(const s of n){const e=s.trim();e.startsWith("# ")?t.title=e.substring(2):e.startsWith("## ")?o=e.substring(3).toLowerCase():e.startsWith("- ")&&"interventions"===o&&t.interventions.push({name:e.substring(2)})}return t.markdown=e,t}async validate(e){const t=[],n=[],o=e;return o.id||n.push({code:"MISSING_ID",message:"Health Interventions should have an id"}),o.title||o.markdown||n.push({code:"MISSING_CONTENT",message:"Health Interventions should have a title or markdown content"}),o.interventions&&0!==o.interventions.length||n.push({code:"NO_INTERVENTIONS",message:"Health Interventions should contain at least one intervention"}),{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}}t.HealthInterventionsComponent=i},95067:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BusinessProcessWorkflowComponent=void 0;const o=n(68190),s=n(64968);class i extends s.BaseDAKComponentObject{constructor(e,t,n,s){super(o.DAKComponentType.BUSINESS_PROCESSES,e,t,n,s)}async determineFilePath(e){const t=e.id||"new-process";return"input/process/".concat(t,".bpmn")}serializeToFile(e){const t=e;if(t.bpmnXML)return t.bpmnXML;const n=t.id||"Process_1",o=t.name||t.title||"Business Process";return'<?xml version="1.0" encoding="UTF-8"?>\n<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" \n                   xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" \n                   xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"\n                   id="Definitions_'.concat(n,'" \n                   targetNamespace="http://bpmn.io/schema/bpmn">\n  <bpmn:process id="').concat(n,'" name="').concat(o,'" isExecutable="false">\n    <bpmn:startEvent id="StartEvent_1" name="Start" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id="BPMNDiagram_1">\n    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="').concat(n,'">\n      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">\n        <dc:Bounds x="179" y="99" width="36" height="36" />\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>')}parseFromFile(e){const t={processes:[]},n=e.match(/process id="([^"]+)"/);n&&(t.id=n[1]);const o=e.match(/process id="[^"]+" name="([^"]+)"/);return o&&(t.name=o[1]),t.bpmnXML=e,t}async validate(e){const t=[],n=[],o=e;if(o.id||n.push({code:"MISSING_ID",message:"Business Process should have an id"}),o.bpmnXML||o.name||t.push({code:"MISSING_CONTENT",message:"Business Process must have either bpmnXML content or a name"}),o.bpmnXML)try{o.bpmnXML.includes("<bpmn:definitions")&&o.bpmnXML.includes("</bpmn:definitions>")||t.push({code:"INVALID_BPMN",message:"BPMN XML appears to be malformed"})}catch(s){t.push({code:"BPMN_PARSE_ERROR",message:"Error parsing BPMN XML: ".concat(s)})}return{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}}t.BusinessProcessWorkflowComponent=i},97836:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DecisionSupportLogicComponent=void 0;const o=n(68190),s=n(64968);class i extends s.BaseDAKComponentObject{constructor(e,t,n,s){super(o.DAKComponentType.DECISION_LOGIC,e,t,n,s)}async determineFilePath(e){const t=e.id||"new-decision-logic";return"input/decision-support/".concat(t,".dmn")}serializeToFile(e){const t=e;if(t.dmnXML)return t.dmnXML;const n=t.id||"Decision_1",o=t.name||t.title||"Decision Logic";return'<?xml version="1.0" encoding="UTF-8"?>\n<definitions xmlns="https://www.omg.org/spec/DMN/20191111/MODEL/" \n             xmlns:dmndi="https://www.omg.org/spec/DMN/20191111/DMNDI/" \n             xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"\n             id="Definitions_'.concat(n,'" \n             name="').concat(o,'" \n             namespace="http://camunda.org/schema/1.0/dmn">\n  <decision id="').concat(n,'" name="').concat(o,'">\n    <decisionTable id="DecisionTable_1">\n      <input id="Input_1" label="">\n        <inputExpression id="InputExpression_1" typeRef="string">\n          <text></text>\n        </inputExpression>\n      </input>\n      <output id="Output_1" label="" name="" typeRef="string" />\n    </decisionTable>\n  </decision>\n</definitions>')}parseFromFile(e){const t={logic:[]},n=e.match(/decision id="([^"]+)"/);n&&(t.id=n[1]);const o=e.match(/decision id="[^"]+" name="([^"]+)"/);return o&&(t.name=o[1]),t.dmnXML=e,t}async validate(e){const t=[],n=[],o=e;if(o.id||n.push({code:"MISSING_ID",message:"Decision Support Logic should have an id"}),o.dmnXML||o.name||t.push({code:"MISSING_CONTENT",message:"Decision Support Logic must have either dmnXML content or a name"}),o.dmnXML)try{o.dmnXML.includes("<definitions")&&o.dmnXML.includes("</definitions>")||t.push({code:"INVALID_DMN",message:"DMN XML appears to be malformed"})}catch(s){t.push({code:"DMN_PARSE_ERROR",message:"Error parsing DMN XML: ".concat(s)})}return{isValid:0===t.length,errors:t,warnings:n,timestamp:new Date}}}t.DecisionSupportLogicComponent=i}}]);