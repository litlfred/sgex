"use strict";(self.webpackChunksgex_workbench=self.webpackChunksgex_workbench||[]).push([[1656],{61656:(e,n,a)=>{a.r(n),a.d(n,{default:()=>c});var t=a(9950),s=a(67818),r=a(53782),o=a(29946),i=a(29166),l=a(44414);const c=()=>{const{t:e}=(0,s.Bd)(),[n,a]=(0,t.useState)([]),[c,d]=(0,t.useState)([]),[u,h]=(0,t.useState)(!0),[m,g]=(0,t.useState)(null),[p,j]=(0,t.useState)([]),[f,x]=(0,t.useState)(["en"]),[y,v]=(0,t.useState)(!1),[b,N]=(0,t.useState)(""),[w,S]=(0,t.useState)([]),[k,G]=(0,t.useState)(!1),[C,T]=(0,t.useState)(""),E=[{code:"en",name:"English"},{code:"fr",name:"French"},{code:"es",name:"Spanish"},{code:"ar",name:"Arabic"},{code:"zh",name:"Chinese"},{code:"ru",name:"Russian"}];(0,t.useEffect)(()=>{R()},[]);const R=async()=>{try{h(!0),g(null);const e=await D();a(e);const n=await F();d(n);const t=await A();S(t)}catch(e){console.error("Error loading tutorial data:",e),g(e.message)}finally{h(!1)}},D=async()=>{try{const n=o.A.getCurrentRepository();if(!n)throw new Error("No repository context available. Please authenticate and select a repository first.");const a=await o.A.getFileContent(n.owner,n.name,"features",n.branch||"main");if(a&&Array.isArray(a)){const t=a.filter(e=>e.name.endsWith(".feature")).map(e=>({name:e.name,path:e.path,hasNarration:!1,description:e.name.replace(".feature","").replace(/-/g," ")}));for(const a of t)try{const e=await o.A.getFileContent(n.owner,n.name,a.path,n.branch||"main");e&&"string"===typeof e&&(a.hasNarration=/\b(say|narrate|speak)\b/i.test(e),a.content=e)}catch(e){console.warn("Could not load content for ".concat(a.name,":"),e)}return t.filter(e=>e.hasNarration)}return[]}catch(m){return console.error("Error loading feature files:",m),[]}},F=async()=>{try{const n=o.A.getCurrentRepository();if(!n)return[];try{const e=await o.A.getFileContent(n.owner,n.name,"tutorials",n.branch||"main");if(e&&Array.isArray(e)){return e.filter(e=>e.name.endsWith(".mp4")).map(e=>({name:e.name,path:e.path,size:e.size,lastModified:e.last_modified||(new Date).toISOString()}))}}catch(e){console.info("No tutorials directory found - this is normal for new repositories")}return[]}catch(m){return console.error("Error loading local tutorials:",m),[]}},A=async()=>{try{const e=o.A.getCurrentRepository();if(!e)return[];const n=await o.A.getRepositoryReleases(e.owner,e.name);return n.filter(e=>e.tag_name.startsWith("tutorial-v")||e.assets.some(e=>e.name.endsWith(".mp4"))).map(e=>({id:e.id,tagName:e.tag_name,name:e.name,publishedAt:e.published_at,assets:e.assets.filter(e=>e.name.endsWith(".mp4")||e.name.endsWith(".srt")||e.name.endsWith(".html"))}))}catch(m){return console.error("Error loading tutorial releases:",m),[]}},M=(e,a)=>{const t=o.A.getCurrentRepository(),s="https://github.com/".concat(t.owner,"/").concat(t.name),r=t.branch||"main";return"# SGEX Tutorial Generation Guide\n\nGenerated on: ".concat((new Date).toISOString(),"\nRepository: ").concat(s,"\nBranch: ").concat(r,"\nSelected Features: ").concat(e.join(", "),"\nLanguages: ").concat(a.map(e=>{var n;return(null===(n=E.find(n=>n.code===e))||void 0===n?void 0:n.name)||e}).join(", "),"\n\n## Prerequisites\n\nBefore generating tutorials, ensure you have the following installed on your local machine:\n\n### System Dependencies\n```bash\n# Install eSpeak NG for text-to-speech\nsudo apt-get update\nsudo apt-get install -y espeak-ng espeak-ng-data\n\n# Install FFmpeg for video processing\nsudo apt-get install -y ffmpeg\n\n# Install additional audio tools\nsudo apt-get install -y sox libsox-fmt-all\n```\n\n### Node.js Dependencies\n```bash\n# Install Playwright for screen recording\nnpm install -D @playwright/test\n\n# Install Gherkin parser\nnpm install -D @cucumber/gherkin\n\n# Install browsers\nnpx playwright install chromium\n```\n\n## Local Generation Process\n\n### Step 1: Clone the Repository Locally\n```bash\ngit clone ").concat(s,".git\ncd ").concat(t.name,"\ngit checkout ").concat(r,"\nnpm install\n```\n\n### Step 2: Start Local Development Server\n```bash\nnpm start\n# Server will run on http://localhost:3000/sgex\n```\n\n### Step 3: Generate Tutorials\nRun the tutorial generation command with your selected features and languages:\n\n```bash\n# Generate tutorials for selected features\nnpm run tutorial:generate -- --features ").concat(e.join(",")," --languages ").concat(a.join(","),"\n\n# Or generate individual features:\n").concat(e.map(e=>"npm run tutorial:generate-local -- --features ".concat(e," --languages ").concat(a.join(","))).join("\n"),"\n```\n\n### Step 4: Review Generated Content\n\nAfter generation, you'll find the following in your local directory:\n\n```\ntutorials/\n\u251c\u2500\u2500 ").concat(e.map(e=>"".concat(e,"-").concat(a[0],".mp4")).join("\n\u251c\u2500\u2500 "),"\n").concat(a.length>1?"\u251c\u2500\u2500 ".concat(e.map(e=>a.slice(1).map(n=>"".concat(e,"-").concat(n,".mp4")).join("\n\u251c\u2500\u2500 ")).join("\n\u251c\u2500\u2500 ")):"","\naudio/\n\u251c\u2500\u2500 ").concat(a.map(n=>"".concat(n,"/\n\u2502   \u251c\u2500\u2500 ").concat(e.map(e=>"".concat(e,"-narration-*.wav")).join("\n\u2502   \u251c\u2500\u2500 "))).join("\n\u251c\u2500\u2500 "),"\ndocs/\n\u2514\u2500\u2500 user-journey/\n    \u251c\u2500\u2500 ").concat(e.map(e=>"".concat(e,".md")).join("\n    \u251c\u2500\u2500 "),'\n    \u2514\u2500\u2500 README.md\n```\n\n### Step 5: Test and Validate\n\n1. **Test Videos**: Play each generated video to ensure quality\n2. **Check Audio**: Verify narration timing and clarity\n3. **Review Documentation**: Ensure all documentation is accurate\n4. **Size Check**: Verify videos are appropriately compressed (target: 5-15 MB each)\n\n### Step 6: Upload to GitHub Releases\n\nOnce satisfied with the tutorial quality, you can upload them to GitHub:\n\n1. **Create Release**: Use the "Upload to GitHub" button in the SGEX Tutorial Manager\n2. **Or Manual Upload**: \n   ```bash\n   # Create a new release\n   gh release create tutorial-v$(date +%Y%m%d-%H%M) tutorials/*.mp4 tutorials/*.srt docs/user-journey/README.md\n   ```\n\n## Feature Files to Process\n\n').concat(e.map(e=>{const a=n.find(n=>n.name===e+".feature");return"### ".concat(e,"\n**File**: features/").concat(e,".feature\n**Description**: ").concat((null===a||void 0===a?void 0:a.description)||e.replace(/-/g," "),"\n**Has Narration**: ").concat(null!==a&&void 0!==a&&a.hasNarration?"\u2705":"\u274c","\n\n").concat(null!==a&&void 0!==a&&a.content?"**Content Preview**:\n```gherkin\n".concat(a.content.split("\n").slice(0,10).join("\n")).concat(a.content.split("\n").length>10?"\n...":"","\n```\n"):"")}).join("\n\n"),"\n\n## Language Configuration\n\n").concat(a.map(e=>{const n=E.find(n=>n.code===e);return"### ".concat((null===n||void 0===n?void 0:n.name)||e," (").concat(e,")\n- **eSpeak Voice**: ").concat(L(e),"\n- **TTS Speed**: 150 words per minute\n- **Output Format**: WAV, 44.1kHz")}).join("\n\n"),"\n\n## Troubleshooting\n\n### Common Issues\n\n1. **eSpeak not found**: Install eSpeak NG using the commands above\n2. **Playwright browser not found**: Run `npx playwright install chromium`\n3. **FFmpeg not found**: Install FFmpeg using package manager\n4. **Permission denied**: Ensure you have write permissions to the tutorials directory\n\n### Support\n\n- **Repository Issues**: ").concat(s,"/issues\n- **SGEX Documentation**: Check the public/docs/ directory\n- **Video Size Too Large**: Adjust compression settings in the video processor\n\n## Next Steps\n\n1. Follow the generation process above\n2. Test all generated tutorials\n3. Use the SGEX Tutorial Manager to upload to GitHub releases\n4. Update documentation with new tutorial links\n\n---\n*This guide was generated by SGEX Tutorial Manager on ").concat((new Date).toLocaleDateString(),"*\n")},L=e=>({en:"en+f3",fr:"fr+f2",es:"es+f2",ar:"ar+f1",zh:"zh+f1",ru:"ru+f2"}[e]||"en+f3");return u?(0,l.jsx)(r.Mx,{title:"Tutorial Manager",description:"Generate and manage SGEX screen recording tutorials",className:"tutorial-manager-page",children:(0,l.jsx)("div",{className:"tutorial-manager-container",children:(0,l.jsxs)("div",{className:"loading-state",children:[(0,l.jsx)("div",{className:"loading-spinner"}),(0,l.jsx)("p",{children:"Loading tutorial data..."})]})})}):m?(0,l.jsx)(r.Mx,{title:"Tutorial Manager",description:"Generate and manage SGEX screen recording tutorials",className:"tutorial-manager-page",children:(0,l.jsx)("div",{className:"tutorial-manager-container",children:(0,l.jsxs)("div",{className:"error-state",children:[(0,l.jsx)("h3",{children:"Error Loading Tutorial Data"}),(0,l.jsx)("p",{children:m}),(0,l.jsx)("button",{onClick:R,className:"retry-button",children:"Retry"})]})})}):(0,l.jsxs)(r.Mx,{title:"Tutorial Manager",description:"Generate and manage SGEX screen recording tutorials",className:"tutorial-manager-page",children:[(0,l.jsxs)("div",{className:"tutorial-manager-container",children:[(0,l.jsxs)("div",{className:"tutorial-manager-header",children:[(0,l.jsx)("h1",{children:"SGEX Tutorial Manager"}),(0,l.jsx)("p",{children:"Generate, manage, and upload screen recording tutorials for SGEX Workbench user journey scenarios."})]}),(0,l.jsxs)("div",{className:"tutorial-sections",children:[(0,l.jsxs)("div",{className:"tutorial-section",children:[(0,l.jsx)("h2",{children:"\ud83d\udcc1 Available Feature Files"}),(0,l.jsx)("div",{className:"feature-selection",children:n.length>0?n.map(e=>(0,l.jsx)("div",{className:"feature-item",children:(0,l.jsxs)("label",{className:"feature-label",children:[(0,l.jsx)("input",{type:"checkbox",checked:p.includes(e.name.replace(".feature","")),onChange:n=>{return a=e.name.replace(".feature",""),t=n.target.checked,void j(t?[...p,a]:p.filter(e=>e!==a));var a,t}}),(0,l.jsx)("span",{className:"feature-name",children:e.description}),(0,l.jsxs)("span",{className:"feature-file",children:["(",e.name,")"]}),e.hasNarration&&(0,l.jsx)("span",{className:"narration-badge",children:"\ud83c\udf99\ufe0f Has Narration"})]})},e.name)):(0,l.jsxs)("div",{className:"no-features",children:[(0,l.jsx)("p",{children:"No feature files with narration found in the repository."}),(0,l.jsxs)("p",{children:["Feature files should be located in the ",(0,l.jsx)("code",{children:"features/"}),' directory and contain narration keywords like "say", "narrate", or "speak".']})]})})]}),(0,l.jsxs)("div",{className:"tutorial-section",children:[(0,l.jsx)("h2",{children:"\ud83c\udf0d Tutorial Languages"}),(0,l.jsx)("div",{className:"language-selection",children:E.map(e=>(0,l.jsxs)("label",{className:"language-label",children:[(0,l.jsx)("input",{type:"checkbox",checked:f.includes(e.code),onChange:n=>{return a=e.code,t=n.target.checked,void x(t?[...f,a]:f.filter(e=>e!==a));var a,t}}),(0,l.jsxs)("span",{className:"language-name",children:[e.name," (",e.code,")"]})]},e.code))})]}),(0,l.jsxs)("div",{className:"tutorial-section",children:[(0,l.jsx)("h2",{children:"\ud83c\udfac Tutorial Generation"}),(0,l.jsxs)("div",{className:"generation-controls",children:[(0,l.jsx)("button",{onClick:async()=>{if(0!==p.length)if(0!==f.length){v(!0),N("Starting tutorial generation...");try{N("Creating tutorial generation guide...");const e=M(p,f);N("Tutorial generation guide created. Check the console for details."),console.log("=== TUTORIAL GENERATION GUIDE ==="),console.log(e);const n=new Blob([e],{type:"text/markdown"}),a=URL.createObjectURL(n),t=document.createElement("a");t.href=a,t.download="tutorial-generation-guide-".concat((new Date).toISOString().split("T")[0],".md"),document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(a),N("Tutorial generation guide downloaded. Follow the instructions to create videos locally."),setTimeout(R,1e3)}catch(m){console.error("Error generating tutorials:",m),N("Error: ".concat(m.message))}finally{v(!1)}}else alert("Please select at least one language for tutorial generation.");else alert("Please select at least one feature file to generate tutorials for.")},disabled:y||0===p.length||0===f.length,className:"generate-button",children:y?"Generating...":"Generate Tutorial Guide"}),y&&(0,l.jsxs)("div",{className:"generation-progress",children:[(0,l.jsx)("div",{className:"progress-spinner"}),(0,l.jsx)("p",{children:b})]}),!y&&b&&(0,l.jsx)("div",{className:"generation-status",children:(0,l.jsx)("p",{children:b})})]}),(0,l.jsxs)("div",{className:"generation-info",children:[(0,l.jsx)("h3",{children:"How it works:"}),(0,l.jsxs)("ol",{children:[(0,l.jsxs)("li",{children:[(0,l.jsx)("strong",{children:"Select Features:"})," Choose which user scenarios to generate tutorials for"]}),(0,l.jsxs)("li",{children:[(0,l.jsx)("strong",{children:"Choose Languages:"})," Select narration languages for multilingual support"]}),(0,l.jsxs)("li",{children:[(0,l.jsx)("strong",{children:"Generate Guide:"})," Download a comprehensive guide for local tutorial generation"]}),(0,l.jsxs)("li",{children:[(0,l.jsx)("strong",{children:"Local Generation:"})," Follow the guide to generate videos on your local machine"]}),(0,l.jsxs)("li",{children:[(0,l.jsx)("strong",{children:"Upload Results:"})," Upload finished tutorials to GitHub releases for distribution"]})]})]})]}),c.length>0&&(0,l.jsxs)("div",{className:"tutorial-section",children:[(0,l.jsx)("h2",{children:"\ud83c\udfa5 Local Tutorial Files"}),(0,l.jsx)("div",{className:"tutorial-list",children:c.map(e=>(0,l.jsxs)("div",{className:"tutorial-item",children:[(0,l.jsx)("span",{className:"tutorial-name",children:e.name}),(0,l.jsxs)("span",{className:"tutorial-size",children:[(e.size/1024/1024).toFixed(2)," MB"]}),(0,l.jsx)("span",{className:"tutorial-modified",children:new Date(e.lastModified).toLocaleDateString()})]},e.name))}),(0,l.jsx)("button",{onClick:async()=>{try{G(!0),T("Preparing upload..."),T("GitHub upload functionality requires local file system access. Please use the CLI tools or GitHub web interface to upload tutorial files.")}catch(m){console.error("Error uploading to GitHub:",m),T("Upload error: ".concat(m.message))}},className:"upload-button",children:"\ud83d\udce4 Upload to GitHub Releases"})]}),w.length>0&&(0,l.jsxs)("div",{className:"tutorial-section",children:[(0,l.jsx)("h2",{children:"\ud83d\ude80 Published Tutorial Releases"}),(0,l.jsx)("div",{className:"releases-list",children:w.map(e=>(0,l.jsxs)("div",{className:"release-item",children:[(0,l.jsxs)("div",{className:"release-header",children:[(0,l.jsx)("h3",{children:e.name}),(0,l.jsx)("span",{className:"release-date",children:new Date(e.publishedAt).toLocaleDateString()})]}),(0,l.jsx)("div",{className:"release-assets",children:e.assets.map(e=>(0,l.jsxs)("a",{href:e.browser_download_url,target:"_blank",rel:"noopener noreferrer",className:"asset-link",children:[e.name,(0,l.jsxs)("span",{className:"asset-size",children:["(",(e.size/1024/1024).toFixed(2)," MB)"]})]},e.id))})]},e.id))})]})]}),k&&(0,l.jsx)("div",{className:"upload-dialog-overlay",children:(0,l.jsxs)("div",{className:"upload-dialog",children:[(0,l.jsxs)("div",{className:"upload-dialog-header",children:[(0,l.jsx)("h3",{children:"Upload Tutorials to GitHub"}),(0,l.jsx)("button",{onClick:()=>G(!1),className:"close-dialog-button",children:"\xd7"})]}),(0,l.jsxs)("div",{className:"upload-dialog-content",children:[(0,l.jsx)("p",{children:C}),(0,l.jsxs)("div",{className:"upload-instructions",children:[(0,l.jsx)("h4",{children:"Manual Upload Instructions:"}),(0,l.jsxs)("ol",{children:[(0,l.jsx)("li",{children:"Navigate to your repository's GitHub page"}),(0,l.jsx)("li",{children:'Go to "Releases" tab'}),(0,l.jsx)("li",{children:'Click "Create a new release"'}),(0,l.jsxs)("li",{children:["Use tag format: ",(0,l.jsxs)("code",{children:["tutorial-v",(new Date).getFullYear(),((new Date).getMonth()+1).toString().padStart(2,"0"),(new Date).getDate().toString().padStart(2,"0")]})]}),(0,l.jsx)("li",{children:"Upload your tutorial MP4, SRT, and documentation files"}),(0,l.jsx)("li",{children:"Publish the release"})]})]})]})]})})]}),(0,l.jsx)(i.A,{pageId:"local-tutorial-manager",contextData:{featuresCount:n.length,tutorialsCount:c.length,releasesCount:w.length}})]})}}}]);