{"version":3,"file":"static/js/539.0ad6836e.chunk.js","mappings":"2LAKA,MA2LA,EA3L2BA,IAAkB,IAAjB,QAAEC,GAASD,EACrC,MAAM,EAAEE,IAAMC,EAAAA,EAAAA,OACPC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,GAG3CC,GAAqBC,EAAAA,EAAAA,GAAc,qBAGnCC,GAAqBD,EAAAA,EAAAA,GAAc,2BAEnCE,EAAS,CACb,CACEC,MAAO,cACPC,SACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0LAGHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qJAGHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,+BAAmC,iGAC/CF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,2BAA+B,+FAC3CF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gCAAoC,uFAChDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBAA2B,+FAK/C,CACEJ,MAAO,oBACPC,SACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wGAGHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,OAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sCACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4FAGPF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,OAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yCACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2FAGPF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,OAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0CACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8FAGPF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,OAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sCACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qHAOf,CACEJ,MAAO,cACPC,SACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAClCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKV,EAAoBW,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcC,oBAAqB,8BAEtFL,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mOAGHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJC,EAAAA,EAAAA,KAAA,UACEF,UAAU,sBACVQ,QAASA,KAEPC,OAAOC,SAASC,KAAOF,OAAOC,SAASE,OAAS,UAChDX,SACH,oBAGDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAASC,SAAC,QACvBC,EAAAA,EAAAA,KAAA,UACEF,UAAU,wBACVQ,QAASrB,EAAQc,SAClB,oEAOT,CACEJ,MAAO,mBACPC,SACEI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAClCC,EAAAA,EAAAA,KAAA,OACEC,IAAKR,EACLS,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcO,oBAAqB,iCA0BlE,OACEX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA8BQ,QAPnBM,IACtBA,EAAEC,SAAWD,EAAEE,eACjB7B,KAKuEc,UACvEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKL,EAAON,GAAcO,SAC1BK,EAAAA,EAAAA,KAAA,UAAQF,UAAU,eAAeQ,QAASrB,EAAQc,SAAC,aAKrDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAClCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAC1BL,EAAON,GAAcQ,eAK5BI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,UACEF,UAAU,kBACVQ,QApCMS,KAChB1B,EAAiB2B,IAAUA,EAAO,EAAItB,EAAOuB,QAAUvB,EAAOuB,SAoCpDC,SAA2B,IAAjB9B,EAAmBW,SAC9B,qBAIDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAC9BL,EAAOyB,IAAI,CAACC,EAAGC,KACdrB,EAAAA,EAAAA,KAAA,UAEEF,UAAS,aAAAwB,OAAelC,IAAiBiC,EAAQ,SAAW,IAC5Df,QAASA,IA3CNe,KACjBhC,EAAgBgC,IA0CaE,CAAUF,IAFpBA,OAOXrB,EAAAA,EAAAA,KAAA,UACEF,UAAU,kBACVQ,QA1DMkB,KAChBnC,EAAiB2B,IAAUA,EAAO,GAAKtB,EAAOuB,SA0DpCC,SAAU9B,IAAiBM,EAAOuB,OAAS,EAAElB,SAC9C,0B,qHClLb,MAyIA,EAzIiBf,IAAwB,IAAvB,cAAEyC,GAAezC,EACjC,MAAM,EAAEE,IAAMC,EAAAA,EAAAA,OACPuC,EAAOC,IAAYrC,EAAAA,EAAAA,UAAS,KAC5BsC,EAAWC,IAAgBvC,EAAAA,EAAAA,UAAS,KACpCwC,EAAOC,IAAYzC,EAAAA,EAAAA,UAAS,KAC5B0C,EAASC,IAAc3C,EAAAA,EAAAA,WAAS,GACjC4C,EAAkBC,EAAAA,EAAOC,UAAU,YAEzCC,EAAAA,UAAgB,KACdH,EAAgBI,eAAe,CAAEC,mBAAoBd,IAC9C,IAAMS,EAAgBM,oBAC5B,CAACN,EAAiBT,IAqErB,OACEzB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,MAAA,QAAM4C,SAtESC,UAInB,GAHA9B,EAAE+B,iBACFT,EAAgBU,WAAW,oBAAqB,CAAEC,gBAAiBnB,EAAMoB,UAEpEpB,EAAMoB,OAAQ,CAIjB,OAFAf,EADiB,oDAEjBG,EAAgBa,KAAK,uCAEvB,CAEAd,GAAW,GACXF,EAAS,IACT,MAAMiB,EAAYC,KAAKC,MACvBhB,EAAgBiB,KAAK,+BAErB,IAEE,MAAM,QAAEC,SAAkB,8BACpBC,EAAU,IAAID,EAAQ,CAAED,KAAMzB,EAAMoB,SAC1CZ,EAAgBoB,MAAM,+CAGtBpB,EAAgBqB,QAAQ,MAAO,QAAS,MACxC,MAAMC,QAAqBH,EAAQI,KAAKC,MAAMC,mBACxCC,EAAWX,KAAKC,MAAQF,EAC9Bd,EAAgB2B,YAAY,MAAO,QAASL,EAAaM,OAAQF,GAEjE1B,EAAgBiB,KAAK,gCAAiC,CACpDY,SAAUP,EAAaQ,KAAKC,MAC5BL,aAIFnC,EAAcC,EAAMoB,OAAQO,EAC9B,CAAE,MAAOa,GACP,MAAMN,EAAWX,KAAKC,MAAQF,EAC9Bd,EAAgBiC,SAAS,MAAO,QAASD,GACzChC,EAAgBiB,KAAK,4BAA6B,CAChDW,OAAQI,EAAIJ,OACZM,QAASF,EAAIE,QACbR,aAEFS,QAAQvC,MAAM,6BAA8BoC,GAEzB,MAAfA,EAAIJ,OACN/B,EAAS,yEACe,MAAfmC,EAAIJ,OACb/B,EAAS,yGAETA,EAAS,qEAEb,CAAC,QACCE,GAAW,EACb,GAgBkCnC,UAAU,WAAUC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOsE,QAAQ,aAAYvE,SAAC,4BAC5BC,EAAAA,EAAAA,KAAA,SACEuE,GAAG,aACHC,KAAK,OACLC,MAAO7C,EACP8C,SAfmB9D,IAC7BiB,EAAajB,EAAEC,OAAO4D,OAClB3C,GAAOC,EAAS,KAcV4C,YAAY,0BACZ7E,UAAU,mBACVoB,SAAUc,EACV4C,aAAa,iBAIjB/E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,SAAOyE,QAAQ,YAAWvE,SAAA,CAAEb,EAAE,mBAAmB,QACjDc,EAAAA,EAAAA,KAAA,SACEuE,GAAG,YACHC,KAAK,WACLC,MAAO/C,EACPgD,SAlCe9D,IACzBe,EAASf,EAAEC,OAAO4D,OACd3C,GAAOC,EAAS,KAiCV4C,YAAY,2BACZ7E,UAAS,eAAAwB,OAAiBQ,EAAQ,QAAU,IAC5CZ,SAAUc,EACV4C,aAAa,yBAIjB5E,EAAAA,EAAAA,KAAA,UACEwE,KAAK,SACL1E,UAAU,mBACVoB,SAAUc,IAAYN,EAAMoB,OAAO/C,SAElCiC,GACCnC,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA9E,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,kBACfZ,EAAE,kBAAkB,UAGvBW,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA9E,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,iBAC7Bb,EAAE,8BAMV4C,IAAS9B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAE+B,U,+CC9HlD,MAwgCA,EAxgC0BgD,KACtB,MAAM,EAAE5F,IAAMC,EAAAA,EAAAA,MAER4F,EAAyBC,EAAAA,EAAcC,UAEtCC,EAAcC,IAAmB7F,EAAAA,EAAAA,UAAS,KAC1C0C,EAASC,IAAc3C,EAAAA,EAAAA,WAAS,IAChCwC,EAAOC,IAAYzC,EAAAA,EAAAA,UAAS,OAC5B8F,EAAQC,IAAa/F,EAAAA,EAAAA,UAAS,IAC9BgG,EAAcC,IAAmBjG,EAAAA,EAAAA,UAAS,KAC1CkG,EAAUC,IAAenG,EAAAA,EAAAA,UAAS,YAClCoG,EAAaC,IAAkBrG,EAAAA,EAAAA,UAAS,SACxCsG,EAAoBC,IAAyBvG,EAAAA,EAAAA,UAAS,CAAC,IACvDwG,EAAUC,IAAezG,EAAAA,EAAAA,UAAS,SAClC0G,EAAiBC,IAAsB3G,EAAAA,EAAAA,WAAS,IAChD4G,EAAYC,IAAiB7G,EAAAA,EAAAA,UAAS,CAAC,IACvC8G,IAAmB9G,EAAAA,EAAAA,WAAS,IAC5B+G,EAAeC,IAAoBhH,EAAAA,EAAAA,UAAS,CAAC,IAC7CiH,EAAoBC,IAAyBlH,EAAAA,EAAAA,UAAS,CAAC,IACvDmH,EAAqBC,IAA0BpH,EAAAA,EAAAA,UAAS,CAAC,IACzDqH,EAAqBC,IAA0BtH,EAAAA,EAAAA,UAAS,CAAC,IACzDuH,EAAkBC,IAAuBxH,EAAAA,EAAAA,WAAS,IAClDyH,EAAwBC,IAA6B1H,EAAAA,EAAAA,WAAS,GAE/D2H,EAAiB,GAGjBC,GAAc1H,EAAAA,EAAAA,GAAc,mBAC5BD,GAAqBC,EAAAA,EAAAA,GAAc,qBAGnC2H,EAAqBzF,IAEPsD,EAAAA,EAAcoC,aAAa1F,IAEvCuE,GAAmB,IAMrBoB,EAAeA,KACjBpB,GAAmB,GACnBjB,EAAAA,EAAcsC,SACdnB,EAAc,CAAC,IAIboB,EAA0BA,KAC5BP,GAA0B,IASxBQ,EAAyB9E,UAC3B,IAEI,GAAIsC,EAAAA,EAAcC,SAAU,CACxB,MAAMwC,QAAiBzC,EAAAA,EAAc0C,4BAA4B,WAAY,OAAQC,GAErF,GAAwB,IAApBF,EAASxG,OACT,MAAO,CAAE2G,MAAO,EAAGC,YAAa,MAGpC,MAAMA,EAAcJ,EAASA,EAASxG,OAAS,GAC/C,MAAO,CACH2G,MAAOH,EAASxG,OAChB4G,YAAa,CACTC,OAAQD,EAAYE,KAAK9D,MACzB+D,WAAY,IAAI/E,KAAK4E,EAAYG,YACjCC,WAAYJ,EAAYE,KAAKE,YAGzC,CAEI,IACI,MAAMR,QAAiBzC,EAAAA,EAAc0C,4BAA4B,WAAY,OAAQC,GAErF,GAAwB,IAApBF,EAASxG,OACT,MAAO,CAAE2G,MAAO,EAAGC,YAAa,MAGpC,MAAMA,EAAcJ,EAASA,EAASxG,OAAS,GAC/C,MAAO,CACH2G,MAAOH,EAASxG,OAChB4G,YAAa,CACTC,OAAQD,EAAYE,KAAK9D,MACzB+D,WAAY,IAAI/E,KAAK4E,EAAYG,YACjCC,WAAYJ,EAAYE,KAAKE,YAGzC,CAAE,MAAOnG,GAEL,OADAuC,QAAQtB,KAAK,mCAADzB,OAAoCqG,EAAQ,MAAArG,OAAKQ,EAAMsC,UAC5D,CAAEwD,MAAO,EAAGC,YAAa,KAAM/F,OAAO,EACjD,CAER,CAAE,MAAOA,GAEL,OADAuC,QAAQtB,KAAK,yCAADzB,OAA0CqG,EAAQ,KAAK7F,GAC5D,CAAE8F,MAAO,EAAGC,YAAa,KAAM/F,OAAO,EACjD,GAIEoG,GAAqBxF,UACvB,IAEI,GAAIsC,EAAAA,EAAcC,SAAU,CAExB,aADuBD,EAAAA,EAAc0C,4BAA4B,WAAY,OAAQC,IAEhFxG,IAAIgH,IAAO,CACR5D,GAAI4D,EAAQ5D,GACZuD,OAAQK,EAAQJ,KAAK9D,MACrBmE,KAAMD,EAAQC,KACdJ,WAAY,IAAI/E,KAAKkF,EAAQH,YAAYK,qBACzCC,eAAgB,IAAIrF,KAAKkF,EAAQH,YACjCC,WAAYE,EAAQJ,KAAKE,cAE5BM,KAAK,CAACC,EAAGC,IAAMA,EAAEH,eAAiBE,EAAEF,eAC7C,CAEI,IAEI,aADuBtD,EAAAA,EAAc0C,4BAA4B,WAAY,OAAQC,IAEhFxG,IAAIgH,IAAO,CACR5D,GAAI4D,EAAQ5D,GACZuD,OAAQK,EAAQJ,KAAK9D,MACrBmE,KAAMD,EAAQC,KACdJ,WAAY,IAAI/E,KAAKkF,EAAQH,YAAYK,qBACzCC,eAAgB,IAAIrF,KAAKkF,EAAQH,YACjCC,WAAYE,EAAQJ,KAAKE,cAE5BM,KAAK,CAACC,EAAGC,IAAMA,EAAEH,eAAiBE,EAAEF,eAC7C,CAAE,MAAOxG,GAEL,OADAuC,QAAQtB,KAAK,mCAADzB,OAAoCqG,EAAQ,MAAArG,OAAKQ,EAAMsC,UAC5D,EACX,CAER,CAAE,MAAOtC,GAEL,OADAuC,QAAQtB,KAAK,sCAADzB,OAAuCqG,EAAQ,KAAK7F,GACzD,EACX,GAIE4G,IAA0BC,EAAAA,EAAAA,aAAYjG,UACxC,GAAmB,IAAfkG,EAAI3H,OAAc,OAEtB6F,GAAoB,GACpB,MAAM+B,EAAY,CAAC,EAEnB,IAAK,MAAMC,KAAMF,EACbC,EAAUC,EAAGC,cAAgBvB,EAAuBsB,EAAGC,QAG3DnC,EAAuBiC,GACvB/B,GAAoB,IAErB,CAAC/B,IAmBEiE,GAA4BrB,IAC9B,MAAMsB,EAAUtC,EAAoBgB,GAEpC,GAAId,EACA,MAAO,wBAGX,IAAKoC,EACD,MAAO,kBAGX,GAAIA,EAAQnH,MACR,MAAO,0BAGX,GAAsB,IAAlBmH,EAAQrB,MACR,MAAO,kBAGX,MAAM,MAAEA,EAAK,YAAEC,GAAgBoB,EACzBC,EAAUrB,EAAcsB,GAAWtB,EAAYG,YAAc,GAEnE,MAAM,GAAN1G,OAAUsG,EAAK,YAAAtG,OAAWsG,EAAQ,EAAI,IAAM,GAAE,cAAAtG,OAAauG,EAAYC,OAAM,KAAAxG,OAAI4H,IAI/EC,GAAcC,IAChB,MACMC,EADM,IAAIpG,KACKmG,EACfE,EAAWC,KAAKC,MAAMH,EAAM,OAElC,OAAiB,IAAbC,EAAuB,QACV,IAAbA,EAAuB,YACvBA,EAAW,EAAS,GAANhI,OAAUgI,EAAQ,aAChCA,EAAW,GAAU,GAANhI,OAAUiI,KAAKC,MAAMF,EAAW,GAAE,SAAAhI,OAAQiI,KAAKC,MAAMF,EAAW,GAAK,EAAI,IAAM,GAAE,QAC9F,GAANhI,OAAUiI,KAAKC,MAAMF,EAAW,IAAG,UAAAhI,OAASiI,KAAKC,MAAMF,EAAW,IAAM,EAAI,IAAM,GAAE,SAkClFG,GAAwB/G,UAC1B,IAEI,GAAIsC,EAAAA,EAAcC,SACd,IACI,MAAMyE,QAAqB1E,EAAAA,EAAc2E,gBAAgB,WAAY,OAAQ,CACzEC,OAAQC,EACRC,YAAa,aACbC,SAAU,IAGd,GAAIL,EAAaM,eAAiBN,EAAaM,cAAc/I,OAAS,EAAG,CACrE,MAAMgJ,EAAYP,EAAaM,cAAc,GAC7C,MAAO,CACHlG,OAAQmG,EAAUnG,OAClBoG,WAAYD,EAAUC,WACtBC,SAAUF,EAAUE,SACpBnC,WAAYiC,EAAUjC,WAE9B,CAEA,MAAO,CAAElE,OAAQ,UAAWoG,WAAY,KAC5C,CAAE,MAAOE,GAEL,OADA/F,QAAQtB,KAAK,2CAADzB,OAA4CuI,EAAc,KAAKO,GACpE,CAAEtG,OAAQ,UAAWoG,WAAY,KAC5C,MAGA,IACI,MAAMR,QAAqB1E,EAAAA,EAAc2E,gBAAgB,WAAY,OAAQ,CACzEC,OAAQC,EACRC,YAAa,aACbC,SAAU,IAGd,GAAIL,EAAaM,eAAiBN,EAAaM,cAAc/I,OAAS,EAAG,CACrE,MAAMgJ,EAAYP,EAAaM,cAAc,GAC7C,MAAO,CACHlG,OAAQmG,EAAUnG,OAClBoG,WAAYD,EAAUC,WACtBC,SAAUF,EAAUE,SACpBnC,WAAYiC,EAAUjC,WAE9B,CAEA,MAAO,CAAElE,OAAQ,UAAWoG,WAAY,KAC5C,CAAE,MAAOpI,GAGL,OAFAuC,QAAQtB,KAAK,yCAADzB,OAA0CuI,EAAc,MAAAvI,OAAKQ,EAAMsC,UAExE,CAAEN,OAAQ,UAAWoG,WAAY,KAC5C,CAER,CAAE,MAAOpI,GAEL,OADAuC,QAAQtB,KAAK,wCAADzB,OAAyCuI,EAAc,KAAK/H,GACjE,CAAEgC,OAAQ,UAAWoG,WAAY,KAC5C,GAIEG,IAA2B1B,EAAAA,EAAAA,aAAYjG,UACzC,GAAmB,IAAfkG,EAAI3H,OAAc,OAEtB,MAAMqJ,EAAW,CAAC,EAClB,IAAK,MAAMxB,KAAMF,EACb0B,EAASxB,EAAGe,sBAAwBJ,GAAsBX,EAAGe,gBAGjEhE,EAAsB7E,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvJ,GAASsJ,KAE9C,CAACvF,IAGEyF,GAA2BX,IAC7B,MAAM/F,EAAS8B,EAAmBiE,GAClC,OAAK/F,EAEiB,cAAlBA,EAAOA,QAAgD,YAAtBA,EAAOoG,WACjC,CAAEO,KAAM,kBAAcC,MAAO,WACX,cAAlB5G,EAAOA,QAAgD,YAAtBA,EAAOoG,WACxC,CAAEO,KAAM,gBAAYC,MAAO,UACT,gBAAlB5G,EAAOA,OACP,CAAE2G,KAAM,yBAAgBC,MAAO,eACb,WAAlB5G,EAAOA,OACP,CAAE2G,KAAM,gBAAYC,MAAO,UACT,UAAlB5G,EAAOA,OACP,CAAE2G,KAAM,qBAAYC,MAAO,SAE3B,CAAED,KAAM,iBAAaC,MAAO,WAbnB,CAAED,KAAM,cAAeC,MAAO,YAkBhDC,GAAU,SAAC/B,EAAKgC,GAAgC,IAAxBC,EAASC,UAAA7J,OAAA,QAAA8J,IAAAD,UAAA,GAAAA,UAAA,GAAG,OACtC,MAAO,IAAIlC,GAAKL,KAAK,CAACC,EAAGC,KACrB,IAAIuC,EAAa,EACjB,OAAQJ,GACJ,IAAK,SACDI,EAAavC,EAAEM,OAASP,EAAEO,OAC1B,MACJ,IAAK,eACDiC,EAAaxC,EAAE7I,MAAMsL,cAAcxC,EAAE9I,OACrC,MAEJ,QACI,MAAMuL,EAAQ,IAAIjI,KAAKuF,EAAE2C,WAEzBH,EADc,IAAI/H,KAAKwF,EAAE0C,WACJD,EAK7B,MAAqB,QAAdL,GAAuBG,EAAaA,GAEnD,GAGAI,EAAAA,EAAAA,WAAU,KAEN,GADgBpG,EAAAA,EAAcqG,4BACjB,CACSrG,EAAAA,EAAcsG,sBAE5BrF,GAAmB,EAE3B,GACD,KAGHmF,EAAAA,EAAAA,WAAU,KACY1I,WACd,IACIT,GAAW,GAEX,MAAMsJ,EAAQ,WACRC,EAAO,OAEPC,EAAuB,QAAb3F,EAAqB,MAAQA,EASvC4F,SANe1G,EAAAA,EAAc2G,gBAAgBJ,EAAOC,EAAM,CAC5DI,MAAOH,EACPlD,KAAM,UACNwB,SAAU,OAGc5I,IAAI2H,IAC5B,MAAMe,EAAiBf,EAAG+C,KAAKC,IAAIC,QAAQ,MAAO,KAClD,MAAO,CACHxH,GAAIuE,EAAGvE,GACPwE,OAAQD,EAAGC,OACXpJ,MAAOmJ,EAAGnJ,MACViM,MAAO9C,EAAG8C,MACV9D,OAAQgB,EAAGf,KAAK9D,MAChB+H,WAAYlD,EAAG+C,KAAKC,IACpBjC,eAAgBA,EAChBoC,IAAI,KAAD3K,OAAOuI,EAAc,eACxBqC,MAAOpD,EAAGqB,SACVgB,UAAW,IAAIlI,KAAK6F,EAAGqD,YAAY9D,qBACnC+D,UAAW,IAAInJ,KAAK6F,EAAGd,YAAYK,wBAI3ClD,EAAgBuG,SAGVhD,GAAwBgD,EAAaW,MAAM,EAAGpF,GACxD,CAAE,MAAO/C,GAKL,GAJAG,QAAQvC,MAAM,uBAAwBoC,GACtCnC,EAASmC,EAAIE,SAGTF,EAAIE,QAAQkI,SAAS,oBAAsBpI,EAAIE,QAAQkI,SAAS,cAAe,CAC/EjI,QAAQkI,IAAI,+BACZ,MAAMC,EAAU,CACZ,CACIjI,GAAI,EACJwE,OAAQ,IACRpJ,MAAO,iEACPiM,MAAO,OACP9D,OAAQ,UACRkE,WAAY,kBACZnC,eAAgB,kBAChBoC,IAAK,oCACLC,MAAO,4CACPf,WAAW,IAAIlI,MAAOoF,qBACtB+D,UAAW,IAAInJ,KAAKA,KAAKC,MAAQ,OAAUmF,sBAE/C,CACI9D,GAAI,EACJwE,OAAQ,IACRpJ,MAAO,wCACPiM,MAAO,OACP9D,OAAQ,YACRkE,WAAY,qBACZnC,eAAgB,qBAChBoC,IAAK,uCACLC,MAAO,4CACPf,UAAW,IAAIlI,KAAKA,KAAKC,MAAQ,QAAWmF,qBAC5C+D,UAAW,IAAInJ,KAAKA,KAAKC,MAAQ,QAAWmF,uBAGpDlD,EAAgBqH,GAEZtI,EAAIE,QAAQkI,SAAS,oBACrBvK,EAAS,wPAEjB,CACJ,CAAC,QACGE,GAAW,EACf,GAGJwK,IACD,CAAC3G,EAAUf,EAAwB2D,MAGtC0C,EAAAA,EAAAA,WAAU,KACN,GAA4B,IAAxBlG,EAAajE,OAAc,OAE/B,MAAMyL,EAAWxH,EAAayH,OAAO7D,GACjCA,EAAGnJ,MAAMiN,cAAcN,SAAShH,EAAasH,gBAC7C9D,EAAGhB,OAAO8E,cAAcN,SAAShH,EAAasH,gBAC9C9D,EAAGkD,WAAWY,cAAcN,SAAShH,EAAasH,gBAGhDC,EADSlC,GAAQ+B,EAAUlH,EAAUE,GAClB2G,OAAOjH,EAAS,GAAK6B,EAAgB7B,EAAS6B,GAGvEoD,GAAyBwC,GAGzB,MAAMC,EAAWC,YAAY,KACzB1C,GAAyBwC,IAC1B,KAEH,MAAO,IAAMG,cAAcF,IAC5B,CAAC5H,EAAcI,EAAcE,EAAUE,EAAaN,EAAQiF,MAG/De,EAAAA,EAAAA,WAAU,KACN,GAAIlG,EAAajE,OAAS,EAAG,CACzB,MAAMyL,EAAWxH,EAAayH,OAAO7D,GACjCA,EAAGnJ,MAAMiN,cAAcN,SAAShH,EAAasH,gBAC7C9D,EAAGhB,OAAO8E,cAAcN,SAAShH,EAAasH,gBAC9C9D,EAAGkD,WAAWY,cAAcN,SAAShH,EAAasH,gBAGhDC,EADSlC,GAAQ+B,EAAUlH,EAAUE,GAClB2G,OAAOjH,EAAS,GAAK6B,EAAgB7B,EAAS6B,GACvEyB,GAAwBmE,EAC5B,GACD,CAACzH,EAAQE,EAAcE,EAAUE,EAAaR,EAAcwD,KAG/D,MAAMuE,GAAc/H,EAAayH,OAAO7D,GACpCA,EAAGnJ,MAAMiN,cAAcN,SAAShH,EAAasH,gBAC7C9D,EAAGhB,OAAO8E,cAAcN,SAAShH,EAAasH,gBAC9C9D,EAAGkD,WAAWY,cAAcN,SAAShH,EAAasH,gBAEhDM,GAAYvC,GAAQsC,GAAazH,EAAUE,GAC3CyH,GAAeD,GAAUb,OAAOjH,EAAS,GAAK6B,EAAgB7B,EAAS6B,GACvEmG,GAAe7D,KAAK8D,KAAKH,GAAUjM,OAASgG,GAElD,OACIpH,EAAAA,EAAAA,MAACyN,EAAAA,GAAU,CAACC,SAAS,iBAAiBC,iBAAiB,EAAMzN,SAAA,EACzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SAClCiC,GACGnC,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA9E,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,OAAKC,IAAKiH,EAAahH,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcqN,UAAW,aAAc3N,UAAU,cAAc,YAC7GE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,wDACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,SAAC,yBAEzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SAAC,oGAMjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACvCC,EAAAA,EAAAA,KAAA,UACIF,UAAU,YACV0E,KAAK,SACLlE,QAAUM,IACNA,EAAE+B,iBACF/B,EAAE8M,kBACFrJ,QAAQkI,IAAI,sEACZhM,OAAOC,SAASmN,OAAO,gBACzB5N,UAEFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKiH,EAAahH,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcwN,cAAe,eAAgB9N,UAAU,eACjGD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8CAKnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,UAC3CC,EAAAA,EAAAA,KAAA,UACIF,UAAU,YACVQ,QAASiH,EACTsG,UAAYjN,IAAiB,UAAVA,EAAEkN,KAA6B,MAAVlN,EAAEkN,MAAgBvG,IAA0BxH,UAEpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKV,EAAoBW,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcC,oBAAqB,iBAAkBP,UAAU,eAChHD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6GAMjBiG,GAYEhG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,UACpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,YAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uCACHC,EAAAA,EAAAA,KAAA,UAAQM,QAAS+G,EAAcvH,UAAU,aAAYC,SAAC,iCAjBlEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,kBAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2DACHC,EAAAA,EAAAA,KAAC+N,EAAQ,CAACtM,cAAe0F,kBAoBjDrF,GAAiC,IAAxBoD,EAAajE,QACtBpB,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA9E,SAAA,EACIF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,wBAAuBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,OAAKC,IAAKiH,EAAahH,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcqN,UAAW,aAAc3N,UAAU,cAAc,YAC7GE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,wDAExBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,kBAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,6BAAiC,IAAE+B,MAC9CjC,EAAAA,EAAAA,MAAA,KAAGC,UAAU,aAAYC,SAAA,CAAC,mCAEpBiG,GAAmB,0EACpB,IAAI,wDAMrBhG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SAAC,qFAMjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACvCC,EAAAA,EAAAA,KAAA,UACIF,UAAU,YACV0E,KAAK,SACLlE,QAAUM,IACNA,EAAE+B,iBACF/B,EAAE8M,kBACFrJ,QAAQkI,IAAI,oEACZhM,OAAOC,SAASmN,OAAO,gBACzB5N,UAEFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKiH,EAAahH,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcwN,cAAe,eAAgB9N,UAAU,eACjGD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8CAKnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,UAC3CC,EAAAA,EAAAA,KAAA,UACIF,UAAU,YACVQ,QAASiH,EACTsG,UAAYjN,IAAiB,UAAVA,EAAEkN,KAA6B,MAAVlN,EAAEkN,MAAgBvG,IAA0BxH,UAEpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKV,EAAoBW,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcC,oBAAqB,iBAAkBP,UAAU,eAChHD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6GAMjBiG,GAYEhG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,UACpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,YAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uCACHC,EAAAA,EAAAA,KAAA,UAAQM,QAAS+G,EAAcvH,UAAU,aAAYC,SAAC,iCAjBlEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,kBAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2DACHC,EAAAA,EAAAA,KAAC+N,EAAQ,CAACtM,cAAe0F,mBAqBjDtH,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA9E,SAAA,EACIF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,wBAAuBC,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,OAAKC,IAAKiH,EAAahH,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcqN,UAAW,aAAc3N,UAAU,cAAc,YAC7GE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,uDAEvB+B,IACG9B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,kBAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,6BAAiC,IAAE+B,MAC9CjC,EAAAA,EAAAA,MAAA,KAAGC,UAAU,aAAYC,SAAA,CAAC,mCAEpBiG,GAAmB,0EACpB,IAAI,wDAOzBhG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SAAC,oJAOjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACvCC,EAAAA,EAAAA,KAAA,UACIF,UAAU,YACV0E,KAAK,SACLlE,QAAUM,IACNA,EAAE+B,iBACF/B,EAAE8M,kBACFrJ,QAAQkI,IAAI,2EACZhM,OAAOC,SAASmN,OAAO,gBACzB5N,UAEFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKiH,EAAahH,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcwN,cAAe,eAAgB9N,UAAU,eACjGD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8CAKnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,UAC3CC,EAAAA,EAAAA,KAAA,UACIF,UAAU,YACVQ,QAASiH,EACTsG,UAAYjN,IAAiB,UAAVA,EAAEkN,KAA6B,MAAVlN,EAAEkN,MAAgBvG,IAA0BxH,UAEpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKV,EAAoBW,KAAKC,EAAAA,EAAAA,IAAWjB,EAAGkB,EAAAA,GAAcC,oBAAqB,iBAAkBP,UAAU,eAChHD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6GAMjBiG,GAYEhG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,UACpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,YAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uCACHC,EAAAA,EAAAA,KAAA,UAAQM,QAAS+G,EAAcvH,UAAU,aAAYC,SAAC,iCAjBlEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,kBAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,iCAA+B+B,EAAQ,kCAAoC,OAC9E9B,EAAAA,EAAAA,KAAC+N,EAAQ,CAACtM,cAAe0F,gBAoB7CnH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,oBAAmBC,SAAA,CAAC,uCACPmN,GAAUjM,OAAO,UAIpDpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOsE,QAAQ,YAAWvE,SAAC,iBAC3BF,EAAAA,EAAAA,MAAA,UACI0E,GAAG,YACHE,MAAOqB,EACPpB,SAAW9D,IACPmF,EAAYnF,EAAEC,OAAO4D,OACrBY,EAAU,IAEdvF,UAAU,gBAAeC,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,UAAQyE,MAAM,OAAM1E,SAAC,mBACrBC,EAAAA,EAAAA,KAAA,UAAQyE,MAAM,SAAQ1E,SAAC,qBACvBC,EAAAA,EAAAA,KAAA,UAAQyE,MAAM,MAAK1E,SAAC,mBAG5BC,EAAAA,EAAAA,KAAA,SACIwE,KAAK,OACLG,YAAY,2DACZF,MAAOa,EACPZ,SAAW9D,IACP2E,EAAgB3E,EAAEC,OAAO4D,OACzBY,EAAU,IAEdvF,UAAU,eAEdD,EAAAA,EAAAA,MAAA,UACI4E,MAAOe,EACPd,SAAW9D,IACP6E,EAAY7E,EAAEC,OAAO4D,OACrBY,EAAU,IAEdvF,UAAU,cAAaC,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQyE,MAAM,UAAS1E,SAAC,4BACxBC,EAAAA,EAAAA,KAAA,UAAQyE,MAAM,SAAQ1E,SAAC,uBACvBC,EAAAA,EAAAA,KAAA,UAAQyE,MAAM,eAAc1E,SAAC,4BAEjCF,EAAAA,EAAAA,MAAA,UACI4E,MAAOiB,EACPhB,SAAW9D,IACP+E,EAAe/E,EAAEC,OAAO4D,OACxBY,EAAU,IAEdvF,UAAU,cAAaC,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQyE,MAAM,OAAM1E,SAAC,gBACrBC,EAAAA,EAAAA,KAAA,UAAQyE,MAAM,MAAK1E,SAAC,qBAI5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SACI,IAAxBoN,GAAalM,QACVjB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SACpBuF,GACGzF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,uCAAqCuF,EAAa,SAErDtF,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wDAIXoN,GAAahM,IAAK2H,IAAE,IAAAkF,EAAA,OAChBnO,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,uBAAsBC,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,YAAWC,SAAA,CAAC,IAAE+I,EAAGC,OAAO,KAAGD,EAAGnJ,UAC5CE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,QAAMC,UAAS,eAAAwB,OAAiBwH,EAAG8C,OAAQ7L,SAAA,CACzB,SAAb+I,EAAG8C,MAAmB,eAAO,eAAK,IAAE9C,EAAG8C,UAE5C5L,EAAAA,EAAAA,KAAA,QAAMF,UAAS,qBAAAwB,OAAuBkJ,GAAwB1B,EAAGe,gBAAgBa,OAAQ3K,SACpFyK,GAAwB1B,EAAGe,gBAAgBY,cAKxD5K,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,IAAE+I,EAAGkD,WAAW,YAAGhM,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,IAAE+I,EAAGhB,WAE5EjI,EAAAA,EAAAA,MAAA,KAAGC,UAAU,YAAWC,SAAA,CAAC,YACX+I,EAAGsD,UAAU,oBAAatD,EAAGqC,cAI3CtL,EAAAA,EAAAA,MAAA,OACIC,UAAU,yBACVQ,QAASA,IAlsBxBoC,WACrB,MAAMuL,EAAaxH,EAAoBkB,GAEvC,IAAKsG,EAAY,CAEb,MAAMxG,QAAiBS,GAAmBP,GAC1CxB,EAAcnF,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvJ,GAAI,IAAE,CAAC2G,GAAWF,IAClD,CAEAf,EAAuB1F,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBvJ,GAAI,IACP,CAAC2G,IAAYsG,MAurBkCC,CAAiBpF,EAAGC,QAAQhJ,SAAA,EAE3CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,0BAAyBC,SAAC,iBACzCiJ,GAAyBF,EAAGC,YAEjC/I,EAAAA,EAAAA,KAAA,QAAMF,UAAS,0BAAAwB,OAA4BmF,EAAoBqC,EAAGC,QAAU,WAAa,IAAKhJ,SAAC,cAMlG0G,EAAoBqC,EAAGC,UACpBlJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EACxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,gBACjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KACIS,KAAI,yCAAAa,OAA2CwH,EAAGC,OAAM,UACxDlI,OAAO,SACPsN,IAAI,sBACJrO,UAAU,wBAAuBC,SACpC,6BAGDC,EAAAA,EAAAA,KAAA,KACIS,KAAMqI,EAAGoD,MACTrL,OAAO,SACPsN,IAAI,sBACJrO,UAAU,kCAAiCC,SAC9C,+BAORiF,EAAAA,EAAcC,WACXpF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,YACIyE,MAAO4B,EAAcyC,EAAGC,SAAW,GACnCrE,SAAW9D,GAAM0F,EAAiBtF,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC/BvJ,GAAI,IACP,CAAC8H,EAAGC,QAASnI,EAAEC,OAAO4D,SAE1BE,YAAY,mBACZ7E,UAAU,gBACVsO,KAAM,KAEVpO,EAAAA,EAAAA,KAAA,UACIM,QAASA,IA7rB3CoC,OAAOiF,EAAU0G,KACnC,IAAKrJ,EAAAA,EAAcC,WAAaoJ,EAAYvL,OAAQ,OAAO,EAE3D0D,EAAsBxF,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvJ,GAAI,IAAE,CAAC2G,IAAW,KAEtD,IAMI,SALM3C,EAAAA,EAAcsJ,yBAAyB,WAAY,OAAQ3G,EAAU0G,GAE3E/H,EAAiBtF,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvJ,GAAI,IAAE,CAAC2G,GAAW,MAG7ClB,EAAoBkB,GAAW,CAC/B,MAAM4G,QAAwBrG,GAAmBP,GACjDxB,EAAcnF,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvJ,GAAI,IAAE,CAAC2G,GAAW4G,IAClD,CAGA,MAAMC,QAAuBhH,EAAuBG,GAGpD,OAFAf,EAAuB5F,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvJ,GAAI,IAAE,CAAC2G,GAAW6G,MAEhD,CACX,CAAE,MAAO1M,GAEL,OADAuC,QAAQvC,MAAM,mCAADR,OAAoCqG,EAAQ,KAAK7F,IACvD,CACX,CAAC,QACG0E,EAAsBxF,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvJ,GAAI,IAAE,CAAC2G,IAAW,IAC1D,GAmqBmE8G,CAAc3F,EAAGC,OAAQ1C,EAAcyC,EAAGC,SACzD7H,WAAmC,QAAzB8M,EAAC3H,EAAcyC,EAAGC,eAAO,IAAAiF,GAAxBA,EAA0BlL,SAAUyD,EAAmBuC,EAAGC,QACrEjJ,UAAU,qBAAoBC,SAE7BwG,EAAmBuC,EAAGC,QAAU,gBAAkB,oBAM/D/I,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SAClCqG,GACGpG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAC,+BAClCmG,EAAW4C,EAAGC,SAAW7C,EAAW4C,EAAGC,QAAQ9H,OAAS,GACxDjB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SACzBmG,EAAW4C,EAAGC,QAAQsD,MAAM,EAAG,GAAGlL,IAAKgH,IACpCtI,EAAAA,EAAAA,MAAA,OAAsBC,UAAU,eAAcC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OACIC,IAAKkI,EAAQF,WACb/H,KAAKwO,EAAAA,EAAAA,IAAiBxP,EAAG,CAAEyP,KAAMxG,EAAQL,QAAU,QACnDhI,UAAU,oBAEdE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,iBAAgBC,SAAEoI,EAAQL,UAC1C9H,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAEoI,EAAQH,iBAE5ChI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SACxBoI,EAAQC,KAAKnH,OAAS,IAAG,GAAAK,OACnB6G,EAAQC,KAAKwG,UAAU,EAAG,KAAI,OACjCzG,EAAQC,SAbVD,EAAQ5D,QAoB1BvE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SACtBiF,EAAAA,EAAcC,SAEZ,4CADA,2DASxBpF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,KACIS,KAAMqI,EAAGmD,IACTnM,UAAU,eACVe,OAAO,SACPsN,IAAI,sBAAqBpO,UAEzBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iCAGVC,EAAAA,EAAAA,KAAA,KACIS,KAAMqI,EAAGoD,MACTpM,UAAU,UACVe,OAAO,SACPsN,IAAI,sBAAqBpO,UAEzBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kCAKlBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,eAAcC,SAAA,CAAC,gBACd+I,EAAGmD,WAhJnBnD,EAAGvE,QAwJxB6I,GAAe,IACZvN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,UACIF,UAAU,iBACVQ,QAASA,IAAM+E,EAAUkE,KAAKsF,IAAI,EAAGzJ,EAAS,IAC9ClE,SAAqB,IAAXkE,EAAarF,SAC1B,qBAGDF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,kBAAiBC,SAAA,CAAC,QACxBqF,EAAO,OAAKgI,GAAa,KAAGF,GAAUjM,OAAO,cAEvDjB,EAAAA,EAAAA,KAAA,UACIF,UAAU,iBACVQ,QAASA,IAAM+E,EAAUkE,KAAKuF,IAAI1B,GAAchI,EAAS,IACzDlE,SAAUkE,IAAWgI,GAAarN,SACrC,2BAWhBgH,IACG/G,EAAAA,EAAAA,KAAC+O,EAAAA,EAAkB,CAAC9P,QA98BC+P,KAC7BhI,GAA0B,S","sources":["components/CollaborationModal.js","components/PATLogin.js","components/BranchListingPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useThemeImage from '../hooks/useThemeImage';\nimport { ALT_TEXT_KEYS, getAltText } from '../utils/imageAltTextHelper';\n\nconst CollaborationModal = ({ onClose }) => {\n  const { t } = useTranslation();\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // Theme-aware collaboration image\n  const collaborationImage = useThemeImage('collaboration.png');\n  \n  // Theme-aware pronunciation guide image\n  const pronunciationImage = useThemeImage('pronunciation-guide.png');\n\n  const slides = [\n    {\n      title: \"Our Mission\",\n      content: (\n        <div className=\"slide-content\">\n          <p>\n            SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits (DAKs).\n          </p>\n          <p>\n            Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations through:\n          </p>\n          <ul>\n            <li><strong>Collaborative Development:</strong> Every contribution matters, whether reporting bugs, testing features, or sharing feedback</li>\n            <li><strong>AI-Powered Assistance:</strong> Hybrid approach combining human insight with AI coding agents for efficient development</li>\n            <li><strong>Community-Driven Evolution:</strong> Real-time improvement through collaborative discussion and iterative refinement</li>\n            <li><strong>Real-World Impact:</strong> Building tools that help healthcare workers worldwide deliver better patient care</li>\n          </ul>\n        </div>\n      )\n    },\n    {\n      title: \"How to Contribute\",\n      content: (\n        <div className=\"slide-content\">\n          <p>\n            Contributing to SGEX is a collaborative journey that combines human creativity with AI assistance:\n          </p>\n          <div className=\"contribution-steps\">\n            <div className=\"step\">\n              <span className=\"step-number\">1</span>\n              <div className=\"step-content\">\n                <h4>🐛 Start with Feedback</h4>\n                <p>Report bugs, request features, or suggest improvements through our issue tracker</p>\n              </div>\n            </div>\n            <div className=\"step\">\n              <span className=\"step-number\">2</span>\n              <div className=\"step-content\">\n                <h4>🤖 AI-Powered Development</h4>\n                <p>Issues may be assigned to coding agents for initial analysis and implementation</p>\n              </div>\n            </div>\n            <div className=\"step\">\n              <span className=\"step-number\">3</span>\n              <div className=\"step-content\">\n                <h4>🌟 Community Collaboration</h4>\n                <p>The community reviews, tests, and refines changes through collaborative discussion</p>\n              </div>\n            </div>\n            <div className=\"step\">\n              <span className=\"step-number\">4</span>\n              <div className=\"step-content\">\n                <h4>🚀 Real-Time Evolution</h4>\n                <p>The workbench continuously evolves based on actual usage and feedback from healthcare professionals</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: \"Get Started\",\n      content: (\n        <div className=\"slide-content\">\n          <div className=\"collaboration-image\">\n            <img src={collaborationImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_COLLABORATION, 'Collaboration in SGEX')} />\n          </div>\n          <p>\n            Every contribution helps improve digital health tools for healthcare workers worldwide. Whether you're reporting a bug, testing a feature, or sharing feedback, you're part of building the future of digital health tooling.\n          </p>\n          <div className=\"get-started-actions\">\n            <h4>Ready to contribute?</h4>\n            <button \n              className=\"action-link primary\"\n              onClick={() => {\n                // Navigate to current site instead of external URL\n                window.location.href = window.location.origin + '/sgex/';\n              }}\n            >\n              View Main Site\n            </button>\n            <p className=\"or-text\">or</p>\n            <button \n              className=\"action-link secondary\"\n              onClick={onClose}\n            >\n              Use the help mascot on any page to quickly report issues\n            </button>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: \"How to Pronounce\",\n      content: (\n        <div className=\"slide-content\">\n          <div className=\"pronunciation-image\">\n            <img \n              src={pronunciationImage} \n              alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_PRONUNCIATION, 'How to Pronounce SGeX')} \n            />\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);\n  };\n\n  const goToSlide = (index) => {\n    setCurrentSlide(index);\n  };\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"collaboration-modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"collaboration-modal\">\n        <div className=\"modal-header\">\n          <h2>{slides[currentSlide].title}</h2>\n          <button className=\"close-button\" onClick={onClose}>\n            ×\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"slideshow-container\">\n            <div className=\"slide active\">\n              {slides[currentSlide].content}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-footer\">\n          <div className=\"slide-navigation\">\n            <button \n              className=\"nav-button prev\" \n              onClick={prevSlide}\n              disabled={currentSlide === 0}\n            >\n              ‹ Previous\n            </button>\n            \n            <div className=\"slide-indicators\">\n              {slides.map((_, index) => (\n                <button\n                  key={index}\n                  className={`indicator ${currentSlide === index ? 'active' : ''}`}\n                  onClick={() => goToSlide(index)}\n                />\n              ))}\n            </div>\n            \n            <button \n              className=\"nav-button next\" \n              onClick={nextSlide}\n              disabled={currentSlide === slides.length - 1}\n            >\n              Next ›\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CollaborationModal;","import React, { useState } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport logger from \"../utils/logger\";\n\nconst PATLogin = ({ onAuthSuccess }) => {\n  const { t } = useTranslation();\n  const [token, setToken] = useState(\"\");\n  const [tokenName, setTokenName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const componentLogger = logger.getLogger('PATLogin');\n\n  React.useEffect(() => {\n    componentLogger.componentMount({ hasOnAuthSuccess: !!onAuthSuccess });\n    return () => componentLogger.componentUnmount();\n  }, [componentLogger, onAuthSuccess]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    componentLogger.userAction('PAT login attempt', { tokenProvided: !!token.trim() });\n    \n    if (!token.trim()) {\n      const errorMsg = \"Please enter a GitHub Personal Access Token\";\n      setError(errorMsg);\n      componentLogger.warn('PAT login failed - no token provided');\n      return;\n    }\n\n    setLoading(true);\n    setError(\"\");\n    const startTime = Date.now();\n    componentLogger.auth('Starting PAT authentication');\n    \n    try {\n      // Test the token by creating an Octokit instance and making a test request\n      const { Octokit } = await import('@octokit/rest');\n      const octokit = new Octokit({ auth: token.trim() });\n      componentLogger.debug('Octokit instance created for PAT validation');\n      \n      // Test the token by fetching user info\n      componentLogger.apiCall('GET', '/user', null);\n      const userResponse = await octokit.rest.users.getAuthenticated();\n      const duration = Date.now() - startTime;\n      componentLogger.apiResponse('GET', '/user', userResponse.status, duration);\n      \n      componentLogger.auth('PAT authentication successful', { \n        username: userResponse.data.login,\n        duration \n      });\n      \n      // Call success callback with token and octokit instance\n      onAuthSuccess(token.trim(), octokit);\n    } catch (err) {\n      const duration = Date.now() - startTime;\n      componentLogger.apiError('GET', '/user', err);\n      componentLogger.auth('PAT authentication failed', { \n        status: err.status, \n        message: err.message,\n        duration \n      });\n      console.error('PAT authentication failed:', err);\n      \n      if (err.status === 401) {\n        setError(\"Invalid Personal Access Token. Please check your token and try again.\");\n      } else if (err.status === 403) {\n        setError(\"Token doesn't have sufficient permissions. Please ensure your token has 'repo' and 'read:org' scopes.\");\n      } else {\n        setError(\"Authentication failed. Please check your connection and try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTokenChange = (e) => {\n    setToken(e.target.value);\n    if (error) setError(\"\"); // Clear error when user starts typing\n  };\n\n  const handleTokenNameChange = (e) => {\n    setTokenName(e.target.value);\n    if (error) setError(\"\"); // Clear error when user starts typing\n  };\n\n  return (\n    <div className=\"pat-login\">\n      <div className=\"pat-login-section\">\n        <form onSubmit={handleSubmit} className=\"pat-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"token-name\">Token Name (optional):</label>\n            <input\n              id=\"token-name\"\n              type=\"text\"\n              value={tokenName}\n              onChange={handleTokenNameChange}\n              placeholder=\"e.g., SGEX Access Token\"\n              className=\"token-name-input\"\n              disabled={loading}\n              autoComplete=\"username\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"pat-token\">{t('auth.setupToken')}:</label>\n            <input\n              id=\"pat-token\"\n              type=\"password\"\n              value={token}\n              onChange={handleTokenChange}\n              placeholder=\"ghp_xxxxxxxxxxxxxxxxxxxx\"\n              className={`token-input ${error ? 'error' : ''}`}\n              disabled={loading}\n              autoComplete=\"current-password\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"github-login-btn\" \n            disabled={loading || !token.trim()}\n          >\n            {loading ? (\n              <>\n                <span className=\"spinner small\"></span>\n                {t('common.loading')}...\n              </>\n            ) : (\n              <>\n                <span className=\"github-icon\">🔑</span>\n                {t('auth.signInWithPAT')}\n              </>\n            )}\n          </button>\n        </form>\n        \n        {error && <div className=\"error-message\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default PATLogin;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PageLayout } from './framework';\nimport PATLogin from './PATLogin';\nimport CollaborationModal from './CollaborationModal';\nimport githubService from '../services/githubService';\nimport useThemeImage from '../hooks/useThemeImage';\nimport { ALT_TEXT_KEYS, getAltText, getAvatarAltText } from '../utils/imageAltTextHelper';\n\nconst BranchListingPage = () => {\n    const { t } = useTranslation();\n    // Track authentication status for dependency arrays\n    const isAuthenticatedForDeps = githubService.isAuth();\n    \n    const [pullRequests, setPullRequests] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [prPage, setPrPage] = useState(1);\n    const [prSearchTerm, setPrSearchTerm] = useState('');\n    const [prSortBy, setPrSortBy] = useState('updated');\n    const [prSortOrder, setPrSortOrder] = useState('desc');\n    const [deploymentStatuses, setDeploymentStatuses] = useState({});\n    const [prFilter, setPrFilter] = useState('open');\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [prComments, setPrComments] = useState({});\n    const [loadingComments] = useState(false); // Removed setLoadingComments as it's not used\n    const [commentInputs, setCommentInputs] = useState({});\n    const [submittingComments, setSubmittingComments] = useState({});\n    const [expandedDiscussions, setExpandedDiscussions] = useState({});\n    const [discussionSummaries, setDiscussionSummaries] = useState({});\n    const [loadingSummaries, setLoadingSummaries] = useState(false);\n    const [showCollaborationModal, setShowCollaborationModal] = useState(false);\n\n    const ITEMS_PER_PAGE = 10;\n\n    // Theme-aware image paths\n    const mascotImage = useThemeImage('sgex-mascot.png');\n    const collaborationImage = useThemeImage('collaboration.png');\n\n    // GitHub authentication functions\n    const handleAuthSuccess = (token) => {\n        // Authenticate using githubService which will handle secure storage\n        const success = githubService.authenticate(token);\n        if (success) {\n            setIsAuthenticated(true);\n        }\n    };\n\n\n    // Logout function\n    const handleLogout = () => {\n        setIsAuthenticated(false);\n        githubService.logout(); // Use secure logout method\n        setPrComments({});\n    };\n\n    // Collaboration modal handlers\n    const handleCollaborationOpen = () => {\n        setShowCollaborationModal(true);\n    };\n\n    const handleCollaborationClose = () => {\n        setShowCollaborationModal(false);\n    };\n\n\n    // Function to fetch PR comments summary\n    const fetchPRCommentsSummary = async (prNumber) => {\n        try {\n            // Use githubService if authenticated, otherwise make a public API call\n            if (githubService.isAuth()) {\n                const comments = await githubService.getPullRequestIssueComments('litlfred', 'sgex', prNumber);\n                \n                if (comments.length === 0) {\n                    return { count: 0, lastComment: null };\n                }\n                \n                const lastComment = comments[comments.length - 1];\n                return {\n                    count: comments.length,\n                    lastComment: {\n                        author: lastComment.user.login,\n                        created_at: new Date(lastComment.created_at),\n                        avatar_url: lastComment.user.avatar_url\n                    }\n                };\n            } else {\n                // For unauthenticated requests, use githubService which handles rate limiting gracefully\n                try {\n                    const comments = await githubService.getPullRequestIssueComments('litlfred', 'sgex', prNumber);\n                    \n                    if (comments.length === 0) {\n                        return { count: 0, lastComment: null };\n                    }\n                    \n                    const lastComment = comments[comments.length - 1];\n                    return {\n                        count: comments.length,\n                        lastComment: {\n                            author: lastComment.user.login,\n                            created_at: new Date(lastComment.created_at),\n                            avatar_url: lastComment.user.avatar_url\n                        }\n                    };\n                } catch (error) {\n                    console.warn(`Failed to fetch comments for PR ${prNumber}: ${error.message}`);\n                    return { count: 0, lastComment: null, error: true };\n                }\n            }\n        } catch (error) {\n            console.warn(`Error fetching comment summary for PR ${prNumber}:`, error);\n            return { count: 0, lastComment: null, error: true };\n        }\n    };\n\n    // Function to fetch all PR comments (for expanded view)\n    const fetchAllPRComments = async (prNumber) => {\n        try {\n            // Use githubService if authenticated, otherwise make a public API call\n            if (githubService.isAuth()) {\n                const comments = await githubService.getPullRequestIssueComments('litlfred', 'sgex', prNumber);\n                return comments\n                    .map(comment => ({\n                        id: comment.id,\n                        author: comment.user.login,\n                        body: comment.body,\n                        created_at: new Date(comment.created_at).toLocaleDateString(),\n                        created_at_raw: new Date(comment.created_at),\n                        avatar_url: comment.user.avatar_url\n                    }))\n                    .sort((a, b) => b.created_at_raw - a.created_at_raw); // Sort newest first\n            } else {\n                // For unauthenticated requests, use githubService which handles rate limiting gracefully\n                try {\n                    const comments = await githubService.getPullRequestIssueComments('litlfred', 'sgex', prNumber);\n                    return comments\n                        .map(comment => ({\n                            id: comment.id,\n                            author: comment.user.login,\n                            body: comment.body,\n                            created_at: new Date(comment.created_at).toLocaleDateString(),\n                            created_at_raw: new Date(comment.created_at),\n                            avatar_url: comment.user.avatar_url\n                        }))\n                        .sort((a, b) => b.created_at_raw - a.created_at_raw); // Sort newest first\n                } catch (error) {\n                    console.warn(`Failed to fetch comments for PR ${prNumber}: ${error.message}`);\n                    return [];\n                }\n            }\n        } catch (error) {\n            console.warn(`Error fetching all comments for PR ${prNumber}:`, error);\n            return [];\n        }\n    };\n\n    // Function to load discussion summaries for visible PRs\n    const loadDiscussionSummaries = useCallback(async (prs) => {\n        if (prs.length === 0) return;\n        \n        setLoadingSummaries(true);\n        const summaries = {};\n        \n        for (const pr of prs) {\n            summaries[pr.number] = await fetchPRCommentsSummary(pr.number);\n        }\n        \n        setDiscussionSummaries(summaries);\n        setLoadingSummaries(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isAuthenticatedForDeps]);\n\n    // Function to toggle discussion expansion\n    const toggleDiscussion = async (prNumber) => {\n        const isExpanded = expandedDiscussions[prNumber];\n        \n        if (!isExpanded) {\n            // Load all comments when expanding\n            const comments = await fetchAllPRComments(prNumber);\n            setPrComments(prev => ({ ...prev, [prNumber]: comments }));\n        }\n        \n        setExpandedDiscussions(prev => ({\n            ...prev,\n            [prNumber]: !isExpanded\n        }));\n    };\n\n    // Function to get discussion summary text\n    const getDiscussionSummaryText = (prNumber) => {\n        const summary = discussionSummaries[prNumber];\n        \n        if (loadingSummaries) {\n            return \"Loading discussion...\";\n        }\n        \n        if (!summary) {\n            return \"No comments yet\";\n        }\n        \n        if (summary.error) {\n            return \"Unable to load comments\";\n        }\n        \n        if (summary.count === 0) {\n            return \"No comments yet\";\n        }\n        \n        const { count, lastComment } = summary;\n        const timeAgo = lastComment ? getTimeAgo(lastComment.created_at) : '';\n        \n        return `${count} comment${count > 1 ? 's' : ''}, last by ${lastComment.author} ${timeAgo}`;\n    };\n\n    // Helper function to get relative time\n    const getTimeAgo = (date) => {\n        const now = new Date();\n        const diffMs = now - date;\n        const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n        \n        if (diffDays === 0) return 'today';\n        if (diffDays === 1) return '1 day ago';\n        if (diffDays < 7) return `${diffDays} days ago`;\n        if (diffDays < 30) return `${Math.floor(diffDays / 7)} week${Math.floor(diffDays / 7) > 1 ? 's' : ''} ago`;\n        return `${Math.floor(diffDays / 30)} month${Math.floor(diffDays / 30) > 1 ? 's' : ''} ago`;\n    };\n\n    // Function to submit a comment\n    const submitComment = async (prNumber, commentText) => {\n        if (!githubService.isAuth() || !commentText.trim()) return false;\n        \n        setSubmittingComments(prev => ({ ...prev, [prNumber]: true }));\n        \n        try {\n            await githubService.createPullRequestComment('litlfred', 'sgex', prNumber, commentText);\n            \n            setCommentInputs(prev => ({ ...prev, [prNumber]: '' }));\n            \n            // Refresh both full comments (if expanded) and summary\n            if (expandedDiscussions[prNumber]) {\n                const updatedComments = await fetchAllPRComments(prNumber);\n                setPrComments(prev => ({ ...prev, [prNumber]: updatedComments }));\n            }\n            \n            // Refresh the discussion summary\n            const updatedSummary = await fetchPRCommentsSummary(prNumber);\n            setDiscussionSummaries(prev => ({ ...prev, [prNumber]: updatedSummary }));\n            \n            return true;\n        } catch (error) {\n            console.error(`Error submitting comment for PR ${prNumber}:`, error);\n            return false;\n        } finally {\n            setSubmittingComments(prev => ({ ...prev, [prNumber]: false }));\n        }\n    };\n\n    // Function to check deployment status for a branch\n    const checkDeploymentStatus = async (safeBranchName) => {\n        try {\n            // Use githubService if authenticated, otherwise make a public API call\n            if (githubService.isAuth()) {\n                try {\n                    const workflowRuns = await githubService.getWorkflowRuns('litlfred', 'sgex', {\n                        branch: safeBranchName,\n                        workflow_id: 'deploy.yml',\n                        per_page: 1\n                    });\n                    \n                    if (workflowRuns.workflow_runs && workflowRuns.workflow_runs.length > 0) {\n                        const latestRun = workflowRuns.workflow_runs[0];\n                        return {\n                            status: latestRun.status,\n                            conclusion: latestRun.conclusion,\n                            html_url: latestRun.html_url,\n                            created_at: latestRun.created_at\n                        };\n                    }\n                    \n                    return { status: 'unknown', conclusion: null };\n                } catch (authError) {\n                    console.warn(`Authenticated workflow check failed for ${safeBranchName}:`, authError);\n                    return { status: 'unknown', conclusion: null };\n                }\n            } else {\n                // For unauthenticated requests, use githubService which handles rate limiting gracefully\n                try {\n                    const workflowRuns = await githubService.getWorkflowRuns('litlfred', 'sgex', {\n                        branch: safeBranchName,\n                        workflow_id: 'deploy.yml',\n                        per_page: 1\n                    });\n                    \n                    if (workflowRuns.workflow_runs && workflowRuns.workflow_runs.length > 0) {\n                        const latestRun = workflowRuns.workflow_runs[0];\n                        return {\n                            status: latestRun.status,\n                            conclusion: latestRun.conclusion,\n                            html_url: latestRun.html_url,\n                            created_at: latestRun.created_at\n                        };\n                    }\n                    \n                    return { status: 'unknown', conclusion: null };\n                } catch (error) {\n                    console.warn(`Failed to fetch deployment status for ${safeBranchName}: ${error.message}`);\n                    // Rate limited - return unknown status instead of error\n                    return { status: 'unknown', conclusion: null };\n                }\n            }\n        } catch (error) {\n            console.warn(`Error checking deployment status for ${safeBranchName}:`, error);\n            return { status: 'unknown', conclusion: null };\n        }\n    };\n\n    // Function to update deployment statuses for visible PRs\n    const updateDeploymentStatuses = useCallback(async (prs) => {\n        if (prs.length === 0) return;\n        \n        const statuses = {};\n        for (const pr of prs) {\n            statuses[pr.safeBranchName] = await checkDeploymentStatus(pr.safeBranchName);\n        }\n        \n        setDeploymentStatuses(prev => ({ ...prev, ...statuses }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isAuthenticatedForDeps]);\n\n    // Function to get deployment status display info\n    const getDeploymentStatusInfo = (safeBranchName) => {\n        const status = deploymentStatuses[safeBranchName];\n        if (!status) return { text: 'Checking...', class: 'unknown' };\n        \n        if (status.status === 'completed' && status.conclusion === 'success') {\n            return { text: '✅ Deployed', class: 'success' };\n        } else if (status.status === 'completed' && status.conclusion === 'failure') {\n            return { text: '❌ Failed', class: 'failed' };\n        } else if (status.status === 'in_progress') {\n            return { text: '🔄 Deploying', class: 'in-progress' };\n        } else if (status.status === 'queued') {\n            return { text: '⏳ Queued', class: 'queued' };\n        } else if (status.status === 'error') {\n            return { text: '⚠️ Error', class: 'error' };\n        } else {\n            return { text: '❓ Unknown', class: 'unknown' };\n        }\n    };\n\n    // Sorting functions\n    const sortPRs = (prs, sortBy, sortOrder = 'desc') => {\n        return [...prs].sort((a, b) => {\n            let comparison = 0;\n            switch (sortBy) {\n                case 'number':\n                    comparison = b.number - a.number;\n                    break;\n                case 'alphabetical':\n                    comparison = a.title.localeCompare(b.title);\n                    break;\n                case 'updated':\n                default:\n                    const dateA = new Date(a.updatedAt);\n                    const dateB = new Date(b.updatedAt);\n                    comparison = dateB - dateA;\n                    break;\n            }\n            \n            // Reverse comparison for ascending order\n            return sortOrder === 'asc' ? -comparison : comparison;\n        });\n    };\n\n    // Check for existing authentication on component mount\n    useEffect(() => {\n        const success = githubService.initializeFromStoredToken();\n        if (success) {\n            const tokenInfo = githubService.getStoredTokenInfo();\n            if (tokenInfo) {\n                setIsAuthenticated(true);\n            }\n        }\n    }, []);\n\n    // Fetch data\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                \n                const owner = 'litlfred';\n                const repo = 'sgex';\n                \n                const prState = prFilter === 'all' ? 'all' : prFilter;\n                \n                // Use githubService instead of direct fetch to handle authentication properly\n                const prData = await githubService.getPullRequests(owner, repo, {\n                    state: prState,\n                    sort: 'updated', \n                    per_page: 100\n                });\n                \n                const formattedPRs = prData.map(pr => {\n                    const safeBranchName = pr.head.ref.replace(/\\//g, '-');\n                    return {\n                        id: pr.id,\n                        number: pr.number,\n                        title: pr.title,\n                        state: pr.state,\n                        author: pr.user.login,\n                        branchName: pr.head.ref,\n                        safeBranchName: safeBranchName,\n                        url: `./${safeBranchName}/index.html`,\n                        prUrl: pr.html_url,\n                        updatedAt: new Date(pr.updated_at).toLocaleDateString(),\n                        createdAt: new Date(pr.created_at).toLocaleDateString()\n                    };\n                });\n                \n                setPullRequests(formattedPRs);\n                \n                // Always try to load discussion summaries\n                await loadDiscussionSummaries(formattedPRs.slice(0, ITEMS_PER_PAGE));\n            } catch (err) {\n                console.error('Error fetching data:', err);\n                setError(err.message);\n                \n                // Fallback mock data\n                if (err.message.includes('Failed to fetch') || err.message.includes('rate limit')) {\n                    console.log('Using fallback mock data...');\n                    const mockPRs = [\n                        {\n                            id: 1,\n                            number: 460,\n                            title: 'Improve multi-page selector landing page for GitHub deployment',\n                            state: 'open',\n                            author: 'copilot',\n                            branchName: 'copilot/fix-459',\n                            safeBranchName: 'copilot-fix-459',\n                            url: './sgex/copilot-fix-459/index.html',\n                            prUrl: 'https://github.com/litlfred/sgex/pull/460',\n                            updatedAt: new Date().toLocaleDateString(),\n                            createdAt: new Date(Date.now() - 86400000).toLocaleDateString()\n                        },\n                        {\n                            id: 2,\n                            number: 459,\n                            title: 'Add enhanced PR preview functionality',\n                            state: 'open',\n                            author: 'developer',\n                            branchName: 'feature/pr-preview',\n                            safeBranchName: 'feature-pr-preview',\n                            url: './sgex/feature-pr-preview/index.html',\n                            prUrl: 'https://github.com/litlfred/sgex/pull/459',\n                            updatedAt: new Date(Date.now() - 172800000).toLocaleDateString(),\n                            createdAt: new Date(Date.now() - 345600000).toLocaleDateString()\n                        }\n                    ];\n                    setPullRequests(mockPRs);\n                    // Keep the error for display but don't block functionality\n                    if (err.message.includes('Failed to fetch')) {\n                        setError('API rate limit exceeded for 136.47.145.179. (But here\\'s the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.) - https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting');\n                    }\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [prFilter, isAuthenticatedForDeps, loadDiscussionSummaries]);\n\n    // Poll deployment statuses every 7 seconds for visible PRs\n    useEffect(() => {\n        if (pullRequests.length === 0) return;\n        \n        const filtered = pullRequests.filter(pr => \n            pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n            pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n            pr.branchName.toLowerCase().includes(prSearchTerm.toLowerCase())\n        );\n        const sorted = sortPRs(filtered, prSortBy, prSortOrder);\n        const paginated = sorted.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n        \n        // Initial status check\n        updateDeploymentStatuses(paginated);\n        \n        // Set up polling every 7 seconds\n        const interval = setInterval(() => {\n            updateDeploymentStatuses(paginated);\n        }, 7000);\n        \n        return () => clearInterval(interval);\n    }, [pullRequests, prSearchTerm, prSortBy, prSortOrder, prPage, updateDeploymentStatuses]);\n\n    // Load comments when pagination changes\n    useEffect(() => {\n        if (pullRequests.length > 0) {\n            const filtered = pullRequests.filter(pr => \n                pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n                pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n                pr.branchName.toLowerCase().includes(prSearchTerm.toLowerCase())\n            );\n            const sorted = sortPRs(filtered, prSortBy, prSortOrder);\n            const paginated = sorted.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n            loadDiscussionSummaries(paginated);\n        }\n    }, [prPage, prSearchTerm, prSortBy, prSortOrder, pullRequests, loadDiscussionSummaries]);\n\n    // Filter and sort PRs\n    const filteredPRs = pullRequests.filter(pr => \n        pr.title.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n        pr.author.toLowerCase().includes(prSearchTerm.toLowerCase()) ||\n        pr.branchName.toLowerCase().includes(prSearchTerm.toLowerCase())\n    );\n    const sortedPRs = sortPRs(filteredPRs, prSortBy, prSortOrder);\n    const paginatedPRs = sortedPRs.slice((prPage - 1) * ITEMS_PER_PAGE, prPage * ITEMS_PER_PAGE);\n    const totalPRPages = Math.ceil(sortedPRs.length / ITEMS_PER_PAGE);\n\n    return (\n        <PageLayout pageName=\"branch-listing\" showBreadcrumbs={false}>\n            <div className=\"branch-listing-content\">\n                {loading ? (\n                    <>\n                        <div className=\"branch-listing-header\">\n                            <h1><img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.ICON_SGEX, 'SGEX Icon')} className=\"sgex-icon\" /> SGEX</h1>\n                            <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n                            <div className=\"loading\">Loading previews...</div>\n                            \n                            <div className=\"prominent-info\">\n                                <p className=\"info-text\">\n                                    🐾 While previews load, you can access the main SGEX workbench and login below.\n                                </p>\n                            </div>\n                        </div>\n\n                        <div className=\"action-cards\">\n                            <div className=\"action-card main-site-card\">\n                                <button \n                                    className=\"card-link\"\n                                    type=\"button\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                        console.log('View Main Site clicked (loading state) - navigating to /sgex/main/');\n                                        window.location.assign('/sgex/main/');\n                                    }}\n                                >\n                                    <div className=\"card-content\">\n                                        <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Mascot')} className=\"card-icon\" />\n                                        <div className=\"card-text\">\n                                            <h3>View Main Site</h3>\n                                            <p>Access the main SGEX workbench</p>\n                                        </div>\n                                    </div>\n                                </button>\n                            </div>\n                            <div className=\"action-card collaboration-card\">\n                                <button \n                                    className=\"card-link\"\n                                    onClick={handleCollaborationOpen}\n                                    onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && handleCollaborationOpen()}\n                                >\n                                    <div className=\"card-content\">\n                                        <img src={collaborationImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_COLLABORATION, 'Collaboration')} className=\"card-icon\" />\n                                        <div className=\"card-text\">\n                                            <h3>Collaboration</h3>\n                                            <p>Learn about our mission, how to contribute, and join our community-driven development process.</p>\n                                        </div>\n                                    </div>\n                                </button>\n                            </div>\n                            \n                            {!isAuthenticated ? (\n                                <div className=\"action-card login-card\">\n                                    <div className=\"card-content\">\n                                        <div className=\"login-icon\">🔐</div>\n                                        <div className=\"card-text\">\n                                            <h3>GitHub Login</h3>\n                                            <p>Login to get higher API rate limits and view comments</p>\n                                            <PATLogin onAuthSuccess={handleAuthSuccess} />\n                                        </div>\n                                    </div>\n                                </div>\n                            ) : (\n                                <div className=\"action-card logout-card\">\n                                    <div className=\"card-content\">\n                                        <div className=\"login-icon\">✅</div>\n                                        <div className=\"card-text\">\n                                            <h3>Logged In</h3>\n                                            <p>You can now view and add comments</p>\n                                            <button onClick={handleLogout} className=\"logout-btn\">\n                                                🚪 Logout\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </>\n                ) : error && pullRequests.length === 0 ? (\n                    <>\n                        <header className=\"branch-listing-header\">\n                            <h1><img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.ICON_SGEX, 'SGEX Icon')} className=\"sgex-icon\" /> SGEX</h1>\n                            <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n                            \n                            <div className=\"error-banner\">\n                                <div className=\"error-content\">\n                                    <span className=\"error-icon\">⚠️</span>\n                                    <div className=\"error-text\">\n                                        <p><strong>Failed to load previews:</strong> {error}</p>\n                                        <p className=\"error-help\">\n                                            GitHub API rate limit exceeded. \n                                            {!isAuthenticated && ' Try logging in with a Personal Access Token for higher rate limits, or'}\n                                            {' '}try refreshing the page in a few minutes.\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div className=\"prominent-info\">\n                                <p className=\"info-text\">\n                                    🐾 You can still access the main SGEX workbench and login below.\n                                </p>\n                            </div>\n                        </header>\n\n                        <div className=\"action-cards\">\n                            <div className=\"action-card main-site-card\">\n                                <button \n                                    className=\"card-link\"\n                                    type=\"button\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                        console.log('View Main Site clicked (error state) - navigating to /sgex/main/');\n                                        window.location.assign('/sgex/main/');\n                                    }}\n                                >\n                                    <div className=\"card-content\">\n                                        <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Mascot')} className=\"card-icon\" />\n                                        <div className=\"card-text\">\n                                            <h3>View Main Site</h3>\n                                            <p>Access the main SGEX workbench</p>\n                                        </div>\n                                    </div>\n                                </button>\n                            </div>\n                            <div className=\"action-card collaboration-card\">\n                                <button \n                                    className=\"card-link\"\n                                    onClick={handleCollaborationOpen}\n                                    onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && handleCollaborationOpen()}\n                                >\n                                    <div className=\"card-content\">\n                                        <img src={collaborationImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_COLLABORATION, 'Collaboration')} className=\"card-icon\" />\n                                        <div className=\"card-text\">\n                                            <h3>Collaboration</h3>\n                                            <p>Learn about our mission, how to contribute, and join our community-driven development process.</p>\n                                        </div>\n                                    </div>\n                                </button>\n                            </div>\n                            \n                            {!isAuthenticated ? (\n                                <div className=\"action-card login-card\">\n                                    <div className=\"card-content\">\n                                        <div className=\"login-icon\">🔐</div>\n                                        <div className=\"card-text\">\n                                            <h3>GitHub Login</h3>\n                                            <p>Login to get higher API rate limits and view comments</p>\n                                            <PATLogin onAuthSuccess={handleAuthSuccess} />\n                                        </div>\n                                    </div>\n                                </div>\n                            ) : (\n                                <div className=\"action-card logout-card\">\n                                    <div className=\"card-content\">\n                                        <div className=\"login-icon\">✅</div>\n                                        <div className=\"card-text\">\n                                            <h3>Logged In</h3>\n                                            <p>You can now view and add comments</p>\n                                            <button onClick={handleLogout} className=\"logout-btn\">\n                                                🚪 Logout\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <header className=\"branch-listing-header\">\n                    <h1><img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.ICON_SGEX, 'SGEX Icon')} className=\"sgex-icon\" /> SGEX</h1>\n                    <p className=\"subtitle\">a collaborative workbench for WHO SMART Guidelines</p>\n                    \n                    {error && (\n                        <div className=\"error-banner\">\n                            <div className=\"error-content\">\n                                <span className=\"error-icon\">⚠️</span>\n                                <div className=\"error-text\">\n                                    <p><strong>Failed to load previews:</strong> {error}</p>\n                                    <p className=\"error-help\">\n                                        GitHub API rate limit exceeded. \n                                        {!isAuthenticated && ' Try logging in with a Personal Access Token for higher rate limits, or'}\n                                        {' '}try refreshing the page in a few minutes.\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    \n                    <div className=\"prominent-info\">\n                        <p className=\"info-text\">\n                            🐾 This landing page lists all available previews. \n                            Each branch and PR is automatically deployed to its own preview environment.\n                        </p>\n                    </div>\n                </header>\n\n                <div className=\"action-cards\">\n                    <div className=\"action-card main-site-card\">\n                        <button \n                            className=\"card-link\"\n                            type=\"button\"\n                            onClick={(e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                console.log('View Main Site clicked (main content state) - navigating to /sgex/main/');\n                                window.location.assign('/sgex/main/');\n                            }}\n                        >\n                            <div className=\"card-content\">\n                                <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Mascot')} className=\"card-icon\" />\n                                <div className=\"card-text\">\n                                    <h3>View Main Site</h3>\n                                    <p>Access the main SGEX workbench</p>\n                                </div>\n                            </div>\n                        </button>\n                    </div>\n                    <div className=\"action-card collaboration-card\">\n                        <button \n                            className=\"card-link\"\n                            onClick={handleCollaborationOpen}\n                            onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && handleCollaborationOpen()}\n                        >\n                            <div className=\"card-content\">\n                                <img src={collaborationImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_COLLABORATION, 'Collaboration')} className=\"card-icon\" />\n                                <div className=\"card-text\">\n                                    <h3>Collaboration</h3>\n                                    <p>Learn about our mission, how to contribute, and join our community-driven development process.</p>\n                                </div>\n                            </div>\n                        </button>\n                    </div>\n                    \n                    {!isAuthenticated ? (\n                        <div className=\"action-card login-card\">\n                            <div className=\"card-content\">\n                                <div className=\"login-icon\">🔐</div>\n                                <div className=\"card-text\">\n                                    <h3>GitHub Login</h3>\n                                    <p>Login to view and add comments{error ? ' and get higher API rate limits' : ''}</p>\n                                    <PATLogin onAuthSuccess={handleAuthSuccess} />\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"action-card logout-card\">\n                            <div className=\"card-content\">\n                                <div className=\"login-icon\">✅</div>\n                                <div className=\"card-text\">\n                                    <h3>Logged In</h3>\n                                    <p>You can now view and add comments</p>\n                                    <button onClick={handleLogout} className=\"logout-btn\">\n                                        🚪 Logout\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n                <div className=\"preview-tabs\">\n                    <button className=\"tab-button active\">\n                        🔄 Pull Request Previews ({sortedPRs.length})\n                    </button>\n                </div>\n\n                <div className=\"pr-section\">\n                    <div className=\"pr-controls\">\n                        <div className=\"pr-filter-section\">\n                            <label htmlFor=\"pr-filter\">Filter PRs:</label>\n                            <select\n                                id=\"pr-filter\"\n                                value={prFilter}\n                                onChange={(e) => {\n                                    setPrFilter(e.target.value);\n                                    setPrPage(1);\n                                }}\n                                className=\"filter-select\"\n                            >\n                                <option value=\"open\">Open PRs Only</option>\n                                <option value=\"closed\">Closed PRs Only</option>\n                                <option value=\"all\">All PRs</option>\n                            </select>\n                        </div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search pull requests by title, author, or branch name...\"\n                            value={prSearchTerm}\n                            onChange={(e) => {\n                                setPrSearchTerm(e.target.value);\n                                setPrPage(1);\n                            }}\n                            className=\"pr-search\"\n                        />\n                        <select\n                            value={prSortBy}\n                            onChange={(e) => {\n                                setPrSortBy(e.target.value);\n                                setPrPage(1);\n                            }}\n                            className=\"sort-select\"\n                        >\n                            <option value=\"updated\">Sort by Recent Updates</option>\n                            <option value=\"number\">Sort by PR Number</option>\n                            <option value=\"alphabetical\">Sort Alphabetically</option>\n                        </select>\n                        <select\n                            value={prSortOrder}\n                            onChange={(e) => {\n                                setPrSortOrder(e.target.value);\n                                setPrPage(1);\n                            }}\n                            className=\"sort-select\"\n                        >\n                            <option value=\"desc\">Descending</option>\n                            <option value=\"asc\">Ascending</option>\n                        </select>\n                    </div>\n\n                    <div className=\"pr-cards\">\n                        {paginatedPRs.length === 0 ? (\n                            <div className=\"no-items\">\n                                {prSearchTerm ? (\n                                    <p>No pull requests match your search \"{prSearchTerm}\".</p>\n                                ) : (\n                                    <p>No pull request previews available at the moment.</p>\n                                )}\n                            </div>\n                        ) : (\n                            paginatedPRs.map((pr) => (\n                                <div key={pr.id} className=\"preview-card pr-card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"item-name\">#{pr.number}: {pr.title}</h3>\n                                        <div className=\"card-badges\">\n                                            <span className={`state-badge ${pr.state}`}>\n                                                {pr.state === 'open' ? '🟢' : '🔴'} {pr.state}\n                                            </span>\n                                            <span className={`deployment-status ${getDeploymentStatusInfo(pr.safeBranchName).class}`}>\n                                                {getDeploymentStatusInfo(pr.safeBranchName).text}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    \n                                    <div className=\"card-body\">\n                                        <p className=\"pr-meta\">\n                                            <strong>Branch:</strong> {pr.branchName} • <strong>Author:</strong> {pr.author}\n                                        </p>\n                                        <p className=\"item-date\">\n                                            Created: {pr.createdAt} • Updated: {pr.updatedAt}\n                                        </p>\n                                        \n                                        {/* Discussion Summary Status Bar - Always show */}\n                                        <div \n                                            className=\"discussion-summary-bar\"\n                                            onClick={() => toggleDiscussion(pr.number)}\n                                        >\n                                            <div className=\"discussion-summary-text\">\n                                                <span className=\"discussion-summary-icon\">💬</span>\n                                                {getDiscussionSummaryText(pr.number)}\n                                            </div>\n                                            <span className={`discussion-expand-icon ${expandedDiscussions[pr.number] ? 'expanded' : ''}`}>\n                                                ▶\n                                            </span>\n                                        </div>\n\n                                        {/* Expanded Discussion Section */}\n                                        {expandedDiscussions[pr.number] && (\n                                            <div className=\"discussion-expanded-section\">\n                                                <div className=\"discussion-header\">\n                                                    <h4 className=\"discussion-title\">Discussion</h4>\n                                                    <div className=\"discussion-actions\">\n                                                        <a \n                                                            href={`https://github.com/litlfred/sgex/pull/${pr.number}/files`}\n                                                            target=\"_blank\"\n                                                            rel=\"noopener noreferrer\"\n                                                            className=\"discussion-action-btn\"\n                                                        >\n                                                            📁 View Files\n                                                        </a>\n                                                        <a \n                                                            href={pr.prUrl}\n                                                            target=\"_blank\"\n                                                            rel=\"noopener noreferrer\"\n                                                            className=\"discussion-action-btn secondary\"\n                                                        >\n                                                            🔗 View PR\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                                \n                                                {/* Comment Input at Top - Only for authenticated users */}\n                                                {githubService.isAuth() && (\n                                                    <div className=\"comment-input-section\">\n                                                        <textarea\n                                                            value={commentInputs[pr.number] || ''}\n                                                            onChange={(e) => setCommentInputs(prev => ({\n                                                                ...prev,\n                                                                [pr.number]: e.target.value\n                                                            }))}\n                                                            placeholder=\"Add a comment...\"\n                                                            className=\"comment-input\"\n                                                            rows={3}\n                                                        />\n                                                        <button\n                                                            onClick={() => submitComment(pr.number, commentInputs[pr.number])}\n                                                            disabled={!commentInputs[pr.number]?.trim() || submittingComments[pr.number]}\n                                                            className=\"submit-comment-btn\"\n                                                        >\n                                                            {submittingComments[pr.number] ? 'Submitting...' : 'Add Comment'}\n                                                        </button>\n                                                    </div>\n                                                )}\n                                                \n                                                {/* Scrollable Comments Area - Show for everyone */}\n                                                <div className=\"discussion-scroll-area\">\n                                                    {loadingComments ? (\n                                                        <div className=\"comments-loading\">Loading full discussion...</div>\n                                                    ) : prComments[pr.number] && prComments[pr.number].length > 0 ? (\n                                                        <div className=\"comments-list\">\n                                                            {prComments[pr.number].slice(0, 5).map((comment) => (\n                                                                <div key={comment.id} className=\"comment-item\">\n                                                                    <div className=\"comment-header\">\n                                                                        <img \n                                                                            src={comment.avatar_url} \n                                                                            alt={getAvatarAltText(t, { name: comment.author }, 'user')} \n                                                                            className=\"comment-avatar\"\n                                                                        />\n                                                                        <span className=\"comment-author\">{comment.author}</span>\n                                                                        <span className=\"comment-date\">{comment.created_at}</span>\n                                                                    </div>\n                                                                    <div className=\"comment-body\">\n                                                                        {comment.body.length > 200 ? \n                                                                            `${comment.body.substring(0, 200)}...` : \n                                                                            comment.body\n                                                                        }\n                                                                    </div>\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"no-comments\">\n                                                            {!githubService.isAuth() ? \n                                                                \"No comments yet. Login to add the first comment!\" :\n                                                                \"No comments yet. Be the first to comment!\"\n                                                            }\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        )}\n                                        \n                                        <div className=\"pr-actions\">\n                                            <a \n                                                href={pr.url} \n                                                className=\"preview-link\"\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <span>🚀 View Preview</span>\n                                            </a>\n                                            \n                                            <a \n                                                href={pr.prUrl} \n                                                className=\"pr-link\"\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <span>📋 View PR</span>\n                                            </a>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"card-footer\">\n                                        <small className=\"preview-path\">\n                                            Preview URL: {pr.url}\n                                        </small>\n                                    </div>\n                                </div>\n                            ))\n                        )}\n                    </div>\n\n                    {totalPRPages > 1 && (\n                        <div className=\"pagination\">\n                            <button \n                                className=\"pagination-btn\"\n                                onClick={() => setPrPage(Math.max(1, prPage - 1))}\n                                disabled={prPage === 1}\n                            >\n                                ← Previous\n                            </button>\n                            <span className=\"pagination-info\">\n                                Page {prPage} of {totalPRPages} ({sortedPRs.length} total)\n                            </span>\n                            <button \n                                className=\"pagination-btn\"\n                                onClick={() => setPrPage(Math.min(totalPRPages, prPage + 1))}\n                                disabled={prPage === totalPRPages}\n                            >\n                                Next →\n                            </button>\n                        </div>\n                    )}\n                    </div>\n                    </>\n                )}\n            </div>\n\n            {/* Collaboration Modal */}\n            {showCollaborationModal && (\n                <CollaborationModal onClose={handleCollaborationClose} />\n            )}\n        </PageLayout>\n    );\n};\n\nexport default BranchListingPage;\n"],"names":["_ref","onClose","t","useTranslation","currentSlide","setCurrentSlide","useState","collaborationImage","useThemeImage","pronunciationImage","slides","title","content","_jsxs","className","children","_jsx","src","alt","getAltText","ALT_TEXT_KEYS","IMAGE_COLLABORATION","onClick","window","location","href","origin","IMAGE_PRONUNCIATION","e","target","currentTarget","prevSlide","prev","length","disabled","map","_","index","concat","goToSlide","nextSlide","onAuthSuccess","token","setToken","tokenName","setTokenName","error","setError","loading","setLoading","componentLogger","logger","getLogger","React","componentMount","hasOnAuthSuccess","componentUnmount","onSubmit","async","preventDefault","userAction","tokenProvided","trim","warn","startTime","Date","now","auth","Octokit","octokit","debug","apiCall","userResponse","rest","users","getAuthenticated","duration","apiResponse","status","username","data","login","err","apiError","message","console","htmlFor","id","type","value","onChange","placeholder","autoComplete","_Fragment","BranchListingPage","isAuthenticatedForDeps","githubService","isAuth","pullRequests","setPullRequests","prPage","setPrPage","prSearchTerm","setPrSearchTerm","prSortBy","setPrSortBy","prSortOrder","setPrSortOrder","deploymentStatuses","setDeploymentStatuses","prFilter","setPrFilter","isAuthenticated","setIsAuthenticated","prComments","setPrComments","loadingComments","commentInputs","setCommentInputs","submittingComments","setSubmittingComments","expandedDiscussions","setExpandedDiscussions","discussionSummaries","setDiscussionSummaries","loadingSummaries","setLoadingSummaries","showCollaborationModal","setShowCollaborationModal","ITEMS_PER_PAGE","mascotImage","handleAuthSuccess","authenticate","handleLogout","logout","handleCollaborationOpen","fetchPRCommentsSummary","comments","getPullRequestIssueComments","prNumber","count","lastComment","author","user","created_at","avatar_url","fetchAllPRComments","comment","body","toLocaleDateString","created_at_raw","sort","a","b","loadDiscussionSummaries","useCallback","prs","summaries","pr","number","getDiscussionSummaryText","summary","timeAgo","getTimeAgo","date","diffMs","diffDays","Math","floor","checkDeploymentStatus","workflowRuns","getWorkflowRuns","branch","safeBranchName","workflow_id","per_page","workflow_runs","latestRun","conclusion","html_url","authError","updateDeploymentStatuses","statuses","_objectSpread","getDeploymentStatusInfo","text","class","sortPRs","sortBy","sortOrder","arguments","undefined","comparison","localeCompare","dateA","updatedAt","useEffect","initializeFromStoredToken","getStoredTokenInfo","owner","repo","prState","formattedPRs","getPullRequests","state","head","ref","replace","branchName","url","prUrl","updated_at","createdAt","slice","includes","log","mockPRs","fetchData","filtered","filter","toLowerCase","paginated","interval","setInterval","clearInterval","filteredPRs","sortedPRs","paginatedPRs","totalPRPages","ceil","PageLayout","pageName","showBreadcrumbs","ICON_SGEX","stopPropagation","assign","MASCOT_HELPER","onKeyDown","key","PATLogin","_commentInputs$pr$num","isExpanded","toggleDiscussion","rel","rows","commentText","createPullRequestComment","updatedComments","updatedSummary","submitComment","getAvatarAltText","name","substring","max","min","CollaborationModal","handleCollaborationClose"],"sourceRoot":""}