{"version":3,"file":"static/js/9935.a02a3ff5.chunk.js","mappings":"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","sources":["components/DAKConfiguration.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { PageLayout } from './framework';\n\nconst DAKConfiguration = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  const { profile, templateRepository, destinationOrganization, action } = location.state || {};\n  \n  const [configuration, setConfiguration] = useState({\n    repositoryName: '',\n    repositoryDescription: '',\n    repositoryPrivate: false,\n    repositoryTopics: ['who', 'smart-guidelines', 'dak', 'fhir', 'implementation-guide'],\n    sushiId: '',\n    sushiName: '',\n    sushiTitle: '',\n    sushiDescription: '',\n    sushiVersion: '0.1.0',\n    sushiStatus: 'draft',\n    sushiExperimental: true,\n    sushiPublisher: destinationOrganization?.display_name || destinationOrganization?.login || '',\n    contactName: profile?.name || profile?.login || '',\n    contactEmail: profile?.email || ''\n  });\n  \n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const validateField = (field, value) => {\n    const newErrors = { ...errors };\n\n    switch (field) {\n      case 'repositoryName':\n        if (!value || value.length < 3) {\n          newErrors.repositoryName = 'Repository name must be at least 3 characters';\n        } else if (!/^[a-z0-9][a-z0-9-]*[a-z0-9]$/.test(value)) {\n          newErrors.repositoryName = 'Repository name must be lowercase with hyphens only';\n        } else {\n          delete newErrors.repositoryName;\n        }\n        break;\n      \n      case 'sushiId':\n        if (!value || value.length < 3) {\n          newErrors.sushiId = 'Implementation Guide ID must be at least 3 characters';\n        } else if (!/^[a-z0-9][a-z0-9-.]*[a-z0-9]$/.test(value)) {\n          newErrors.sushiId = 'ID must be lowercase with dots or hyphens only';\n        } else {\n          delete newErrors.sushiId;\n        }\n        break;\n      \n      case 'sushiName':\n        if (!value || value.length < 3) {\n          newErrors.sushiName = 'Name must be at least 3 characters';\n        } else if (!/^[A-Z][A-Za-z0-9]*$/.test(value)) {\n          newErrors.sushiName = 'Name must be PascalCase (no spaces)';\n        } else {\n          delete newErrors.sushiName;\n        }\n        break;\n      \n      case 'sushiTitle':\n        if (!value || value.length < 5) {\n          newErrors.sushiTitle = 'Title must be at least 5 characters';\n        } else {\n          delete newErrors.sushiTitle;\n        }\n        break;\n      \n      case 'sushiDescription':\n        if (!value || value.length < 20) {\n          newErrors.sushiDescription = 'Description must be at least 20 characters';\n        } else {\n          delete newErrors.sushiDescription;\n        }\n        break;\n      \n      case 'sushiPublisher':\n        if (!value || value.length < 2) {\n          newErrors.sushiPublisher = 'Publisher is required';\n        } else {\n          delete newErrors.sushiPublisher;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    setErrors(newErrors);\n  };\n\n  const handleInputChange = (field, value) => {\n    setConfiguration(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    \n    // Auto-generate related fields\n    if (field === 'repositoryName') {\n      if (!configuration.sushiId) {\n        const id = `${destinationOrganization.login}.${value}`.toLowerCase();\n        setConfiguration(prev => ({ ...prev, sushiId: id }));\n      }\n      if (!configuration.sushiName) {\n        const name = value.split('-').map(word => \n          word.charAt(0).toUpperCase() + word.slice(1)\n        ).join('');\n        setConfiguration(prev => ({ ...prev, sushiName: name }));\n      }\n    }\n    \n    validateField(field, value);\n  };\n\n  const handleTopicAdd = (topic) => {\n    if (topic && !configuration.repositoryTopics.includes(topic)) {\n      setConfiguration(prev => ({\n        ...prev,\n        repositoryTopics: [...prev.repositoryTopics, topic]\n      }));\n    }\n  };\n\n  const handleTopicRemove = (topic) => {\n    setConfiguration(prev => ({\n      ...prev,\n      repositoryTopics: prev.repositoryTopics.filter(t => t !== topic)\n    }));\n  };\n\n  const isValid = () => {\n    const required = ['repositoryName', 'repositoryDescription', 'sushiId', 'sushiName', 'sushiTitle', 'sushiDescription', 'sushiPublisher'];\n    const hasAllRequired = required.every(field => configuration[field]?.trim());\n    const hasNoErrors = Object.keys(errors).length === 0;\n    \n    return hasAllRequired && hasNoErrors;\n  };\n\n  const handleContinue = async () => {\n    if (!isValid()) {\n      alert('Please fix all errors before continuing');\n      return;\n    }\n\n    setLoading(true);\n    \n    try {\n      // Simulate repository creation and configuration\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // Navigate to dashboard with the new repository info\n      const newRepository = {\n        id: Date.now(),\n        name: configuration.repositoryName,\n        full_name: `${destinationOrganization.login}/${configuration.repositoryName}`,\n        description: configuration.repositoryDescription,\n        html_url: `https://github.com/${destinationOrganization.login}/${configuration.repositoryName}`,\n        clone_url: `https://github.com/${destinationOrganization.login}/${configuration.repositoryName}.git`,\n        topics: configuration.repositoryTopics,\n        private: configuration.repositoryPrivate,\n        owner: destinationOrganization,\n        smart_guidelines_compatible: true,\n        created_from_template: true,\n        template_repository: templateRepository\n      };\n\n      navigate('/dashboard', {\n        state: {\n          profile,\n          repository: newRepository,\n          configuration,\n          action: 'create',\n          isNewRepository: true\n        }\n      });\n      \n    } catch (error) {\n      console.error('Error creating repository:', error);\n      alert('Failed to create repository. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBack = () => {\n    navigate('/organization-selection', {\n      state: {\n        profile,\n        sourceRepository: templateRepository,\n        action\n      }\n    });\n  };\n\n  if (!profile || !templateRepository || !destinationOrganization || action !== 'create') {\n    navigate('/');\n    return <div>Redirecting...</div>;\n  }\n\n  const suggestedTopics = [\n    'maternal-health', 'immunization', 'anc', 'family-planning', \n    'clinical-guidelines', 'healthcare', 'digital-health', 'who-guidelines'\n  ];\n\n  return (\n    <PageLayout pageName=\"dak-configuration\">\n      <div className=\"config-content\">\n        <div className=\"breadcrumb\">\n          <button onClick={() => navigate('/')} className=\"breadcrumb-link\">\n            Select Profile\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate('/dak-action', { state: { profile } })} className=\"breadcrumb-link\">\n            Choose DAK Action\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={() => navigate(`/dak-selection/${profile.login}`, { state: { profile, action } })} className=\"breadcrumb-link\">\n            Select DAK\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <button onClick={handleBack} className=\"breadcrumb-link\">\n            Select Organization\n          </button>\n          <span className=\"breadcrumb-separator\">›</span>\n          <span className=\"breadcrumb-current\">Configure DAK</span>\n        </div>\n\n        <div className=\"config-main\">\n          <div className=\"config-intro\">\n            <h2>Configure New DAK</h2>\n            <p>\n              Set up your new Digital Adaptation Kit repository and FHIR Implementation Guide parameters.\n            </p>\n            \n            <div className=\"template-info\">\n              <div className=\"info-item\">\n                <span className=\"info-label\">Template:</span>\n                <span className=\"info-value\">{templateRepository.name}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">Destination:</span>\n                <span className=\"info-value\">@{destinationOrganization.login}</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"config-form\">\n            <div className=\"form-section\">\n              <h3>Repository Settings</h3>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"repositoryName\">Repository Name*</label>\n                <input\n                  id=\"repositoryName\"\n                  type=\"text\"\n                  value={configuration.repositoryName}\n                  onChange={(e) => handleInputChange('repositoryName', e.target.value)}\n                  placeholder=\"my-dak-repository\"\n                  className={errors.repositoryName ? 'error' : ''}\n                />\n                {errors.repositoryName && <span className=\"error-message\">{errors.repositoryName}</span>}\n                <small>Lowercase with hyphens only. Will be used in the GitHub URL.</small>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"repositoryDescription\">Repository Description*</label>\n                <textarea\n                  id=\"repositoryDescription\"\n                  value={configuration.repositoryDescription}\n                  onChange={(e) => handleInputChange('repositoryDescription', e.target.value)}\n                  placeholder=\"Digital Adaptation Kit for...\"\n                  rows={3}\n                />\n                <small>Short description for the GitHub repository.</small>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={configuration.repositoryPrivate}\n                    onChange={(e) => handleInputChange('repositoryPrivate', e.target.checked)}\n                  />\n                  <span>Make repository private</span>\n                </label>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Repository Topics</label>\n                <div className=\"topics-container\">\n                  <div className=\"current-topics\">\n                    {configuration.repositoryTopics.map(topic => (\n                      <span key={topic} className=\"topic-tag\">\n                        {topic}\n                        <button \n                          type=\"button\" \n                          onClick={() => handleTopicRemove(topic)}\n                          className=\"topic-remove\"\n                        >\n                          ×\n                        </button>\n                      </span>\n                    ))}\n                  </div>\n                  <div className=\"suggested-topics\">\n                    <small>Suggested topics:</small>\n                    <div className=\"topic-suggestions\">\n                      {suggestedTopics.filter(topic => !configuration.repositoryTopics.includes(topic)).map(topic => (\n                        <button\n                          key={topic}\n                          type=\"button\"\n                          onClick={() => handleTopicAdd(topic)}\n                          className=\"topic-suggestion\"\n                        >\n                          + {topic}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-section\">\n              <h3>FHIR Implementation Guide Settings</h3>\n              \n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"sushiId\">Implementation Guide ID*</label>\n                  <input\n                    id=\"sushiId\"\n                    type=\"text\"\n                    value={configuration.sushiId}\n                    onChange={(e) => handleInputChange('sushiId', e.target.value)}\n                    placeholder=\"who.smart.maternal-health\"\n                    className={errors.sushiId ? 'error' : ''}\n                  />\n                  {errors.sushiId && <span className=\"error-message\">{errors.sushiId}</span>}\n                  <small>Unique identifier for the IG (lowercase with dots/hyphens)</small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"sushiName\">Implementation Guide Name*</label>\n                  <input\n                    id=\"sushiName\"\n                    type=\"text\"\n                    value={configuration.sushiName}\n                    onChange={(e) => handleInputChange('sushiName', e.target.value)}\n                    placeholder=\"WHOSmartMaternalHealth\"\n                    className={errors.sushiName ? 'error' : ''}\n                  />\n                  {errors.sushiName && <span className=\"error-message\">{errors.sushiName}</span>}\n                  <small>PascalCase technical name (no spaces)</small>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"sushiTitle\">Implementation Guide Title*</label>\n                <input\n                  id=\"sushiTitle\"\n                  type=\"text\"\n                  value={configuration.sushiTitle}\n                  onChange={(e) => handleInputChange('sushiTitle', e.target.value)}\n                  placeholder=\"WHO SMART Guidelines - Maternal Health DAK\"\n                  className={errors.sushiTitle ? 'error' : ''}\n                />\n                {errors.sushiTitle && <span className=\"error-message\">{errors.sushiTitle}</span>}\n                <small>Human-readable title for the DAK</small>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"sushiDescription\">Description*</label>\n                <textarea\n                  id=\"sushiDescription\"\n                  value={configuration.sushiDescription}\n                  onChange={(e) => handleInputChange('sushiDescription', e.target.value)}\n                  placeholder=\"This implementation guide provides digital adaptation kit components for...\"\n                  rows={4}\n                  className={errors.sushiDescription ? 'error' : ''}\n                />\n                {errors.sushiDescription && <span className=\"error-message\">{errors.sushiDescription}</span>}\n                <small>Detailed description of the DAK's purpose and scope</small>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"sushiVersion\">Version</label>\n                  <input\n                    id=\"sushiVersion\"\n                    type=\"text\"\n                    value={configuration.sushiVersion}\n                    onChange={(e) => handleInputChange('sushiVersion', e.target.value)}\n                    placeholder=\"0.1.0\"\n                  />\n                  <small>Semantic version number</small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"sushiPublisher\">Publisher*</label>\n                  <input\n                    id=\"sushiPublisher\"\n                    type=\"text\"\n                    value={configuration.sushiPublisher}\n                    onChange={(e) => handleInputChange('sushiPublisher', e.target.value)}\n                    placeholder=\"World Health Organization\"\n                    className={errors.sushiPublisher ? 'error' : ''}\n                  />\n                  {errors.sushiPublisher && <span className=\"error-message\">{errors.sushiPublisher}</span>}\n                  <small>Organization responsible for publishing</small>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"contactName\">Contact Name</label>\n                  <input\n                    id=\"contactName\"\n                    type=\"text\"\n                    value={configuration.contactName}\n                    onChange={(e) => handleInputChange('contactName', e.target.value)}\n                    placeholder=\"Your Name\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"contactEmail\">Contact Email</label>\n                  <input\n                    id=\"contactEmail\"\n                    type=\"email\"\n                    value={configuration.contactEmail}\n                    onChange={(e) => handleInputChange('contactEmail', e.target.value)}\n                    placeholder=\"your.email@example.com\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"config-footer\">\n              <button \n                className=\"create-btn\"\n                onClick={handleContinue}\n                disabled={!isValid() || loading}\n              >\n                {loading ? 'Creating DAK Repository...' : 'Create DAK Repository'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default DAKConfiguration;"],"names":["DAKConfiguration","location","useLocation","navigate","useNavigate","profile","templateRepository","destinationOrganization","action","state","configuration","setConfiguration","useState","repositoryName","repositoryDescription","repositoryPrivate","repositoryTopics","sushiId","sushiName","sushiTitle","sushiDescription","sushiVersion","sushiStatus","sushiExperimental","sushiPublisher","display_name","login","contactName","name","contactEmail","email","errors","setErrors","loading","setLoading","handleInputChange","field","value","prev","_objectSpread","id","concat","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","validateField","newErrors","length","test","isValid","hasAllRequired","every","_configuration$field","trim","hasNoErrors","Object","keys","_jsx","children","PageLayout","pageName","_jsxs","className","onClick","handleBack","sourceRepository","htmlFor","type","onChange","e","target","placeholder","rows","checked","topic","filter","t","handleTopicRemove","includes","handleTopicAdd","async","Promise","resolve","setTimeout","newRepository","Date","now","full_name","description","html_url","clone_url","topics","private","owner","smart_guidelines_compatible","created_from_template","template_repository","repository","isNewRepository","error","console","alert","disabled"],"sourceRoot":""}