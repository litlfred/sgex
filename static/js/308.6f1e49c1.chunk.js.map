{"version":3,"file":"static/js/308.6f1e49c1.chunk.js","mappings":"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","sources":["components/ForkStatusBar.js","services/dakComplianceService.js","components/SaveDialog.js","components/StagingGround.js","components/Publications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport { handleNavigationClick } from '../utils/navigationUtils';\n\nconst ForkStatusBar = ({ profile, repository, selectedBranch }) => {\n  const navigate = useNavigate();\n  \n  const [isExpanded, setIsExpanded] = useState(false);\n  const [forks, setForks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [parentRepository, setParentRepository] = useState(null);\n\n  // Get session storage key for this repository\n  const getStorageKey = React.useCallback(() => {\n    if (!repository) return null;\n    return `sgex_fork_status_${repository.full_name}`;\n  }, [repository]);\n\n  // Load expansion state from session storage\n  useEffect(() => {\n    const storageKey = getStorageKey();\n    if (storageKey) {\n      const savedState = sessionStorage.getItem(storageKey);\n      if (savedState !== null) {\n        setIsExpanded(JSON.parse(savedState));\n      }\n    }\n  }, [getStorageKey]);\n\n  // Save expansion state to session storage\n  const toggleExpansion = () => {\n    const newState = !isExpanded;\n    setIsExpanded(newState);\n    \n    const storageKey = getStorageKey();\n    if (storageKey) {\n      sessionStorage.setItem(storageKey, JSON.stringify(newState));\n    }\n  };\n\n  // Fetch forks and parent repository info when component mounts\n  useEffect(() => {\n    const fetchRepositoryInfo = async () => {\n      if (!repository) return;\n      \n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Check if we need to fetch full repository details to get parent info\n        let fullRepository = repository;\n        if (!repository.parent && (repository.fork === true || repository.fork === undefined)) {\n          // Fetch full repository details to get parent information\n          try {\n            fullRepository = await githubService.getRepository(repository.owner.login, repository.name);\n          } catch (repoErr) {\n            console.warn('Could not fetch full repository details:', repoErr);\n            // Continue with existing repository data\n          }\n        }\n        \n        // Set parent repository if this is a fork\n        if (fullRepository.fork && fullRepository.parent) {\n          setParentRepository(fullRepository.parent);\n        }\n        \n        // Fetch forks for the current repository being viewed\n        const forks = await githubService.getRepositoryForks(repository.owner.login, repository.name);\n        setForks(forks);\n      } catch (err) {\n        console.error('Error fetching repository information:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRepositoryInfo();\n  }, [repository]);\n\n  // Generate DAK dashboard URL for a fork\n  const getForkDashboardUrl = (fork) => {\n    const owner = fork.owner.login;\n    const repoName = fork.name;\n    const branch = fork.default_branch || 'main';\n    return `/dashboard/${owner}/${repoName}/${branch}`;\n  };\n\n  // Handle parent repository navigation\n  const handleParentClick = (event) => {\n    if (!parentRepository) return;\n    \n    const dashboardUrl = getForkDashboardUrl(parentRepository);\n    const navigationState = {\n      profile: {\n        login: parentRepository.owner.login,\n        name: parentRepository.owner.login,\n        avatar_url: parentRepository.owner.avatar_url,\n        type: parentRepository.owner.type\n      },\n      repository: parentRepository,\n      selectedBranch: parentRepository.default_branch || 'main'\n    };\n    \n    handleNavigationClick(event, dashboardUrl, navigate, navigationState);\n  };\n\n  // Handle fork navigation\n  const handleForkClick = (event, fork) => {\n    const dashboardUrl = getForkDashboardUrl(fork);\n    const navigationState = {\n      profile: {\n        login: fork.owner.login,\n        name: fork.owner.login,\n        avatar_url: fork.owner.avatar_url,\n        type: fork.owner.type\n      },\n      repository: fork,\n      selectedBranch: fork.default_branch || 'main'\n    };\n    \n    handleNavigationClick(event, dashboardUrl, navigate, navigationState);\n  };\n\n  if (!repository || loading) {\n    return (\n      <div className=\"fork-status-bar loading\">\n        <div className=\"fork-status-header\">\n          <div className=\"fork-badge-placeholder\">\n            <span className=\"fork-icon\">🍴</span>\n            <span className=\"fork-count\">...</span>\n          </div>\n          <span className=\"fork-status-title\">Loading repository info...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"fork-status-bar error\">\n        <div className=\"fork-status-header\">\n          <div className=\"fork-badge\">\n            <span className=\"fork-icon\">🍴</span>\n            <span className=\"fork-count\">?</span>\n          </div>\n          <span className=\"fork-status-title\">Unable to load repository info</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`fork-status-bar ${isExpanded ? 'expanded' : 'collapsed'}`}>\n      <div className=\"fork-status-header\" onClick={toggleExpansion}>\n        <div className=\"fork-badge\">\n          <span className=\"fork-icon\">🍴</span>\n          <span className=\"fork-count\">{forks.length}</span>\n        </div>\n        <span className=\"fork-status-title\">\n          {parentRepository ? (\n            <>\n              Fork of{' '}\n              <span \n                className=\"parent-repo-link\" \n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleParentClick(e);\n                }}\n              >\n                {parentRepository.owner.login}/{parentRepository.name}\n              </span>\n              {forks.length > 0 && (\n                <> • {forks.length} fork{forks.length !== 1 ? 's' : ''}</>\n              )}\n            </>\n          ) : (\n            <>\n              {forks.length} fork{forks.length !== 1 ? 's' : ''} of {repository?.name || 'repository'}\n            </>\n          )}\n        </span>\n        <button className=\"fork-toggle-btn\" aria-label={isExpanded ? 'Collapse' : 'Expand'}>\n          <span className={`toggle-icon ${isExpanded ? 'expanded' : ''}`}>▼</span>\n        </button>\n      </div>\n      \n      {isExpanded && (\n        <div className=\"fork-list\">\n          {parentRepository && (\n            <div className=\"parent-section\">\n              <h4 className=\"section-title\">Parent Repository</h4>\n              <div \n                className=\"fork-item parent-item\"\n                onClick={(event) => handleParentClick(event)}\n              >\n                <div className=\"fork-avatar\">\n                  <img \n                    src={parentRepository.owner.avatar_url} \n                    alt={parentRepository.owner.login}\n                    className=\"fork-owner-avatar\"\n                  />\n                </div>\n                <div className=\"fork-info\">\n                  <div className=\"fork-name\">\n                    <strong>{parentRepository.owner.login}/{parentRepository.name}</strong>\n                    <span className=\"parent-badge\">Parent</span>\n                  </div>\n                  <div className=\"fork-description\">\n                    {parentRepository.description || 'No description available'}\n                  </div>\n                  <div className=\"fork-stats\">\n                    <span className=\"fork-stat\">\n                      ⭐ {parentRepository.stargazers_count}\n                    </span>\n                    <span className=\"fork-stat\">\n                      📝 {parentRepository.open_issues_count} issues\n                    </span>\n                    <span className=\"fork-stat\">\n                      📅 Updated {new Date(parentRepository.updated_at).toLocaleDateString()}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"fork-actions\">\n                  <span className=\"fork-link-hint\">Click to view DAK →</span>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {forks.length === 0 ? (\n            !parentRepository && (\n              <div className=\"no-forks\">\n                <p>No forks found for this repository.</p>\n              </div>\n            )\n          ) : (\n            <div className=\"forks-section\">\n              {parentRepository && <h4 className=\"section-title\">Forks ({forks.length})</h4>}\n              <div className=\"fork-items\">\n                {forks.map((fork) => (\n                  <div \n                    key={fork.id} \n                    className=\"fork-item\"\n                    onClick={(event) => handleForkClick(event, fork)}\n                  >\n                    <div className=\"fork-avatar\">\n                      <img \n                        src={fork.owner.avatar_url} \n                        alt={fork.owner.login}\n                        className=\"fork-owner-avatar\"\n                      />\n                    </div>\n                    <div className=\"fork-info\">\n                      <div className=\"fork-name\">\n                        <strong>{fork.owner.login}/{fork.name}</strong>\n                      </div>\n                      <div className=\"fork-description\">\n                        {fork.description || 'No description available'}\n                      </div>\n                      <div className=\"fork-stats\">\n                        <span className=\"fork-stat\">\n                          ⭐ {fork.stargazers_count}\n                        </span>\n                        <span className=\"fork-stat\">\n                          📝 {fork.open_issues_count} issues\n                        </span>\n                        <span className=\"fork-stat\">\n                          📅 Updated {new Date(fork.updated_at).toLocaleDateString()}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"fork-actions\">\n                      <span className=\"fork-link-hint\">Click to view DAK →</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ForkStatusBar;","/**\n * DAK Compliance Service\n * \n * Provides comprehensive validation for DAK components with support for error, warning, and info levels.\n * Designed to work in multiple environments: React client-side, command-line, and IDE integration.\n */\n\nimport { lazyLoadAjv, lazyLoadAjvFormats, lazyLoadYaml } from '../utils/lazyRouteUtils';\n\n// Import schema as a module\nconst sushiConfigSchema = require('../schemas/sushi-config.json');\n\nclass DAKComplianceService {\n  constructor() {\n    this.validators = new Map();\n    this.initializeSchemaValidator();\n    this.initializeDefaultValidators();\n  }\n\n  /**\n   * Initialize AJV schema validator for sushi-config.yaml\n   */\n  async initializeSchemaValidator() {\n    const Ajv = await lazyLoadAjv();\n    const addFormats = await lazyLoadAjvFormats();\n    \n    this.ajv = new Ajv({ allErrors: true, verbose: true });\n    addFormats(this.ajv);\n    this.sushiConfigValidator = this.ajv.compile(sushiConfigSchema);\n  }\n\n  /**\n   * Initialize default validators for common DAK file types\n   */\n  initializeDefaultValidators() {\n    // XML file validators (general)\n    this.addValidator('xml', 'xml-well-formed', {\n      level: 'error',\n      description: 'XML files must be well-formed',\n      validator: this.validateXMLWellFormed.bind(this)\n    });\n\n    // BPMN file validators\n    this.addValidator('bpmn', 'xml-well-formed', {\n      level: 'error',\n      description: 'BPMN files must be well-formed XML',\n      validator: this.validateXMLWellFormed.bind(this)\n    });\n\n    this.addValidator('bpmn', 'bpmn-namespace', {\n      level: 'error',\n      description: 'BPMN files must use correct BPMN 2.0 namespace',\n      validator: this.validateBPMNNamespace.bind(this)\n    });\n\n    this.addValidator('bpmn', 'has-start-event', {\n      level: 'warning',\n      description: 'BPMN process should have at least one start event',\n      validator: this.validateBPMNStartEvent.bind(this)\n    });\n\n    // DMN file validators\n    this.addValidator('dmn', 'xml-well-formed', {\n      level: 'error',\n      description: 'DMN files must be well-formed XML',\n      validator: this.validateXMLWellFormed.bind(this)\n    });\n\n    this.addValidator('dmn', 'dmn-namespace', {\n      level: 'error',\n      description: 'DMN files must use correct DMN 1.3 namespace',\n      validator: this.validateDMNNamespace.bind(this)\n    });\n\n    // JSON file validators\n    this.addValidator('json', 'json-valid', {\n      level: 'error',\n      description: 'JSON files must be valid JSON',\n      validator: this.validateJSONSyntax.bind(this)\n    });\n\n    // FHIR resource validators\n    this.addValidator('json', 'fhir-resource-type', {\n      level: 'info',\n      description: 'FHIR resources should have valid resourceType',\n      validator: this.validateFHIRResourceType.bind(this)\n    });\n\n    // General file validators\n    this.addValidator('*', 'file-size-limit', {\n      level: 'warning',\n      description: 'Files should be under 1MB for optimal performance',\n      validator: this.validateFileSize.bind(this)\n    });\n\n    this.addValidator('*', 'filename-conventions', {\n      level: 'info',\n      description: 'Files should follow naming conventions',\n      validator: this.validateFilenameConventions.bind(this)\n    });\n\n    // WHO SMART Guidelines specific validators\n    this.addValidator('yaml', 'sushi-config-valid', {\n      level: 'error',\n      description: 'sushi-config.yaml must be valid and contain required fields',\n      validator: this.validateSushiConfig.bind(this)\n    });\n  }\n\n  /**\n   * Add a new validator\n   */\n  addValidator(fileType, validatorId, config) {\n    if (!this.validators.has(fileType)) {\n      this.validators.set(fileType, new Map());\n    }\n    this.validators.get(fileType).set(validatorId, config);\n  }\n\n  /**\n   * Remove a validator\n   */\n  removeValidator(fileType, validatorId) {\n    if (this.validators.has(fileType)) {\n      this.validators.get(fileType).delete(validatorId);\n    }\n  }\n\n  /**\n   * Validate a single file\n   */\n  async validateFile(filePath, content) {\n    const results = [];\n    const fileExtension = this.getFileExtension(filePath);\n    const fileName = this.getFileName(filePath);\n\n    // Get validators for this file type and universal validators\n    const typeValidators = this.validators.get(fileExtension) || new Map();\n    const universalValidators = this.validators.get('*') || new Map();\n\n    // Run type-specific validators\n    for (const [validatorId, config] of typeValidators) {\n      try {\n        const result = await config.validator(filePath, content, fileName);\n        if (result) {\n          results.push({\n            validatorId,\n            level: config.level,\n            description: config.description,\n            ...result\n          });\n        }\n      } catch (error) {\n        results.push({\n          validatorId,\n          level: 'error',\n          description: 'Validator execution failed',\n          message: error.message,\n          filePath\n        });\n      }\n    }\n\n    // Run universal validators\n    for (const [validatorId, config] of universalValidators) {\n      try {\n        const result = await config.validator(filePath, content, fileName);\n        if (result) {\n          results.push({\n            validatorId,\n            level: config.level,\n            description: config.description,\n            ...result\n          });\n        }\n      } catch (error) {\n        results.push({\n          validatorId,\n          level: 'error',\n          description: 'Validator execution failed',\n          message: error.message,\n          filePath\n        });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Validate entire staging ground\n   */\n  async validateStagingGround(stagingGround) {\n    const results = {\n      summary: { error: 0, warning: 0, info: 0 },\n      files: {},\n      validatedAt: Date.now()\n    };\n\n    for (const file of stagingGround.files) {\n      const fileResults = await this.validateFile(file.path, file.content);\n      results.files[file.path] = fileResults;\n\n      // Update summary counts\n      fileResults.forEach(result => {\n        if (result.level === 'error') results.summary.error++;\n        else if (result.level === 'warning') results.summary.warning++;\n        else if (result.level === 'info') results.summary.info++;\n      });\n    }\n\n    return results;\n  }\n\n  /**\n   * Check if staging ground can be saved (no error-level violations)\n   */\n  async canSave(stagingGround) {\n    const validation = await this.validateStagingGround(stagingGround);\n    return validation.summary.error === 0;\n  }\n\n  // Validator implementations\n\n  async validateXMLWellFormed(filePath, content) {\n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, 'text/xml');\n      const parserError = doc.querySelector('parsererror');\n      \n      if (parserError) {\n        return {\n          message: 'XML is not well-formed: ' + parserError.textContent,\n          filePath\n        };\n      }\n      return null;\n    } catch (error) {\n      return {\n        message: 'Failed to parse XML: ' + error.message,\n        filePath\n      };\n    }\n  }\n\n  async validateBPMNNamespace(filePath, content) {\n    if (!content.includes('xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"')) {\n      return {\n        message: 'BPMN file missing correct BPMN 2.0 namespace declaration',\n        filePath,\n        suggestion: 'Add xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" to root element'\n      };\n    }\n    return null;\n  }\n\n  async validateBPMNStartEvent(filePath, content) {\n    if (!content.includes('<startEvent') && !content.includes('<bpmn:startEvent')) {\n      return {\n        message: 'BPMN process should contain at least one start event',\n        filePath,\n        suggestion: 'Add a start event to begin the process flow'\n      };\n    }\n    return null;\n  }\n\n  async validateDMNNamespace(filePath, content) {\n    if (!content.includes('xmlns:dmn=\"https://www.omg.org/spec/DMN/20191111/MODEL/\"')) {\n      return {\n        message: 'DMN file missing correct DMN 1.3 namespace declaration',\n        filePath,\n        suggestion: 'Add xmlns:dmn=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" to root element'\n      };\n    }\n    return null;\n  }\n\n  async validateJSONSyntax(filePath, content) {\n    try {\n      JSON.parse(content);\n      return null;\n    } catch (error) {\n      return {\n        message: 'Invalid JSON syntax: ' + error.message,\n        filePath\n      };\n    }\n  }\n\n  async validateFHIRResourceType(filePath, content) {\n    try {\n      const json = JSON.parse(content);\n      const validResourceTypes = [\n        'StructureDefinition', 'ValueSet', 'CodeSystem', 'ConceptMap',\n        'Questionnaire', 'PlanDefinition', 'ActivityDefinition', 'Measure',\n        'Library', 'ImplementationGuide', 'Bundle', 'Patient', 'Practitioner'\n      ];\n\n      if (json.resourceType && !validResourceTypes.includes(json.resourceType)) {\n        return {\n          message: `Unknown FHIR resourceType: ${json.resourceType}`,\n          filePath,\n          suggestion: 'Verify the resourceType is correct for FHIR R4'\n        };\n      }\n      return null;\n    } catch (error) {\n      // Not JSON, skip this validator\n      return null;\n    }\n  }\n\n  async validateFileSize(filePath, content) {\n    const sizeInBytes = new Blob([content]).size;\n    const maxSize = 1024 * 1024; // 1MB\n\n    if (sizeInBytes > maxSize) {\n      return {\n        message: `File size (${(sizeInBytes / 1024 / 1024).toFixed(1)}MB) exceeds recommended limit of 1MB`,\n        filePath,\n        suggestion: 'Consider breaking large files into smaller components'\n      };\n    }\n    return null;\n  }\n\n  async validateFilenameConventions(filePath, content) {\n    const fileName = this.getFileName(filePath);\n    const issues = [];\n\n    // Check for spaces in filename\n    if (fileName.includes(' ')) {\n      issues.push('avoid spaces in filenames');\n    }\n\n    // Check for special characters\n    if (/[<>:\"|?*]/.test(fileName)) {\n      issues.push('avoid special characters (<>:\"|?*)');\n    }\n\n    // Check for very long names\n    if (fileName.length > 100) {\n      issues.push('filename is very long (>100 characters)');\n    }\n\n    if (issues.length > 0) {\n      return {\n        message: `Filename convention issues: ${issues.join(', ')}`,\n        filePath,\n        suggestion: 'Use lowercase letters, numbers, hyphens, and underscores'\n      };\n    }\n    return null;\n  }\n\n  async validateSushiConfig(filePath, content) {\n    if (!filePath.endsWith('sushi-config.yaml')) {\n      return null;\n    }\n\n    try {\n      // Parse YAML content\n      let parsedConfig;\n      try {\n        // Lazy load js-yaml to improve initial page responsiveness\n        const yaml = await lazyLoadYaml();\n        parsedConfig = yaml.load(content);\n      } catch (yamlError) {\n        return {\n          message: `Invalid YAML syntax: ${yamlError.message}`,\n          filePath,\n          suggestion: 'Fix YAML syntax errors and ensure proper indentation'\n        };\n      }\n\n      if (!parsedConfig || typeof parsedConfig !== 'object') {\n        return {\n          message: 'sushi-config.yaml must contain a valid YAML object',\n          filePath,\n          suggestion: 'Ensure the file contains proper YAML object structure'\n        };\n      }\n\n      // Validate against JSON schema\n      const isValid = this.sushiConfigValidator(parsedConfig);\n      \n      if (!isValid) {\n        const errors = this.sushiConfigValidator.errors;\n        const errorMessages = errors.map(error => {\n          const field = error.instancePath ? error.instancePath.replace('/', '') : error.params?.missingProperty || 'root';\n          let message = `${field}: ${error.message}`;\n          \n          if (error.params?.allowedValues) {\n            message += ` (allowed: ${error.params.allowedValues.join(', ')})`;\n          }\n          \n          return message;\n        });\n\n        return {\n          message: `sushi-config.yaml validation errors: ${errorMessages.join('; ')}`,\n          filePath,\n          suggestion: 'Review the sushi-config.yaml specification at https://fshschool.org/docs/sushi/configuration/',\n          details: errors\n        };\n      }\n\n      // Additional WHO SMART Guidelines specific validation\n      const whoValidation = this.validateWHOSmartGuidelines(parsedConfig);\n      if (whoValidation) {\n        return whoValidation;\n      }\n\n      return null;\n    } catch (error) {\n      return {\n        message: 'Failed to validate sushi-config.yaml: ' + error.message,\n        filePath,\n        suggestion: 'Check file format and content structure'\n      };\n    }\n  }\n\n  /**\n   * Additional validation for WHO SMART Guidelines compliance\n   */\n  validateWHOSmartGuidelines(config) {\n    const issues = [];\n\n    // Check for smart.who.int.base dependency\n    if (!config.dependencies || !config.dependencies['smart.who.int.base']) {\n      issues.push('missing smart.who.int.base dependency (required for WHO DAK compliance)');\n    }\n\n    // Check canonical URL pattern for WHO guidelines\n    if (config.canonical && config.canonical.includes('smart.who.int')) {\n      if (!config.id.startsWith('smart.who.int')) {\n        issues.push('id should start with \"smart.who.int\" when using WHO canonical URL');\n      }\n    }\n\n    // Check for required WHO metadata\n    if (config.canonical && config.canonical.includes('smart.who.int')) {\n      if (!config.publisher || !config.publisher.toLowerCase().includes('world health organization')) {\n        issues.push('publisher should include \"World Health Organization\" for WHO guidelines');\n      }\n\n      if (!config.jurisdiction || !Array.isArray(config.jurisdiction)) {\n        issues.push('jurisdiction should be specified for WHO guidelines');\n      }\n    }\n\n    if (issues.length > 0) {\n      return {\n        message: `WHO SMART Guidelines compliance issues: ${issues.join(', ')}`,\n        filePath: 'sushi-config.yaml',\n        suggestion: 'Ensure compliance with WHO SMART Guidelines requirements'\n      };\n    }\n\n    return null;\n  }\n\n  // Utility methods\n\n  getFileExtension(filePath) {\n    const parts = filePath.split('.');\n    return parts.length > 1 ? parts[parts.length - 1].toLowerCase() : '';\n  }\n\n  getFileName(filePath) {\n    return filePath.split('/').pop() || filePath;\n  }\n\n  /**\n   * Format validation results for display\n   */\n  formatValidationResults(validation) {\n    const formatted = {\n      canSave: validation.summary.error === 0,\n      summary: validation.summary,\n      files: []\n    };\n\n    Object.entries(validation.files).forEach(([filePath, results]) => {\n      if (results.length > 0) {\n        formatted.files.push({\n          path: filePath,\n          issues: results.map(result => ({\n            level: result.level,\n            message: result.message,\n            description: result.description,\n            suggestion: result.suggestion\n          }))\n        });\n      }\n    });\n\n    return formatted;\n  }\n\n  /**\n   * Get validation summary for UI display\n   */\n  getValidationSummary(validation) {\n    return {\n      error: validation.summary.error,\n      warning: validation.summary.warning,\n      info: validation.summary.info,\n      canSave: validation.summary.error === 0,\n      hasIssues: validation.summary.error + validation.summary.warning + validation.summary.info > 0\n    };\n  }\n}\n\n// Create singleton instance\nconst dakComplianceService = new DAKComplianceService();\n\nexport default dakComplianceService;","import React, { useState, useEffect } from 'react';\nimport githubService from '../services/githubService';\nimport dakComplianceService from '../services/dakComplianceService';\nimport stagingGroundService from '../services/stagingGroundService';\n\nconst SaveDialog = ({ \n  isOpen, \n  onClose, \n  stagingGround, \n  validation, \n  repository, \n  selectedBranch,\n  hasWriteAccess,\n  onSaveSuccess \n}) => {\n  const [commitMessage, setCommitMessage] = useState('');\n  const [overrideValidation, setOverrideValidation] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [showValidationDetails, setShowValidationDetails] = useState(false);\n\n  // Reset state when dialog opens\n  useEffect(() => {\n    if (isOpen) {\n      setCommitMessage(stagingGround?.message || '');\n      setOverrideValidation(false);\n      setIsSaving(false);\n      setError(null);\n      setShowValidationDetails(false);\n    }\n  }, [isOpen, stagingGround]);\n\n  if (!isOpen) return null;\n\n  const validationSummary = validation ? dakComplianceService.getValidationSummary(validation) : null;\n  const canSave = validationSummary ? (validationSummary.canSave || overrideValidation) : true;\n  const hasErrors = validationSummary ? validationSummary.error > 0 : false;\n\n  const handleSave = async () => {\n    if (!commitMessage.trim()) {\n      setError('Commit message is required');\n      return;\n    }\n\n    if (!hasWriteAccess) {\n      setError('You need write permissions to save changes');\n      return;\n    }\n\n    if (hasErrors && !overrideValidation) {\n      setError('Cannot save with validation errors. Enable override option to proceed anyway.');\n      return;\n    }\n\n    setIsSaving(true);\n    setError(null);\n\n    try {\n      const owner = repository.owner?.login || repository.full_name.split('/')[0];\n      \n      if (repository.isDemo || (repository.owner && repository.owner.login === 'demo-user')) {\n        // Simulate save in demo mode\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        onSaveSuccess({\n          sha: 'demo-commit-sha',\n          message: commitMessage,\n          url: `https://github.com/${repository.full_name}/commit/demo-commit-sha`\n        });\n        return;\n      }\n\n      // Create commit with multiple files\n      const result = await githubService.createCommit(\n        owner,\n        repository.name,\n        selectedBranch,\n        commitMessage.trim(),\n        stagingGround.files\n      );\n\n      onSaveSuccess({\n        sha: result.sha,\n        message: commitMessage,\n        url: result.html_url\n      });\n\n    } catch (err) {\n      console.error('Error saving changes:', err);\n      setError(getErrorMessage(err));\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const getErrorMessage = (error) => {\n    if (error.status === 409) {\n      return 'Conflict detected. The branch has been updated since you started. Please refresh and try again.';\n    } else if (error.status === 403) {\n      return 'Permission denied. Check that your token has write access to this repository.';\n    } else if (error.status === 404) {\n      return 'Repository or branch not found. Please verify the repository exists and you have access.';\n    } else if (error.message) {\n      return error.message;\n    } else {\n      return 'An unexpected error occurred while saving. Please try again.';\n    }\n  };\n\n  const formatValidationIcon = (level) => {\n    switch (level) {\n      case 'error': return '🔴';\n      case 'warning': return '🟡';\n      case 'info': return '🟢';\n      default: return '❓';\n    }\n  };\n\n  // Handle removing individual file\n  const handleRemoveFile = (filePath) => {\n    if (window.confirm(`Are you sure you want to remove \"${filePath}\" from staging? This cannot be undone.`)) {\n      stagingGroundService.removeFile(filePath);\n    }\n  };\n\n  return (\n    <div className=\"save-dialog-overlay\">\n      <div className=\"save-dialog\">\n        <div className=\"dialog-header\">\n          <h3>💾 Save Changes</h3>\n          <button \n            className=\"dialog-close\"\n            onClick={onClose}\n            disabled={isSaving}\n          >\n            ×\n          </button>\n        </div>\n\n        <div className=\"dialog-content\">\n          {/* Files Summary */}\n          <div className=\"save-summary\">\n            <h4>Files to be committed ({stagingGround?.files?.length || 0}):</h4>\n            <div className=\"files-list\">\n              {stagingGround?.files?.map((file, index) => (\n                <div key={index} className=\"file-item\">\n                  <span className=\"file-icon\">📄</span>\n                  <span className=\"file-path\">{file.path}</span>\n                  <span className=\"file-size\">\n                    {(new Blob([file.content]).size / 1024).toFixed(1)} KB\n                  </span>\n                  <button\n                    className=\"remove-file-btn\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleRemoveFile(file.path);\n                    }}\n                    title={`Remove ${file.path} from staging`}\n                    disabled={isSaving}\n                  >\n                    🗑️\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Validation Status */}\n          {validationSummary && (\n            <div className=\"validation-section\">\n              <div \n                className={`validation-summary ${validationSummary.hasIssues ? 'has-issues' : 'clean'}`}\n                onClick={() => setShowValidationDetails(!showValidationDetails)}\n              >\n                <div className=\"validation-header\">\n                  <h4>🚦 Validation Status</h4>\n                  <div className=\"validation-badges\">\n                    {validationSummary.error > 0 && (\n                      <span className=\"validation-badge error\">\n                        🔴 {validationSummary.error}\n                      </span>\n                    )}\n                    {validationSummary.warning > 0 && (\n                      <span className=\"validation-badge warning\">\n                        🟡 {validationSummary.warning}\n                      </span>\n                    )}\n                    {validationSummary.info > 0 && (\n                      <span className=\"validation-badge info\">\n                        🟢 {validationSummary.info}\n                      </span>\n                    )}\n                    {!validationSummary.hasIssues && (\n                      <span className=\"validation-badge success\">\n                        ✅ All clear\n                      </span>\n                    )}\n                  </div>\n                  <span className={`expand-icon ${showValidationDetails ? 'expanded' : ''}`}>\n                    ▼\n                  </span>\n                </div>\n              </div>\n\n              {showValidationDetails && validation && (\n                <div className=\"validation-details\">\n                  {Object.entries(validation.files).map(([filePath, results]) => (\n                    results.length > 0 && (\n                      <div key={filePath} className=\"file-validation\">\n                        <h5>📄 {filePath}</h5>\n                        <div className=\"validation-issues\">\n                          {results.map((result, index) => (\n                            <div key={index} className={`validation-issue ${result.level}`}>\n                              <span className=\"issue-icon\">{formatValidationIcon(result.level)}</span>\n                              <div className=\"issue-content\">\n                                <div className=\"issue-message\">{result.message}</div>\n                                {result.suggestion && (\n                                  <div className=\"issue-suggestion\">💡 {result.suggestion}</div>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )\n                  ))}\n                </div>\n              )}\n\n              {/* Override option for errors */}\n              {hasErrors && (\n                <div className=\"override-section\">\n                  <label className=\"override-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      checked={overrideValidation}\n                      onChange={(e) => setOverrideValidation(e.target.checked)}\n                    />\n                    <span className=\"checkmark\"></span>\n                    Override validation errors and save anyway\n                  </label>\n                  <p className=\"override-warning\">\n                    ⚠️ Saving with validation errors may cause issues with your DAK.\n                    Only enable this if you're sure about your changes.\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Commit Message */}\n          <div className=\"commit-message-section\">\n            <label htmlFor=\"commit-message\">\n              <h4>✍️ Commit Message</h4>\n            </label>\n            <textarea\n              id=\"commit-message\"\n              className=\"commit-message-input\"\n              value={commitMessage}\n              onChange={(e) => setCommitMessage(e.target.value)}\n              placeholder=\"Describe your changes...\"\n              rows={3}\n              disabled={isSaving}\n              required\n            />\n            <div className=\"commit-tips\">\n              <p>💡 <strong>Tip:</strong> Write a clear, descriptive message about what you changed and why.</p>\n            </div>\n          </div>\n\n          {/* Error Display */}\n          {error && (\n            <div className=\"error-section\">\n              <div className=\"error-message\">\n                <span className=\"error-icon\">❌</span>\n                {error}\n              </div>\n            </div>\n          )}\n\n          {/* Repository Info */}\n          <div className=\"repo-info\">\n            <div className=\"info-item\">\n              <span className=\"info-label\">Repository:</span>\n              <span className=\"info-value\">{repository?.full_name}</span>\n            </div>\n            <div className=\"info-item\">\n              <span className=\"info-label\">Branch:</span>\n              <span className=\"info-value\">{selectedBranch}</span>\n            </div>\n            <div className=\"info-item\">\n              <span className=\"info-label\">Access:</span>\n              <span className={`info-value ${hasWriteAccess ? 'write' : 'read'}`}>\n                {hasWriteAccess ? '✏️ Write' : '👁️ Read-only'}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"dialog-actions\">\n          <button\n            className=\"action-btn secondary\"\n            onClick={onClose}\n            disabled={isSaving}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"action-btn primary\"\n            onClick={handleSave}\n            disabled={!canSave || !commitMessage.trim() || isSaving || !hasWriteAccess}\n          >\n            {isSaving ? (\n              <>\n                <span className=\"saving-spinner\">⏳</span>\n                Saving...\n              </>\n            ) : (\n              <>💾 Save Changes</>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SaveDialog;","import React, { useState, useEffect, useCallback } from 'react';\nimport stagingGroundService from '../services/stagingGroundService';\nimport dakComplianceService from '../services/dakComplianceService';\nimport SaveDialog from './SaveDialog';\n\nconst StagingGround = ({ repository, selectedBranch, hasWriteAccess, profile }) => {\n  const [stagingGround, setStagingGround] = useState(null);\n  const [validation, setValidation] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n\n  // Load staging ground data\n  const loadStagingGroundData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const currentStagingGround = stagingGroundService.getStagingGround();\n      setStagingGround(currentStagingGround);\n      \n      if (currentStagingGround.files.length > 0) {\n        await validateStagingGround(currentStagingGround);\n      }\n    } catch (err) {\n      setError('Failed to load staging ground data');\n      console.error('Error loading staging ground:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Initialize staging ground service\n  useEffect(() => {\n    if (repository && selectedBranch) {\n      stagingGroundService.initialize(repository, selectedBranch);\n      loadStagingGroundData();\n\n      // Subscribe to staging ground changes\n      const unsubscribe = stagingGroundService.addListener((updatedStagingGround) => {\n        setStagingGround(updatedStagingGround);\n        validateStagingGround(updatedStagingGround);\n      });\n\n      return unsubscribe;\n    }\n  }, [repository, selectedBranch, loadStagingGroundData]);\n\n  // Validate staging ground\n  const validateStagingGround = async (stagingGroundData) => {\n    if (!stagingGroundData || stagingGroundData.files.length === 0) {\n      setValidation(null);\n      return;\n    }\n\n    try {\n      const validationResult = await dakComplianceService.validateStagingGround(stagingGroundData);\n      setValidation(validationResult);\n    } catch (err) {\n      console.error('Error validating staging ground:', err);\n      setValidation(null);\n    }\n  };\n\n  // Handle saving changes\n  const handleSave = () => {\n    if (!hasWriteAccess) {\n      alert('You need write permissions to save changes to this repository.');\n      return;\n    }\n    \n    setShowSaveDialog(true);\n  };\n\n  // Handle successful save\n  const handleSaveSuccess = (result) => {\n    setShowSaveDialog(false);\n    \n    // Clear staging ground after successful save\n    stagingGroundService.clearStagingGround();\n    \n    // Show success message\n    alert(`Changes saved successfully! Commit: ${result.sha.substring(0, 7)}`);\n  };\n\n  // Handle clearing staging ground\n  const handleClearChanges = () => {\n    if (window.confirm('Are you sure you want to discard all changes? This cannot be undone.')) {\n      stagingGroundService.clearStagingGround();\n    }\n  };\n\n  // Handle removing individual file\n  const handleRemoveFile = (filePath) => {\n    if (window.confirm(`Are you sure you want to remove \"${filePath}\" from staging? This cannot be undone.`)) {\n      stagingGroundService.removeFile(filePath);\n    }\n  };\n\n  // Get validation summary for display\n  const getValidationSummary = () => {\n    if (!validation) {\n      return { error: 0, warning: 0, info: 0, canSave: true };\n    }\n    return dakComplianceService.getValidationSummary(validation);\n  };\n\n  // Format file list for display\n  const formatFileList = () => {\n    if (!stagingGround || !stagingGround.files) return [];\n    \n    return stagingGround.files.map(file => ({\n      path: file.path,\n      size: new Blob([file.content]).size,\n      lastModified: file.timestamp\n    }));\n  };\n\n  const validationSummary = getValidationSummary();\n  const hasChanges = stagingGround && stagingGround.files.length > 0;\n  const filesCount = stagingGround ? stagingGround.files.length : 0;\n\n  return (\n    <div className=\"staging-ground-section\">\n      <div className=\"section-header\">\n        <h3 className=\"section-title\">\n          <span className=\"section-icon\">📝</span>\n          Staging Ground\n          {hasChanges && (\n            <span className=\"files-badge\">\n              {filesCount} file{filesCount !== 1 ? 's' : ''}\n            </span>\n          )}\n        </h3>\n        <p className=\"section-description\">\n          Changes made through DAK component editors are staged here before being committed to the repository.\n          Review and commit your changes when ready.\n        </p>\n      </div>\n\n      <div className=\"staging-content\">\n        {loading ? (\n          <div className=\"loading-indicator\">\n            <span className=\"loading-spinner\">⏳</span>\n            Loading staging ground...\n          </div>\n        ) : error ? (\n          <div className=\"error-message\">\n            <span className=\"error-icon\">⚠️</span>\n            {error}\n          </div>\n        ) : (\n          <>\n            {/* Staging Status Bar */}\n            <div className=\"staging-status-bar\">\n              <div className=\"status-indicators\">\n                {/* Validation stoplight */}\n                <div className=\"validation-stoplight\">\n                  <div className={`stoplight-indicator error ${validationSummary.error === 0 ? 'lit' : ''}`}>\n                    🔴\n                    {validationSummary.error > 0 && (\n                      <span className=\"indicator-badge\">{validationSummary.error}</span>\n                    )}\n                  </div>\n                  <div className={`stoplight-indicator warning ${validationSummary.warning === 0 ? 'lit' : ''}`}>\n                    🟡\n                    {validationSummary.warning > 0 && (\n                      <span className=\"indicator-badge\">{validationSummary.warning}</span>\n                    )}\n                  </div>\n                  <div className={`stoplight-indicator info ${validationSummary.info === 0 ? 'lit' : ''}`}>\n                    🟢\n                    {validationSummary.info > 0 && (\n                      <span className=\"indicator-badge\">{validationSummary.info}</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Save button */}\n              <button\n                className={`save-btn ${!hasChanges || !validationSummary.canSave ? 'disabled' : ''}`}\n                onClick={handleSave}\n                disabled={!hasChanges || !hasWriteAccess}\n                title={\n                  !hasChanges ? 'No changes to save' :\n                  !hasWriteAccess ? 'Write access required' :\n                  !validationSummary.canSave ? 'Fix validation errors first' :\n                  'Save changes to repository'\n                }\n              >\n                💾 Save Changes\n              </button>\n            </div>\n\n            {/* Changed Files Section */}\n            <div className=\"staging-files-section\">\n              <h4>📁 Changed Files</h4>\n              {hasChanges ? (\n                <div className=\"changed-files\">\n                  {formatFileList().map((file, index) => (\n                    <div key={index} className=\"file-item\">\n                      <div className=\"file-info\">\n                        <span className=\"file-icon\">📄</span>\n                        <span className=\"file-path\">{file.path}</span>\n                      </div>\n                      <div className=\"file-meta\">\n                        <span className=\"file-size\">\n                          {(file.size / 1024).toFixed(1)} KB\n                        </span>\n                        <span className=\"file-time\">\n                          {new Date(file.lastModified).toLocaleTimeString()}\n                        </span>\n                        <button\n                          className=\"remove-file-btn\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleRemoveFile(file.path);\n                          }}\n                          title={`Remove ${file.path} from staging`}\n                        >\n                          🗑️\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                  <div className=\"file-actions\">\n                    <button\n                      className=\"action-btn secondary small\"\n                      onClick={handleClearChanges}\n                    >\n                      🗑️ Clear All Changes\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"no-changes\">\n                  <p>No changes in staging ground</p>\n                  <p className=\"help-text\">\n                    Changes made through DAK component editors will appear here before being saved to the repository.\n                  </p>\n                </div>\n              )}\n            </div>\n\n            {/* Commit Message Preview */}\n            {hasChanges && stagingGround.message && (\n              <div className=\"commit-message-section\">\n                <h4>✍️ Commit Message</h4>\n                <div className=\"commit-preview\">\n                  <p>{stagingGround.message}</p>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n\n      {/* Save Dialog */}\n      <SaveDialog\n        isOpen={showSaveDialog}\n        onClose={() => setShowSaveDialog(false)}\n        stagingGround={stagingGround}\n        validation={validation}\n        repository={repository}\n        selectedBranch={selectedBranch}\n        hasWriteAccess={hasWriteAccess}\n        onSaveSuccess={handleSaveSuccess}\n      />\n    </div>\n  );\n};\n\nexport default StagingGround;","import React, { useState, useEffect } from 'react';\nimport githubService from '../services/githubService';\nimport StagingGround from './StagingGround';\n\nconst Publications = ({ profile, repository, selectedBranch, hasWriteAccess }) => {\n  const [branches, setBranches] = useState([]);\n  const [workflows, setWorkflows] = useState([]);\n  const [workflowRuns, setWorkflowRuns] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const owner = repository.owner?.login || repository.full_name.split('/')[0];\n  const repoName = repository.name;\n\n  useEffect(() => {\n    const fetchPublicationData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Handle demo mode - provide mock data\n        if (profile?.isDemo) {\n          const mockBranches = [\n            { name: 'main', commit: { sha: 'abc123' } },\n            { name: 'feature/updates', commit: { sha: 'def456' } },\n            { name: 'dev', commit: { sha: 'ghi789' } }\n          ];\n          setBranches(mockBranches);\n\n          const mockWorkflows = [\n            { id: 'pages-build', name: 'Deploy to GitHub Pages', triggers: ['push', 'manual'] }\n          ];\n          setWorkflows(mockWorkflows);\n\n          // Mock workflow runs\n          const mockWorkflowRuns = {\n            'main': { \n              status: 'completed', \n              conclusion: 'success', \n              html_url: `https://github.com/${owner}/${repoName}/actions/runs/123456`,\n              updated_at: new Date().toISOString()\n            },\n            'feature/updates': { \n              status: 'completed', \n              conclusion: 'action_required', \n              html_url: `https://github.com/${owner}/${repoName}/actions/runs/123457`,\n              updated_at: new Date().toISOString()\n            },\n            'dev': { \n              status: 'completed', \n              conclusion: 'failure', \n              html_url: `https://github.com/${owner}/${repoName}/actions/runs/123458`,\n              updated_at: new Date().toISOString()\n            }\n          };\n          setWorkflowRuns(mockWorkflowRuns);\n          setLoading(false);\n          return;\n        }\n\n        // Fetch branches (excluding gh-pages)\n        const branchesData = await githubService.getBranches(owner, repoName);\n        const filteredBranches = branchesData.filter(branch => branch.name !== 'gh-pages');\n        setBranches(filteredBranches);\n\n        // Fetch workflows to find ghbuild workflow\n        const workflowsData = await githubService.getWorkflows(owner, repoName);\n        setWorkflows(workflowsData);\n\n        // Find the ghbuild workflow (look for workflow with 'build' or 'publish' in name)\n        const ghbuildWorkflow = workflowsData.find(workflow => \n          workflow.name.toLowerCase().includes('build') || \n          workflow.name.toLowerCase().includes('publish') ||\n          workflow.name.toLowerCase().includes('pages')\n        );\n\n        // Fetch recent workflow runs for each branch if ghbuild workflow exists and has valid ID\n        if (ghbuildWorkflow && ghbuildWorkflow.id) {\n          const runsByBranch = {};\n          for (const branch of filteredBranches) {\n            try {\n              const runs = await githubService.getWorkflowRunsForWorkflow(\n                owner, \n                repoName, \n                ghbuildWorkflow.id,\n                { branch: branch.name, per_page: 1 }\n              );\n              if (runs.length > 0) {\n                runsByBranch[branch.name] = runs[0];\n              }\n            } catch (err) {\n              console.warn(`Could not fetch workflow runs for branch ${branch.name}:`, err);\n            }\n          }\n          setWorkflowRuns(runsByBranch);\n        } else if (ghbuildWorkflow && !ghbuildWorkflow.id) {\n          console.warn('Found workflow but missing ID:', ghbuildWorkflow);\n        }\n\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching publication data:', err);\n        setError('Failed to load publication data');\n        setLoading(false);\n      }\n    };\n\n    fetchPublicationData();\n  }, [owner, repoName, profile?.isDemo]);\n\n  const getPublicationUrl = (branchName) => {\n    if (branchName === repository.default_branch || branchName === 'main') {\n      return `https://${owner}.github.io/${repoName}/`;\n    } else {\n      return `https://${owner}.github.io/${repoName}/branches/${branchName}/`;\n    }\n  };\n\n  const getWorkflowStatusIcon = (branchName) => {\n    const run = workflowRuns[branchName];\n    if (!run) return { icon: '⚪', title: 'No recent workflow runs', link: null };\n\n    const status = run.status;\n    const conclusion = run.conclusion;\n\n    if (status === 'in_progress' || status === 'queued') {\n      return { \n        icon: '🔄', \n        title: 'Workflow running', \n        link: run.html_url,\n        className: 'running' \n      };\n    } else if (conclusion === 'success') {\n      return { \n        icon: '✅', \n        title: 'Last build successful', \n        link: run.html_url,\n        className: 'success' \n      };\n    } else if (conclusion === 'failure') {\n      return { \n        icon: '❌', \n        title: 'Last build failed', \n        link: run.html_url,\n        className: 'failure' \n      };\n    } else if (conclusion === 'action_required') {\n      return { \n        icon: '⏳', \n        title: 'Workflow requires approval', \n        link: run.html_url,\n        className: 'approval-required' \n      };\n    } else {\n      return { \n        icon: '⚠️', \n        title: `Build ${conclusion || status}`, \n        link: run.html_url,\n        className: 'warning' \n      };\n    }\n  };\n\n  const handleRestartWorkflow = async (branchName) => {\n    // Handle demo mode\n    if (profile?.isDemo) {\n      alert(`Demo Mode: Workflow restart simulated for branch: ${branchName}`);\n      return;\n    }\n\n    const ghbuildWorkflow = workflows.find(workflow => \n      workflow.name.toLowerCase().includes('build') || \n      workflow.name.toLowerCase().includes('publish') ||\n      workflow.name.toLowerCase().includes('pages')\n    );\n\n    if (!ghbuildWorkflow) {\n      alert('No suitable workflow found to restart');\n      return;\n    }\n\n    if (!ghbuildWorkflow.id) {\n      alert('Workflow found but missing ID - cannot restart');\n      console.warn('Workflow missing ID:', ghbuildWorkflow);\n      return;\n    }\n\n    try {\n      await githubService.triggerWorkflow(owner, repoName, ghbuildWorkflow.id, branchName);\n      alert(`Workflow restarted for branch: ${branchName}`);\n      \n      // Refresh workflow runs after a delay\n      setTimeout(() => {\n        window.location.reload();\n      }, 2000);\n    } catch (err) {\n      console.error('Error restarting workflow:', err);\n      alert('Failed to restart workflow. Please check your permissions.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"publications-loading\">\n        <div className=\"loading-content\">\n          <h3>Loading Publications...</h3>\n          <p>Fetching branch and workflow information...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"publications-error\">\n        <div className=\"error-content\">\n          <h3>Error Loading Publications</h3>\n          <p>{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"publications-section\">\n      {/* Staging Ground Section */}\n      <StagingGround\n        repository={repository}\n        selectedBranch={selectedBranch}\n        hasWriteAccess={hasWriteAccess}\n        profile={profile}\n      />\n      \n      <div className=\"section-header\">\n        <h3 className=\"section-title\">Published DAK Content</h3>\n        <p className=\"section-description\">\n          Access published Implementation Guide content for this DAK repository. Each branch is published \n          automatically via GitHub Actions to GitHub Pages.\n        </p>\n      </div>\n\n      <div className=\"publications-grid\">\n        {branches.map((branch) => {\n          const isMainBranch = branch.name === repository.default_branch || branch.name === 'main';\n          const publicationUrl = getPublicationUrl(branch.name);\n          const workflowStatus = getWorkflowStatusIcon(branch.name);\n\n          return (\n            <div key={branch.name} className={`publication-card ${isMainBranch ? 'main-branch' : ''}`}>\n              <div className=\"publication-header\">\n                <div className=\"branch-info\">\n                  <span className=\"branch-icon\">🌿</span>\n                  <span className=\"branch-name\">{branch.name}</span>\n                  {isMainBranch && <span className=\"main-badge\">MAIN</span>}\n                </div>\n                <div className=\"workflow-status\">\n                  {workflowStatus.link ? (\n                    <a \n                      href={workflowStatus.link} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className={`status-icon ${workflowStatus.className || ''}`}\n                      title={workflowStatus.title}\n                    >\n                      {workflowStatus.icon}\n                    </a>\n                  ) : (\n                    <span \n                      className={`status-icon ${workflowStatus.className || ''}`}\n                      title={workflowStatus.title}\n                    >\n                      {workflowStatus.icon}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"publication-content\">\n                <div className=\"publication-url\">\n                  <label>Published at:</label>\n                  <a \n                    href={publicationUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"publication-link\"\n                  >\n                    {publicationUrl}\n                    <span className=\"external-link\">↗</span>\n                  </a>\n                </div>\n\n                <div className=\"publication-actions\">\n                  <button\n                    className=\"restart-workflow-btn\"\n                    onClick={() => handleRestartWorkflow(branch.name)}\n                    disabled={!hasWriteAccess}\n                    title={hasWriteAccess ? 'Restart build workflow for this branch' : 'Write permissions required'}\n                  >\n                    🔄 Rebuild\n                  </button>\n                  \n                  <a \n                    href={`https://github.com/${owner}/${repoName}/tree/${branch.name}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"view-source-btn\"\n                    title=\"View source code for this branch\"\n                  >\n                    👁️ View Source\n                  </a>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {branches.length === 0 && (\n        <div className=\"no-branches\">\n          <p>No publishable branches found (excluding gh-pages).</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Publications;"],"names":["_ref","profile","repository","selectedBranch","navigate","useNavigate","isExpanded","setIsExpanded","useState","forks","setForks","loading","setLoading","error","setError","parentRepository","setParentRepository","getStorageKey","React","concat","full_name","useEffect","storageKey","savedState","sessionStorage","getItem","JSON","parse","async","fullRepository","parent","fork","undefined","githubService","getRepository","owner","login","name","repoErr","console","warn","getRepositoryForks","err","message","fetchRepositoryInfo","getForkDashboardUrl","repoName","branch","default_branch","handleParentClick","event","dashboardUrl","navigationState","avatar_url","type","handleNavigationClick","_jsx","className","children","_jsxs","onClick","toggleExpansion","newState","setItem","stringify","length","_Fragment","e","stopPropagation","src","alt","description","stargazers_count","open_issues_count","Date","updated_at","toLocaleDateString","map","handleForkClick","id","sushiConfigSchema","require","constructor","this","validators","Map","initializeSchemaValidator","initializeDefaultValidators","Ajv","lazyLoadAjv","addFormats","lazyLoadAjvFormats","ajv","allErrors","verbose","sushiConfigValidator","compile","addValidator","level","validator","validateXMLWellFormed","bind","validateBPMNNamespace","validateBPMNStartEvent","validateDMNNamespace","validateJSONSyntax","validateFHIRResourceType","validateFileSize","validateFilenameConventions","validateSushiConfig","fileType","validatorId","config","has","set","get","removeValidator","delete","validateFile","filePath","content","results","fileExtension","getFileExtension","fileName","getFileName","typeValidators","universalValidators","result","push","_objectSpread","validateStagingGround","stagingGround","summary","warning","info","files","validatedAt","now","file","fileResults","path","forEach","canSave","parser","DOMParser","parserError","parseFromString","querySelector","textContent","includes","suggestion","json","validResourceTypes","resourceType","sizeInBytes","Blob","size","toFixed","issues","test","join","endsWith","parsedConfig","lazyLoadYaml","load","yamlError","errors","errorMessages","_error$params","_error$params2","field","instancePath","replace","params","missingProperty","allowedValues","details","whoValidation","validateWHOSmartGuidelines","dependencies","canonical","startsWith","publisher","toLowerCase","jurisdiction","Array","isArray","parts","split","pop","formatValidationResults","validation","formatted","Object","entries","getValidationSummary","hasIssues","_stagingGround$files","_stagingGround$files2","isOpen","onClose","hasWriteAccess","onSaveSuccess","commitMessage","setCommitMessage","overrideValidation","setOverrideValidation","isSaving","setIsSaving","showValidationDetails","setShowValidationDetails","validationSummary","dakComplianceService","hasErrors","getErrorMessage","status","formatValidationIcon","disabled","index","window","confirm","stagingGroundService","removeFile","title","_ref2","checked","onChange","target","htmlFor","value","placeholder","rows","required","trim","_repository$owner","isDemo","Promise","resolve","setTimeout","sha","url","createCommit","html_url","setStagingGround","setValidation","showSaveDialog","setShowSaveDialog","loadStagingGroundData","useCallback","currentStagingGround","getStagingGround","initialize","addListener","updatedStagingGround","stagingGroundData","validationResult","hasChanges","filesCount","handleSave","alert","lastModified","timestamp","toLocaleTimeString","handleClearChanges","clearStagingGround","SaveDialog","substring","branches","setBranches","workflows","setWorkflows","workflowRuns","setWorkflowRuns","commit","triggers","mockWorkflowRuns","conclusion","toISOString","filteredBranches","getBranches","filter","workflowsData","getWorkflows","ghbuildWorkflow","find","workflow","runsByBranch","runs","getWorkflowRunsForWorkflow","per_page","fetchPublicationData","StagingGround","isMainBranch","publicationUrl","branchName","workflowStatus","run","icon","link","getWorkflowStatusIcon","href","rel","triggerWorkflow","location","reload","handleRestartWorkflow"],"sourceRoot":""}