{"version":3,"file":"static/js/8991.5b82b626.chunk.js","mappings":"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","sources":["components/DAKActionSelection.js"],"sourcesContent":["import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { PageLayout, usePageParams } from './framework';\nimport { handleNavigationClick } from '../utils/navigationUtils';\nimport useThemeImage from '../hooks/useThemeImage';\nimport { ALT_TEXT_KEYS, getAltText } from '../utils/imageAltTextHelper';\nimport './DAKActionSelection.css';\n\nconst DAKActionSelection = () => {\n  return (\n    <PageLayout pageName=\"dak-action-selection\">\n      <DAKActionSelectionContent />\n    </PageLayout>\n  );\n};\n\nconst DAKActionSelectionContent = () => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { profile } = usePageParams();\n  \n  // Theme-aware action images\n  const editingImage = useThemeImage('editing.png');\n  const forkingImage = useThemeImage('forking.png');\n  const createImage = useThemeImage('create.png');\n  \n  // Use profile from framework (PageProvider) or location state\n  const effectiveProfile = profile || location.state?.profile;\n\n  // Note: Profile validation is handled by PageLayout framework\n  // When accessing directly via URL, the framework will load the profile based on URL params\n\n  const dakActions = [\n    {\n      id: 'edit',\n      title: 'Edit Existing DAK',\n      description: 'Select and modify an existing DAK that you have permission to edit. Changes will be made directly to the repository.',\n      icon: editingImage,\n      color: '#0078d4'\n    },\n    {\n      id: 'fork', \n      title: 'Fork Existing DAK',\n      description: 'Create a copy of an existing DAK in your own organization or account. You will be able to modify the forked version independently.',\n      icon: forkingImage,\n      color: '#107c10'\n    },\n    {\n      id: 'create',\n      title: 'Create New DAK',\n      description: 'Create a new DAK from the WHO SMART Guidelines template (smart-ig-empty). You\\'ll configure basic parameters and start with a clean template.',\n      icon: createImage,\n      color: '#881798'\n    }\n  ];\n\n  const handleActionSelect = (event, actionId) => {\n    // Navigate directly to the DAK selection with the chosen action and user parameter\n    const navigationState = { \n      profile: effectiveProfile, \n      action: actionId \n    };\n    \n    handleNavigationClick(event, `/dak-selection/${effectiveProfile.login}`, navigate, navigationState);\n  };\n\n  if (!effectiveProfile) {\n    return <div>Redirecting...</div>;\n  }\n\n  return (\n    <div className=\"action-content\">\n      <div className=\"action-main\">\n        <div className=\"action-header\">\n          <div className=\"action-title\">\n            <h1>Manage a DAK</h1>\n            <p className=\"action-subtitle\">Choose how you would like to work with a WHO SMART Guidelines Digital Adaptation Kit (DAK). Each option provides different workflows for DAK management and editing.</p>\n          </div>\n        </div>\n        <div className=\"action-intro\">\n        </div>\n\n        <div className=\"actions-grid\">\n          {dakActions.map((action) => (\n            <div \n              key={action.id}\n              className={`action-card-container`}\n              onClick={(event) => handleActionSelect(event, action.id)}\n              style={{ '--action-color': action.color }}\n            >\n              <div className=\"action-card-main\">\n                <div className=\"action-card\">\n                  <div className=\"action-icon\" style={{ color: action.color }}>\n                    <img src={action.icon} alt={getAltText(t, ALT_TEXT_KEYS.ICON_ACTION, action.title, { title: action.title })} />\n                  </div>\n                </div>\n                \n                <div className=\"action-description\">\n                  <h3>{action.title}</h3>\n                  <p>{action.description}</p>\n                </div>\n              </div>\n\n              <div className=\"action-workflow\">\n                {action.id === 'edit' && (\n                  <div className=\"workflow-steps\">\n                    <span className=\"step\">1. Select DAK</span>\n                    <span className=\"step\">2. Edit Components</span>\n                  </div>\n                )}\n                {action.id === 'fork' && (\n                  <div className=\"workflow-steps\">\n                    <span className=\"step\">1. Select Source DAK</span>\n                    <span className=\"step\">2. Select Destination</span>\n                    <span className=\"step\">3. Edit Components</span>\n                  </div>\n                )}\n                {action.id === 'create' && (\n                  <div className=\"workflow-steps\">\n                    <span className=\"step\">1. Select Template</span>\n                    <span className=\"step\">2. Select Destination</span>\n                    <span className=\"step\">3. Configure DAK</span>\n                    <span className=\"step\">4. Edit Components</span>\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DAKActionSelection;"],"names":["DAKActionSelectionContent","_location$state","t","useTranslation","location","useLocation","navigate","useNavigate","profile","usePageParams","editingImage","useThemeImage","forkingImage","createImage","effectiveProfile","state","dakActions","id","title","description","icon","color","_jsx","className","children","_jsxs","map","action","onClick","event","handleActionSelect","actionId","navigationState","handleNavigationClick","concat","login","style","src","alt","getAltText","ALT_TEXT_KEYS","ICON_ACTION","DAKActionSelection","PageLayout","pageName"],"sourceRoot":""}