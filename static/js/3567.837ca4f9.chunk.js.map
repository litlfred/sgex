{"version":3,"file":"static/js/3567.837ca4f9.chunk.js","mappings":"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","sources":["hooks/useDAKUrlParams.js","components/BPMNPreview.js","components/BusinessProcessSelection.js","services/lazyFactoryService.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport dakValidationService from '../services/dakValidationService';\n\n/**\n * Custom hook to handle DAK URL parameters (user, repo, branch) for DAK component pages.\n * This extracts and validates DAK parameters from the URL, similar to how DAKDashboard works.\n * \n * @returns {Object} Contains loading state, error, profile, repository, selectedBranch, and navigate function\n */\nconst useDAKUrlParams = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { user, repo, branch } = useParams();\n  \n  // Try to get data from location.state first, then from URL params\n  const [profile, setProfile] = useState(location.state?.profile || null);\n  const [repository, setRepository] = useState(location.state?.repository || null);\n  const [selectedBranch, setSelectedBranch] = useState(location.state?.selectedBranch || branch || null);\n  const [loading, setLoading] = useState(!profile || !repository);\n  const [error, setError] = useState(null);\n\n  // Fetch data from URL parameters if not available in location.state\n  useEffect(() => {\n    const fetchDataFromUrlParams = async () => {\n      console.log('🔍 useDAKUrlParams: Starting data fetch analysis:', {\n        urlParams: { user, repo, branch },\n        currentState: {\n          hasProfile: !!profile,\n          hasRepository: !!repository,\n          profileLogin: profile?.login,\n          repositoryFullName: repository?.full_name,\n          repositoryOwner: repository?.owner?.login\n        },\n        hasLocationState: !!location.state,\n        locationStateSummary: location.state ? {\n          hasProfile: !!location.state.profile,\n          hasRepository: !!location.state.repository,\n          profileLogin: location.state.profile?.login,\n          repositoryFullName: location.state.repository?.full_name,\n          repositoryOwner: location.state.repository?.owner?.login\n        } : null,\n        isAuthenticated: githubService.isAuth(),\n        needsFetch: (!profile || !repository) && user && repo\n      });\n\n      if ((!profile || !repository) && user && repo) {\n        console.log('useDAKUrlParams: Fetching data from URL parameters:', {\n          user, \n          repo, \n          branch,\n          hasProfile: !!profile,\n          hasRepository: !!repository,\n          hasLocationState: !!location.state,\n          isAuthenticated: githubService.isAuth()\n        });\n        \n        try {\n          setLoading(true);\n          setError(null);\n\n          // Check if githubService is authenticated\n          if (!githubService.isAuth()) {\n            console.log('🚫 useDAKUrlParams: Not authenticated, using public access');\n            \n            // This is unauthenticated access to public repositories\n            // Create profile without isDemo flag for public repository access\n            console.log('👀 useDAKUrlParams: Unauthenticated public access, creating public profile');\n            \n            const publicProfile = {\n              login: user,\n              name: user.charAt(0).toUpperCase() + user.slice(1),\n              avatar_url: `https://github.com/${user}.png`,\n              type: 'User'\n            };\n\n            const publicRepository = {\n              name: repo,\n              full_name: `${user}/${repo}`,\n              owner: { login: user },\n              default_branch: branch || 'main',\n              html_url: `https://github.com/${user}/${repo}`\n            };\n\n            console.log('📋 useDAKUrlParams: Setting public access state:', {\n              profile: publicProfile,\n              repository: publicRepository,\n              selectedBranch: branch || 'main'\n            });\n\n            setProfile(publicProfile);\n            setRepository(publicRepository);\n            setSelectedBranch(branch || 'main');\n            setLoading(false);\n            return;\n          }\n\n          console.log('🔐 useDAKUrlParams: Authenticated, fetching real repository data');\n\n          // Fetch user profile\n          let userProfile = null;\n          try {\n            console.log(`🔍 useDAKUrlParams: Fetching user profile for: ${user}`);\n            const userResponse = await githubService.getUser(user);\n            userProfile = userResponse;\n            console.log('✅ useDAKUrlParams: User profile fetched:', {\n              login: userProfile.login,\n              name: userProfile.name,\n              type: userProfile.type\n            });\n          } catch (err) {\n            console.error('❌ useDAKUrlParams: Error fetching user:', err);\n            navigate('/', { \n              state: { \n                warningMessage: `Could not access the requested DAK. User '${user}' not found or not accessible.` \n              } \n            });\n            return;\n          }\n\n          // Fetch repository\n          let repoData = null;\n          try {\n            console.log(`useDAKUrlParams: Fetching repository data for ${user}/${repo}`);\n            const repoResponse = await githubService.getRepository(user, repo);\n            repoData = repoResponse;\n            console.log('useDAKUrlParams: Repository data fetched successfully:', {\n              name: repoData.name,\n              full_name: repoData.full_name,\n              owner: repoData.owner,\n              default_branch: repoData.default_branch\n            });\n          } catch (err) {\n            console.error('useDAKUrlParams: Error fetching repository:', err);\n            navigate('/', { \n              state: { \n                warningMessage: `Could not access the requested DAK. Repository '${user}/${repo}' not found or not accessible.` \n              } \n            });\n            return;\n          }\n\n          // Validate that this is actually a DAK repository\n          const isValidDAK = await dakValidationService.validateDAKRepository(user, repo, branch || repoData.default_branch);\n          \n          if (!isValidDAK) {\n            console.log(`Repository ${user}/${repo} is not a valid DAK repository`);\n            navigate('/', { \n              state: { \n                warningMessage: `Could not access the requested DAK. Repository '${user}/${repo}' not found or not accessible.` \n              } \n            });\n            return;\n          }\n\n          // Validate branch if specified\n          if (branch) {\n            try {\n              await githubService.getBranch(user, repo, branch);\n              setSelectedBranch(branch);\n            } catch (err) {\n              console.warn(`Branch '${branch}' not found, falling back to default branch`);\n              setSelectedBranch(repoData.default_branch);\n            }\n          } else {\n            setSelectedBranch(repoData.default_branch);\n          }\n\n          console.log('useDAKUrlParams: Setting final state:', {\n            profile: {\n              login: userProfile.login,\n              name: userProfile.name,\n              type: userProfile.type\n            },\n            repository: {\n              name: repoData.name,\n              full_name: repoData.full_name,\n              owner: repoData.owner,\n              default_branch: repoData.default_branch\n            },\n            selectedBranch: branch || repoData.default_branch\n          });\n\n          setProfile(userProfile);\n          setRepository(repoData);\n          setLoading(false);\n        } catch (err) {\n          console.error('Error fetching data from URL params:', err);\n          setError('Failed to load DAK data. Please check the URL or try again.');\n          setLoading(false);\n        }\n      } else {\n        console.log('📋 useDAKUrlParams: Not fetching from URL params, using existing state:', {\n          hasProfile: !!profile,\n          hasRepository: !!repository,\n          hasUserParam: !!user,\n          hasRepoParam: !!repo,\n          reason: !profile || !repository ? 'missing URL params' : 'state already populated'\n        });\n        setLoading(false);\n      }\n    };\n\n    fetchDataFromUrlParams();\n  }, [user, repo, branch, profile, repository, navigate, location.state]);\n\n  return {\n    profile,\n    repository,\n    selectedBranch,\n    loading,\n    error,\n    user,\n    repo,\n    branch: branch || selectedBranch,\n    navigate\n  };\n};\n\nexport default useDAKUrlParams;","import React, { useState, useEffect, useRef } from 'react';\nimport githubService from '../services/githubService';\nimport { createLazyBpmnViewer } from '../services/lazyFactoryService';\n\nconst BPMNPreview = ({ file, repository, selectedBranch, profile }) => {\n  const containerRef = useRef(null);\n  const viewerRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadPreview = async () => {\n      if (!file || !repository) {\n        console.log('🚫 BPMNPreview: Missing required props:', {\n          hasFile: !!file,\n          hasRepository: !!repository,\n          fileName: file?.name\n        });\n        return;\n      }\n\n      // Wait for container to be available in DOM\n      const waitForContainer = (attempt = 0) => {\n        const maxAttempts = 20; // Try for up to 2 seconds\n        \n        if (containerRef.current) {\n          console.log(`✅ BPMNPreview: Container found on attempt ${attempt + 1}`);\n          startPreviewLoad();\n        } else if (attempt < maxAttempts) {\n          console.log(`⏳ BPMNPreview: Container not ready, attempt ${attempt + 1}/${maxAttempts}`);\n          setTimeout(() => waitForContainer(attempt + 1), 100);\n        } else {\n          console.error('❌ BPMNPreview: Container never became available');\n          setError('Failed to initialize preview container');\n          setLoading(false);\n        }\n      };\n\n      const startPreviewLoad = async () => {\n        try {\n          setLoading(true);\n          setError(null);\n\n          // Clean container\n          if (containerRef.current) {\n            containerRef.current.innerHTML = '';\n          }\n\n          const owner = repository.owner?.login || repository.full_name.split('/')[0];\n          const repoName = repository.name;\n          const ref = selectedBranch || 'main';\n          const isDemo = file.path?.includes('demo/') || file.sha?.startsWith('demo-');\n\n          console.log('🎬 BPMNPreview: Starting preview load for file:', {\n            fileName: file.name,\n            filePath: file.path,\n            owner: owner,\n            repoName: repoName,\n            ref: ref,\n            isDemo: isDemo,\n            hasDownloadUrl: !!file.download_url\n          });\n\n          let bpmnXml;\n\n          if (isDemo) {\n            // For demo files, create a representative BPMN diagram\n            const processName = file.name.replace('.bpmn', '').replace(/[-_]/g, ' ');\n            bpmnXml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" \n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" \n                  id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\" isExecutable=\"false\">\n    <bpmn:startEvent id=\"StartEvent_1\" name=\"Start\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${processName}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\" name=\"End\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\">\n      <bpmndi:BPMNShape id=\"StartEvent_1_di\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"152\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"158\" y=\"125\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Task_1_di\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"250\" y=\"60\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"EndEvent_1_di\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"402\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"410\" y=\"125\" width=\"20\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"188\" y=\"100\" />\n        <di:waypoint x=\"250\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"350\" y=\"100\" />\n        <di:waypoint x=\"402\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;\n          } else {\n            // For real files, try to load the actual BPMN content\n            console.log('📥 BPMNPreview: Attempting to load real BPMN file content...');\n            try {\n              console.log('🌐 BPMNPreview: Calling githubService.getFileContent with params:', {\n                owner, repoName, path: file.path, ref\n              });\n              bpmnXml = await githubService.getFileContent(owner, repoName, file.path, ref);\n              console.log('✅ BPMNPreview: Successfully loaded BPMN content, length:', bpmnXml?.length);\n              console.log('🔍 BPMNPreview: Content preview (first 100 chars):', bpmnXml?.substring(0, 100));\n              \n              // Validate that we got actual BPMN content\n              if (!bpmnXml || typeof bpmnXml !== 'string') {\n                throw new Error('Invalid content received: not a string');\n              }\n              \n              if (!bpmnXml.includes('bpmn:definitions') && !bpmnXml.includes('<definitions')) {\n                console.warn('⚠️ BPMNPreview: Content does not appear to be valid BPMN XML');\n                console.log('🔍 BPMNPreview: Full content received:', bpmnXml);\n                throw new Error('Content does not appear to be valid BPMN');\n              }\n              \n              console.log('✅ BPMNPreview: BPMN content validation passed');\n            } catch (fileError) {\n              console.warn('❌ BPMNPreview: Could not load BPMN file content:', fileError.message, fileError.status);\n              console.error('🔍 BPMNPreview: File loading error details:', {\n                error: fileError,\n                stack: fileError.stack,\n                fileName: file.name,\n                filePath: file.path,\n                owner,\n                repoName,\n                ref\n              });\n              // Fallback to a generic BPMN diagram if file can't be loaded\n              const processName = file.name.replace('.bpmn', '').replace(/[-_]/g, ' ');\n              console.log('🔄 BPMNPreview: Using fallback BPMN diagram for:', processName);\n              bpmnXml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n                  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n                  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" \n                  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" \n                  id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn:process id=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\" isExecutable=\"false\">\n    <bpmn:startEvent id=\"StartEvent_1\" name=\"Start\">\n      <bpmn:outgoing>Flow_1</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_1\" name=\"${processName}\">\n      <bpmn:incoming>Flow_1</bpmn:incoming>\n      <bpmn:outgoing>Flow_2</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"EndEvent_1\" name=\"End\">\n      <bpmn:incoming>Flow_2</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"Flow_1\" sourceRef=\"StartEvent_1\" targetRef=\"Task_1\" />\n    <bpmn:sequenceFlow id=\"Flow_2\" sourceRef=\"Task_1\" targetRef=\"EndEvent_1\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_${file.name.replace(/[^a-zA-Z0-9]/g, '_')}\">\n      <bpmndi:BPMNShape id=\"StartEvent_1_di\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"152\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"158\" y=\"125\" width=\"24\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Task_1_di\" bpmnElement=\"Task_1\">\n        <dc:Bounds x=\"250\" y=\"60\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"EndEvent_1_di\" bpmnElement=\"EndEvent_1\">\n        <dc:Bounds x=\"402\" y=\"82\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"410\" y=\"125\" width=\"20\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_1_di\" bpmnElement=\"Flow_1\">\n        <di:waypoint x=\"188\" y=\"100\" />\n        <di:waypoint x=\"250\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_2_di\" bpmnElement=\"Flow_2\">\n        <di:waypoint x=\"350\" y=\"100\" />\n        <di:waypoint x=\"402\" y=\"100\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`;\n            }\n          }\n\n          console.log('🔧 BPMNPreview: Creating BPMN viewer...');\n          console.log('🔍 BPMNPreview: About to create viewer with BPMN content length:', bpmnXml?.length);\n          \n          // Create and initialize viewer with clean separation - lazy load BPMN.js\n          const viewer = await createLazyBpmnViewer();\n          viewerRef.current = viewer;\n          \n          console.log('✅ BPMNPreview: BPMN viewer instance created successfully');\n\n          try {\n            console.log('🔗 BPMNPreview: Attaching viewer to container...');\n            console.log('🔍 BPMNPreview: Container element details:', {\n              exists: !!containerRef.current,\n              className: containerRef.current?.className,\n              width: containerRef.current?.offsetWidth,\n              height: containerRef.current?.offsetHeight,\n              parentExists: !!containerRef.current?.parentElement\n            });\n            \n            // Create timeout promise for viewer operations\n            const createTimeoutPromise = (operation, timeoutMs = 10000) => {\n              return new Promise((_, reject) => {\n                setTimeout(() => {\n                  reject(new Error(`${operation} timeout after ${timeoutMs}ms`));\n                }, timeoutMs);\n              });\n            };\n            \n            // Attach viewer to container first with timeout\n            const attachPromise = viewer.attachTo(containerRef.current);\n            await Promise.race([attachPromise, createTimeoutPromise('Viewer attach', 5000)]);\n            console.log('✅ BPMNPreview: Successfully attached viewer to container');\n            \n            console.log('📊 BPMNPreview: Importing BPMN XML...');\n            console.log('🔍 BPMNPreview: XML content preview (first 200 chars):', bpmnXml?.substring(0, 200));\n            \n            // Import XML with timeout handling\n            const importStartTime = Date.now();\n            const importPromise = viewer.importXML(bpmnXml);\n            const importResult = await Promise.race([importPromise, createTimeoutPromise('XML import', 15000)]);\n            const importTime = Date.now() - importStartTime;\n            \n            console.log(`✅ BPMNPreview: Successfully imported BPMN XML in ${importTime}ms`);\n            console.log('📊 BPMNPreview: Import result details:', {\n              warnings: importResult?.warnings?.length || 0,\n              hasWarnings: !!(importResult?.warnings?.length),\n              warningDetails: importResult?.warnings\n            });\n            \n            if (importResult?.warnings?.length > 0) {\n              console.warn('⚠️ BPMNPreview: Import warnings:', importResult.warnings);\n            }\n            \n            console.log('🎯 BPMNPreview: Fitting to viewport...');\n            // Fit to viewport for preview\n            const canvas = viewer.get('canvas');\n            console.log('🔍 BPMNPreview: Canvas service retrieved:', !!canvas);\n            \n            // Log SVG state before zoom\n            const svgBefore = containerRef.current?.querySelector('svg');\n            console.log('📐 BPMNPreview: SVG state BEFORE zoom:', {\n              exists: !!svgBefore,\n              width: svgBefore?.getAttribute('width'),\n              height: svgBefore?.getAttribute('height'),\n              viewBox: svgBefore?.getAttribute('viewBox'),\n              style: {\n                display: svgBefore?.style.display,\n                visibility: svgBefore?.style.visibility,\n                opacity: svgBefore?.style.opacity,\n                width: svgBefore?.style.width,\n                height: svgBefore?.style.height\n              },\n              computedStyle: svgBefore ? {\n                display: window.getComputedStyle(svgBefore).display,\n                visibility: window.getComputedStyle(svgBefore).visibility,\n                opacity: window.getComputedStyle(svgBefore).opacity\n              } : null,\n              childCount: svgBefore?.children?.length || 0\n            });\n            \n            // Always use fit-viewport for previews - it's reliable and works well for small containers\n            // Wait a tick to ensure container dimensions are available, then zoom\n            setTimeout(() => {\n              try {\n                canvas.zoom('fit-viewport');\n                console.log('✅ BPMNPreview: Zoom to fit-viewport completed');\n              } catch (zoomError) {\n                console.error('❌ BPMNPreview: Zoom failed:', zoomError);\n              }\n            }, 0);\n            \n            // Log viewport and SVG state after zoom\n            const viewboxAfterZoom = canvas.viewbox();\n            const svgAfter = containerRef.current?.querySelector('svg');\n            console.log('📐 BPMNPreview: Viewport state AFTER zoom:', {\n              viewbox: viewboxAfterZoom,\n              outer: viewboxAfterZoom?.outer,\n              inner: viewboxAfterZoom?.inner,\n              scale: viewboxAfterZoom?.scale,\n              containerDimensions: {\n                width: containerRef.current?.offsetWidth,\n                height: containerRef.current?.offsetHeight,\n                clientWidth: containerRef.current?.clientWidth,\n                clientHeight: containerRef.current?.clientHeight\n              },\n              svgAttributes: {\n                width: svgAfter?.getAttribute('width'),\n                height: svgAfter?.getAttribute('height'),\n                viewBox: svgAfter?.getAttribute('viewBox'),\n                transform: svgAfter?.getAttribute('transform')\n              },\n              svgStyles: {\n                display: svgAfter?.style.display,\n                visibility: svgAfter?.style.visibility,\n                opacity: svgAfter?.style.opacity,\n                backgroundColor: svgAfter?.style.backgroundColor\n              },\n              svgComputedStyles: svgAfter ? {\n                display: window.getComputedStyle(svgAfter).display,\n                visibility: window.getComputedStyle(svgAfter).visibility,\n                opacity: window.getComputedStyle(svgAfter).opacity,\n                backgroundColor: window.getComputedStyle(svgAfter).backgroundColor\n              } : null\n            });\n            \n            console.log(`✅ BPMNPreview: Successfully fitted to viewport`);\n\n\n            // Force canvas update to ensure diagram is immediately visible\n            // This prevents the issue where diagram requires a drag/mouse interaction to appear\n            // Use multiple strategies to ensure rendering\n            const forceCanvasUpdate = () => {\n              if (viewer && containerRef.current) {\n                try {\n                  const canvas = viewer.get('canvas');\n                  // Trigger a canvas update by getting the viewbox\n                  const currentViewbox = canvas.viewbox();\n                  // Force a repaint by slightly adjusting zoom and resetting\n                  const currentZoom = canvas.zoom();\n                  canvas.zoom(currentZoom);\n                  \n                  // Also force SVG visibility\n                  const svgElement = containerRef.current.querySelector('svg');\n                  if (svgElement) {\n                    svgElement.style.opacity = '1';\n                    svgElement.style.visibility = 'visible';\n                    svgElement.style.display = 'block';\n                  }\n                  \n                  // Trigger a scroll event which can force repaints\n                  if (containerRef.current) {\n                    containerRef.current.scrollTop = containerRef.current.scrollTop;\n                  }\n                  \n                  console.log('🎨 BPMNPreview: Forced SVG visibility and canvas update', {\n                    viewbox: currentViewbox,\n                    zoom: currentZoom,\n                    svgVisible: svgElement?.style.visibility,\n                    svgOpacity: svgElement?.style.opacity,\n                    svgDisplay: svgElement?.style.display\n                  });\n                } catch (canvasError) {\n                  console.warn('⚠️ BPMNPreview: Could not force canvas update:', canvasError);\n                }\n              }\n            };\n            \n            // Apply multiple times with increasing delays to ensure it works\n            // Start after zoom has had time to complete\n            setTimeout(forceCanvasUpdate, 100);\n            setTimeout(forceCanvasUpdate, 200);\n            setTimeout(forceCanvasUpdate, 400);\n\n            // Final validation - check if diagram was actually rendered\n            setTimeout(() => {\n              const viewbox = canvas.viewbox();\n              const svgFinal = containerRef.current?.querySelector('svg');\n              const gElements = svgFinal?.querySelectorAll('g') || [];\n              const shapeElements = svgFinal?.querySelectorAll('[data-element-id]') || [];\n              \n              console.log('🔍 BPMNPreview: Final rendering state:', {\n                viewbox: {\n                  outer: viewbox?.outer,\n                  inner: viewbox?.inner,\n                  scale: viewbox?.scale\n                },\n                svg: {\n                  exists: !!svgFinal,\n                  width: svgFinal?.getAttribute('width'),\n                  height: svgFinal?.getAttribute('height'),\n                  viewBox: svgFinal?.getAttribute('viewBox'),\n                  childCount: svgFinal?.children?.length || 0,\n                  gElementCount: gElements.length,\n                  shapeElementCount: shapeElements.length,\n                  style: {\n                    display: svgFinal?.style.display,\n                    visibility: svgFinal?.style.visibility,\n                    opacity: svgFinal?.style.opacity\n                  },\n                  computedStyle: svgFinal ? {\n                    display: window.getComputedStyle(svgFinal).display,\n                    visibility: window.getComputedStyle(svgFinal).visibility,\n                    opacity: window.getComputedStyle(svgFinal).opacity,\n                    backgroundColor: window.getComputedStyle(svgFinal).backgroundColor,\n                    fill: window.getComputedStyle(svgFinal).fill\n                  } : null\n                },\n                container: {\n                  hasChildren: containerRef.current?.children?.length || 0,\n                  dimensions: {\n                    offsetWidth: containerRef.current?.offsetWidth,\n                    offsetHeight: containerRef.current?.offsetHeight,\n                    scrollWidth: containerRef.current?.scrollWidth,\n                    scrollHeight: containerRef.current?.scrollHeight\n                  },\n                  style: {\n                    display: containerRef.current?.style.display,\n                    visibility: containerRef.current?.style.visibility,\n                    backgroundColor: containerRef.current?.style.backgroundColor\n                  },\n                  computedStyle: containerRef.current ? {\n                    display: window.getComputedStyle(containerRef.current).display,\n                    visibility: window.getComputedStyle(containerRef.current).visibility,\n                    backgroundColor: window.getComputedStyle(containerRef.current).backgroundColor\n                  } : null\n                },\n                hasElements: viewbox?.inner?.width > 0 && viewbox?.inner?.height > 0,\n                containerHasContent: containerRef.current?.children?.length > 0\n              });\n              \n              // Check if container actually has content\n              if (containerRef.current?.children?.length === 0) {\n                console.error('❌ BPMNPreview: Container is EMPTY after rendering - CRITICAL ISSUE');\n              } else if (!svgFinal) {\n                console.error('❌ BPMNPreview: No SVG element found after rendering - CRITICAL ISSUE');\n              } else if (shapeElements.length === 0) {\n                console.warn('⚠️ BPMNPreview: SVG exists but has no BPMN shape elements - possible rendering issue');\n              } else {\n                console.log(`✅ BPMNPreview: Diagram appears to be properly rendered with ${shapeElements.length} shapes`);\n              }\n            }, 500);\n\n            console.log(`🎉 BPMNPreview: Successfully rendered preview for: ${file.name}`);\n            setLoading(false);\n          } catch (importError) {\n            console.error('❌ BPMNPreview: Failed to import BPMN XML:', importError);\n            console.error('🔍 BPMNPreview: Import error details:', {\n              message: importError.message,\n              stack: importError.stack,\n              fileName: file.name,\n              xmlLength: bpmnXml?.length,\n              xmlPreview: bpmnXml?.substring(0, 300),\n              containerState: {\n                exists: !!containerRef.current,\n                hasChildren: containerRef.current?.children?.length || 0,\n                clientHeight: containerRef.current?.clientHeight,\n                clientWidth: containerRef.current?.clientWidth\n              }\n            });\n            setError(`Failed to load preview: ${importError.message}`);\n            setLoading(false);\n          }\n\n        } catch (renderError) {\n          console.error('❌ BPMNPreview: Failed to render BPMN preview:', renderError.message || renderError);\n          console.log('🔍 BPMNPreview: Error details:', {\n            fileName: file.name,\n            filePath: file.path,\n            errorMessage: renderError.message,\n            errorStack: renderError.stack\n          });\n          setError('Failed to load preview');\n          setLoading(false);\n        }\n      };\n\n      // Start the container waiting process\n      waitForContainer();\n    };\n\n    // Cleanup function\n    const cleanup = () => {\n      if (viewerRef.current) {\n        try {\n          viewerRef.current.destroy();\n        } catch (cleanupError) {\n          console.warn('Error cleaning up BPMN viewer:', cleanupError);\n        }\n        viewerRef.current = null;\n      }\n    };\n\n    // Only run if we have all required props\n    if (file && repository) {\n      console.log('🚀 BPMNPreview: Starting loadPreview for:', file.name);\n      loadPreview();\n    } else {\n      console.log('⏭️ BPMNPreview: Skipping loadPreview, missing props:', {\n        hasFile: !!file,\n        hasRepository: !!repository,\n        fileName: file?.name\n      });\n      setLoading(false);\n    }\n\n    return cleanup;\n  }, [file, repository, selectedBranch, profile]);\n\n  return (\n    <div className=\"bpmn-preview\">\n      {loading && (\n        <div className=\"preview-loading\">\n          <div className=\"preview-spinner\"></div>\n          <span>Loading preview...</span>\n        </div>\n      )}\n      {error && (\n        <div className=\"preview-error\">\n          <span>❌ {error}</span>\n        </div>\n      )}\n      <div \n        className=\"preview-container\" \n        ref={containerRef}\n        style={{ display: loading || error ? 'none' : 'block' }}\n      >\n        {/* BPMN viewer will be rendered here */}\n      </div>\n    </div>\n  );\n};\n\nexport default BPMNPreview;","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport githubService from '../services/githubService';\nimport useDAKUrlParams from '../hooks/useDAKUrlParams';\nimport { PageLayout } from './framework';\nimport { handleNavigationClick } from '../utils/navigationUtils';\nimport BPMNPreview from './BPMNPreview';\n\nconst BusinessProcessSelection = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  // Use the DAK URL params hook to get profile, repository, and branch\n  const { \n    profile, \n    repository, \n    selectedBranch, \n    loading: dakLoading, \n    error: dakError \n  } = useDAKUrlParams();\n\n  // Debug logging for repository data flow\n  console.log('🚀 BusinessProcessSelection: Hook data received:', {\n    hasProfile: !!profile,\n    hasRepository: !!repository,\n    profileLogin: profile?.login,\n    repositoryName: repository?.name,\n    repositoryFullName: repository?.full_name,\n    repositoryOwner: repository?.owner?.login,\n    selectedBranch,\n    dakLoading,\n    dakError\n  });\n  \n  // Get component from location.state if available (when navigating from dashboard)\n  const { component } = location.state || {};\n  \n  const [bpmnFiles, setBpmnFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hasWriteAccess, setHasWriteAccess] = useState(false);\n\n  // Check write permissions\n  useEffect(() => {\n    const checkPermissions = async () => {\n      if (repository && profile) {\n        try {\n          // Simple permission check - in real app, this would use githubService\n          const writeAccess = profile.token && repository.permissions?.push;\n          setHasWriteAccess(writeAccess || false);\n        } catch (error) {\n          console.warn('Could not check write permissions:', error);\n          setHasWriteAccess(false);\n        }\n      }\n    };\n\n    checkPermissions();\n  }, [repository, profile]);\n\n  // Load BPMN files from repository\n  useEffect(() => {\n    const loadBpmnFiles = async () => {\n      if (!repository) {\n        navigate('/');\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Debug logging to understand repository data flow\n        console.log('📂 BusinessProcessSelection - Repository object analysis:', {\n          name: repository.name,\n          full_name: repository.full_name,\n          owner: repository.owner,\n          ownerLogin: repository.owner?.login,\n          isDemo: repository.isDemo,\n          html_url: repository.html_url,\n          default_branch: repository.default_branch\n        });\n        console.log('👤 BusinessProcessSelection - Profile object analysis:', {\n          login: profile?.login,\n          name: profile?.name,\n          isDemo: profile?.isDemo,\n          type: profile?.type\n        });\n\n        const owner = repository.owner?.login || repository.full_name.split('/')[0];\n        const repoName = repository.name;\n        const ref = selectedBranch || 'main';\n\n        console.log(`📋 BusinessProcessSelection: Derived repository info:`, {\n          original_owner_login: repository.owner?.login,\n          original_full_name: repository.full_name,\n          derived_owner: owner,\n          derived_repoName: repoName,\n          selected_ref: ref,\n          derivation_method: repository.owner?.login ? 'owner.login' : 'full_name.split'\n        });\n\n        console.log(`🔍 BusinessProcessSelection: About to fetch BPMN files from ${owner}/${repoName} (branch: ${ref})`);\n        console.log('BusinessProcessSelection: Final repository access details:', {\n          derivedOwner: owner,\n          repositoryName: repoName,\n          ref: ref,\n          fullRepositoryData: {\n            name: repository.name,\n            full_name: repository.full_name,\n            owner: repository.owner,\n            default_branch: repository.default_branch\n          }\n        });\n        \n        const bpmnFiles = await githubService.getBpmnFiles(owner, repoName, ref);\n        \n        console.log('📊 BusinessProcessSelection: Received BPMN files:', {\n          count: bpmnFiles.length,\n          files: bpmnFiles.map(f => ({\n            name: f.name,\n            path: f.path,\n            size: f.size,\n            hasDownloadUrl: !!f.download_url,\n            sha: f.sha?.substring(0, 8)\n          }))\n        });\n        \n        // If no files found and we're in demo mode, provide fallback files\n        if (bpmnFiles.length === 0 && profile?.isDemo) {\n          console.log('No BPMN files found in demo mode, providing fallback demo files');\n          const demoFiles = [\n            {\n              name: 'patient-registration.bpmn',\n              path: 'demo/business-processes/patient-registration.bpmn',\n              sha: 'demo-sha-1',\n              size: 2048,\n              download_url: '#',\n              html_url: '#'\n            },\n            {\n              name: 'vaccination-workflow.bpmn',\n              path: 'demo/business-processes/vaccination-workflow.bpmn',\n              sha: 'demo-sha-2',\n              size: 3072,\n              download_url: '#'\n            },\n            {\n              name: 'appointment-scheduling.bpmn',\n              path: 'demo/business-processes/appointment-scheduling.bpmn',\n              sha: 'demo-sha-3',\n              size: 1536,\n              download_url: '#'\n            }\n          ];\n          setBpmnFiles(demoFiles);\n        } else {\n          setBpmnFiles(bpmnFiles);\n        }\n        \n        setLoading(false);\n      } catch (apiError) {\n        console.error('Failed to fetch BPMN files from repository:', apiError);\n        \n        // For demo mode or when network access fails, provide fallback BPMN files\n        if (profile?.isDemo || apiError.message?.includes('Failed to fetch')) {\n          console.log('Providing fallback demo BPMN files');\n          const demoFiles = [\n            {\n              name: 'patient-registration.bpmn',\n              path: 'demo/business-processes/patient-registration.bpmn',\n              sha: 'demo-sha-1',\n              size: 2048,\n              download_url: '#',\n              html_url: '#'\n            },\n            {\n              name: 'vaccination-workflow.bpmn',\n              path: 'demo/business-processes/vaccination-workflow.bpmn',\n              sha: 'demo-sha-2',\n              size: 3072,\n              download_url: '#'\n            },\n            {\n              name: 'appointment-scheduling.bpmn',\n              path: 'demo/business-processes/appointment-scheduling.bpmn',\n              sha: 'demo-sha-3',\n              size: 1536,\n              download_url: '#'\n            }\n          ];\n          setBpmnFiles(demoFiles);\n          setLoading(false);\n          return;\n        }\n        \n        // Check if this is an authentication error for a private repository\n        if (apiError.status === 401 || apiError.status === 403) {\n          setError('Authentication required to access this repository. Please ensure you have a valid GitHub token with appropriate permissions.');\n        } else if (apiError.status === 404) {\n          setError('Repository or branch not found. Please check the repository name and branch.');\n        } else {\n          setError(`Failed to load BPMN files from repository: ${apiError.message}`);\n        }\n        \n        setBpmnFiles([]);\n        setLoading(false);\n      }\n    };\n\n    loadBpmnFiles();\n  }, [profile, repository, navigate, selectedBranch]);\n\n  const handleEdit = (event, file) => {\n    if (!hasWriteAccess) {\n      // Show permission help message\n      alert('You need write permissions to edit BPMN files. Please check your GitHub token permissions.');\n      return;\n    }\n\n    const owner = repository.owner?.login || repository.full_name.split('/')[0];\n    const repoName = repository.name;\n    const branch = selectedBranch || 'main';\n    const path = `/bpmn-editor/${owner}/${repoName}/${branch}/${file.path}`;\n\n    const navigationState = {\n      profile,\n      repository,\n      component,\n      selectedFile: file,\n      selectedBranch,\n      mode: 'edit'\n    };\n    \n    handleNavigationClick(event, path, navigate, navigationState);\n  };\n\n  const handleView = (event, file) => {\n    const owner = repository.owner?.login || repository.full_name.split('/')[0];\n    const repoName = repository.name;\n    const branch = selectedBranch || 'main';\n    const path = `/bpmn-viewer/${owner}/${repoName}/${branch}/${file.path}`;\n\n    const navigationState = {\n      profile,\n      repository,\n      component,\n      selectedFile: file,\n      selectedBranch,\n      mode: 'view'\n    };\n    \n    handleNavigationClick(event, path, navigate, navigationState);\n  };\n\n  const handleViewSource = (event, file) => {\n    const owner = repository.owner?.login || repository.full_name.split('/')[0];\n    const repoName = repository.name;\n    const branch = selectedBranch || 'main';\n    const path = `/bpmn-source/${owner}/${repoName}/${branch}/${file.path}`;\n\n    const navigationState = {\n      profile,\n      repository,\n      component,\n      selectedFile: file,\n      selectedBranch\n    };\n    \n    handleNavigationClick(event, path, navigate, navigationState);\n  };\n\n  if (dakLoading) {\n    return (\n      <div className=\"business-process-selection loading-state\">\n        <div className=\"loading-content\">\n          <h2>Loading DAK Data...</h2>\n          <p>Fetching repository and user data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (dakError) {\n    return (\n      <div className=\"business-process-selection error-state\">\n        <div className=\"error-content\">\n          <h2>Error Loading DAK Data</h2>\n          <p>{dakError}</p>\n          <div className=\"error-actions\">\n            <button onClick={() => navigate('/')} className=\"action-btn primary\">\n              Return to Home\n            </button>\n            <button onClick={() => window.location.reload()} className=\"action-btn secondary\">\n              Retry\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!profile || !repository) {\n    navigate('/');\n    return <div>Redirecting...</div>;\n  }\n\n  return (\n    <PageLayout pageName=\"business-process-selection\">\n      <div className=\"business-process-selection\">\n      <div className=\"selection-content\">\n\n        <div className=\"selection-main\">\n          <div className=\"selection-intro\">\n            <h2>Business Process Files</h2>\n            <p>\n              Select a BPMN business process file to view, edit, or examine the source code.\n              Files are loaded from <code>input/business-processes/</code> or <code>input/business-process/</code> directories and subdirectories.\n            </p>\n          </div>\n\n          {loading ? (\n            <div className=\"loading\">\n              <div className=\"spinner\"></div>\n              <p>Loading business process files...</p>\n            </div>\n          ) : error ? (\n            <div className=\"error\">\n              <p>❌ {error}</p>\n            </div>\n          ) : bpmnFiles.length === 0 ? (\n            <div className=\"empty-state\">\n              <div className=\"empty-icon\">📋</div>\n              <h3>No BPMN Files Found</h3>\n              <p>No .bpmn files were found in the input/business-processes/ or input/business-process/ directories.</p>\n            </div>\n          ) : (\n            <div className=\"files-grid\">\n              {bpmnFiles.map((file) => (\n                <div key={file.sha} className=\"file-card\">\n                  <BPMNPreview \n                    file={file} \n                    repository={repository} \n                    selectedBranch={selectedBranch}\n                    profile={profile}\n                  />\n                  \n                  <div className=\"file-header\">\n                    <div className=\"file-icon\">🔄</div>\n                    <div className=\"file-details\">\n                      <h3 className=\"file-name\">{file.name} · {(file.size / 1024).toFixed(1)} KB</h3>\n                    </div>\n                  </div>\n\n                  <div className=\"file-actions\">\n                    <button \n                      className=\"action-btn view-btn\"\n                      onClick={(event) => handleView(event, file)}\n                      title=\"View BPMN diagram (read-only)\"\n                    >\n                      👁️ View\n                    </button>\n\n                    <button \n                      className={`action-btn edit-btn ${!hasWriteAccess ? 'disabled' : ''}`}\n                      onClick={(event) => handleEdit(event, file)}\n                      title={hasWriteAccess ? \"Edit BPMN diagram\" : \"Edit access required\"}\n                      disabled={!hasWriteAccess}\n                    >\n                      ✏️ Edit\n                    </button>\n\n                    <button \n                      className=\"action-btn source-btn\"\n                      onClick={(event) => handleViewSource(event, file)}\n                      title=\"View XML source code\"\n                    >\n                      📄 Source\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default BusinessProcessSelection;","/**\n * SGEX Lazy Factory Service\n * \n * Handles creation of configured instances for lazy-loaded libraries.\n * This service provides:\n * 1. Factory functions for creating pre-configured instances\n * 2. Instance configuration with sensible defaults\n * 3. Convenience functions for common use cases\n * \n * Split from lazyRouteUtils.js for better separation of concerns.\n */\n\nimport { \n  lazyLoadOctokit, \n  lazyLoadBpmnModeler, \n  lazyLoadBpmnViewer, \n  lazyLoadAjv, \n  lazyLoadAjvFormats \n} from './libraryLoaderService';\n\n/**\n * Create a lazy-loaded Octokit instance\n * @param {Object} options - Octokit configuration options\n * @returns {Promise<Octokit>} Configured Octokit instance\n */\nexport async function createLazyOctokit(options = {}) {\n  const Octokit = await lazyLoadOctokit();\n  return new Octokit(options);\n}\n\n/**\n * Create a lazy-loaded BPMN Modeler instance\n * @param {Object} options - BpmnModeler configuration options\n * @returns {Promise<BpmnModeler>} Configured BpmnModeler instance\n */\nexport async function createLazyBpmnModeler(options = {}) {\n  const BpmnModeler = await lazyLoadBpmnModeler();\n  return new BpmnModeler(options);\n}\n\n/**\n * Create a lazy-loaded BPMN Viewer instance\n * @param {Object} options - BpmnViewer configuration options\n * @returns {Promise<BpmnViewer>} Configured BpmnViewer instance\n */\nexport async function createLazyBpmnViewer(options = {}) {\n  const BpmnViewer = await lazyLoadBpmnViewer();\n  return new BpmnViewer(options);\n}\n\n/**\n * Create a lazy-loaded AJV instance with formats\n * @param {Object} options - AJV configuration options\n * @returns {Promise<Ajv>} Configured AJV instance with formats added\n */\nexport async function createLazyAjv(options = {}) {\n  const Ajv = await lazyLoadAjv();\n  const addFormats = await lazyLoadAjvFormats();\n  const ajv = new Ajv(options);\n  addFormats(ajv);\n  return ajv;\n}\n\n/**\n * Lazy factory utilities for unified access\n */\nconst LazyFactoryService = {\n  createLazyOctokit,\n  createLazyBpmnModeler,\n  createLazyBpmnViewer,\n  createLazyAjv\n};\n\nexport default LazyFactoryService;"],"names":["useDAKUrlParams","_location$state","_location$state2","_location$state3","location","useLocation","navigate","useNavigate","user","repo","branch","useParams","profile","setProfile","useState","state","repository","setRepository","selectedBranch","setSelectedBranch","loading","setLoading","error","setError","useEffect","async","_repository$owner","_location$state$profi","_location$state$repos","_location$state$repos2","_location$state$repos3","console","log","urlParams","currentState","hasProfile","hasRepository","profileLogin","login","repositoryFullName","full_name","repositoryOwner","owner","hasLocationState","locationStateSummary","isAuthenticated","githubService","isAuth","needsFetch","hasUserParam","hasRepoParam","reason","publicProfile","name","charAt","toUpperCase","slice","avatar_url","concat","type","publicRepository","default_branch","html_url","userProfile","getUser","err","warningMessage","repoData","getRepository","dakValidationService","validateDAKRepository","getBranch","warn","fetchDataFromUrlParams","_ref","file","containerRef","useRef","viewerRef","hasFile","fileName","waitForContainer","attempt","arguments","length","undefined","current","startPreviewLoad","setTimeout","_file$path","_file$sha","_bpmnXml3","innerHTML","split","repoName","ref","isDemo","path","includes","sha","startsWith","bpmnXml","filePath","hasDownloadUrl","download_url","processName","replace","_bpmnXml","_bpmnXml2","getFileContent","substring","Error","fileError","message","status","stack","viewer","createLazyBpmnViewer","_containerRef$current","_containerRef$current2","_containerRef$current3","_containerRef$current4","_bpmnXml4","_importResult$warning","_importResult$warning2","_importResult$warning3","_containerRef$current5","_svgBefore$children","_containerRef$current6","_containerRef$current7","_containerRef$current8","_containerRef$current9","_containerRef$current0","exists","className","width","offsetWidth","height","offsetHeight","parentExists","parentElement","createTimeoutPromise","operation","timeoutMs","Promise","_","reject","attachPromise","attachTo","race","importStartTime","Date","now","importPromise","importXML","importResult","importTime","warnings","hasWarnings","warningDetails","canvas","get","svgBefore","querySelector","getAttribute","viewBox","style","display","visibility","opacity","computedStyle","window","getComputedStyle","childCount","children","zoom","zoomError","viewboxAfterZoom","viewbox","svgAfter","outer","inner","scale","containerDimensions","clientWidth","clientHeight","svgAttributes","transform","svgStyles","backgroundColor","svgComputedStyles","forceCanvasUpdate","currentViewbox","currentZoom","svgElement","scrollTop","svgVisible","svgOpacity","svgDisplay","canvasError","_containerRef$current1","_svgFinal$children","_containerRef$current10","_containerRef$current11","_containerRef$current12","_containerRef$current13","_containerRef$current14","_containerRef$current15","_containerRef$current16","_containerRef$current17","_containerRef$current18","_viewbox$inner","_viewbox$inner2","_containerRef$current19","_containerRef$current20","_containerRef$current21","_containerRef$current22","svgFinal","gElements","querySelectorAll","shapeElements","svg","gElementCount","shapeElementCount","fill","container","hasChildren","dimensions","scrollWidth","scrollHeight","hasElements","containerHasContent","importError","_bpmnXml5","_bpmnXml6","_containerRef$current23","_containerRef$current24","_containerRef$current25","_containerRef$current26","xmlLength","xmlPreview","containerState","renderError","errorMessage","errorStack","loadPreview","cleanup","destroy","cleanupError","_jsxs","_jsx","BusinessProcessSelection","dakLoading","dakError","repositoryName","component","bpmnFiles","setBpmnFiles","hasWriteAccess","setHasWriteAccess","_repository$permissio","writeAccess","token","permissions","push","checkPermissions","_repository$owner2","_repository$owner3","_repository$owner4","_repository$owner5","ownerLogin","original_owner_login","original_full_name","derived_owner","derived_repoName","selected_ref","derivation_method","derivedOwner","fullRepositoryData","getBpmnFiles","count","files","map","f","_f$sha","size","apiError","_apiError$message","loadBpmnFiles","onClick","reload","PageLayout","pageName","BPMNPreview","toFixed","event","handleView","_repository$owner7","navigationState","selectedFile","mode","handleNavigationClick","title","handleEdit","_repository$owner6","alert","disabled","handleViewSource","_repository$owner8","createLazyOctokit","options","lazyLoadOctokit","createLazyBpmnModeler","lazyLoadBpmnModeler","lazyLoadBpmnViewer"],"sourceRoot":""}