{"version":3,"file":"static/js/569.b5aa5ac9.chunk.js","mappings":"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","sources":["components/TestDashboard.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { PageLayout } from './framework';\n\nconst TestDashboard = () => {\n  const navigate = useNavigate();\n\n  // Mock data for testing\n  const mockProfile = {\n    login: 'testuser',\n    name: 'Test User',\n    avatar_url: 'https://github.com/testuser.png',\n    token: 'mock_token'\n  };\n\n  const mockRepository = {\n    name: 'test-dak-repo',\n    full_name: 'testorg/test-dak-repo',\n    owner: { login: 'testorg' },\n    permissions: { push: false } // Simulate read-only access\n  };\n\n  const mockComponent = {\n    id: 'business-processes',\n    name: 'Generic Business Processes and Workflows',\n    description: 'BPMN workflows and business process definitions that model clinical workflows and care pathways',\n    icon: 'ðŸ”„',\n    type: 'Level 2',\n    color: '#d13438'\n  };\n\n  const dakComponents = [\n    {\n      id: 'business-processes',\n      name: 'Generic Business Processes and Workflows',\n      description: 'BPMN workflows and business process definitions that model clinical workflows and care pathways',\n      icon: 'ðŸ”„',\n      type: 'Level 2',\n      color: '#d13438',\n      fileTypes: ['BPMN', 'XML'],\n      count: 12\n    },\n    {\n      id: 'decision-support',\n      name: 'Decision-Support Logic',\n      description: 'DMN decision tables and clinical decision support rules that encode clinical logic',\n      icon: 'ðŸŽ¯',\n      type: 'Level 2',\n      color: '#00bcf2',\n      fileTypes: ['DMN', 'XML'],\n      count: 8\n    },\n    {\n      id: 'indicators',\n      name: 'Program Indicators',\n      description: 'Performance indicators and measurement definitions for monitoring and evaluation',\n      icon: 'ðŸ“Š',\n      type: 'Level 2',\n      color: '#498205',\n      fileTypes: ['Measure', 'Logic'],\n      count: 15\n    },\n    {\n      id: 'forms',\n      name: 'FHIR Questionnaires',\n      description: 'Structured forms and questionnaires for data collection',\n      icon: 'ðŸ“‹',\n      type: 'Level 3',\n      color: '#881798',\n      fileTypes: ['Questionnaire', 'StructureMap'],\n      count: 24\n    }\n  ];\n\n  const handleComponentClick = (component) => {\n    // For business processes, navigate to selection page without permission check\n    if (component.id === 'business-processes') {\n      navigate('/business-process-selection', {\n        state: {\n          profile: mockProfile,\n          repository: mockRepository,\n          component: mockComponent\n        }\n      });\n      return;\n    }\n\n    // For other components, show alert for demo\n    alert(`Would normally check permissions and navigate to ${component.name} editor`);\n  };\n\n  return (\n    <PageLayout pageName=\"test-dashboard\">\n      <div className=\"test-dashboard\">\n        <div className=\"dashboard-content\">\n        <div className=\"breadcrumb\">\n          <span className=\"breadcrumb-current\">DAK Components (Test Mode)</span>\n        </div>\n\n        <div className=\"dashboard-main\">\n          <div className=\"dashboard-intro\">\n            <h2>Digital Adaptation Kit Components</h2>\n            <p>\n              Select a component to test the new business process navigation. \n              <strong>Click \"Generic Business Processes and Workflows\" to test the new selection flow!</strong>\n            </p>\n          </div>\n\n          <div className=\"components-grid\">\n            {dakComponents.map((component) => (\n              <div \n                key={component.id}\n                className={`component-card ${component.type.toLowerCase().replace(' ', '-')} ${component.id === 'business-processes' ? 'highlighted' : ''}`}\n                onClick={() => handleComponentClick(component)}\n                style={{ '--component-color': component.color }}\n              >\n                <div className=\"component-header\">\n                  <div className=\"component-icon\" style={{ color: component.color }}>\n                    {component.icon}\n                  </div>\n                  <div className=\"component-badge\">\n                    <span className={`level-badge ${component.type.toLowerCase().replace(' ', '-')}`}>\n                      {component.type}\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"component-content\">\n                  <h3>{component.name}</h3>\n                  <p>{component.description}</p>\n                  \n                  <div className=\"component-meta\">\n                    <div className=\"file-types\">\n                      {component.fileTypes.map((type) => (\n                        <span key={type} className=\"file-type-tag\">{type}</span>\n                      ))}\n                    </div>\n                    <div className=\"file-count\">\n                      {component.count} files\n                    </div>\n                  </div>\n\n                  {component.id === 'business-processes' && (\n                    <div className=\"demo-badge\">\n                      âœ¨ NEW NAVIGATION FLOW\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      </div>\n    </PageLayout>\n  );\n};\n\nexport default TestDashboard;"],"names":["TestDashboard","navigate","useNavigate","mockProfile","login","name","avatar_url","token","mockRepository","full_name","owner","permissions","push","mockComponent","id","description","icon","type","color","_jsx","PageLayout","pageName","children","className","_jsxs","fileTypes","count","map","component","concat","toLowerCase","replace","onClick","alert","state","profile","repository","handleComponentClick","style"],"sourceRoot":""}