{"version":3,"file":"static/js/6996.f2f4c950.chunk.js","mappings":"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","sources":["components/CollaborationModal.js","components/WelcomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useThemeImage from '../hooks/useThemeImage';\nimport { ALT_TEXT_KEYS, getAltText } from '../utils/imageAltTextHelper';\n\nconst CollaborationModal = ({ onClose }) => {\n  const { t } = useTranslation();\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // Handle Escape key\n  useEffect(() => {\n    const handleEscape = (e) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [onClose]);\n\n  // Theme-aware collaboration image\n  const collaborationImage = useThemeImage('collaboration.png');\n  \n  // Theme-aware pronunciation guide image\n  const pronunciationImage = useThemeImage('pronunciation-guide.png');\n\n  const slides = [\n    {\n      title: \"Our Mission\",\n      content: (\n        <div className=\"slide-content\">\n          <p>\n            SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits (DAKs).\n          </p>\n          <p>\n            Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations through:\n          </p>\n          <ul>\n            <li><strong>Collaborative Development:</strong> Every contribution matters, whether reporting bugs, testing features, or sharing feedback</li>\n            <li><strong>AI-Powered Assistance:</strong> Hybrid approach combining human insight with AI coding agents for efficient development</li>\n            <li><strong>Community-Driven Evolution:</strong> Real-time improvement through collaborative discussion and iterative refinement</li>\n            <li><strong>Real-World Impact:</strong> Building tools that help healthcare workers worldwide deliver better patient care</li>\n          </ul>\n        </div>\n      )\n    },\n    {\n      title: \"How to Contribute\",\n      content: (\n        <div className=\"slide-content\">\n          <p>\n            Contributing to SGEX is a collaborative journey that combines human creativity with AI assistance:\n          </p>\n          <div className=\"contribution-steps\">\n            <div className=\"step\">\n              <span className=\"step-number\">1</span>\n              <div className=\"step-content\">\n                <h4>🐛 Start with Feedback</h4>\n                <p>Report bugs, request features, or suggest improvements through our issue tracker</p>\n              </div>\n            </div>\n            <div className=\"step\">\n              <span className=\"step-number\">2</span>\n              <div className=\"step-content\">\n                <h4>🤖 AI-Powered Development</h4>\n                <p>Issues may be assigned to coding agents for initial analysis and implementation</p>\n              </div>\n            </div>\n            <div className=\"step\">\n              <span className=\"step-number\">3</span>\n              <div className=\"step-content\">\n                <h4>🌟 Community Collaboration</h4>\n                <p>The community reviews, tests, and refines changes through collaborative discussion</p>\n              </div>\n            </div>\n            <div className=\"step\">\n              <span className=\"step-number\">4</span>\n              <div className=\"step-content\">\n                <h4>🚀 Real-Time Evolution</h4>\n                <p>The workbench continuously evolves based on actual usage and feedback from healthcare professionals</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: \"Get Started\",\n      content: (\n        <div className=\"slide-content\">\n          <div className=\"collaboration-image\">\n            <img src={collaborationImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_COLLABORATION, 'Collaboration in SGEX')} />\n          </div>\n          <p>\n            Every contribution helps improve digital health tools for healthcare workers worldwide. Whether you're reporting a bug, testing a feature, or sharing feedback, you're part of building the future of digital health tooling.\n          </p>\n          <div className=\"get-started-actions\">\n            <h4>Ready to contribute?</h4>\n            <button \n              className=\"action-link primary\"\n              onClick={() => {\n                // Navigate to current site instead of external URL\n                window.location.href = window.location.origin + '/sgex/';\n              }}\n            >\n              View Main Site\n            </button>\n            <p className=\"or-text\">or</p>\n            <button \n              className=\"action-link secondary\"\n              onClick={onClose}\n            >\n              Use the help mascot on any page to quickly report issues\n            </button>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: \"How to Pronounce\",\n      content: (\n        <div className=\"slide-content\">\n          <div className=\"pronunciation-image\">\n            <img \n              src={pronunciationImage} \n              alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_PRONUNCIATION, 'How to Pronounce SGeX')} \n            />\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);\n  };\n\n  const goToSlide = (index) => {\n    setCurrentSlide(index);\n  };\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div \n      className=\"collaboration-modal-overlay\" \n      onClick={(e) => e.target === e.currentTarget && handleOverlayClick(e)}\n      role=\"presentation\"\n    >\n      <div \n        className=\"collaboration-modal\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabIndex={-1}\n      >\n        <div className=\"modal-header\">\n          <h2>{slides[currentSlide].title}</h2>\n          <button className=\"close-button\" onClick={onClose}>\n            ×\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"slideshow-container\">\n            <div className=\"slide active\">\n              {slides[currentSlide].content}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-footer\">\n          <div className=\"slide-navigation\">\n            <button \n              className=\"nav-button prev\" \n              onClick={prevSlide}\n              disabled={currentSlide === 0}\n            >\n              ‹ Previous\n            </button>\n            \n            <div className=\"slide-indicators\">\n              {slides.map((_, index) => (\n                <button\n                  key={index}\n                  className={`indicator ${currentSlide === index ? 'active' : ''}`}\n                  onClick={() => goToSlide(index)}\n                />\n              ))}\n            </div>\n            \n            <button \n              className=\"nav-button next\" \n              onClick={nextSlide}\n              disabled={currentSlide === slides.length - 1}\n            >\n              Next ›\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CollaborationModal;","import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport githubService from '../services/githubService';\nimport CollaborationModal from './CollaborationModal';\nimport HelpModal from './HelpModal';\nimport helpContentService from '../services/helpContentService';\nimport { PageLayout } from './framework';\nimport { handleNavigationClick } from '../utils/navigationUtils';\nimport useThemeImage from '../hooks/useThemeImage';\nimport { ALT_TEXT_KEYS, getAltText } from '../utils/imageAltTextHelper';\n\nconst WelcomePage = () => {\n  const { t } = useTranslation();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showCollaborationModal, setShowCollaborationModal] = useState(false);\n  const [showPATHelp, setShowPATHelp] = useState(false);\n  const [warningMessage, setWarningMessage] = useState(null);\n  const [tokenName, setTokenName] = useState('');\n  const [patToken, setPatToken] = useState('');\n  const [patError, setPATError] = useState('');\n  const [patLoading, setPATLoading] = useState(false);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  // Ref to focus on PAT token input\n  const patTokenInputRef = useRef(null);\n\n  // Theme-aware image paths\n  const mascotImage = useThemeImage('sgex-mascot.png');\n  const authoringImage = useThemeImage('authoring.png');\n  const collaborationImage = useThemeImage('collaboration.png');\n\n  // Initial authentication check - runs once on mount\n  useEffect(() => {\n    const initializeAuth = () => {\n      // Check if user is already authenticated from previous session\n      const token = sessionStorage.getItem('github_token') || localStorage.getItem('github_token');\n      if (token) {\n        const success = githubService.authenticate(token);\n        if (success) {\n          setIsAuthenticated(true);\n        } else {\n          sessionStorage.removeItem('github_token');\n          localStorage.removeItem('github_token');\n        }\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // Listen for authentication state changes (for logout)\n  useEffect(() => {\n    const checkAuthState = () => {\n      setIsAuthenticated(githubService.isAuthenticated);\n    };\n\n    // Check periodically for auth state changes\n    const interval = setInterval(checkAuthState, 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Handle warning message from navigation state\n  useEffect(() => {\n    if (location.state?.warningMessage) {\n      setWarningMessage(location.state.warningMessage);\n      // Clear the warning message from navigation state to prevent it from persisting\n      navigate(location.pathname, { replace: true, state: {} });\n    }\n  }, [location.state, navigate, location.pathname]);\n\n  // Handle focus PAT input when navigated with focusPATInput parameter\n  useEffect(() => {\n    if (location.state?.focusPATInput && patTokenInputRef.current && !isAuthenticated) {\n      // Small delay to ensure the component is fully rendered\n      const timer = setTimeout(() => {\n        patTokenInputRef.current.focus();\n        // Clear the focus parameter from state AFTER focusing to prevent re-focusing on re-renders\n        navigate(location.pathname, { \n          replace: true, \n          state: { ...location.state, focusPATInput: undefined }\n        });\n      }, 150);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [location.state, navigate, location.pathname, isAuthenticated]);\n\n  // Listen for custom focus PAT input event (for same-page focus)\n  useEffect(() => {\n    const handleFocusPATInput = () => {\n      if (patTokenInputRef.current && !isAuthenticated) {\n        patTokenInputRef.current.focus();\n      }\n    };\n\n    window.addEventListener('focusPATInput', handleFocusPATInput);\n    \n    return () => {\n      window.removeEventListener('focusPATInput', handleFocusPATInput);\n    };\n  }, [isAuthenticated]);\n\n  const handleAuthSuccess = (token, octokitInstance, username) => {\n    // Store token in session storage for this session\n    sessionStorage.setItem('github_token', token);\n    \n    // Store username if provided for better UX\n    if (username) {\n      sessionStorage.setItem('github_username', username);\n    }\n    \n    // Use the provided Octokit instance directly\n    githubService.authenticateWithOctokit(octokitInstance);\n    \n    setIsAuthenticated(true);\n  };\n\n  const handleAuthoringClick = (event) => {\n    handleNavigationClick(event, '/select_profile', navigate);\n  };\n\n\n\n  const handleDismissWarning = () => {\n    setWarningMessage(null);\n  };\n\n  const handleCollaborationOpen = () => {\n    setShowCollaborationModal(true);\n  };\n\n  const handleCollaborationClose = () => {\n    setShowCollaborationModal(false);\n  };\n\n  const handlePATSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!patToken.trim()) {\n      setPATError(\"Please enter a GitHub Personal Access Token\");\n      return;\n    }\n\n    setPATLoading(true);\n    setPATError('');\n    \n    try {\n      // Test the token by creating an Octokit instance and making a test request\n      const { Octokit } = await import('@octokit/rest');\n      const octokit = new Octokit({ auth: patToken.trim() });\n      \n      // Test the token by fetching user info\n      const userResponse = await octokit.rest.users.getAuthenticated();\n      \n      // Call success callback with token and octokit instance\n      handleAuthSuccess(patToken.trim(), octokit, userResponse.data.login);\n    } catch (err) {\n      console.error('PAT authentication failed:', err);\n      \n      if (err.status === 401) {\n        setPATError('Invalid Personal Access Token. Please check your token and try again.');\n      } else if (err.status === 403) {\n        setPATError(\"Token doesn't have sufficient permissions. Please ensure your token has 'repo' and 'read:org' scopes.\");\n      } else {\n        setPATError('Authentication failed. Please check your connection and try again.');\n      }\n    } finally {\n      setPATLoading(false);\n    }\n  };\n\n  const handleTokenNameChange = (e) => {\n    setTokenName(e.target.value);\n    if (patError) setPATError(''); // Clear error when user starts typing\n  };\n\n  const handlePATTokenChange = (e) => {\n    setPatToken(e.target.value);\n    if (patError) setPATError(''); // Clear error when user starts typing\n  };\n\n  return (\n    <PageLayout pageName=\"welcome\" showBreadcrumbs={false}>\n      <div className=\"welcome-page-content\">\n        {warningMessage && (\n          <div className=\"warning-message\">\n            <div className=\"warning-content\">\n              <div className=\"warning-header\">\n                <span className=\"warning-icon\">⚠️</span>\n                <span className=\"warning-text\">{warningMessage}</span>\n              </div>\n              <button \n                className=\"warning-dismiss\" \n                onClick={handleDismissWarning}\n                aria-label=\"Dismiss warning\"\n              >\n                × Dismiss\n              </button>\n            </div>\n          </div>\n        )}\n\n        <div className=\"welcome-hero\">\n          <div className=\"welcome-intro\">\n            <div className=\"welcome-mascot\">\n              <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Workbench Helper')} />\n            </div>\n            <div className=\"welcome-text\">\n              <h1>SGEX Workbench</h1>\n              <h2>WHO SMART Guidelines Exchange</h2>\n              <p className=\"mission-statement\">\n                SGEX is an experimental collaborative project developing a workbench of tools to make it easier and faster to develop high fidelity SMART Guidelines Digital Adaptation Kits (DAKs). Our mission is to empower healthcare organizations worldwide to create and maintain standards-compliant digital health implementations.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"welcome-cards\">\n          <div className=\"card-grid\">\n            {/* Authoring Card - Always show */}\n            <button \n              className=\"action-card authoring-card\" \n              onClick={handleAuthoringClick}\n              onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && handleAuthoringClick()}\n            >\n              <div className=\"card-icon\">\n                <img src={authoringImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_AUTHORING, 'Authoring')} />\n              </div>\n              <p>Create, edit, or fork WHO SMART Guidelines Digital Adaptation Kits.</p>\n            </button>\n\n            {/* PAT Login + Demo Card (Middle) - Only show when not authenticated */}\n            {!isAuthenticated && (\n              <div className=\"action-card pat-demo-card\">\n                {/* PAT Login Section */}\n                <div className=\"pat-section\">\n                  <h4>Quick PAT Login</h4>\n                  <form onSubmit={handlePATSubmit} className=\"pat-form\">\n                    <div className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        value={tokenName}\n                        onChange={handleTokenNameChange}\n                        placeholder=\"Token name\"\n                        className=\"token-name-input\"\n                        disabled={patLoading}\n                        aria-label=\"Token name (optional)\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        ref={patTokenInputRef}\n                        type=\"password\"\n                        value={patToken}\n                        onChange={handlePATTokenChange}\n                        placeholder=\"ghp_xxxxxxxxxxxxxxxxxxxx\"\n                        className={`token-input ${patError ? 'error' : ''}`}\n                        disabled={patLoading}\n                        aria-label=\"GitHub Personal Access Token\"\n                        aria-describedby=\"pat-help-text\"\n                      />\n                    </div>\n                    <button \n                      type=\"submit\" \n                      className=\"pat-login-btn\" \n                      disabled={patLoading || !patToken.trim()}\n                    >\n                      {patLoading ? 'Signing In...' : '🔑 Sign In'}\n                    </button>\n                  </form>\n                  {patError && <div className=\"pat-error\">{patError}</div>}\n                  <div className=\"pat-help-link\">\n                    <button \n                      type=\"button\"\n                      className=\"pat-help-btn\" \n                      onClick={() => setShowPATHelp(true)}\n                      id=\"pat-help-text\"\n                    >\n                      📖 Help creating a PAT\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Collaboration Card */}\n            <button \n              className=\"action-card collaboration-card\" \n              onClick={handleCollaborationOpen}\n              onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && handleCollaborationOpen()}\n            >\n              <div className=\"card-icon\">\n                <img src={collaborationImage} alt={getAltText(t, ALT_TEXT_KEYS.IMAGE_COLLABORATION, 'Collaboration')} />\n              </div>\n              <p>Learn about our mission, how to contribute, and join our community-driven development process.</p>\n            </button>\n          </div>\n        </div>\n\n        {/* Collaboration Modal */}\n        {showCollaborationModal && (\n          <CollaborationModal onClose={handleCollaborationClose} />\n        )}\n\n        {/* PAT Help Modal */}\n        {showPATHelp && (\n          <HelpModal\n            helpTopic={helpContentService.getHelpTopic('github-pat-setup')}\n            contextData={{ pageId: 'welcome' }}\n            onClose={() => setShowPATHelp(false)}\n          />\n        )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default WelcomePage;"],"names":["_ref","onClose","t","useTranslation","currentSlide","setCurrentSlide","useState","useEffect","handleEscape","e","key","document","addEventListener","removeEventListener","collaborationImage","useThemeImage","pronunciationImage","slides","title","content","_jsxs","className","children","_jsx","src","alt","getAltText","ALT_TEXT_KEYS","IMAGE_COLLABORATION","onClick","window","location","href","origin","IMAGE_PRONUNCIATION","target","currentTarget","handleOverlayClick","role","tabIndex","prevSlide","prev","length","disabled","map","_","index","concat","goToSlide","nextSlide","WelcomePage","isAuthenticated","setIsAuthenticated","showCollaborationModal","setShowCollaborationModal","showPATHelp","setShowPATHelp","warningMessage","setWarningMessage","tokenName","setTokenName","patToken","setPatToken","patError","setPATError","patLoading","setPATLoading","navigate","useNavigate","useLocation","patTokenInputRef","useRef","mascotImage","authoringImage","initializeAuth","token","sessionStorage","getItem","localStorage","githubService","authenticate","removeItem","interval","setInterval","checkAuthState","clearInterval","_location$state","state","pathname","replace","_location$state2","focusPATInput","current","timer","setTimeout","focus","_objectSpread","undefined","clearTimeout","handleFocusPATInput","handleAuthoringClick","event","handleNavigationClick","handleCollaborationOpen","PageLayout","pageName","showBreadcrumbs","handleDismissWarning","MASCOT_HELPER","onKeyDown","IMAGE_AUTHORING","onSubmit","async","preventDefault","trim","Octokit","octokit","auth","userResponse","rest","users","getAuthenticated","octokitInstance","username","data","login","setItem","authenticateWithOctokit","err","console","error","status","handleAuthSuccess","type","value","onChange","placeholder","ref","id","CollaborationModal","handleCollaborationClose","HelpModal","helpTopic","helpContentService","getHelpTopic","contextData","pageId"],"sourceRoot":""}