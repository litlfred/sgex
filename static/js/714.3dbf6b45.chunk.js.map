{"version":3,"file":"static/js/714.3dbf6b45.chunk.js","mappings":"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","sources":["utils/imageAltTextHelper.js","services/cacheManagementService.js","components/TrackedItemsViewer.js","components/LanguageSelector.js","components/ContextualHelpMascot.js","services/helpContentService.js","utils/navigationUtils.js","hooks/useThemeImage.js","services/stagingGroundService.js","services/tutorialService.js","services/libraryLoaderService.js","utils/concurrency.js","utils/repositoryCompatibilityCache.js","services/secureTokenStorage.js","services/githubService.js","services/issueTrackingService.js","services/repositoryCacheService.js","services/bookmarkService.js","config/repositoryConfig.js","services/bugReportService.js","components/ScreenshotEditor.js","components/BugReportForm.js","components/EnhancedTutorialModal.js","components/HelpModal.js","services/branchContextService.js","services/dakValidationService.js","services/profileSubscriptionService.js","components/framework/PageProvider.js","services/userAccessService.js","services/githubActionsService.js","utils/timeUtils.js","components/WorkflowDashboard.js","components/PreviewBadge.js","components/framework/PageHeader.js","components/framework/AccessBadge.js","components/framework/PageContext.js","components/framework/ErrorHandler.js","components/framework/PageLayout.js","components/framework/usePageParams.js","components/framework/SaveButtonsContainer.js","components/framework/CommitMessageDialog.js","services/dataAccessLayer.js","components/framework/AssetEditorLayout.js","services/localStorageService.js","components/framework/ToolDefinition.js"],"sourcesContent":["/**\n * Image Alt Text Helper Utility\n * \n * Provides utilities for extracting meaningful alt text from image filenames\n * and managing translatable alt text keys.\n */\n\n/**\n * Extract meaningful description from image filename\n * @param {string} filename - The image filename (e.g., \"sgex-mascot.png\", \"authoring_grey_tabby.png\")\n * @returns {string} - Descriptive text suitable for alt attributes\n */\nexport function extractAltTextFromFilename(filename) {\n  if (!filename) return '';\n  \n  // Remove file extension and path\n  const baseName = filename.replace(/^.*\\//, '').replace(/\\.[^.]*$/, '');\n  \n  // Handle special theme variants (grey_tabby, dark mode, etc.)\n  const cleanName = baseName.replace(/_grey_tabby$/, '').replace(/_dark$/, '');\n  \n  // Common filename patterns and their descriptions\n  const patterns = {\n    'sgex-mascot': 'SGEX Mascot',\n    'authoring': 'Authoring Interface',\n    'collaboration': 'Collaboration Features', \n    'create': 'Create New DAK',\n    'editing': 'Editing Interface',\n    'forking': 'Repository Forking',\n    'experiment': 'Experimental Features',\n    'bug-report-icon': 'Bug Report Icon',\n    'cat-paw-lock-icon': 'Security Lock Icon',\n    'cat-paw-bug-icon': 'Bug Icon',\n    'logo192': 'SGEX Logo (192px)',\n    'logo512': 'SGEX Logo (512px)',\n    'workflow': 'Workflow Diagram'\n  };\n  \n  // Check for exact matches first\n  if (patterns[cleanName]) {\n    return patterns[cleanName];\n  }\n  \n  // Try to match partial patterns\n  for (const [pattern, description] of Object.entries(patterns)) {\n    if (cleanName.includes(pattern)) {\n      return description;\n    }\n  }\n  \n  // Fallback: convert kebab-case and snake_case to title case\n  return cleanName\n    .replace(/[-_]/g, ' ')\n    .replace(/\\b\\w/g, l => l.toUpperCase())\n    .trim() || 'Image';\n}\n\n/**\n * Generate translation key for alt text based on context\n * @param {string} context - The context (e.g., 'mascot', 'avatar', 'icon', 'logo')\n * @param {string} variant - Optional variant (e.g., 'user', 'organization', 'helper')\n * @returns {string} - Translation key (e.g., 'altText.mascot.helper')\n */\nexport function generateAltTextKey(context, variant = null) {\n  const baseKey = 'altText';\n  if (variant) {\n    return `${baseKey}.${context}.${variant}`;\n  }\n  return `${baseKey}.${context}`;\n}\n\n/**\n * Common alt text translation keys used throughout the application\n */\nexport const ALT_TEXT_KEYS = {\n  // SGEX Mascot variations\n  MASCOT_HELPER: 'altText.mascot.helper',\n  MASCOT_ICON: 'altText.mascot.icon',\n  MASCOT_EXAMINING: 'altText.mascot.examining',\n  MASCOT_CELEBRATING: 'altText.mascot.celebrating',\n  MASCOT_CODING: 'altText.mascot.coding',\n  MASCOT_COMMUNITY: 'altText.mascot.community',\n  \n  // User/Profile images\n  AVATAR_USER: 'altText.avatar.user',\n  AVATAR_ORGANIZATION: 'altText.avatar.organization',\n  AVATAR_PERSONAL: 'altText.avatar.personal',\n  AVATAR_PROFILE: 'altText.avatar.profile',\n  \n  // Interface icons and images\n  ICON_SGEX: 'altText.icon.sgex',\n  ICON_BUG_REPORT: 'altText.icon.bugReport',\n  ICON_SECURITY: 'altText.icon.security',\n  ICON_ACTION: 'altText.icon.action',\n  ICON_DAK_COMPONENT: 'altText.icon.dakComponent',\n  \n  // Feature/workflow images\n  IMAGE_AUTHORING: 'altText.image.authoring',\n  IMAGE_COLLABORATION: 'altText.image.collaboration',\n  IMAGE_WORKFLOW: 'altText.image.workflow',\n  IMAGE_PRONUNCIATION: 'altText.image.pronunciation',\n  \n  // Logos\n  LOGO_SGEX: 'altText.logo.sgex',\n  LOGO_WHO: 'altText.logo.who'\n};\n\n/**\n * Get alt text with fallback for dynamic content\n * @param {Function} t - Translation function from useTranslation\n * @param {string} key - Translation key\n * @param {string} fallback - Fallback text if translation is missing\n * @param {Object} interpolation - Variables for translation interpolation\n * @returns {string} - Translated alt text or fallback\n */\nexport function getAltText(t, key, fallback, interpolation = {}) {\n  try {\n    const translated = t(key, interpolation);\n    // If translation returns the key itself, use fallback\n    return translated === key ? fallback : translated;\n  } catch (error) {\n    console.warn(`Alt text translation failed for key: ${key}`, error);\n    return fallback;\n  }\n}\n\n/**\n * Generate alt text for user/organization avatars\n * @param {Function} t - Translation function\n * @param {Object} entity - User or organization object\n * @param {string} type - 'user' or 'organization'\n * @returns {string} - Appropriate alt text\n */\nexport function getAvatarAltText(t, entity, type = 'user') {\n  if (!entity) {\n    return getAltText(t, ALT_TEXT_KEYS.AVATAR_PROFILE, 'Profile avatar');\n  }\n  \n  const name = entity.name || entity.display_name || entity.login;\n  const key = type === 'organization' ? ALT_TEXT_KEYS.AVATAR_ORGANIZATION : ALT_TEXT_KEYS.AVATAR_USER;\n  \n  return getAltText(t, key, `${name} avatar`, { name });\n}\n\nconst imageAltTextHelper = {\n  extractAltTextFromFilename,\n  generateAltTextKey,\n  getAltText,\n  getAvatarAltText,\n  ALT_TEXT_KEYS\n};\n\nexport default imageAltTextHelper;","/**\n * Cache Management Service\n * \n * Centralized service for managing all application cache and local storage\n * including repository cache, branch context, staging ground, and user data\n */\n\nimport repositoryCacheService from './repositoryCacheService';\nimport branchContextService from './branchContextService';\nimport logger from '../utils/logger';\n\nclass CacheManagementService {\n  constructor() {\n    this.logger = logger.getLogger('CacheManagementService');\n  }\n\n  /**\n   * Clear all application cache and local context\n   * This includes:\n   * - Repository cache (localStorage)\n   * - Branch context (sessionStorage) \n   * - Staging ground data (localStorage)\n   * - Any other SGEX-related local storage\n   */\n  clearAllCache() {\n    try {\n      this.logger.info('Starting complete cache clear operation');\n      \n      // Clear repository cache\n      const repoCacheCleared = repositoryCacheService.clearAllCaches();\n      this.logger.debug('Repository cache cleared', { success: repoCacheCleared });\n\n      // Clear branch context\n      branchContextService.clearAllBranchContext();\n      this.logger.debug('Branch context cleared');\n\n      // Clear staging ground data\n      this.clearAllStagingGrounds();\n      this.logger.debug('Staging ground data cleared');\n\n      // Clear any other SGEX-related localStorage items\n      this.clearOtherSGEXData();\n      this.logger.debug('Other SGEX data cleared');\n\n      this.logger.info('Complete cache clear operation completed successfully');\n      return true;\n    } catch (error) {\n      this.logger.error('Error during cache clear operation', { error: error.message });\n      console.error('Error clearing cache:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Clear all staging ground data across repositories and branches\n   */\n  clearAllStagingGrounds() {\n    try {\n      // Find all staging ground keys in localStorage\n      const keys = Object.keys(localStorage);\n      const stagingKeys = keys.filter(key => key.startsWith('sgex_staging_'));\n      \n      stagingKeys.forEach(key => {\n        localStorage.removeItem(key);\n        this.logger.debug('Removed staging ground', { key });\n      });\n\n      // Also clear staging ground history\n      const historyKeys = keys.filter(key => key.startsWith('sgex_staging_history_'));\n      historyKeys.forEach(key => {\n        localStorage.removeItem(key);\n        this.logger.debug('Removed staging ground history', { key });\n      });\n\n      return true;\n    } catch (error) {\n      this.logger.error('Error clearing staging grounds', { error: error.message });\n      console.warn('Error clearing staging grounds:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Clear other SGEX-related data that might be stored\n   */\n  clearOtherSGEXData() {\n    try {\n      const keys = Object.keys(localStorage);\n      const sgexKeys = keys.filter(key => \n        key.startsWith('sgex_') && \n        !key.startsWith('sgex_repo_cache_') && \n        !key.startsWith('sgex_staging_')\n      );\n      \n      sgexKeys.forEach(key => {\n        localStorage.removeItem(key);\n        this.logger.debug('Removed other SGEX data', { key });\n      });\n\n      // Also check sessionStorage for SGEX data (excluding branch context which is handled separately)\n      const sessionKeys = Object.keys(sessionStorage);\n      const sgexSessionKeys = sessionKeys.filter(key => \n        key.startsWith('sgex_') && key !== 'sgex_branch_context'\n      );\n      \n      sgexSessionKeys.forEach(key => {\n        sessionStorage.removeItem(key);\n        this.logger.debug('Removed SGEX session data', { key });\n      });\n\n      return true;\n    } catch (error) {\n      this.logger.error('Error clearing other SGEX data', { error: error.message });\n      console.warn('Error clearing other SGEX data:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get information about current cache usage\n   * Useful for debugging and showing users what will be cleared\n   */\n  getCacheInfo() {\n    try {\n      const info = {\n        repositoryCache: {\n          count: 0,\n          keys: []\n        },\n        branchContext: {\n          hasData: false,\n          repositoryCount: 0\n        },\n        stagingGround: {\n          count: 0,\n          keys: []\n        },\n        other: {\n          count: 0,\n          keys: []\n        }\n      };\n\n      // Check localStorage\n      const localKeys = Object.keys(localStorage);\n      \n      // Repository cache\n      info.repositoryCache.keys = localKeys.filter(key => key.startsWith('sgex_repo_cache_'));\n      info.repositoryCache.count = info.repositoryCache.keys.length;\n\n      // Staging ground\n      info.stagingGround.keys = localKeys.filter(key => \n        key.startsWith('sgex_staging_') || key.startsWith('sgex_staging_history_')\n      );\n      info.stagingGround.count = info.stagingGround.keys.length;\n\n      // Other SGEX data\n      info.other.keys = localKeys.filter(key => \n        key.startsWith('sgex_') && \n        !key.startsWith('sgex_repo_cache_') && \n        !key.startsWith('sgex_staging_')\n      );\n      info.other.count = info.other.keys.length;\n\n      // Check sessionStorage for branch context\n      try {\n        const branchContext = sessionStorage.getItem('sgex_branch_context');\n        if (branchContext) {\n          const parsed = JSON.parse(branchContext);\n          info.branchContext.hasData = true;\n          info.branchContext.repositoryCount = Object.keys(parsed).length;\n        }\n      } catch (e) {\n        // Ignore parsing errors\n      }\n\n      return info;\n    } catch (error) {\n      this.logger.error('Error getting cache info', { error: error.message });\n      return null;\n    }\n  }\n\n  /**\n   * Check if there's any uncommitted work that would be lost\n   * Returns information about staging grounds with unsaved changes\n   */\n  getUncommittedWork() {\n    try {\n      const uncommittedWork = [];\n      const keys = Object.keys(localStorage);\n      const stagingKeys = keys.filter(key => key.startsWith('sgex_staging_') && !key.includes('_history_'));\n      \n      stagingKeys.forEach(key => {\n        try {\n          const data = JSON.parse(localStorage.getItem(key));\n          if (data && data.files && data.files.length > 0) {\n            // Extract repository and branch from key\n            const keyParts = key.replace('sgex_staging_', '').split('_');\n            const branch = keyParts.pop();\n            const repository = keyParts.join('_');\n            \n            uncommittedWork.push({\n              repository,\n              branch,\n              fileCount: data.files.length,\n              lastModified: data.timestamp ? new Date(data.timestamp) : null,\n              message: data.message || ''\n            });\n          }\n        } catch (e) {\n          // Skip invalid entries\n        }\n      });\n\n      return uncommittedWork;\n    } catch (error) {\n      this.logger.error('Error checking uncommitted work', { error: error.message });\n      return [];\n    }\n  }\n}\n\n// Export singleton instance\nconst cacheManagementService = new CacheManagementService();\nexport default cacheManagementService;","import React, { useState, useEffect } from 'react';\nimport issueTrackingService from '../services/issueTrackingService';\nimport githubService from '../services/githubService';\nimport './TrackedItemsViewer.css';\n\nconst TrackedItemsViewer = ({ onClose }) => {\n  const [trackedItems, setTrackedItems] = useState({ issues: [], pullRequests: [] });\n  const [loading, setLoading] = useState(true); // Start with loading=true immediately\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('issues');\n  const [syncing, setSyncing] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n  const [repositoryFilters, setRepositoryFilters] = useState({});\n  const [trackedRepositories, setTrackedRepositories] = useState([]);\n  const [sortBy, setSortBy] = useState('updated'); // 'updated', 'created', 'number'\n  const [sortOrder, setSortOrder] = useState('desc'); // 'asc', 'desc'\n\n  useEffect(() => {\n    // Start loading immediately when component mounts\n    loadTrackedItems();\n  }, []);\n\n  const loadTrackedItems = async () => {\n    try {\n      // Ensure loading state is immediately visible\n      setLoading(true);\n      setError(null);\n      \n      // Load all data concurrently for faster loading\n      const [items, filters, repositories] = await Promise.all([\n        issueTrackingService.getFilteredTrackedItems(),\n        issueTrackingService.getRepositoryFilters(),\n        issueTrackingService.getTrackedRepositories()\n      ]);\n      \n      setTrackedItems(items);\n      setRepositoryFilters(filters);\n      setTrackedRepositories(repositories);\n    } catch (err) {\n      console.error('Failed to load tracked items:', err);\n      setError('Failed to load tracked items');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSync = async () => {\n    if (!githubService.isAuth()) {\n      setError('Authentication required to sync items');\n      return;\n    }\n\n    try {\n      setSyncing(true);\n      await issueTrackingService.syncTrackedItems();\n      await loadTrackedItems(); // Reload after sync\n    } catch (err) {\n      console.error('Failed to sync tracked items:', err);\n      setError('Failed to sync tracked items');\n    } finally {\n      setSyncing(false);\n    }\n  };\n\n  const handleRemoveIssue = async (issueNumber) => {\n    try {\n      await issueTrackingService.removeTrackedIssue(issueNumber);\n      await loadTrackedItems(); // Reload after removal\n    } catch (err) {\n      console.error('Failed to remove tracked issue:', err);\n      setError('Failed to remove tracked issue');\n    }\n  };\n\n  const handleRemovePR = async (prNumber) => {\n    try {\n      await issueTrackingService.removeTrackedPR(prNumber);\n      await loadTrackedItems(); // Reload after removal\n    } catch (err) {\n      console.error('Failed to remove tracked PR:', err);\n      setError('Failed to remove tracked PR');\n    }\n  };\n\n  const handleRepositoryFilterChange = async (repository, hidden) => {\n    try {\n      await issueTrackingService.setRepositoryVisibility(repository, hidden);\n      await loadTrackedItems(); // Reload to apply filters\n    } catch (err) {\n      console.error('Failed to update repository filter:', err);\n      setError('Failed to update repository filter');\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString(undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const sortItems = (items, sortBy, sortOrder) => {\n    return [...items].sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'number':\n          comparison = a.number - b.number;\n          break;\n        case 'created':\n          comparison = new Date(a.created_at) - new Date(b.created_at);\n          break;\n        case 'updated':\n        default:\n          // Use updated_at if available, otherwise fall back to created_at\n          const aDate = new Date(a.updated_at || a.created_at);\n          const bDate = new Date(b.updated_at || b.created_at);\n          comparison = aDate - bDate;\n          break;\n      }\n      \n      return sortOrder === 'desc' ? -comparison : comparison;\n    });\n  };\n\n  const getSortedItems = (items) => {\n    return {\n      issues: sortItems(items.issues, sortBy, sortOrder),\n      pullRequests: sortItems(items.pullRequests, sortBy, sortOrder)\n    };\n  };\n\n  const getStateColor = (state) => {\n    switch (state) {\n      case 'open':\n        return '#28a745';\n      case 'closed':\n        return '#cb2431';\n      case 'merged':\n        return '#6f42c1';\n      default:\n        return '#6a737d';\n    }\n  };\n\n  const renderIssueItem = (issue) => (\n    <div key={issue.id} className=\"tracked-item\">\n      <div className=\"tracked-item-header\">\n        <div className=\"tracked-item-title\">\n          <a \n            href={issue.html_url} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"tracked-item-link\"\n          >\n            #{issue.number} {issue.title}\n          </a>\n        </div>\n        <div className=\"tracked-item-actions\">\n          <span \n            className=\"tracked-item-state\"\n            style={{ backgroundColor: getStateColor(issue.state) }}\n          >\n            {issue.state}\n          </span>\n          <button\n            onClick={() => handleRemoveIssue(issue.number)}\n            className=\"tracked-item-remove\"\n            title=\"Stop tracking this issue\"\n          >\n            ×\n          </button>\n        </div>\n      </div>\n      <div className=\"tracked-item-meta\">\n        <span className=\"tracked-item-repo\">{issue.repository}</span>\n        <span className=\"tracked-item-date\">Created {formatDate(issue.created_at)}</span>\n      </div>\n      {issue.labels && issue.labels.length > 0 && (\n        <div className=\"tracked-item-labels\">\n          {issue.labels.map((label, index) => (\n            <span\n              key={index}\n              className=\"tracked-item-label\"\n              style={{ backgroundColor: `#${label.color}` }}\n            >\n              {label.name}\n            </span>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n\n  const renderPRItem = (pr) => (\n    <div key={pr.id} className=\"tracked-item\">\n      <div className=\"tracked-item-header\">\n        <div className=\"tracked-item-title\">\n          <a \n            href={pr.html_url} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"tracked-item-link\"\n          >\n            #{pr.number} {pr.title}\n          </a>\n        </div>\n        <div className=\"tracked-item-actions\">\n          <span \n            className=\"tracked-item-state\"\n            style={{ backgroundColor: getStateColor(pr.state) }}\n          >\n            {pr.state}\n          </span>\n          <button\n            onClick={() => handleRemovePR(pr.number)}\n            className=\"tracked-item-remove\"\n            title=\"Stop tracking this PR\"\n          >\n            ×\n          </button>\n        </div>\n      </div>\n      <div className=\"tracked-item-meta\">\n        <span className=\"tracked-item-repo\">{pr.repository}</span>\n        <span className=\"tracked-item-date\">Created {formatDate(pr.created_at)}</span>\n      </div>\n      {pr.linkedIssues && pr.linkedIssues.length > 0 && (\n        <div className=\"tracked-item-linked\">\n          Linked to issues: {pr.linkedIssues.map(issue => `#${issue}`).join(', ')}\n        </div>\n      )}\n    </div>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"tracked-items-modal-overlay\">\n        <div className=\"tracked-items-modal\">\n          <div className=\"tracked-items-header\">\n            <h2>Tracked Items</h2>\n            <button onClick={onClose} className=\"tracked-items-close\">×</button>\n          </div>\n          <div className=\"tracked-items-loading\">\n            <div className=\"loading-spinner\"></div>\n            <p>Loading tracked items...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tracked-items-modal-overlay\">\n      <div className=\"tracked-items-modal\">\n        <div className=\"tracked-items-header\">\n          <h2>Tracked Items</h2>\n          <div className=\"tracked-items-header-actions\">\n            {trackedRepositories.length > 1 && (\n              <button\n                onClick={() => setShowFilters(!showFilters)}\n                className=\"tracked-items-filter-toggle\"\n                title=\"Filter repositories\"\n              >\n                🔽 Filters\n              </button>\n            )}\n            {githubService.isAuth() && (\n              <button\n                onClick={handleSync}\n                className=\"tracked-items-sync\"\n                disabled={syncing}\n                title=\"Sync with GitHub to update status\"\n              >\n                {syncing ? '🔄' : '↻'} {syncing ? 'Syncing...' : 'Sync'}\n              </button>\n            )}\n            <button onClick={onClose} className=\"tracked-items-close\">×</button>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"tracked-items-error\">\n            {error}\n            <button onClick={() => setError(null)}>×</button>\n          </div>\n        )}\n\n        {showFilters && trackedRepositories.length > 1 && (\n          <div className=\"tracked-items-filters\">\n            <h3>Repository Filters</h3>\n            <div className=\"repository-filters-list\">\n              {trackedRepositories.map(repository => (\n                <div key={repository} className=\"repository-filter-item\">\n                  <label className=\"repository-filter-label\">\n                    <input\n                      type=\"checkbox\"\n                      checked={!repositoryFilters[repository]?.hidden}\n                      onChange={(e) => handleRepositoryFilterChange(repository, !e.target.checked)}\n                      className=\"repository-filter-checkbox\"\n                    />\n                    <span className=\"repository-filter-name\">{repository}</span>\n                  </label>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div className=\"tracked-items-controls\">\n          <div className=\"tracked-items-sort-controls\">\n            <label htmlFor=\"sort-by\">Sort by:</label>\n            <select \n              id=\"sort-by\"\n              value={sortBy} \n              onChange={(e) => setSortBy(e.target.value)}\n              className=\"sort-select\"\n            >\n              <option value=\"updated\">Last Modified</option>\n              <option value=\"created\">Created Date</option>\n              <option value=\"number\">Issue/PR Number</option>\n            </select>\n            <select \n              value={sortOrder} \n              onChange={(e) => setSortOrder(e.target.value)}\n              className=\"sort-select\"\n            >\n              <option value=\"desc\">Newest First</option>\n              <option value=\"asc\">Oldest First</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"tracked-items-tabs\">\n          <button\n            className={`tracked-items-tab ${activeTab === 'issues' ? 'active' : ''}`}\n            onClick={() => setActiveTab('issues')}\n          >\n            Issues ({trackedItems.issues.length})\n          </button>\n          <button\n            className={`tracked-items-tab ${activeTab === 'pullRequests' ? 'active' : ''}`}\n            onClick={() => setActiveTab('pullRequests')}\n          >\n            Pull Requests ({trackedItems.pullRequests.length})\n          </button>\n        </div>\n\n        <div className=\"tracked-items-content\">\n          {(() => {\n            const sortedItems = getSortedItems(trackedItems);\n            \n            if (activeTab === 'issues') {\n              return (\n                <div className=\"tracked-items-list\">\n                  {sortedItems.issues.length === 0 ? (\n                    <div className=\"tracked-items-empty\">\n                      <p>No tracked issues yet.</p>\n                      <p>Issues you create while authenticated will appear here.</p>\n                    </div>\n                  ) : (\n                    sortedItems.issues.map(renderIssueItem)\n                  )}\n                </div>\n              );\n            }\n\n            if (activeTab === 'pullRequests') {\n              return (\n                <div className=\"tracked-items-list\">\n                  {sortedItems.pullRequests.length === 0 ? (\n                    <div className=\"tracked-items-empty\">\n                      <p>No tracked pull requests yet.</p>\n                      <p>PRs related to your tracked issues will appear here automatically.</p>\n                    </div>\n                  ) : (\n                    sortedItems.pullRequests.map(renderPRItem)\n                  )}\n                </div>\n              );\n            }\n            \n            return null;\n          })()}\n        </div>\n\n        <div className=\"tracked-items-footer\">\n          <p className=\"tracked-items-help\">\n            Items are tracked locally in your browser. \n            {githubService.isAuth() ? ' Use sync to update status from GitHub.' : ' Login to sync status with GitHub.'}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrackedItemsViewer;","import React, { useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// Default UN languages\nconst UN_LANGUAGES = [\n  { code: 'en', name: 'language.english', flag: '🇺🇸' },\n  { code: 'fr', name: 'language.french', flag: '🇫🇷' },\n  { code: 'es', name: 'language.spanish', flag: '🇪🇸' },\n  { code: 'ar', name: 'language.arabic', flag: '🇸🇦' },\n  { code: 'zh', name: 'language.chinese', flag: '🇨🇳' },\n  { code: 'ru', name: 'language.russian', flag: '🇷🇺' }\n];\n\n// Comprehensive ISO 639-1 language list with native names and English names for searchability\nconst ADDITIONAL_LANGUAGES = [\n  // European languages\n  { code: 'de', name: 'Deutsch', englishName: 'German', flag: '🇩🇪' },\n  { code: 'it', name: 'Italiano', englishName: 'Italian', flag: '🇮🇹' },\n  { code: 'pt', name: 'Português', englishName: 'Portuguese', flag: '🇵🇹' },\n  { code: 'nl', name: 'Nederlands', englishName: 'Dutch', flag: '🇳🇱' },\n  { code: 'sv', name: 'Svenska', englishName: 'Swedish', flag: '🇸🇪' },\n  { code: 'no', name: 'Norsk', englishName: 'Norwegian', flag: '🇳🇴' },\n  { code: 'da', name: 'Dansk', englishName: 'Danish', flag: '🇩🇰' },\n  { code: 'fi', name: 'Suomi', englishName: 'Finnish', flag: '🇫🇮' },\n  { code: 'pl', name: 'Polski', englishName: 'Polish', flag: '🇵🇱' },\n  { code: 'cs', name: 'Čeština', englishName: 'Czech', flag: '🇨🇿' },\n  { code: 'sk', name: 'Slovenčina', englishName: 'Slovak', flag: '🇸🇰' },\n  { code: 'hu', name: 'Magyar', englishName: 'Hungarian', flag: '🇭🇺' },\n  { code: 'ro', name: 'Română', englishName: 'Romanian', flag: '🇷🇴' },\n  { code: 'bg', name: 'Български', englishName: 'Bulgarian', flag: '🇧🇬' },\n  { code: 'hr', name: 'Hrvatski', englishName: 'Croatian', flag: '🇭🇷' },\n  { code: 'el', name: 'Ελληνικά', englishName: 'Greek', flag: '🇬🇷' },\n  { code: 'sr', name: 'Српски', englishName: 'Serbian', flag: '🇷🇸' },\n  { code: 'sl', name: 'Slovenščina', englishName: 'Slovenian', flag: '🇸🇮' },\n  { code: 'lv', name: 'Latviešu', englishName: 'Latvian', flag: '🇱🇻' },\n  { code: 'lt', name: 'Lietuvių', englishName: 'Lithuanian', flag: '🇱🇹' },\n  { code: 'et', name: 'Eesti', englishName: 'Estonian', flag: '🇪🇪' },\n  { code: 'mt', name: 'Malti', englishName: 'Maltese', flag: '🇲🇹' },\n  { code: 'is', name: 'Íslenska', englishName: 'Icelandic', flag: '🇮🇸' },\n  { code: 'ga', name: 'Gaeilge', englishName: 'Irish', flag: '🇮🇪' },\n  { code: 'cy', name: 'Cymraeg', englishName: 'Welsh', flag: '🏴' },\n  { code: 'eu', name: 'Euskera', englishName: 'Basque', flag: '🇪🇸' },\n  { code: 'ca', name: 'Català', englishName: 'Catalan', flag: '🇪🇸' },\n  { code: 'gl', name: 'Galego', englishName: 'Galician', flag: '🇪🇸' },\n\n  // Middle Eastern & Turkic languages\n  { code: 'tr', name: 'Türkçe', englishName: 'Turkish', flag: '🇹🇷' },\n  { code: 'he', name: 'עברית', englishName: 'Hebrew', flag: '🇮🇱' },\n  { code: 'fa', name: 'فارسی', englishName: 'Persian', flag: '🇮🇷' },\n  { code: 'ur', name: 'اردو', englishName: 'Urdu', flag: '🇵🇰' },\n  { code: 'ku', name: 'Kurdî', englishName: 'Kurdish', flag: '🇹🇷' },\n  { code: 'az', name: 'Azərbaycan', englishName: 'Azerbaijani', flag: '🇦🇿' },\n  { code: 'hy', name: 'Հայերեն', englishName: 'Armenian', flag: '🇦🇲' },\n  { code: 'ka', name: 'ქართული', englishName: 'Georgian', flag: '🇬🇪' },\n\n  // Asian languages\n  { code: 'ja', name: '日本語', englishName: 'Japanese', flag: '🇯🇵' },\n  { code: 'ko', name: '한국어', englishName: 'Korean', flag: '🇰🇷' },\n  { code: 'hi', name: 'हिन्दी', englishName: 'Hindi', flag: '🇮🇳' },\n  { code: 'th', name: 'ไทย', englishName: 'Thai', flag: '🇹🇭' },\n  { code: 'vi', name: 'Tiếng Việt', englishName: 'Vietnamese', flag: '🇻🇳' },\n  { code: 'bn', name: 'বাংলা', englishName: 'Bengali', flag: '🇧🇩' },\n  { code: 'ta', name: 'தமிழ்', englishName: 'Tamil', flag: '🇮🇳' },\n  { code: 'te', name: 'తెలుగు', englishName: 'Telugu', flag: '🇮🇳' },\n  { code: 'ml', name: 'മലയാളം', englishName: 'Malayalam', flag: '🇮🇳' },\n  { code: 'kn', name: 'ಕನ್ನಡ', englishName: 'Kannada', flag: '🇮🇳' },\n  { code: 'gu', name: 'ગુજરાતી', englishName: 'Gujarati', flag: '🇮🇳' },\n  { code: 'mr', name: 'मराठी', englishName: 'Marathi', flag: '🇮🇳' },\n  { code: 'pa', name: 'ਪੰਜਾਬੀ', englishName: 'Punjabi', flag: '🇮🇳' },\n  { code: 'or', name: 'ଓଡ଼ିଆ', englishName: 'Odia', flag: '🇮🇳' },\n  { code: 'as', name: 'অসমীয়া', englishName: 'Assamese', flag: '🇮🇳' },\n  { code: 'ne', name: 'नेपाली', englishName: 'Nepali', flag: '🇳🇵' },\n  { code: 'si', name: 'සිංහල', englishName: 'Sinhala', flag: '🇱🇰' },\n  { code: 'my', name: 'မြန်မာ', englishName: 'Myanmar', flag: '🇲🇲' },\n  { code: 'km', name: 'ខ្មែរ', englishName: 'Khmer', flag: '🇰🇭' },\n  { code: 'lo', name: 'ລາວ', englishName: 'Lao', flag: '🇱🇦' },\n  { code: 'mn', name: 'Монгол', englishName: 'Mongolian', flag: '🇲🇳' },\n  { code: 'bo', name: 'བོད་ཡིག', englishName: 'Tibetan', flag: '🇨🇳' },\n  { code: 'dz', name: 'རྫོང་ཁ', englishName: 'Dzongkha', flag: '🇧🇹' },\n\n  // Southeast Asian languages\n  { code: 'id', name: 'Bahasa Indonesia', englishName: 'Indonesian', flag: '🇮🇩' },\n  { code: 'ms', name: 'Bahasa Melayu', englishName: 'Malay', flag: '🇲🇾' },\n  { code: 'tl', name: 'Filipino', englishName: 'Filipino', flag: '🇵🇭' },\n  { code: 'ceb', name: 'Cebuano', englishName: 'Cebuano', flag: '🇵🇭' },\n  { code: 'jv', name: 'Basa Jawa', englishName: 'Javanese', flag: '🇮🇩' },\n\n  // African languages\n  { code: 'sw', name: 'Kiswahili', englishName: 'Swahili', flag: '🇰🇪' },\n  { code: 'am', name: 'አማርኛ', englishName: 'Amharic', flag: '🇪🇹' },\n  { code: 'yo', name: 'Yorùbá', englishName: 'Yoruba', flag: '🇳🇬' },\n  { code: 'ig', name: 'Igbo', englishName: 'Igbo', flag: '🇳🇬' },\n  { code: 'ha', name: 'Hausa', englishName: 'Hausa', flag: '🇳🇬' },\n  { code: 'zu', name: 'isiZulu', englishName: 'Zulu', flag: '🇿🇦' },\n  { code: 'af', name: 'Afrikaans', englishName: 'Afrikaans', flag: '🇿🇦' },\n  { code: 'xh', name: 'isiXhosa', englishName: 'Xhosa', flag: '🇿🇦' },\n  { code: 'st', name: 'Sesotho', englishName: 'Sotho', flag: '🇱🇸' },\n  { code: 'tn', name: 'Setswana', englishName: 'Tswana', flag: '🇧🇼' },\n  { code: 'ss', name: 'SiSwati', englishName: 'Swati', flag: '🇸🇿' },\n  { code: 've', name: 'Tshivenḓa', englishName: 'Venda', flag: '🇿🇦' },\n  { code: 'ts', name: 'Xitsonga', englishName: 'Tsonga', flag: '🇿🇦' },\n  { code: 'sn', name: 'ChiShona', englishName: 'Shona', flag: '🇿🇼' },\n  { code: 'ny', name: 'ChiCheŵa', englishName: 'Chewa', flag: '🇲🇼' },\n  { code: 'rw', name: 'Kinyarwanda', englishName: 'Kinyarwanda', flag: '🇷🇼' },\n  { code: 'rn', name: 'Kirundi', englishName: 'Kirundi', flag: '🇧🇮' },\n  { code: 'lg', name: 'Luganda', englishName: 'Luganda', flag: '🇺🇬' },\n  { code: 'so', name: 'Soomaali', englishName: 'Somali', flag: '🇸🇴' },\n  { code: 'om', name: 'Afaan Oromoo', englishName: 'Oromo', flag: '🇪🇹' },\n  { code: 'ti', name: 'ትግርኛ', englishName: 'Tigrinya', flag: '🇪🇷' },\n\n  // Latin American indigenous languages\n  { code: 'qu', name: 'Quechua', englishName: 'Quechua', flag: '🇵🇪' },\n  { code: 'gn', name: 'Guaraní', englishName: 'Guarani', flag: '🇵🇾' },\n  { code: 'ay', name: 'Aymará', englishName: 'Aymara', flag: '🇧🇴' },\n\n  // Pacific languages\n  { code: 'mi', name: 'Te Reo Māori', englishName: 'Maori', flag: '🇳🇿' },\n  { code: 'sm', name: 'Gagana Samoa', englishName: 'Samoan', flag: '🇼🇸' },\n  { code: 'to', name: 'Lea Faka-Tonga', englishName: 'Tongan', flag: '🇹🇴' },\n  { code: 'fj', name: 'Na Vosa Vakaviti', englishName: 'Fijian', flag: '🇫🇯' },\n\n  // Additional European languages\n  { code: 'fo', name: 'Føroyskt', englishName: 'Faroese', flag: '🇫🇴' },\n  { code: 'kl', name: 'Kalaallisut', englishName: 'Greenlandic', flag: '🇬🇱' },\n  { code: 'se', name: 'Davvisámegiella', englishName: 'Northern Sami', flag: '🇳🇴' },\n\n  // Other languages\n  { code: 'eo', name: 'Esperanto', englishName: 'Esperanto', flag: '🌍' },\n  { code: 'la', name: 'Latina', englishName: 'Latin', flag: '🇻🇦' },\n  { code: 'sa', name: 'संस्कृतम्', englishName: 'Sanskrit', flag: '🇮🇳' }\n];\n\nconst LanguageSelector = ({ className = '' }) => {\n  const { i18n, t } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedLanguages, setSelectedLanguages] = useState(() => {\n    // Get selected languages from localStorage or default to UN languages\n    const saved = localStorage.getItem('sgex-selected-languages');\n    return saved ? JSON.parse(saved) : UN_LANGUAGES.map(lang => lang.code);\n  });\n\n  // Get available languages (UN languages + any additional selected languages)\n  const availableLanguages = useMemo(() => {\n    // Start with all UN languages\n    const languages = [...UN_LANGUAGES];\n    \n    // Add any additional languages that have been selected\n    selectedLanguages.forEach(langCode => {\n      // If this language code is not already in UN_LANGUAGES, find it in ADDITIONAL_LANGUAGES\n      if (!UN_LANGUAGES.some(unLang => unLang.code === langCode)) {\n        const additionalLang = ADDITIONAL_LANGUAGES.find(addLang => addLang.code === langCode);\n        if (additionalLang) {\n          languages.push({\n            code: additionalLang.code,\n            name: additionalLang.name, // Use the native name for additional languages\n            englishName: additionalLang.englishName, // Include English name for consistency\n            flag: additionalLang.flag\n          });\n        }\n      }\n    });\n    \n    // Map the languages to include translated names for UN languages\n    return languages.map(lang => ({\n      ...lang,\n      name: UN_LANGUAGES.some(unLang => unLang.code === lang.code) ? t(lang.name) : lang.name\n    }));\n  }, [selectedLanguages, t]);\n\n  // Get searchable languages (excluding already selected ones)\n  const searchableLanguages = useMemo(() => {\n    if (!searchTerm) return [];\n    \n    const searchLower = searchTerm.toLowerCase();\n    return ADDITIONAL_LANGUAGES.filter(lang => \n      !selectedLanguages.includes(lang.code) &&\n      (lang.name.toLowerCase().includes(searchLower) || \n       lang.englishName.toLowerCase().includes(searchLower) ||\n       lang.code.toLowerCase().includes(searchLower))\n    ).slice(0, 10); // Limit to 10 results\n  }, [searchTerm, selectedLanguages]);\n\n  const currentLanguage = availableLanguages.find(lang => lang.code === i18n.language) || availableLanguages[0];\n\n  const handleLanguageChange = (langCode) => {\n    i18n.changeLanguage(langCode);\n    setIsOpen(false);\n    setSearchTerm('');\n  };\n\n  const handleAddLanguage = (langCode) => {\n    const newSelectedLanguages = [...selectedLanguages, langCode];\n    setSelectedLanguages(newSelectedLanguages);\n    localStorage.setItem('sgex-selected-languages', JSON.stringify(newSelectedLanguages));\n    \n    // Optionally switch to the newly added language\n    i18n.changeLanguage(langCode);\n    setIsOpen(false);\n    setSearchTerm('');\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div className={`language-selector ${className}`}>\n      <button\n        className=\"language-toggle\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label={t('language.select')}\n        title={t('language.select')}\n      >\n        <span className=\"language-icon\">🐾🎧</span>\n        <span className=\"language-name\">{currentLanguage?.name}</span>\n        <span className={`dropdown-arrow ${isOpen ? 'open' : ''}`}>▼</span>\n      </button>\n      \n      {isOpen && (\n        <div className=\"language-dropdown\">\n          {/* Available Languages */}\n          {availableLanguages.map((language) => (\n            <button\n              key={language.code}\n              className={`language-option ${i18n.language === language.code ? 'active' : ''}`}\n              onClick={() => handleLanguageChange(language.code)}\n            >\n              <span className=\"language-flag\">{language.flag}</span>\n              <span className=\"language-name\">{language.name}</span>\n              {i18n.language === language.code && (\n                <span className=\"language-checkmark\">✓</span>\n              )}\n            </button>\n          ))}\n          \n          {/* Search Section */}\n          <div className=\"language-search-section\">\n            <div className=\"language-search-divider\"></div>\n            <div className=\"language-search-input\">\n              <input\n                type=\"text\"\n                placeholder={t('language.search')}\n                value={searchTerm}\n                onChange={handleSearchChange}\n                className=\"language-search\"\n                autoFocus={false}\n              />\n            </div>\n            \n            {/* Search Results */}\n            {searchableLanguages.map((language) => (\n              <button\n                key={language.code}\n                className=\"language-option language-option-addable\"\n                onClick={() => handleAddLanguage(language.code)}\n              >\n                <span className=\"language-flag\">{language.flag}</span>\n                <span className=\"language-name\">\n                  {language.name}\n                  {language.englishName !== language.name && (\n                    <span className=\"language-english-name\"> ({language.englishName})</span>\n                  )}\n                </span>\n                <span className=\"language-add-icon\">+</span>\n              </button>\n            ))}\n            \n            {searchTerm && searchableLanguages.length === 0 && (\n              <div className=\"language-no-results\">\n                No languages found for \"{searchTerm}\"\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LanguageSelector;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport helpContentService from '../services/helpContentService';\nimport tutorialService from '../services/tutorialService';\nimport cacheManagementService from '../services/cacheManagementService';\nimport issueTrackingService from '../services/issueTrackingService';\nimport githubService from '../services/githubService';\nimport HelpModal from './HelpModal';\nimport TrackedItemsViewer from './TrackedItemsViewer';\nimport LanguageSelector from './LanguageSelector';\nimport useThemeImage from '../hooks/useThemeImage';\nimport { getSavedTheme, toggleTheme } from '../utils/themeManager';\nimport { ALT_TEXT_KEYS, getAltText } from '../utils/imageAltTextHelper';\n\n// Help state persistence utilities\nconst HELP_STATE_KEY = 'sgex-help-state';\n\nconst getSavedHelpState = () => {\n  try {\n    const savedState = localStorage.getItem(HELP_STATE_KEY);\n    return savedState ? parseInt(savedState, 10) : 0;\n  } catch (error) {\n    console.warn('Failed to load help state from localStorage:', error);\n    return 0;\n  }\n};\n\nconst saveHelpState = (state) => {\n  try {\n    localStorage.setItem(HELP_STATE_KEY, state.toString());\n  } catch (error) {\n    console.warn('Failed to save help state to localStorage:', error);\n  }\n};\n\nconst ContextualHelpMascot = ({ pageId, helpContent, position = 'bottom-right', contextData = {}, notificationBadge = false }) => {\n  const { t, i18n } = useTranslation();\n  const { user, repo } = useParams(); // Extract DAK context from URL\n  const [showHelp, setShowHelp] = useState(false);\n  const [helpSticky, setHelpSticky] = useState(false);\n  const [selectedHelpTopic, setSelectedHelpTopic] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(getSavedTheme() === 'dark');\n  const [cacheClearing, setCacheClearing] = useState(false);\n  const [cacheCleared, setCacheCleared] = useState(false);\n  const [showTrackedItems, setShowTrackedItems] = useState(false);\n  const [trackedItemsCount, setTrackedItemsCount] = useState(0);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [helpState, setHelpState] = useState(() => getSavedHelpState()); // 0: hidden, 1: non-sticky, 2: sticky\n\n  // Theme-aware mascot image\n  const mascotImage = useThemeImage('sgex-mascot.png');\n\n  // Initialize help state from saved preferences and sync with derived states\n  useEffect(() => {\n    const savedState = getSavedHelpState();\n    setHelpState(savedState);\n    \n    // Set derived states based on saved help state\n    switch (savedState) {\n      case 0: // Hidden\n        setShowHelp(false);\n        setHelpSticky(false);\n        break;\n      case 1: // Non-sticky (shown)\n        setShowHelp(true);\n        setHelpSticky(false);\n        break;\n      case 2: // Sticky (shown)\n        setShowHelp(true);\n        setHelpSticky(true);\n        break;\n    }\n  }, []);\n\n  // Save help state whenever it changes\n  useEffect(() => {\n    saveHelpState(helpState);\n  }, [helpState]);\n\n  // Sync local state with actual theme on mount\n  useEffect(() => {\n    const currentTheme = getSavedTheme();\n    setIsDarkMode(currentTheme === 'dark');\n  }, []);\n\n  // Update document direction for RTL languages\n  useEffect(() => {\n    const currentLang = i18n.language || 'en';\n    const isRTL = ['ar', 'he', 'fa'].includes(currentLang);\n    document.documentElement.dir = isRTL ? 'rtl' : 'ltr';\n    document.documentElement.lang = currentLang;\n  }, [i18n.language]);\n\n  // Monitor authentication state and tracked items count\n  useEffect(() => {\n    const updateAuthAndTrackedCount = async () => {\n      const authenticated = githubService.isAuth();\n      setIsAuthenticated(authenticated);\n      \n      if (authenticated) {\n        try {\n          const counts = await issueTrackingService.getTrackedCounts();\n          // Only update count if it's different to prevent flashing\n          setTrackedItemsCount(prevCount => {\n            return prevCount !== counts.total ? counts.total : prevCount;\n          });\n        } catch (error) {\n          console.warn('Failed to get tracked items count:', error);\n          setTrackedItemsCount(0);\n        }\n      } else {\n        setTrackedItemsCount(0);\n      }\n    };\n\n    // Update immediately\n    updateAuthAndTrackedCount();\n\n    // Set up periodic updates every 60 seconds when authenticated (less frequent to reduce flashing)\n    const interval = setInterval(updateAuthAndTrackedCount, 60000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Start background sync when authenticated\n  useEffect(() => {\n    if (isAuthenticated) {\n      issueTrackingService.startBackgroundSync();\n    } else {\n      issueTrackingService.stopBackgroundSync();\n    }\n\n    return () => {\n      issueTrackingService.stopBackgroundSync();\n    };\n  }, [isAuthenticated]);\n\n  // Auto-enable DAK repository filter when visiting a DAK page\n  useEffect(() => {\n    const enableDAKFilter = async () => {\n      if (isAuthenticated && user && repo) {\n        const dakRepository = `${user}/${repo}`;\n        try {\n          await issueTrackingService.enableDAKRepositoryFilter(dakRepository);\n        } catch (error) {\n          console.warn('Failed to enable DAK repository filter:', error);\n        }\n      }\n    };\n\n    enableDAKFilter();\n  }, [isAuthenticated, user, repo]);\n\n  const handleToggleTheme = () => {\n    const newTheme = toggleTheme();\n    setIsDarkMode(newTheme === 'dark');\n  };\n\n  // Get help topics for the page\n  const helpTopics = pageId ? helpContentService.getHelpTopicsForPage(pageId, contextData) : [];\n\n  // Enhanced help topics with tracked items functionality\n  const enhancedHelpTopics = [\n    ...helpTopics,\n    // Add tracked items topic when authenticated - show immediately without waiting for count\n    ...(isAuthenticated ? [{\n      id: 'tracked-items',\n      title: trackedItemsCount > 0 ? `Tracked Items (${trackedItemsCount})` : 'Tracked Items',\n      badge: '/sgex/cat-paw-icon.svg',\n      type: 'action',\n      action: () => setShowTrackedItems(true)\n    }] : [])\n  ];\n\n  const handleMouseEnter = () => {\n    // Only show on hover if we're in non-sticky state (state 1)\n    if (helpState === 1) {\n      setShowHelp(true);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    // Only hide on mouse leave if we're in non-sticky state (state 1)\n    if (helpState === 1) {\n      setShowHelp(false);\n    }\n  };\n\n  const handleClick = () => {\n    // Cycle through three states: 0 (hidden) -> 1 (non-sticky) -> 2 (sticky) -> 0 (hidden)\n    const nextState = (helpState + 1) % 3;\n    setHelpState(nextState);\n    \n    switch (nextState) {\n      case 0: // Hidden\n        setShowHelp(false);\n        setHelpSticky(false);\n        break;\n      case 1: // Non-sticky (shown)\n        setShowHelp(true);\n        setHelpSticky(false);\n        break;\n      case 2: // Sticky (shown)\n        setShowHelp(true);\n        setHelpSticky(true);\n        break;\n    }\n  };\n\n  const handleCloseHelp = () => {\n    setShowHelp(false);\n    setHelpSticky(false);\n    setHelpState(0); // Reset to hidden state\n  };\n\n  const handleHelpTopicClick = (topic) => {\n    // Check if this is an enhanced tutorial\n    if (topic.tutorialId) {\n      setSelectedHelpTopic({ ...topic, type: 'enhanced-tutorial' });\n      setShowHelp(false);\n      setHelpSticky(false);\n      setHelpState(0); // Reset to hidden state\n      return;\n    }\n    \n    // If it's an action type, execute the action immediately\n    if (topic.type === 'action' && topic.action) {\n      topic.action();\n      setShowHelp(false);\n      setHelpSticky(false);\n      setHelpState(0); // Reset to hidden state\n    } else {\n      // For slideshow and other types, show in modal\n      setSelectedHelpTopic(topic);\n      setShowHelp(false);\n      setHelpSticky(false);\n      setHelpState(0); // Reset to hidden state\n    }\n  };\n\n  const handleCloseModal = () => {\n    setSelectedHelpTopic(null);\n  };\n\n  const handleFlushCache = async () => {\n    if (cacheClearing) return; // Prevent multiple clicks\n    \n    setCacheClearing(true);\n    setCacheCleared(false);\n    \n    try {\n      const success = cacheManagementService.clearAllCache();\n      if (success) {\n        setCacheCleared(true);\n        // Auto-hide success message after 3 seconds\n        setTimeout(() => {\n          setCacheCleared(false);\n        }, 3000);\n      } else {\n        console.error('Failed to clear cache');\n        alert('Failed to clear cache. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error clearing cache:', error);\n      alert('Error clearing cache. Please try again.');\n    } finally {\n      setCacheClearing(false);\n    }\n  };\n\n  // Always render the mascot now since we have universal topics\n  // if (!hasTopics) {\n  //   return null;\n  // }\n\n  return (\n    <>\n      <div className={`contextual-help-mascot ${position}`}>\n        <div \n          className=\"mascot-container\"\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          onClick={handleClick}\n        >\n          <img \n            src={mascotImage} \n            alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Helper')} \n            className=\"mascot-icon\"\n          />\n          \n          {/* Notification badge for important help messages only (not for tracked items count) */}\n          {notificationBadge && (\n            <div className=\"notification-badge\">\n              !\n            </div>\n          )}\n          \n          {/* Question mark thought bubble - show when no notification badge */}\n          {!notificationBadge && (\n            <div className={`question-bubble ${showHelp ? 'help-open' : ''}`}>\n              ?\n            </div>\n          )}\n        </div>\n        \n        {showHelp && (\n          <div className=\"help-thought-bubble\">\n            <div className=\"bubble-content\">\n              {helpState === 2 && (\n                <button \n                  className=\"close-bubble-btn\"\n                  onClick={handleCloseHelp}\n                  aria-label=\"Close help\"\n                >\n                  ×\n                </button>\n              )}\n              <div className=\"help-text\">\n                {enhancedHelpTopics.length > 0 ? (\n                  <div className=\"help-topics-list\">\n                    <h4>{t('help.title')}</h4>\n                    {enhancedHelpTopics.map((topic) => (\n                      <button\n                        key={topic.id}\n                        className=\"help-topic-btn\"\n                        onClick={() => handleHelpTopicClick(topic)}\n                      >\n                        {topic.badge && (\n                          <img \n                            src={topic.badge} \n                            alt=\"\" \n                            className=\"help-topic-badge\"\n                          />\n                        )}\n                        <span className=\"help-topic-title\">{topic.title}</span>\n                        {topic.notificationBadge && (\n                          <span className=\"help-topic-notification-badge\">\n                            {topic.notificationBadge}\n                          </span>\n                        )}\n                      </button>\n                    ))}\n                    \n                    {/* Language Selector in Help Menu */}\n                    <div className=\"help-menu-divider\"></div>\n                    <LanguageSelector className=\"help-menu-language-selector\" />\n                    \n                    {/* Theme Toggle in Help Menu */}\n                    <div className=\"help-menu-divider\"></div>\n                    <button \n                      className={`help-theme-toggle-btn ${isDarkMode ? 'dark' : 'light'}`}\n                      onClick={handleToggleTheme}\n                      aria-label={t('theme.toggle')}\n                      title={t('theme.toggle')}\n                    >\n                      <span className=\"theme-icon\">{isDarkMode ? '🌞' : '🌙'}</span>\n                      <span className=\"theme-label\">{isDarkMode ? t('theme.switchToLight', 'Light Mode') : t('theme.switchToDark', 'Dark Mode')}</span>\n                    </button>\n                    \n                    {/* Flush Cache Option */}\n                    <div className=\"help-menu-divider\"></div>\n                    <div className=\"help-menu-cache-section\">\n                      {cacheCleared ? (\n                        <div className=\"cache-success-message\">\n                          ✅ Cache cleared successfully!\n                        </div>\n                      ) : (\n                        <button\n                          className=\"help-cache-btn\"\n                          onClick={handleFlushCache}\n                          disabled={cacheClearing}\n                          title=\"Clear all cached data including repository info, branch context, and staging ground data\"\n                        >\n                          {cacheClearing ? '🔄 Clearing...' : '🗑️ Flush Cache'}\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div>\n                    {helpContent}\n                    {/* Language Selector in Help Menu */}\n                    <div className=\"help-menu-divider\"></div>\n                    <LanguageSelector className=\"help-menu-language-selector\" />\n                    \n                    {/* Theme Toggle in Help Menu */}\n                    <div className=\"help-menu-divider\"></div>\n                    <button \n                      className={`help-theme-toggle-btn ${isDarkMode ? 'dark' : 'light'}`}\n                      onClick={handleToggleTheme}\n                      aria-label={t('theme.toggle')}\n                      title={t('theme.toggle')}\n                    >\n                      <span className=\"theme-icon\">{isDarkMode ? '🌞' : '🌙'}</span>\n                      <span className=\"theme-label\">{isDarkMode ? t('theme.switchToLight', 'Light Mode') : t('theme.switchToDark', 'Dark Mode')}</span>\n                    </button>\n                    \n                    {/* Flush Cache Option */}\n                    <div className=\"help-menu-divider\"></div>\n                    <div className=\"help-menu-cache-section\">\n                      {cacheCleared ? (\n                        <div className=\"cache-success-message\">\n                          ✅ Cache cleared successfully!\n                        </div>\n                      ) : (\n                        <button\n                          className=\"help-cache-btn\"\n                          onClick={handleFlushCache}\n                          disabled={cacheClearing}\n                          title=\"Clear all cached data including repository info, branch context, and staging ground data\"\n                        >\n                          {cacheClearing ? '🔄 Clearing...' : '🗑️ Flush Cache'}\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"bubble-tail\"></div>\n          </div>\n        )}\n      </div>\n      \n      {/* Help Modal for displaying slideshow content */}\n      {selectedHelpTopic && (\n        <HelpModal\n          helpTopic={selectedHelpTopic}\n          tutorialId={selectedHelpTopic.type === 'enhanced-tutorial' ? selectedHelpTopic.tutorialId : null}\n          contextData={contextData}\n          onClose={handleCloseModal}\n        />\n      )}\n\n      {/* Tracked Items Viewer Modal */}\n      {showTrackedItems && (\n        <TrackedItemsViewer\n          onClose={() => setShowTrackedItems(false)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContextualHelpMascot;","// Help Content Service - Provides page-specific help topics and content\nimport repositoryConfig from '../config/repositoryConfig';\n\nclass HelpContentService {\n  constructor() {\n    // Universal help topics that appear on all pages\n    this.universalTopics = {\n      documentation: {\n        id: 'sgex-documentation',\n        title: 'View Documentation',\n        badge: '/sgex/cat-paw-info-icon.svg',\n        type: 'action',\n        action: () => {\n          // Navigate to documentation viewer in the same window\n          const currentPath = window.location.pathname;\n          \n          // Determine the correct documentation path based on deployment context\n          let docsPath = '';\n          \n          if (currentPath.includes('/sgex')) {\n            const pathParts = currentPath.split('/');\n            const sgexIndex = pathParts.indexOf('sgex');\n            \n            if (sgexIndex !== -1 && pathParts.length > sgexIndex + 1) {\n              const potentialBranch = pathParts[sgexIndex + 1];\n              \n              // Check if we're in a branch deployment (not main app pages)\n              const mainAppPages = ['dashboard', 'docs', 'select_profile', 'dak-action', 'dak-selection', 'main'];\n              \n              if (potentialBranch && !mainAppPages.includes(potentialBranch)) {\n                // We're in a feature branch deployment: /sgex/branch-name\n                docsPath = `/sgex/${potentialBranch}/docs`;\n              } else {\n                // We're in the main deployment or a main app page\n                docsPath = '/sgex/main/docs';\n              }\n            } else {\n              // Fallback to main if we can't determine branch\n              docsPath = '/sgex/main/docs';\n            }\n          } else {\n            // Not in a /sgex path, default to main\n            docsPath = '/sgex/main/docs';\n          }\n          \n          // Navigate to docs with overview as the default document\n          window.location.href = `${docsPath}/overview`;\n        },\n        content: `\n          <p>Access comprehensive documentation and guides for using SGEX Workbench.</p>\n          <div class=\"help-tip\">\n            <strong>📖 Available Documentation:</strong> Requirements, Architecture, DAK Components, User Guides, and more.\n          </div>\n        `\n      },\n      workflows: {\n        id: 'sgex-workflows',\n        title: 'View Deployment Workflows',\n        badge: '/sgex/cat-paw-workflow-icon.svg',\n        type: 'action',\n        action: () => {\n          // Open workflows in GitHub Actions tab\n          const repoUrl = repositoryConfig.getGitHubUrl();\n          window.open(`${repoUrl}/actions`, '_blank');\n        },\n        content: `\n          <p>Access GitHub Actions workflows for automated deployment and quality checks.</p>\n          <div class=\"help-tip\">\n            <strong>🔄 Available Workflows:</strong> Branch deployment, landing page deployment, PR feedback, security scanning, and compliance checks.\n          </div>\n          <div class=\"workflow-links\">\n            <h4>🚀 Deployment Workflows:</h4>\n            <ul>\n              <li><a href=\"${repositoryConfig.getGitHubUrl()}/blob/main/.github/workflows/branch-deployment.yml\" target=\"_blank\">Branch Deployment</a> - Deploy feature branches for preview</li>\n              <li><a href=\"${repositoryConfig.getGitHubUrl()}/blob/main/.github/workflows/landing-page-deployment.yml\" target=\"_blank\">Landing Page Deployment</a> - Deploy main app to production</li>\n            </ul>\n            <h4>🛡️ Quality & Security Workflows:</h4>\n            <ul>\n              <li><a href=\"${repositoryConfig.getGitHubUrl()}/blob/main/.github/workflows/framework-compliance.yml\" target=\"_blank\">Framework Compliance</a> - Code quality and standards</li>\n              <li><a href=\"${repositoryConfig.getGitHubUrl()}/blob/main/.github/workflows/dependency-security.yml\" target=\"_blank\">Security Scanning</a> - Dependency vulnerability checks</li>\n            </ul>\n            <h4>💬 Feedback Workflows:</h4>\n            <ul>\n              <li><a href=\"${repositoryConfig.getGitHubUrl()}/blob/main/.github/workflows/pr-commit-feedback.yml\" target=\"_blank\">PR Commit Feedback</a> - Real-time PR status updates</li>\n              <li><a href=\"${repositoryConfig.getGitHubUrl()}/blob/main/.github/workflows/review.yml\" target=\"_blank\">Review Deployment</a> - Auto-deploy on approval</li>\n            </ul>\n          </div>\n        `\n      },\n      bugReport: {\n        id: 'report-sgex-bug',\n        title: 'Report a SGeX bug',\n        badge: '/sgex/cat-paw-bug-icon.svg',\n        type: 'slideshow',\n        content: [\n          {\n            title: 'Report a Bug or Issue',\n            content: `\n              <p>Help us improve SGeX by reporting bugs and issues:</p>\n              <h4>What type of issue are you experiencing?</h4>\n              <div class=\"bug-report-options\">\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openSgexIssue('bug')\">\n                  🐛 Bug Report - Something isn't working correctly\n                </button>\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openSgexIssue('feature')\">\n                  ✨ Feature Request - Suggest a new feature or improvement\n                </button>\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openSgexIssue('question')\">\n                  ❓ Question - Ask for help or clarification\n                </button>\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openSgexIssue('documentation')\">\n                  📚 Documentation Issue - Report problems with documentation\n                </button>\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openSgexIssue('blank')\">\n                  📝 Blank Issue - Create an issue without a template\n                </button>\n              </div>\n              <div class=\"help-tip\">\n                <strong>💡 Tip:</strong> Please provide as much detail as possible including steps to reproduce, expected behavior, and actual behavior.\n              </div>\n              <div class=\"help-fallback\">\n                <strong>🔗 Can't access GitHub?</strong> If the buttons above don't work in your environment:\n                <ol>\n                  <li>Email us directly at <a href=\"mailto:smart@who.int?subject=SGEX Bug Report\">smart@who.int</a></li>\n                  <li>Or visit <a href=\"${repositoryConfig.getGitHubUrl()}/issues/new\" target=\"_blank\">${repositoryConfig.getFullName()}/issues/new</a> manually</li>\n                </ol>\n              </div>\n            `\n          }\n        ]\n      },\n      dakFeedback: {\n        id: 'provide-dak-feedback',\n        title: 'Provide DAK Feedback',\n        type: 'slideshow',\n        content: [\n          {\n            title: 'Provide Feedback on this DAK',\n            content: `\n              <p>Share feedback about this Digital Adaptation Kit (DAK):</p>\n              <h4>What type of feedback do you have?</h4>\n              <div class=\"bug-report-options\">\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openDakIssue('content')\">\n                  📝 Report DAK Content Error - Problems with clinical content or logic\n                </button>\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openDakIssue('bug')\">\n                  🐛 DAK Bug - Issue with this specific DAK content\n                </button>\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openDakIssue('improvement')\">\n                  📈 DAK Improvement - Suggest enhancements to this DAK\n                </button>\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openDakIssue('question')\">\n                  ❓ DAK Question - Ask about this DAK's implementation\n                </button>\n                <button class=\"bug-type-btn\" onclick=\"window.helpModalInstance?.openDakIssue('blank')\">\n                  📝 Blank DAK Issue - Create an issue without a template\n                </button>\n              </div>\n              <div class=\"help-tip\">\n                <strong>💡 Note:</strong> This will open an issue in the selected DAK repository for targeted feedback.\n              </div>\n            `\n          }\n        ]\n      }\n    };\n\n    this.helpTopics = {\n      'landing-page-unauthenticated': [\n        {\n          id: 'github-pat-setup',\n          title: 'How to Create a GitHub Personal Access Token',\n          badge: '/sgex/cat-paw-lock-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Step 1: Go to GitHub Settings',\n              content: `\n                <p>Navigate to your GitHub account settings:</p>\n                <ol>\n                  <li>Click your profile picture in the top right</li>\n                  <li>Select \"Settings\" from the dropdown</li>\n                  <li>Go to \"Developer settings\" → \"Personal access tokens\"</li>\n                  <li>Choose \"Fine-grained tokens\" (recommended) or \"Tokens (classic)\"</li>\n                </ol>\n                <div class=\"help-tip\">\n                  <strong>💡 Tip:</strong> Fine-grained tokens provide better security with repository-specific access.\n                </div>\n              `\n            },\n            {\n              title: 'Step 2: Generate New Token',\n              content: `\n                <p>Create your new token:</p>\n                <ol>\n                  <li>Click \"Generate new token\"</li>\n                  <li>Give it a descriptive name like \"SGEX Workbench\"</li>\n                  <li>Set expiration (90 days recommended)</li>\n                  <li>Select repository access (specific repos or all)</li>\n                </ol>\n                <div class=\"help-warning\">\n                  <strong>⚠️ Important:</strong> You'll only see the token once, so copy it immediately!\n                </div>\n              `\n            },\n            {\n              title: 'Step 3: Set Required Permissions',\n              content: `\n                <p>For <strong>fine-grained tokens</strong>, enable:</p>\n                <ul>\n                  <li><strong>Contents:</strong> Read and Write</li>\n                  <li><strong>Metadata:</strong> Read</li>\n                  <li><strong>Pull requests:</strong> Read and Write</li>\n                </ul>\n                <p>For <strong>classic tokens</strong>, select:</p>\n                <ul>\n                  <li><strong>repo</strong> - Full control of private repositories</li>\n                  <li><strong>read:org</strong> - Read org and team membership</li>\n                </ul>\n              `\n            },\n            {\n              title: 'Step 4: Use Your Token',\n              content: `\n                <p>Now you can authenticate with SGEX:</p>\n                <ol>\n                  <li>Copy your newly generated token</li>\n                  <li>Paste it into the login form</li>\n                  <li>Click \"Sign in with Personal Access Token\"</li>\n                </ol>\n                <div class=\"help-tip\">\n                  <strong>🔒 Security:</strong> Your token is stored securely in your browser and never shared with servers.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'landing-page-authenticated': [\n        {\n          id: 'profile-selection',\n          title: 'Selecting Your Profile or Organization',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Understanding Profile Types',\n              content: `\n                <p>SGEX shows different types of profiles:</p>\n                <ul>\n                  <li><strong>Personal:</strong> Your individual GitHub repositories</li>\n                  <li><strong>Organization:</strong> Repositories belonging to organizations you're a member of</li>\n                  <li><strong>WHO Official:</strong> World Health Organization repositories (always available)</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>💡 Tip:</strong> DAK count badges show how many SMART Guidelines repositories were found.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'dak-action-selection': [\n        {\n          id: 'choosing-dak-action',\n          title: 'Choosing Your DAK Action',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Understanding DAK Actions',\n              content: `\n                <p>Choose the right action for your workflow:</p>\n                <ul>\n                  <li><strong>Edit Existing DAK:</strong> Modify an existing repository you have write access to</li>\n                  <li><strong>Fork and Edit:</strong> Create your own copy of a repository to work on</li>\n                  <li><strong>Create New DAK:</strong> Start a brand new DAK repository from scratch</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>💡 Tip:</strong> If you're not sure, start with \"Edit Existing DAK\" if you have permissions, or \"Fork and Edit\" to experiment safely.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'documentation-viewer': [\n        {\n          id: 'navigation-help',\n          title: 'Navigating Documentation',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Using the Documentation Viewer',\n              content: `\n                <p>The documentation viewer provides easy access to all project information:</p>\n                <ul>\n                  <li>Use the sidebar menu to navigate between sections</li>\n                  <li>Use the dropdown to quickly jump to any document</li>\n                  <li>Click \"Back\" to return to the previous page</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>📖 Available Documentation:</strong> Requirements, Architecture, DAK Components, and more.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'dak-dashboard': [\n        {\n          id: 'dak-components-overview',\n          title: 'Understanding DAK Components',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'WHO SMART Guidelines DAK Components',\n              content: `\n                <p>Digital Adaptation Kits (DAKs) contain 8 core components organized in two levels:</p>\n                <h4>Level 2: Business Logic & Processes</h4>\n                <ul>\n                  <li><strong>Business Processes:</strong> BPMN workflows</li>\n                  <li><strong>Decision Support Logic:</strong> DMN decision tables</li>\n                  <li><strong>Indicators & Measures:</strong> Performance metrics</li>\n                  <li><strong>Data Entry Forms:</strong> Structured questionnaires</li>\n                </ul>\n                <h4>Level 3: Technical Implementation</h4>\n                <ul>\n                  <li><strong>Terminology:</strong> Code systems and value sets</li>\n                  <li><strong>FHIR Profiles:</strong> Resource structure definitions</li>\n                  <li><strong>FHIR Extensions:</strong> Custom data elements</li>\n                  <li><strong>Test Data & Examples:</strong> Sample data for validation</li>\n                </ul>\n              `\n            }\n          ]\n        }\n      ],\n      'dak-selection': [\n        {\n          id: 'choosing-dak-repository',\n          title: 'Selecting the Right DAK Repository',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Understanding DAK Repository Types',\n              content: `\n                <p>Choose the right repository based on your workflow:</p>\n                <ul>\n                  <li><strong>Published DAKs:</strong> Official WHO repositories with complete implementations</li>\n                  <li><strong>Community DAKs:</strong> Community-maintained repositories with adaptations</li>\n                  <li><strong>Template DAKs:</strong> Starting templates for creating new DAKs</li>\n                  <li><strong>Private DAKs:</strong> Your private repositories or organization-specific DAKs</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>💡 Tip:</strong> Look for the \"SMART Guidelines\" badge to ensure compatibility.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'organization-selection': [\n        {\n          id: 'selecting-organization',\n          title: 'Choosing an Organization',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Organization vs Personal Account',\n              content: `\n                <p>Decide where to create or fork your DAK:</p>\n                <ul>\n                  <li><strong>Personal Account:</strong> For individual development and experimentation</li>\n                  <li><strong>Organization Account:</strong> For team collaboration and official implementations</li>\n                  <li><strong>WHO Official:</strong> Only for authorized WHO contributors</li>\n                </ul>\n                <div class=\"help-warning\">\n                  <strong>⚠️ Important:</strong> Make sure you have the necessary permissions for the selected organization.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'bpmn-editor': [\n        {\n          id: 'using-bpmn-editor',\n          title: 'Using the BPMN Editor',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'BPMN Business Process Modeling',\n              content: `\n                <p>The BPMN editor helps you create and modify business process workflows:</p>\n                <ul>\n                  <li><strong>Drag and Drop:</strong> Use the palette to add process elements</li>\n                  <li><strong>Connect Elements:</strong> Click and drag to create sequence flows</li>\n                  <li><strong>Properties Panel:</strong> Configure element properties and conditions</li>\n                  <li><strong>Validation:</strong> The editor highlights errors and warnings</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>💡 Tip:</strong> BPMN processes define the clinical workflow and decision logic for your DAK.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'questionnaire-editor': [\n        {\n          id: 'using-questionnaire-editor',\n          title: 'Using the FHIR Questionnaire Editor',\n          badge: '/sgex/cat-paw-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'FHIR Questionnaire Overview',\n              content: `\n                <p>The FHIR Questionnaire editor helps you create and modify structured data collection forms:</p>\n                <ul>\n                  <li><strong>Visual Editor:</strong> Uses LHC-Forms for intuitive questionnaire design</li>\n                  <li><strong>FHIR Compliant:</strong> Generates standard FHIR R4 Questionnaire resources</li>\n                  <li><strong>Multilingual:</strong> Support for multiple languages and translations</li>\n                  <li><strong>Preview Mode:</strong> Test questionnaires as they would appear to users</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>📋 File Location:</strong> Questionnaires are stored in <code>input/questionnaires/*.json</code>\n                </div>\n              `\n            },\n            {\n              title: 'Creating New Questionnaires',\n              content: `\n                <p>To create a new FHIR Questionnaire:</p>\n                <ol>\n                  <li>Click \"Create New Questionnaire\" on the main screen</li>\n                  <li>A template questionnaire will be loaded in the editor</li>\n                  <li>Modify the questionnaire structure using the visual interface</li>\n                  <li>Add questions, sections, and response options</li>\n                  <li>Set validation rules and conditional logic</li>\n                </ol>\n                <div class=\"help-warning\">\n                  <strong>⚠️ Remember:</strong> Save your work regularly using \"Save to Staging\" or \"Commit to GitHub\"\n                </div>\n              `\n            },\n            {\n              title: 'Editing Existing Questionnaires',\n              content: `\n                <p>To modify existing questionnaires:</p>\n                <ol>\n                  <li>Select a questionnaire from the list</li>\n                  <li>The questionnaire will load in the LHC-Forms editor</li>\n                  <li>Make your changes using the visual interface</li>\n                  <li>Preview the form to test user experience</li>\n                  <li>Save changes when satisfied</li>\n                </ol>\n                <div class=\"help-tip\">\n                  <strong>💡 Tip:</strong> Use the staging framework to test changes before committing to GitHub\n                </div>\n              `\n            },\n            {\n              title: 'Internationalization Support',\n              content: `\n                <p>The questionnaire editor supports multiple languages:</p>\n                <ul>\n                  <li><strong>Language Selection:</strong> Use the language dropdown to switch between languages</li>\n                  <li><strong>Translations:</strong> Add translations for all text fields</li>\n                  <li><strong>FHIR Extensions:</strong> Uses standard FHIR translation extensions</li>\n                  <li><strong>Preview:</strong> Test questionnaires in different languages</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>🌍 Best Practice:</strong> Always provide translations for your target implementation languages\n                </div>\n              `\n            }\n          ]\n        },\n        {\n          id: 'questionnaire-management',\n          title: 'Managing Questionnaire Assets',\n          badge: '/sgex/cat-paw-file-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'File Organization',\n              content: `\n                <p>FHIR Questionnaires are organized as follows:</p>\n                <ul>\n                  <li><strong>Location:</strong> <code>input/questionnaires/</code> directory</li>\n                  <li><strong>Format:</strong> JSON files following FHIR R4 Questionnaire schema</li>\n                  <li><strong>Naming:</strong> Use descriptive names like <code>patient-registration.json</code></li>\n                  <li><strong>Validation:</strong> All files are validated against FHIR schema</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>📁 Convention:</strong> Use kebab-case filenames for consistency\n                </div>\n              `\n            },\n            {\n              title: 'Version Control Integration',\n              content: `\n                <p>The questionnaire editor integrates with GitHub for version control:</p>\n                <ul>\n                  <li><strong>Staging:</strong> Save changes locally before committing</li>\n                  <li><strong>Commits:</strong> Create meaningful commit messages</li>\n                  <li><strong>Branches:</strong> Work on different branches for features</li>\n                  <li><strong>History:</strong> Track changes and revert if needed</li>\n                </ul>\n                <div class=\"help-warning\">\n                  <strong>⚠️ Important:</strong> Always test questionnaires before committing to main branch\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'component-editor': [\n        {\n          id: 'component-editor-overview',\n          title: 'Understanding the Component Editor',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'DAK Component Types',\n              content: `\n                <p>The component editor provides specialized interfaces for different DAK components:</p>\n                <h4>Business Logic Components</h4>\n                <ul>\n                  <li><strong>Business Processes:</strong> BPMN workflow editor</li>\n                  <li><strong>Decision Logic:</strong> DMN decision table editor</li>\n                  <li><strong>Forms:</strong> Structured questionnaire builder</li>\n                </ul>\n                <h4>Technical Components</h4>\n                <ul>\n                  <li><strong>FHIR Resources:</strong> Profile and extension definitions</li>\n                  <li><strong>Terminology:</strong> Code systems and value sets</li>\n                  <li><strong>Test Data:</strong> Example data and test cases</li>\n                </ul>\n              `\n            }\n          ]\n        }\n      ],\n      'pat-login': [\n        {\n          id: 'pat-authentication-help',\n          title: 'Using Personal Access Tokens',\n          badge: '/sgex/cat-paw-lock-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Why Personal Access Tokens?',\n              content: `\n                <p>SGEX uses GitHub Personal Access Tokens (PATs) for secure authentication:</p>\n                <ul>\n                  <li><strong>No Backend Required:</strong> Works entirely in your browser</li>\n                  <li><strong>Fine-grained Control:</strong> Choose which repositories to access</li>\n                  <li><strong>Enhanced Security:</strong> Can be easily rotated and revoked</li>\n                  <li><strong>Privacy Focused:</strong> Your token never leaves your browser</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>🔒 Security:</strong> SGEX stores your token locally and never transmits it to any server.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'pat-setup-instructions': [\n        {\n          id: 'detailed-pat-setup',\n          title: 'Detailed PAT Setup Guide',\n          badge: '/sgex/cat-paw-lock-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Token Type Comparison',\n              content: `\n                <p>GitHub offers two types of Personal Access Tokens:</p>\n                <h4>Fine-grained Tokens (Recommended)</h4>\n                <ul>\n                  <li>Repository-specific access control</li>\n                  <li>Better security with minimal permissions</li>\n                  <li>More granular permission settings</li>\n                  <li>Shorter default expiration times</li>\n                </ul>\n                <h4>Classic Tokens</h4>\n                <ul>\n                  <li>Broader scope-based permissions</li>\n                  <li>Simpler permission model</li>\n                  <li>Longer expiration options</li>\n                  <li>Works with all GitHub integrations</li>\n                </ul>\n              `\n            }\n          ]\n        }\n      ],\n      'welcome': [\n        {\n          id: 'github-pat-setup',\n          title: 'How to Create a GitHub Personal Access Token',\n          badge: '/sgex/cat-paw-lock-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Step 1: Go to GitHub Settings',\n              content: `\n                <p>Navigate to your GitHub account settings:</p>\n                <ol>\n                  <li>Click your profile picture in the top right</li>\n                  <li>Select \"Settings\" from the dropdown</li>\n                  <li>Go to \"Developer settings\" → \"Personal access tokens\"</li>\n                  <li>Choose \"Fine-grained tokens\" (recommended) or \"Tokens (classic)\"</li>\n                </ol>\n                <div class=\"help-tip\">\n                  <strong>💡 Tip:</strong> Fine-grained tokens provide better security with repository-specific access.\n                </div>\n              `\n            },\n            {\n              title: 'Step 2: Generate New Token',\n              content: `\n                <p>Create your new token:</p>\n                <ol>\n                  <li>Click \"Generate new token\"</li>\n                  <li>Give it a descriptive name like \"SGEX Workbench\"</li>\n                  <li>Set expiration (90 days recommended)</li>\n                  <li>Select repository access (specific repos or all)</li>\n                </ol>\n                <div class=\"help-warning\">\n                  <strong>⚠️ Important:</strong> You'll only see the token once, so copy it immediately!\n                </div>\n              `\n            },\n            {\n              title: 'Step 3: Set Required Permissions',\n              content: `\n                <p>For <strong>fine-grained tokens</strong>, enable:</p>\n                <ul>\n                  <li><strong>Contents:</strong> Read and Write</li>\n                  <li><strong>Metadata:</strong> Read</li>\n                  <li><strong>Pull requests:</strong> Read and Write</li>\n                </ul>\n                <p>For <strong>classic tokens</strong>, select:</p>\n                <ul>\n                  <li><strong>repo</strong> - Full control of private repositories</li>\n                  <li><strong>read:org</strong> - Read org and team membership</li>\n                </ul>\n              `\n            },\n            {\n              title: 'Step 4: Use Your Token',\n              content: `\n                <p>Now you can authenticate with SGEX:</p>\n                <ol>\n                  <li>Copy your newly generated token</li>\n                  <li>Paste it into the login form</li>\n                  <li>Click \"Sign in with Personal Access Token\"</li>\n                </ol>\n                <div class=\"help-tip\">\n                  <strong>🔒 Security:</strong> Your token is stored securely in your browser and never shared with servers.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'dak-configuration': [\n        {\n          id: 'dak-configuration-guide',\n          title: 'Configuring Your DAK',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Understanding DAK Configuration',\n              content: `\n                <p>When creating a new DAK, you need to configure both repository and FHIR settings:</p>\n                <h4>Repository Configuration</h4>\n                <ul>\n                  <li><strong>Repository Name:</strong> GitHub repository identifier (lowercase with hyphens)</li>\n                  <li><strong>Description:</strong> Brief description of your DAK's purpose</li>\n                  <li><strong>Topics:</strong> Tags that help others discover your DAK</li>\n                  <li><strong>Visibility:</strong> Public repositories are discoverable by the community</li>\n                </ul>\n                <h4>FHIR Implementation Guide Settings</h4>\n                <ul>\n                  <li><strong>IG ID:</strong> Unique identifier for your Implementation Guide</li>\n                  <li><strong>Name:</strong> Technical name used in code generation</li>\n                  <li><strong>Title:</strong> Human-readable title for documentation</li>\n                  <li><strong>Publisher:</strong> Organization responsible for the DAK</li>\n                </ul>\n              `\n            }\n          ]\n        }\n      ],\n      'core-data-dictionary-viewer': [\n        {\n          id: 'core-data-dictionary-help',\n          title: 'Understanding Core Data Dictionary',\n          badge: '/sgex/cat-paw-info-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'What is the Core Data Dictionary?',\n              content: `\n                <p>The Core Data Dictionary (Component 2) contains the data elements required throughout the different points of the workflow. These data elements are mapped to the International Classification of Diseases version 11 (ICD-11) codes and other established concept mapping standards to ensure the data dictionary is compatible with other digital systems.</p>\n                <h4>Purpose: System Design and Interoperability</h4>\n                <p>To know which data elements need to be logged and how they map to other standard terminologies (e.g. ICD, Systematized Nomenclature of Medicine [SNOMED]) for interoperability with other standards-based systems.</p>\n                <h4>FHIR FSH Source Files</h4>\n                <ul>\n                  <li><strong>CodeSystems:</strong> Define custom codes and concepts used in your DAK</li>\n                  <li><strong>ValueSets:</strong> Specify allowed values for clinical data elements</li>\n                  <li><strong>ConceptMaps:</strong> Map between different terminology systems including ICD-11 and SNOMED</li>\n                  <li><strong>Logical Models:</strong> Define data structures for clinical workflows</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>💡 Location:</strong> FSH files are stored in the <code>input/fsh/</code> directory of your repository.\n                </div>\n              `\n            },\n            {\n              title: 'GitHub Pages Integration',\n              content: `\n                <p>When GitHub Pages is configured, your FSH files are automatically compiled into HTML documentation:</p>\n                <h4>Published Artifacts</h4>\n                <ul>\n                  <li><strong>Code Systems:</strong> Browse and search your custom terminologies</li>\n                  <li><strong>Value Sets:</strong> View allowed values with descriptions</li>\n                  <li><strong>Logical Models:</strong> Interactive data structure documentation</li>\n                  <li><strong>Concept Maps:</strong> Visual mapping between terminologies</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>⚡ URL Pattern:</strong> Main branch publishes to <code>user.github.io/repo</code>, feature branches to <code>user.github.io/repo/branches/branch-name</code>\n                </div>\n              `\n            }\n          ]\n        },\n        {\n          id: 'github-pages-setup',\n          title: 'Setting Up GitHub Pages',\n          badge: '/sgex/cat-paw-settings-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'Enable GitHub Pages for Your DAK',\n              content: `\n                <p>Follow these steps to enable automatic publishing of your Implementation Guide:</p>\n                <h4>Step 1: Repository Settings</h4>\n                <ol>\n                  <li>Go to your repository on GitHub</li>\n                  <li>Click on the <strong>Settings</strong> tab</li>\n                  <li>Scroll down to <strong>Pages</strong> in the left sidebar</li>\n                  <li>Under <strong>Source</strong>, select <strong>GitHub Actions</strong></li>\n                </ol>\n                <div class=\"help-tip\">\n                  <strong>📋 Note:</strong> Your repository must contain a valid FHIR Implementation Guide structure with <code>sushi-config.yaml</code>\n                </div>\n              `\n            },\n            {\n              title: 'Configure IG Publisher Workflow',\n              content: `\n                <p>Set up the automated publishing workflow:</p>\n                <h4>Step 2: GitHub Actions</h4>\n                <ol>\n                  <li>Create <code>.github/workflows/</code> directory in your repository</li>\n                  <li>Add an IG Publisher workflow file (e.g., <code>publish.yml</code>)</li>\n                  <li>Configure the workflow to run on push to main branch</li>\n                  <li>Include steps to build and deploy the Implementation Guide</li>\n                </ol>\n                <h4>Step 3: Verify Publishing</h4>\n                <ul>\n                  <li>Check the <strong>Actions</strong> tab for workflow status</li>\n                  <li>Once successful, visit your GitHub Pages URL</li>\n                  <li>Verify that artifacts are accessible from the Core Data Dictionary viewer</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>🔗 Reference:</strong> See the <a href=\"https://smart.who.int/ig-starter-kit/v1.0.0/ig_setup.html#ghpages-build\" target=\"_blank\">WHO IG Starter Kit</a> for detailed setup instructions.\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'business-process-selection': [\n        {\n          id: 'business-process-help',\n          title: 'Understanding Business Processes',\n          badge: '/sgex/cat-paw-workflow-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'What are Business Processes?',\n              content: `\n                <p>Business Processes (Component 5) define the clinical workflows and care processes in your DAK:</p>\n                <h4>BPMN 2.0 Diagrams</h4>\n                <ul>\n                  <li><strong>Clinical Workflows:</strong> Step-by-step patient care processes</li>\n                  <li><strong>Decision Points:</strong> Where clinical decisions are made</li>\n                  <li><strong>Task Assignments:</strong> Who performs each step in the workflow</li>\n                  <li><strong>Data Flows:</strong> How information moves through the process</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>💡 Standard:</strong> Uses BPMN 2.0 (Business Process Model and Notation) for workflow modeling\n                </div>\n              `\n            },\n            {\n              title: 'Working with BPMN Files',\n              content: `\n                <p>Business process diagrams are stored as BPMN XML files in your repository:</p>\n                <h4>File Management</h4>\n                <ul>\n                  <li><strong>Location:</strong> Typically stored in <code>input/models/</code> or <code>input/bpmn/</code></li>\n                  <li><strong>Format:</strong> BPMN 2.0 XML standard format</li>\n                  <li><strong>Editing:</strong> Use the built-in BPMN editor or external tools</li>\n                  <li><strong>Validation:</strong> Automatic validation against BPMN 2.0 schema</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>🔧 Tools:</strong> SGeX includes an integrated BPMN editor for creating and modifying workflow diagrams\n                </div>\n              `\n            }\n          ]\n        }\n      ],\n      'pages-manager': [\n        {\n          id: 'page-content-help',\n          title: 'Managing Page Content',\n          badge: '/sgex/cat-paw-document-icon.svg',\n          type: 'slideshow',\n          content: [\n            {\n              title: 'What is Page Content?',\n              content: `\n                <p>Page Content represents the narrative documentation and educational materials in your DAK:</p>\n                <h4>Content Types</h4>\n                <ul>\n                  <li><strong>Clinical Guidelines:</strong> Evidence-based care recommendations</li>\n                  <li><strong>User Guides:</strong> Instructions for healthcare workers</li>\n                  <li><strong>Training Materials:</strong> Educational content and scenarios</li>\n                  <li><strong>Reference Documentation:</strong> Technical specifications and background</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>💡 Format:</strong> Content is typically authored in Markdown format for easy editing and version control\n                </div>\n              `\n            },\n            {\n              title: 'Content Organization',\n              content: `\n                <p>Page content is organized to support different user needs and workflows:</p>\n                <h4>Structure</h4>\n                <ul>\n                  <li><strong>Pages Directory:</strong> Main content files organized by topic</li>\n                  <li><strong>Assets:</strong> Images, diagrams, and multimedia content</li>\n                  <li><strong>Templates:</strong> Reusable content patterns and layouts</li>\n                  <li><strong>Navigation:</strong> Menus and linking between related content</li>\n                </ul>\n                <h4>Publishing</h4>\n                <ul>\n                  <li><strong>GitHub Pages:</strong> Automatic publishing of content as web pages</li>\n                  <li><strong>FHIR IG:</strong> Integration with Implementation Guide publishing</li>\n                  <li><strong>Version Control:</strong> Track changes and collaborate on content</li>\n                </ul>\n                <div class=\"help-tip\">\n                  <strong>📝 Best Practice:</strong> Use clear headings, bullet points, and visual elements to make content accessible to healthcare workers\n                </div>\n              `\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  // Get help topics for a specific page\n  getHelpTopicsForPage(pageId, contextData = {}) {\n    const pageTopics = this.helpTopics[pageId] || [];\n    const universalTopics = this.getUniversalTopics(contextData);\n    return [...pageTopics, ...universalTopics];\n  }\n\n  // Get universal topics based on context (e.g., if DAK is selected)\n  getUniversalTopics(contextData = {}) {\n    const topics = [\n      this.universalTopics.documentation,\n      this.universalTopics.bugReport\n    ];\n    \n    // Add DAK feedback if we have DAK context\n    if (contextData.selectedDak || contextData.repository) {\n      topics.push(this.universalTopics.dakFeedback);\n    }\n    \n    return topics;\n  }\n\n  // Get a specific help topic by ID\n  getHelpTopic(topicId) {\n    for (const pageTopics of Object.values(this.helpTopics)) {\n      const topic = pageTopics.find(t => t.id === topicId);\n      if (topic) {\n        return topic;\n      }\n    }\n    return null;\n  }\n\n  // Check if a page has help topics (now always true since we have universal topics)\n  hasHelpTopics(pageId, contextData = {}) {\n    return true; // Always true now due to universal topics\n  }\n\n  // Add a help topic to a page\n  addHelpTopicToPage(pageId, helpTopic) {\n    if (!this.helpTopics[pageId]) {\n      this.helpTopics[pageId] = [];\n    }\n    this.helpTopics[pageId].push(helpTopic);\n  }\n\n  // Get all available page IDs that have help content\n  getAvailablePages() {\n    return Object.keys(this.helpTopics);\n  }\n\n  // Helper method to open DAK-specific issues\n  openDakIssue(issueType, dakRepository) {\n    if (!dakRepository) {\n      console.warn('No DAK repository specified for feedback');\n      return;\n    }\n\n    const baseUrl = `https://github.com/${dakRepository.owner}/${dakRepository.name}/issues/new`;\n    let url = baseUrl;\n\n    switch (issueType) {\n      case 'bug':\n        url += '?template=bug_report.md&labels=bug,dak-issue';\n        break;\n      case 'improvement':\n        url += '?template=feature_request.md&labels=enhancement,dak-improvement';\n        break;\n      case 'content':\n        url += '?labels=content-issue,clinical-content';\n        break;\n      case 'question':\n        url += '?template=question.md&labels=question,dak-question';\n        break;\n      default:\n        url += '?labels=dak-feedback';\n    }\n\n    window.open(url, '_blank');\n  }\n\n  // Helper method to open SGEX-specific issues\n  openSgexIssue(issueType) {\n    const baseUrl = `${repositoryConfig.getGitHubUrl()}/issues/new`;\n    let url = baseUrl;\n\n    switch (issueType) {\n      case 'bug':\n        url += '?template=bug_report.md&labels=bug';\n        break;\n      case 'feature':\n        url += '?template=feature_request.md&labels=enhancement';\n        break;\n      case 'documentation':\n        url += '?template=documentation.md&labels=documentation';\n        break;\n      case 'question':\n        url += '?template=question.md&labels=question';\n        break;\n      case 'blank':\n        // Just the basic new issue URL\n        break;\n      default:\n        url += '?labels=bug';\n    }\n\n    window.open(url, '_blank');\n  }\n}\n\n// Create and export a singleton instance\nconst helpContentService = new HelpContentService();\nexport default helpContentService;","/**\n * Utility functions for handling navigation with command-click support\n */\n\n/**\n * Detects if a click event should open in a new tab\n * @param {MouseEvent} event - The click event\n * @returns {boolean} - True if should open in new tab (Ctrl/Cmd+click)\n */\nexport const shouldOpenInNewTab = (event) => {\n  return !!(event?.ctrlKey || event?.metaKey); // Ctrl on Windows/Linux, Cmd on Mac\n};\n\n/**\n * Constructs a full URL from a relative path using the current base URL\n * @param {string} relativePath - The relative path (e.g., '/dashboard/user/repo')\n * @returns {string} - The full URL\n */\nexport const constructFullUrl = (relativePath) => {\n  const basePath = process.env.PUBLIC_URL || '';\n  const baseUrl = window.location.origin;\n  \n  // Remove leading slash from relativePath if present to avoid double slashes\n  const cleanPath = relativePath.startsWith('/') ? relativePath.slice(1) : relativePath;\n  \n  // Only add basePath if it's not empty\n  if (!basePath) {\n    return `${baseUrl}/${cleanPath}`;\n  }\n  \n  // Ensure basePath ends with slash for proper joining\n  const cleanBasePath = basePath.endsWith('/') ? basePath : basePath + '/';\n  \n  return `${baseUrl}${cleanBasePath}${cleanPath}`;\n};\n\n/**\n * Check if current location is the welcome page\n * @param {Object} location - React Router location object\n * @returns {boolean} - True if currently on welcome page\n */\nexport const isOnWelcomePage = (location) => {\n  // Check if on root path (/) which is the welcome page in main deployment\n  return location.pathname === '/' || location.pathname === '';\n};\n\n/**\n * Navigate to welcome page and focus PAT input, or just focus if already there\n * @param {Function} navigate - React Router navigate function\n * @param {Object} location - React Router location object\n * @param {Object} patTokenInputRef - Ref to PAT token input element (optional, for same-page focus)\n */\nexport const navigateToWelcomeWithFocus = (navigate, location, patTokenInputRef = null) => {\n  if (isOnWelcomePage(location)) {\n    // Already on welcome page, either focus directly or dispatch event\n    if (patTokenInputRef?.current) {\n      patTokenInputRef.current.focus();\n    } else {\n      // Dispatch custom event for WelcomePage to listen to\n      window.dispatchEvent(new CustomEvent('focusPATInput'));\n    }\n  } else {\n    // Navigate to welcome page with focus parameter\n    navigate('/', {\n      state: { focusPATInput: true }\n    });\n  }\n};\n\n/**\n * Handles navigation with command-click support\n * @param {MouseEvent} event - The click event\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n */\nexport const handleNavigationClick = (event, path, navigate, state = null) => {\n  if (shouldOpenInNewTab(event)) {\n    // Open in new tab\n    const fullUrl = constructFullUrl(path);\n    window.open(fullUrl, '_blank', 'noopener,noreferrer');\n  } else {\n    // Navigate in same tab\n    if (state) {\n      navigate(path, { state });\n    } else {\n      navigate(path);\n    }\n  }\n};\n\n/**\n * Creates a click handler that supports command-click for new tabs\n * @param {string} path - The navigation path\n * @param {Function} navigate - React Router navigate function\n * @param {Object} state - Optional state to pass with navigation\n * @returns {Function} - Click handler function\n */\nexport const createNavigationClickHandler = (path, navigate, state = null) => {\n  return (event) => {\n    handleNavigationClick(event, path, navigate, state);\n  };\n};","import { useState, useEffect } from 'react';\n\n/**\n * Custom hook that returns the appropriate image path based on the current theme\n * @param {string} baseImagePath - The base image path (e.g., \"sgex-mascot.png\", \"authoring.png\")\n * @returns {string} The theme-appropriate image path\n */\nconst useThemeImage = (baseImagePath) => {\n  const [currentImagePath, setCurrentImagePath] = useState(baseImagePath);\n\n  useEffect(() => {\n    const updateImagePath = () => {\n      const isDarkMode = document.body.classList.contains('theme-dark');\n      \n      // Get the correct base path for the deployment environment\n      const publicUrl = process.env.PUBLIC_URL || '';\n      \n      // Normalize the base image path (remove leading slash if present)\n      const normalizedPath = baseImagePath.startsWith('/') ? baseImagePath.slice(1) : baseImagePath;\n      \n      let finalPath;\n      if (isDarkMode) {\n        // Convert base image to dark mode version\n        // e.g., \"sgex-mascot.png\" -> \"sgex-mascot_grey_tabby.png\"\n        const darkImageName = normalizedPath.replace(/\\.png$/, '_grey_tabby.png');\n        finalPath = publicUrl ? `${publicUrl}/${darkImageName}` : `/${darkImageName}`;\n      } else {\n        // Use original image for light mode\n        finalPath = publicUrl ? `${publicUrl}/${normalizedPath}` : `/${normalizedPath}`;\n      }\n      \n      setCurrentImagePath(finalPath);\n    };\n\n    // Initial update\n    updateImagePath();\n\n    // Create a MutationObserver to watch for body class changes\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n          updateImagePath();\n        }\n      });\n    });\n\n    // Start observing the body for class changes\n    observer.observe(document.body, {\n      attributes: true,\n      attributeFilter: ['class']\n    });\n\n    // Cleanup observer on unmount\n    return () => {\n      observer.disconnect();\n    };\n  }, [baseImagePath]);\n\n  return currentImagePath;\n};\n\nexport default useThemeImage;","/**\n * Staging Ground Service\n * \n * Manages local changes to DAK components before they are committed to GitHub.\n * Provides persistent storage, versioning, and integration interfaces for DAK editing tools.\n */\n\nclass StagingGroundService {\n  constructor() {\n    this.listeners = new Set();\n    this.currentRepository = null;\n    this.currentBranch = null;\n  }\n\n  /**\n   * Initialize staging ground for a specific repository and branch\n   */\n  initialize(repository, branch) {\n    this.currentRepository = repository;\n    this.currentBranch = branch;\n    this.notifyListeners();\n  }\n\n  /**\n   * Get the storage key for current repository and branch\n   */\n  getStorageKey() {\n    if (!this.currentRepository || !this.currentBranch) {\n      throw new Error('Staging ground not initialized');\n    }\n    return `sgex_staging_${this.currentRepository.full_name}_${this.currentBranch}`;\n  }\n\n  /**\n   * Get current staging ground state\n   */\n  getStagingGround() {\n    try {\n      const key = this.getStorageKey();\n      const stored = localStorage.getItem(key);\n      if (!stored) {\n        return this.createEmptyStagingGround();\n      }\n      return JSON.parse(stored);\n    } catch (error) {\n      console.warn('Error reading staging ground from localStorage:', error);\n      return this.createEmptyStagingGround();\n    }\n  }\n\n  /**\n   * Create empty staging ground structure\n   */\n  createEmptyStagingGround() {\n    return {\n      message: '',\n      files: [],\n      timestamp: Date.now(),\n      branch: this.currentBranch,\n      repository: this.currentRepository?.full_name\n    };\n  }\n\n  /**\n   * Save staging ground state to localStorage\n   */\n  saveStagingGround(stagingGround) {\n    try {\n      const key = this.getStorageKey();\n      stagingGround.timestamp = Date.now();\n      stagingGround.branch = this.currentBranch;\n      stagingGround.repository = this.currentRepository?.full_name;\n      \n      localStorage.setItem(key, JSON.stringify(stagingGround));\n      this.saveToHistory(stagingGround);\n      this.notifyListeners();\n      return true;\n    } catch (error) {\n      console.error('Error saving staging ground to localStorage:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Add or update a file in the staging ground\n   */\n  updateFile(filePath, content, metadata = {}) {\n    const stagingGround = this.getStagingGround();\n    \n    // Find existing file or create new one\n    const existingFileIndex = stagingGround.files.findIndex(f => f.path === filePath);\n    const fileObject = {\n      path: filePath,\n      content: content,\n      metadata: {\n        ...metadata,\n        lastModified: Date.now()\n      },\n      timestamp: Date.now()\n    };\n\n    if (existingFileIndex >= 0) {\n      stagingGround.files[existingFileIndex] = fileObject;\n    } else {\n      stagingGround.files.push(fileObject);\n    }\n\n    return this.saveStagingGround(stagingGround);\n  }\n\n  /**\n   * Remove a file from the staging ground\n   */\n  removeFile(filePath) {\n    const stagingGround = this.getStagingGround();\n    stagingGround.files = stagingGround.files.filter(f => f.path !== filePath);\n    return this.saveStagingGround(stagingGround);\n  }\n\n  /**\n   * Update commit message\n   */\n  updateCommitMessage(message) {\n    const stagingGround = this.getStagingGround();\n    stagingGround.message = message;\n    return this.saveStagingGround(stagingGround);\n  }\n\n  /**\n   * Check if staging ground has changes\n   */\n  hasChanges() {\n    const stagingGround = this.getStagingGround();\n    return stagingGround.files.length > 0;\n  }\n\n  /**\n   * Get count of changed files\n   */\n  getChangedFilesCount() {\n    const stagingGround = this.getStagingGround();\n    return stagingGround.files.length;\n  }\n\n  /**\n   * Clear all changes in staging ground\n   */\n  clearStagingGround() {\n    const empty = this.createEmptyStagingGround();\n    return this.saveStagingGround(empty);\n  }\n\n  /**\n   * Save current state to history for rollback\n   */\n  saveToHistory(stagingGround) {\n    try {\n      const historyKey = `${this.getStorageKey()}_history`;\n      const history = this.getHistory();\n      \n      // Add current state to history\n      history.push({\n        ...stagingGround,\n        savedAt: Date.now()\n      });\n\n      // Keep only last 10 saves\n      const recentHistory = history.slice(-10);\n      localStorage.setItem(historyKey, JSON.stringify(recentHistory));\n      \n    } catch (error) {\n      console.warn('Error saving to history:', error);\n    }\n  }\n\n  /**\n   * Get history of saves\n   */\n  getHistory() {\n    try {\n      const historyKey = `${this.getStorageKey()}_history`;\n      const stored = localStorage.getItem(historyKey);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.warn('Error reading history:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Rollback to a previous save\n   */\n  rollbackToSave(timestamp) {\n    const history = this.getHistory();\n    const save = history.find(s => s.savedAt === timestamp);\n    \n    if (!save) {\n      throw new Error('Save not found in history');\n    }\n\n    // Remove the savedAt timestamp before restoring\n    const { savedAt, ...stagingGroundState } = save;\n    return this.saveStagingGround(stagingGroundState);\n  }\n\n  /**\n   * Export staging ground state for backup/sharing\n   */\n  exportStagingGround() {\n    const stagingGround = this.getStagingGround();\n    const history = this.getHistory();\n    \n    return {\n      current: stagingGround,\n      history: history,\n      exportedAt: Date.now(),\n      repository: this.currentRepository?.full_name,\n      branch: this.currentBranch\n    };\n  }\n\n  /**\n   * Import staging ground state from backup\n   */\n  importStagingGround(exportedData) {\n    if (!exportedData.current || !exportedData.repository || !exportedData.branch) {\n      throw new Error('Invalid export data format');\n    }\n\n    if (exportedData.repository !== this.currentRepository?.full_name ||\n        exportedData.branch !== this.currentBranch) {\n      throw new Error('Export data is for different repository or branch');\n    }\n\n    // Save current state and import new one\n    this.saveStagingGround(exportedData.current);\n    \n    // Import history if available\n    if (exportedData.history) {\n      try {\n        const historyKey = `${this.getStorageKey()}_history`;\n        localStorage.setItem(historyKey, JSON.stringify(exportedData.history));\n      } catch (error) {\n        console.warn('Error importing history:', error);\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Clean up old staging grounds and history\n   */\n  cleanup(maxAge = 7 * 24 * 60 * 60 * 1000) { // 7 days default\n    try {\n      const now = Date.now();\n      const keysToRemove = [];\n\n      // Check all localStorage keys for old staging grounds\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith('sgex_staging_')) {\n          try {\n            const data = JSON.parse(localStorage.getItem(key));\n            if (data.timestamp && (now - data.timestamp) > maxAge) {\n              keysToRemove.push(key);\n              keysToRemove.push(`${key}_history`);\n            }\n          } catch (error) {\n            // Invalid data, mark for removal\n            keysToRemove.push(key);\n          }\n        }\n      }\n\n      // Remove old entries\n      keysToRemove.forEach(key => {\n        localStorage.removeItem(key);\n      });\n\n      return keysToRemove.length;\n    } catch (error) {\n      console.error('Error during cleanup:', error);\n      return 0;\n    }\n  }\n\n  /**\n   * Add listener for staging ground changes\n   */\n  addListener(callback) {\n    this.listeners.add(callback);\n    \n    // Return unsubscribe function\n    return () => {\n      this.listeners.delete(callback);\n    };\n  }\n\n  /**\n   * Notify all listeners of changes\n   */\n  notifyListeners() {\n    const stagingGround = this.getStagingGround();\n    this.listeners.forEach(callback => {\n      try {\n        callback(stagingGround);\n      } catch (error) {\n        console.error('Error in staging ground listener:', error);\n      }\n    });\n  }\n\n  /**\n   * Interface for DAK editing tools to contribute files\n   */\n  contributeFiles(files, metadata = {}) {\n    if (!Array.isArray(files)) {\n      files = [files];\n    }\n\n    let success = true;\n    const results = [];\n\n    files.forEach(file => {\n      if (!file.path || !file.content) {\n        results.push({ path: file.path, success: false, error: 'Missing path or content' });\n        success = false;\n        return;\n      }\n\n      const result = this.updateFile(file.path, file.content, {\n        ...metadata,\n        source: metadata.tool || 'unknown',\n        contributedAt: Date.now()\n      });\n\n      results.push({ path: file.path, success: result });\n      if (!result) success = false;\n    });\n\n    return { success, results };\n  }\n\n  /**\n   * Get status for DAK editing tools\n   */\n  getStatus() {\n    const stagingGround = this.getStagingGround();\n    return {\n      hasChanges: this.hasChanges(),\n      filesCount: this.getChangedFilesCount(),\n      lastModified: stagingGround.timestamp,\n      branch: this.currentBranch,\n      repository: this.currentRepository?.full_name\n    };\n  }\n}\n\n// Create singleton instance\nconst stagingGroundService = new StagingGroundService();\n\nexport default stagingGroundService;","// Enhanced Tutorial Service - Provides branching tutorial support and improved content organization\n\nclass TutorialService {\n  constructor() {\n    // Tutorial registry - maps tutorial IDs to tutorial definitions\n    this.tutorials = new Map();\n    \n    // Tutorial categories for better organization\n    this.categories = {\n      'getting-started': 'Getting Started',\n      'authentication': 'Authentication',\n      'dak-management': 'DAK Management', \n      'content-editing': 'Content Editing',\n      'collaboration': 'Collaboration',\n      'troubleshooting': 'Troubleshooting'\n    };\n\n    // Initialize built-in tutorials\n    this.initializeBuiltInTutorials();\n  }\n\n  /**\n   * Register a tutorial definition\n   * @param {string} tutorialId - Alphanumeric ID with dashes (e.g., 'github-pat-setup')\n   * @param {Object} tutorialDefinition - Tutorial definition object\n   */\n  registerTutorial(tutorialId, tutorialDefinition) {\n    // Validate tutorial ID format (alphanumeric with dashes)\n    if (!/^[a-zA-Z0-9-]+$/.test(tutorialId)) {\n      throw new Error(`Invalid tutorial ID format: ${tutorialId}. Must contain only alphanumeric characters and dashes.`);\n    }\n\n    // Validate tutorial definition\n    this.validateTutorialDefinition(tutorialDefinition);\n\n    this.tutorials.set(tutorialId, {\n      id: tutorialId,\n      ...tutorialDefinition,\n      registeredAt: new Date().toISOString()\n    });\n  }\n\n  /**\n   * Get a tutorial by ID\n   * @param {string} tutorialId - Tutorial ID\n   * @returns {Object|null} Tutorial definition or null if not found\n   */\n  getTutorial(tutorialId) {\n    return this.tutorials.get(tutorialId) || null;\n  }\n\n  /**\n   * Get all tutorials for a specific page\n   * @param {string} pageId - Page ID\n   * @param {Object} contextData - Context data for filtering\n   * @returns {Array} Array of tutorial definitions\n   */\n  getTutorialsForPage(pageId, contextData = {}) {\n    const tutorials = [];\n    \n    // Get tutorials registered for this page\n    for (const [, tutorial] of this.tutorials) {\n      if (tutorial.pages && tutorial.pages.includes(pageId)) {\n        // Check if tutorial is applicable given context\n        if (this.isTutorialApplicable(tutorial, contextData)) {\n          tutorials.push(tutorial);\n        }\n      }\n    }\n\n    return tutorials.sort((a, b) => (a.priority || 0) - (b.priority || 0));\n  }\n\n  /**\n   * Get tutorials by category\n   * @param {string} category - Category ID\n   * @returns {Array} Array of tutorial definitions\n   */\n  getTutorialsByCategory(category) {\n    const tutorials = [];\n    \n    for (const [, tutorial] of this.tutorials) {\n      if (tutorial.category === category) {\n        tutorials.push(tutorial);\n      }\n    }\n\n    return tutorials.sort((a, b) => (a.title || '').localeCompare(b.title || ''));\n  }\n\n  /**\n   * Get all available tutorial categories\n   * @returns {Object} Category ID to name mapping\n   */\n  getCategories() {\n    return { ...this.categories };\n  }\n\n  /**\n   * Process a tutorial step, handling branching logic\n   * @param {Object} tutorial - Tutorial definition\n   * @param {number} currentStepIndex - Current step index\n   * @param {string} userChoice - User's choice for branching\n   * @param {Object} context - Tutorial context/state\n   * @returns {Object} Next step information\n   */\n  processStep(tutorial, currentStepIndex, userChoice = null, context = {}) {\n    if (!tutorial || !tutorial.steps || currentStepIndex >= tutorial.steps.length) {\n      return { step: null, isComplete: true };\n    }\n\n    const currentStep = tutorial.steps[currentStepIndex];\n    \n    // Handle branching logic\n    if (currentStep.branches && userChoice) {\n      const branch = currentStep.branches.find(b => b.choice === userChoice);\n      if (branch) {\n        // Update context if needed\n        if (branch.updateContext) {\n          Object.assign(context, branch.updateContext);\n        }\n\n        // Jump to target step if specified\n        if (branch.targetStep !== undefined) {\n          return {\n            step: tutorial.steps[branch.targetStep] || null,\n            stepIndex: branch.targetStep,\n            isComplete: branch.targetStep >= tutorial.steps.length,\n            context\n          };\n        }\n      }\n    }\n\n    // Normal linear progression\n    const nextIndex = currentStepIndex + 1;\n    return {\n      step: currentStep,\n      stepIndex: currentStepIndex,\n      isComplete: false,\n      hasNext: nextIndex < tutorial.steps.length,\n      hasPrevious: currentStepIndex > 0,\n      context\n    };\n  }\n\n  /**\n   * Validate tutorial definition structure\n   * @param {Object} definition - Tutorial definition to validate\n   */\n  validateTutorialDefinition(definition) {\n    const required = ['title', 'steps'];\n    \n    for (const field of required) {\n      if (!definition[field]) {\n        throw new Error(`Tutorial definition missing required field: ${field}`);\n      }\n    }\n\n    if (!Array.isArray(definition.steps) || definition.steps.length === 0) {\n      throw new Error('Tutorial must have at least one step');\n    }\n\n    // Validate each step\n    definition.steps.forEach((step, index) => {\n      if (!step.title || !step.content) {\n        throw new Error(`Step ${index} missing required title or content`);\n      }\n\n      // Validate branches if present\n      if (step.branches) {\n        if (!Array.isArray(step.branches)) {\n          throw new Error(`Step ${index} branches must be an array`);\n        }\n\n        step.branches.forEach((branch, branchIndex) => {\n          if (!branch.choice || !branch.label) {\n            throw new Error(`Step ${index} branch ${branchIndex} missing choice or label`);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Check if tutorial is applicable given context\n   * @param {Object} tutorial - Tutorial definition\n   * @param {Object} contextData - Context data\n   * @returns {boolean} True if tutorial should be shown\n   */\n  isTutorialApplicable(tutorial, contextData) {\n    // Check authentication requirements\n    if (tutorial.requiresAuth && !contextData.isAuthenticated) {\n      return false;\n    }\n\n    // Check DAK context requirements\n    if (tutorial.requiresDak && !contextData.repository) {\n      return false;\n    }\n\n    // Check custom conditions\n    if (tutorial.condition && typeof tutorial.condition === 'function') {\n      return tutorial.condition(contextData);\n    }\n\n    return true;\n  }\n\n  /**\n   * Initialize built-in tutorials converted from existing help content\n   */\n  initializeBuiltInTutorials() {\n    // Convert existing GitHub PAT setup tutorial\n    this.registerTutorial('github-pat-setup', {\n      title: 'How to Create a GitHub Personal Access Token',\n      description: 'Step-by-step guide to creating and configuring GitHub Personal Access Tokens for SGEX',\n      category: 'authentication',\n      pages: ['landing-page-unauthenticated', 'welcome', 'pat-login', 'pat-setup-instructions'],\n      priority: 1,\n      badge: '/sgex/cat-paw-lock-icon.svg',\n      steps: [\n        {\n          title: 'Step 1: Go to GitHub Settings',\n          content: `\n            <p>Navigate to your GitHub account settings:</p>\n            <ol>\n              <li>Click your profile picture in the top right</li>\n              <li>Select \"Settings\" from the dropdown</li>\n              <li>Go to \"Developer settings\" → \"Personal access tokens\"</li>\n              <li>Choose \"Fine-grained tokens\" (recommended) or \"Tokens (classic)\"</li>\n            </ol>\n            <div class=\"help-tip\">\n              <strong>💡 Tip:</strong> Fine-grained tokens provide better security with repository-specific access.\n            </div>\n          `\n        },\n        {\n          title: 'Step 2: Generate New Token',\n          content: `\n            <p>Create your new token:</p>\n            <ol>\n              <li>Click \"Generate new token\"</li>\n              <li>Give it a descriptive name like \"SGEX Workbench\"</li>\n              <li>Set expiration (90 days recommended)</li>\n              <li>Select repository access (specific repos or all)</li>\n            </ol>\n            <div class=\"help-warning\">\n              <strong>⚠️ Important:</strong> You'll only see the token once, so copy it immediately!\n            </div>\n          `\n        },\n        {\n          title: 'Step 3: Set Required Permissions',\n          content: `\n            <h4>Which token type are you creating?</h4>\n            <p>The permissions needed depend on your token type:</p>\n          `,\n          branches: [\n            {\n              choice: 'fine-grained',\n              label: '🎯 Fine-grained Token (Recommended)',\n              targetStep: 3\n            },\n            {\n              choice: 'classic',\n              label: '🔧 Classic Token',\n              targetStep: 4\n            }\n          ]\n        },\n        {\n          title: 'Fine-grained Token Permissions',\n          content: `\n            <p>For <strong>fine-grained tokens</strong>, enable these permissions:</p>\n            <ul>\n              <li><strong>Contents:</strong> Read and Write</li>\n              <li><strong>Metadata:</strong> Read</li>\n              <li><strong>Pull requests:</strong> Read and Write</li>\n            </ul>\n            <div class=\"help-tip\">\n              <strong>🔒 Security:</strong> Fine-grained tokens provide better security with minimal permissions.\n            </div>\n          `,\n          next: 5\n        },\n        {\n          title: 'Classic Token Permissions',\n          content: `\n            <p>For <strong>classic tokens</strong>, select these scopes:</p>\n            <ul>\n              <li><strong>repo</strong> - Full control of private repositories</li>\n              <li><strong>read:org</strong> - Read org and team membership</li>\n            </ul>\n            <div class=\"help-tip\">\n              <strong>📝 Note:</strong> Classic tokens have broader permissions but simpler setup.\n            </div>\n          `,\n          next: 5\n        },\n        {\n          title: 'Step 4: Use Your Token',\n          content: `\n            <p>Now you can authenticate with SGEX:</p>\n            <ol>\n              <li>Copy your newly generated token</li>\n              <li>Paste it into the login form</li>\n              <li>Click \"Sign in with Personal Access Token\"</li>\n            </ol>\n            <div class=\"help-tip\">\n              <strong>🔒 Security:</strong> Your token is stored securely in your browser and never shared with servers.\n            </div>\n          `\n        }\n      ]\n    });\n\n    // DAK Components overview tutorial\n    this.registerTutorial('dak-components-overview', {\n      title: 'Understanding DAK Components',\n      description: 'Learn about the 8 core components of WHO SMART Guidelines Digital Adaptation Kits',\n      category: 'dak-management',\n      pages: ['dak-dashboard'],\n      priority: 1,\n      steps: [\n        {\n          title: 'WHO SMART Guidelines DAK Components',\n          content: `\n            <p>Digital Adaptation Kits (DAKs) contain 8 core components organized in two levels:</p>\n            <h4>Level 2: Business Logic & Processes</h4>\n            <ul>\n              <li><strong>Business Processes:</strong> BPMN workflows</li>\n              <li><strong>Decision Support Logic:</strong> DMN decision tables</li>\n              <li><strong>Indicators & Measures:</strong> Performance metrics</li>\n              <li><strong>Data Entry Forms:</strong> Structured questionnaires</li>\n            </ul>\n            <h4>Level 3: Technical Implementation</h4>\n            <ul>\n              <li><strong>Terminology:</strong> Code systems and value sets</li>\n              <li><strong>FHIR Profiles:</strong> Resource structure definitions</li>\n              <li><strong>FHIR Extensions:</strong> Custom data elements</li>\n              <li><strong>Test Data & Examples:</strong> Sample data for validation</li>\n            </ul>\n            <div class=\"help-tip\">\n              <strong>💡 Tip:</strong> Start with Level 2 components to define business logic, then move to Level 3 for technical implementation.\n            </div>\n          `\n        },\n        {\n          title: 'Where to Start?',\n          content: `\n            <h4>What would you like to focus on first?</h4>\n            <p>Choose your primary interest to continue with specific guidance:</p>\n          `,\n          branches: [\n            {\n              choice: 'business-logic',\n              label: '📋 Business Logic & Clinical Workflows',\n              targetStep: 2\n            },\n            {\n              choice: 'technical-implementation', \n              label: '⚙️ Technical Implementation & FHIR',\n              targetStep: 4\n            },\n            {\n              choice: 'overview-complete',\n              label: '✅ Just wanted an overview, I\\'m good to go!',\n              targetStep: 6\n            }\n          ]\n        },\n        {\n          title: 'Business Logic Components',\n          content: `\n            <p>Business logic components define <em>what</em> your DAK does:</p>\n            <h4>🔄 Business Processes</h4>\n            <p>Define clinical workflows and care processes using BPMN diagrams.</p>\n            <h4>🧠 Decision Support Logic</h4>\n            <p>Create decision tables and rules using DMN notation.</p>\n            <h4>📊 Indicators & Measures</h4>\n            <p>Define performance metrics and measurement criteria.</p>\n            <h4>📝 Data Entry Forms</h4>\n            <p>Design structured questionnaires for data collection.</p>\n            <div class=\"help-tip\">\n              <strong>🎯 Best Practice:</strong> Start with business processes to map out your clinical workflow, then add decision logic and forms.\n            </div>\n          `,\n          next: 5\n        },\n        {\n          title: 'Getting Started with Business Logic',\n          content: `\n            <h4>Recommended starting order:</h4>\n            <ol>\n              <li><strong>Business Processes:</strong> Map your clinical workflow first</li>\n              <li><strong>Data Entry Forms:</strong> Design forms for data collection points</li>\n              <li><strong>Decision Support Logic:</strong> Add decision rules and logic</li>\n              <li><strong>Indicators & Measures:</strong> Define success metrics</li>\n            </ol>\n            <div class=\"help-tip\">\n              <strong>💡 Next Steps:</strong> Click on \"Business Processes\" in the dashboard to start creating your first workflow diagram.\n            </div>\n          `,\n          next: 6\n        },\n        {\n          title: 'Technical Implementation Components',\n          content: `\n            <p>Technical components define <em>how</em> your DAK integrates with systems:</p>\n            <h4>🏷️ Terminology</h4>\n            <p>Define code systems, value sets, and concept mappings.</p>\n            <h4>📋 FHIR Profiles</h4>\n            <p>Structure definitions for healthcare data resources.</p>\n            <h4>🔧 FHIR Extensions</h4>\n            <p>Custom data elements and extensions to FHIR.</p>\n            <h4>🧪 Test Data & Examples</h4>\n            <p>Sample data and test cases for validation.</p>\n            <div class=\"help-tip\">\n              <strong>🎯 Best Practice:</strong> Define terminology first, then create profiles, extensions, and test data.\n            </div>\n          `,\n          next: 5\n        },\n        {\n          title: 'Getting Started with Technical Implementation',\n          content: `\n            <h4>Recommended starting order:</h4>\n            <ol>\n              <li><strong>Terminology:</strong> Define your code systems and value sets</li>\n              <li><strong>FHIR Profiles:</strong> Create resource structure definitions</li>\n              <li><strong>FHIR Extensions:</strong> Add custom data elements as needed</li>\n              <li><strong>Test Data & Examples:</strong> Create validation examples</li>\n            </ol>\n            <div class=\"help-tip\">\n              <strong>💡 Next Steps:</strong> Click on \"Terminology\" in the dashboard to start defining your code systems and value sets.\n            </div>\n          `\n        },\n        {\n          title: 'You\\'re Ready to Go!',\n          content: `\n            <p>Great! You now understand the DAK component structure:</p>\n            <ul>\n              <li>✅ Know the 8 core DAK components</li>\n              <li>✅ Understand Level 2 vs Level 3 distinction</li>\n              <li>✅ Ready to start building your DAK</li>\n            </ul>\n            <div class=\"help-tip\">\n              <strong>🚀 Pro Tip:</strong> Use the contextual help on each component page for specific guidance as you work.\n            </div>\n          `\n        }\n      ]\n    });\n\n    // Tutorial Framework Demo - New enhanced tutorial to demonstrate the system\n    this.registerTutorial('tutorial-framework-demo', {\n      title: 'Enhanced Tutorial System Demo',\n      description: 'Demonstration of the new branching tutorial capabilities in SGEX',\n      category: 'getting-started',\n      pages: ['dak-dashboard', 'landing-page-authenticated'],\n      priority: 0, // High priority to show first\n      badge: '/sgex/cat-paw-icon.svg',\n      steps: [\n        {\n          title: 'Welcome to Enhanced Tutorials!',\n          content: `\n            <p>🎉 Welcome to the new enhanced tutorial system in SGEX Workbench!</p>\n            <p>This tutorial demonstrates the new features:</p>\n            <ul>\n              <li><strong>Branching Logic:</strong> Choose your own path through tutorials</li>\n              <li><strong>Progress Tracking:</strong> Your progress is automatically saved</li>\n              <li><strong>Interactive Choices:</strong> Click buttons to make decisions</li>\n              <li><strong>Contextual Content:</strong> Tutorials adapt to your current workflow</li>\n            </ul>\n            <div class=\"help-tip\">\n              <strong>🚀 New Feature:</strong> This tutorial system supports conditional navigation based on user choices!\n            </div>\n          `\n        },\n        {\n          title: 'Choose Your Learning Path',\n          content: `\n            <p>Let's demonstrate branching logic! What would you like to learn about?</p>\n            <h4>Select your area of interest:</h4>\n          `,\n          branches: [\n            {\n              choice: 'tutorial-features',\n              label: '🔧 Tutorial System Features',\n              description: 'Learn about the capabilities of the new tutorial framework'\n            },\n            {\n              choice: 'accessibility-features',\n              label: '♿ Accessibility & Standards',\n              description: 'Discover how tutorials support accessibility and internationalization'\n            },\n            {\n              choice: 'developer-features',\n              label: '👩‍💻 Developer Integration',\n              description: 'See how developers can create and integrate new tutorials'\n            }\n          ]\n        },\n        {\n          title: 'Tutorial System Features',\n          content: `\n            <p>You chose to learn about tutorial features! Here's what makes this system powerful:</p>\n            <h4>🎯 Key Features</h4>\n            <ul>\n              <li><strong>Branching Navigation:</strong> Users can choose different paths through content</li>\n              <li><strong>Progress Persistence:</strong> Tutorial state is saved automatically</li>\n              <li><strong>Context Awareness:</strong> Tutorials adapt based on current page and user state</li>\n              <li><strong>Category Organization:</strong> Tutorials are organized by topic and difficulty</li>\n              <li><strong>Responsive Design:</strong> Works perfectly on desktop and mobile</li>\n            </ul>\n            <div class=\"help-tip\">\n              <strong>💡 Implementation:</strong> Tutorials use alphanumeric IDs with dashes for easy identification and management.\n            </div>\n          `,\n          next: 5\n        },\n        {\n          title: 'Accessibility & Standards Compliance',\n          content: `\n            <p>You chose accessibility! Great choice - SGEX tutorials are built with standards in mind:</p>\n            <h4>♿ Accessibility Features</h4>\n            <ul>\n              <li><strong>WCAG 2.1 AA Compliance:</strong> Proper color contrast and keyboard navigation</li>\n              <li><strong>Screen Reader Support:</strong> Semantic HTML and ARIA labels</li>\n              <li><strong>Keyboard Navigation:</strong> Full keyboard support for all interactions</li>\n              <li><strong>Focus Management:</strong> Clear focus indicators and logical tab order</li>\n            </ul>\n            <h4>🌍 Internationalization</h4>\n            <ul>\n              <li><strong>i18n Ready:</strong> All content supports translation</li>\n              <li><strong>RTL Support:</strong> Right-to-left languages supported</li>\n              <li><strong>Default Locale:</strong> en_US with fallback support</li>\n            </ul>\n            <div class=\"help-tip\">\n              <strong>🏆 Standards:</strong> Follows WHO Enterprise Architecture guidelines for healthcare applications.\n            </div>\n          `,\n          next: 5\n        },\n        {\n          title: 'Developer Integration Guide',\n          content: `\n            <p>You chose the developer path! Here's how to integrate tutorials into your components:</p>\n            <h4>👩‍💻 Integration Methods</h4>\n            <ul>\n              <li><strong>TutorialManager:</strong> Higher-order component for page-level tutorial management</li>\n              <li><strong>TutorialLauncher:</strong> Button component to launch specific tutorials</li>\n              <li><strong>useTutorials Hook:</strong> React hook for functional components</li>\n              <li><strong>Direct Service:</strong> Import tutorialService for advanced usage</li>\n            </ul>\n            <div class=\"help-tip\">\n              <strong>🛠️ Code Example:</strong><br>\n              <code>import { TutorialLauncher } from '../components/TutorialManager';</code><br>\n              <code>&lt;TutorialLauncher tutorialId=\"my-tutorial\" /&gt;</code>\n            </div>\n          `,\n          next: 5\n        },\n        {\n          title: 'Tutorial Complete!',\n          content: `\n            <p>🎊 Congratulations! You've experienced the enhanced tutorial system!</p>\n            <h4>What You've Learned</h4>\n            <ul>\n              <li>✅ How branching logic works in tutorials</li>\n              <li>✅ The key features available to content creators</li>\n              <li>✅ Accessibility and internationalization support</li>\n              <li>✅ Developer integration options</li>\n            </ul>\n            <h4>🚀 Next Steps</h4>\n            <p>Now you can:</p>\n            <ul>\n              <li>Create your own tutorials using the framework</li>\n              <li>Use the TutorialManager components in your pages</li>\n              <li>Explore other tutorials available in the system</li>\n            </ul>\n            <div class=\"help-tip\">\n              <strong>💡 Tip:</strong> Look for the contextual help button on any page to access page-specific tutorials!\n            </div>\n          `\n        }\n      ]\n    });\n  }\n\n  /**\n   * Convert existing help content to enhanced tutorial format (for backward compatibility)\n   * @param {Object} helpTopic - Existing help topic from helpContentService\n   * @returns {Object} Enhanced tutorial definition\n   */\n  convertHelpTopicToTutorial(helpTopic) {\n    if (!helpTopic || helpTopic.type !== 'slideshow') {\n      return null;\n    }\n\n    return {\n      id: helpTopic.id,\n      title: helpTopic.title,\n      description: `Converted from help topic: ${helpTopic.title}`,\n      category: 'legacy',\n      badge: helpTopic.badge,\n      steps: helpTopic.content.map(slide => ({\n        title: slide.title,\n        content: slide.content\n      }))\n    };\n  }\n\n  /**\n   * Get tutorial progress/state storage key\n   * @param {string} tutorialId - Tutorial ID\n   * @param {Object} contextData - Context data\n   * @returns {string} Storage key\n   */\n  getTutorialStateKey(tutorialId, contextData = {}) {\n    const baseKey = `sgex_tutorial_${tutorialId}`;\n    const contextKey = contextData.repository ? \n      `_${contextData.repository.owner}_${contextData.repository.name}` : \n      '';\n    return baseKey + contextKey;\n  }\n\n  /**\n   * Save tutorial progress\n   * @param {string} tutorialId - Tutorial ID\n   * @param {Object} state - Tutorial state\n   * @param {Object} contextData - Context data\n   */\n  saveTutorialProgress(tutorialId, state, contextData = {}) {\n    try {\n      const key = this.getTutorialStateKey(tutorialId, contextData);\n      const progressData = {\n        tutorialId,\n        state,\n        lastAccessed: new Date().toISOString(),\n        contextData: {\n          page: contextData.pageId,\n          repository: contextData.repository ? `${contextData.repository.owner}/${contextData.repository.name}` : null\n        }\n      };\n      localStorage.setItem(key, JSON.stringify(progressData));\n    } catch (error) {\n      console.warn('Failed to save tutorial progress:', error);\n    }\n  }\n\n  /**\n   * Load tutorial progress\n   * @param {string} tutorialId - Tutorial ID\n   * @param {Object} contextData - Context data\n   * @returns {Object|null} Tutorial state or null\n   */\n  loadTutorialProgress(tutorialId, contextData = {}) {\n    try {\n      const key = this.getTutorialStateKey(tutorialId, contextData);\n      const stored = localStorage.getItem(key);\n      if (stored) {\n        return JSON.parse(stored);\n      }\n    } catch (error) {\n      console.warn('Failed to load tutorial progress:', error);\n    }\n    return null;\n  }\n}\n\n// Create and export singleton instance\nconst tutorialService = new TutorialService();\nexport default tutorialService;","/**\n * SGEX Library Loader Service\n * \n * Handles lazy loading of heavy JavaScript libraries to optimize initial page load performance.\n * This service provides:\n * 1. Lazy loading of external libraries (BPMN.js, Octokit, js-yaml, etc.)\n * 2. Module caching to prevent repeated imports\n * 3. Optimized imports with error handling\n * \n * Split from lazyRouteUtils.js for better separation of concerns.\n */\n\n// Cache for lazy-loaded modules to avoid repeated imports\nconst moduleCache = new Map();\n\n/**\n * Lazy load Octokit for GitHub API operations\n * @returns {Promise<Octokit>} Octokit constructor\n */\nexport async function lazyLoadOctokit() {\n  const cacheKey = 'octokit';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const { Octokit } = await import('@octokit/rest');\n  moduleCache.set(cacheKey, Octokit);\n  return Octokit;\n}\n\n/**\n * Lazy load BPMN.js Modeler for BPMN editing\n * @returns {Promise<BpmnModeler>} BpmnModeler constructor\n */\nexport async function lazyLoadBpmnModeler() {\n  const cacheKey = 'bpmn-modeler';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const BpmnModeler = await import('bpmn-js/lib/Modeler');\n  const modeler = BpmnModeler.default;\n  moduleCache.set(cacheKey, modeler);\n  return modeler;\n}\n\n/**\n * Lazy load BPMN.js Viewer for BPMN viewing\n * @returns {Promise<BpmnViewer>} BpmnViewer constructor\n */\nexport async function lazyLoadBpmnViewer() {\n  const cacheKey = 'bpmn-viewer';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const BpmnViewer = await import('bpmn-js/lib/NavigatedViewer');\n  const viewer = BpmnViewer.default;\n  moduleCache.set(cacheKey, viewer);\n  return viewer;\n}\n\n/**\n * Lazy load js-yaml for YAML parsing\n * @returns {Promise<yaml>} js-yaml module\n */\nexport async function lazyLoadYaml() {\n  const cacheKey = 'js-yaml';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const yaml = await import('js-yaml');\n  const yamlModule = yaml.default;\n  moduleCache.set(cacheKey, yamlModule);\n  return yamlModule;\n}\n\n/**\n * Lazy load MDEditor for markdown editing\n * @returns {Promise<MDEditor>} MDEditor component\n */\nexport async function lazyLoadMDEditor() {\n  const cacheKey = 'md-editor';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const MDEditor = await import('@uiw/react-md-editor');\n  const editor = MDEditor.default;\n  moduleCache.set(cacheKey, editor);\n  return editor;\n}\n\n/**\n * Lazy load react-syntax-highlighter for code syntax highlighting\n * @returns {Promise<SyntaxHighlighter>} Prism SyntaxHighlighter\n */\nexport async function lazyLoadSyntaxHighlighter() {\n  const cacheKey = 'syntax-highlighter';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const { Prism } = await import('react-syntax-highlighter');\n  moduleCache.set(cacheKey, Prism);\n  return Prism;\n}\n\n/**\n * Lazy load syntax highlighter styles\n * @returns {Promise<Object>} oneLight style theme\n */\nexport async function lazyLoadSyntaxHighlighterStyles() {\n  const cacheKey = 'syntax-highlighter-styles';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const { oneLight } = await import('react-syntax-highlighter/dist/esm/styles/prism');\n  moduleCache.set(cacheKey, oneLight);\n  return oneLight;\n}\n\n/**\n * Lazy load ReactMarkdown for markdown rendering\n * @returns {Promise<ReactMarkdown>} ReactMarkdown component\n */\nexport async function lazyLoadReactMarkdown() {\n  const cacheKey = 'react-markdown';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const ReactMarkdown = await import('react-markdown');\n  const component = ReactMarkdown.default;\n  moduleCache.set(cacheKey, component);\n  return component;\n}\n\n/**\n * Lazy load AJV for JSON schema validation\n * @returns {Promise<Ajv>} AJV constructor\n */\nexport async function lazyLoadAjv() {\n  const cacheKey = 'ajv';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const AjvModule = await import('ajv');\n  const Ajv = AjvModule.default;\n  moduleCache.set(cacheKey, Ajv);\n  return Ajv;\n}\n\n/**\n * Lazy load AJV formats for additional validation formats\n * @returns {Promise<Function>} addFormats function\n */\nexport async function lazyLoadAjvFormats() {\n  const cacheKey = 'ajv-formats';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const addFormatsModule = await import('ajv-formats');\n  const addFormats = addFormatsModule.default;\n  moduleCache.set(cacheKey, addFormats);\n  return addFormats;\n}\n\n/**\n * Lazy load DOMPurify for HTML sanitization\n * @returns {Promise<DOMPurify>} DOMPurify instance\n */\nexport async function lazyLoadDOMPurify() {\n  const cacheKey = 'dompurify';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const DOMPurifyModule = await import('dompurify');\n  let DOMPurify = DOMPurifyModule.default;\n  \n  // In browser environment, DOMPurify might need to be initialized with window\n  if (typeof window !== 'undefined' && typeof DOMPurify === 'function') {\n    // Some versions of DOMPurify export a factory function that needs the window object\n    try {\n      DOMPurify = DOMPurify(window);\n    } catch (error) {\n      // If it fails, DOMPurify might already be the correct object\n      console.debug('DOMPurify initialization note:', error.message);\n    }\n  }\n  \n  moduleCache.set(cacheKey, DOMPurify);\n  return DOMPurify;\n}\n\n/**\n * Lazy load rehype-raw for HTML table rendering in markdown\n * @returns {Promise<rehypeRaw>} rehypeRaw plugin\n */\nexport async function lazyLoadRehypeRaw() {\n  const cacheKey = 'rehype-raw';\n  \n  if (moduleCache.has(cacheKey)) {\n    return moduleCache.get(cacheKey);\n  }\n  \n  const rehypeRawModule = await import('rehype-raw');\n  const rehypeRaw = rehypeRawModule.default;\n  moduleCache.set(cacheKey, rehypeRaw);\n  return rehypeRaw;\n}\n\n/**\n * Clear the module cache (useful for testing)\n */\nexport function clearLazyImportCache() {\n  moduleCache.clear();\n}\n\n/**\n * Library loader utilities for unified access\n */\nconst LibraryLoaderService = {\n  lazyLoadOctokit,\n  lazyLoadBpmnModeler,\n  lazyLoadBpmnViewer,\n  lazyLoadYaml,\n  lazyLoadMDEditor,\n  lazyLoadSyntaxHighlighter,\n  lazyLoadSyntaxHighlighterStyles,\n  lazyLoadReactMarkdown,\n  lazyLoadAjv,\n  lazyLoadAjvFormats,\n  lazyLoadDOMPurify,\n  lazyLoadRehypeRaw,\n  clearLazyImportCache\n};\n\nexport default LibraryLoaderService;","/**\n * Utility for managing concurrent async operations with rate limiting\n */\n\n/**\n * Processes items concurrently with a specified concurrency limit\n * @param {Array} items - Items to process\n * @param {Function} processor - Async function to process each item\n * @param {Object} options - Options for concurrency control\n * @param {number} options.concurrency - Maximum concurrent operations (default: 5)\n * @param {Function} options.onProgress - Progress callback (current, total, item, result)\n * @param {Function} options.onItemComplete - Callback when item completes (item, result, error)\n * @param {Function} options.onItemStart - Callback when item starts processing (item, index)\n * @returns {Promise<Array>} Array of results (in original order)\n */\nexport async function processConcurrently(items, processor, options = {}) {\n  const {\n    concurrency = 5,\n    onProgress = null,\n    onItemComplete = null,\n    onItemStart = null\n  } = options;\n\n  if (!items || items.length === 0) {\n    return [];\n  }\n\n  const results = new Array(items.length);\n  const total = items.length;\n  let completed = 0;\n\n  // Create a queue of work items\n  const queue = items.map((item, index) => ({ item, index }));\n  \n  // Worker function that processes items from the queue\n  const worker = async () => {\n    while (queue.length > 0) {\n      const { item, index } = queue.shift();\n      \n      // Notify that processing is starting\n      if (onItemStart) {\n        onItemStart(item, index);\n      }\n      \n      try {\n        const result = await processor(item, index);\n        results[index] = result;\n        \n        completed++;\n        \n        // Call callbacks\n        if (onProgress) {\n          onProgress(completed, total, item, result);\n        }\n        if (onItemComplete) {\n          onItemComplete(item, result, null);\n        }\n      } catch (error) {\n        // Store error as result\n        results[index] = { error, item };\n        \n        completed++;\n        \n        // Call callbacks\n        if (onProgress) {\n          onProgress(completed, total, item, null);\n        }\n        if (onItemComplete) {\n          onItemComplete(item, null, error);\n        }\n      }\n    }\n  };\n\n  // Start worker promises (limited by concurrency)\n  const workers = Array(Math.min(concurrency, items.length))\n    .fill()\n    .map(() => worker());\n\n  // Wait for all workers to complete\n  await Promise.all(workers);\n\n  return results;\n}\n\n/**\n * Rate-limited function executor\n * Useful for API calls that need to respect rate limits\n */\nexport class RateLimiter {\n  constructor(requestsPerSecond = 5) {\n    this.requestsPerSecond = requestsPerSecond;\n    this.requests = [];\n    this.interval = 1000 / requestsPerSecond; // ms between requests\n  }\n\n  /**\n   * Execute a function with rate limiting\n   * @param {Function} fn - Function to execute\n   * @returns {Promise} Result of the function\n   */\n  async execute(fn) {\n    const now = Date.now();\n    \n    // Remove requests older than 1 second\n    this.requests = this.requests.filter(time => now - time < 1000);\n    \n    // If we're at the limit, wait\n    if (this.requests.length >= this.requestsPerSecond) {\n      const oldestRequest = Math.min(...this.requests);\n      const waitTime = 1000 - (now - oldestRequest) + 10; // Add 10ms buffer\n      if (waitTime > 0) {\n        await new Promise(resolve => setTimeout(resolve, waitTime));\n      }\n    }\n    \n    // Record this request\n    this.requests.push(Date.now());\n    \n    // Execute the function\n    return await fn();\n  }\n}","/**\n * Simple in-memory cache for repository compatibility checks\n * Prevents redundant sushi-config.yaml downloads during scanning\n */\n\nclass RepositoryCompatibilityCache {\n  constructor(ttlMinutes = 30) {\n    this.cache = new Map();\n    this.ttl = ttlMinutes * 60 * 1000; // Convert to milliseconds\n  }\n\n  /**\n   * Generate cache key for a repository\n   * @param {string} owner - Repository owner\n   * @param {string} repo - Repository name\n   * @returns {string} Cache key\n   */\n  _getCacheKey(owner, repo) {\n    return `${owner}/${repo}`;\n  }\n\n  /**\n   * Check if cache entry is still valid\n   * @param {Object} entry - Cache entry\n   * @returns {boolean} True if valid\n   */\n  _isValid(entry) {\n    return Date.now() - entry.timestamp < this.ttl;\n  }\n\n  /**\n   * Get cached compatibility result\n   * @param {string} owner - Repository owner\n   * @param {string} repo - Repository name\n   * @returns {boolean|null} Cached result or null if not cached/expired\n   */\n  get(owner, repo) {\n    const key = this._getCacheKey(owner, repo);\n    const entry = this.cache.get(key);\n    \n    if (!entry) {\n      return null;\n    }\n    \n    if (!this._isValid(entry)) {\n      this.cache.delete(key);\n      return null;\n    }\n    \n    return entry.compatible;\n  }\n\n  /**\n   * Set cached compatibility result\n   * @param {string} owner - Repository owner\n   * @param {string} repo - Repository name\n   * @param {boolean} compatible - Whether repository is SMART guidelines compatible\n   */\n  set(owner, repo, compatible) {\n    const key = this._getCacheKey(owner, repo);\n    this.cache.set(key, {\n      compatible,\n      timestamp: Date.now()\n    });\n  }\n\n  /**\n   * Clear all cached entries\n   */\n  clear() {\n    this.cache.clear();\n  }\n\n  /**\n   * Clean up expired entries\n   */\n  cleanup() {\n    const now = Date.now();\n    for (const [key, entry] of this.cache.entries()) {\n      if (now - entry.timestamp >= this.ttl) {\n        this.cache.delete(key);\n      }\n    }\n  }\n\n  /**\n   * Get cache statistics\n   * @returns {Object} Cache stats\n   */\n  getStats() {\n    this.cleanup();\n    return {\n      size: this.cache.size,\n      ttlMinutes: this.ttl / (60 * 1000),\n      entries: Array.from(this.cache.entries()).map(([key, entry]) => ({\n        repository: key,\n        compatible: entry.compatible,\n        ageMinutes: Math.round((Date.now() - entry.timestamp) / (60 * 1000))\n      }))\n    };\n  }\n}\n\n// Create a singleton instance\nconst repositoryCompatibilityCache = new RepositoryCompatibilityCache();\n\nexport default repositoryCompatibilityCache;","/**\n * SecureTokenStorage - Secure storage for GitHub Personal Access Tokens\n * \n * Features:\n * - XOR encryption using browser fingerprint-based keys\n * - Token format validation (classic and fine-grained PATs)\n * - Automatic token expiration (24 hours)\n * - Secure token masking for logs and error messages\n */\n\nimport logger from '../utils/logger';\n\nclass SecureTokenStorage {\n  constructor() {\n    this.logger = logger.getLogger('SecureTokenStorage');\n    this.storageKey = 'sgex_secure_token';\n    this.expirationHours = 24;\n    this.logger.debug('SecureTokenStorage instance created');\n  }\n\n  /**\n   * Generate a browser fingerprint for encryption key\n   * @returns {string} Browser fingerprint\n   */\n  generateBrowserFingerprint() {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.textBaseline = 'top';\n    ctx.font = '14px Arial';\n    ctx.fillText('Browser fingerprint', 2, 2);\n    \n    const fingerprint = [\n      navigator.userAgent,\n      navigator.language,\n      window.screen.width + 'x' + window.screen.height,\n      window.screen.colorDepth,\n      new Date().getTimezoneOffset(),\n      canvas.toDataURL()\n    ].join('|');\n    \n    // Create a simple hash of the fingerprint\n    let hash = 0;\n    for (let i = 0; i < fingerprint.length; i++) {\n      const char = fingerprint.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    \n    return Math.abs(hash).toString(36);\n  }\n\n  /**\n   * XOR encrypt/decrypt text using a key\n   * @param {string} text - Text to encrypt/decrypt\n   * @param {string} key - Encryption key\n   * @returns {string} Encrypted/decrypted text\n   */\n  xorCipher(text, key) {\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n      result += String.fromCharCode(\n        text.charCodeAt(i) ^ key.charCodeAt(i % key.length)\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Validate GitHub Personal Access Token format\n   * @param {string} token - Token to validate\n   * @returns {object} Validation result with type and validity\n   */\n  validateTokenFormat(token) {\n    if (!token || typeof token !== 'string') {\n      return { isValid: false, type: 'invalid', reason: 'Token is empty or not a string' };\n    }\n\n    // Remove any whitespace\n    const cleanToken = token.trim();\n\n    // Classic Personal Access Token format: ghp_[36 characters A-Za-z0-9]\n    if (cleanToken.match(/^ghp_[A-Za-z0-9]{36}$/)) {\n      return { isValid: true, type: 'classic', token: cleanToken };\n    }\n\n    // Fine-grained Personal Access Token format: github_pat_[22 characters]_[59 characters]\n    if (cleanToken.match(/^github_pat_[A-Za-z0-9]{22}_[A-Za-z0-9]{59}$/)) {\n      return { isValid: true, type: 'fine-grained', token: cleanToken };\n    }\n\n    // OAuth token format: gho_[36 characters] (for completeness)\n    if (cleanToken.match(/^gho_[A-Za-z0-9]{36}$/)) {\n      return { isValid: true, type: 'oauth', token: cleanToken };\n    }\n\n    // Check for old-style tokens (40 hex characters) - deprecated but might still work\n    if (cleanToken.match(/^[a-fA-F0-9]{40}$/)) {\n      return { isValid: true, type: 'legacy', token: cleanToken };\n    }\n\n    return { \n      isValid: false, \n      type: 'invalid', \n      reason: 'Token does not match expected GitHub PAT format'\n    };\n  }\n\n  /**\n   * Mask token for safe logging\n   * @param {string} token - Token to mask\n   * @returns {string} Masked token\n   */\n  maskToken(token) {\n    if (!token || typeof token !== 'string') {\n      return '[INVALID_TOKEN]';\n    }\n\n    const cleanToken = token.trim();\n    if (cleanToken.length < 8) {\n      return '[INVALID_TOKEN]';\n    }\n\n    // Show first 4 and last 4 characters for debugging purposes\n    return `${cleanToken.substring(0, 4)}${'*'.repeat(cleanToken.length - 8)}${cleanToken.substring(cleanToken.length - 4)}`;\n  }\n\n  /**\n   * Store token securely with encryption and expiration\n   * @param {string} token - GitHub Personal Access Token\n   * @returns {boolean} Success status\n   */\n  storeToken(token) {\n    try {\n      this.logger.debug('Starting secure token storage');\n\n      // Validate token format\n      const validation = this.validateTokenFormat(token);\n      if (!validation.isValid) {\n        this.logger.warn('Token validation failed', { \n          reason: validation.reason,\n          tokenMask: this.maskToken(token)\n        });\n        return false;\n      }\n\n      this.logger.debug('Token validation successful', { \n        type: validation.type,\n        tokenMask: this.maskToken(token)\n      });\n\n      // Generate encryption key\n      const fingerprint = this.generateBrowserFingerprint();\n      const encryptionKey = `sgex_${fingerprint}_${Date.now().toString(36)}`;\n\n      // Encrypt token\n      const encryptedToken = this.xorCipher(validation.token, encryptionKey);\n      \n      // Create storage object with metadata\n      const storageData = {\n        token: btoa(encryptedToken), // Base64 encode for safe storage\n        key: btoa(encryptionKey), // Base64 encode the key\n        type: validation.type,\n        created: Date.now(),\n        expires: Date.now() + (this.expirationHours * 60 * 60 * 1000),\n        fingerprint: fingerprint\n      };\n\n      // Store in sessionStorage (more secure than localStorage for tokens)\n      sessionStorage.setItem(this.storageKey, JSON.stringify(storageData));\n      \n      // Clear any old tokens from localStorage\n      localStorage.removeItem('github_token');\n      sessionStorage.removeItem('github_token');\n\n      this.logger.debug('Token stored securely', { \n        type: validation.type,\n        expires: new Date(storageData.expires).toISOString(),\n        tokenMask: this.maskToken(token)\n      });\n\n      return true;\n    } catch (error) {\n      this.logger.error('Failed to store token securely', { \n        error: error.message,\n        tokenMask: this.maskToken(token)\n      });\n      return false;\n    }\n  }\n\n  /**\n   * Retrieve and decrypt stored token\n   * @returns {object|null} Token data or null if not found/expired\n   */\n  retrieveToken() {\n    try {\n      this.logger.debug('Attempting to retrieve secure token');\n\n      const storedData = sessionStorage.getItem(this.storageKey);\n      if (!storedData) {\n        this.logger.debug('No secure token found in storage');\n        return null;\n      }\n\n      const data = JSON.parse(storedData);\n      \n      // Check expiration\n      if (Date.now() > data.expires) {\n        this.logger.warn('Stored token has expired');\n        this.clearToken();\n        return null;\n      }\n\n      // Verify browser fingerprint\n      const currentFingerprint = this.generateBrowserFingerprint();\n      if (data.fingerprint !== currentFingerprint) {\n        this.logger.warn('Browser fingerprint mismatch - possible security issue');\n        this.clearToken();\n        return null;\n      }\n\n      // Decrypt token\n      const encryptionKey = atob(data.key);\n      const encryptedToken = atob(data.token);\n      const decryptedToken = this.xorCipher(encryptedToken, encryptionKey);\n\n      // Validate decrypted token\n      const validation = this.validateTokenFormat(decryptedToken);\n      if (!validation.isValid) {\n        this.logger.error('Decrypted token failed validation');\n        this.clearToken();\n        return null;\n      }\n\n      this.logger.debug('Token retrieved and decrypted successfully', { \n        type: data.type,\n        expires: new Date(data.expires).toISOString(),\n        tokenMask: this.maskToken(decryptedToken)\n      });\n\n      return {\n        token: validation.token,\n        type: data.type,\n        created: data.created,\n        expires: data.expires\n      };\n    } catch (error) {\n      this.logger.error('Failed to retrieve secure token', { error: error.message });\n      this.clearToken();\n      return null;\n    }\n  }\n\n  /**\n   * Check if a valid token exists without retrieving it\n   * @returns {boolean} True if valid token exists\n   */\n  hasValidToken() {\n    try {\n      const storedData = sessionStorage.getItem(this.storageKey);\n      if (!storedData) {\n        return false;\n      }\n\n      const data = JSON.parse(storedData);\n      \n      // Check expiration\n      if (Date.now() > data.expires) {\n        this.clearToken();\n        return false;\n      }\n\n      // Verify browser fingerprint\n      const currentFingerprint = this.generateBrowserFingerprint();\n      if (data.fingerprint !== currentFingerprint) {\n        this.clearToken();\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      this.logger.error('Error checking token validity', { error: error.message });\n      this.clearToken();\n      return false;\n    }\n  }\n\n  /**\n   * Clear stored token and cleanup\n   */\n  clearToken() {\n    this.logger.debug('Clearing secure token storage');\n    \n    sessionStorage.removeItem(this.storageKey);\n    \n    // Also clear legacy token storage\n    sessionStorage.removeItem('github_token');\n    localStorage.removeItem('github_token');\n  }\n\n  /**\n   * Get token expiration info\n   * @returns {object|null} Expiration info or null if no token\n   */\n  getTokenInfo() {\n    try {\n      const storedData = sessionStorage.getItem(this.storageKey);\n      if (!storedData) {\n        return null;\n      }\n\n      const data = JSON.parse(storedData);\n      const timeRemaining = data.expires - Date.now();\n      \n      return {\n        type: data.type,\n        created: new Date(data.created),\n        expires: new Date(data.expires),\n        timeRemaining: Math.max(0, timeRemaining),\n        isExpired: timeRemaining <= 0,\n        isValid: this.hasValidToken()\n      };\n    } catch (error) {\n      this.logger.error('Error getting token info', { error: error.message });\n      return null;\n    }\n  }\n\n  /**\n   * Migrate from legacy token storage\n   * @returns {boolean} True if migration was successful\n   */\n  migrateLegacyToken() {\n    try {\n      // Check for tokens in legacy storage\n      const legacyToken = sessionStorage.getItem('github_token') || localStorage.getItem('github_token');\n      \n      if (!legacyToken) {\n        this.logger.debug('No legacy token found for migration');\n        return false;\n      }\n\n      this.logger.debug('Migrating legacy token to secure storage');\n\n      // Store using new secure method\n      const success = this.storeToken(legacyToken);\n      \n      if (success) {\n        // Clear legacy storage\n        sessionStorage.removeItem('github_token');\n        localStorage.removeItem('github_token');\n        this.logger.debug('Legacy token migration completed successfully');\n        return true;\n      } else {\n        this.logger.error('Failed to migrate legacy token');\n        return false;\n      }\n    } catch (error) {\n      this.logger.error('Error during legacy token migration', { error: error.message });\n      return false;\n    }\n  }\n}\n\n// Create singleton instance\nconst secureTokenStorage = new SecureTokenStorage();\n\nexport default secureTokenStorage;","import { lazyLoadOctokit } from '../services/libraryLoaderService';\nimport { processConcurrently } from '../utils/concurrency';\nimport repositoryCompatibilityCache from '../utils/repositoryCompatibilityCache';\nimport secureTokenStorage from './secureTokenStorage';\nimport logger from '../utils/logger';\n\n\n\nclass GitHubService {\n  constructor() {\n    this.octokit = null;\n    this.isAuthenticated = false;\n    this.permissions = null;\n    this.tokenType = null; // 'classic', 'fine-grained', or 'oauth'\n    this.logger = logger.getLogger('GitHubService');\n    this.logger.debug('GitHubService instance created');\n  }\n\n  // Helper method to create Octokit instance with lazy loading\n  async createOctokitInstance(auth = null) {\n    const Octokit = await lazyLoadOctokit();\n    return new Octokit(auth ? { auth } : {});\n  }\n\n  // Initialize with a GitHub token (supports both OAuth and PAT tokens)\n  async authenticate(token) {\n    const startTime = Date.now();\n    this.logger.auth('Starting authentication', { \n      tokenProvided: !!token, \n      tokenMask: token ? secureTokenStorage.maskToken(token) : 'none'\n    });\n    \n    try {\n      // Validate token format using SecureTokenStorage\n      const validation = secureTokenStorage.validateTokenFormat(token);\n      if (!validation.isValid) {\n        this.logger.warn('Token validation failed during authentication', { \n          reason: validation.reason,\n          tokenMask: secureTokenStorage.maskToken(token)\n        });\n        this.isAuthenticated = false;\n        return false;\n      }\n\n      // Lazy load Octokit to reduce initial bundle size\n      this.octokit = await this.createOctokitInstance(validation.token);\n      this.isAuthenticated = true;\n      this.tokenType = validation.type;\n      \n      // Store token securely\n      const stored = secureTokenStorage.storeToken(validation.token);\n      if (!stored) {\n        this.logger.warn('Failed to store token securely, authentication will not persist');\n      }\n      \n      const duration = Date.now() - startTime;\n      this.logger.auth('Authentication successful', { \n        duration, \n        tokenType: this.tokenType,\n        tokenMask: secureTokenStorage.maskToken(token),\n        securelyStored: stored\n      });\n      this.logger.performance('GitHub authentication', duration);\n      \n      return true;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.logger.auth('Authentication failed', { \n        error: error.message, \n        duration,\n        tokenMask: secureTokenStorage.maskToken(token)\n      });\n      console.error('Failed to authenticate with GitHub:', error);\n      this.isAuthenticated = false;\n      secureTokenStorage.clearToken(); // Clear any partially stored data\n      return false;\n    }\n  }\n\n  // Initialize with an existing Octokit instance (for OAuth flow)\n  authenticateWithOctokit(octokitInstance) {\n    this.logger.auth('Starting OAuth authentication with Octokit instance');\n    \n    try {\n      this.octokit = octokitInstance;\n      this.isAuthenticated = true;\n      this.tokenType = 'oauth';\n      \n      this.logger.auth('OAuth authentication successful', { tokenType: this.tokenType });\n      return true;\n    } catch (error) {\n      this.logger.auth('OAuth authentication failed', { error: error.message });\n      console.error('Failed to authenticate with Octokit instance:', error);\n      this.isAuthenticated = false;\n      return false;\n    }\n  }\n\n  // Initialize authentication from securely stored token\n  async initializeFromStoredToken() {\n    this.logger.auth('Attempting to initialize from stored token');\n    \n    try {\n      // First try to migrate any legacy tokens\n      const migrated = secureTokenStorage.migrateLegacyToken();\n      if (migrated) {\n        this.logger.debug('Successfully migrated legacy token to secure storage');\n      }\n\n      // Retrieve token from secure storage\n      const tokenData = secureTokenStorage.retrieveToken();\n      if (!tokenData) {\n        this.logger.debug('No valid stored token found');\n        return false;\n      }\n\n      // Initialize Octokit with stored token using lazy loading\n      this.octokit = await this.createOctokitInstance(tokenData.token);\n      this.isAuthenticated = true;\n      this.tokenType = tokenData.type;\n      \n      this.logger.auth('Successfully initialized from stored token', {\n        tokenType: this.tokenType,\n        tokenMask: secureTokenStorage.maskToken(tokenData.token),\n        expires: new Date(tokenData.expires).toISOString()\n      });\n      \n      return true;\n    } catch (error) {\n      this.logger.auth('Failed to initialize from stored token', { error: error.message });\n      this.isAuthenticated = false;\n      secureTokenStorage.clearToken();\n      return false;\n    }\n  }\n\n  // Check if there's a valid stored token\n  hasStoredToken() {\n    return secureTokenStorage.hasValidToken();\n  }\n\n  // Get information about stored token\n  getStoredTokenInfo() {\n    return secureTokenStorage.getTokenInfo();\n  }\n\n  // Check token permissions and type\n  async checkTokenPermissions() {\n    if (!this.isAuth()) {\n      const error = new Error('Not authenticated with GitHub');\n      this.logger.error('Token permission check failed - not authenticated');\n      throw error;\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', '/user', null);\n\n    try {\n      // Try to get token info to determine type and permissions\n      const response = await this.octokit.request('GET /user');\n      this.logger.apiResponse('GET', '/user', response.status, Date.now() - startTime);\n      \n      // Check if this is a fine-grained token by trying to access rate limit info\n      try {\n        const rateLimitStart = Date.now();\n        this.logger.apiCall('GET', '/rate_limit', null);\n        const rateLimit = await this.octokit.rest.rateLimit.get();\n        this.logger.apiResponse('GET', '/rate_limit', rateLimit.status, Date.now() - rateLimitStart);\n        \n        // Fine-grained tokens have different rate limit structure\n        this.tokenType = rateLimit.data.resources.core ? 'classic' : 'fine-grained';\n        this.logger.debug('Token type determined', { tokenType: this.tokenType, hasCore: !!rateLimit.data.resources.core });\n      } catch (rateLimitError) {\n        this.tokenType = 'unknown';\n        this.logger.warn('Could not determine token type from rate limit', { error: rateLimitError.message });\n      }\n\n      const permissions = {\n        type: this.tokenType,\n        user: response.data\n      };\n      \n      this.permissions = permissions;\n      this.logger.debug('Token permissions checked successfully', { \n        tokenType: this.tokenType, \n        username: response.data.login \n      });\n      \n      return permissions;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.logger.apiError('GET', '/user', error);\n      this.logger.performance('Token permission check (failed)', duration);\n      console.error('Failed to check token permissions:', error);\n      throw error;\n    }\n  }\n\n  // Check if we have write permissions for a specific repository\n  async checkRepositoryWritePermissions(owner, repo) {\n    if (!this.isAuth()) {\n      this.logger.warn('Cannot check repository write permissions - not authenticated', { owner, repo });\n      return false;\n    }\n\n    const startTime = Date.now();\n    this.logger.debug('Checking write permissions for repository', { owner, repo });\n\n    try {\n      // Get current user first\n      const currentUser = await this.getCurrentUser();\n      const username = currentUser.login;\n      \n      this.logger.apiCall('GET', `/repos/${owner}/${repo}/collaborators/${username}/permission`, null);\n      \n      // Try to get repository collaborator permissions\n      const { data } = await this.octokit.rest.repos.getCollaboratorPermissionLevel({\n        owner,\n        repo,\n        username\n      });\n      \n      const duration = Date.now() - startTime;\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/collaborators/${username}/permission`, 200, duration);\n      \n      // GitHub permission levels: read, triage, write, maintain, admin\n      // Users with write, maintain, or admin permissions can merge PRs\n      const hasWriteAccess = ['write', 'maintain', 'admin'].includes(data.permission);\n      this.logger.debug('Repository write permissions checked', { \n        owner, \n        repo, \n        permission: data.permission, \n        hasWriteAccess,\n        supportedLevels: ['write', 'maintain', 'admin']\n      });\n      \n      return hasWriteAccess;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.logger.apiError('GET', `/repos/${owner}/${repo}/collaborators/*/permission`, error);\n      this.logger.performance('Repository write permission check (failed)', duration);\n      \n      // Better error logging to help debug permission issues\n      console.warn(`Could not check repository write permissions for ${owner}/${repo}:`, {\n        error: error.message,\n        status: error.status,\n        statusText: error.response?.statusText,\n        headers: error.response?.headers\n      });\n      \n      this.logger.warn('Assuming no write access due to permission check failure', { \n        owner, \n        repo, \n        error: error.message,\n        status: error.status,\n        userGuidance: 'Check if your Personal Access Token has the required scopes: repo (classic) or Contents+Pull requests (fine-grained)'\n      });\n      return false;\n    }\n  }\n\n  // Alias method for backward compatibility - delegates to checkRepositoryWritePermissions\n  async checkRepositoryPermissions(owner, repo) {\n    return this.checkRepositoryWritePermissions(owner, repo);\n  }\n\n  // Check if the token has permission to create comments on issues/PRs\n  async checkCommentPermissions(owner, repo) {\n    if (!this.isAuth()) {\n      this.logger.warn('Cannot check comment permissions - not authenticated', { owner, repo });\n      return false;\n    }\n\n    const startTime = Date.now();\n    this.logger.debug('Checking comment permissions for repository', { owner, repo });\n\n    try {\n      // Try to access the issues endpoint, which is required for commenting on PRs\n      // This is a safe read operation that will fail gracefully if no permission\n      this.logger.apiCall('GET', `/repos/${owner}/${repo}/issues`, { per_page: 1 });\n      \n      await this.octokit.rest.issues.listForRepo({\n        owner,\n        repo,\n        per_page: 1,\n        state: 'all'\n      });\n      \n      const duration = Date.now() - startTime;\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/issues`, 200, duration);\n      \n      // If we can read issues, we likely can comment on them\n      // But this is just a heuristic - the actual test is when we try to comment\n      this.logger.debug('Issues endpoint accessible - comment permissions likely available', { owner, repo });\n      return true;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.logger.apiError('GET', `/repos/${owner}/${repo}/issues`, error);\n      this.logger.performance('Comment permission check (failed)', duration);\n      \n      // Check if it's a permissions error\n      if (error.status === 403 || error.status === 401) {\n        this.logger.warn('Token does not have permission to access issues/comments', { \n          owner, \n          repo, \n          error: error.message,\n          status: error.status \n        });\n        return false;\n      }\n      \n      // For other errors, assume we have permission and let the actual comment attempt handle it\n      this.logger.warn('Could not determine comment permissions, assuming available', { \n        owner, \n        repo, \n        error: error.message \n      });\n      return true;\n    }\n  }\n\n  // Check if authenticated\n  isAuth() {\n    return this.isAuthenticated && this.octokit !== null;\n  }\n\n  // Get current user data\n  async getCurrentUser() {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.users.getAuthenticated();\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch user data:', error);\n      throw error;\n    }\n  }\n\n  // Get user's organizations\n  async getUserOrganizations() {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.orgs.listForAuthenticatedUser();\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch organizations:', error);\n      throw error;\n    }\n  }\n\n  // Get specific organization data (public data, no auth required)\n  async getOrganization(orgLogin) {\n    try {\n      // Create a temporary Octokit instance for public API calls if we don't have one\n      const octokit = this.octokit || await this.createOctokitInstance();\n      \n      const { data } = await octokit.rest.orgs.get({\n        org: orgLogin\n      });\n      return data;\n    } catch (error) {\n      console.error(`Failed to fetch organization ${orgLogin}:`, error);\n      throw error;\n    }\n  }\n\n  // Get specific user data (public data, no auth required)\n  async getUser(username) {\n    try {\n      // Create a temporary Octokit instance for public API calls if we don't have one\n      const octokit = this.octokit || await this.createOctokitInstance();\n      \n      const { data } = await octokit.rest.users.getByUsername({\n        username\n      });\n      return data;\n    } catch (error) {\n      console.error(`Failed to fetch user ${username}:`, error);\n      throw error;\n    }\n  }\n\n  // Get public repositories for a user or organization (no auth required)\n  async getPublicRepositories(owner, type = 'user') {\n    try {\n      // Create a temporary Octokit instance for public API calls if we don't have one\n      const octokit = this.octokit || await this.createOctokitInstance();\n      \n      let repositories = [];\n      let page = 1;\n      let hasMorePages = true;\n\n      // Fetch all public repositories using pagination\n      while (hasMorePages) {\n        let response;\n        if (type === 'user') {\n          response = await octokit.rest.repos.listForUser({\n            username: owner,\n            sort: 'updated',\n            per_page: 100,\n            page: page,\n          });\n        } else {\n          response = await octokit.rest.repos.listForOrg({\n            org: owner,\n            sort: 'updated',\n            per_page: 100,\n            page: page,\n          });\n        }\n\n        repositories = repositories.concat(response.data);\n        \n        // Check if there are more pages\n        hasMorePages = response.data.length === 100;\n        page++;\n      }\n\n      return repositories;\n    } catch (error) {\n      console.error(`Failed to fetch public repositories for ${owner}:`, error);\n      throw error;\n    }\n  }\n\n  // Get WHO organization data with fresh avatar\n  async getWHOOrganization() {\n    try {\n      const whoData = await this.getOrganization('WorldHealthOrganization');\n      return {\n        id: whoData.id,\n        login: whoData.login,\n        display_name: whoData.name || 'World Health Organization',\n        description: whoData.description || 'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',\n        avatar_url: whoData.avatar_url,\n        html_url: whoData.html_url,\n        type: 'Organization',\n        permissions: {\n          can_create_repositories: true,\n          can_create_private_repositories: true\n        },\n        plan: {\n          name: 'Organization',\n          private_repos: 'unlimited'\n        },\n        isWHO: true\n      };\n    } catch (error) {\n      console.warn('Could not fetch WHO organization data from API, using fallback:', error);\n      // Return hardcoded fallback data\n      return {\n        id: 'who-organization',\n        login: 'WorldHealthOrganization',\n        display_name: 'World Health Organization',\n        description: 'The World Health Organization is a specialized agency of the United Nations responsible for international public health.',\n        avatar_url: 'https://avatars.githubusercontent.com/u/12261302?s=200&v=4',\n        html_url: 'https://github.com/WorldHealthOrganization',\n        type: 'Organization',\n        permissions: {\n          can_create_repositories: true,\n          can_create_private_repositories: true\n        },\n        plan: {\n          name: 'Organization',\n          private_repos: 'unlimited'\n        },\n        isWHO: true\n      };\n    }\n  }\n\n  // Rate limiting management methods\n  async checkRateLimit() {\n    try {\n      const octokit = this.octokit || await this.createOctokitInstance();\n      const { data } = await octokit.rest.rateLimit.get();\n      return {\n        core: {\n          limit: data.rate.limit,\n          remaining: data.rate.remaining,\n          reset: data.rate.reset,\n          used: data.rate.used\n        },\n        search: {\n          limit: data.search.limit,\n          remaining: data.search.remaining,\n          reset: data.search.reset,\n          used: data.search.used\n        },\n        isAuthenticated: this.isAuthenticated\n      };\n    } catch (error) {\n      console.warn('Could not check rate limit:', error);\n      return {\n        core: {\n          limit: this.isAuthenticated ? 5000 : 60,\n          remaining: 0,\n          reset: Date.now() + 3600000,\n          used: this.isAuthenticated ? 5000 : 60\n        },\n        search: {\n          limit: this.isAuthenticated ? 30 : 10,\n          remaining: 0,\n          reset: Date.now() + 60000,\n          used: this.isAuthenticated ? 30 : 10\n        },\n        isAuthenticated: this.isAuthenticated\n      };\n    }\n  }\n\n  // Check if we should skip API calls due to rate limiting\n  async shouldSkipApiCalls() {\n    if (this.isAuthenticated) {\n      return false; // Authenticated users have higher limits\n    }\n\n    try {\n      const rateLimit = await this.checkRateLimit();\n      const remaining = rateLimit.core.remaining;\n      \n      // For unauthenticated users, be conservative and stop making calls if less than 10 remaining\n      if (remaining < 10) {\n        console.warn(`🚫 Rate limit protection: Only ${remaining} API calls remaining, skipping compatibility checks`);\n        return true;\n      }\n      \n      return false;\n    } catch (error) {\n      // If we can't check rate limits, assume we should be conservative\n      console.warn('⚠️ Cannot check rate limits, enabling conservative mode');\n      return !this.isAuthenticated; // Skip for unauthenticated users when in doubt\n    }\n  }\n\n  // Get repositories for a user or organization (now filters by SMART Guidelines compatibility)\n  async getRepositories(owner, type = 'user') {\n    // Use the new SMART guidelines filtering method\n    return this.getSmartGuidelinesRepositories(owner, type);\n  }\n\n  // Check if a repository has sushi-config.yaml with smart.who.int.base dependency\n  async checkSmartGuidelinesCompatibility(owner, repo, retryCount = 2) {\n\n    // Check cache first to prevent redundant downloads\n    const cachedResult = repositoryCompatibilityCache.get(owner, repo);\n    if (cachedResult !== null) {\n      return { compatible: cachedResult, cached: true };\n    }\n\n    // Check if we should skip this API call due to rate limiting\n    if (!this.isAuthenticated) {\n      try {\n        const shouldSkip = await this.shouldSkipApiCalls();\n        if (shouldSkip) {\n          console.warn(`⚡ Skipping compatibility check for ${owner}/${repo} due to rate limit protection`);\n          // Return false but don't cache it since we didn't actually check\n          return { \n            compatible: false, \n            skipped: true, \n            reason: 'Rate limit protection - API call skipped' \n          };\n        }\n      } catch (rateLimitCheckError) {\n        console.warn('Could not check rate limits, proceeding with API call:', rateLimitCheckError);\n      }\n    }\n\n    try {\n      // Use authenticated or public API depending on authentication state\n      const octokit = this.octokit || await this.createOctokitInstance();\n      \n      // Try to get sushi-config.yaml from the repository root\n      const { data } = await octokit.rest.repos.getContent({\n        owner,\n        repo,\n        path: 'sushi-config.yaml',\n      });\n\n      if (data.type === 'file' && data.content) {\n        // Decode base64 content (browser-compatible)\n        const content = decodeURIComponent(escape(atob(data.content)));\n        \n        // Check if the content contains smart.who.int.base in dependencies\n        const isCompatible = content.includes('smart.who.int.base');\n        \n        // Cache the result\n        repositoryCompatibilityCache.set(owner, repo, isCompatible);\n        return { compatible: isCompatible };\n      }\n      \n      // Cache negative result\n      repositoryCompatibilityCache.set(owner, repo, false);\n      return { compatible: false, reason: 'No sushi-config.yaml file found' };\n    } catch (error) {\n      // If it's a 404 (file not found), retry once more in case of temporary issues\n      if (error.status === 404 && retryCount > 0) {\n        console.warn(`File not found for ${owner}/${repo}, retrying... (${retryCount} attempts left)`);\n        // Use shorter delay in test environment\n        const delay = process.env.NODE_ENV === 'test' ? 10 : 1000;\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return this.checkSmartGuidelinesCompatibility(owner, repo, retryCount - 1);\n      }\n      \n      // Special handling for SAML-protected repositories - fallback to public API\n      if (error.status === 403 && error.message.includes('SAML enforcement') && this.octokit) {\n        console.log(`SAML-protected repository ${owner}/${repo}, trying public API fallback`);\n        \n        try {\n          // Try with public API (unauthenticated)\n          const publicOctokit = await this.createOctokitInstance();\n          const { data } = await publicOctokit.rest.repos.getContent({\n            owner,\n            repo,\n            path: 'sushi-config.yaml',\n          });\n\n          if (data.type === 'file' && data.content) {\n            // Decode base64 content (browser-compatible)\n            const content = decodeURIComponent(escape(atob(data.content)));\n            \n            // Check if the content contains smart.who.int.base in dependencies\n            const isCompatible = content.includes('smart.who.int.base');\n            \n            if (isCompatible) {\n              console.log(`Repository ${owner}/${repo} is compatible via public API despite SAML protection`);\n              \n              // Cache the result\n              repositoryCompatibilityCache.set(owner, repo, true);\n              return { \n                compatible: true, \n                reason: 'SMART Guidelines DAK (SAML-protected, verified via public API)',\n                requiresAuthentication: true\n              };\n            } else {\n              // Cache negative result\n              repositoryCompatibilityCache.set(owner, repo, false);\n              return { compatible: false, reason: 'No smart.who.int.base dependency found (via public API)' };\n            }\n          }\n        } catch (publicApiError) {\n          console.warn(`Public API fallback also failed for ${owner}/${repo}:`, publicApiError.message);\n          // Continue to normal error handling\n        }\n      }\n      \n      // For any other error (including rate limiting, network errors, or file not found after retries),\n      // return error information instead of just logging\n      const errorInfo = {\n        compatible: false,\n        error: error.message,\n        errorType: this._categorizeError(error),\n        status: error.status,\n        retryable: this._isRetryableError(error)\n      };\n\n      console.warn(`Failed to check ${owner}/${repo} for sushi-config.yaml with smart.who.int.base dependency:`, error.message);\n      \n      // Cache negative result\n      repositoryCompatibilityCache.set(owner, repo, false);\n      return errorInfo;\n    }\n  }\n\n  // Helper method to categorize errors\n  _categorizeError(error) {\n    if (error.status === 403) {\n      if (error.message.includes('rate limit')) {\n        return 'rate_limit';\n      }\n      return 'permission_denied';\n    }\n    if (error.status === 404) {\n      return 'not_found';\n    }\n    if (error.status === 401) {\n      return 'authentication_failed';\n    }\n    if (error.code === 'ENOTFOUND' || error.code === 'ECONNRESET') {\n      return 'network_error';\n    }\n    return 'unknown_error';\n  }\n\n  // Helper method to determine if error is retryable\n  _isRetryableError(error) {\n    return ['rate_limit', 'network_error'].includes(this._categorizeError(error));\n  }\n\n\n\n  // Get repositories that are SMART guidelines compatible\n  async getSmartGuidelinesRepositories(owner, type = 'user', skipCompatibilityCheck = false) {\n    try {\n      let repositories = [];\n      \n      if (this.isAuth()) {\n        // Use authenticated API for full access\n        let page = 1;\n        let hasMorePages = true;\n\n        // Fetch all repositories using pagination\n        while (hasMorePages) {\n          let response;\n          if (type === 'user') {\n            response = await this.octokit.rest.repos.listForUser({\n              username: owner,\n              sort: 'updated',\n              per_page: 100,\n              page: page,\n            });\n          } else {\n            response = await this.octokit.rest.repos.listForOrg({\n              org: owner,\n              sort: 'updated',\n              per_page: 100,\n              page: page,\n            });\n          }\n\n          repositories = repositories.concat(response.data);\n          \n          // Check if there are more pages\n          hasMorePages = response.data.length === 100;\n          page++;\n        }\n      } else {\n        // Use public API for unauthenticated access (only public repositories)\n        repositories = await this.getPublicRepositories(owner, type);\n      }\n\n      // Skip compatibility checks if requested (to avoid rate limiting for unauthenticated users)\n      if (skipCompatibilityCheck) {\n        console.log(`⚡ Skipping compatibility checks for ${repositories.length} repositories to avoid rate limiting`);\n        return repositories.map(repo => ({\n          ...repo,\n          smart_guidelines_compatible: true // Assume compatible when skipping checks\n        }));\n      }\n\n      // Check each repository for SMART guidelines compatibility\n      const smartGuidelinesRepos = [];\n      for (const repo of repositories) {\n        const compatibilityResult = await this.checkSmartGuidelinesCompatibility(repo.owner.login, repo.name);\n        if (compatibilityResult.compatible) {\n          smartGuidelinesRepos.push({\n            ...repo,\n            smart_guidelines_compatible: true\n          });\n        }\n      }\n\n      return smartGuidelinesRepos;\n    } catch (error) {\n      console.error('Failed to fetch SMART guidelines repositories:', error);\n      throw error;\n    }\n  }\n\n  // Get repositories with progressive scanning (for real-time updates)\n  async getSmartGuidelinesRepositoriesProgressive(owner, type = 'user', onRepositoryFound = null, onProgress = null, onError = null) {\n    try {\n      let repositories = [];\n      let page = 1;\n      let hasMorePages = true;\n\n      if (this.isAuth()) {\n        // Fetch all repositories using pagination when authenticated\n        while (hasMorePages) {\n          let response;\n          if (type === 'user') {\n            response = await this.octokit.rest.repos.listForUser({\n              username: owner,\n              sort: 'updated',\n              per_page: 100,\n              page: page,\n            });\n          } else {\n            response = await this.octokit.rest.repos.listForOrg({\n              org: owner,\n              sort: 'updated',\n              per_page: 100,\n              page: page,\n            });\n          }\n\n          repositories = repositories.concat(response.data);\n          \n          // Check if there are more pages\n          hasMorePages = response.data.length === 100;\n          page++;\n        }\n      } else {\n        // Use public API for unauthenticated access (only public repositories)\n        repositories = await this.getPublicRepositories(owner, type);\n      }\n\n      // Handle case where user has no repositories\n      if (repositories.length === 0) {\n        console.log('📊 No repositories found for user, completing scan immediately');\n        // Call progress callback to indicate completion\n        if (onProgress) {\n          onProgress({\n            current: 0,\n            total: 0,\n            currentRepo: 'none',\n            progress: 100,\n            completed: true\n          });\n        }\n        return [];\n      }\n\n      // Track scanning errors for reporting\n      const scanningErrors = {\n        rateLimited: [],\n        networkErrors: [],\n        permissionDenied: [],\n        otherErrors: [],\n        totalErrors: 0,\n        totalScanned: 0\n      };\n\n      // Process repositories concurrently with rate limiting and enhanced display\n      const processor = async (repo, index) => {\n        // Add a small delay to make scanning progress visible (similar to demo mode)\n        await new Promise(resolve => setTimeout(resolve, 100 + Math.random() * 200));\n        \n        const compatibilityResult = await this.checkSmartGuidelinesCompatibility(repo.owner.login, repo.name);\n        scanningErrors.totalScanned++;\n\n        // Handle the new return format\n        if (compatibilityResult.compatible) {\n          const smartRepo = {\n            ...repo,\n            smart_guidelines_compatible: true\n          };\n          \n          // Notify that a repository was found\n          if (onRepositoryFound) {\n            onRepositoryFound(smartRepo);\n          }\n          \n          return smartRepo;\n        } else if (compatibilityResult.error) {\n          // Track the error for reporting\n          scanningErrors.totalErrors++;\n          const errorInfo = {\n            repo: repo.name,\n            error: compatibilityResult.error,\n            errorType: compatibilityResult.errorType,\n            retryable: compatibilityResult.retryable\n          };\n\n          switch (compatibilityResult.errorType) {\n            case 'rate_limit':\n              scanningErrors.rateLimited.push(errorInfo);\n              break;\n            case 'network_error':\n              scanningErrors.networkErrors.push(errorInfo);\n              break;\n            case 'permission_denied':\n              scanningErrors.permissionDenied.push(errorInfo);\n              break;\n            default:\n              scanningErrors.otherErrors.push(errorInfo);\n          }\n\n          // Report error if callback provided\n          if (onError) {\n            onError(errorInfo);\n          }\n        }\n        \n        return null;\n      };\n\n      // Use concurrent processing with max 5 parallel requests\n      const results = await processConcurrently(repositories, processor, {\n        concurrency: 5,\n        onProgress: (completed, total, repo, result) => {\n          // Progress callback for completed items\n          if (onProgress) {\n            const progressData = {\n              current: completed,\n              total: total,\n              currentRepo: repo.name,\n              progress: Math.round((completed / total) * 100),\n              completed: true,\n              scanningErrors: scanningErrors.totalErrors > 0 ? {\n                totalErrors: scanningErrors.totalErrors,\n                rateLimitedCount: scanningErrors.rateLimited.length,\n                networkErrorCount: scanningErrors.networkErrors.length,\n                hasRetryableErrors: [...scanningErrors.rateLimited, ...scanningErrors.networkErrors].some(e => e.retryable)\n              } : null\n            };\n            onProgress(progressData);\n          }\n        },\n        onItemStart: (repo, index) => {\n          // Progress callback for started items\n          if (onProgress) {\n            onProgress({\n              current: index + 1,\n              total: repositories.length,\n              currentRepo: repo.name,\n              progress: Math.round(((index + 1) / repositories.length) * 100),\n              completed: false,\n              started: true\n            });\n          }\n        }\n      });\n\n      // Filter out null results and collect smart repositories\n      const validResults = results.filter(result => result !== null && !result.error);\n      \n      // Log summary of scanning results\n      if (scanningErrors.totalErrors > 0) {\n        console.warn(`Repository scanning completed with ${scanningErrors.totalErrors} errors out of ${scanningErrors.totalScanned} repositories checked:`);\n        if (scanningErrors.rateLimited.length > 0) {\n          console.warn(`- Rate limited: ${scanningErrors.rateLimited.length} repositories`);\n        }\n        if (scanningErrors.networkErrors.length > 0) {\n          console.warn(`- Network errors: ${scanningErrors.networkErrors.length} repositories`);\n        }\n        if (scanningErrors.permissionDenied.length > 0) {\n          console.warn(`- Permission denied: ${scanningErrors.permissionDenied.length} repositories`);\n        }\n        if (scanningErrors.otherErrors.length > 0) {\n          console.warn(`- Other errors: ${scanningErrors.otherErrors.length} repositories`);\n        }\n      }\n\n      // Return results along with error summary\n      return {\n        repositories: validResults,\n        scanningErrors: scanningErrors.totalErrors > 0 ? scanningErrors : null\n      };\n    } catch (error) {\n      console.error('Failed to fetch SMART guidelines repositories:', error);\n      throw error;\n    }\n  }\n\n  // Get a specific repository\n  async getRepository(owner, repo) {\n    try {\n      // Use authenticated octokit if available, otherwise create a public instance for public repos\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      \n      const { data } = await octokit.rest.repos.get({\n        owner,\n        repo,\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch repository:', error);\n      throw error;\n    }  \n  }\n\n  // Get repository branches\n  async getBranches(owner, repo) {\n    try {\n      console.log(`githubService.getBranches: Fetching branches for ${owner}/${repo}`);\n      console.log('githubService.getBranches: Authentication status:', this.isAuth());\n      \n      // Use authenticated octokit if available, otherwise create a public instance for public repos\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      console.log('githubService.getBranches: Using', this.isAuth() ? 'authenticated' : 'public', 'octokit instance');\n      \n      const { data } = await octokit.rest.repos.listBranches({\n        owner,\n        repo,\n        per_page: 100\n      });\n      \n      console.log(`githubService.getBranches: Successfully fetched ${data.length} branches`);\n      return data;\n    } catch (error) {\n      console.error('githubService.getBranches: Failed to fetch branches:', error);\n      console.error('githubService.getBranches: Error details:', {\n        status: error.status,\n        message: error.message,\n        owner,\n        repo\n      });\n      throw error;\n    }\n  }\n\n  // Create a new branch\n  async createBranch(owner, repo, branchName, fromBranch = 'main') {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      // First get the SHA of the source branch\n      const { data: refData } = await this.octokit.rest.git.getRef({\n        owner,\n        repo,\n        ref: `heads/${fromBranch}`\n      });\n\n      // Create the new branch\n      const { data } = await this.octokit.rest.git.createRef({\n        owner,\n        repo,\n        ref: `refs/heads/${branchName}`,\n        sha: refData.object.sha\n      });\n\n      return data;\n    } catch (error) {\n      console.error('Failed to create branch:', error);\n      throw error;\n    }\n  }\n\n  // Get a specific branch\n  async getBranch(owner, repo, branch) {\n    try {\n      // Use authenticated octokit if available, otherwise create a public instance for public repos\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      \n      const { data } = await octokit.rest.repos.getBranch({\n        owner,\n        repo,\n        branch\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch branch:', error);\n      throw error;\n    }\n  }\n\n  // GitHub Actions API methods\n  \n  // Get workflows for a repository (using GitHub API to include workflow IDs)\n  async getWorkflows(owner, repo) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      // Use GitHub Actions API to get workflows with their IDs\n      const { data } = await this.octokit.rest.actions.listRepoWorkflows({\n        owner,\n        repo\n      });\n\n      return data.workflows.map(workflow => ({\n        id: workflow.id, // This is the crucial missing piece!\n        name: workflow.name,\n        filename: workflow.path.split('/').pop(), // Extract filename from path\n        path: workflow.path,\n        state: workflow.state,\n        created_at: workflow.created_at,\n        updated_at: workflow.updated_at,\n        url: workflow.html_url,\n        triggers: ['unknown'], // GitHub API doesn't provide trigger info directly\n        lastModified: workflow.updated_at\n      }));\n    } catch (error) {\n      if (error.status === 404) {\n        // No workflows or repository not found\n        return [];\n      }\n      console.error('Failed to fetch workflows:', error);\n      throw error;\n    }\n  }\n\n  // Get workflow runs for a repository\n  async getWorkflowRuns(owner, repo, options = {}) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const params = {\n        owner,\n        repo,\n        per_page: options.per_page || 10,\n        page: options.page || 1\n      };\n\n      if (options.branch) {\n        params.branch = options.branch;\n      }\n\n      if (options.workflow_id) {\n        params.workflow_id = options.workflow_id;\n      }\n\n      const { data } = await this.octokit.rest.actions.listWorkflowRunsForRepo(params);\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch workflow runs:', error);\n      throw error;\n    }\n  }\n\n  // Get workflow runs for a specific workflow\n  async getWorkflowRunsForWorkflow(owner, repo, workflow_id, options = {}) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const params = {\n        owner,\n        repo,\n        workflow_id,\n        per_page: options.per_page || 10,\n        page: options.page || 1\n      };\n\n      if (options.branch) {\n        params.branch = options.branch;\n      }\n\n      const { data } = await this.octokit.rest.actions.listWorkflowRuns(params);\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch workflow runs for workflow:', error);\n      throw error;\n    }\n  }\n\n  // Trigger a workflow run\n  async triggerWorkflow(owner, repo, workflow_id, ref = 'main', inputs = {}) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.actions.createWorkflowDispatch({\n        owner,\n        repo,\n        workflow_id,\n        ref,\n        inputs\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to trigger workflow:', error);\n      throw error;\n    }\n  }\n\n  // Re-run a workflow\n  async rerunWorkflow(owner, repo, run_id) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.actions.reRunWorkflow({\n        owner,\n        repo,\n        run_id\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to re-run workflow:', error);\n      throw error;\n    }\n  }\n\n  // Get workflow run logs\n  async getWorkflowRunLogs(owner, repo, run_id) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.actions.downloadWorkflowRunLogs({\n        owner,\n        repo,\n        run_id\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to get workflow run logs:', error);\n      throw error;\n    }\n  }\n\n  // Approve a workflow run\n  async approveWorkflowRun(owner, repo, run_id) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.actions.approveWorkflowRun({\n        owner,\n        repo,\n        run_id\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to approve workflow run:', error);\n      throw error;\n    }\n  }\n\n  // Get commit comparison (diff)\n  async getCommitDiff(owner, repo, base, head) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.repos.compareCommits({\n        owner,\n        repo,\n        base,\n        head\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to get commit diff:', error);\n      throw error;\n    }\n  }\n\n  // Get commit details\n  async getCommit(owner, repo, sha) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.repos.getCommit({\n        owner,\n        repo,\n        ref: sha\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to get commit details:', error);\n      throw error;\n    }\n  }\n\n  // Releases API methods\n\n  // Get releases for a repository\n  async getReleases(owner, repo, options = {}) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.repos.listReleases({\n        owner,\n        repo,\n        per_page: options.per_page || 10,\n        page: options.page || 1\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch releases:', error);\n      throw error;\n    }\n  }\n\n  // Get latest release\n  async getLatestRelease(owner, repo) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const { data } = await this.octokit.rest.repos.getLatestRelease({\n        owner,\n        repo\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch latest release:', error);\n      throw error;\n    }\n  }\n\n  // Recursively fetch BPMN files from a directory and its subdirectories\n  async getBpmnFilesRecursive(owner, repo, path, ref = 'main', allFiles = []) {\n    try {\n      console.log(`🔎 githubService.getBpmnFilesRecursive: Searching ${owner}/${repo}/${path} (ref: ${ref})`);\n      // Use authenticated octokit if available, otherwise create a public instance\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      console.log(`🔐 githubService.getBpmnFilesRecursive: Using ${this.isAuth() ? 'authenticated' : 'public'} octokit`);\n      \n      const { data } = await octokit.rest.repos.getContent({\n        owner,\n        repo,\n        path,\n        ref\n      });\n\n      console.log(`📦 githubService.getBpmnFilesRecursive: Received data type: ${Array.isArray(data) ? 'array' : 'single file'}, length: ${Array.isArray(data) ? data.length : 1}`);\n\n      // Handle single file response\n      if (!Array.isArray(data)) {\n        if (data.name.endsWith('.bpmn')) {\n          console.log(`📄 githubService.getBpmnFilesRecursive: Found single BPMN file: ${data.name}`);\n          allFiles.push(data);\n        }\n        return allFiles;\n      }\n\n      // Handle directory response\n      for (const item of data) {\n        if (item.type === 'file' && item.name.endsWith('.bpmn')) {\n          console.log(`📄 githubService.getBpmnFilesRecursive: Found BPMN file: ${item.name}`);\n          allFiles.push(item);\n        } else if (item.type === 'dir') {\n          console.log(`📁 githubService.getBpmnFilesRecursive: Found subdirectory: ${item.name}, recursing...`);\n          // Recursively search subdirectories\n          await this.getBpmnFilesRecursive(owner, repo, item.path, ref, allFiles);\n        }\n      }\n\n      console.log(`✅ githubService.getBpmnFilesRecursive: Completed search of ${path}, found ${allFiles.length} total files so far`);\n      return allFiles;\n    } catch (error) {\n      console.log(`❌ githubService.getBpmnFilesRecursive: Error searching ${path}:`, error.status, error.message);\n      // If directory doesn't exist, return empty array (not an error)\n      if (error.status === 404) {\n        return allFiles;\n      }\n      throw error;\n    }\n  }\n\n  // Get all BPMN files from a repository's business process directories\n  async getBpmnFiles(owner, repo, ref = 'main') {\n    console.log(`🔍 githubService.getBpmnFiles: Starting search for ${owner}/${repo} (ref: ${ref})`);\n    const allBpmnFiles = [];\n    \n    // Search for BPMN files in the specified business process directories\n    const possiblePaths = [\n      'input/business-processes',\n      'input/business-process'\n    ];\n\n    for (const path of possiblePaths) {\n      try {\n        console.log(`📁 githubService.getBpmnFiles: Searching in directory: ${path}`);\n        const files = await this.getBpmnFilesRecursive(owner, repo, path, ref);\n        console.log(`✅ githubService.getBpmnFiles: Found ${files.length} BPMN files in ${path}`);\n        allBpmnFiles.push(...files);\n      } catch (error) {\n        // Only log warnings for unexpected errors (not 404s which are expected when directories don't exist)\n        if (error.status !== 404) {\n          console.warn(`❌ Could not fetch BPMN files from ${path}:`, error.message);\n        } else {\n          console.log(`📂 githubService.getBpmnFiles: Directory ${path} not found (404) - this is expected if the directory doesn't exist`);\n        }\n        // Continue trying other paths\n      }\n    }\n\n    // Remove duplicates based on path (in case both directories exist and have overlapping files)\n    const uniqueFiles = allBpmnFiles.filter((file, index, self) => \n      index === self.findIndex(f => f.path === file.path)\n    );\n\n    console.log(`🎯 githubService.getBpmnFiles: Final result - ${uniqueFiles.length} unique BPMN files found`);\n    console.log(`📋 githubService.getBpmnFiles: File list:`, uniqueFiles.map(f => f.name));\n    return uniqueFiles;\n  }\n\n  // Get file content from GitHub repository with timeout handling\n  async getFileContent(owner, repo, path, ref = 'main') {\n    const timeoutMs = 15000; // 15 second timeout\n    \n    try {\n      console.log(`🚀 githubService.getFileContent: Starting request for ${owner}/${repo}/${path} (ref: ${ref})`);\n      console.log('🔐 githubService.getFileContent: Authentication status:', this.isAuth());\n      console.log('📋 githubService.getFileContent: Request parameters:', { owner, repo, path, ref });\n      \n      // Use authenticated octokit if available, otherwise create a public instance for public repos\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      console.log('🔧 githubService.getFileContent: Using', this.isAuth() ? 'authenticated' : 'public', 'octokit instance');\n      \n      // Create a promise that rejects after timeout\n      const timeoutPromise = new Promise((_, reject) => {\n        console.log(`⏰ githubService.getFileContent: Setting up ${timeoutMs}ms timeout`);\n        setTimeout(() => {\n          console.error(`⏰ githubService.getFileContent: Request timed out after ${timeoutMs}ms`);\n          reject(new Error(`Request timeout after ${timeoutMs}ms`));\n        }, timeoutMs);\n      });\n      \n      // Race the GitHub API call against the timeout\n      console.log('🌐 githubService.getFileContent: Creating GitHub API promise...');\n      const apiPromise = octokit.rest.repos.getContent({\n        owner,\n        repo,\n        path,\n        ref\n      });\n      \n      console.log('📡 githubService.getFileContent: API request initiated, waiting for response...');\n      const startTime = Date.now();\n      \n      const { data } = await Promise.race([apiPromise, timeoutPromise]);\n      const responseTime = Date.now() - startTime;\n      \n      console.log(`✅ githubService.getFileContent: API response received in ${responseTime}ms`);\n      console.log('📂 githubService.getFileContent: Response data type:', data.type);\n      console.log('📊 githubService.getFileContent: Response details:', {\n        type: data.type,\n        name: data.name,\n        size: data.size,\n        encoding: data.encoding,\n        hasContent: !!data.content\n      });\n\n      // Handle file content\n      if (data.type === 'file' && data.content) {\n        // Decode base64 content\n        console.log('🔧 githubService.getFileContent: Decoding base64 content...');\n        console.log('📊 githubService.getFileContent: Base64 content length:', data.content.length);\n        \n        try {\n          // Use modern Buffer approach for reliable base64 decoding\n          const content = Buffer.from(data.content, 'base64').toString('utf-8');\n          console.log(`✅ githubService.getFileContent: Successfully fetched and decoded file content`);\n          console.log('📏 githubService.getFileContent: Final content length:', content.length, 'characters');\n          console.log('👀 githubService.getFileContent: Content preview (first 200 chars):', content.substring(0, 200));\n          \n          return content;\n        } catch (decodeError) {\n          console.error('❌ githubService.getFileContent: Base64 decoding failed:', decodeError);\n          console.error('🔍 githubService.getFileContent: Raw base64 content preview:', data.content.substring(0, 100));\n          throw new Error(`Failed to decode file content: ${decodeError.message}`);\n        }\n      } else {\n        console.error('❌ githubService.getFileContent: Invalid response - not a file or no content');\n        console.error('🔍 githubService.getFileContent: Full response data:', JSON.stringify(data, null, 2));\n        throw new Error('File not found or is not a file');\n      }\n    } catch (error) {\n      console.error(`💥 githubService.getFileContent: Failed to fetch file content from ${owner}/${repo}/${path}:`, error);\n      console.error('🔍 githubService.getFileContent: Error analysis:', {\n        type: typeof error,\n        status: error.status,\n        message: error.message,\n        name: error.name,\n        stack: error.stack?.substring(0, 500) + '...'\n      });\n      \n      // Provide more specific error messages\n      if (error.message.includes('timeout')) {\n        console.error('⏰ githubService.getFileContent: Timeout error detected');\n        throw new Error(`GitHub API request timed out after ${timeoutMs / 1000} seconds. Please try again.`);\n      } else if (error.status === 403) {\n        console.error('🔒 githubService.getFileContent: 403 Forbidden error detected');\n        throw new Error('Access denied. This repository may be private or you may have hit rate limits.');\n      } else if (error.status === 404) {\n        console.error('🔍 githubService.getFileContent: 404 Not Found error detected');\n        throw new Error('File not found in the repository.');\n      } else if (error.message.includes('rate limit')) {\n        console.error('🚦 githubService.getFileContent: Rate limit error detected');\n        throw new Error('GitHub API rate limit exceeded. Please try again later.');\n      } else if (error.message.includes('Network Error') || error.message.includes('Failed to fetch')) {\n        console.error('🌐 githubService.getFileContent: Network error detected');\n        throw new Error('Network error occurred. Please check your internet connection and try again.');\n      }\n      \n      console.error('❓ githubService.getFileContent: Unknown error type, re-throwing original error');\n      throw error;\n    }\n  }\n\n  // Create a commit with multiple files\n  async createCommit(owner, repo, branch, message, files) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      // Get the latest commit SHA\n      const { data: refData } = await this.octokit.rest.git.getRef({\n        owner,\n        repo,\n        ref: `heads/${branch}`\n      });\n      const latestCommitSha = refData.object.sha;\n\n      // Get the tree SHA from the latest commit\n      const { data: commitData } = await this.octokit.rest.git.getCommit({\n        owner,\n        repo,\n        commit_sha: latestCommitSha\n      });\n      const baseTreeSha = commitData.tree.sha;\n\n      // Create blobs for all files\n      const blobs = await Promise.all(\n        files.map(async (file) => {\n          const { data: blobData } = await this.octokit.rest.git.createBlob({\n            owner,\n            repo,\n            content: file.content,\n            encoding: 'utf-8'\n          });\n          return {\n            path: file.path,\n            mode: '100644',\n            type: 'blob',\n            sha: blobData.sha\n          };\n        })\n      );\n\n      // Create a new tree with the blobs\n      const { data: treeData } = await this.octokit.rest.git.createTree({\n        owner,\n        repo,\n        base_tree: baseTreeSha,\n        tree: blobs\n      });\n\n      // Create the commit\n      const { data: newCommitData } = await this.octokit.rest.git.createCommit({\n        owner,\n        repo,\n        message,\n        tree: treeData.sha,\n        parents: [latestCommitSha]\n      });\n\n      // Update the branch reference\n      await this.octokit.rest.git.updateRef({\n        owner,\n        repo,\n        ref: `heads/${branch}`,\n        sha: newCommitData.sha\n      });\n\n      return {\n        sha: newCommitData.sha,\n        html_url: `https://github.com/${owner}/${repo}/commit/${newCommitData.sha}`,\n        message: newCommitData.message,\n        author: newCommitData.author,\n        committer: newCommitData.committer\n      };\n    } catch (error) {\n      console.error('Failed to create commit:', error);\n      throw error;\n    }\n  }\n\n  // Get recent commits for a repository branch\n  async getRecentCommits(owner, repo, branch = 'main', per_page = 5) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/commits`, { sha: branch, per_page });\n\n    try {\n      const response = await this.octokit.rest.repos.listCommits({\n        owner,\n        repo,\n        sha: branch,\n        per_page\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/commits`, response.status, Date.now() - startTime);\n      \n      return response.data.map(commit => ({\n        sha: commit.sha,\n        message: commit.commit.message,\n        author: {\n          name: commit.commit.author.name,\n          email: commit.commit.author.email,\n          date: commit.commit.author.date\n        },\n        committer: {\n          name: commit.commit.committer.name,\n          email: commit.commit.committer.email,\n          date: commit.commit.committer.date\n        },\n        html_url: commit.html_url,\n        stats: commit.stats\n      }));\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/commits`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to fetch recent commits:', error);\n      throw error;\n    }\n  }\n\n  // Get open pull requests count\n  async getOpenPullRequestsCount(owner, repo) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/pulls`, { state: 'open', per_page: 1 });\n\n    try {\n      const response = await this.octokit.rest.pulls.list({\n        owner,\n        repo,\n        state: 'open',\n        per_page: 1\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls`, response.status, Date.now() - startTime);\n      \n      // GitHub includes the total count in the response headers\n      const linkHeader = response.headers.link;\n      if (linkHeader && linkHeader.includes('rel=\"last\"')) {\n        const lastPageMatch = linkHeader.match(/page=(\\d+)>; rel=\"last\"/);\n        if (lastPageMatch) {\n          return parseInt(lastPageMatch[1], 10);\n        }\n      }\n      \n      // Fallback: use the length of returned items (may not be accurate for large counts)\n      return response.data.length;\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to fetch pull requests count:', error);\n      throw error;\n    }\n  }\n\n  // Get pull request for a specific branch (returns first PR only for backward compatibility)\n  async getPullRequestForBranch(owner, repo, branchName) {\n    const prs = await this.getPullRequestsForBranch(owner, repo, branchName);\n    return prs && prs.length > 0 ? prs[0] : null;\n  }\n\n  // Get all pull requests for a specific branch\n  async getPullRequestsForBranch(owner, repo, branchName) {\n    // Use authenticated octokit if available, otherwise create a public instance for public repos\n    const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/pulls`, { state: 'open', head: `${owner}:${branchName}` });\n\n    try {\n      const response = await octokit.rest.pulls.list({\n        owner,\n        repo,\n        state: 'open',\n        head: `${owner}:${branchName}`,\n        per_page: 100 // Get up to 100 PRs for a branch\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls`, response.status, Date.now() - startTime);\n      \n      // Return all matching PRs or empty array if none found\n      return response.data || [];\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to fetch pull requests for branch:', error);\n      return []; // Return empty array instead of throwing to allow graceful fallback\n    }\n  }\n\n  // Get pull request comments\n  async getPullRequestComments(owner, repo, pullNumber, page = 1, per_page = 100) {\n    // Use authenticated octokit if available, otherwise create a public instance for public repos\n    const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/pulls/${pullNumber}/comments`, { page, per_page });\n\n    try {\n      const response = await octokit.rest.pulls.listReviewComments({\n        owner,\n        repo,\n        pull_number: pullNumber,\n        page,\n        per_page\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls/${pullNumber}/comments`, response.status, Date.now() - startTime);\n      return response.data;\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls/${pullNumber}/comments`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to fetch pull request comments:', error);\n      throw error;\n    }\n  }\n\n  // Get pull request issue comments (general comments on the PR conversation)\n  async getPullRequestIssueComments(owner, repo, pullNumber, page = 1, per_page = 100) {\n    // Use authenticated octokit if available, otherwise create a public instance for public repos\n    const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/issues/${pullNumber}/comments`, { page, per_page });\n\n    try {\n      const response = await octokit.rest.issues.listComments({\n        owner,\n        repo,\n        issue_number: pullNumber,\n        page,\n        per_page\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/issues/${pullNumber}/comments`, response.status, Date.now() - startTime);\n      return response.data;\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/issues/${pullNumber}/comments`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to fetch pull request issue comments:', error);\n      throw error;\n    }\n  }\n\n  // Create a comment on a pull request\n  async createPullRequestComment(owner, repo, pullNumber, body) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('POST', `/repos/${owner}/${repo}/issues/${pullNumber}/comments`, { body });\n\n    try {\n      const response = await this.octokit.rest.issues.createComment({\n        owner,\n        repo,\n        issue_number: pullNumber,\n        body\n      });\n\n      this.logger.apiResponse('POST', `/repos/${owner}/${repo}/issues/${pullNumber}/comments`, response.status, Date.now() - startTime);\n      return response.data;\n    } catch (error) {\n      this.logger.apiResponse('POST', `/repos/${owner}/${repo}/issues/${pullNumber}/comments`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to create pull request comment:', error);\n      throw error;\n    }\n  }\n\n  // Get pull request timeline events (status updates, reviews, etc.)\n  async getPullRequestTimeline(owner, repo, pullNumber, page = 1, per_page = 100) {\n    // Use authenticated octokit if available, otherwise create a public instance for public repos\n    const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/issues/${pullNumber}/timeline`, { page, per_page });\n\n    try {\n      const response = await octokit.rest.issues.listEventsForTimeline({\n        owner,\n        repo,\n        issue_number: pullNumber,\n        page,\n        per_page\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/issues/${pullNumber}/timeline`, response.status, Date.now() - startTime);\n      return response.data;\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/issues/${pullNumber}/timeline`, error.status || 'error', Date.now() - startTime);\n      console.debug('Failed to fetch pull request timeline:', error);\n      return []; // Return empty array for graceful fallback\n    }\n  }\n\n  // Merge a pull request\n  async mergePullRequest(owner, repo, pullNumber, options = {}) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('PUT', `/repos/${owner}/${repo}/pulls/${pullNumber}/merge`, options);\n\n    try {\n      const mergeOptions = {\n        owner,\n        repo,\n        pull_number: pullNumber,\n        commit_title: options.commit_title,\n        commit_message: options.commit_message,\n        merge_method: options.merge_method || 'merge', // 'merge', 'squash', or 'rebase'\n        ...options\n      };\n\n      const response = await this.octokit.rest.pulls.merge(mergeOptions);\n\n      this.logger.apiResponse('PUT', `/repos/${owner}/${repo}/pulls/${pullNumber}/merge`, response.status, Date.now() - startTime);\n      return response.data;\n    } catch (error) {\n      this.logger.apiResponse('PUT', `/repos/${owner}/${repo}/pulls/${pullNumber}/merge`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to merge pull request:', error);\n      throw error;\n    }\n  }\n\n  // Check if the current user can merge a specific pull request\n  async checkPullRequestMergePermissions(owner, repo, pullNumber) {\n    if (!this.isAuth()) {\n      this.logger.warn('Cannot check PR merge permissions - not authenticated', { owner, repo, pullNumber });\n      return false;\n    }\n\n    try {\n      const startTime = Date.now();\n      this.logger.apiCall('GET', `/repos/${owner}/${repo}/pulls/${pullNumber}`, {});\n\n      // Get the pull request details to check mergeable state and permissions\n      const response = await this.octokit.rest.pulls.get({\n        owner,\n        repo,\n        pull_number: pullNumber\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls/${pullNumber}`, response.status, Date.now() - startTime);\n      \n      const pr = response.data;\n      \n      // Check if PR is in a mergeable state\n      if (pr.state !== 'open') {\n        this.logger.debug('PR not mergeable - not open', { owner, repo, pullNumber, state: pr.state });\n        return false;\n      }\n\n      if (pr.draft) {\n        this.logger.debug('PR not mergeable - is draft', { owner, repo, pullNumber });\n        return false;\n      }\n\n      // Check if the user has write permissions to the repository\n      const hasWriteAccess = await this.checkRepositoryWritePermissions(owner, repo);\n      if (!hasWriteAccess) {\n        this.logger.debug('PR not mergeable - no write access', { owner, repo, pullNumber });\n        return false;\n      }\n\n      // Additional checks could include:\n      // - Required status checks\n      // - Required reviews\n      // - Admin enforcement\n      // For now, we'll rely on the GitHub API to provide proper error messages when merge is attempted\n\n      return true;\n    } catch (error) {\n      this.logger.warn('Error checking PR merge permissions', { owner, repo, pullNumber, error: error.message });\n      return false;\n    }\n  }\n\n  // Get open issues count\n  async getOpenIssuesCount(owner, repo) {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/issues`, { state: 'open', per_page: 1 });\n\n    try {\n      const response = await this.octokit.rest.issues.listForRepo({\n        owner,\n        repo,\n        state: 'open',\n        per_page: 1\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/issues`, response.status, Date.now() - startTime);\n      \n      // GitHub includes the total count in the response headers\n      const linkHeader = response.headers.link;\n      if (linkHeader && linkHeader.includes('rel=\"last\"')) {\n        const lastPageMatch = linkHeader.match(/page=(\\d+)>; rel=\"last\"/);\n        if (lastPageMatch) {\n          return parseInt(lastPageMatch[1], 10);\n        }\n      }\n      \n      // Fallback: use the length of returned items (may not be accurate for large counts)\n      return response.data.length;\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/issues`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to fetch issues count:', error);\n      throw error;\n    }\n  }\n\n  // Get repository statistics (combined method for efficiency)\n  async getRepositoryStats(owner, repo, branch = 'main') {\n    if (!this.isAuth()) {\n      throw new Error('Not authenticated with GitHub');\n    }\n\n    try {\n      const [recentCommits, openPRsCount, openIssuesCount] = await Promise.allSettled([\n        this.getRecentCommits(owner, repo, branch, 1),\n        this.getOpenPullRequestsCount(owner, repo),\n        this.getOpenIssuesCount(owner, repo)\n      ]);\n\n      return {\n        recentCommits: recentCommits.status === 'fulfilled' ? recentCommits.value : [],\n        openPullRequestsCount: openPRsCount.status === 'fulfilled' ? openPRsCount.value : 0,\n        openIssuesCount: openIssuesCount.status === 'fulfilled' ? openIssuesCount.value : 0,\n        errors: {\n          recentCommits: recentCommits.status === 'rejected' ? recentCommits.reason : null,\n          openPullRequestsCount: openPRsCount.status === 'rejected' ? openPRsCount.reason : null,\n          openIssuesCount: openIssuesCount.status === 'rejected' ? openIssuesCount.reason : null\n        }\n      };\n    } catch (error) {\n      console.error('Failed to fetch repository stats:', error);\n      throw error;\n    }\n  }\n\n  // Get directory contents (supports both authenticated and unauthenticated access)\n  async getDirectoryContents(owner, repo, path = '', ref = 'main') {\n    try {\n      // Create temporary Octokit instance for unauthenticated access if needed\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      \n      const { data } = await octokit.rest.repos.getContent({\n        owner,\n        repo,\n        path,\n        ref\n      });\n\n      if (Array.isArray(data)) {\n        return data;\n      } else {\n        throw new Error('Not a directory');\n      }\n    } catch (error) {\n      console.error(`Failed to get directory contents for ${path}:`, error);\n      throw error;\n    }\n  }\n\n  // Update file content (requires authentication)\n  async updateFile(owner, repo, path, content, message, branch = 'main') {\n    if (!this.isAuth()) {\n      throw new Error('Authentication required to update files');\n    }\n\n    try {\n      // First, get the current file to get its SHA\n      const { data: currentFile } = await this.octokit.rest.repos.getContent({\n        owner,\n        repo,\n        path,\n        ref: branch\n      });\n\n      if (Array.isArray(currentFile)) {\n        throw new Error('Path is a directory, not a file');\n      }\n\n      // Update the file\n      const { data } = await this.octokit.rest.repos.createOrUpdateFileContents({\n        owner,\n        repo,\n        path,\n        message,\n        content: btoa(unescape(encodeURIComponent(content))),\n        sha: currentFile.sha,\n        branch\n      });\n\n      return data;\n    } catch (error) {\n      console.error(`Failed to update file ${path}:`, error);\n      throw error;\n    }\n  }\n\n  // Get commits for a repository (supports unauthenticated access)\n  async getCommits(owner, repo, options = {}) {\n    try {\n      // Create temporary Octokit instance for unauthenticated access if needed\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      \n      const params = {\n        owner,\n        repo,\n        per_page: options.per_page || 10,\n        page: options.page || 1\n      };\n\n      if (options.sha) {\n        params.sha = options.sha;\n      }\n\n      if (options.since) {\n        params.since = options.since;\n      }\n\n      if (options.until) {\n        params.until = options.until;\n      }\n\n      const { data } = await octokit.rest.repos.listCommits(params);\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch commits:', error);\n      throw error;\n    }\n  }\n\n  // Get issues for a repository (supports unauthenticated access)\n  async getIssues(owner, repo, options = {}) {\n    try {\n      // Create temporary Octokit instance for unauthenticated access if needed\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      \n      const params = {\n        owner,\n        repo,\n        state: options.state || 'all',\n        per_page: options.per_page || 30,\n        page: options.page || 1\n      };\n\n      if (options.labels) {\n        params.labels = options.labels;\n      }\n\n      if (options.milestone) {\n        params.milestone = options.milestone;\n      }\n\n      const { data } = await octokit.rest.issues.listForRepo(params);\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch issues:', error);\n      throw error;\n    }\n  }\n\n  // Alias method for backward compatibility - delegates to getIssues\n  async getRepositoryIssues(owner, repo, options = {}) {\n    return this.getIssues(owner, repo, options);\n  }\n\n  // Get repository forks\n  async getForks(owner, repo, options = {}) {\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/forks`, options);\n\n    try {\n      // Use the GitHub API to fetch forks, no authentication required for public repos\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      \n      const params = {\n        owner,\n        repo,\n        sort: options.sort || 'newest',\n        per_page: options.per_page || 100,\n        page: options.page || 1\n      };\n\n      const { data } = await octokit.rest.repos.listForks(params);\n      \n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/forks`, 200, Date.now() - startTime);\n      \n      // Return formatted fork data\n      return data.map(fork => ({\n        id: fork.id,\n        name: fork.name,\n        full_name: fork.full_name,\n        owner: {\n          login: fork.owner.login,\n          avatar_url: fork.owner.avatar_url,\n          html_url: fork.owner.html_url,\n          type: fork.owner.type\n        },\n        description: fork.description,\n        html_url: fork.html_url,\n        clone_url: fork.clone_url,\n        created_at: fork.created_at,\n        updated_at: fork.updated_at,\n        pushed_at: fork.pushed_at,\n        stargazers_count: fork.stargazers_count,\n        forks_count: fork.forks_count,\n        open_issues_count: fork.open_issues_count,\n        default_branch: fork.default_branch,\n        private: fork.private,\n        fork: fork.fork,\n        parent: fork.parent ? {\n          full_name: fork.parent.full_name,\n          html_url: fork.parent.html_url\n        } : null\n      }));\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/forks`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to fetch repository forks:', error);\n      throw error;\n    }\n  }\n\n  // Get pull requests for a specific repository\n  async getPullRequests(owner, repo, options = {}) {\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/pulls`, options);\n\n    try {\n      // Use the GitHub API to fetch pull requests, no authentication required for public repos\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      \n      const params = {\n        owner,\n        repo,\n        state: options.state || 'open',\n        sort: options.sort || 'updated',\n        direction: options.direction || 'desc',\n        per_page: options.per_page || 30,\n        page: options.page || 1\n      };\n\n      // Add optional filters\n      if (options.head) {\n        params.head = options.head;\n      }\n      if (options.base) {\n        params.base = options.base;\n      }\n\n      const { data } = await octokit.rest.pulls.list(params);\n      \n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls`, 200, Date.now() - startTime);\n      \n      // Return formatted pull request data\n      return data.map(pr => ({\n        id: pr.id,\n        number: pr.number,\n        title: pr.title,\n        body: pr.body,\n        state: pr.state,\n        locked: pr.locked,\n        user: {\n          login: pr.user.login,\n          avatar_url: pr.user.avatar_url,\n          html_url: pr.user.html_url,\n          type: pr.user.type\n        },\n        created_at: pr.created_at,\n        updated_at: pr.updated_at,\n        closed_at: pr.closed_at,\n        merged_at: pr.merged_at,\n        html_url: pr.html_url,\n        diff_url: pr.diff_url,\n        patch_url: pr.patch_url,\n        head: {\n          ref: pr.head.ref,\n          sha: pr.head.sha,\n          repo: pr.head.repo ? {\n            name: pr.head.repo.name,\n            full_name: pr.head.repo.full_name,\n            owner: {\n              login: pr.head.repo.owner.login,\n              avatar_url: pr.head.repo.owner.avatar_url\n            },\n            html_url: pr.head.repo.html_url\n          } : null\n        },\n        base: {\n          ref: pr.base.ref,\n          sha: pr.base.sha,\n          repo: {\n            name: pr.base.repo.name,\n            full_name: pr.base.repo.full_name,\n            owner: {\n              login: pr.base.repo.owner.login,\n              avatar_url: pr.base.repo.owner.avatar_url\n            },\n            html_url: pr.base.repo.html_url\n          }\n        },\n        draft: pr.draft,\n        mergeable: pr.mergeable,\n        mergeable_state: pr.mergeable_state,\n        comments: pr.comments,\n        review_comments: pr.review_comments,\n        commits: pr.commits,\n        additions: pr.additions,\n        deletions: pr.deletions,\n        changed_files: pr.changed_files\n      }));\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to fetch pull requests:', error);\n      throw error;\n    }\n  }\n\n  // Create an issue (requires authentication)\n  async createIssue(owner, repo, title, body, labels = [], assignees = []) {\n    if (!this.isAuth()) {\n      throw new Error('Authentication required to create issues');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('POST', `/repos/${owner}/${repo}/issues`, { title, bodyLength: body?.length, labels, assignees });\n\n    try {\n      const params = {\n        owner,\n        repo,\n        title,\n        body\n      };\n\n      // Add optional parameters if provided\n      if (labels.length > 0) {\n        params.labels = labels;\n      }\n      \n      if (assignees.length > 0) {\n        params.assignees = assignees;\n      }\n\n      const response = await this.octokit.rest.issues.create(params);\n      \n      this.logger.apiResponse('POST', `/repos/${owner}/${repo}/issues`, response.status, Date.now() - startTime);\n      \n      return {\n        success: true,\n        issue: {\n          id: response.data.id,\n          number: response.data.number,\n          title: response.data.title,\n          body: response.data.body,\n          html_url: response.data.html_url,\n          state: response.data.state,\n          created_at: response.data.created_at,\n          user: {\n            login: response.data.user.login,\n            avatar_url: response.data.user.avatar_url\n          },\n          labels: response.data.labels.map(label => ({\n            name: label.name,\n            color: label.color\n          }))\n        }\n      };\n    } catch (error) {\n      this.logger.apiResponse('POST', `/repos/${owner}/${repo}/issues`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to create issue:', error);\n      \n      // Return structured error response\n      return {\n        success: false,\n        error: {\n          message: error.message,\n          status: error.status,\n          type: error.status === 403 ? 'permission_denied' : \n                error.status === 422 ? 'validation_error' : \n                error.status === 404 ? 'repository_not_found' : 'unknown_error'\n        }\n      };\n    }\n  }\n\n  // Get a specific issue\n  async getIssue(owner, repo, issueNumber) {\n    if (!this.isAuth()) {\n      throw new Error('Authentication required to get issue details');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/issues/${issueNumber}`);\n\n    try {\n      const response = await this.octokit.rest.issues.get({\n        owner,\n        repo,\n        issue_number: issueNumber\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/issues/${issueNumber}`, response.status, Date.now() - startTime);\n\n      return {\n        id: response.data.id,\n        number: response.data.number,\n        title: response.data.title,\n        body: response.data.body,\n        html_url: response.data.html_url,\n        state: response.data.state,\n        created_at: response.data.created_at,\n        updated_at: response.data.updated_at,\n        closed_at: response.data.closed_at,\n        user: {\n          login: response.data.user.login,\n          avatar_url: response.data.user.avatar_url\n        },\n        labels: response.data.labels.map(label => ({\n          name: label.name,\n          color: label.color\n        }))\n      };\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/issues/${issueNumber}`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to get issue:', error);\n      throw error;\n    }\n  }\n\n  // Get a specific pull request\n  async getPullRequest(owner, repo, pullNumber) {\n    if (!this.isAuth()) {\n      throw new Error('Authentication required to get pull request details');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', `/repos/${owner}/${repo}/pulls/${pullNumber}`);\n\n    try {\n      const response = await this.octokit.rest.pulls.get({\n        owner,\n        repo,\n        pull_number: pullNumber\n      });\n\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls/${pullNumber}`, response.status, Date.now() - startTime);\n\n      return {\n        id: response.data.id,\n        number: response.data.number,\n        title: response.data.title,\n        body: response.data.body,\n        html_url: response.data.html_url,\n        state: response.data.state,\n        created_at: response.data.created_at,\n        updated_at: response.data.updated_at,\n        closed_at: response.data.closed_at,\n        merged_at: response.data.merged_at,\n        user: {\n          login: response.data.user.login,\n          avatar_url: response.data.user.avatar_url\n        },\n        head: {\n          ref: response.data.head.ref,\n          sha: response.data.head.sha\n        },\n        base: {\n          ref: response.data.base.ref,\n          sha: response.data.base.sha\n        }\n      };\n    } catch (error) {\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/pulls/${pullNumber}`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to get pull request:', error);\n      throw error;\n    }\n  }\n\n  // Search issues using GitHub search API\n  async searchIssues(query, options = {}) {\n    if (!this.isAuth()) {\n      throw new Error('Authentication required to search issues');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', '/search/issues', { query, type: 'issue' });\n\n    try {\n      const response = await this.octokit.rest.search.issuesAndPullRequests({\n        q: query,\n        sort: options.sort || 'created',\n        order: options.order || 'desc',\n        per_page: options.per_page || 30,\n        page: options.page || 1\n      });\n\n      this.logger.apiResponse('GET', '/search/issues', response.status, Date.now() - startTime);\n\n      return {\n        total_count: response.data.total_count,\n        incomplete_results: response.data.incomplete_results,\n        items: response.data.items.map(item => ({\n          id: item.id,\n          number: item.number,\n          title: item.title,\n          body: item.body,\n          html_url: item.html_url,\n          state: item.state,\n          created_at: item.created_at,\n          updated_at: item.updated_at,\n          closed_at: item.closed_at,\n          labels: item.labels || [],\n          user: {\n            login: item.user.login,\n            avatar_url: item.user.avatar_url\n          },\n          repository: item.repository_url ? {\n            name: item.repository_url.split('/').slice(-1)[0],\n            full_name: item.repository_url.split('/').slice(-2).join('/')\n          } : null\n        }))\n      };\n    } catch (error) {\n      this.logger.apiResponse('GET', '/search/issues', error.status || 'error', Date.now() - startTime);\n      console.error('Failed to search issues:', error);\n      throw error;\n    }\n  }\n\n  // Search pull requests using GitHub search API\n  async searchPullRequests(query, options = {}) {\n    if (!this.isAuth()) {\n      throw new Error('Authentication required to search pull requests');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('GET', '/search/issues', { query, type: 'pr' });\n\n    try {\n      const response = await this.octokit.rest.search.issuesAndPullRequests({\n        q: query,\n        sort: options.sort || 'created',\n        order: options.order || 'desc',\n        per_page: options.per_page || 30,\n        page: options.page || 1\n      });\n\n      this.logger.apiResponse('GET', '/search/issues', response.status, Date.now() - startTime);\n\n      return {\n        total_count: response.data.total_count,\n        incomplete_results: response.data.incomplete_results,\n        items: response.data.items.map(item => ({\n          id: item.id,\n          number: item.number,\n          title: item.title,\n          body: item.body,\n          html_url: item.html_url,\n          state: item.state,\n          created_at: item.created_at,\n          updated_at: item.updated_at,\n          closed_at: item.closed_at,\n          user: {\n            login: item.user.login,\n            avatar_url: item.user.avatar_url\n          },\n          repository: item.repository_url ? {\n            name: item.repository_url.split('/').slice(-1)[0],\n            full_name: item.repository_url.split('/').slice(-2).join('/')\n          } : null\n        }))\n      };\n    } catch (error) {\n      this.logger.apiResponse('GET', '/search/issues', error.status || 'error', Date.now() - startTime);\n      console.error('Failed to search pull requests:', error);\n      throw error;\n    }\n  }\n\n  // Logout\n  logout() {\n    this.logger.auth('Logging out and clearing stored token');\n    \n    this.octokit = null;\n    this.isAuthenticated = false;\n    this.tokenType = null;\n    this.permissions = null;\n    \n    // Clear secure token storage\n    secureTokenStorage.clearToken();\n    \n    // Clear branch context on logout\n    try {\n      const { default: branchContextService } = require('../services/branchContextService');\n      branchContextService.clearAllBranchContext();\n    } catch (error) {\n      // Service might not be available during testing\n      sessionStorage.removeItem('sgex_branch_context');\n    }\n  }\n\n  // Get repository forks\n  async getRepositoryForks(owner, repo, options = {}) {\n    const startTime = Date.now();\n    this.logger.debug('Fetching repository forks', { owner, repo, options });\n\n    try {\n      // Create temporary Octokit instance for unauthenticated access if needed\n      const octokit = this.isAuth() ? this.octokit : await this.createOctokitInstance();\n      \n      this.logger.apiCall('GET', `/repos/${owner}/${repo}/forks`, options);\n      \n      const { data } = await octokit.rest.repos.listForks({\n        owner,\n        repo,\n        sort: 'newest', // Sort by newest first\n        per_page: options.per_page || 100,\n        page: options.page || 1\n      });\n\n      const duration = Date.now() - startTime;\n      this.logger.apiResponse('GET', `/repos/${owner}/${repo}/forks`, 200, duration, { forkCount: data.length });\n      this.logger.performance('Repository forks fetch', duration);\n\n      return data;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.logger.apiError('GET', `/repos/${owner}/${repo}/forks`, error);\n      this.logger.performance('Repository forks fetch (failed)', duration);\n      console.error(`Failed to fetch forks for ${owner}/${repo}:`, error);\n      throw error;\n    }\n  }\n\n  // Check if the current user can review pull requests\n  async checkPullRequestReviewPermissions(owner, repo, pullNumber) {\n    try {\n      if (!this.isAuth()) {\n        return false;\n      }\n\n      // Check if user has write access or is a collaborator\n      const hasWriteAccess = await this.checkRepositoryWritePermissions(owner, repo);\n      \n      if (hasWriteAccess) {\n        return true;\n      }\n\n      // For forks, check if user can review (they need read access at minimum)\n      const response = await this.octokit.rest.repos.get({\n        owner,\n        repo\n      });\n\n      return response.status === 200;\n    } catch (error) {\n      console.debug('Cannot check PR review permissions:', error);\n      return false;\n    }\n  }\n\n  // Create a pull request review (approve, request changes, or comment)\n  async createPullRequestReview(owner, repo, pullNumber, event, body = '') {\n    if (!this.isAuth()) {\n      throw new Error('Authentication required to review pull requests');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('POST', `/repos/${owner}/${repo}/pulls/${pullNumber}/reviews`, { event, bodyLength: body?.length });\n\n    try {\n      const params = {\n        owner,\n        repo,\n        pull_number: pullNumber,\n        event // 'APPROVE', 'REQUEST_CHANGES', or 'COMMENT'\n      };\n\n      if (body && body.trim()) {\n        params.body = body;\n      }\n\n      const response = await this.octokit.rest.pulls.createReview(params);\n      \n      this.logger.apiResponse('POST', `/repos/${owner}/${repo}/pulls/${pullNumber}/reviews`, response.status, Date.now() - startTime);\n      \n      return {\n        success: true,\n        review: {\n          id: response.data.id,\n          state: response.data.state,\n          body: response.data.body,\n          html_url: response.data.html_url,\n          submitted_at: response.data.submitted_at,\n          user: {\n            login: response.data.user.login,\n            avatar_url: response.data.user.avatar_url\n          }\n        }\n      };\n    } catch (error) {\n      this.logger.apiResponse('POST', `/repos/${owner}/${repo}/pulls/${pullNumber}/reviews`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to create pull request review:', error);\n      throw error;\n    }\n  }\n\n  // Approve a pull request\n  async approvePullRequest(owner, repo, pullNumber, body = '') {\n    return this.createPullRequestReview(owner, repo, pullNumber, 'APPROVE', body);\n  }\n\n  // Request changes on a pull request\n  async requestPullRequestChanges(owner, repo, pullNumber, body) {\n    if (!body || !body.trim()) {\n      throw new Error('A comment is required when requesting changes');\n    }\n    return this.createPullRequestReview(owner, repo, pullNumber, 'REQUEST_CHANGES', body);\n  }\n\n  // Dismiss a pull request review\n  async dismissPullRequestReview(owner, repo, pullNumber, reviewId, message) {\n    if (!this.isAuth()) {\n      throw new Error('Authentication required to dismiss reviews');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('PUT', `/repos/${owner}/${repo}/pulls/${pullNumber}/reviews/${reviewId}/dismissals`, { messageLength: message?.length });\n\n    try {\n      const response = await this.octokit.rest.pulls.dismissReview({\n        owner,\n        repo,\n        pull_number: pullNumber,\n        review_id: reviewId,\n        message: message || 'Review dismissed'\n      });\n      \n      this.logger.apiResponse('PUT', `/repos/${owner}/${repo}/pulls/${pullNumber}/reviews/${reviewId}/dismissals`, response.status, Date.now() - startTime);\n      \n      return {\n        success: true,\n        review: response.data\n      };\n    } catch (error) {\n      this.logger.apiResponse('PUT', `/repos/${owner}/${repo}/pulls/${pullNumber}/reviews/${reviewId}/dismissals`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to dismiss pull request review:', error);\n      throw error;\n    }\n  }\n\n  // Convert draft pull request to ready for review\n  async markPullRequestReadyForReview(owner, repo, pullNumber) {\n    if (!this.isAuth()) {\n      throw new Error('Authentication required to mark PR as ready for review');\n    }\n\n    const startTime = Date.now();\n    this.logger.apiCall('PATCH', `/repos/${owner}/${repo}/pulls/${pullNumber}`, { draft: false });\n\n    try {\n      const response = await this.octokit.rest.pulls.update({\n        owner,\n        repo,\n        pull_number: pullNumber,\n        draft: false\n      });\n      \n      this.logger.apiResponse('PATCH', `/repos/${owner}/${repo}/pulls/${pullNumber}`, response.status, Date.now() - startTime);\n      \n      return {\n        success: true,\n        pullRequest: {\n          id: response.data.id,\n          number: response.data.number,\n          draft: response.data.draft,\n          state: response.data.state,\n          title: response.data.title,\n          html_url: response.data.html_url\n        }\n      };\n    } catch (error) {\n      this.logger.apiResponse('PATCH', `/repos/${owner}/${repo}/pulls/${pullNumber}`, error.status || 'error', Date.now() - startTime);\n      console.error('Failed to mark pull request as ready for review:', error);\n      throw error;\n    }\n  }\n}\n\n// Create a singleton instance\nconst githubService = new GitHubService();\n\nexport default githubService;","import githubService from './githubService';\nimport logger from '../utils/logger';\nimport repositoryConfig from '../config/repositoryConfig';\n\n/**\n * Issue Tracking Service\n * \n * Manages tracked issues and pull requests for authenticated users.\n * Stores data in localStorage and syncs with GitHub API when possible.\n */\nclass IssueTrackingService {\n  constructor() {\n    this.storageKey = 'sgex_tracked_items';\n    this.repositoryFiltersKey = 'sgex_repository_filters';\n    this.logger = logger.getLogger('IssueTrackingService');\n    this.syncInterval = null;\n    this.syncIntervalMs = 5 * 60 * 1000; // 5 minutes\n  }\n\n  /**\n   * Get the storage key for tracked items\n   */\n  _getStorageKey() {\n    return this.storageKey;\n  }\n\n  /**\n   * Get all tracked items from localStorage\n   */\n  _getStoredData() {\n    try {\n      const data = localStorage.getItem(this._getStorageKey());\n      return data ? JSON.parse(data) : { trackedItems: {} };\n    } catch (error) {\n      this.logger.error('Failed to parse stored tracking data:', error);\n      return { trackedItems: {} };\n    }\n  }\n\n  /**\n   * Get repository filters from localStorage\n   */\n  _getRepositoryFilters() {\n    try {\n      const data = localStorage.getItem(this.repositoryFiltersKey);\n      return data ? JSON.parse(data) : {};\n    } catch (error) {\n      this.logger.error('Failed to parse repository filters:', error);\n      return {};\n    }\n  }\n\n  /**\n   * Save repository filters to localStorage\n   */\n  _saveRepositoryFilters(filters) {\n    try {\n      localStorage.setItem(this.repositoryFiltersKey, JSON.stringify(filters));\n      return true;\n    } catch (error) {\n      this.logger.error('Failed to save repository filters:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Save tracked items to localStorage\n   */\n  _saveStoredData(data) {\n    try {\n      localStorage.setItem(this._getStorageKey(), JSON.stringify(data));\n      return true;\n    } catch (error) {\n      this.logger.error('Failed to save tracking data:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get the current authenticated user's username\n   */\n  async _getCurrentUsername() {\n    if (!githubService.isAuth()) {\n      return null;\n    }\n\n    try {\n      const user = await githubService.getCurrentUser();\n      return user.login;\n    } catch (error) {\n      this.logger.error('Failed to get current user:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get tracked items for a specific user\n   */\n  async getTrackedItems(username = null) {\n    if (!username) {\n      username = await this._getCurrentUsername();\n      if (!username) return { issues: [], pullRequests: [] };\n    }\n\n    const data = this._getStoredData();\n    const userItems = data.trackedItems[username] || { issues: [], pullRequests: [] };\n    \n    return {\n      issues: userItems.issues || [],\n      pullRequests: userItems.pullRequests || []\n    };\n  }\n\n  /**\n   * Initialize default repository filters for a user\n   */\n  async _initializeDefaultFilters(username) {\n    const filters = this._getRepositoryFilters();\n    \n    if (!filters[username]) {\n      filters[username] = {};\n    }\n    \n    // Get all tracked repositories\n    const repositories = await this.getTrackedRepositories();\n    \n    // Set default filters for any repositories that don't have explicit settings\n    let filtersUpdated = false;\n    for (const repo of repositories) {\n      if (!filters[username][repo]) {\n        if (repo === repositoryConfig.getFullName()) {\n          // Current repository is visible by default\n          filters[username][repo] = { hidden: false };\n        } else {\n          // All other repositories are hidden by default\n          filters[username][repo] = { hidden: true };\n        }\n        filtersUpdated = true;\n      }\n    }\n    \n    if (filtersUpdated) {\n      this._saveRepositoryFilters(filters);\n    }\n  }\n\n  /**\n   * Enable filter for a specific DAK repository when user visits it\n   */\n  async enableDAKRepositoryFilter(dakRepository) {\n    const username = await this._getCurrentUsername();\n    if (!username || !dakRepository) return false;\n\n    let filters = this._getRepositoryFilters();\n    \n    if (!filters[username]) {\n      // Initialize user filters first\n      await this._initializeDefaultFilters(username);\n      // Get updated filters after initialization\n      filters = this._getRepositoryFilters();\n    }\n    \n    // Ensure user filters exist\n    if (!filters[username]) {\n      filters[username] = {};\n    }\n    \n    // Only enable the specific DAK repository, don't affect others\n    filters[username][dakRepository] = { hidden: false };\n    \n    return this._saveRepositoryFilters(filters);\n  }\n\n  /**\n   * Clean up tracked items from non-DAK repositories\n   * This removes any previously tracked items from repositories that are not DAKs or the current repository\n   */\n  async cleanupNonDAKRepositories() {\n    const username = await this._getCurrentUsername();\n    if (!username) return false;\n\n    const items = await this.getTrackedItems(username);\n    let cleaned = false;\n\n    // Check issues\n    const validIssues = [];\n    for (const issue of items.issues) {\n      const isAllowed = await this._isAllowedRepository(issue.repository);\n      if (isAllowed) {\n        validIssues.push(issue);\n      } else {\n        this.logger.info(`Removing tracked issue from non-DAK repository: ${issue.repository}#${issue.number}`);\n        cleaned = true;\n      }\n    }\n\n    // Check PRs\n    const validPRs = [];\n    for (const pr of items.pullRequests) {\n      const isAllowed = await this._isAllowedRepository(pr.repository);\n      if (isAllowed) {\n        validPRs.push(pr);\n      } else {\n        this.logger.info(`Removing tracked PR from non-DAK repository: ${pr.repository}#${pr.number}`);\n        cleaned = true;\n      }\n    }\n\n    // Save cleaned data if anything was removed\n    if (cleaned) {\n      const data = this._getStoredData();\n      data.trackedItems[username] = {\n        issues: validIssues,\n        pullRequests: validPRs\n      };\n      this._saveStoredData(data);\n      this.logger.info('Cleaned up tracked items from non-DAK repositories');\n    }\n\n    return cleaned;\n  }\n\n  /**\n   * Get filtered tracked items and ensure cleanup of non-DAK repositories\n   */\n  async getFilteredTrackedItems(username = null) {\n    // First, cleanup any non-DAK repositories\n    await this.cleanupNonDAKRepositories();\n    \n    const items = await this.getTrackedItems(username);\n    \n    if (!username) {\n      username = await this._getCurrentUsername();\n      if (!username) return items;\n    }\n\n    // Initialize default filters if they don't exist\n    await this._initializeDefaultFilters(username);\n    \n    const filters = this._getRepositoryFilters();\n    const userFilters = filters[username] || {};\n    \n    // For repositories not explicitly in the filter list, apply default behavior:\n    // - Current repository is visible by default\n    // - all other repositories are hidden by default\n    const filteredIssues = items.issues.filter(issue => {\n      const repository = issue.repository;\n      if (userFilters[repository] !== undefined) {\n        // Use explicit filter setting\n        return !userFilters[repository].hidden;\n      } else {\n        // Apply default: only current repository is visible by default\n        return repository === repositoryConfig.getFullName();\n      }\n    });\n    \n    const filteredPRs = items.pullRequests.filter(pr => {\n      const repository = pr.repository;\n      if (userFilters[repository] !== undefined) {\n        // Use explicit filter setting\n        return !userFilters[repository].hidden;\n      } else {\n        // Apply default: only current repository is visible by default\n        return repository === repositoryConfig.getFullName();\n      }\n    });\n\n    return {\n      issues: filteredIssues,\n      pullRequests: filteredPRs\n    };\n  }\n\n  /**\n   * Add a tracked issue\n   */\n  async addTrackedIssue(issueData) {\n    const username = await this._getCurrentUsername();\n    if (!username) {\n      this.logger.warn('Cannot track issue: user not authenticated');\n      return false;\n    }\n\n    const data = this._getStoredData();\n    \n    // Ensure user data structure exists\n    if (!data.trackedItems[username]) {\n      data.trackedItems[username] = { issues: [], pullRequests: [] };\n    }\n\n    // Check if issue is already tracked\n    const existingIssue = data.trackedItems[username].issues.find(\n      issue => issue.id === issueData.id || issue.number === issueData.number\n    );\n\n    if (existingIssue) {\n      this.logger.debug('Issue already tracked:', issueData.number);\n      return true;\n    }\n\n    // Add the issue\n    const trackedIssue = {\n      id: issueData.id,\n      number: issueData.number,\n      title: issueData.title,\n      html_url: issueData.html_url,\n      created_at: issueData.created_at || new Date().toISOString(),\n      updated_at: issueData.updated_at || issueData.created_at || new Date().toISOString(),\n      repository: issueData.repository || repositoryConfig.getFullName(),\n      state: issueData.state || 'open',\n      labels: issueData.labels || [],\n      trackedAt: new Date().toISOString()\n    };\n\n    data.trackedItems[username].issues.push(trackedIssue);\n    \n    const saved = this._saveStoredData(data);\n    if (saved) {\n      this.logger.info('Issue tracked successfully:', trackedIssue.number);\n      \n      // Start background sync if not already running\n      this.startBackgroundSync();\n      \n      // Try to find related PRs immediately\n      this._findRelatedPRs(username, trackedIssue);\n    }\n    \n    return saved;\n  }\n\n  /**\n   * Add a tracked pull request\n   */\n  async addTrackedPR(prData, linkedIssues = []) {\n    const username = await this._getCurrentUsername();\n    if (!username) {\n      this.logger.warn('Cannot track PR: user not authenticated');\n      return false;\n    }\n\n    const data = this._getStoredData();\n    \n    // Ensure user data structure exists\n    if (!data.trackedItems[username]) {\n      data.trackedItems[username] = { issues: [], pullRequests: [] };\n    }\n\n    // Check if PR is already tracked\n    const existingPR = data.trackedItems[username].pullRequests.find(\n      pr => pr.id === prData.id || pr.number === prData.number\n    );\n\n    if (existingPR) {\n      // Update linked issues if provided\n      if (linkedIssues.length > 0) {\n        existingPR.linkedIssues = [...new Set([...(existingPR.linkedIssues || []), ...linkedIssues])];\n        this._saveStoredData(data);\n      }\n      return true;\n    }\n\n    // Add the PR\n    const trackedPR = {\n      id: prData.id,\n      number: prData.number,\n      title: prData.title,\n      html_url: prData.html_url,\n      created_at: prData.created_at || new Date().toISOString(),\n      updated_at: prData.updated_at || prData.created_at || new Date().toISOString(),\n      repository: prData.repository || repositoryConfig.getFullName(),\n      state: prData.state || 'open',\n      linkedIssues: linkedIssues,\n      trackedAt: new Date().toISOString()\n    };\n\n    data.trackedItems[username].pullRequests.push(trackedPR);\n    \n    const saved = this._saveStoredData(data);\n    if (saved) {\n      this.logger.info('PR tracked successfully:', trackedPR.number);\n    }\n    \n    return saved;\n  }\n\n  /**\n   * Remove a tracked issue\n   */\n  async removeTrackedIssue(issueNumber) {\n    const username = await this._getCurrentUsername();\n    if (!username) return false;\n\n    const data = this._getStoredData();\n    \n    if (!data.trackedItems[username] || !data.trackedItems[username].issues) {\n      return false;\n    }\n\n    const originalLength = data.trackedItems[username].issues.length;\n    data.trackedItems[username].issues = data.trackedItems[username].issues.filter(\n      issue => issue.number !== issueNumber\n    );\n\n    if (data.trackedItems[username].issues.length < originalLength) {\n      this._saveStoredData(data);\n      this.logger.info('Issue untracked:', issueNumber);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Remove a tracked pull request\n   */\n  async removeTrackedPR(prNumber) {\n    const username = await this._getCurrentUsername();\n    if (!username) return false;\n\n    const data = this._getStoredData();\n    \n    if (!data.trackedItems[username] || !data.trackedItems[username].pullRequests) {\n      return false;\n    }\n\n    const originalLength = data.trackedItems[username].pullRequests.length;\n    data.trackedItems[username].pullRequests = data.trackedItems[username].pullRequests.filter(\n      pr => pr.number !== prNumber\n    );\n\n    if (data.trackedItems[username].pullRequests.length < originalLength) {\n      this._saveStoredData(data);\n      this.logger.info('PR untracked:', prNumber);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Get count of tracked items\n   */\n  async getTrackedCounts(username = null) {\n    const items = await this.getFilteredTrackedItems(username);\n    return {\n      issues: items.issues.length,\n      pullRequests: items.pullRequests.length,\n      total: items.issues.length + items.pullRequests.length\n    };\n  }\n\n  /**\n   * Set repository visibility for a user\n   */\n  async setRepositoryVisibility(repository, hidden = false) {\n    const username = await this._getCurrentUsername();\n    if (!username) return false;\n\n    const filters = this._getRepositoryFilters();\n    \n    if (!filters[username]) {\n      filters[username] = {};\n    }\n    \n    if (!filters[username][repository]) {\n      filters[username][repository] = {};\n    }\n    \n    filters[username][repository].hidden = hidden;\n    \n    return this._saveRepositoryFilters(filters);\n  }\n\n  /**\n   * Get repository filters for current user\n   */\n  async getRepositoryFilters() {\n    const username = await this._getCurrentUsername();\n    if (!username) return {};\n\n    const filters = this._getRepositoryFilters();\n    return filters[username] || {};\n  }\n\n  /**\n   * Get list of unique repositories from tracked items\n   */\n  async getTrackedRepositories() {\n    const items = await this.getTrackedItems();\n    const repositories = new Set();\n    \n    items.issues.forEach(issue => repositories.add(issue.repository));\n    items.pullRequests.forEach(pr => repositories.add(pr.repository));\n    \n    return Array.from(repositories).sort();\n  }\n\n  /**\n   * Check if a repository is a DAK or the current repository\n   */\n  async _isAllowedRepository(repositoryFullName) {\n    // Always allow current repository\n    if (repositoryFullName === repositoryConfig.getFullName()) {\n      return true;\n    }\n    \n    // Check if repository is a DAK\n    try {\n      const [owner, repo] = repositoryFullName.split('/');\n      if (!owner || !repo) return false;\n      \n      const compatibility = await githubService.checkSmartGuidelinesCompatibility(owner, repo);\n      return compatibility.compatible;\n    } catch (error) {\n      this.logger.debug(`Failed to check DAK compatibility for ${repositoryFullName}:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Discover new user activity - issues and PRs created by or commented on by the user\n   * Only includes items from DAK repositories or the current repository\n   */\n  async _discoverUserActivity(username, existingItems) {\n    const newIssues = [];\n    const newPRs = [];\n    \n    try {\n      // Search for open issues created by the user\n      const createdIssuesQuery = `is:issue author:${username} state:open`;\n      const createdIssuesResult = await githubService.searchIssues(createdIssuesQuery, { per_page: 50 });\n      \n      // Search for open issues where user commented\n      const commentedIssuesQuery = `is:issue commenter:${username} state:open`;\n      const commentedIssuesResult = await githubService.searchIssues(commentedIssuesQuery, { per_page: 50 });\n      \n      // Search for open PRs created by the user  \n      const createdPRsQuery = `is:pr author:${username} state:open`;\n      const createdPRsResult = await githubService.searchPullRequests(createdPRsQuery, { per_page: 50 });\n      \n      // Search for open PRs where user commented\n      const commentedPRsQuery = `is:pr commenter:${username} state:open`;\n      const commentedPRsResult = await githubService.searchPullRequests(commentedPRsQuery, { per_page: 50 });\n\n      // Combine and deduplicate issues\n      const allFoundIssues = [...(createdIssuesResult.items || []), ...(commentedIssuesResult.items || [])];\n      const uniqueIssues = this._deduplicateItems(allFoundIssues);\n      \n      // Combine and deduplicate PRs\n      const allFoundPRs = [...(createdPRsResult.items || []), ...(commentedPRsResult.items || [])];\n      const uniquePRs = this._deduplicateItems(allFoundPRs);\n\n      // Filter out already tracked issues and check repository compatibility\n      for (const issue of uniqueIssues) {\n        const isAlreadyTracked = existingItems.issues.some(\n          existing => existing.id === issue.id || existing.number === issue.number\n        );\n        \n        if (!isAlreadyTracked) {\n          const repositoryFullName = issue.repository ? issue.repository.full_name : 'unknown/unknown';\n          \n          // Only include issues from DAK repositories or the current repository\n          const isAllowed = await this._isAllowedRepository(repositoryFullName);\n          if (!isAllowed) {\n            this.logger.debug(`Skipping issue from non-DAK repository: ${repositoryFullName}`);\n            continue;\n          }\n          \n          const trackedIssue = {\n            id: issue.id,\n            number: issue.number,\n            title: issue.title,\n            html_url: issue.html_url,\n            created_at: issue.created_at,\n            updated_at: issue.updated_at || issue.created_at,\n            repository: repositoryFullName,\n            state: issue.state,\n            labels: issue.labels || [],\n            trackedAt: new Date().toISOString(),\n            discoveredBy: 'sync'\n          };\n          newIssues.push(trackedIssue);\n        }\n      }\n\n      // Filter out already tracked PRs and check repository compatibility\n      for (const pr of uniquePRs) {\n        const isAlreadyTracked = existingItems.pullRequests.some(\n          existing => existing.id === pr.id || existing.number === pr.number\n        );\n        \n        if (!isAlreadyTracked) {\n          const repositoryFullName = pr.repository ? pr.repository.full_name : 'unknown/unknown';\n          \n          // Only include PRs from DAK repositories or the current repository\n          const isAllowed = await this._isAllowedRepository(repositoryFullName);\n          if (!isAllowed) {\n            this.logger.debug(`Skipping PR from non-DAK repository: ${repositoryFullName}`);\n            continue;\n          }\n          \n          const trackedPR = {\n            id: pr.id,\n            number: pr.number,\n            title: pr.title,\n            html_url: pr.html_url,\n            created_at: pr.created_at,\n            updated_at: pr.updated_at || pr.created_at,\n            repository: repositoryFullName,\n            state: pr.state,\n            linkedIssues: [],\n            trackedAt: new Date().toISOString(),\n            discoveredBy: 'sync'\n          };\n          newPRs.push(trackedPR);\n        }\n      }\n\n    } catch (error) {\n      this.logger.error('Failed to discover user activity:', error);\n    }\n\n    return { issues: newIssues, pullRequests: newPRs };\n  }\n\n  /**\n   * Deduplicate items by ID, keeping the first occurrence\n   */\n  _deduplicateItems(items) {\n    const seen = new Set();\n    return items.filter(item => {\n      if (seen.has(item.id)) {\n        return false;\n      }\n      seen.add(item.id);\n      return true;\n    });\n  }\n\n  /**\n   * Find related pull requests for a tracked issue\n   */\n  async _findRelatedPRs(username, issue) {\n    if (!githubService.isAuth()) return;\n\n    try {\n      // Extract owner/repo from repository string\n      const [owner, repo] = issue.repository.split('/');\n      if (!owner || !repo) return;\n\n      // Search for PRs that mention this issue (exclude merged PRs)\n      const searchQuery = `is:pr repo:${owner}/${repo} is:unmerged ${issue.number}`;\n      const results = await githubService.searchPullRequests(searchQuery);\n\n      if (results && results.items && results.items.length > 0) {\n        for (const pr of results.items) {\n          // Check if PR title or body references the issue\n          const prText = `${pr.title} ${pr.body || ''}`.toLowerCase();\n          const issueRefs = [\n            `#${issue.number}`,\n            `issue ${issue.number}`,\n            `fixes #${issue.number}`,\n            `closes #${issue.number}`,\n            `resolves #${issue.number}`\n          ];\n\n          const isRelated = issueRefs.some(ref => prText.includes(ref.toLowerCase()));\n          \n          if (isRelated) {\n            await this.addTrackedPR({\n              id: pr.id,\n              number: pr.number,\n              title: pr.title,\n              html_url: pr.html_url,\n              created_at: pr.created_at,\n              repository: issue.repository,\n              state: pr.state\n            }, [issue.number]);\n          }\n        }\n      }\n    } catch (error) {\n      this.logger.error('Failed to find related PRs:', error);\n    }\n  }\n\n  /**\n   * Sync tracked items with GitHub to update their status and discover new user activity\n   */\n  async syncTrackedItems() {\n    if (!githubService.isAuth()) return;\n\n    const username = await this._getCurrentUsername();\n    if (!username) return;\n\n    const items = await this.getTrackedItems(username);\n    let updated = false;\n\n    // Update existing issue states\n    for (const issue of items.issues) {\n      try {\n        const [owner, repo] = issue.repository.split('/');\n        if (!owner || !repo) continue;\n\n        const currentIssue = await githubService.getIssue(owner, repo, issue.number);\n        if (currentIssue && currentIssue.state !== issue.state) {\n          issue.state = currentIssue.state;\n          issue.updated_at = currentIssue.updated_at || issue.updated_at;\n          updated = true;\n        }\n      } catch (error) {\n        this.logger.debug(`Failed to sync issue ${issue.number}:`, error);\n      }\n    }\n\n    // Update existing PR states\n    for (const pr of items.pullRequests) {\n      try {\n        const [owner, repo] = pr.repository.split('/');\n        if (!owner || !repo) continue;\n\n        const currentPR = await githubService.getPullRequest(owner, repo, pr.number);\n        if (currentPR && currentPR.state !== pr.state) {\n          pr.state = currentPR.state;\n          pr.updated_at = currentPR.updated_at || pr.updated_at;\n          updated = true;\n        }\n      } catch (error) {\n        this.logger.debug(`Failed to sync PR ${pr.number}:`, error);\n      }\n    }\n\n    // Discover new user activity - look for issues and PRs created by or commented on by the user\n    try {\n      const newItems = await this._discoverUserActivity(username, items);\n      if (newItems.issues.length > 0 || newItems.pullRequests.length > 0) {\n        // Add newly discovered items\n        items.issues.push(...newItems.issues);\n        items.pullRequests.push(...newItems.pullRequests);\n        updated = true;\n        \n        this.logger.info('Discovered new user activity', { \n          newIssues: newItems.issues.length,\n          newPRs: newItems.pullRequests.length \n        });\n      }\n    } catch (error) {\n      this.logger.debug('Failed to discover new user activity:', error);\n    }\n\n    // Save updated data\n    if (updated) {\n      const data = this._getStoredData();\n      data.trackedItems[username] = items;\n      this._saveStoredData(data);\n      this.logger.info('Tracked items synced successfully');\n    }\n  }\n\n  /**\n   * Start background sync process\n   */\n  startBackgroundSync() {\n    if (this.syncInterval) return; // Already running\n\n    this.syncInterval = setInterval(() => {\n      this.syncTrackedItems().catch(error => {\n        this.logger.error('Background sync failed:', error);\n      });\n    }, this.syncIntervalMs);\n\n    this.logger.debug('Background sync started');\n  }\n\n  /**\n   * Stop background sync process\n   */\n  stopBackgroundSync() {\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval);\n      this.syncInterval = null;\n      this.logger.debug('Background sync stopped');\n    }\n  }\n\n  /**\n   * Clear all tracked items for current user\n   */\n  async clearTrackedItems() {\n    const username = await this._getCurrentUsername();\n    if (!username) return false;\n\n    const data = this._getStoredData();\n    if (data.trackedItems[username]) {\n      delete data.trackedItems[username];\n      this._saveStoredData(data);\n      this.logger.info('All tracked items cleared for user:', username);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Clear all tracking data (for debugging/testing)\n   */\n  clearAllData() {\n    localStorage.removeItem(this._getStorageKey());\n    this.stopBackgroundSync();\n    this.logger.info('All tracking data cleared');\n  }\n}\n\n// Create and export singleton instance\nconst issueTrackingService = new IssueTrackingService();\nexport default issueTrackingService;","/**\n * Repository Cache Service\n * Manages caching of discovered SMART Guidelines repositories with expiry\n */\n\nimport logger from '../utils/logger';\n\nclass RepositoryCacheService {\n  constructor() {\n    this.CACHE_KEY_PREFIX = 'sgex_repo_cache_';\n    this.CACHE_EXPIRY_HOURS = 24; // Cache expires after 24 hours\n    this.logger = logger.getLogger('RepositoryCacheService');\n    this.logger.debug('RepositoryCacheService initialized', { \n      cacheExpiryHours: this.CACHE_EXPIRY_HOURS \n    });\n  }\n\n  /**\n   * Generate cache key for a user/organization\n   */\n  getCacheKey(owner, type = 'user', suffix = '') {\n    const baseCacheKey = `${this.CACHE_KEY_PREFIX}${type}_${owner}`;\n    return suffix ? `${baseCacheKey}_${suffix}` : baseCacheKey;\n  }\n\n  /**\n   * Check if cached data is stale (older than 24 hours)\n   */\n  isStale(timestamp) {\n    const now = Date.now();\n    const cacheAge = now - timestamp;\n    const maxAge = this.CACHE_EXPIRY_HOURS * 60 * 60 * 1000; // 24 hours in milliseconds\n    return cacheAge > maxAge;\n  }\n\n  /**\n   * Get cached repositories for a user/organization\n   * Returns null if cache doesn't exist or is stale\n   */\n  getCachedRepositories(owner, type = 'user', suffix = '') {\n    try {\n      const cacheKey = this.getCacheKey(owner, type, suffix);\n      this.logger.cache('get', cacheKey);\n      \n      const cachedData = localStorage.getItem(cacheKey);\n      \n      if (!cachedData) {\n        this.logger.cache('miss', cacheKey, 'No cached data found');\n        return null;\n      }\n\n      const parsed = JSON.parse(cachedData);\n      \n      // Check if cache is stale\n      if (this.isStale(parsed.timestamp)) {\n        // Remove stale cache\n        this.logger.cache('expired', cacheKey, { age: Date.now() - parsed.timestamp });\n        localStorage.removeItem(cacheKey);\n        return null;\n      }\n\n      this.logger.cache('hit', cacheKey, { \n        repositoryCount: parsed.repositories?.length || 0,\n        age: Date.now() - parsed.timestamp\n      });\n\n      return {\n        repositories: parsed.repositories,\n        timestamp: parsed.timestamp,\n        owner: parsed.owner,\n        type: parsed.type\n      };\n    } catch (error) {\n      const cacheKey = this.getCacheKey(owner, type, suffix);\n      this.logger.error('Error reading repository cache', { cacheKey, error: error.message });\n      console.warn('Error reading repository cache:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Cache repositories for a user/organization\n   */\n  setCachedRepositories(owner, type = 'user', repositories, suffix = '') {\n    try {\n      const cacheKey = this.getCacheKey(owner, type, suffix);\n      const cacheData = {\n        repositories,\n        timestamp: Date.now(),\n        owner,\n        type\n      };\n\n      this.logger.cache('set', cacheKey, { \n        repositoryCount: repositories?.length || 0,\n        owner, \n        type \n      });\n\n      localStorage.setItem(cacheKey, JSON.stringify(cacheData));\n      return true;\n    } catch (error) {\n      const cacheKey = this.getCacheKey(owner, type, suffix);\n      this.logger.error('Error caching repositories', { cacheKey, error: error.message });\n      console.warn('Error caching repositories:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Clear cache for a specific user/organization\n   */\n  clearCache(owner, type = 'user') {\n    try {\n      const cacheKey = this.getCacheKey(owner, type);\n      this.logger.cache('clear', cacheKey, { owner, type });\n      localStorage.removeItem(cacheKey);\n      return true;\n    } catch (error) {\n      const cacheKey = this.getCacheKey(owner, type);\n      this.logger.error('Error clearing repository cache', { cacheKey, error: error.message });\n      console.warn('Error clearing repository cache:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Clear all repository caches\n   */\n  clearAllCaches() {\n    try {\n      const keys = Object.keys(localStorage);\n      keys.forEach(key => {\n        if (key.startsWith(this.CACHE_KEY_PREFIX)) {\n          localStorage.removeItem(key);\n        }\n      });\n      return true;\n    } catch (error) {\n      console.warn('Error clearing all repository caches:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get cache info for debugging\n   */\n  getCacheInfo(owner, type = 'user', suffix = '') {\n    const cached = this.getCachedRepositories(owner, type, suffix);\n    if (!cached) {\n      return { exists: false, stale: true };\n    }\n\n    const age = Date.now() - cached.timestamp;\n    const ageHours = Math.round(age / (60 * 60 * 1000));\n    \n    return {\n      exists: true,\n      stale: this.isStale(cached.timestamp),\n      age: age,\n      ageHours: ageHours,\n      repositoryCount: cached.repositories.length,\n      timestamp: new Date(cached.timestamp).toISOString()\n    };\n  }\n}\n\n// Create singleton instance\nconst repositoryCacheService = new RepositoryCacheService();\n\nexport default repositoryCacheService;","/**\n * Bookmark Service - Manages user bookmarks in localStorage\n * \n * Provides functionality to bookmark pages with context-aware titles:\n * - DAK: {user}/{repo} for DAK pages\n * - DAK: {user}/{repo}/{branch} for DAK pages with specific branch  \n * - {asset} in DAK: {user}/{repo}/{branch} for asset pages\n */\nclass BookmarkService {\n  constructor() {\n    this.storageKey = 'sgex-bookmarks';\n  }\n\n  /**\n   * Get all bookmarks from localStorage\n   * @returns {Array} Array of bookmark objects\n   */\n  getBookmarks() {\n    try {\n      const stored = localStorage.getItem(this.storageKey);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.warn('Error reading bookmarks from localStorage:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Save bookmarks to localStorage\n   * @param {Array} bookmarks - Array of bookmark objects\n   */\n  saveBookmarks(bookmarks) {\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(bookmarks));\n    } catch (error) {\n      console.error('Error saving bookmarks to localStorage:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Generate bookmark title based on page context\n   * @param {string} pageName - Name of the page\n   * @param {Object} context - Page context (user, repo, branch, asset)\n   * @returns {string} Generated bookmark title\n   */\n  generateBookmarkTitle(pageName, context) {\n    const { user, repository, branch, asset, title, path } = context;\n\n    // Documentation pages: use document title with path if available\n    if (pageName === 'documentation' && title) {\n      if (path) {\n        return `${title} (${path})`;\n      }\n      return title;\n    }\n\n    // Asset pages: {asset} in DAK: {user}/{repo}/{branch}\n    if (asset && user && repository) {\n      const repoName = repository.name || repository;\n      const branchName = branch || 'main';\n      return `${asset} in DAK: ${user}/${repoName}/${branchName}`;\n    }\n\n    // DAK pages with branch: DAK: {user}/{repo}/{branch}\n    if (user && repository && branch) {\n      const repoName = repository.name || repository;\n      return `DAK: ${user}/${repoName}/${branch}`;\n    }\n\n    // DAK pages without specific branch: DAK: {user}/{repo}\n    if (user && repository) {\n      const repoName = repository.name || repository;\n      return `DAK: ${user}/${repoName}`;\n    }\n\n    // User pages: {pageName}: {user}\n    if (user) {\n      return `${pageName}: ${user}`;\n    }\n\n    // Top-level pages: just use page name\n    return pageName;\n  }\n\n  /**\n   * Add a bookmark\n   * @param {string} pageName - Name of the page\n   * @param {string} url - URL of the page\n   * @param {Object} context - Page context for generating title\n   * @returns {Object} The created bookmark\n   */\n  addBookmark(pageName, url, context = {}) {\n    const bookmarks = this.getBookmarks();\n    \n    // Check if bookmark already exists\n    const existingIndex = bookmarks.findIndex(b => b.url === url);\n    if (existingIndex !== -1) {\n      // Update existing bookmark\n      bookmarks[existingIndex] = {\n        ...bookmarks[existingIndex],\n        title: this.generateBookmarkTitle(pageName, context),\n        pageName,\n        context,\n        lastUpdated: new Date().toISOString()\n      };\n    } else {\n      // Create new bookmark\n      const bookmark = {\n        id: Date.now().toString(),\n        title: this.generateBookmarkTitle(pageName, context),\n        url,\n        pageName,\n        context,\n        createdAt: new Date().toISOString(),\n        lastUpdated: new Date().toISOString()\n      };\n      bookmarks.push(bookmark);\n    }\n\n    this.saveBookmarks(bookmarks);\n    return bookmarks[existingIndex] || bookmarks[bookmarks.length - 1];\n  }\n\n  /**\n   * Remove a bookmark by ID\n   * @param {string} bookmarkId - ID of the bookmark to remove\n   * @returns {boolean} Success status\n   */\n  removeBookmark(bookmarkId) {\n    try {\n      const bookmarks = this.getBookmarks();\n      const filteredBookmarks = bookmarks.filter(b => b.id !== bookmarkId);\n      \n      if (filteredBookmarks.length !== bookmarks.length) {\n        this.saveBookmarks(filteredBookmarks);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error removing bookmark:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if current page is bookmarked\n   * @param {string} url - URL to check\n   * @returns {boolean} Whether the page is bookmarked\n   */\n  isBookmarked(url) {\n    const bookmarks = this.getBookmarks();\n    return bookmarks.some(b => b.url === url);\n  }\n\n  /**\n   * Get bookmark for a specific URL\n   * @param {string} url - URL to find\n   * @returns {Object|null} Bookmark object or null if not found\n   */\n  getBookmarkByUrl(url) {\n    const bookmarks = this.getBookmarks();\n    return bookmarks.find(b => b.url === url) || null;\n  }\n\n  /**\n   * Get bookmarks organized by page name (alphabetically)\n   * @returns {Object} Bookmarks grouped by page name\n   */\n  getBookmarksGroupedByPage() {\n    const bookmarks = this.getBookmarks();\n    const grouped = {};\n\n    bookmarks.forEach(bookmark => {\n      const pageName = bookmark.pageName || 'Other';\n      if (!grouped[pageName]) {\n        grouped[pageName] = [];\n      }\n      grouped[pageName].push(bookmark);\n    });\n\n    // Sort each group by title\n    Object.keys(grouped).forEach(pageName => {\n      grouped[pageName].sort((a, b) => a.title.localeCompare(b.title));\n    });\n\n    // Return as sorted array of objects\n    const sortedPages = Object.keys(grouped).sort();\n    return sortedPages.map(pageName => ({\n      pageName,\n      bookmarks: grouped[pageName]\n    }));\n  }\n\n  /**\n   * Clear all bookmarks\n   */\n  clearBookmarks() {\n    try {\n      localStorage.removeItem(this.storageKey);\n    } catch (error) {\n      console.error('Error clearing bookmarks:', error);\n    }\n  }\n\n  /**\n   * Export bookmarks as JSON\n   * @returns {string} JSON string of bookmarks\n   */\n  exportBookmarks() {\n    const bookmarks = this.getBookmarks();\n    return JSON.stringify(bookmarks, null, 2);\n  }\n\n  /**\n   * Import bookmarks from JSON\n   * @param {string} jsonString - JSON string of bookmarks\n   * @param {boolean} merge - Whether to merge with existing bookmarks\n   * @returns {boolean} Success status\n   */\n  importBookmarks(jsonString, merge = false) {\n    try {\n      const importedBookmarks = JSON.parse(jsonString);\n      \n      if (!Array.isArray(importedBookmarks)) {\n        throw new Error('Invalid bookmark format');\n      }\n\n      if (merge) {\n        const existingBookmarks = this.getBookmarks();\n        const mergedBookmarks = [...existingBookmarks];\n        \n        importedBookmarks.forEach(imported => {\n          const existingIndex = mergedBookmarks.findIndex(b => b.url === imported.url);\n          if (existingIndex !== -1) {\n            mergedBookmarks[existingIndex] = imported;\n          } else {\n            mergedBookmarks.push(imported);\n          }\n        });\n        \n        this.saveBookmarks(mergedBookmarks);\n      } else {\n        this.saveBookmarks(importedBookmarks);\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Error importing bookmarks:', error);\n      return false;\n    }\n  }\n}\n\n// Create and export singleton instance\nconst bookmarkService = new BookmarkService();\nexport default bookmarkService;","/**\n * Repository Configuration Service\n * \n * Provides centralized repository configuration that must be set at build time\n * from environment variables. These are set by the configure-repository.js script\n * which extracts and validates repository information from package.json.\n * \n * This ensures fork-friendly deployment where the repository owner/name\n * is automatically detected and validated rather than hardcoded.\n */\n\nclass RepositoryConfig {\n  constructor() {\n    this._config = null;\n    this._initialized = false;\n  }\n\n  /**\n   * Initialize repository configuration\n   * Requires build-time environment variables set by configure-repository.js script:\n   * - REACT_APP_REPO_OWNER: Repository owner\n   * - REACT_APP_REPO_NAME: Repository name\n   * \n   * These are validated and set during the build process to ensure consistency.\n   */\n  _initialize() {\n    if (this._initialized) return;\n\n    // Require build-time environment variables\n    const envOwner = process.env.REACT_APP_REPO_OWNER;\n    const envRepo = process.env.REACT_APP_REPO_NAME;\n    const configSource = process.env.REACT_APP_REPO_CONFIG_SOURCE;\n    \n    if (!envOwner || !envRepo) {\n      throw new Error(\n        'Repository configuration not found. ' +\n        'Build-time environment variables REACT_APP_REPO_OWNER and REACT_APP_REPO_NAME must be set. ' +\n        'Please run \"npm run configure:repo\" or ensure package.json has a valid repository field.'\n      );\n    }\n\n    this._config = {\n      owner: envOwner,\n      name: envRepo,\n      fullName: `${envOwner}/${envRepo}`,\n      source: configSource || 'environment'\n    };\n    this._initialized = true;\n  }\n\n  /**\n   * Get repository owner\n   */\n  getOwner() {\n    this._initialize();\n    return this._config.owner;\n  }\n\n  /**\n   * Get repository name\n   */\n  getName() {\n    this._initialize();\n    return this._config.name;\n  }\n\n  /**\n   * Get full repository name (owner/name)\n   */\n  getFullName() {\n    this._initialize();\n    return this._config.fullName;\n  }\n\n  /**\n   * Get repository URL for GitHub\n   */\n  getGitHubUrl() {\n    this._initialize();\n    return `https://github.com/${this._config.fullName}`;\n  }\n\n  /**\n   * Get repository URL for GitHub API\n   */\n  getApiUrl() {\n    this._initialize();\n    return `https://api.github.com/repos/${this._config.fullName}`;\n  }\n\n  /**\n   * Get configuration source for debugging\n   */\n  getSource() {\n    this._initialize();\n    return this._config.source;\n  }\n\n  /**\n   * Get full configuration object\n   */\n  getConfig() {\n    this._initialize();\n    return { ...this._config };\n  }\n\n  /**\n   * Override configuration (for testing or manual setup)\n   */\n  setConfig(owner, name) {\n    this._config = {\n      owner,\n      name,\n      fullName: `${owner}/${name}`,\n      source: 'manual'\n    };\n    this._initialized = true;\n  }\n\n  /**\n   * Reset configuration to force re-initialization\n   */\n  reset() {\n    this._config = null;\n    this._initialized = false;\n  }\n}\n\n// Create and export singleton instance\nconst repositoryConfig = new RepositoryConfig();\n\nexport default repositoryConfig;","import githubService from './githubService';\nimport issueTrackingService from './issueTrackingService';\nimport { lazyLoadYaml } from '../services/libraryLoaderService';\nimport repositoryConfig from '../config/repositoryConfig';\n\n// eslint-disable-next-line no-unused-vars\nlet html2canvas = null;\n// Dynamically import html2canvas when needed\nconst ensureHtml2Canvas = async () => {\n  if (!html2canvas) {\n    const module = await import('html2canvas');\n    html2canvas = module.default;\n  }\n  return html2canvas;\n};\n\nclass BugReportService {\n  constructor() {\n    this.templates = new Map();\n    this.templateCache = new Map();\n  }\n\n  // Fetch available bug report templates from GitHub\n  async fetchIssueTemplates(owner = repositoryConfig.getOwner(), repo = repositoryConfig.getName()) {\n    try {\n      // Try to get templates from .github/ISSUE_TEMPLATE directory\n      const templates = await this._fetchTemplatesFromDirectory(owner, repo, '.github/ISSUE_TEMPLATE');\n      \n      // Cache the templates\n      const cacheKey = `${owner}/${repo}`;\n      this.templateCache.set(cacheKey, {\n        templates,\n        fetchedAt: Date.now()\n      });\n      \n      return templates;\n    } catch (error) {\n      console.warn('Failed to fetch issue templates:', error);\n      // Return default templates if fetching fails\n      return this._getDefaultTemplates();\n    }\n  }\n\n  // Fetch templates from a specific directory\n  async _fetchTemplatesFromDirectory(owner, repo, path) {\n    const templates = [];\n    \n    try {\n      const contents = await githubService.getDirectoryContents(owner, repo, path);\n      \n      // Filter for YAML files\n      const yamlFiles = contents.filter(file => \n        file.type === 'file' && \n        (file.name.endsWith('.yml') || file.name.endsWith('.yaml')) &&\n        file.name !== 'config.yml' // Skip config file\n      );\n      \n      // Fetch and parse each template\n      for (const file of yamlFiles) {\n        try {\n          const fileContent = await githubService.getFileContent(owner, repo, file.path);\n          const template = await this._parseIssueTemplate(fileContent, file.name);\n          if (template) {\n            templates.push(template);\n          }\n        } catch (error) {\n          console.warn(`Failed to parse template ${file.name}:`, error);\n        }\n      }\n      \n      return templates;\n    } catch (error) {\n      console.warn(`Failed to fetch templates from ${path}:`, error);\n      return [];\n    }\n  }\n\n  // Parse a YAML issue template\n  async _parseIssueTemplate(yamlContent, filename) {\n    try {\n      // Lazy load js-yaml to improve initial page responsiveness\n      const yaml = await lazyLoadYaml();\n      const template = yaml.load(yamlContent);\n      \n      if (!template || !template.name || !template.body) {\n        console.warn(`Invalid template structure in ${filename}`);\n        return null;\n      }\n      \n      // Determine template type from filename\n      const templateType = this._getTemplateType(filename);\n      \n      return {\n        id: filename.replace(/\\.(yml|yaml)$/, ''),\n        name: template.name,\n        description: template.description || '',\n        title: template.title || '',\n        labels: template.labels || [],\n        body: template.body || [],\n        filename,\n        type: templateType\n      };\n    } catch (error) {\n      console.error(`Failed to parse YAML template ${filename}:`, error);\n      return null;\n    }\n  }\n\n  // Determine template type from filename\n  _getTemplateType(filename) {\n    const name = filename.toLowerCase();\n    if (name.includes('bug')) return 'bug';\n    if (name.includes('feature')) return 'feature';\n    if (name.includes('question')) return 'question';\n    if (name.includes('documentation')) return 'documentation';\n    return 'general';\n  }\n\n  // Get default templates as fallback (public method)\n  getDefaultTemplates() {\n    return this._getDefaultTemplates();\n  }\n\n  // Get default templates as fallback\n  _getDefaultTemplates() {\n    return [\n      {\n        id: 'bug_report',\n        name: 'Bug Report',\n        description: 'File a bug report to help us improve',\n        title: '[Bug]: ',\n        labels: ['bug'],\n        type: 'bug',\n        body: [\n          {\n            type: 'textarea',\n            id: 'what-happened',\n            attributes: {\n              label: 'What happened?',\n              description: 'A clear description of what the bug is.'\n            },\n            validations: {\n              required: true\n            }\n          },\n          {\n            type: 'textarea',\n            id: 'expected',\n            attributes: {\n              label: 'Expected behavior',\n              description: 'What did you expect to happen?'\n            },\n            validations: {\n              required: true\n            }\n          },\n          {\n            type: 'textarea',\n            id: 'steps',\n            attributes: {\n              label: 'Steps to reproduce',\n              description: 'Steps to reproduce the behavior',\n              placeholder: '1. Go to \\'...\\'\\n2. Click on \\'....\\'\\n3. See error'\n            },\n            validations: {\n              required: true\n            }\n          }\n        ]\n      },\n      {\n        id: 'feature_request',\n        name: 'Feature Request',\n        description: 'Suggest an idea for this project',\n        title: '[Feature]: ',\n        labels: ['enhancement'],\n        type: 'feature',\n        body: [\n          {\n            type: 'textarea',\n            id: 'description',\n            attributes: {\n              label: 'Feature Description',\n              description: 'A clear description of what you want to happen.'\n            },\n            validations: {\n              required: true\n            }\n          },\n          {\n            type: 'textarea',\n            id: 'use-case',\n            attributes: {\n              label: 'Use Case',\n              description: 'Describe the use case and why this feature would be beneficial.'\n            },\n            validations: {\n              required: true\n            }\n          }\n        ]\n      },\n      {\n        id: 'question',\n        name: 'Question',\n        description: 'Ask for help or clarification about SGEX Workbench',\n        title: '[Question]: ',\n        labels: ['question'],\n        type: 'question',\n        body: [\n          {\n            type: 'textarea',\n            id: 'question',\n            attributes: {\n              label: 'Your Question',\n              description: 'What would you like to know?'\n            },\n            validations: {\n              required: true\n            }\n          },\n          {\n            type: 'textarea',\n            id: 'context',\n            attributes: {\n              label: 'Context',\n              description: 'What were you trying to do when this question came up?'\n            },\n            validations: {\n              required: false\n            }\n          }\n        ]\n      }\n    ];\n  }\n\n  // Get cached templates or fetch if not available\n  async getTemplates(owner = repositoryConfig.getOwner(), repo = repositoryConfig.getName(), forceRefresh = false) {\n    const cacheKey = `${owner}/${repo}`;\n    const cached = this.templateCache.get(cacheKey);\n    \n    // Use cache if available and not forcing refresh and not too old (1 hour)\n    if (!forceRefresh && cached && (Date.now() - cached.fetchedAt) < 3600000) {\n      return cached.templates;\n    }\n    \n    // Fetch fresh templates\n    return await this.fetchIssueTemplates(owner, repo);\n  }\n\n  // Generate issue body from form data and template\n  generateIssueBody(template, formData, includeConsole = false, consoleOutput = '', contextData = {}, screenshotBlob = null) {\n    let body = '';\n    \n    // Process template body fields\n    for (const field of template.body) {\n      if (field.type === 'markdown') {\n        // Add markdown content as-is\n        body += `${field.attributes.value}\\n\\n`;\n      } else if (field.id && formData[field.id]) {\n        // Add field label and value\n        const label = field.attributes?.label || field.id;\n        const value = formData[field.id];\n        \n        body += `## ${label}\\n\\n${value}\\n\\n`;\n      }\n    }\n    \n    // Add screenshot reference if provided\n    if (screenshotBlob) {\n      body += `## Screenshot\\n\\n*A screenshot has been captured and will be attached to this issue.*\\n\\n`;\n    }\n    \n    // Add console output if requested\n    if (includeConsole && consoleOutput) {\n      const truncatedOutput = this._truncateConsoleOutput(consoleOutput);\n      body += `## Console Output\\n\\n\\`\\`\\`\\n${truncatedOutput}\\n\\`\\`\\`\\n\\n`;\n    }\n    \n    // Add enhanced environment and context information\n    body += this._generateContextualInfo(contextData);\n    \n    return body.trim();\n  }\n\n  // Truncate console output to prevent hitting GitHub limits\n  _truncateConsoleOutput(consoleOutput) {\n    // GitHub issue body limit is ~65,536 characters\n    // We'll use half that for console output to leave room for other content\n    const maxLength = 32768;\n    \n    if (consoleOutput.length <= maxLength) {\n      return consoleOutput;\n    }\n    \n    const truncated = consoleOutput.substring(0, maxLength);\n    return `${truncated}\\n\\n... (output truncated to ${maxLength} characters)`;\n  }\n\n  // Generate comprehensive context information including environment and user context\n  _generateContextualInfo(contextData = {}) {\n    // Capture basic environment info\n    const env = {\n      userAgent: navigator.userAgent,\n      url: window.location.href,\n      timestamp: new Date().toISOString(),\n      viewport: {\n        width: window.innerWidth,\n        height: window.innerHeight\n      },\n      screen: {\n        width: window.screen.width,\n        height: window.screen.height\n      },\n      language: navigator.language,\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone\n    };\n\n    // Capture SGEX-specific context\n    const sgexContext = this._extractSGEXContext(contextData);\n\n    // Combine all context information\n    const fullContext = {\n      environment: env,\n      sgexContext: sgexContext\n    };\n    \n    return `## Environment & Context\\n\\n\\`\\`\\`json\\n${JSON.stringify(fullContext, null, 2)}\\n\\`\\`\\``;\n  }\n\n  // Extract SGEX-specific contextual information\n  _extractSGEXContext(contextData = {}) {\n    const context = {\n      page: {\n        id: contextData.pageId || this._detectCurrentPage(),\n        url: window.location.href,\n        pathname: window.location.pathname\n      },\n      authentication: {\n        isAuthenticated: this._isUserAuthenticated(),\n        authMode: this._getAuthenticationMode()\n      }\n    };\n\n    // Add repository context if available\n    if (contextData.repository) {\n      context.repository = {\n        name: contextData.repository.name || contextData.repository,\n        owner: contextData.repository.owner || contextData.repository.split('/')[0],\n        branch: contextData.branch || 'unknown'\n      };\n    }\n\n    // Add DAK context if available\n    if (contextData.selectedDak) {\n      context.dak = {\n        name: contextData.selectedDak.name,\n        description: contextData.selectedDak.description,\n        compliance: contextData.selectedDak.compliance\n      };\n    }\n\n    // Add component context if available\n    if (contextData.component) {\n      context.component = {\n        type: contextData.component,\n        isEditing: contextData.isEditing || false\n      };\n    }\n\n    // Add user profile context if available\n    if (contextData.profile) {\n      context.profile = {\n        login: contextData.profile.login,\n        type: contextData.profile.type\n      };\n    }\n\n    // Add any other relevant context\n    if (contextData.hasQuestionnaires !== undefined) {\n      context.features = context.features || {};\n      context.features.hasQuestionnaires = contextData.hasQuestionnaires;\n    }\n\n    if (contextData.selectedReferencesCount !== undefined) {\n      context.features = context.features || {};\n      context.features.selectedReferencesCount = contextData.selectedReferencesCount;\n    }\n\n    return context;\n  }\n\n  // Detect current page from URL if pageId not provided\n  _detectCurrentPage() {\n    const path = window.location.pathname;\n    const pathSegments = path.split('/').filter(Boolean);\n    \n    if (pathSegments.length > 0) {\n      return pathSegments[pathSegments.length - 1] || 'unknown';\n    }\n    \n    return 'root';\n  }\n\n  // Check if user is authenticated (avoiding circular import)\n  _isUserAuthenticated() {\n    try {\n      // Check for common authentication indicators\n      const hasToken = localStorage.getItem('github_token') || \n                      sessionStorage.getItem('github_token') ||\n                      window.githubToken;\n      return !!hasToken;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // Determine authentication mode\n  _getAuthenticationMode() {\n    if (this._isUserAuthenticated()) {\n      return 'authenticated';\n    } else if (window.location.hostname === 'localhost' || window.location.hostname.includes('127.0.0.1')) {\n      return 'local_development';\n    } else {\n      return 'demo_mode';\n    }\n  }\n\n  // Take a screenshot of the current page\n  async takeScreenshot() {\n    try {\n      // Check if the browser supports the Screen Capture API\n      if ('getDisplayMedia' in navigator.mediaDevices) {\n        return await this._takeScreenshotWithScreenCapture();\n      } else if ('html2canvas' in window) {\n        // Fallback to html2canvas if available\n        return await this._takeScreenshotWithHtml2Canvas();\n      } else {\n        // If no screenshot capabilities available, return null\n        console.warn('Screenshot functionality not available in this browser');\n        return null;\n      }\n    } catch (error) {\n      console.warn('Failed to take screenshot:', error);\n      return null;\n    }\n  }\n\n  // Take screenshot using Screen Capture API (requires user permission)\n  async _takeScreenshotWithScreenCapture() {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: { mediaSource: 'screen' }\n      });\n      \n      const video = document.createElement('video');\n      video.srcObject = stream;\n      video.play();\n      \n      return new Promise((resolve, reject) => {\n        video.onloadedmetadata = () => {\n          const canvas = document.createElement('canvas');\n          canvas.width = video.videoWidth;\n          canvas.height = video.videoHeight;\n          \n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(video, 0, 0);\n          \n          // Stop the stream\n          stream.getTracks().forEach(track => track.stop());\n          \n          // Convert to blob\n          canvas.toBlob(resolve, 'image/png');\n        };\n        \n        video.onerror = reject;\n      });\n    } catch (error) {\n      console.warn('Screen capture failed:', error);\n      return null;\n    }\n  }\n\n  // Fallback screenshot using html2canvas (if loaded)\n  async _takeScreenshotWithHtml2Canvas() {\n    try {\n      await ensureHtml2Canvas();\n      if (typeof html2canvas !== 'function') {\n        console.warn('html2canvas not available');\n        return null;\n      }\n      \n      const canvas = await html2canvas(document.body, {\n        height: window.innerHeight,\n        width: window.innerWidth,\n        scrollX: 0,\n        scrollY: 0\n      });\n      \n      return new Promise(resolve => {\n        canvas.toBlob(resolve, 'image/png');\n      });\n    } catch (error) {\n      console.warn('html2canvas screenshot failed:', error);\n      return null;\n    }\n  }\n\n  // Capture console output\n  captureConsoleOutput() {\n    const logs = [];\n    const originalMethods = {};\n    \n    // Store original console methods\n    ['log', 'warn', 'error', 'info', 'debug'].forEach(method => {\n      originalMethods[method] = console[method];\n    });\n    \n    // Override console methods to capture output\n    ['log', 'warn', 'error', 'info', 'debug'].forEach(method => {\n      console[method] = (...args) => {\n        // Call original method\n        originalMethods[method].apply(console, args);\n        \n        // Capture the output\n        const timestamp = new Date().toISOString();\n        const message = args.map(arg => \n          typeof arg === 'object' ? JSON.stringify(arg) : String(arg)\n        ).join(' ');\n        \n        logs.push(`[${timestamp}] ${method.toUpperCase()}: ${message}`);\n      };\n    });\n    \n    // Return a function to stop capturing and get logs\n    return {\n      stop: () => {\n        // Restore original console methods\n        Object.keys(originalMethods).forEach(method => {\n          console[method] = originalMethods[method];\n        });\n        return logs.join('\\n');\n      },\n      getLogs: () => logs.join('\\n')\n    };\n  }\n\n  // Submit issue via GitHub API\n  async submitIssue(owner, repo, template, formData, includeConsole = false, consoleOutput = '', contextData = {}, screenshotBlob = null) {\n    try {\n      // Generate title\n      const titlePrefix = template.title || '';\n      const title = titlePrefix + (formData.title || 'Issue submitted via SGEX');\n      \n      // Generate body\n      const body = this.generateIssueBody(template, formData, includeConsole, consoleOutput, contextData, screenshotBlob);\n      \n      // Submit issue\n      const result = await githubService.createIssue(\n        owner,\n        repo,\n        title,\n        body,\n        template.labels || [],\n        [] // assignees\n      );\n      \n      // If issue was created successfully and user is authenticated, track it\n      if (result.success && result.issue && githubService.isAuth()) {\n        try {\n          await issueTrackingService.addTrackedIssue({\n            ...result.issue,\n            repository: `${owner}/${repo}`\n          });\n        } catch (trackingError) {\n          console.warn('Failed to track created issue:', trackingError);\n          // Don't fail the submission if tracking fails\n        }\n      }\n      \n      // TODO: If screenshot is provided and issue was created successfully,\n      // we would need to upload the screenshot as an attachment\n      // This requires additional GitHub API calls for file uploads\n      if (screenshotBlob && result.success && result.issue) {\n        console.log('Screenshot captured but attachment upload not yet implemented');\n        // Future enhancement: Upload screenshot to GitHub issue\n      }\n      \n      return result;\n    } catch (error) {\n      console.error('Failed to submit issue:', error);\n      return {\n        success: false,\n        error: {\n          message: error.message,\n          type: 'submission_error'\n        }\n      };\n    }\n  }\n\n  // Generate pre-populated GitHub issue URL\n  generateIssueUrl(owner, repo, template, formData, includeConsole = false, consoleOutput = '', contextData = {}, screenshotBlob = null) {\n    const params = new URLSearchParams();\n    \n    // Set template\n    if (template.filename) {\n      params.set('template', template.filename);\n    }\n    \n    // Set labels\n    if (template.labels && template.labels.length > 0) {\n      params.set('labels', template.labels.join(','));\n    }\n    \n    // Set title\n    const titlePrefix = template.title || '';\n    const title = titlePrefix + (formData.title || '');\n    if (title) {\n      params.set('title', title);\n    }\n    \n    // For template-based issues, populate individual fields instead of body\n    if (template.filename && template.body) {\n      // Add form field values as individual parameters\n      for (const field of template.body) {\n        if (field.id && formData[field.id]) {\n          params.set(field.id, formData[field.id]);\n        }\n      }\n      \n      // Add console output as a separate field if included\n      if (includeConsole && consoleOutput) {\n        const truncatedOutput = this._truncateConsoleOutput(consoleOutput);\n        const consoleField = 'console-output';\n        params.set(consoleField, `\\`\\`\\`\\n${truncatedOutput}\\n\\`\\`\\``);\n      }\n      \n      // Add contextual information as a separate field\n      const contextInfo = this._generateContextualInfo(contextData);\n      params.set('context-info', contextInfo);\n      \n      // Add note about screenshot if provided\n      if (screenshotBlob) {\n        params.set('screenshot-note', 'A screenshot was captured and will be manually attached to this issue.');\n      }\n    } else {\n      // Fallback to body parameter for non-template issues\n      const body = this.generateIssueBody(template, formData, includeConsole, consoleOutput, contextData, screenshotBlob);\n      if (body) {\n        // URL encode and truncate if too long\n        const maxBodyLength = 2000; // Conservative limit for URL\n        const truncatedBody = body.length > maxBodyLength ? \n          body.substring(0, maxBodyLength) + '\\n\\n... (content truncated, please add remaining details)' : \n          body;\n        params.set('body', truncatedBody);\n      }\n    }\n    \n    return `https://github.com/${owner}/${repo}/issues/new?${params.toString()}`;\n  }\n\n  // Clear template cache\n  clearCache() {\n    this.templateCache.clear();\n  }\n}\n\n// Create and export singleton instance\nconst bugReportService = new BugReportService();\nexport default bugReportService;","import React, { useState, useRef, useEffect, useCallback } from 'react';\n\nconst ScreenshotEditor = ({ \n  screenshotBlob, \n  onSave, \n  onCancel,\n  isOpen \n}) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentTool, setCurrentTool] = useState('draw');\n  const [drawColor, setDrawColor] = useState('#ff0000');\n  const [lineWidth, setLineWidth] = useState(3);\n  const [image, setImage] = useState(null);\n  const [cropStart, setCropStart] = useState(null);\n  const [cropEnd, setCropEnd] = useState(null);\n  const [isCropping, setIsCropping] = useState(false);\n  const [originalImageData, setOriginalImageData] = useState(null);\n\n  // Available colors for drawing\n  const colors = [\n    '#ff0000', // Red\n    '#00ff00', // Green  \n    '#0000ff', // Blue\n    '#ffff00', // Yellow\n    '#ff00ff', // Magenta\n    '#00ffff', // Cyan\n    '#ffffff', // White\n    '#000000', // Black\n    '#ffa500', // Orange\n    '#800080'  // Purple\n  ];\n\n  // Load image from blob\n  useEffect(() => {\n    if (screenshotBlob && isOpen) {\n      const img = new Image();\n      img.onload = () => {\n        setImage(img);\n        const canvas = canvasRef.current;\n        if (canvas) {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0);\n          // Store original image data for reset functionality\n          setOriginalImageData(ctx.getImageData(0, 0, canvas.width, canvas.height));\n        }\n      };\n      img.src = URL.createObjectURL(screenshotBlob);\n      \n      return () => {\n        URL.revokeObjectURL(img.src);\n      };\n    }\n  }, [screenshotBlob, isOpen]);\n\n  // Get mouse position relative to canvas\n  const getMousePos = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    \n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  }, []);\n\n  // Handle mouse down\n  const handleMouseDown = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const pos = getMousePos(e);\n\n    if (currentTool === 'crop') {\n      setCropStart(pos);\n      setCropEnd(pos);\n      setIsCropping(true);\n    } else if (currentTool === 'draw' || currentTool === 'highlight') {\n      setIsDrawing(true);\n      ctx.beginPath();\n      ctx.moveTo(pos.x, pos.y);\n      \n      // Set drawing style based on tool\n      if (currentTool === 'highlight') {\n        ctx.globalAlpha = 0.3;\n        ctx.globalCompositeOperation = 'source-over';\n      } else {\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n      }\n      \n      ctx.strokeStyle = drawColor;\n      ctx.lineWidth = currentTool === 'highlight' ? lineWidth * 3 : lineWidth;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n    }\n  }, [currentTool, getMousePos, drawColor, lineWidth]);\n\n  // Handle mouse move\n  const handleMouseMove = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const pos = getMousePos(e);\n\n    if (currentTool === 'crop' && isCropping) {\n      setCropEnd(pos);\n      \n      // Redraw image and crop selection\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      if (image) {\n        ctx.drawImage(image, 0, 0);\n      }\n      \n      // Draw crop selection rectangle\n      const startX = Math.min(cropStart.x, pos.x);\n      const startY = Math.min(cropStart.y, pos.y);\n      const width = Math.abs(pos.x - cropStart.x);\n      const height = Math.abs(pos.y - cropStart.y);\n      \n      ctx.strokeStyle = '#000000';\n      ctx.lineWidth = 2;\n      ctx.setLineDash([5, 5]);\n      ctx.strokeRect(startX, startY, width, height);\n      ctx.setLineDash([]);\n      \n    } else if ((currentTool === 'draw' || currentTool === 'highlight') && isDrawing) {\n      ctx.lineTo(pos.x, pos.y);\n      ctx.stroke();\n    }\n  }, [currentTool, isCropping, cropStart, isDrawing, getMousePos, image]);\n\n  // Handle mouse up\n  const handleMouseUp = useCallback(() => {\n    if (currentTool === 'crop' && isCropping) {\n      setIsCropping(false);\n    } else if (currentTool === 'draw' || currentTool === 'highlight') {\n      setIsDrawing(false);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.globalAlpha = 1; // Reset alpha\n    }\n  }, [currentTool, isCropping]);\n\n  // Apply crop\n  const applyCrop = () => {\n    if (!cropStart || !cropEnd) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    const startX = Math.min(cropStart.x, cropEnd.x);\n    const startY = Math.min(cropStart.y, cropEnd.y);\n    const width = Math.abs(cropEnd.x - cropStart.x);\n    const height = Math.abs(cropEnd.y - cropStart.y);\n    \n    if (width > 0 && height > 0) {\n      // Get the cropped image data\n      const imageData = ctx.getImageData(startX, startY, width, height);\n      \n      // Resize canvas to cropped dimensions\n      canvas.width = width;\n      canvas.height = height;\n      \n      // Draw the cropped image\n      ctx.putImageData(imageData, 0, 0);\n      \n      // Reset crop state\n      setCropStart(null);\n      setCropEnd(null);\n      setCurrentTool('draw');\n    }\n  };\n\n  // Reset to original image\n  const resetImage = () => {\n    if (originalImageData && image) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      \n      canvas.width = image.width;\n      canvas.height = image.height;\n      ctx.putImageData(originalImageData, 0, 0);\n      \n      setCropStart(null);\n      setCropEnd(null);\n      setCurrentTool('draw');\n    }\n  };\n\n  // Save edited image\n  const handleSave = () => {\n    const canvas = canvasRef.current;\n    canvas.toBlob((blob) => {\n      onSave(blob);\n    }, 'image/png');\n  };\n\n  if (!isOpen || !screenshotBlob) {\n    return null;\n  }\n\n  return (\n    <div className=\"screenshot-editor-overlay\">\n      <div className=\"screenshot-editor\">\n        <div className=\"screenshot-editor-header\">\n          <h3>Edit Screenshot</h3>\n          <button \n            className=\"close-btn\"\n            onClick={onCancel}\n            aria-label=\"Close screenshot editor\"\n          >\n            ×\n          </button>\n        </div>\n\n        <div className=\"screenshot-editor-content\">\n          {/* Toolbar */}\n          <div className=\"screenshot-toolbar\">\n            <div className=\"tool-group\">\n              <label>Tool:</label>\n              <button\n                className={`tool-btn ${currentTool === 'draw' ? 'active' : ''}`}\n                onClick={() => setCurrentTool('draw')}\n              >\n                Draw\n              </button>\n              <button\n                className={`tool-btn ${currentTool === 'highlight' ? 'active' : ''}`}\n                onClick={() => setCurrentTool('highlight')}\n              >\n                Highlight\n              </button>\n              <button\n                className={`tool-btn ${currentTool === 'crop' ? 'active' : ''}`}\n                onClick={() => setCurrentTool('crop')}\n              >\n                Crop\n              </button>\n            </div>\n\n            {(currentTool === 'draw' || currentTool === 'highlight') && (\n              <div className=\"tool-group\">\n                <label>Color:</label>\n                <div className=\"color-palette\">\n                  {colors.map(color => (\n                    <button\n                      key={color}\n                      className={`color-btn ${drawColor === color ? 'active' : ''}`}\n                      style={{ backgroundColor: color }}\n                      onClick={() => setDrawColor(color)}\n                      aria-label={`Select ${color} color`}\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {(currentTool === 'draw' || currentTool === 'highlight') && (\n              <div className=\"tool-group\">\n                <label>Size:</label>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={lineWidth}\n                  onChange={(e) => setLineWidth(parseInt(e.target.value))}\n                  className=\"size-slider\"\n                />\n                <span className=\"size-value\">{lineWidth}px</span>\n              </div>\n            )}\n\n            {currentTool === 'crop' && cropStart && cropEnd && (\n              <div className=\"tool-group\">\n                <button\n                  className=\"action-btn primary\"\n                  onClick={applyCrop}\n                >\n                  Apply Crop\n                </button>\n              </div>\n            )}\n\n            <div className=\"tool-group\">\n              <button\n                className=\"action-btn secondary\"\n                onClick={resetImage}\n              >\n                Reset\n              </button>\n            </div>\n          </div>\n\n          {/* Canvas */}\n          <div className=\"canvas-container\">\n            <canvas\n              ref={canvasRef}\n              className=\"screenshot-canvas\"\n              onMouseDown={handleMouseDown}\n              onMouseMove={handleMouseMove}\n              onMouseUp={handleMouseUp}\n              onMouseLeave={handleMouseUp}\n            />\n          </div>\n\n          {/* Instructions */}\n          <div className=\"editor-instructions\">\n            {currentTool === 'draw' && (\n              <p>Click and drag to draw on the screenshot</p>\n            )}\n            {currentTool === 'highlight' && (\n              <p>Click and drag to highlight areas (semi-transparent)</p>\n            )}\n            {currentTool === 'crop' && (\n              <p>Click and drag to select an area to crop, then click \"Apply Crop\"</p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"screenshot-editor-footer\">\n          <button\n            className=\"action-btn secondary\"\n            onClick={onCancel}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"action-btn primary\"\n            onClick={handleSave}\n          >\n            Save & Use\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScreenshotEditor;","import React, { useState, useEffect } from 'react';\nimport bugReportService from '../services/bugReportService';\nimport githubService from '../services/githubService';\nimport ScreenshotEditor from './ScreenshotEditor';\nimport repositoryConfig from '../config/repositoryConfig';\n\nconst BugReportForm = ({ onClose, contextData = {} }) => {\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [formData, setFormData] = useState({});\n  const [includeConsole, setIncludeConsole] = useState(false);\n  const [includeScreenshot, setIncludeScreenshot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(null);\n  const [submitResult, setSubmitResult] = useState(null);\n  const [consoleCapture, setConsoleCapture] = useState(null);\n  const [screenshotBlob, setScreenshotBlob] = useState(null);\n  const [screenshotPreview, setScreenshotPreview] = useState(null);\n  const [takingScreenshot, setTakingScreenshot] = useState(false);\n  const [showContextPreview, setShowContextPreview] = useState(false);\n  const [showScreenshotEditor, setShowScreenshotEditor] = useState(false);\n  const [originalScreenshotBlob, setOriginalScreenshotBlob] = useState(null);\n\n  // Load templates on mount\n  useEffect(() => {\n    loadTemplates();\n  }, []);\n\n  // Start console capture when component mounts\n  useEffect(() => {\n    const capture = bugReportService.captureConsoleOutput();\n    setConsoleCapture(capture);\n    \n    return () => {\n      capture.stop();\n    };\n  }, []);\n\n  // Auto-select Bug Report template and enable console by default for bug reports\n  useEffect(() => {\n    if (templates.length > 0 && !selectedTemplate) {\n      const bugTemplate = templates.find(t => t.type === 'bug') || templates[0];\n      setSelectedTemplate(bugTemplate);\n      setIncludeConsole(bugTemplate.type === 'bug');\n    }\n  }, [templates, selectedTemplate]); // Added selectedTemplate back to dependencies\n\n  const loadTemplates = async () => {\n    try {\n      setLoading(true);\n      const fetchedTemplates = await bugReportService.getTemplates();\n      setTemplates(fetchedTemplates);\n    } catch (err) {\n      console.error('Failed to load templates:', err);\n      setError('Failed to load bug report templates. Using defaults.');\n      // Use default templates as fallback\n      setTemplates(bugReportService.getDefaultTemplates());\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTemplateChange = (template) => {\n    setSelectedTemplate(template);\n    setFormData({}); // Reset form data when template changes\n    setIncludeConsole(template.type === 'bug'); // Auto-enable console for bug reports\n    setIncludeScreenshot(template.type === 'bug'); // Auto-enable screenshot for bug reports\n  };\n\n  const handleFormChange = (fieldId, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [fieldId]: value\n    }));\n  };\n\n  const handleTakeScreenshot = async () => {\n    setTakingScreenshot(true);\n    setError(null);\n    \n    try {\n      const screenshot = await bugReportService.takeScreenshot();\n      if (screenshot) {\n        setOriginalScreenshotBlob(screenshot);\n        setScreenshotBlob(screenshot);\n        // Create preview URL\n        const previewUrl = URL.createObjectURL(screenshot);\n        setScreenshotPreview(previewUrl);\n        setIncludeScreenshot(true);\n      } else {\n        setError('Screenshot capture is not supported in this browser or was denied by the user.');\n      }\n    } catch (err) {\n      console.error('Failed to take screenshot:', err);\n      setError('Failed to capture screenshot: ' + err.message);\n    } finally {\n      setTakingScreenshot(false);\n    }\n  };\n\n  const handleEditScreenshot = () => {\n    setShowScreenshotEditor(true);\n  };\n\n  const handleScreenshotEditorSave = (editedBlob) => {\n    // Update the screenshot with the edited version\n    setScreenshotBlob(editedBlob);\n    \n    // Update preview URL\n    if (screenshotPreview) {\n      URL.revokeObjectURL(screenshotPreview);\n    }\n    const newPreviewUrl = URL.createObjectURL(editedBlob);\n    setScreenshotPreview(newPreviewUrl);\n    \n    setShowScreenshotEditor(false);\n  };\n\n  const handleScreenshotEditorCancel = () => {\n    setShowScreenshotEditor(false);\n  };\n\n  const handleRemoveScreenshot = () => {\n    if (screenshotPreview) {\n      URL.revokeObjectURL(screenshotPreview);\n    }\n    setScreenshotBlob(null);\n    setOriginalScreenshotBlob(null);\n    setScreenshotPreview(null);\n    setIncludeScreenshot(false);\n  };\n\n  // Clean up screenshot preview URL on unmount\n  useEffect(() => {\n    return () => {\n      if (screenshotPreview) {\n        URL.revokeObjectURL(screenshotPreview);\n      }\n    };\n  }, [screenshotPreview]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!selectedTemplate) {\n      setError('Please select a template');\n      return;\n    }\n\n    setSubmitting(true);\n    setError(null);\n\n    try {\n      // Get current console output if including\n      const currentConsoleOutput = includeConsole && consoleCapture ? consoleCapture.getLogs() : '';\n      \n      // Get screenshot blob if including\n      const currentScreenshot = includeScreenshot ? screenshotBlob : null;\n      \n      // Check if user is authenticated and can submit via API\n      if (githubService.isAuthenticated) {\n        const result = await bugReportService.submitIssue(\n          repositoryConfig.getOwner(),\n          repositoryConfig.getName(),\n          selectedTemplate,\n          formData,\n          includeConsole,\n          currentConsoleOutput,\n          contextData,\n          currentScreenshot\n        );\n        \n        setSubmitResult(result);\n        if (result.success) {\n          setSubmitted(true);\n        } else {\n          setError(result.error?.message || 'Failed to submit issue');\n        }\n      } else {\n        // Generate URL for manual submission\n        const url = bugReportService.generateIssueUrl(\n          repositoryConfig.getOwner(),\n          repositoryConfig.getName(),\n          selectedTemplate,\n          formData,\n          includeConsole,\n          currentConsoleOutput,\n          contextData,\n          currentScreenshot\n        );\n        \n        // Try to open URL\n        try {\n          const newWindow = window.open(url, '_blank');\n          if (!newWindow || newWindow.closed) {\n            setSubmitResult({\n              success: false,\n              fallbackUrl: url,\n              error: { type: 'popup_blocked' }\n            });\n          } else {\n            setSubmitResult({\n              success: true,\n              fallbackUrl: url,\n              manual: true,\n              urlOpened: true\n            });\n            // Don't set submitted to true here - we're just opening a URL\n          }\n        } catch (openError) {\n          setSubmitResult({\n            success: false,\n            fallbackUrl: url,\n            error: { type: 'popup_blocked' }\n          });\n        }\n      }\n    } catch (err) {\n      console.error('Failed to submit bug report:', err);\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const generateFallbackUrl = () => {\n    if (!selectedTemplate) return '';\n    \n    const currentConsoleOutput = includeConsole && consoleCapture ? consoleCapture.getLogs() : '';\n    const currentScreenshot = includeScreenshot ? screenshotBlob : null;\n    return bugReportService.generateIssueUrl(\n      repositoryConfig.getOwner(),\n      repositoryConfig.getName(),\n      selectedTemplate,\n      formData,\n      includeConsole,\n      currentConsoleOutput,\n      contextData,\n      currentScreenshot\n    );\n  };\n\n  const renderFormField = (field) => {\n    const { id, type, attributes = {}, validations = {} } = field;\n    const { label, description, placeholder, options } = attributes;\n    const { required } = validations;\n\n    if (type === 'markdown') {\n      return (\n        <div key={id || Math.random()} className=\"form-field markdown-field\">\n          <div \n            className=\"markdown-content\"\n            dangerouslySetInnerHTML={{ __html: attributes.value }}\n          />\n        </div>\n      );\n    }\n\n    const fieldId = id || `field_${Math.random()}`;\n\n    switch (type) {\n      case 'textarea':\n        return (\n          <div key={fieldId} className=\"form-field\">\n            <label htmlFor={fieldId} className=\"field-label\">\n              {label}\n              {required && <span className=\"required\">*</span>}\n            </label>\n            {description && <p className=\"field-description\">{description}</p>}\n            <textarea\n              id={fieldId}\n              className=\"field-input textarea-input\"\n              placeholder={placeholder}\n              value={formData[fieldId] || ''}\n              onChange={(e) => handleFormChange(fieldId, e.target.value)}\n              required={required}\n              rows={4}\n            />\n          </div>\n        );\n\n      case 'input':\n        return (\n          <div key={fieldId} className=\"form-field\">\n            <label htmlFor={fieldId} className=\"field-label\">\n              {label}\n              {required && <span className=\"required\">*</span>}\n            </label>\n            {description && <p className=\"field-description\">{description}</p>}\n            <input\n              id={fieldId}\n              type=\"text\"\n              className=\"field-input text-input\"\n              placeholder={placeholder}\n              value={formData[fieldId] || ''}\n              onChange={(e) => handleFormChange(fieldId, e.target.value)}\n              required={required}\n            />\n          </div>\n        );\n\n      case 'dropdown':\n        return (\n          <div key={fieldId} className=\"form-field\">\n            <label htmlFor={fieldId} className=\"field-label\">\n              {label}\n              {required && <span className=\"required\">*</span>}\n            </label>\n            {description && <p className=\"field-description\">{description}</p>}\n            <select\n              id={fieldId}\n              className=\"field-input select-input\"\n              value={formData[fieldId] || ''}\n              onChange={(e) => handleFormChange(fieldId, e.target.value)}\n              required={required}\n            >\n              <option value=\"\">Select an option...</option>\n              {options?.map((option, index) => (\n                <option key={index} value={option.value || option}>\n                  {option.label || option}\n                </option>\n              ))}\n            </select>\n          </div>\n        );\n\n      case 'checkboxes':\n        return (\n          <div key={fieldId} className=\"form-field\">\n            <fieldset className=\"checkbox-fieldset\">\n              <legend className=\"field-label\">\n                {label}\n                {required && <span className=\"required\">*</span>}\n              </legend>\n              {description && <p className=\"field-description\">{description}</p>}\n              {options?.map((option, index) => (\n                <label key={index} className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"checkbox-input\"\n                    checked={formData[fieldId]?.includes(option.value || option) || false}\n                    onChange={(e) => {\n                      const value = option.value || option;\n                      const currentValues = formData[fieldId] || [];\n                      const newValues = e.target.checked\n                        ? [...currentValues, value]\n                        : currentValues.filter(v => v !== value);\n                      handleFormChange(fieldId, newValues);\n                    }}\n                  />\n                  {option.label || option}\n                </label>\n              ))}\n            </fieldset>\n          </div>\n        );\n\n      default:\n        return (\n          <div key={fieldId} className=\"form-field\">\n            <p className=\"unsupported-field\">\n              Unsupported field type: {type}\n            </p>\n          </div>\n        );\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bug-report-form\">\n        <div className=\"form-header\">\n          <h3>Loading Bug Report Templates...</h3>\n          <button \n            className=\"close-btn\"\n            onClick={onClose}\n            aria-label=\"Close bug report form\"\n          >\n            ×\n          </button>\n        </div>\n        <div className=\"loading-spinner\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (submitResult?.urlOpened) {\n    return (\n      <div className=\"bug-report-form\">\n        <div className=\"form-header\">\n          <h3>Issue Form Opened</h3>\n          <button \n            className=\"close-btn\"\n            onClick={onClose}\n            aria-label=\"Close bug report form\"\n          >\n            ×\n          </button>\n        </div>\n        <div className=\"success-message\">\n          <div>\n            <p>✅ Your issue form has been opened in a new tab.</p>\n            <p>Please complete and submit the form in the GitHub tab to create your issue.</p>\n            <p>If the tab didn't open, you can access it here:</p>\n            <a \n              href={submitResult.fallbackUrl} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"issue-link\"\n            >\n              Open Issue Form\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (submitted && submitResult?.success) {\n    return (\n      <div className=\"bug-report-form\">\n        <div className=\"form-header\">\n          <h3>Issue Submitted Successfully!</h3>\n          <button \n            className=\"close-btn\"\n            onClick={onClose}\n            aria-label=\"Close bug report form\"\n          >\n            ×\n          </button>\n        </div>\n        <div className=\"success-message\">\n          {submitResult.manual ? (\n            <div>\n              <p>✅ Your issue has been opened in a new tab.</p>\n              <p>If the tab didn't open, you can access it here:</p>\n              <a \n                href={submitResult.fallbackUrl} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"issue-link\"\n              >\n                Open Issue Form\n              </a>\n            </div>\n          ) : (\n            <div>\n              <p>✅ Issue #{submitResult.issue?.number} has been created successfully!</p>\n              <a \n                href={submitResult.issue?.html_url} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"issue-link\"\n              >\n                View Issue #{submitResult.issue?.number}\n              </a>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bug-report-form\">\n      <div className=\"form-header\">\n        <h3>Report an Issue</h3>\n        <button \n          className=\"close-btn\"\n          onClick={onClose}\n          aria-label=\"Close bug report form\"\n        >\n          ×\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <p>⚠️ {error}</p>\n        </div>\n      )}\n\n      {submitResult?.error && submitResult.error.type === 'popup_blocked' && (\n        <div className=\"error-message\">\n          <p>⚠️ Pop-up blocked. Please allow pop-ups or use the link below:</p>\n          <div>\n            <a \n              href={submitResult.fallbackUrl} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"fallback-link\"\n            >\n              Open GitHub Issue Form\n            </a>\n          </div>\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit} className=\"report-form\">\n        {/* Template Selection */}\n        <div className=\"form-field\">\n          <label htmlFor=\"template-select\" className=\"field-label\">\n            Issue Type <span className=\"required\">*</span>\n          </label>\n          <select\n            id=\"template-select\"\n            className=\"field-input select-input\"\n            value={selectedTemplate?.id || ''}\n            onChange={(e) => {\n              const template = templates.find(t => t.id === e.target.value);\n              handleTemplateChange(template);\n            }}\n            required\n          >\n            <option value=\"\">Select issue type...</option>\n            {templates.map(template => (\n              <option key={template.id} value={template.id}>\n                {template.name} - {template.description}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Console Output Option */}\n        <div className=\"form-field\">\n          <label className=\"checkbox-label console-option\">\n            <input\n              type=\"checkbox\"\n              className=\"checkbox-input\"\n              checked={includeConsole}\n              onChange={(e) => setIncludeConsole(e.target.checked)}\n            />\n            Include JavaScript console output in report\n            <span className=\"checkbox-help\">\n              (Recommended for bug reports - helps developers debug issues)\n            </span>\n          </label>\n        </div>\n\n        {/* Screenshot Option */}\n        <div className=\"form-field\">\n          <label className=\"checkbox-label screenshot-option\">\n            <input\n              type=\"checkbox\"\n              className=\"checkbox-input\"\n              checked={includeScreenshot}\n              onChange={(e) => setIncludeScreenshot(e.target.checked)}\n            />\n            Include screenshot of current page\n            <span className=\"checkbox-help\">\n              (Recommended for bug reports - helps visualize the issue)\n            </span>\n          </label>\n          \n          {includeScreenshot && (\n            <div className=\"screenshot-controls\">\n              {!screenshotBlob ? (\n                <button\n                  type=\"button\"\n                  className=\"screenshot-btn secondary\"\n                  onClick={handleTakeScreenshot}\n                  disabled={takingScreenshot}\n                >\n                  {takingScreenshot ? 'Capturing...' : 'Take Screenshot'}\n                </button>\n              ) : (\n                <div className=\"screenshot-preview\">\n                  <img \n                    src={screenshotPreview} \n                    alt=\"Screenshot preview\" \n                    className=\"screenshot-image\"\n                  />\n                  <div className=\"screenshot-actions\">\n                    <button\n                      type=\"button\"\n                      className=\"screenshot-btn secondary\"\n                      onClick={handleEditScreenshot}\n                    >\n                      Edit\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"screenshot-btn secondary\"\n                      onClick={handleTakeScreenshot}\n                      disabled={takingScreenshot}\n                    >\n                      {takingScreenshot ? 'Capturing...' : 'Retake'}\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"screenshot-btn danger\"\n                      onClick={handleRemoveScreenshot}\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Context Information Preview */}\n        <div className=\"form-field\">\n          <label className=\"context-preview-label\">\n            Contextual Information\n            <button\n              type=\"button\"\n              className=\"context-toggle-btn\"\n              onClick={() => setShowContextPreview(!showContextPreview)}\n            >\n              {showContextPreview ? 'Hide' : 'Show'} Context Details\n            </button>\n          </label>\n          <p className=\"field-description\">\n            This information will be automatically included to help developers understand the context of your report.\n          </p>\n          \n          {showContextPreview && (\n            <div className=\"context-preview\">\n              <div className=\"context-section\">\n                <h4>Page Context</h4>\n                <ul>\n                  <li><strong>Current Page:</strong> {contextData.pageId || 'Unknown'}</li>\n                  <li><strong>URL:</strong> {window.location.href}</li>\n                  <li><strong>Authentication:</strong> {githubService.isAuthenticated ? 'Authenticated' : 'Demo Mode'}</li>\n                </ul>\n              </div>\n              \n              {contextData.repository && (\n                <div className=\"context-section\">\n                  <h4>Repository Context</h4>\n                  <ul>\n                    <li><strong>Repository:</strong> {contextData.repository.name || contextData.repository}</li>\n                    <li><strong>Branch:</strong> {contextData.branch || 'Unknown'}</li>\n                  </ul>\n                </div>\n              )}\n              \n              {contextData.selectedDak && (\n                <div className=\"context-section\">\n                  <h4>DAK Context</h4>\n                  <ul>\n                    <li><strong>DAK Name:</strong> {contextData.selectedDak.name}</li>\n                    {contextData.selectedDak.description && (\n                      <li><strong>Description:</strong> {contextData.selectedDak.description}</li>\n                    )}\n                  </ul>\n                </div>\n              )}\n              \n              {contextData.component && (\n                <div className=\"context-section\">\n                  <h4>Component Context</h4>\n                  <ul>\n                    <li><strong>Component:</strong> {contextData.component}</li>\n                    {contextData.isEditing !== undefined && (\n                      <li><strong>Editing Mode:</strong> {contextData.isEditing ? 'Yes' : 'No'}</li>\n                    )}\n                  </ul>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Template Fields */}\n        {selectedTemplate && (\n          <div className=\"template-fields\">\n            {selectedTemplate.body.map(field => renderFormField(field))}\n          </div>\n        )}\n\n        {/* Form Actions */}\n        <div className=\"form-actions\">\n          <button\n            type=\"submit\"\n            className=\"submit-btn primary\"\n            disabled={submitting || !selectedTemplate}\n          >\n            {submitting ? 'Opening...' : \n             githubService.isAuthenticated ? 'Submit Issue' : 'Open in GitHub'}\n          </button>\n          \n          <button\n            type=\"button\"\n            className=\"cancel-btn secondary\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          \n          {selectedTemplate && !submitResult?.urlOpened && (\n            <a\n              href={generateFallbackUrl()}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"fallback-btn tertiary\"\n            >\n              Open in GitHub\n            </a>\n          )}\n        </div>\n\n        {/* Authentication Status */}\n        <div className=\"auth-status\">\n          {githubService.isAuthenticated ? (\n            <p className=\"auth-info authenticated\">\n              ✅ Authenticated - Issues will be submitted directly to GitHub\n            </p>\n          ) : (\n            <p className=\"auth-info not-authenticated\">\n              ℹ️ Not authenticated - Issue will open in GitHub for manual submission\n            </p>\n          )}\n        </div>\n      </form>\n\n      {/* Screenshot Editor */}\n      <ScreenshotEditor\n        screenshotBlob={originalScreenshotBlob}\n        onSave={handleScreenshotEditorSave}\n        onCancel={handleScreenshotEditorCancel}\n        isOpen={showScreenshotEditor}\n      />\n    </div>\n  );\n};\n\nexport default BugReportForm;","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport tutorialService from '../services/tutorialService';\nimport useThemeImage from '../hooks/useThemeImage';\nimport { ALT_TEXT_KEYS, getAltText } from '../utils/imageAltTextHelper';\nimport './EnhancedTutorialModal.css';\n\nconst EnhancedTutorialModal = ({ tutorialId, onClose, contextData = {} }) => {\n  const { t } = useTranslation();\n  const [tutorial, setTutorial] = useState(null);\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n  const [tutorialState, setTutorialState] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [showChoices, setShowChoices] = useState(false);\n\n  // Theme-aware mascot image\n  const mascotImage = useThemeImage('sgex-mascot.png');\n\n  // Load tutorial and any saved progress\n  useEffect(() => {\n    if (tutorialId) {\n      const tutorialDef = tutorialService.getTutorial(tutorialId);\n      if (tutorialDef) {\n        setTutorial(tutorialDef);\n        \n        // Load any saved progress\n        const savedProgress = tutorialService.loadTutorialProgress(tutorialId, contextData);\n        if (savedProgress && savedProgress.state) {\n          setCurrentStepIndex(savedProgress.state.currentStepIndex || 0);\n          setTutorialState(savedProgress.state.context || {});\n        }\n      }\n      setIsLoading(false);\n    }\n  }, [tutorialId, contextData]);\n\n  // Save progress when step changes\n  useEffect(() => {\n    if (tutorial && currentStepIndex >= 0) {\n      tutorialService.saveTutorialProgress(tutorialId, {\n        currentStepIndex,\n        context: tutorialState\n      }, contextData);\n    }\n  }, [tutorial, tutorialId, currentStepIndex, tutorialState, contextData]);\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleStepNavigation = (direction, userChoice = null) => {\n    if (!tutorial) return;\n\n    let nextIndex = currentStepIndex;\n    \n    if (direction === 'next') {\n      const stepResult = tutorialService.processStep(tutorial, currentStepIndex, userChoice, tutorialState);\n      \n      if (stepResult.isComplete) {\n        // Tutorial complete\n        onClose();\n        return;\n      }\n      \n      if (stepResult.stepIndex !== undefined) {\n        nextIndex = stepResult.stepIndex + 1;\n      } else {\n        nextIndex = currentStepIndex + 1;\n      }\n      \n      // Update tutorial state/context\n      if (stepResult.context) {\n        setTutorialState(stepResult.context);\n      }\n    } else if (direction === 'previous') {\n      nextIndex = Math.max(0, currentStepIndex - 1);\n    } else if (typeof direction === 'number') {\n      nextIndex = direction;\n    }\n\n    setCurrentStepIndex(nextIndex);\n    setShowChoices(false);\n  };\n\n  const handleUserChoice = (choice) => {\n    handleStepNavigation('next', choice);\n  };\n\n  const renderCurrentStep = () => {\n    if (!tutorial || !tutorial.steps || currentStepIndex >= tutorial.steps.length) {\n      return null;\n    }\n\n    const currentStep = tutorial.steps[currentStepIndex];\n    const stepResult = tutorialService.processStep(tutorial, currentStepIndex, null, tutorialState);\n\n    // Check if this step has branching choices\n    const hasBranches = currentStep.branches && currentStep.branches.length > 0;\n\n    return (\n      <div className=\"enhanced-tutorial-step\">\n        <div className=\"tutorial-header\">\n          <h3>{currentStep.title}</h3>\n          <div className=\"step-counter\">\n            <span className=\"current-step\">{currentStepIndex + 1}</span>\n            <span className=\"step-separator\">of</span>\n            <span className=\"total-steps\">{tutorial.steps.length}</span>\n          </div>\n        </div>\n        \n        <div className=\"tutorial-content\">\n          <div \n            className=\"step-content\"\n            dangerouslySetInnerHTML={{ __html: currentStep.content }}\n          />\n          \n          {hasBranches && (\n            <div className=\"tutorial-choices\">\n              <div className=\"choices-container\">\n                {currentStep.branches.map((branch, index) => (\n                  <button\n                    key={index}\n                    className=\"choice-btn\"\n                    onClick={() => handleUserChoice(branch.choice)}\n                    aria-describedby={`choice-desc-${index}`}\n                  >\n                    <span className=\"choice-label\">{branch.label}</span>\n                    {branch.description && (\n                      <span \n                        id={`choice-desc-${index}`}\n                        className=\"choice-description\"\n                      >\n                        {branch.description}\n                      </span>\n                    )}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Navigation Controls */}\n        <div className=\"tutorial-controls\">\n          <button \n            onClick={() => handleStepNavigation('previous')}\n            disabled={currentStepIndex === 0}\n            className=\"nav-btn nav-btn-prev\"\n            aria-label=\"Previous step\"\n          >\n            <span className=\"nav-icon\">←</span>\n            <span className=\"nav-label\">Previous</span>\n          </button>\n          \n          {/* Progress indicators */}\n          <div className=\"step-indicators\">\n            {tutorial.steps.map((_, index) => (\n              <button\n                key={index}\n                className={`step-dot ${index === currentStepIndex ? 'active' : ''} ${index < currentStepIndex ? 'completed' : ''}`}\n                onClick={() => handleStepNavigation(index)}\n                aria-label={`Go to step ${index + 1}: ${tutorial.steps[index].title}`}\n                title={tutorial.steps[index].title}\n              />\n            ))}\n          </div>\n          \n          {!hasBranches && (\n            <button \n              onClick={() => handleStepNavigation('next')}\n              disabled={currentStepIndex >= tutorial.steps.length - 1}\n              className=\"nav-btn nav-btn-next\"\n              aria-label=\"Next step\"\n            >\n              <span className=\"nav-label\">\n                {currentStepIndex >= tutorial.steps.length - 1 ? 'Complete' : 'Next'}\n              </span>\n              <span className=\"nav-icon\">→</span>\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"enhanced-tutorial-overlay\" onClick={handleOverlayClick}>\n        <div className=\"enhanced-tutorial-modal\">\n          <div className=\"tutorial-loading\">\n            <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Helper')} className=\"loading-mascot\" />\n            <p>Loading tutorial...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!tutorial) {\n    return (\n      <div className=\"enhanced-tutorial-overlay\" onClick={handleOverlayClick}>\n        <div className=\"enhanced-tutorial-modal\">\n          <div className=\"tutorial-error\">\n            <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Helper')} className=\"error-mascot\" />\n            <h3>Tutorial Not Found</h3>\n            <p>The requested tutorial could not be found.</p>\n            <button onClick={onClose} className=\"error-close-btn\">Close</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"enhanced-tutorial-overlay\" onClick={handleOverlayClick}>\n      <div className=\"enhanced-tutorial-modal\">\n        <div className=\"tutorial-modal-header\">\n          <div className=\"tutorial-title-section\">\n            {tutorial.badge && (\n              <img \n                src={tutorial.badge} \n                alt=\"\" \n                className=\"tutorial-badge\"\n                role=\"presentation\"\n              />\n            )}\n            <div className=\"tutorial-title-info\">\n              <h2>{tutorial.title}</h2>\n              {tutorial.description && (\n                <p className=\"tutorial-description\">{tutorial.description}</p>\n              )}\n            </div>\n          </div>\n          \n          <button \n            className=\"tutorial-close-btn\"\n            onClick={onClose}\n            aria-label=\"Close tutorial\"\n          >\n            ×\n          </button>\n        </div>\n        \n        <div className=\"tutorial-modal-content\">\n          {renderCurrentStep()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedTutorialModal;","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useThemeImage from '../hooks/useThemeImage';\nimport BugReportForm from './BugReportForm';\nimport EnhancedTutorialModal from './EnhancedTutorialModal';\nimport tutorialService from '../services/tutorialService';\nimport { ALT_TEXT_KEYS, getAltText } from '../utils/imageAltTextHelper';\nimport repositoryConfig from '../config/repositoryConfig';\n\n\nconst HelpModal = ({ topic, helpTopic, contextData, onClose, tutorialId }) => {\n  const { t } = useTranslation();\n  const [showMenu, setShowMenu] = useState(false);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [showBugReportForm, setShowBugReportForm] = useState(false);\n  const [showEnhancedTutorial, setShowEnhancedTutorial] = useState(false);\n  const [currentTutorialId, setCurrentTutorialId] = useState(tutorialId);\n\n  // Check if we should show enhanced tutorial modal\n  useEffect(() => {\n    if (tutorialId) {\n      const tutorial = tutorialService.getTutorial(tutorialId);\n      if (tutorial) {\n        setCurrentTutorialId(tutorialId);\n        setShowEnhancedTutorial(true);\n        return;\n      }\n    }\n    \n    // Try to convert legacy help topic to enhanced tutorial\n    if (helpTopic && helpTopic.type === 'slideshow' && helpTopic.id) {\n      const convertedTutorial = tutorialService.convertHelpTopicToTutorial(helpTopic);\n      if (convertedTutorial) {\n        // Register as temporary tutorial\n        tutorialService.registerTutorial(`legacy-${helpTopic.id}`, convertedTutorial);\n        setCurrentTutorialId(`legacy-${helpTopic.id}`);\n        setShowEnhancedTutorial(true);\n        return;\n      }\n    }\n  }, [tutorialId, helpTopic]);\n\n  // Theme-aware mascot image\n  const mascotImage = useThemeImage('sgex-mascot.png');\n\n  // Set up global reference for inline onclick handlers\n  useEffect(() => {\n    const createContextualUrl = (baseUrl, params) => {\n      const urlParams = new URLSearchParams(params);\n      \n      // Add contextual information\n      if (contextData.pageId) {\n        urlParams.set('sgex_page', contextData.pageId);\n      }\n      \n      const currentUrl = window.location.href;\n      urlParams.set('sgex_current_url', currentUrl);\n      \n      if (contextData.selectedDak?.name) {\n        urlParams.set('sgex_selected_dak', contextData.selectedDak.name);\n      }\n      \n      return `${baseUrl}?${urlParams.toString()}`;\n    };\n\n    window.helpModalInstance = {\n      openSgexIssue: (issueType) => {\n        // For bug reports, show the new integrated form\n        if (issueType === 'bug') {\n          setShowBugReportForm(true);\n          return;\n        }\n        \n        // For other issue types, continue with existing behavior\n        const baseUrl = `${repositoryConfig.getGitHubUrl()}/issues/new`;\n        let params = {};\n\n        switch (issueType) {\n          case 'feature':\n            params.template = 'feature_request.yml';\n            params.labels = 'enhancement';\n            break;\n          case 'question':\n            params.template = 'question.yml';\n            params.labels = 'question';\n            break;\n          case 'documentation':\n            params.template = 'documentation.yml';\n            params.labels = 'documentation';\n            break;\n          case 'blank':\n            // No template specified - this will allow users to create a blank issue\n            params.labels = 'blank-issue';\n            break;\n          default:\n            params.labels = 'needs-triage';\n        }\n\n        const url = createContextualUrl(baseUrl, params);\n        \n        // Try to open the GitHub issue, but handle cases where external links are blocked\n        try {\n          const newWindow = window.open(url, '_blank');\n          \n          // Check if the window was blocked or failed to open\n          if (!newWindow || newWindow.closed) {\n            // Fallback: show instructions to manually open the link\n            window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, issueType);\n          } else {\n            // Check if the window actually loaded after a brief delay\n            setTimeout(() => {\n              try {\n                if (newWindow.closed || !newWindow.location || newWindow.location.href === 'about:blank') {\n                  newWindow.close();\n                  window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, issueType);\n                }\n              } catch (e) {\n                // Cross-origin restriction means it probably loaded successfully\n                // or the check failed due to security - either way, don't show fallback\n              }\n            }, 1000);\n          }\n        } catch (error) {\n          console.warn('Failed to open GitHub issue:', error);\n          window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, issueType);\n        }\n      },\n\n      openDakIssue: (issueType) => {\n        const repository = contextData.repository || contextData.selectedDak;\n        if (!repository) {\n          console.warn('No DAK repository specified for feedback');\n          return;\n        }\n\n        const baseUrl = `https://github.com/${repository.owner}/${repository.name}/issues/new`;\n        let params = {};\n\n        switch (issueType) {\n          case 'bug':\n            params.template = 'dak_bug_report.yml';\n            params.labels = 'bug,dak-issue';\n            break;\n          case 'improvement':\n            params.template = 'dak_feature_request.yml';\n            params.labels = 'enhancement,dak-improvement';\n            break;\n          case 'content':\n            params.template = 'dak_content_error.yml';\n            params.labels = 'content-issue,clinical-content';\n            break;\n          case 'question':\n            params.template = 'dak_question.yml';\n            params.labels = 'question,dak-question';\n            break;\n          case 'blank':\n            // No template specified - this will allow users to create a blank issue\n            params.labels = 'blank-issue,dak-feedback';\n            break;\n          default:\n            params.labels = 'dak-feedback';\n        }\n\n        // Add DAK-specific context\n        if (repository.name) {\n          params.sgex_dak_repository = `${repository.owner}/${repository.name}`;\n        }\n\n        const url = createContextualUrl(baseUrl, params);\n        \n        // Try to open the GitHub issue, but handle cases where external links are blocked\n        try {\n          const newWindow = window.open(url, '_blank');\n          \n          // Check if the window was blocked or failed to open\n          if (!newWindow || newWindow.closed) {\n            // Fallback: show instructions to manually open the link\n            window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, `dak-${issueType}`);\n          } else {\n            // Check if the window actually loaded after a brief delay\n            setTimeout(() => {\n              try {\n                if (newWindow.closed || !newWindow.location || newWindow.location.href === 'about:blank') {\n                  newWindow.close();\n                  window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, `dak-${issueType}`);\n                }\n              } catch (e) {\n                // Cross-origin restriction means it probably loaded successfully\n                // or the check failed due to security - either way, don't show fallback\n              }\n            }, 1000);\n          }\n        } catch (error) {\n          console.warn('Failed to open DAK issue:', error);\n          window.helpModalInstance?.showFallbackInstructions?.('github-blocked', url, `dak-${issueType}`);\n        }\n      },\n\n      // Function to show fallback instructions when GitHub access is blocked\n      showFallbackInstructions: (reason, url, issueType) => {\n        const instructions = {\n          'github-blocked': {\n            title: 'GitHub Access Required',\n            message: `\n              <div class=\"help-fallback-notice\">\n                <h4>🔗 GitHub Link Blocked</h4>\n                <p>It looks like GitHub access is restricted in your current environment.</p>\n                <h5>To report this issue:</h5>\n                <ol>\n                  <li>Copy the link below</li>\n                  <li>Open it in a browser with GitHub access</li>\n                  <li>Fill out the issue template</li>\n                </ol>\n                <div class=\"fallback-url\">\n                  <strong>Link to copy:</strong><br>\n                  <textarea readonly onclick=\"this.select()\" style=\"width: 100%; height: 60px; margin: 5px 0; padding: 5px; font-family: monospace; font-size: 12px;\">${url}</textarea>\n                </div>\n                <p><em>💡 Tip: You can also email us at <a href=\"mailto:smart@who.int\">smart@who.int</a> with your issue details.</em></p>\n              </div>\n            `\n          }\n        };\n\n        const fallback = instructions[reason] || {\n          title: 'External Link Issue',\n          message: `<p>Unable to open external link. Please copy and visit: <br><code>${url}</code></p>`\n        };\n\n        // Create a temporary modal-like alert for fallback instructions\n        const existingFallback = document.querySelector('.help-fallback-overlay');\n        if (existingFallback) {\n          existingFallback.remove();\n        }\n\n        const fallbackOverlay = document.createElement('div');\n        fallbackOverlay.className = 'help-fallback-overlay';\n        fallbackOverlay.style.cssText = `\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.7);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 10000;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        `;\n\n        const fallbackModal = document.createElement('div');\n        fallbackModal.style.cssText = `\n          background: var(--who-card-bg, white);\n          border-radius: 8px;\n          padding: 20px;\n          max-width: 500px;\n          max-height: 80vh;\n          overflow-y: auto;\n          position: relative;\n          box-shadow: 0 10px 25px rgba(0,0,0,0.3);\n        `;\n\n        fallbackModal.innerHTML = `\n          <button onclick=\"this.closest('.help-fallback-overlay').remove()\" style=\"\n            position: absolute;\n            top: 10px;\n            right: 15px;\n            background: none;\n            border: none;\n            font-size: 24px;\n            cursor: pointer;\n            color: var(--who-text-secondary, #666);\n          \">×</button>\n          <h3 style=\"margin-top: 0; color: var(--who-text-primary, #333);\">${fallback.title}</h3>\n          <div style=\"color: var(--who-text-primary, #555); line-height: 1.5;\">${fallback.message}</div>\n        `;\n\n        fallbackOverlay.appendChild(fallbackModal);\n        document.body.appendChild(fallbackOverlay);\n\n        // Click outside to close\n        fallbackOverlay.addEventListener('click', (e) => {\n          if (e.target === fallbackOverlay) {\n            fallbackOverlay.remove();\n          }\n        });\n\n        // Auto-remove after 30 seconds\n        setTimeout(() => {\n          if (document.body.contains(fallbackOverlay)) {\n            fallbackOverlay.remove();\n          }\n        }, 30000);\n      }\n    };\n\n    return () => {\n      // Cleanup\n      delete window.helpModalInstance;\n    };\n  }, [contextData]);\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleMenuToggle = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const handleBugReport = () => {\n    // Show the new integrated bug report form\n    setShowBugReportForm(true);\n  };\n\n  const handleDAKFeedback = () => {\n    if (contextData.repository) {\n      // Default to opening content error as the primary DAK feedback type\n      if (window.helpModalInstance?.openDakIssue) {\n        window.helpModalInstance.openDakIssue('content');\n      }\n    }\n  };\n\n  const handleEmailSupport = () => {\n    const topicTitle = helpTopic?.title || topic;\n    const subject = encodeURIComponent(`SGEX Workbench Support: ${topicTitle}`);\n    const body = encodeURIComponent(`\nHello SMART Guidelines Team,\n\nI need assistance with the SGEX Workbench.\n\nTopic: ${topicTitle}\nPage: ${window.location.pathname}\n\nPlease describe your question or issue:\n\n\nBest regards,\n    `.trim());\n    \n    window.open(`mailto:smart@who.int?subject=${subject}&body=${body}`);\n  };\n\n  const handleDocumentation = () => {\n    // Use the standard /docs path that matches the route configuration\n    // The docs component is configured as a DAK component at /docs\n    window.open('/docs/overview', '_blank');\n  };\n\n  const handlePrevSlide = () => {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  const handleNextSlide = () => {\n    if (helpTopic?.content && currentSlide < helpTopic.content.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  const renderSlideshow = () => {\n    if (!helpTopic?.content || helpTopic.type !== 'slideshow') {\n      return null;\n    }\n\n    const slides = helpTopic.content;\n    const currentSlideData = slides[currentSlide];\n\n    // Handle DAK feedback buttons by replacing onclick handlers\n    let processedContent = currentSlideData.content;\n    if (helpTopic.id === 'provide-dak-feedback') {\n      processedContent = processedContent.replace(\n        /onclick=\"this\\.openDakIssue\\('([^']+)'\\)\"/g,\n        `onclick=\"window.helpModalInstance?.openDakIssue('$1')\"`\n      );\n    }\n\n    return (\n      <div className=\"help-slideshow\">\n        <div className=\"slideshow-header\">\n          <h3>{currentSlideData.title}</h3>\n          <div className=\"slide-counter\">\n            {currentSlide + 1} of {slides.length}\n          </div>\n        </div>\n        \n        <div \n          className=\"slideshow-content\"\n          dangerouslySetInnerHTML={{ __html: processedContent }}\n        />\n        \n        <div className=\"slideshow-controls\">\n          <button \n            onClick={handlePrevSlide}\n            disabled={currentSlide === 0}\n            className=\"slide-nav-btn\"\n          >\n            ← Previous\n          </button>\n          \n          <div className=\"slide-dots\">\n            {slides.map((_, index) => (\n              <button\n                key={index}\n                className={`slide-dot ${index === currentSlide ? 'active' : ''}`}\n                onClick={() => setCurrentSlide(index)}\n                aria-label={`Go to slide ${index + 1}`}\n              />\n            ))}\n          </div>\n          \n          <button \n            onClick={handleNextSlide}\n            disabled={currentSlide === slides.length - 1}\n            className=\"slide-nav-btn\"\n          >\n            Next →\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const getHelpContent = () => {\n    // If we have a specific help topic, use it\n    if (helpTopic) {\n      return {\n        title: helpTopic.title,\n        content: helpTopic.type === 'slideshow' ? renderSlideshow() : (\n          <div className=\"help-content\">\n            <div className=\"mascot-message\">\n              <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Helper')} className=\"help-mascot\" />\n              <div className=\"message-bubble\">\n                <div dangerouslySetInnerHTML={{ __html: helpTopic.content }} />\n              </div>\n            </div>\n          </div>\n        )\n      };\n    }\n\n    // Legacy support for old topic strings\n    switch (topic) {\n      case 'github-token':\n      case 'pat-help':\n        return {\n          title: 'GitHub Authentication Help',\n          content: (\n            <div className=\"help-content\">\n              <div className=\"mascot-message\">\n                <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Helper')} className=\"help-mascot\" />\n                <div className=\"message-bubble\">\n                  <p>SGEX Workbench uses GitHub Personal Access Tokens for secure authentication!</p>\n                  <p><strong>How it works:</strong></p>\n                  <ul>\n                    <li>Create a Personal Access Token in your GitHub settings</li>\n                    <li>Enter the token in the login form</li>\n                    <li>SGEX will securely connect to your GitHub repositories</li>\n                    <li>No backend server required - works entirely in your browser!</li>\n                  </ul>\n                  <p>This approach ensures compliance with our no-backend requirement while keeping your data secure.</p>\n                  <p>If you're having trouble, please use the menu above to get additional support.</p>\n                </div>\n              </div>\n            </div>\n          )\n        };\n      default:\n        return {\n          title: 'SGEX Workbench Help',\n          content: (\n            <div className=\"help-content\">\n              <div className=\"mascot-message\">\n                <img src={mascotImage} alt={getAltText(t, ALT_TEXT_KEYS.MASCOT_HELPER, 'SGEX Helper')} className=\"help-mascot\" />\n                <div className=\"message-bubble\">\n                  <p>Hi! I'm here to help you with the SGEX Workbench.</p>\n                  <p>Use the menu in the top right to get additional support options.</p>\n                </div>\n              </div>\n            </div>\n          )\n        };\n    }\n  };\n\n  const { title, content } = getHelpContent();\n\n  // Show enhanced tutorial modal if applicable\n  if (showEnhancedTutorial && currentTutorialId) {\n    return (\n      <EnhancedTutorialModal\n        tutorialId={currentTutorialId}\n        onClose={() => {\n          setShowEnhancedTutorial(false);\n          setCurrentTutorialId(null);\n          onClose();\n        }}\n        contextData={contextData}\n      />\n    );\n  }\n\n  // Show bug report form if requested\n  if (showBugReportForm) {\n    return (\n      <div className=\"help-modal-overlay bug-report-overlay\" onClick={handleOverlayClick}>\n        <BugReportForm \n          onClose={() => {\n            setShowBugReportForm(false);\n            // Close the main modal after successful submission or cancel\n            onClose();\n          }}\n          contextData={contextData}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"help-modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"help-modal\">\n        <div className=\"help-modal-header\">\n          <h2>{title}</h2>\n          <div className=\"help-modal-actions\">\n            <button \n              className=\"hamburger-menu-btn\"\n              onClick={handleMenuToggle}\n              aria-label=\"More options\"\n            >\n              <span></span>\n              <span></span>\n              <span></span>\n            </button>\n            <button \n              className=\"close-btn\"\n              onClick={onClose}\n              aria-label=\"Close help\"\n            >\n              ×\n            </button>\n          </div>\n          \n          {showMenu && (\n            <div className=\"help-menu-dropdown\">\n              <button onClick={handleDocumentation} className=\"menu-item\">\n                <span className=\"menu-icon\">📖</span>\n                Documentation\n              </button>\n              \n              <button onClick={handleBugReport} className=\"menu-item\">\n                <img src=\"/sgex/bug-report-icon.svg\" alt={getAltText(t, ALT_TEXT_KEYS.ICON_BUG_REPORT, 'Bug Report')} className=\"menu-icon\" />\n                File Bug Report\n              </button>\n              \n              {contextData.repository && (\n                <button onClick={handleDAKFeedback} className=\"menu-item\">\n                  <span className=\"menu-icon\">📝</span>\n                  Provide DAK Feedback\n                </button>\n              )}\n              \n              <button onClick={handleEmailSupport} className=\"menu-item\">\n                <span className=\"menu-icon\">📧</span>\n                Email Support\n              </button>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"help-modal-content\">\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelpModal;","/**\n * Service for managing DAK branch context in session storage\n * Stores selected branch per repository to maintain context during DAK editing\n */\n\nclass BranchContextService {\n  constructor() {\n    this.storageKey = 'sgex_branch_context';\n  }\n\n  // Get the storage key for a specific repository\n  getRepositoryKey(repository) {\n    if (!repository || !repository.name) return null;\n    const owner = repository.owner?.login || repository.full_name?.split('/')[0];\n    if (!owner) return null;\n    return `${owner}/${repository.name}`;\n  }\n\n  // Get the selected branch for a repository\n  getSelectedBranch(repository) {\n    if (!repository) return null;\n    \n    try {\n      const branchContext = this.getBranchContext();\n      const repoKey = this.getRepositoryKey(repository);\n      return branchContext[repoKey] || null;\n    } catch (error) {\n      console.warn('Failed to get branch context:', error);\n      return null;\n    }\n  }\n\n  // Set the selected branch for a repository\n  setSelectedBranch(repository, branch) {\n    if (!repository || !branch) return;\n\n    try {\n      const branchContext = this.getBranchContext();\n      const repoKey = this.getRepositoryKey(repository);\n      branchContext[repoKey] = branch;\n      this.setBranchContext(branchContext);\n    } catch (error) {\n      console.warn('Failed to set branch context:', error);\n    }\n  }\n\n  // Clear branch context for a specific repository\n  clearRepositoryBranch(repository) {\n    if (!repository) return;\n\n    try {\n      const branchContext = this.getBranchContext();\n      const repoKey = this.getRepositoryKey(repository);\n      delete branchContext[repoKey];\n      this.setBranchContext(branchContext);\n    } catch (error) {\n      console.warn('Failed to clear repository branch context:', error);\n    }\n  }\n\n  // Clear all branch context (e.g., on logout)\n  clearAllBranchContext() {\n    try {\n      sessionStorage.removeItem(this.storageKey);\n    } catch (error) {\n      console.warn('Failed to clear branch context:', error);\n    }\n  }\n\n  // Get all branch context from storage\n  getBranchContext() {\n    try {\n      const stored = sessionStorage.getItem(this.storageKey);\n      return stored ? JSON.parse(stored) : {};\n    } catch (error) {\n      console.warn('Failed to parse branch context from storage:', error);\n      return {};\n    }\n  }\n\n  // Set branch context to storage\n  setBranchContext(context) {\n    try {\n      sessionStorage.setItem(this.storageKey, JSON.stringify(context));\n    } catch (error) {\n      console.warn('Failed to save branch context to storage:', error);\n    }\n  }\n\n  // Get default branch name (prefer 'main' over 'master')\n  getDefaultBranchName(repository, availableBranches = []) {\n    if (!repository) return 'main';\n\n    // First try 'main'\n    if (availableBranches.some(b => b.name === 'main')) {\n      return 'main';\n    }\n\n    // Then try the repository's default branch\n    if (repository.default_branch && \n        availableBranches.some(b => b.name === repository.default_branch)) {\n      return repository.default_branch;\n    }\n\n    // Finally fall back to the first available branch or 'main'\n    return availableBranches.length > 0 ? availableBranches[0].name : 'main';\n  }\n\n  // Check if a branch context exists for a repository\n  hasBranchContext(repository) {\n    return this.getSelectedBranch(repository) !== null;\n  }\n\n  // Get a formatted display string for the current branch context\n  getBranchDisplayInfo(repository) {\n    const selectedBranch = this.getSelectedBranch(repository);\n    if (!selectedBranch) return null;\n\n    const isDefault = selectedBranch === (repository?.default_branch || 'main');\n    return {\n      branch: selectedBranch,\n      isDefault,\n      displayText: isDefault ? `${selectedBranch} (default)` : selectedBranch\n    };\n  }\n}\n\n// Create a singleton instance\nconst branchContextService = new BranchContextService();\n\nexport default branchContextService;","import githubService from './githubService';\nimport { lazyLoadYaml } from '../services/libraryLoaderService';\n\n/**\n * Service for validating WHO SMART Guidelines Digital Adaptation Kit repositories\n * \n * A repository is considered a valid DAK if:\n * 1. It has a sushi-config.yaml file in the root\n * 2. The sushi-config.yaml contains a 'dependencies' section\n * 3. The dependencies section contains the key 'smart.who.int.base'\n */\nclass DAKValidationService {\n  /**\n   * Validates if a repository is a WHO SMART Guidelines Digital Adaptation Kit\n   * @param {string} owner - Repository owner (username or organization)\n   * @param {string} repo - Repository name\n   * @param {string} branch - Branch to check (defaults to 'main')\n   * @returns {Promise<boolean>} - True if repository is a valid DAK\n   */\n  async validateDAKRepository(owner, repo, branch = 'main') {\n    try {\n      // First, check if this is an existing GitHub repository\n      const repositoryExists = await this.checkRepositoryExists(owner, repo);\n      \n      // Try to fetch the sushi-config.yaml file from the repository root\n      const sushiConfigContent = await this.fetchSushiConfig(owner, repo, branch);\n      \n      if (!sushiConfigContent) {\n        // If no sushi-config.yaml but repository exists, still allow it\n        // This handles cases like litlfred/smart-ips-pilgrimage that exist but may not have full DAK structure\n        if (repositoryExists) {\n          console.log(`Repository ${owner}/${repo} exists on GitHub - allowing access even without sushi-config.yaml`);\n          return true;\n        }\n        console.log(`No sushi-config.yaml found in ${owner}/${repo} and repository doesn't exist`);\n        return false;\n      }\n\n      // Parse the YAML content\n      // Lazy load js-yaml to improve initial page responsiveness\n      const yaml = await lazyLoadYaml();\n      const config = yaml.load(sushiConfigContent);\n      \n      if (!config || typeof config !== 'object') {\n        // If YAML is invalid but repository exists, still allow it\n        if (repositoryExists) {\n          console.log(`Invalid YAML format in sushi-config.yaml for ${owner}/${repo} but repository exists - allowing access`);\n          return true;\n        }\n        console.log(`Invalid YAML format in sushi-config.yaml for ${owner}/${repo}`);\n        return false;\n      }\n\n      // Check if dependencies section exists\n      if (!config.dependencies || typeof config.dependencies !== 'object') {\n        // If no dependencies but repository exists, still allow it\n        if (repositoryExists) {\n          console.log(`No dependencies section found in sushi-config.yaml for ${owner}/${repo} but repository exists - allowing access`);\n          return true;\n        }\n        console.log(`No dependencies section found in sushi-config.yaml for ${owner}/${repo}`);\n        return false;\n      }\n\n      // Check if smart.who.int.base dependency exists\n      const hasSmartBase = 'smart.who.int.base' in config.dependencies;\n      \n      if (hasSmartBase) {\n        console.log(`Valid DAK repository found: ${owner}/${repo} (has smart.who.int.base dependency)`);\n        return true;\n      } else {\n        // If no smart.who.int.base dependency but repository exists, still allow it\n        if (repositoryExists) {\n          console.log(`Repository ${owner}/${repo} has sushi-config.yaml but missing smart.who.int.base dependency - allowing access since repository exists`);\n          return true;\n        }\n        console.log(`Repository ${owner}/${repo} has sushi-config.yaml but missing smart.who.int.base dependency`);\n        return false;\n      }\n\n    } catch (error) {\n      console.log(`Error validating DAK repository ${owner}/${repo}:`, error.message);\n      return false;\n    }\n  }\n\n  /**\n   * Checks if a repository exists on GitHub\n   * @param {string} owner - Repository owner\n   * @param {string} repo - Repository name\n   * @returns {Promise<boolean>} - True if repository exists\n   */\n  async checkRepositoryExists(owner, repo) {\n    try {\n      // Use the same approach as githubService - get the octokit instance\n      const octokit = githubService.isAuth() ? githubService.octokit : null;\n      \n      if (!octokit) {\n        // In unauthenticated mode, we can't reliably check repository existence\n        console.log(`Cannot check repository existence for ${owner}/${repo} - not authenticated`);\n        return false;\n      }\n\n      await octokit.rest.repos.get({\n        owner,\n        repo\n      });\n      \n      console.log(`Repository ${owner}/${repo} exists on GitHub`);\n      return true;\n    } catch (error) {\n      if (error.status === 404) {\n        console.log(`Repository ${owner}/${repo} does not exist on GitHub`);\n        return false;\n      }\n      // For other errors (like rate limiting, network issues, firewall blocks), \n      // we can't determine if the repository exists, so we'll be permissive\n      console.log(`Error checking repository existence for ${owner}/${repo}:`, error.message, '- assuming it might exist');\n      return true; // Changed from false to true for non-404 errors\n    }\n  }\n\n  /**\n   * Fetches the sushi-config.yaml file content from a repository\n   * @param {string} owner - Repository owner\n   * @param {string} repo - Repository name  \n   * @param {string} branch - Branch to check\n   * @returns {Promise<string|null>} - YAML content or null if not found\n   */\n  async fetchSushiConfig(owner, repo, branch = 'main') {\n    try {\n      // Use the same approach as githubService - get the octokit instance\n      const octokit = githubService.isAuth() ? githubService.octokit : null;\n      \n      if (!octokit) {\n        // In unauthenticated mode, we can't fetch file contents reliably\n        console.log(`Cannot fetch sushi-config.yaml for ${owner}/${repo} - not authenticated`);\n        return null;\n      }\n\n      // Try main branch first if no branch specified\n      const branchesToTry = branch === 'main' ? ['main', 'master'] : [branch];\n      \n      for (const branchName of branchesToTry) {\n        try {\n          const { data } = await octokit.rest.repos.getContent({\n            owner,\n            repo,\n            path: 'sushi-config.yaml',\n            ref: branchName\n          });\n          \n          if (data.type === 'file' && data.content) {\n            // Decode base64 content\n            const content = decodeURIComponent(escape(atob(data.content)));\n            console.log(`Found sushi-config.yaml in ${owner}/${repo} on branch ${branchName}`);\n            return content;\n          }\n        } catch (branchError) {\n          console.log(`sushi-config.yaml not found on branch ${branchName} for ${owner}/${repo}:`, branchError.status === 404 ? 'File not found' : branchError.message);\n          continue;\n        }\n      }\n      \n      return null;\n    } catch (error) {\n      console.log(`Error fetching sushi-config.yaml for ${owner}/${repo}:`, error.message);\n      return null;\n    }\n  }\n\n  /**\n   * Validates DAK repository in demo mode based on basic format\n   * A repository is valid if it has proper org/repo format. In demo mode,\n   * we cannot reliably fetch sushi-config.yaml due to authentication limitations,\n   * so we allow any repository that follows the basic org/repo pattern.\n   * @param {string} owner - Repository owner\n   * @param {string} repo - Repository name\n   * @returns {boolean} - True if repository has valid org/repo format\n   */\n  validateDemoDAKRepository(owner, repo) {\n    // Validate basic format: must look like org/repo\n    if (!owner || !repo || owner.includes('/') || repo.includes('/')) {\n      console.log(`Demo mode: Invalid repository format ${owner}/${repo}`);\n      return false;\n    }\n\n    // Basic validation for reasonable org and repo names\n    // Allow alphanumeric characters, hyphens, underscores, and dots\n    const validNamePattern = /^[a-zA-Z0-9._-]+$/;\n    \n    if (!validNamePattern.test(owner) || !validNamePattern.test(repo)) {\n      console.log(`Demo mode: Invalid characters in repository name ${owner}/${repo}`);\n      return false;\n    }\n\n    const fullName = `${owner}/${repo}`;\n    console.log(`Demo mode: ${fullName} accepted as valid DAK repository (proper org/repo format)`);\n    return true;\n  }\n}\n\nconst dakValidationService = new DAKValidationService();\n\nexport default dakValidationService;","/**\n * Profile Subscription Service - Manages profile subscriptions in localStorage\n * \n * Provides functionality to manage profile subscriptions:\n * - Always includes WorldHealthOrganization\n * - Includes logged-in user when authenticated\n * - Auto-adds users when browsing their profiles\n * - Allows removal of profiles (except WHO and current user)\n */\nclass ProfileSubscriptionService {\n  constructor() {\n    this.storageKey = 'sgex-profile-subscriptions';\n    this.whoProfile = 'WorldHealthOrganization';\n  }\n\n  /**\n   * Get profile subscriptions from localStorage\n   * @returns {Array} Array of profile objects\n   */\n  getSubscriptions() {\n    try {\n      const stored = localStorage.getItem(this.storageKey);\n      const subscriptions = stored ? JSON.parse(stored) : [];\n      \n      // Always ensure WHO is included\n      if (!subscriptions.find(profile => profile.login === this.whoProfile)) {\n        subscriptions.unshift({\n          login: this.whoProfile,\n          name: 'World Health Organization',\n          avatar_url: `https://github.com/${this.whoProfile}.png`,\n          type: 'Organization',\n          isPermanent: true,\n          addedAt: new Date().toISOString()\n        });\n        this.saveSubscriptions(subscriptions);\n      }\n      \n      return subscriptions;\n    } catch (error) {\n      console.warn('Error reading profile subscriptions from localStorage:', error);\n      // Return minimal default with WHO\n      return [{\n        login: this.whoProfile,\n        name: 'World Health Organization',\n        avatar_url: `https://github.com/${this.whoProfile}.png`,\n        type: 'Organization',\n        isPermanent: true,\n        addedAt: new Date().toISOString()\n      }];\n    }\n  }\n\n  /**\n   * Save profile subscriptions to localStorage\n   * @param {Array} subscriptions - Array of profile objects\n   */\n  saveSubscriptions(subscriptions) {\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(subscriptions));\n    } catch (error) {\n      console.error('Error saving profile subscriptions to localStorage:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Add a profile to subscriptions\n   * @param {Object} profile - Profile object with login, name, avatar_url, type\n   * @param {boolean} isPermanent - Whether the profile cannot be removed\n   * @returns {Object} The added profile\n   */\n  addSubscription(profile, isPermanent = false) {\n    if (!profile || !profile.login) {\n      throw new Error('Profile must have a login property');\n    }\n\n    const subscriptions = this.getSubscriptions();\n    \n    // Check if already subscribed\n    const existingIndex = subscriptions.findIndex(p => p.login === profile.login);\n    if (existingIndex !== -1) {\n      // Update existing subscription\n      subscriptions[existingIndex] = {\n        ...subscriptions[existingIndex],\n        ...profile,\n        isPermanent: subscriptions[existingIndex].isPermanent || isPermanent,\n        lastUpdated: new Date().toISOString()\n      };\n      this.saveSubscriptions(subscriptions);\n      return subscriptions[existingIndex];\n    }\n\n    // Add new subscription\n    const newSubscription = {\n      login: profile.login,\n      name: profile.name || profile.login,\n      avatar_url: profile.avatar_url || `https://github.com/${profile.login}.png`,\n      type: profile.type || 'User',\n      isPermanent,\n      addedAt: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n\n    subscriptions.push(newSubscription);\n    this.saveSubscriptions(subscriptions);\n    return newSubscription;\n  }\n\n  /**\n   * Remove a profile from subscriptions\n   * @param {string} login - Login/username to remove\n   * @returns {boolean} Success status\n   */\n  removeSubscription(login) {\n    if (!login) {\n      return false;\n    }\n\n    try {\n      const subscriptions = this.getSubscriptions();\n      const profileIndex = subscriptions.findIndex(p => p.login === login);\n      \n      if (profileIndex === -1) {\n        return false; // Profile not found\n      }\n\n      const profile = subscriptions[profileIndex];\n      \n      // Cannot remove permanent profiles (WHO, current user)\n      if (profile.isPermanent) {\n        console.warn(`Cannot remove permanent profile: ${login}`);\n        return false;\n      }\n\n      subscriptions.splice(profileIndex, 1);\n      this.saveSubscriptions(subscriptions);\n      return true;\n    } catch (error) {\n      console.error('Error removing profile subscription:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if a profile is subscribed\n   * @param {string} login - Login/username to check\n   * @returns {boolean} Whether the profile is subscribed\n   */\n  isSubscribed(login) {\n    if (!login) return false;\n    const subscriptions = this.getSubscriptions();\n    return subscriptions.some(p => p.login === login);\n  }\n\n  /**\n   * Get a specific subscription by login\n   * @param {string} login - Login/username to find\n   * @returns {Object|null} Profile object or null if not found\n   */\n  getSubscription(login) {\n    if (!login) return null;\n    const subscriptions = this.getSubscriptions();\n    return subscriptions.find(p => p.login === login) || null;\n  }\n\n  /**\n   * Auto-add current user to subscriptions (when logged in)\n   * @param {Object} userProfile - Current user's profile\n   */\n  ensureCurrentUserSubscribed(userProfile) {\n    if (!userProfile || !userProfile.login) {\n      return;\n    }\n\n    const existing = this.getSubscription(userProfile.login);\n    if (!existing) {\n      this.addSubscription({\n        ...userProfile,\n        isPermanent: true // Current user cannot be removed\n      }, true);\n    } else if (!existing.isPermanent) {\n      // Update existing to be permanent\n      this.addSubscription({\n        ...existing,\n        ...userProfile,\n        isPermanent: true\n      }, true);\n    }\n  }\n\n  /**\n   * Auto-add a visited user profile (from browsing)\n   * @param {Object} visitedProfile - Profile that user is browsing\n   */\n  autoAddVisitedProfile(visitedProfile) {\n    if (!visitedProfile || !visitedProfile.login) {\n      return;\n    }\n\n    // Don't auto-add if already subscribed\n    if (this.isSubscribed(visitedProfile.login)) {\n      return;\n    }\n\n    // Don't auto-add demo profiles\n    if (visitedProfile.isDemo) {\n      return;\n    }\n\n    this.addSubscription(visitedProfile, false);\n  }\n\n  /**\n   * Get subscriptions sorted alphabetically by name\n   * @returns {Array} Sorted array of profile objects\n   */\n  getSubscriptionsSorted() {\n    const subscriptions = this.getSubscriptions();\n    return subscriptions.sort((a, b) => {\n      // WHO always first\n      if (a.login === this.whoProfile) return -1;\n      if (b.login === this.whoProfile) return 1;\n      \n      // Then sort by name/login\n      const nameA = a.name || a.login;\n      const nameB = b.name || b.login;\n      return nameA.localeCompare(nameB);\n    });\n  }\n\n  /**\n   * Get subscriptions for profile selection (formatted for UI)\n   * @returns {Array} Array of profile objects formatted for selection UI\n   */\n  getSubscriptionsForSelection() {\n    return this.getSubscriptionsSorted().map(profile => ({\n      ...profile,\n      displayName: profile.name || profile.login,\n      isRemovable: !profile.isPermanent\n    }));\n  }\n\n  /**\n   * Update subscription with latest profile information\n   * @param {string} login - Login/username to update\n   * @param {Object} updatedProfile - Updated profile information\n   * @returns {boolean} Success status\n   */\n  updateSubscription(login, updatedProfile) {\n    if (!login || !updatedProfile) {\n      return false;\n    }\n\n    try {\n      const subscriptions = this.getSubscriptions();\n      const index = subscriptions.findIndex(p => p.login === login);\n      \n      if (index === -1) {\n        return false;\n      }\n\n      subscriptions[index] = {\n        ...subscriptions[index],\n        ...updatedProfile,\n        login, // Preserve original login\n        lastUpdated: new Date().toISOString()\n      };\n\n      this.saveSubscriptions(subscriptions);\n      return true;\n    } catch (error) {\n      console.error('Error updating subscription:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Clear all subscriptions (except WHO)\n   */\n  clearSubscriptions() {\n    try {\n      const whoProfile = {\n        login: this.whoProfile,\n        name: 'World Health Organization',\n        avatar_url: `https://github.com/${this.whoProfile}.png`,\n        type: 'Organization',\n        isPermanent: true,\n        addedAt: new Date().toISOString()\n      };\n      this.saveSubscriptions([whoProfile]);\n    } catch (error) {\n      console.error('Error clearing subscriptions:', error);\n    }\n  }\n\n  /**\n   * Export subscriptions as JSON\n   * @returns {string} JSON string of subscriptions\n   */\n  exportSubscriptions() {\n    const subscriptions = this.getSubscriptions();\n    return JSON.stringify(subscriptions, null, 2);\n  }\n\n  /**\n   * Import subscriptions from JSON\n   * @param {string} jsonString - JSON string of subscriptions\n   * @param {boolean} merge - Whether to merge with existing subscriptions\n   * @returns {boolean} Success status\n   */\n  importSubscriptions(jsonString, merge = false) {\n    try {\n      const importedSubscriptions = JSON.parse(jsonString);\n      \n      if (!Array.isArray(importedSubscriptions)) {\n        throw new Error('Invalid subscription format');\n      }\n\n      let finalSubscriptions;\n      \n      if (merge) {\n        const existingSubscriptions = this.getSubscriptions();\n        const mergedSubscriptions = [...existingSubscriptions];\n        \n        importedSubscriptions.forEach(imported => {\n          const existingIndex = mergedSubscriptions.findIndex(p => p.login === imported.login);\n          if (existingIndex !== -1) {\n            // Preserve permanence of existing subscriptions\n            mergedSubscriptions[existingIndex] = {\n              ...imported,\n              isPermanent: mergedSubscriptions[existingIndex].isPermanent || imported.isPermanent\n            };\n          } else {\n            mergedSubscriptions.push(imported);\n          }\n        });\n        \n        finalSubscriptions = mergedSubscriptions;\n      } else {\n        finalSubscriptions = importedSubscriptions;\n      }\n\n      // Ensure WHO is always included\n      if (!finalSubscriptions.find(p => p.login === this.whoProfile)) {\n        finalSubscriptions.unshift({\n          login: this.whoProfile,\n          name: 'World Health Organization',\n          avatar_url: `https://github.com/${this.whoProfile}.png`,\n          type: 'Organization',\n          isPermanent: true,\n          addedAt: new Date().toISOString()\n        });\n      }\n      \n      this.saveSubscriptions(finalSubscriptions);\n      return true;\n    } catch (error) {\n      console.error('Error importing subscriptions:', error);\n      return false;\n    }\n  }\n}\n\n// Create and export singleton instance\nconst profileSubscriptionService = new ProfileSubscriptionService();\nexport default profileSubscriptionService;","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport githubService from '../../services/githubService';\nimport dakValidationService from '../../services/dakValidationService';\nimport profileSubscriptionService from '../../services/profileSubscriptionService';\nimport { getRoutingContext } from '../../services/routingContextService';\n\n/**\n * Page types supported by the framework\n */\nexport const PAGE_TYPES = {\n  TOP_LEVEL: 'top-level',\n  USER: 'user', \n  DAK: 'dak',\n  ASSET: 'asset'\n};\n\n/**\n * Context for page framework\n */\nconst PageContext = createContext(null);\n\n/**\n * Hook to use page context\n */\nexport const usePage = () => {\n  const context = useContext(PageContext);\n  if (!context) {\n    console.error('usePage: PageContext is null - component not wrapped in PageProvider');\n    // Return a default context instead of throwing to make ErrorHandler more resilient\n    return {\n      pageName: 'unknown',\n      user: null,\n      profile: null,\n      repository: null,\n      branch: null,\n      asset: null,\n      type: 'top-level',\n      loading: false,\n      error: null,\n      isAuthenticated: false,\n      navigate: () => {},\n      params: {},\n      location: { pathname: '/' }\n    };\n  }\n  return context;\n};\n\n/**\n * Determine page type from URL parameters\n */\nconst determinePageType = (params) => {\n  const { user, repo } = params;\n  const asset = params['*']; // Wildcard parameter for asset path\n  \n  if (asset) return PAGE_TYPES.ASSET;\n  if (user && repo) return PAGE_TYPES.DAK;\n  if (user) return PAGE_TYPES.USER;\n  return PAGE_TYPES.TOP_LEVEL;\n};\n\n/**\n * Provider component for page framework\n */\nexport const PageProvider = ({ children, pageName }) => {\n  const params = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  const [pageState, setPageState] = useState({\n    type: determinePageType(params),\n    pageName,\n    loading: false,\n    error: null,\n    user: null,\n    profile: null,\n    repository: null,\n    branch: null,\n    asset: null,\n    isAuthenticated: githubService.isAuth()\n  });\n\n  // Extract URL parameters\n  const { user, repo } = params;\n  const asset = params['*']; // Wildcard parameter for asset path\n\n  // Load data based on page type\n  useEffect(() => {\n    // Use routing context to supplement location state\n    const urlContext = getRoutingContext();\n\n    const loadPageData = async () => {\n      try {\n        setPageState(prev => ({ ...prev, loading: true, error: null }));\n\n        // Special handling for documentation page - no user/repo context needed\n        // But we still need to ensure authentication is properly initialized\n        if (pageName === 'documentation-viewer') {\n          // Try to initialize authentication from stored token if available\n          if (!githubService.isAuth() && githubService.hasStoredToken()) {\n            try {\n              await githubService.initializeFromStoredToken();\n            } catch (error) {\n              console.debug('Could not initialize authentication from stored token:', error);\n            }\n          }\n          \n          setPageState(prev => ({\n            ...prev,\n            loading: false,\n            error: null,\n            isAuthenticated: githubService.isAuth()\n          }));\n          return;\n        }\n\n        \n        // Use location state if available, otherwise fall back to URL context, then URL params\n        let profile = location.state?.profile;\n        let repository = location.state?.repository;\n        let selectedBranch = location.state?.selectedBranch || params.branch || urlContext.branch;\n\n        // For DAK and Asset pages, validate and fetch data\n        if (pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n          // Use user from params or URL context\n          const effectiveUser = user || urlContext.user;\n          const effectiveRepo = repo || urlContext.repo;\n          \n          if (!profile && effectiveUser) {\n            if (githubService.isAuth()) {\n              try {\n                profile = await githubService.getUser(effectiveUser);\n              } catch (err) {\n                // For dashboard pages, set error state instead of redirecting\n                if (pageName === 'dashboard' || pageName.includes('editor') || pageName.includes('viewer') || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n                  setPageState(prev => ({\n                    ...prev,\n                    loading: false,\n                    error: `User '${effectiveUser}' not found or not accessible. Please check the username and try again.`,\n                    user: effectiveUser,\n                    // Still set available URL parameters for context\n                    repository: effectiveRepo ? { name: effectiveRepo, owner: { login: effectiveUser }, html_url: `https://github.com/${effectiveUser}/${effectiveRepo}`, isNotFound: true } : null,\n                    branch: params.branch || urlContext.branch || 'main'\n                  }));\n                  return;\n                }\n                throw new Error(`User '${effectiveUser}' not found or not accessible.`);\n              }\n            } else {\n              // Unauthenticated users accessing public repositories\n              // Create profile for public repository access (no isDemo flag)\n              profile = {\n                login: effectiveUser,\n                name: effectiveUser.charAt(0).toUpperCase() + effectiveUser.slice(1),\n                avatar_url: `https://github.com/${effectiveUser}.png`,\n                type: 'User'\n                // Note: isDemo is NOT set - unauthenticated users should access real public repos\n              };\n            }\n          }\n\n          if (!repository && effectiveUser && effectiveRepo) {\n            if (githubService.isAuth()) {\n              try {\n                repository = await githubService.getRepository(effectiveUser, effectiveRepo);\n                // Validate it's a DAK repository\n                const isValidDAK = await dakValidationService.validateDAKRepository(effectiveUser, effectiveRepo, selectedBranch || repository.default_branch);\n                if (!isValidDAK) {\n                  // For dashboard pages, set error state instead of redirecting\n                  if (pageName === 'dashboard' || pageName.includes('editor') || pageName.includes('viewer') || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n                    setPageState(prev => ({\n                      ...prev,\n                      loading: false,\n                      error: `Repository '${effectiveUser}/${effectiveRepo}' is not a valid DAK repository. This repository may not contain WHO SMART Guidelines content.`,\n                      user: effectiveUser,\n                      profile,\n                      repository: { ...repository, isInvalidDAK: true },\n                      branch: selectedBranch || repository.default_branch\n                    }));\n                    return;\n                  }\n                  throw new Error(`Repository '${effectiveUser}/${effectiveRepo}' is not a valid DAK repository.`);\n                }\n              } catch (err) {\n                // For dashboard pages, set error state instead of redirecting\n                if (pageName === 'dashboard' || pageName.includes('editor') || pageName.includes('viewer') || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET) {\n                  setPageState(prev => ({\n                    ...prev,\n                    loading: false,\n                    error: `Repository '${effectiveUser}/${effectiveRepo}' not found or not accessible. Please check the repository name and your access permissions.`,\n                    user: effectiveUser,\n                    profile,\n                    repository: { name: effectiveRepo, owner: { login: effectiveUser }, html_url: `https://github.com/${effectiveUser}/${effectiveRepo}`, isNotFound: true },\n                    branch: selectedBranch || 'main'\n                  }));\n                  return;\n                }\n                throw new Error(`Repository '${effectiveUser}/${effectiveRepo}' not found or not accessible.`);\n              }\n            } else {\n              // Unauthenticated users accessing public repositories\n              // Create repository object for public repository access (no isDemo flag)\n              repository = {\n                name: effectiveRepo,\n                full_name: `${effectiveUser}/${effectiveRepo}`,\n                owner: { login: effectiveUser },\n                default_branch: selectedBranch || 'main',\n                html_url: `https://github.com/${effectiveUser}/${effectiveRepo}`\n                // Note: isDemo is NOT set - unauthenticated users should access real public repos\n              };\n            }\n          }\n\n          selectedBranch = selectedBranch || repository?.default_branch || 'main';\n\n          // For asset pages, validate the asset exists (when authenticated or public repo)\n          if (pageState.type === PAGE_TYPES.ASSET && (asset || urlContext.asset)) {\n            const effectiveAsset = asset || urlContext.asset;\n            try {\n              await githubService.getFileContent(effectiveUser, effectiveRepo, effectiveAsset, selectedBranch);\n            } catch (err) {\n              // For asset pages, set error state instead of redirecting  \n              if (pageName === 'asset' || pageName.includes('editor') || pageName.includes('viewer')) {\n                setPageState(prev => ({\n                  ...prev,\n                  loading: false,\n                  error: `Asset '${effectiveAsset}' not found in repository '${effectiveUser}/${effectiveRepo}'. The file may have been moved or deleted.`,\n                  user: effectiveUser,\n                  profile,\n                  repository,\n                  branch: selectedBranch,\n                  asset: effectiveAsset\n                }));\n                return;\n              }\n              throw new Error(`Asset '${effectiveAsset}' not found in repository.`);\n            }\n          }\n        }\n\n        // For User pages, just need profile\n        if (pageState.type === PAGE_TYPES.USER && !profile && (user || urlContext.user)) {\n          const effectiveUser = user || urlContext.user;\n          if (githubService.isAuth()) {\n            try {\n              profile = await githubService.getUser(effectiveUser);\n            } catch (err) {\n              // For user pages, set error state instead of redirecting\n              setPageState(prev => ({\n                ...prev,\n                loading: false,\n                error: `User '${effectiveUser}' not found or not accessible. Please check the username and try again.`,\n                user: effectiveUser\n              }));\n              return;\n            }\n          } else {\n            // Unauthenticated users accessing public user profiles\n            // Create profile for public access (no isDemo flag)\n            profile = {\n              login: effectiveUser,\n              name: effectiveUser.charAt(0).toUpperCase() + effectiveUser.slice(1),\n              avatar_url: `https://github.com/${effectiveUser}.png`,\n              type: 'User'\n              // Note: isDemo is NOT set - unauthenticated users should access real public data\n            };\n          }\n        }\n\n        setPageState(prev => ({\n          ...prev,\n          loading: false,\n          user: user || urlContext.user,\n          profile,\n          repository,\n          branch: selectedBranch,\n          asset: asset || urlContext.asset,\n          isAuthenticated: githubService.isAuth()\n        }));\n\n        // Handle profile subscriptions asynchronously\n        const handleSubscriptions = async () => {\n          try {\n            const currentUser = await githubService.getCurrentUser();\n            if (currentUser) {\n              profileSubscriptionService.ensureCurrentUserSubscribed(currentUser);\n            }\n          } catch (error) {\n            // Current user fetch failed, but continue with visited profile logic\n            console.debug('Could not fetch current user for subscriptions:', error);\n          }\n\n          // Auto-add visited profiles (if authenticated)\n          if (profile && githubService.isAuth() && (pageState.type === PAGE_TYPES.USER || pageState.type === PAGE_TYPES.DAK || pageState.type === PAGE_TYPES.ASSET)) {\n            profileSubscriptionService.autoAddVisitedProfile(profile);\n          }\n        };\n\n        // Run subscription logic without blocking the main page load\n        if (githubService.isAuth()) {\n          handleSubscriptions();\n        }\n\n      } catch (error) {\n        console.error('Page data loading error:', error);\n        setPageState(prev => ({\n          ...prev,\n          loading: false,\n          error: error.message\n        }));\n      }\n    };\n\n    // Only load data if we have URL parameters that require it\n    if ((pageState.type !== PAGE_TYPES.TOP_LEVEL && (user || urlContext.user)) || pageState.type === PAGE_TYPES.TOP_LEVEL) {\n      loadPageData();\n    }\n  }, [user, repo, params.branch, asset, pageState.type, location.state, navigate, pageName]);\n\n  // Monitor authentication state changes\n  useEffect(() => {\n    const checkAuthState = () => {\n      const currentAuthState = githubService.isAuth();\n      if (currentAuthState !== pageState.isAuthenticated) {\n        setPageState(prev => ({\n          ...prev,\n          isAuthenticated: currentAuthState\n        }));\n      }\n    };\n\n    // Check periodically for auth state changes (for logout detection)\n    const interval = setInterval(checkAuthState, 1000);\n    \n    return () => clearInterval(interval);\n  }, [pageState.isAuthenticated]);\n\n  const value = {\n    ...pageState,\n    navigate,\n    params,\n    location\n  };\n\n  return (\n    <PageContext.Provider value={value}>\n      {children}\n    </PageContext.Provider>\n  );\n};","/**\n * User Access Service\n * \n * Manages user types and access levels throughout the SGEX Workbench.\n * Supports three user types: authenticated, unauthenticated, and demo users.\n */\n\nimport githubService from './githubService';\nimport logger from '../utils/logger';\n\n/**\n * User types supported by the access framework\n */\nexport const USER_TYPES = {\n  AUTHENTICATED: 'authenticated',\n  UNAUTHENTICATED: 'unauthenticated'\n};\n\n/**\n * Access levels for different operations\n */\nexport const ACCESS_LEVELS = {\n  READ: 'read',\n  WRITE: 'write',\n  NONE: 'none'\n};\n\nclass UserAccessService {\n  constructor() {\n    this.logger = logger.getLogger('UserAccessService');\n    this.currentUser = null;\n    this.userType = USER_TYPES.UNAUTHENTICATED;\n    this.permissions = new Map();\n    this.listeners = new Set();\n  }\n\n  /**\n   * Initialize user access service\n   */\n  async initialize() {\n    this.logger.info('Initializing user access service');\n    await this.detectUserType();\n    this.notifyListeners();\n  }\n\n  /**\n   * Detect current user type based on authentication state\n   */\n  async detectUserType() {\n    try {\n      if (githubService.isAuth()) {\n        this.userType = USER_TYPES.AUTHENTICATED;\n        this.currentUser = await githubService.getCurrentUser();\n      } else {\n        this.userType = USER_TYPES.UNAUTHENTICATED;\n        this.currentUser = null;\n      }\n\n      this.logger.info('User type detected', { \n        userType: this.userType, \n        hasUser: !!this.currentUser \n      });\n    } catch (error) {\n      this.logger.error('Error detecting user type', { error: error.message });\n      // Fallback to unauthenticated\n      this.userType = USER_TYPES.UNAUTHENTICATED;\n      this.currentUser = null;\n    }\n  }\n\n\n\n  /**\n   * Get current user type\n   */\n  getUserType() {\n    return this.userType;\n  }\n\n  /**\n   * Get current user information\n   */\n  getCurrentUser() {\n    return this.currentUser;\n  }\n\n  /**\n   * Check if user is authenticated\n   */\n  isAuthenticated() {\n    return this.userType === USER_TYPES.AUTHENTICATED;\n  }\n\n  /**\n   * Check if user is unauthenticated\n   */\n  isUnauthenticated() {\n    return this.userType === USER_TYPES.UNAUTHENTICATED;\n  }\n\n  /**\n   * Get access level for a specific repository and operation\n   */\n  async getRepositoryAccess(owner, repo, branch = 'main') {\n    const cacheKey = `${owner}/${repo}/${branch}`;\n    \n    // Check cache first\n    if (this.permissions.has(cacheKey)) {\n      return this.permissions.get(cacheKey);\n    }\n\n    let access = ACCESS_LEVELS.NONE;\n\n    try {\n      if (this.userType === USER_TYPES.UNAUTHENTICATED) {\n        // Unauthenticated users only get read access to public repos\n        access = ACCESS_LEVELS.READ;\n      } else if (this.userType === USER_TYPES.AUTHENTICATED) {\n        // Authenticated users get access based on GitHub permissions\n        const hasReadAccess = await this.checkGitHubReadAccess(owner, repo);\n        const hasWriteAccess = await this.checkGitHubWriteAccess(owner, repo);\n        \n        if (hasWriteAccess) {\n          access = ACCESS_LEVELS.WRITE;\n        } else if (hasReadAccess) {\n          access = ACCESS_LEVELS.READ;\n        }\n      }\n    } catch (error) {\n      this.logger.error('Error checking repository access', { \n        owner, repo, branch, error: error.message \n      });\n      // Default to read access on error for better UX\n      access = ACCESS_LEVELS.READ;\n    }\n\n    // Cache the result\n    this.permissions.set(cacheKey, access);\n    \n    this.logger.debug('Repository access determined', { \n      owner, repo, branch, access, userType: this.userType \n    });\n\n    return access;\n  }\n\n\n\n  /**\n   * Check GitHub read access for authenticated users\n   */\n  async checkGitHubReadAccess(owner, repo) {\n    try {\n      await githubService.getRepository(owner, repo);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check GitHub write access for authenticated users\n   */\n  async checkGitHubWriteAccess(owner, repo) {\n    try {\n      return await githubService.hasRepositoryWriteAccess(owner, repo);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check if user can save to GitHub for a specific repository\n   */\n  async canSaveToGitHub(owner, repo, branch = 'main') {\n    // Only authenticated users can have GitHub write access\n    if (this.userType !== USER_TYPES.AUTHENTICATED) {\n      return false;\n    }\n\n    const access = await this.getRepositoryAccess(owner, repo, branch);\n    return access === ACCESS_LEVELS.WRITE;\n  }\n\n  /**\n   * Check if user can save to local storage (staging ground)\n   */\n  canSaveLocal() {\n    // All user types can save to local storage\n    return true;\n  }\n\n  /**\n   * Get UI behavior configuration for current user type\n   */\n  getUIBehavior() {\n    const behavior = {\n      showEditFeatures: true,\n      showSaveToGitHub: true,\n      showSaveLocal: true,\n      confirmBeforeSave: true,\n      allowCreateNew: true,\n      showAccessBadges: true\n    };\n\n    switch (this.userType) {\n      case USER_TYPES.UNAUTHENTICATED:\n        return {\n          ...behavior,\n          showEditFeatures: false,\n          showSaveToGitHub: false,\n          allowCreateNew: false\n        };\n      \n      case USER_TYPES.AUTHENTICATED:\n        return behavior;\n      \n      default:\n        return {\n          ...behavior,\n          showEditFeatures: false,\n          showSaveToGitHub: false,\n          allowCreateNew: false\n        };\n    }\n  }\n\n  /**\n   * Get access badge information for a repository\n   */\n  async getAccessBadge(owner, repo, branch = 'main') {\n    const access = await this.getRepositoryAccess(owner, repo, branch);\n    \n    const badges = {\n      [ACCESS_LEVELS.WRITE]: {\n        text: 'Write Access',\n        icon: '✏️',\n        color: 'green',\n        description: 'You can edit and save changes to this repository'\n      },\n      [ACCESS_LEVELS.READ]: {\n        text: 'Read Only',\n        icon: '👁️',\n        color: 'blue', \n        description: 'You can view this repository but cannot save changes'\n      },\n      [ACCESS_LEVELS.NONE]: {\n        text: 'No Access',\n        icon: '🚫',\n        color: 'red',\n        description: 'You do not have access to this repository'\n      }\n    };\n\n    return badges[access] || badges[ACCESS_LEVELS.NONE];\n  }\n\n\n\n  /**\n   * Clear cached permissions\n   */\n  clearPermissionsCache() {\n    this.permissions.clear();\n    this.logger.debug('Permissions cache cleared');\n  }\n\n  /**\n   * Add listener for user access changes\n   */\n  addListener(callback) {\n    this.listeners.add(callback);\n    \n    // Return unsubscribe function\n    return () => {\n      this.listeners.delete(callback);\n    };\n  }\n\n  /**\n   * Notify all listeners of changes\n   */\n  notifyListeners() {\n    const accessState = {\n      userType: this.userType,\n      currentUser: this.currentUser,\n      isAuthenticated: this.isAuthenticated(),\n      uiBehavior: this.getUIBehavior()\n    };\n\n    this.listeners.forEach(callback => {\n      try {\n        callback(accessState);\n      } catch (error) {\n        this.logger.error('Error in access service listener', { error: error.message });\n      }\n    });\n  }\n\n  /**\n   * Handle authentication state changes\n   */\n  handleAuthChange() {\n    this.clearPermissionsCache();\n    this.initialize();\n  }\n}\n\n// Create singleton instance\nconst userAccessService = new UserAccessService();\n\nexport default userAccessService;","/**\n * Service for interacting with GitHub Actions API\n * Provides functionality to fetch workflow runs and trigger workflows\n */\n\nimport repositoryConfig from '../config/repositoryConfig';\n\nclass GitHubActionsService {\n  constructor() {\n    this.baseURL = 'https://api.github.com';\n    this.workflowFileName = 'pages.yml'; // The build-and-deploy workflow\n  }\n\n  /**\n   * Get the repository owner\n   */\n  get owner() {\n    return repositoryConfig.getOwner();\n  }\n\n  /**\n   * Get the repository name\n   */\n  get repo() {\n    return repositoryConfig.getName();\n  }\n\n  /**\n   * Set the GitHub token for authenticated requests\n   * @param {string} token - GitHub Personal Access Token\n   */\n  setToken(token) {\n    this.token = token;\n  }\n\n  /**\n   * Get headers for GitHub API requests\n   * @returns {Object} Headers object\n   */\n  getHeaders() {\n    const headers = {\n      'Accept': 'application/vnd.github.v3+json',\n      'Content-Type': 'application/json'\n    };\n    \n    if (this.token) {\n      headers['Authorization'] = `token ${this.token}`;\n    }\n    \n    return headers;\n  }\n\n  /**\n   * Get the workflow ID for the build-and-deploy workflow\n   * @returns {Promise<number|null>} Workflow ID or null if not found\n   */\n  async getWorkflowId() {\n    try {\n      const response = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/workflows`,\n        {\n          headers: this.getHeaders()\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch workflows: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.debug('Available workflows:', data.workflows.map(w => ({ name: w.name, path: w.path })));\n      \n      // Look for the actual deployment workflows used in this repository\n      const workflow = data.workflows.find(w => \n        w.path.includes('branch-deployment.yml') || \n        w.name.includes('Deploy Feature Branch') ||\n        w.path.includes('landing-page-deployment.yml') ||\n        w.name.includes('Deploy Landing Page') ||\n        w.path.includes(this.workflowFileName) || \n        w.name.includes('Multi-Branch GitHub Pages Deployment')\n      );\n\n      console.debug('Selected workflow:', workflow ? { name: workflow.name, path: workflow.path, id: workflow.id } : 'None found');\n      return workflow ? workflow.id : null;\n    } catch (error) {\n      console.error('Error fetching workflow ID:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get the latest workflow run for a specific branch\n   * @param {string} branch - Branch name\n   * @returns {Promise<Object|null>} Workflow run data or null\n   */\n  async getLatestWorkflowRun(branch) {\n    try {\n      console.debug(`Looking for workflow runs for branch: ${branch}`);\n      \n      // For main branch, look for landing page deployment workflow\n      // For other branches, look for branch deployment workflow\n      const isMainBranch = branch === 'main';\n      const workflowName = isMainBranch ? 'Deploy Landing Page' : 'Deploy Feature Branch';\n      \n      const response = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/workflows`,\n        {\n          headers: this.getHeaders()\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch workflows: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.debug('Available workflows:', data.workflows.map(w => ({ name: w.name, path: w.path })));\n      \n      // Find the appropriate workflow for this branch\n      let workflow;\n      if (isMainBranch) {\n        workflow = data.workflows.find(w => \n          w.name.includes('Deploy Landing Page') ||\n          w.path.includes('landing-page-deployment.yml')\n        );\n      } else {\n        workflow = data.workflows.find(w => \n          w.name.includes('Deploy Feature Branch') ||\n          w.path.includes('branch-deployment.yml')\n        );\n      }\n\n      if (!workflow) {\n        console.debug(`No ${workflowName} workflow found for branch ${branch}`);\n        return null;\n      }\n\n      console.debug(`Using workflow: ${workflow.name} (ID: ${workflow.id}) for branch ${branch}`);\n\n      // Get the latest run for this workflow and branch\n      const runsResponse = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/workflows/${workflow.id}/runs?branch=${encodeURIComponent(branch)}&per_page=5`,\n        {\n          headers: this.getHeaders()\n        }\n      );\n\n      if (!runsResponse.ok) {\n        throw new Error(`Failed to fetch workflow runs: ${runsResponse.status}`);\n      }\n\n      const runsData = await runsResponse.json();\n      console.debug(`Found ${runsData.workflow_runs.length} workflow runs for branch ${branch}`);\n      \n      if (runsData.workflow_runs.length > 0) {\n        const latestRun = runsData.workflow_runs[0];\n        console.debug(`Latest run: ${latestRun.status}/${latestRun.conclusion} at ${latestRun.created_at}`);\n        return latestRun;\n      }\n\n      return null;\n    } catch (error) {\n      console.error(`Error fetching latest workflow run for branch ${branch}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Get all workflows and their latest runs for a specific branch\n   * @param {string} branch - Branch name\n   * @returns {Promise<Array>} Array of workflow status objects\n   */\n  async getAllWorkflowsForBranch(branch) {\n    try {\n      console.debug(`Getting all workflows for branch: ${branch}`);\n      \n      const response = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/workflows`,\n        {\n          headers: this.getHeaders()\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch workflows: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.debug('All available workflows:', data.workflows.map(w => ({ name: w.name, path: w.path, state: w.state })));\n      \n      // Filter to active workflows that are relevant for this branch\n      const relevantWorkflows = data.workflows.filter(w => \n        w.state === 'active' && (\n          // Branch-specific workflows\n          w.path.includes('branch-deployment.yml') ||\n          w.path.includes('landing-page-deployment.yml') ||\n          w.name.includes('Deploy Feature Branch') ||\n          w.name.includes('Deploy Landing Page') ||\n          // Code quality and review workflows\n          w.path.includes('code-quality.yml') ||\n          w.path.includes('review.yml') ||\n          w.path.includes('pr-commit-feedback.yml') ||\n          w.path.includes('pr-workflow-failure-notifier.yml') ||\n          w.name.includes('Code Quality') ||\n          w.name.includes('PR Review') ||\n          w.name.includes('PR Commit Feedback') ||\n          w.name.includes('PR Workflow Failure') ||\n          // General CI/CD workflows that might run on all branches\n          w.path.includes('ci.yml') ||\n          w.path.includes('test.yml') ||\n          w.path.includes('build.yml') ||\n          w.name.includes('CI') ||\n          w.name.includes('Test') ||\n          w.name.includes('Build')\n        )\n      );\n\n      console.debug(`Found ${relevantWorkflows.length} relevant workflows for branch ${branch}`);\n\n      // Get latest runs for each workflow\n      const workflowStatuses = await Promise.all(\n        relevantWorkflows.map(async (workflow) => {\n          try {\n            const runsResponse = await fetch(\n              `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/workflows/${workflow.id}/runs?branch=${encodeURIComponent(branch)}&per_page=1`,\n              {\n                headers: this.getHeaders()\n              }\n            );\n\n            let latestRun = null;\n            if (runsResponse.ok) {\n              const runsData = await runsResponse.json();\n              if (runsData.workflow_runs.length > 0) {\n                latestRun = runsData.workflow_runs[0];\n              }\n            }\n\n            const parsedStatus = this.parseWorkflowStatus(latestRun);\n            \n            return {\n              workflow: {\n                id: workflow.id,\n                name: workflow.name,\n                path: workflow.path,\n                url: `https://github.com/${this.owner}/${this.repo}/actions/workflows/${workflow.id}`\n              },\n              ...parsedStatus,\n              lastRunId: latestRun?.id || null,\n              workflowUrl: `https://github.com/${this.owner}/${this.repo}/actions/workflows/${workflow.id}`\n            };\n          } catch (error) {\n            console.error(`Error fetching runs for workflow ${workflow.name}:`, error);\n            return {\n              workflow: {\n                id: workflow.id,\n                name: workflow.name,\n                path: workflow.path,\n                url: `https://github.com/${this.owner}/${this.repo}/actions/workflows/${workflow.id}`\n              },\n              status: 'error',\n              conclusion: null,\n              url: null,\n              runId: null,\n              createdAt: null,\n              displayStatus: 'Error',\n              badgeClass: 'error',\n              icon: '❌',\n              workflowUrl: `https://github.com/${this.owner}/${this.repo}/actions/workflows/${workflow.id}`\n            };\n          }\n        })\n      );\n\n      return workflowStatuses;\n    } catch (error) {\n      console.error(`Error getting all workflows for branch ${branch}:`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Get workflow status for multiple branches\n   * @param {Array<string>} branches - Array of branch names\n   * @returns {Promise<Object>} Object mapping branch names to workflow status\n   */\n  async getWorkflowStatusForBranches(branches) {\n    const statusMap = {};\n    \n    for (const branch of branches) {\n      try {\n        const workflowRun = await this.getLatestWorkflowRun(branch);\n        statusMap[branch] = this.parseWorkflowStatus(workflowRun);\n      } catch (error) {\n        console.error(`Error getting workflow status for branch ${branch}:`, error);\n        statusMap[branch] = {\n          status: 'unknown',\n          conclusion: null,\n          url: null,\n          runId: null,\n          createdAt: null\n        };\n      }\n    }\n    \n    return statusMap;\n  }\n\n  /**\n   * Parse workflow run data into a normalized status object\n   * @param {Object|null} workflowRun - Workflow run data from GitHub API\n   * @returns {Object} Normalized status object\n   */\n  parseWorkflowStatus(workflowRun) {\n    if (!workflowRun) {\n      return {\n        status: 'not_started',\n        conclusion: null,\n        url: null,\n        runId: null,\n        createdAt: null,\n        displayStatus: 'Not Started',\n        badgeClass: 'not-started',\n        icon: '⚪'\n      };\n    }\n\n    const status = workflowRun.status;\n    const conclusion = workflowRun.conclusion;\n    \n    let displayStatus, badgeClass, icon;\n\n    if (status === 'in_progress' || status === 'queued' || status === 'pending') {\n      displayStatus = 'In Progress';\n      badgeClass = 'in-progress';\n      icon = '🟡';\n    } else if (status === 'waiting') {\n      // Handle workflows waiting for approval or manual intervention\n      displayStatus = 'Awaiting Approval';\n      badgeClass = 'waiting';\n      icon = '🟠';\n    } else if (status === 'requested') {\n      // Handle workflows that are requested but haven't started yet\n      displayStatus = 'Requested';\n      badgeClass = 'requested';\n      icon = '🔵';\n    } else if (status === 'completed') {\n      if (conclusion === 'success') {\n        displayStatus = 'Succeeded';\n        badgeClass = 'succeeded';\n        icon = '🟢';\n      } else if (conclusion === 'failure' || conclusion === 'cancelled' || conclusion === 'timed_out') {\n        displayStatus = 'Failed';\n        badgeClass = 'failed';\n        icon = '🔴';\n      } else if (conclusion === 'action_required') {\n        displayStatus = 'Action Required';\n        badgeClass = 'action-required';\n        icon = '🟠';\n      } else {\n        displayStatus = 'Completed';\n        badgeClass = 'completed';\n        icon = '🟦';\n      }\n    } else {\n      displayStatus = 'Unknown';\n      badgeClass = 'unknown';\n      icon = '⚫';\n    }\n\n    return {\n      status,\n      conclusion,\n      url: workflowRun.html_url,\n      runId: workflowRun.id,\n      createdAt: new Date(workflowRun.created_at),\n      displayStatus,\n      badgeClass,\n      icon\n    };\n  }\n\n  /**\n   * Trigger a workflow run for a specific branch\n   * @param {string} branch - Branch name to trigger workflow for\n   * @returns {Promise<boolean>} Success status\n   */\n  async triggerWorkflow(branch) {\n    try {\n      if (!this.token) {\n        throw new Error('Authentication required to trigger workflows');\n      }\n\n      console.debug(`Triggering workflow for branch: ${branch}`);\n      \n      // For main branch, trigger landing page deployment workflow\n      // For other branches, trigger branch deployment workflow\n      const isMainBranch = branch === 'main';\n      \n      const response = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/workflows`,\n        {\n          headers: this.getHeaders()\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch workflows: ${response.status}`);\n      }\n\n      const data = await response.json();\n      \n      // Find the appropriate workflow for this branch\n      let workflow;\n      if (isMainBranch) {\n        workflow = data.workflows.find(w => \n          w.name.includes('Deploy Landing Page') ||\n          w.path.includes('landing-page-deployment.yml')\n        );\n      } else {\n        workflow = data.workflows.find(w => \n          w.name.includes('Deploy Feature Branch') ||\n          w.path.includes('branch-deployment.yml')\n        );\n      }\n\n      if (!workflow) {\n        throw new Error(`No deployment workflow found for branch ${branch}`);\n      }\n\n      console.debug(`Triggering workflow: ${workflow.name} (ID: ${workflow.id}) for branch ${branch}`);\n\n      const triggerResponse = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/workflows/${workflow.id}/dispatches`,\n        {\n          method: 'POST',\n          headers: this.getHeaders(),\n          body: JSON.stringify({\n            ref: branch,\n            inputs: {\n              branch: branch\n            }\n          })\n        }\n      );\n\n      if (!triggerResponse.ok) {\n        const errorText = await triggerResponse.text();\n        console.error(`Workflow trigger failed:`, {\n          status: triggerResponse.status,\n          statusText: triggerResponse.statusText,\n          error: errorText,\n          branch,\n          workflowId: workflow.id\n        });\n        throw new Error(`Failed to trigger workflow: ${triggerResponse.status} ${triggerResponse.statusText} - ${errorText}`);\n      }\n\n      console.debug(`Successfully triggered workflow for branch ${branch}`);\n      return true;\n    } catch (error) {\n      console.error(`Error triggering workflow for branch ${branch}:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Get the Actions tab URL for the repository\n   * @returns {string} GitHub Actions URL\n   */\n  getActionsURL() {\n    return `https://github.com/${this.owner}/${this.repo}/actions`;\n  }\n\n  /**\n   * Get the workflow URL for a specific workflow\n   * @returns {Promise<string|null>} Workflow URL or null\n   */\n  async getWorkflowURL() {\n    try {\n      const workflowId = await this.getWorkflowId();\n      if (!workflowId) {\n        return this.getActionsURL();\n      }\n      return `https://github.com/${this.owner}/${this.repo}/actions/workflows/${workflowId}`;\n    } catch (error) {\n      console.error('Error getting workflow URL:', error);\n      return this.getActionsURL();\n    }\n  }\n\n  /**\n   * Check if the current token has permission to trigger workflows\n   * @returns {Promise<boolean>} Whether user can trigger workflows\n   */\n  async checkWorkflowTriggerPermissions() {\n    try {\n      if (!this.token) {\n        return false;\n      }\n\n      // Try to get the list of workflows - this requires actions read permission at minimum\n      const response = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/workflows`,\n        {\n          headers: this.getHeaders()\n        }\n      );\n\n      if (!response.ok) {\n        return false;\n      }\n\n      // If we can read workflows, we likely can trigger them if we have write access\n      // But the actual permission check happens when we try to trigger\n      return true;\n    } catch (error) {\n      console.debug('Cannot check workflow trigger permissions:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if the current token has permission to approve workflow runs\n   * @returns {Promise<boolean>} Whether user can approve workflow runs\n   */\n  async checkWorkflowApprovalPermissions() {\n    try {\n      if (!this.token) {\n        return false;\n      }\n\n      // Check if we can access pending workflow runs that require approval\n      // This is a heuristic - actual approval permissions are checked when attempting to approve\n      const response = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/runs?status=waiting`,\n        {\n          headers: this.getHeaders()\n        }\n      );\n\n      return response.ok;\n    } catch (error) {\n      console.debug('Cannot check workflow approval permissions:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Approve a workflow run that requires approval\n   * @param {number} runId - The workflow run ID to approve\n   * @returns {Promise<boolean>} Success status\n   */\n  async approveWorkflowRun(runId) {\n    try {\n      if (!this.token) {\n        throw new Error('Authentication required to approve workflow runs');\n      }\n\n      console.debug(`Approving workflow run: ${runId}`);\n\n      const response = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/runs/${runId}/approve`,\n        {\n          method: 'POST',\n          headers: this.getHeaders()\n        }\n      );\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`Workflow approval failed:`, {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorText,\n          runId\n        });\n        throw new Error(`Failed to approve workflow run: ${response.status} ${response.statusText} - ${errorText}`);\n      }\n\n      console.debug(`Successfully approved workflow run ${runId}`);\n      return true;\n    } catch (error) {\n      console.error(`Error approving workflow run ${runId}:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Rerun failed jobs in a workflow run\n   * @param {number} runId - The workflow run ID to rerun\n   * @returns {Promise<boolean>} Success status\n   */\n  async rerunFailedWorkflow(runId) {\n    try {\n      if (!this.token) {\n        throw new Error('Authentication required to rerun workflow');\n      }\n\n      console.debug(`Rerunning failed jobs for workflow run: ${runId}`);\n\n      const response = await fetch(\n        `${this.baseURL}/repos/${this.owner}/${this.repo}/actions/runs/${runId}/rerun-failed-jobs`,\n        {\n          method: 'POST',\n          headers: this.getHeaders()\n        }\n      );\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`Workflow rerun failed:`, {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorText,\n          runId\n        });\n        throw new Error(`Failed to rerun workflow: ${response.status} ${response.statusText} - ${errorText}`);\n      }\n\n      console.debug(`Successfully reran failed jobs for workflow run ${runId}`);\n      return true;\n    } catch (error) {\n      console.error(`Error rerunning workflow run ${runId}:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if the service is authenticated\n   * @returns {boolean} Authentication status\n   */\n  isAuthenticated() {\n    return !!this.token;\n  }\n}\n\n// Create a singleton instance\nconst githubActionsService = new GitHubActionsService();\n\nexport default githubActionsService;","/**\n * Time utility functions for formatting dates and relative times\n */\n\n/**\n * Format a date as relative time (e.g., \"5 minutes ago\", \"2 hours ago\")\n * @param {Date|string} date - The date to format\n * @returns {string} Relative time string\n */\nexport const timeAgo = (date) => {\n  if (!date) return 'Never';\n  \n  const now = new Date();\n  const targetDate = new Date(date);\n  \n  // Check if date is valid\n  if (isNaN(targetDate.getTime())) {\n    return 'Invalid date';\n  }\n  \n  const diffMs = now.getTime() - targetDate.getTime();\n  \n  // If in the future, show as \"just now\"\n  if (diffMs < 0) {\n    return 'just now';\n  }\n  \n  const diffSeconds = Math.floor(diffMs / 1000);\n  const diffMinutes = Math.floor(diffSeconds / 60);\n  const diffHours = Math.floor(diffMinutes / 60);\n  const diffDays = Math.floor(diffHours / 24);\n  const diffWeeks = Math.floor(diffDays / 7);\n  const diffMonths = Math.floor(diffDays / 30);\n  const diffYears = Math.floor(diffDays / 365);\n  \n  if (diffSeconds < 60) {\n    return diffSeconds <= 1 ? 'just now' : `${diffSeconds} seconds ago`;\n  } else if (diffMinutes < 60) {\n    return diffMinutes === 1 ? '1 minute ago' : `${diffMinutes} minutes ago`;\n  } else if (diffHours < 24) {\n    return diffHours === 1 ? '1 hour ago' : `${diffHours} hours ago`;\n  } else if (diffDays < 7) {\n    return diffDays === 1 ? '1 day ago' : `${diffDays} days ago`;\n  } else if (diffWeeks < 4) {\n    return diffWeeks === 1 ? '1 week ago' : `${diffWeeks} weeks ago`;\n  } else if (diffMonths < 12) {\n    return diffMonths === 1 ? '1 month ago' : `${diffMonths} months ago`;\n  } else {\n    return diffYears === 1 ? '1 year ago' : `${diffYears} years ago`;\n  }\n};\n\n/**\n * Format a date for display with both absolute and relative time\n * @param {Date|string} date - The date to format\n * @returns {Object} Object with absolute and relative time strings\n */\nexport const formatTimestamp = (date) => {\n  if (!date) {\n    return {\n      absolute: 'Never',\n      relative: 'Never',\n      full: 'Never'\n    };\n  }\n  \n  const targetDate = new Date(date);\n  \n  if (isNaN(targetDate.getTime())) {\n    return {\n      absolute: 'Invalid date',\n      relative: 'Invalid date',\n      full: 'Invalid date'\n    };\n  }\n  \n  const absolute = new Intl.DateTimeFormat('en-US', {\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  }).format(targetDate);\n  \n  const relative = timeAgo(targetDate);\n  \n  const full = new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    timeZoneName: 'short'\n  }).format(targetDate);\n  \n  return {\n    absolute,\n    relative,\n    full\n  };\n};","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './WorkflowDashboard.css';\nimport { timeAgo, formatTimestamp } from '../utils/timeUtils';\nimport repositoryConfig from '../config/repositoryConfig';\n\nconst WorkflowDashboard = ({ \n  branchName, \n  githubActionsService,\n  isAuthenticated, \n  canTriggerWorkflows = false,\n  canApproveWorkflows = false,\n  onWorkflowAction = null, // Callback for when workflow actions are performed\n  // PR actions props\n  prInfo = null,\n  canMergePR = false,\n  canManagePR = false, // For draft/ready status changes\n  canReviewPR = false,\n  isMergingPR = false,\n  isApprovingPR = false,\n  isRequestingChanges = false,\n  isMarkingReadyForReview = false,\n  approvalStatus = null,\n  approvalMessage = '',\n  newComment = '',\n  onMergePR = null,\n  onApprovePR = null,\n  onRequestChanges = null,\n  onMarkReadyForReview = null\n}) => {\n  const [workflows, setWorkflows] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  const [actionStates, setActionStates] = useState({}); // Track individual action states\n  const refreshIntervalRef = useRef(null);\n  const [lastRefresh, setLastRefresh] = useState(null);\n\n  // Fetch all workflows for the branch\n  const fetchWorkflows = useCallback(async (isRefresh = false) => {\n    try {\n      if (!isRefresh) {\n        setLoading(true);\n      } else {\n        setRefreshing(true);\n      }\n      setError(null);\n\n      if (!githubActionsService || !branchName) {\n        throw new Error('Missing required parameters');\n      }\n\n      console.debug(`Fetching workflows for branch: ${branchName}`);\n      const workflowData = await githubActionsService.getAllWorkflowsForBranch(branchName);\n      \n      console.debug(`Fetched ${workflowData.length} workflows:`, workflowData.map(w => ({\n        name: w.workflow.name,\n        status: w.displayStatus,\n        lastRun: w.createdAt\n      })));\n\n      setWorkflows(workflowData);\n      setLastRefresh(new Date());\n\n      // Call callback if provided\n      if (onWorkflowAction && workflowData.length > 0) {\n        onWorkflowAction({ type: 'workflows_loaded', workflows: workflowData });\n      }\n\n    } catch (err) {\n      console.error('Error fetching workflows:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  }, [branchName, githubActionsService, onWorkflowAction]);\n\n  // Setup auto-refresh\n  const setupAutoRefresh = useCallback(() => {\n    if (refreshIntervalRef.current) {\n      clearInterval(refreshIntervalRef.current);\n    }\n\n    // Refresh every 15 seconds for active monitoring\n    refreshIntervalRef.current = setInterval(() => {\n      fetchWorkflows(true);\n    }, 15000);\n  }, [fetchWorkflows]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (refreshIntervalRef.current) {\n        clearInterval(refreshIntervalRef.current);\n      }\n    };\n  }, []);\n\n  // Initial load and setup refresh when branch changes\n  useEffect(() => {\n    if (branchName && githubActionsService) {\n      const initializeWorkflows = async () => {\n        await fetchWorkflows();\n        setupAutoRefresh();\n      };\n      initializeWorkflows();\n    }\n  }, [branchName, githubActionsService, fetchWorkflows, setupAutoRefresh]);\n\n  // Handle workflow trigger\n  const handleTriggerWorkflow = async (workflow) => {\n    if (!isAuthenticated || !githubActionsService) return;\n    \n    const workflowId = workflow.workflow.id;\n    setActionStates(prev => ({ ...prev, [workflowId]: { action: 'triggering' } }));\n\n    let success = false;\n    try {\n      console.debug(`Triggering workflow: ${workflow.workflow.name} for branch: ${branchName}`);\n      success = await githubActionsService.triggerWorkflow(branchName);\n      \n      if (success) {\n        setActionStates(prev => ({ ...prev, [workflowId]: { \n          action: 'triggered', \n          message: `✅ Workflow \"${workflow.workflow.name}\" has been triggered successfully! Check the workflow status above for progress.`,\n          persistent: true\n        } }));\n        \n        // Refresh workflows after a short delay to show updated status\n        setTimeout(() => {\n          fetchWorkflows(true);\n        }, 3000);\n\n        // Call callback\n        if (onWorkflowAction) {\n          onWorkflowAction({ type: 'workflow_triggered', workflow, success: true });\n        }\n      } else {\n        setActionStates(prev => ({ ...prev, [workflowId]: { \n          action: 'error', \n          message: `❌ Failed to trigger workflow \"${workflow.workflow.name}\". Please check your permissions and try again.`,\n          persistent: true\n        } }));\n      }\n    } catch (error) {\n      console.error('Error triggering workflow:', error);\n      setActionStates(prev => ({ ...prev, [workflowId]: { \n        action: 'error', \n        message: `❌ Error triggering workflow \"${workflow.workflow.name}\": ${error.message}`,\n        persistent: true\n      } }));\n    }\n\n    // Clear action state after 15 seconds for success messages, 8 seconds for errors\n    setTimeout(() => {\n      setActionStates(prev => {\n        const newState = { ...prev };\n        if (newState[workflowId]) {\n          delete newState[workflowId];\n        }\n        return newState;\n      });\n    }, success ? 15000 : 8000);\n  };\n\n  // Handle workflow rerun\n  const handleRerunWorkflow = async (workflow) => {\n    const runId = workflow.runId || workflow.lastRunId;\n    if (!isAuthenticated || !runId || !githubActionsService) return;\n    \n    const workflowId = workflow.workflow.id;\n    setActionStates(prev => ({ ...prev, [workflowId]: { action: 'rerunning' } }));\n\n    let success = false;\n    try {\n      console.debug(`Rerunning failed workflow run: ${runId} for workflow: ${workflow.workflow.name}`);\n      success = await githubActionsService.rerunFailedWorkflow(runId);\n      \n      if (success) {\n        setActionStates(prev => ({ ...prev, [workflowId]: { \n          action: 'rerun', \n          message: `✅ Workflow \"${workflow.workflow.name}\" failed jobs have been restarted! Monitor the status above for progress.`,\n          persistent: true\n        } }));\n        \n        // Refresh workflows after a short delay\n        setTimeout(() => {\n          fetchWorkflows(true);\n        }, 3000);\n\n        // Call callback\n        if (onWorkflowAction) {\n          onWorkflowAction({ type: 'workflow_rerun', workflow, success: true });\n        }\n      } else {\n        setActionStates(prev => ({ ...prev, [workflowId]: { \n          action: 'error', \n          message: `❌ Failed to rerun workflow \"${workflow.workflow.name}\". Please check your permissions and try again.`,\n          persistent: true\n        } }));\n      }\n    } catch (error) {\n      console.error('Error rerunning workflow:', error);\n      setActionStates(prev => ({ ...prev, [workflowId]: { \n        action: 'error', \n        message: `❌ Error rerunning workflow \"${workflow.workflow.name}\": ${error.message}`,\n        persistent: true\n      } }));\n    }\n\n    // Clear action state after 15 seconds for success messages, 8 seconds for errors\n    setTimeout(() => {\n      setActionStates(prev => {\n        const newState = { ...prev };\n        if (newState[workflowId]) {\n          delete newState[workflowId];\n        }\n        return newState;\n      });\n    }, success ? 15000 : 8000);\n  };\n\n  // Handle workflow approval  \n  const handleApproveWorkflow = async (workflow) => {\n    const runId = workflow.runId || workflow.lastRunId;\n    if (!isAuthenticated || !runId || !githubActionsService) return;\n    \n    const workflowId = workflow.workflow.id;\n    setActionStates(prev => ({ ...prev, [workflowId]: { action: 'approving' } }));\n\n    let success = false;\n    try {\n      console.debug(`Approving workflow run: ${runId} for workflow: ${workflow.workflow.name}`);\n      success = await githubActionsService.approveWorkflowRun(runId);\n      \n      if (success) {\n        setActionStates(prev => ({ ...prev, [workflowId]: { \n          action: 'approved', \n          message: `✅ Workflow \"${workflow.workflow.name}\" has been approved! Monitoring progress...`,\n          persistent: true\n        } }));\n        \n        // Immediate refresh to show the workflow starting\n        console.debug(`Immediately refreshing workflows after approval of ${workflow.workflow.name}`);\n        fetchWorkflows(true);\n        \n        // Setup aggressive monitoring for the next 2 minutes after approval\n        let refreshCount = 0;\n        const maxRefreshes = 12; // 12 refreshes over 2 minutes\n        const approvedWorkflowMonitor = setInterval(() => {\n          refreshCount++;\n          console.debug(`Aggressive monitoring refresh ${refreshCount}/${maxRefreshes} for approved workflow: ${workflow.workflow.name}`);\n          fetchWorkflows(true);\n          \n          if (refreshCount >= maxRefreshes) {\n            clearInterval(approvedWorkflowMonitor);\n            console.debug(`Stopping aggressive monitoring for approved workflow: ${workflow.workflow.name}`);\n          }\n        }, 10000); // Every 10 seconds for 2 minutes\n\n        // Call callback\n        if (onWorkflowAction) {\n          onWorkflowAction({ type: 'workflow_approved', workflow, success: true });\n        }\n      } else {\n        setActionStates(prev => ({ ...prev, [workflowId]: { \n          action: 'error', \n          message: `❌ Failed to approve workflow \"${workflow.workflow.name}\". Please check your permissions and try again.`,\n          persistent: true\n        } }));\n      }\n    } catch (error) {\n      console.error('Error approving workflow:', error);\n      setActionStates(prev => ({ ...prev, [workflowId]: { \n        action: 'error', \n        message: `❌ Error approving workflow \"${workflow.workflow.name}\": ${error.message}`,\n        persistent: true\n      } }));\n    }\n\n    // Clear action state after 15 seconds for success messages, 8 seconds for errors  \n    setTimeout(() => {\n      setActionStates(prev => {\n        const newState = { ...prev };\n        if (newState[workflowId]) {\n          delete newState[workflowId];\n        }\n        return newState;\n      });\n    }, success ? 15000 : 8000);\n  };\n\n  // Manual refresh\n  const handleManualRefresh = () => {\n    fetchWorkflows(true);\n  };\n\n  const formatDate = (date) => {\n    if (!date) return 'Never';\n    return new Intl.DateTimeFormat('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n\n  const getWorkflowDescription = (workflow) => {\n    const name = workflow.workflow.name.toLowerCase();\n    const path = workflow.workflow.path.toLowerCase();\n    \n    if (name.includes('deploy') && name.includes('landing')) {\n      return 'Deploys main branch to production landing page';\n    } else if (name.includes('deploy') && name.includes('feature')) {\n      return 'Deploys feature branch for preview';\n    } else if (name.includes('deploy') || path.includes('deploy')) {\n      return 'Deployment workflow';\n    } else if (name.includes('code quality') || path.includes('code-quality')) {\n      return 'Code quality checks, security audit, and compliance validation';\n    } else if (name.includes('pr review') || path.includes('review')) {\n      return 'Pull request review and automated deployment';\n    } else if (name.includes('pr commit feedback') || path.includes('pr-commit-feedback')) {\n      return 'Pull request deployment status and feedback';\n    } else if (name.includes('pr workflow failure') || path.includes('pr-workflow-failure')) {\n      return 'Pull request workflow failure notifications';\n    } else if (name.includes('ci') || name.includes('test') || path.includes('ci') || path.includes('test')) {\n      return 'Continuous integration and testing';\n    } else if (name.includes('build') || path.includes('build')) {\n      return 'Build and compilation workflow';\n    } else {\n      return 'Workflow automation';\n    }\n  };\n\n  if (loading && !refreshing) {\n    return (\n      <div className=\"workflow-dashboard\">\n        <div className=\"workflow-dashboard-header\">\n          <h4>⚙️ Workflow Status Dashboard</h4>\n        </div>\n        <div className=\"workflow-dashboard-loading\">\n          <div className=\"loading-spinner\"></div>\n          <span>Loading workflow status...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"workflow-dashboard\">\n        <div className=\"workflow-dashboard-header\">\n          <h4>⚙️ Workflow Status Dashboard</h4>\n        </div>\n        <div className=\"workflow-dashboard-error\">\n          <span className=\"error-icon\">❌</span>\n          <span>Error: {error}</span>\n          <button onClick={() => fetchWorkflows()} className=\"retry-btn\">\n            🔄 Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"workflow-dashboard\">\n      <div className=\"workflow-dashboard-header\">\n        <div className=\"dashboard-title\">\n          <h4>⚙️ Workflow Status Dashboard</h4>\n          <span className=\"branch-indicator\">Branch: <code>{branchName}</code></span>\n        </div>\n        <div className=\"dashboard-controls\">\n          {lastRefresh && (\n            <span className=\"last-refresh\">\n              Last updated: {formatDate(lastRefresh)}\n            </span>\n          )}\n          <button \n            onClick={handleManualRefresh}\n            disabled={refreshing}\n            className=\"refresh-btn\"\n            title=\"Refresh workflow status\"\n          >\n            {refreshing ? '⏳' : '🔄'} Refresh\n          </button>\n        </div>\n      </div>\n\n      {/* PR Actions Section - moved into workflow dashboard */}\n      {prInfo && prInfo.length > 0 && prInfo[0].state === 'open' && (\n        <div className=\"pr-actions-section\">\n          <div className=\"pr-actions-header\">\n            <h4>🔀 Pull Request Actions</h4>\n            <span className=\"pr-actions-status\">\n              {prInfo[0].draft ? (\n                <>PR #{prInfo[0].number} is in draft mode</>\n              ) : (\n                <>PR #{prInfo[0].number} is ready for actions</>\n              )}\n            </span>\n          </div>\n          <div className=\"pr-actions-container\">\n            <div className=\"pr-actions-buttons\">\n              {/* Ready for Review Button - only for draft PRs */}\n              {isAuthenticated && prInfo[0].draft && canManagePR && (\n                <button\n                  onClick={() => onMarkReadyForReview && onMarkReadyForReview(repositoryConfig.getOwner(), repositoryConfig.getName(), prInfo[0].number)}\n                  disabled={isMarkingReadyForReview}\n                  className=\"pr-ready-review-btn\"\n                  title={`Mark PR #${prInfo[0].number} as ready for review`}\n                >\n                  {isMarkingReadyForReview ? (\n                    <>⏳ Marking ready...</>\n                  ) : (\n                    <>✅ Ready for review</>\n                  )}\n                </button>\n              )}\n              \n              {isAuthenticated && canMergePR && !prInfo[0].draft && (\n                <button\n                  onClick={() => onMergePR && onMergePR(repositoryConfig.getOwner(), repositoryConfig.getName(), prInfo[0].number)}\n                  disabled={isMergingPR}\n                  className=\"pr-merge-btn\"\n                  title={`Merge PR #${prInfo[0].number}`}\n                >\n                  {isMergingPR ? (\n                    <>⏳ Merging...</>\n                  ) : (\n                    <>🔀 Merge PR</>\n                  )}\n                </button>\n              )}\n              \n              {/* PR Review Buttons */}\n              {isAuthenticated && canReviewPR && (\n                <>\n                  <div className=\"pr-review-note\">\n                    💡 Use the comment form above to add feedback with your review.\n                  </div>\n                  <div className=\"pr-review-buttons\">\n                    <button\n                      onClick={() => onApprovePR && onApprovePR(repositoryConfig.getOwner(), repositoryConfig.getName(), prInfo[0].number)}\n                      disabled={isApprovingPR}\n                      className=\"pr-approve-btn\"\n                      title={`Approve PR #${prInfo[0].number}`}\n                    >\n                      {isApprovingPR ? (\n                        <>⏳ Approving...</>\n                      ) : (\n                        <>✅ Approve</>\n                      )}\n                    </button>\n                    <button\n                      onClick={() => onRequestChanges && onRequestChanges(repositoryConfig.getOwner(), repositoryConfig.getName(), prInfo[0].number)}\n                      disabled={isRequestingChanges || !newComment.trim()}\n                      className=\"pr-request-changes-btn\"\n                      title={`Request changes for PR #${prInfo[0].number} (comment required)`}\n                    >\n                      {isRequestingChanges ? (\n                        <>⏳ Requesting...</>\n                      ) : (\n                        <>❌ Request Changes</>\n                      )}\n                    </button>\n                  </div>\n                  \n                  {/* Approval Status Message */}\n                  {approvalStatus && (\n                    <div className={`approval-status-message ${approvalStatus}`}>\n                      {approvalMessage}\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {!isAuthenticated && (\n                <span className=\"pr-actions-note\">\n                  🔒 Sign in to access PR actions\n                </span>\n              )}\n              {isAuthenticated && !canMergePR && !canReviewPR && !canManagePR && (\n                <span className=\"pr-actions-note\">\n                  ⚠️ You don't have permission to merge or review this PR\n                </span>\n              )}\n              {isAuthenticated && !canMergePR && canReviewPR && !canManagePR && (\n                <span className=\"pr-actions-note\">\n                  ℹ️ You can review this PR but cannot merge it\n                </span>\n              )}\n              {isAuthenticated && !canMergePR && canReviewPR && canManagePR && (\n                <span className=\"pr-actions-note\">\n                  ℹ️ You can review and manage this PR but cannot merge it\n                </span>\n              )}\n              {isAuthenticated && canMergePR && !canReviewPR && (\n                <span className=\"pr-actions-note\">\n                  ℹ️ You can merge this PR but cannot review it\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {workflows.length === 0 ? (\n        <div className=\"workflow-dashboard-empty\">\n          <span className=\"empty-icon\">📋</span>\n          <span>No workflows found for this branch</span>\n          <div className=\"empty-description\">\n            This branch may not have any active workflows configured, or they may not have run yet.\n          </div>\n        </div>\n      ) : (\n        <div className=\"workflow-dashboard-content\">\n          <div className=\"workflow-summary\">\n            <span className=\"summary-text\">\n              Found {workflows.length} workflow{workflows.length !== 1 ? 's' : ''} for this branch\n            </span>\n            <div className=\"summary-stats\">\n              {workflows.filter(w => w.status === 'in_progress' || w.status === 'queued').length > 0 && (\n                <span className=\"stat-badge in-progress\">\n                  {workflows.filter(w => w.status === 'in_progress' || w.status === 'queued').length} running\n                </span>\n              )}\n              {workflows.filter(w => w.status === 'waiting').length > 0 && (\n                <span className=\"stat-badge waiting\">\n                  {workflows.filter(w => w.status === 'waiting').length} awaiting approval\n                </span>\n              )}\n              {workflows.filter(w => w.conclusion === 'success').length > 0 && (\n                <span className=\"stat-badge success\">\n                  {workflows.filter(w => w.conclusion === 'success').length} successful\n                </span>\n              )}\n              {workflows.filter(w => w.conclusion === 'failure').length > 0 && (\n                <span className=\"stat-badge failed\">\n                  {workflows.filter(w => w.conclusion === 'failure').length} failed\n                </span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"workflows-list\">\n            {workflows.map((workflow) => {\n              const actionState = actionStates[workflow.workflow.id];\n              \n              return (\n                <div key={workflow.workflow.id} className=\"workflow-card\">\n                  <div className=\"workflow-header\">\n                    <div className=\"workflow-info\">\n                      <div className=\"workflow-name\">\n                        <a\n                          href={workflow.workflowUrl}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"workflow-link\"\n                        >\n                          {workflow.workflow.name}\n                        </a>\n                      </div>\n                      <div className=\"workflow-description\">\n                        {getWorkflowDescription(workflow)}\n                      </div>\n                    </div>\n                    <div className=\"workflow-status\">\n                      {workflow.url ? (\n                        <a\n                          href={workflow.url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className={`status-badge ${workflow.badgeClass}`}\n                        >\n                          <span className=\"status-icon\">{workflow.icon}</span>\n                          <span className=\"status-text\">{workflow.displayStatus}</span>\n                        </a>\n                      ) : (\n                        <span className={`status-badge ${workflow.badgeClass}`}>\n                          <span className=\"status-icon\">{workflow.icon}</span>\n                          <span className=\"status-text\">{workflow.displayStatus}</span>\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"workflow-details\">\n                    {workflow.createdAt && (\n                      <span className=\"workflow-timestamp\" title={formatTimestamp(workflow.createdAt).full}>\n                        Last run: {timeAgo(workflow.createdAt)} ({formatDate(workflow.createdAt)})\n                      </span>\n                    )}\n                    {(workflow.runId || workflow.lastRunId) && (\n                      <span className=\"workflow-run-id\">\n                        Run ID: {workflow.runId || workflow.lastRunId}\n                      </span>\n                    )}\n                  </div>\n\n                  {/* Action buttons and status messages */}\n                  <div className=\"workflow-actions\">\n                    <div className=\"workflow-action-buttons\">\n                      {isAuthenticated ? (\n                        <>\n                          {/* Always show trigger button when authenticated */}\n                          <button\n                            onClick={() => handleTriggerWorkflow(workflow)}\n                            disabled={actionState?.action === 'triggering'}\n                            className=\"workflow-action-btn trigger-btn\"\n                            title={`Trigger ${workflow.workflow.name}`}\n                          >\n                            {actionState?.action === 'triggering' ? (\n                              <>⏳ Starting...</>\n                            ) : (\n                              <>🔄 Trigger</>\n                            )}\n                          </button>\n\n                          {/* Show approve button for workflows awaiting approval - use both runId and lastRunId */}\n                          {workflow.status === 'waiting' && (workflow.runId || workflow.lastRunId) && (\n                            <button\n                              onClick={() => handleApproveWorkflow(workflow)}\n                              disabled={actionState?.action === 'approving'}\n                              className=\"workflow-action-btn approve-btn\"\n                              title={`Approve ${workflow.workflow.name}`}\n                            >\n                              {actionState?.action === 'approving' ? (\n                                <>⏳ Approving...</>\n                              ) : (\n                                <>✅ Approve</>\n                              )}\n                            </button>\n                          )}\n\n                          {/* Show rerun button for failed workflows - use both runId and lastRunId */}\n                          {workflow.conclusion === 'failure' && (workflow.runId || workflow.lastRunId) && (\n                            <button\n                              onClick={() => handleRerunWorkflow(workflow)}\n                              disabled={actionState?.action === 'rerunning'}\n                              className=\"workflow-action-btn rerun-btn\"\n                              title={`Rerun failed jobs for ${workflow.workflow.name}`}\n                            >\n                              {actionState?.action === 'rerunning' ? (\n                                <>⏳ Rerunning...</>\n                              ) : (\n                                <>🔄 Rerun Failed</>\n                              )}\n                            </button>\n                          )}\n\n                          {/* Always show view button - prefer run URL, fall back to workflow URL */}\n                          {(workflow.url || workflow.workflowUrl) && (\n                            <a\n                              href={workflow.url || workflow.workflowUrl}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"workflow-action-btn view-btn\"\n                            >\n                              📋 View {workflow.url ? 'Run' : 'Workflow'}\n                            </a>\n                          )}\n                        </>\n                      ) : (\n                        <span className=\"auth-required\">🔒 Sign in for actions</span>\n                      )}\n\n                      {/* Debug information for troubleshooting */}\n                      <div className=\"workflow-debug\" style={{ fontSize: '0.7rem', opacity: 0.7, marginTop: '0.5rem', fontFamily: 'monospace' }}>\n                        Auth: {isAuthenticated ? '✅' : '❌'} | \n                        Status: {workflow.status} | \n                        Conclusion: {workflow.conclusion || 'N/A'} | \n                        RunId: {workflow.runId || 'N/A'} | \n                        LastRunId: {workflow.lastRunId || 'N/A'} | \n                        URL: {workflow.url ? '✅' : '❌'} | \n                        WorkflowURL: {workflow.workflowUrl ? '✅' : '❌'} |\n                        Path: {workflow.workflow.path}\n                      </div>\n                    </div>\n\n                    {/* Action status messages */}\n                    {actionState && (\n                      <div className={`action-status ${actionState.action}`}>\n                        {actionState.action === 'triggered' && '🎯 '}\n                        {actionState.action === 'approved' && '✅ '}\n                        {actionState.action === 'rerun' && '🔄 '}\n                        {actionState.action === 'error' && '❌ '}\n                        {actionState.message || `${actionState.action}...`}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkflowDashboard;","import React, { useState, useEffect, useRef, Suspense, lazy } from 'react';\nimport githubService from '../services/githubService';\nimport githubActionsService from '../services/githubActionsService';\nimport WorkflowStatus from './WorkflowStatus';\nimport WorkflowDashboard from './WorkflowDashboard';\nimport { lazyLoadReactMarkdown, lazyLoadDOMPurify, lazyLoadRehypeRaw } from '../services/libraryLoaderService';\nimport repositoryConfig from '../config/repositoryConfig';\nimport './WorkflowStatus.css';\nimport './PreviewBadge.css';\n\n// Lazy load MDEditor to improve initial page responsiveness\nconst MDEditor = lazy(() => import('@uiw/react-md-editor'));\n\n/**\n * PreviewBadge component that displays when the app is deployed from a non-main branch\n * Shows branch name and links to the associated PR\n * Can expand to show detailed PR information, comments, and add new comments\n */\nconst PreviewBadge = () => {\n  const [branchInfo, setBranchInfo] = useState(null);\n  const [prInfo, setPrInfo] = useState([]); // Changed to array to support multiple PRs\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isSticky, setIsSticky] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [commentsLoading, setCommentsLoading] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [submittingComment, setSubmittingComment] = useState(false);\n  const [commentSubmissionStatus, setCommentSubmissionStatus] = useState(null); // 'submitting', 'success', 'error'\n  const [expandedComments, setExpandedComments] = useState(new Set());\n  const [expandedDescription, setExpandedDescription] = useState(false);\n  const [showMarkdownEditor, setShowMarkdownEditor] = useState(false);\n  const [workflowStatus, setWorkflowStatus] = useState(null);\n  const [workflowLoading, setWorkflowLoading] = useState(false);\n  // Always use WorkflowDashboard - removed simple view toggle\n  const [showWorkflowView, setShowWorkflowView] = useState(false); // Default to discussion view\n  const [newlyAddedCommentId, setNewlyAddedCommentId] = useState(null);\n  const [copilotSessionInfo, setCopilotSessionInfo] = useState(null);\n  const [showCopilotSession, setShowCopilotSession] = useState(false);\n  const [isWatchingSession, setIsWatchingSession] = useState(false);\n  const [watchSessionInterval, setWatchSessionInterval] = useState(null);\n  const [isRefreshingSession, setIsRefreshingSession] = useState(false);\n  const [lastSessionCheck, setLastSessionCheck] = useState(null);\n  const [sessionRefreshCount, setSessionRefreshCount] = useState(0);\n  const [isRefreshingComments, setIsRefreshingComments] = useState(false);\n  const [ReactMarkdown, setReactMarkdown] = useState(null);\n  const [DOMPurify, setDOMPurify] = useState(null);\n  const [rehypeRaw, setRehypeRaw] = useState(null);\n\n  // Lazy load markdown and sanitization components\n  useEffect(() => {\n    const loadMarkdownComponents = async () => {\n      try {\n        const [markdown, domPurify, rehypeRawPlugin] = await Promise.all([\n          lazyLoadReactMarkdown(),\n          lazyLoadDOMPurify(),\n          lazyLoadRehypeRaw()\n        ]);\n        setReactMarkdown(() => markdown);\n        setDOMPurify(domPurify);\n        setRehypeRaw(() => rehypeRawPlugin);\n      } catch (error) {\n        console.error('Failed to load markdown components:', error);\n      }\n    };\n\n    loadMarkdownComponents();\n  }, []);\n  const [canComment, setCanComment] = useState(true);\n  const [canTriggerWorkflows, setCanTriggerWorkflows] = useState(false);\n  const [canApproveWorkflows, setCanApproveWorkflows] = useState(false);\n  const [canMergePR, setCanMergePR] = useState(false);\n  const [canManagePR, setCanManagePR] = useState(false); // For draft/ready status changes\n  const [isMergingPR, setIsMergingPR] = useState(false);\n  const [canReviewPR, setCanReviewPR] = useState(false);\n  const [isApprovingPR, setIsApprovingPR] = useState(false);\n  const [isRequestingChanges, setIsRequestingChanges] = useState(false);\n  const [isMarkingReadyForReview, setIsMarkingReadyForReview] = useState(false);\n  const [approvalStatus, setApprovalStatus] = useState(null); // 'success', 'error'\n  const [approvalMessage, setApprovalMessage] = useState('');\n  const [commentsPage, setCommentsPage] = useState(1);\n  const [allComments, setAllComments] = useState([]);\n  const [hasMoreComments, setHasMoreComments] = useState(false);\n  const [displayedCommentsCount, setDisplayedCommentsCount] = useState(5);\n  const [showStatusUpdates, setShowStatusUpdates] = useState(true);\n  const expandedRef = useRef(null);\n  const commentRefreshIntervalRef = useRef(null);\n  const workflowRefreshIntervalRef = useRef(null);\n\n  // Custom markdown components to make links open in new tabs\n  const markdownComponents = {\n    a: ({ href, children, ...props }) => (\n      <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n        {children}\n      </a>\n    )\n  };\n\n  useEffect(() => {\n    const detectBranchAndPR = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Detect current branch from environment or URL\n        const currentBranch = getCurrentBranch();\n        \n        if (!currentBranch || currentBranch === 'main') {\n          // Not a preview branch, don't show badge\n          setLoading(false);\n          return;\n        }\n\n        setBranchInfo({\n          name: currentBranch,\n          safeName: currentBranch.replace(/\\//g, '-')\n        });\n\n        // Try to fetch PR information for this branch\n        try {\n          const prData = await fetchPRsForBranch(currentBranch);\n          if (prData && prData.length > 0) {\n            setPrInfo(prData);\n          }\n        } catch (prError) {\n          console.debug('Could not fetch PR info:', prError);\n          // Continue without PR info - still show branch badge\n        }\n\n        setLoading(false);\n      } catch (err) {\n        console.error('Error detecting branch:', err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    detectBranchAndPR();\n  }, []);\n\n  // Handle clicks outside the expanded panel to close it (only if not sticky)\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (expandedRef.current && !expandedRef.current.contains(event.target)) {\n        if (isSticky) {\n          setIsSticky(false);\n        }\n        setIsExpanded(false);\n      }\n    };\n\n    if (isExpanded) {\n      // Listen for both mouse and touch events to support mobile devices\n      document.addEventListener('mousedown', handleClickOutside);\n      document.addEventListener('touchstart', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n        document.removeEventListener('touchstart', handleClickOutside);\n      };\n    }\n  }, [isExpanded, isSticky]);\n\n  // Cleanup auto-refresh interval when component unmounts or expanded state changes\n  useEffect(() => {\n    return () => {\n      if (commentRefreshIntervalRef.current) {\n        clearInterval(commentRefreshIntervalRef.current);\n        commentRefreshIntervalRef.current = null;\n      }\n      if (workflowRefreshIntervalRef.current) {\n        clearInterval(workflowRefreshIntervalRef.current);\n        workflowRefreshIntervalRef.current = null;\n      }\n    };\n  }, []);\n\n  // Clear auto-refresh when not expanded\n  useEffect(() => {\n    if (!isExpanded) {\n      if (commentRefreshIntervalRef.current) {\n        clearInterval(commentRefreshIntervalRef.current);\n        commentRefreshIntervalRef.current = null;\n      }\n      if (workflowRefreshIntervalRef.current) {\n        clearInterval(workflowRefreshIntervalRef.current);\n        workflowRefreshIntervalRef.current = null;\n      }\n      // Reset comment pagination when collapsed\n      setCommentsPage(1);\n      setDisplayedCommentsCount(5);\n    }\n  }, [isExpanded]);\n\n  const getCurrentBranch = () => {\n    // First try environment variable (set during build)\n    if (process.env.REACT_APP_GITHUB_REF_NAME) {\n      return process.env.REACT_APP_GITHUB_REF_NAME;\n    }\n    \n    // Fallback: detect from URL path\n    const path = window.location.pathname;\n    \n    // Match pattern: /sgex/{branch-name}/\n    const match = path.match(/^\\/sgex\\/([^/]+)\\//);\n    if (match && match[1] !== 'main') {\n      const safeBranchName = match[1];\n      \n      // Convert safe branch name back to original branch name\n      // This handles the common case where slashes are converted to dashes\n      // Note: This is a heuristic and may not be perfect for all edge cases\n      let branchName = safeBranchName;\n      \n      // Common patterns: feature-name -> feature/name, fix-123 -> fix/123\n      if (safeBranchName.includes('-') && !safeBranchName.startsWith('v') && !safeBranchName.match(/^\\d/)) {\n        // Try to detect if this looks like a feature branch\n        if (safeBranchName.match(/^(feature|fix|hotfix|bugfix|chore|docs|style|refactor|test)-/)) {\n          branchName = safeBranchName.replace(/^([^-]+)-/, '$1/');\n        }\n      }\n      \n      return branchName;\n    }\n\n    return null;\n  };\n\n  const fetchPRsForBranch = async (branchName) => {\n    try {\n      // Get current repository context if available\n      // For now, we'll use the main repository\n      const owner = repositoryConfig.getOwner();\n      const repo = 'sgex';\n\n      const prs = await githubService.getPullRequestsForBranch(owner, repo, branchName);\n      \n      return prs;\n\n    } catch (error) {\n      console.debug('Failed to fetch PR info:', error);\n      return [];\n    }\n  };\n\n  const fetchCommentsForPR = async (owner, repo, prNumber, page = 1, append = false, showLoading = true) => {\n    try {\n      if (showLoading) {\n        setCommentsLoading(true);\n      }\n      \n      const perPage = 30; // GitHub default per page\n      \n      // Fetch both review comments and issue comments with pagination\n      const [reviewComments, issueComments, timelineEvents] = await Promise.all([\n        githubService.getPullRequestComments(owner, repo, prNumber, page, perPage).catch(() => []),\n        githubService.getPullRequestIssueComments(owner, repo, prNumber, page, perPage).catch(() => []),\n        showStatusUpdates ? githubService.getPullRequestTimeline(owner, repo, prNumber, page, perPage).catch(() => []) : Promise.resolve([])\n      ]);\n\n      // Combine and sort comments by date, mark the type\n      const newComments = [\n        ...reviewComments.map(comment => ({ ...comment, type: 'review' })),\n        ...issueComments.map(comment => ({ ...comment, type: 'issue' }))\n      ].sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n\n      // Debug: Log comment details to understand what's being fetched\n      console.debug('Comments fetched for PR discussion:', {\n        refreshType: append ? 'append' : 'replace',\n        showLoading,\n        reviewCommentsCount: reviewComments.length,\n        issueCommentsCount: issueComments.length,\n        totalComments: newComments.length,\n        commentDetails: newComments.map(c => ({\n          id: c.id,\n          author: c.user?.login || 'unknown',\n          type: c.type,\n          created: c.created_at,\n          bodyPreview: c.body?.substring(0, 50) + '...' || 'no body'\n        })),\n        copilotComments: newComments.filter(c => \n          c.user?.login === 'copilot' || \n          c.user?.login?.includes('copilot') ||\n          c.user?.login === 'github-actions[bot]' ||\n          c.user?.login === 'copilot[bot]' ||\n          (c.user?.type === 'Bot' && c.user?.login?.toLowerCase().includes('copilot')) ||\n          c.body?.toLowerCase().includes('copilot')\n        ).map(c => ({\n          id: c.id,\n          author: c.user?.login,\n          type: c.type,\n          bodyPreview: c.body?.substring(0, 100) + '...'\n        })),\n        allUsernames: [...new Set(newComments.map(c => c.user?.login).filter(Boolean))]\n      });\n\n      // Process timeline events for status updates\n      const relevantTimelineEvents = timelineEvents\n        .filter(event => ['committed', 'reviewed', 'merged', 'closed', 'reopened', 'labeled', 'unlabeled', 'head_ref_force_pushed', 'ready_for_review', 'convert_to_draft'].includes(event.event))\n        .map(event => {\n          const user = event.actor || event.author || { login: 'github', avatar_url: 'https://github.com/github.png' };\n          \n          // Ensure user object has the required properties\n          const safeUser = {\n            login: user.login || 'github',\n            avatar_url: user.avatar_url || 'https://github.com/github.png',\n            ...user\n          };\n          \n          return {\n            ...event,\n            type: 'timeline',\n            created_at: event.created_at || event.submitted_at,\n            user: safeUser,\n            body: formatTimelineEvent(event)\n          };\n        });\n\n      if (append) {\n        // Append to existing comments (for load more)\n        const existingIds = new Set(allComments.map(c => c.id));\n        const uniqueNewComments = newComments.filter(c => !existingIds.has(c.id));\n        const uniqueNewEvents = relevantTimelineEvents.filter(e => !existingIds.has(e.id));\n        \n        const allNewItems = [...uniqueNewComments, ...uniqueNewEvents]\n          .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n        \n        const updatedAllComments = [...allComments, ...allNewItems];\n        setAllComments(updatedAllComments);\n        \n        // When loading more, increase the displayed count to show the new comments\n        const newDisplayCount = Math.min(updatedAllComments.length, displayedCommentsCount + perPage);\n        setDisplayedCommentsCount(newDisplayCount);\n        setComments(updatedAllComments.slice(0, newDisplayCount));\n      } else {\n        // Replace comments (for initial load or refresh)\n        const allItems = [...newComments, ...relevantTimelineEvents]\n          .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n        \n        setAllComments(allItems);\n        const initialDisplayCount = Math.min(5, allItems.length);\n        setDisplayedCommentsCount(initialDisplayCount);\n        setComments(allItems.slice(0, initialDisplayCount));\n      }\n      \n      // Check if there are more comments to load\n      setHasMoreComments(newComments.length === perPage);\n      \n      return newComments;\n    } catch (error) {\n      console.debug('Failed to fetch comments:', error);\n      return [];\n    } finally {\n      if (showLoading) {\n        setCommentsLoading(false);\n      }\n    }\n  };\n\n  // Format timeline events into readable status updates\n  const formatTimelineEvent = (event) => {\n    switch (event.event) {\n      case 'committed':\n        return `📦 Pushed ${event.sha ? event.sha.substring(0, 7) : 'commit'}: ${event.message || 'No commit message'}`;\n      case 'reviewed':\n        const reviewState = event.state && typeof event.state === 'string' ? event.state.toLowerCase() : 'reviewed';\n        const reviewIcon = reviewState === 'approved' ? '✅' : reviewState === 'changes_requested' ? '❌' : '💬';\n        return `${reviewIcon} ${reviewState === 'approved' ? 'Approved' : reviewState === 'changes_requested' ? 'Requested changes' : 'Reviewed'} this pull request`;\n      case 'merged':\n        return `🔀 Merged this pull request`;\n      case 'closed':\n        return `❌ Closed this pull request`;\n      case 'reopened':\n        return `🔄 Reopened this pull request`;\n      case 'labeled':\n        return `🏷️ Added label: ${event.label?.name || 'unknown'}`;\n      case 'unlabeled':\n        return `🏷️ Removed label: ${event.label?.name || 'unknown'}`;\n      case 'head_ref_force_pushed':\n        return `🔄 Force-pushed to ${event.ref || 'branch'}`;\n      case 'ready_for_review':\n        return `✅ Marked as ready for review`;\n      case 'convert_to_draft':\n        return `📝 Converted to draft`;\n      default:\n        return `📋 ${event.event?.replace(/_/g, ' ') || 'unknown event'}`;\n    }\n  };\n\n  const getCommentViewers = (comment, allComments) => {\n    const viewers = new Set();\n    \n    // Extract mentions from the comment body\n    if (comment.body && typeof comment.body === 'string') {\n      const mentionMatches = comment.body.match(/@(\\w+)/g);\n      if (mentionMatches) {\n        mentionMatches.forEach(mention => {\n          const username = mention.substring(1); // Remove @\n          if (username && typeof username === 'string') {\n            viewers.add(username);\n          }\n        });\n      }\n    }\n    \n    // Check if any subsequent comments reference this comment or author\n    const laterComments = allComments.filter(c => \n      c && c.created_at && comment && comment.created_at &&\n      new Date(c.created_at) > new Date(comment.created_at)\n    );\n    \n    laterComments.forEach(laterComment => {\n      // Check if later comment mentions this comment's author\n      if (laterComment.body && typeof laterComment.body === 'string' && \n          comment.user && comment.user.login && typeof comment.user.login === 'string' &&\n          laterComment.user && laterComment.user.login && typeof laterComment.user.login === 'string') {\n        if (laterComment.body.toLowerCase().includes(`@${comment.user.login.toLowerCase()}`)) {\n          viewers.add(laterComment.user.login);\n        }\n      }\n      \n      // Check if later comment references this comment content (partial match)\n      if (comment.body && typeof comment.body === 'string' &&\n          laterComment.body && typeof laterComment.body === 'string' && \n          laterComment.user && laterComment.user.login && typeof laterComment.user.login === 'string') {\n        const commentWords = comment.body.toLowerCase().split(' ').filter(word => word.length > 3);\n        if (commentWords.length > 0) {\n          const hasReferenceWords = commentWords.some(word => \n            laterComment.body.toLowerCase().includes(word) && \n            laterComment.user.login !== comment.user.login\n          );\n          if (hasReferenceWords) {\n            viewers.add(laterComment.user.login);\n          }\n        }\n      }\n    });\n    \n    // Add copilot if mentioned anywhere in the thread related to this comment\n    // Enhanced detection for various copilot username formats\n    if ((comment.body && typeof comment.body === 'string' && comment.body.toLowerCase().includes('copilot')) || \n        (comment.user && comment.user.login && typeof comment.user.login === 'string' && \n         (comment.user.login.toLowerCase().includes('copilot') || \n          comment.user.login === 'github-actions[bot]' ||\n          comment.user.login === 'copilot[bot]'))) {\n      viewers.add('copilot');\n    }\n    \n    // Check if copilot has engaged in later comments\n    const copilotEngaged = laterComments.some(c => \n      (c.user && c.user.login && typeof c.user.login === 'string' && \n       (c.user.login.toLowerCase().includes('copilot') ||\n        c.user.login === 'github-actions[bot]' ||\n        c.user.login === 'copilot[bot]')) ||\n      (c.body && typeof c.body === 'string' && comment.user && comment.user.login && typeof comment.user.login === 'string' && \n       c.body.toLowerCase().includes(`@${comment.user.login.toLowerCase()}`))\n    );\n    if (copilotEngaged) {\n      viewers.add('copilot');\n    }\n    \n    // Remove the comment author from viewers (don't show badge for self)\n    if (comment.user && comment.user.login && typeof comment.user.login === 'string') {\n      viewers.delete(comment.user.login);\n    }\n    \n    return Array.from(viewers);\n  };\n\n  // Handle workflow dashboard actions\n  const handleWorkflowDashboardAction = (actionData) => {\n    console.debug('Workflow dashboard action:', actionData);\n    \n    if (actionData.type === 'workflow_triggered' || actionData.type === 'workflow_approved') {\n      // Show success message for workflow actions\n      setApprovalStatus('success');\n      if (actionData.type === 'workflow_triggered') {\n        setApprovalMessage('Workflow triggered successfully! Check the dashboard for real-time updates.');\n      } else {\n        setApprovalMessage('Workflow approved successfully! It should start running now.');\n      }\n      \n      // Clear success message after 5 seconds\n      setTimeout(() => {\n        setApprovalStatus(null);\n        setApprovalMessage('');\n      }, 5000);\n    }\n  };\n\n  // Handle watch session toggle with auto-refresh\n  const handleWatchSessionToggle = () => {\n    if (isWatchingSession) {\n      // Stop watching - clear interval and hide session\n      if (watchSessionInterval) {\n        clearInterval(watchSessionInterval);\n        setWatchSessionInterval(null);\n      }\n      setIsWatchingSession(false);\n      setShowCopilotSession(false);\n      setIsRefreshingSession(false);\n      setSessionRefreshCount(0);\n    } else {\n      // Start watching - show session and set up auto-refresh\n      setIsWatchingSession(true);\n      setShowCopilotSession(true);\n      setSessionRefreshCount(0);\n      \n      // Perform initial refresh\n      if (prInfo && prInfo.length > 0) {\n        performSessionRefresh(repositoryConfig.getOwner(), repositoryConfig.getName(), prInfo[0].number);\n      }\n      \n      // Set up auto-refresh every 10 seconds\n      const interval = setInterval(async () => {\n        if (prInfo && prInfo.length > 0) {\n          await performSessionRefresh(repositoryConfig.getOwner(), repositoryConfig.getName(), prInfo[0].number);\n        }\n      }, 10000); // 10 seconds\n      \n      setWatchSessionInterval(interval);\n    }\n  };\n\n  // Helper function to perform session refresh with visual feedback\n  const performSessionRefresh = async (owner, repo, prNumber) => {\n    try {\n      setIsRefreshingSession(true);\n      setSessionRefreshCount(prev => prev + 1);\n      \n      // Refresh copilot session info\n      const sessionInfo = await fetchCopilotSessionInfo(owner, repo, prNumber);\n      setCopilotSessionInfo(sessionInfo);\n      setLastSessionCheck(new Date());\n      \n      // Brief visual feedback that refresh completed\n      setTimeout(() => {\n        setIsRefreshingSession(false);\n      }, 1000); // Show \"refreshing\" state for 1 second\n      \n    } catch (error) {\n      console.debug('Failed to refresh copilot session info:', error);\n      setIsRefreshingSession(false);\n    }\n  };\n\n  // Clean up interval on unmount\n  useEffect(() => {\n    return () => {\n      if (watchSessionInterval) {\n        clearInterval(watchSessionInterval);\n      }\n    };\n  }, [watchSessionInterval]);\n\n  const fetchWorkflowStatus = async (branchName) => {\n    try {\n      setWorkflowLoading(true);\n      \n      // Initialize GitHub Actions service with current token if available\n      if (githubService.isAuth() && githubService.token) {\n        githubActionsService.setToken(githubService.token);\n      }\n      \n      // Always use WorkflowDashboard which handles its own state\n      setWorkflowLoading(false);\n      return;\n      \n      const status = await githubActionsService.getLatestWorkflowRun(branchName);\n      const parsedStatus = githubActionsService.parseWorkflowStatus(status);\n      setWorkflowStatus(parsedStatus);\n    } catch (error) {\n      console.debug('Failed to fetch workflow status:', error);\n      setWorkflowStatus(null);\n    } finally {\n      setWorkflowLoading(false);\n    }\n  };\n\n  const fetchCopilotSessionInfo = async (owner, repo, prNumber) => {\n    try {\n      if (!githubService.isAuth()) {\n        return null;\n      }\n\n      // Check for recent GitHub Copilot activity in PR comments\n      const comments = await githubService.getPullRequestIssueComments(owner, repo, prNumber);\n      \n      // Look for comments from GitHub Copilot or containing copilot session indicators\n      // Enhanced detection for various copilot username formats\n      const copilotComments = comments.filter(comment => \n        comment.user.login === 'copilot' || \n        comment.user.login.includes('copilot') ||\n        comment.user.login === 'github-actions[bot]' ||\n        comment.user.login === 'copilot[bot]' ||\n        comment.user.type === 'Bot' && comment.user.login.toLowerCase().includes('copilot') ||\n        comment.body.includes('@copilot') ||\n        comment.body.includes('copilot session') ||\n        comment.body.includes('GitHub Copilot') ||\n        comment.body.includes('I\\'ve') && comment.body.includes('commit') // Common copilot response pattern\n      );\n\n      console.debug('Copilot session detection:', {\n        totalComments: comments.length,\n        copilotComments: copilotComments.length,\n        copilotCommentsInfo: copilotComments.map(c => ({\n          id: c.id,\n          author: c.user.login,\n          created: c.created_at,\n          bodyPreview: c.body.substring(0, 100) + '...'\n        }))\n      });\n\n      if (copilotComments.length > 0) {\n        // Sort copilot comments by date (newest first) to ensure we get the latest activity\n        const sortedCopilotComments = copilotComments.sort((a, b) => \n          new Date(b.created_at) - new Date(a.created_at)\n        );\n        \n        // Try to find the newest agent session URL by checking ALL comments, not just copilot ones\n        let agentSessionUrl = null;\n        let latestSessionDate = null;\n        let sessionComment = null;\n        \n        // Enhanced session URL pattern to capture session IDs\n        const sessionUrlPattern = /https:\\/\\/github\\.com\\/[^/]+\\/[^/]+\\/pull\\/\\d+\\/agent-sessions\\/([a-f0-9-]+)/gi;\n        \n        // Check ALL comments for session URLs, sorted by date (newest first)\n        const allCommentsSorted = comments.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n        \n        console.debug('Searching for session URLs in all comments:', allCommentsSorted.length);\n        \n        for (const comment of allCommentsSorted) {\n          const matches = [...comment.body.matchAll(sessionUrlPattern)];\n          if (matches.length > 0) {\n            console.debug('Found session URLs in comment:', {\n              commentId: comment.id,\n              author: comment.user.login,\n              created: comment.created_at,\n              urls: matches.map(m => m[0])\n            });\n            \n            // Take the last (most recent) session URL from the most recent comment\n            const sessionUrl = matches[matches.length - 1][0];\n            const commentDate = new Date(comment.created_at);\n            \n            // Use the session URL from the newest comment with session URLs\n            if (!agentSessionUrl || commentDate > latestSessionDate) {\n              agentSessionUrl = sessionUrl;\n              latestSessionDate = commentDate;\n              sessionComment = comment;\n              console.debug('Updated session URL to newest:', {\n                url: agentSessionUrl,\n                commentDate: commentDate.toISOString(),\n                commentId: comment.id\n              });\n            }\n          }\n        }\n        \n        // If no explicit agent session URL found, construct the likely URL\n        if (!agentSessionUrl) {\n          agentSessionUrl = `https://github.com/${owner}/${repo}/pull/${prNumber}/agent-sessions`;\n          console.debug('No session URL found, using default:', agentSessionUrl);\n        } else {\n          console.debug('Final session URL selected:', agentSessionUrl);\n        }\n        \n        // Get the most recent copilot activity for display\n        const latestCopilotComment = sortedCopilotComments[0];\n        \n        // Filter to get only copilot's actual responses (not mentions)\n        // Enhanced detection for various copilot username formats\n        const copilotResponses = sortedCopilotComments.filter(comment => \n          comment.user.login === 'copilot' || \n          comment.user.login.includes('copilot') ||\n          comment.user.login === 'github-actions[bot]' ||\n          comment.user.login === 'copilot[bot]' ||\n          (comment.user.type === 'Bot' && comment.user.login.toLowerCase().includes('copilot'))\n        );\n        \n        return {\n          hasActiveCopilot: true,\n          latestActivity: latestCopilotComment.created_at,\n          sessionUrl: agentSessionUrl,\n          commentUrl: `https://github.com/${owner}/${repo}/pull/${prNumber}#issuecomment-${latestCopilotComment.id}`,\n          commentsCount: copilotComments.length,\n          latestComment: latestCopilotComment,\n          copilotResponses: copilotResponses, // Add filtered copilot responses\n          sessionComment: sessionComment // Add the comment that contained the session URL\n        };\n      }\n\n      return {\n        hasActiveCopilot: false,\n        commentsCount: 0\n      };\n    } catch (error) {\n      console.debug('Failed to fetch copilot session info:', error);\n      return null;\n    }\n  };\n\n  const handleTriggerWorkflow = async (branchName) => {\n    try {\n      if (!githubService.isAuth()) {\n        console.warn('Authentication required to trigger workflows');\n        return false;\n      }\n\n      // Ensure GitHub Actions service has the current token\n      githubActionsService.setToken(githubService.token);\n      \n      const success = await githubActionsService.triggerWorkflow(branchName);\n      if (success) {\n        // Refresh workflow status after triggering and set up intensive monitoring\n        setTimeout(() => {\n          fetchWorkflowStatus(branchName);\n          setupIntensiveWorkflowRefresh(branchName);\n        }, 2000); // Wait 2 seconds before fetching status\n      }\n      return success;\n    } catch (error) {\n      console.error('Failed to trigger workflow:', error);\n      return false;\n    }\n  };\n\n  const handleApproveWorkflow = async (runId) => {\n    try {\n      if (!githubService.isAuth()) {\n        console.warn('Authentication required to approve workflows');\n        return false;\n      }\n\n      // Ensure GitHub Actions service has the current token\n      githubActionsService.setToken(githubService.token);\n      \n      const success = await githubActionsService.approveWorkflowRun(runId);\n      if (success) {\n        // Immediately refresh workflow status after approval\n        setTimeout(() => {\n          if (branchInfo?.name) {\n            fetchWorkflowStatus(branchInfo.name);\n          }\n        }, 1000); // Reduced delay to 1 second for faster response\n        \n        // Set up intensive monitoring for faster updates after approval\n        if (branchInfo?.name) {\n          setupIntensiveWorkflowRefresh(branchInfo.name);\n        }\n      }\n      return success;\n    } catch (error) {\n      console.error('Failed to approve workflow:', error);\n      return false;\n    }\n  };\n\n  const handleMergePR = async (owner, repo, prNumber) => {\n    if (!githubService.isAuth() || isMergingPR || !canMergePR) {\n      return false;\n    }\n\n    setIsMergingPR(true);\n    try {\n      // Get the PR details to create a meaningful merge commit message\n      const prData = prInfo.find(pr => pr.number === prNumber);\n      const commitTitle = `Merge PR #${prNumber}: ${prData?.title || 'Pull Request'}`;\n      const commitMessage = `Merges pull request #${prNumber}\\n\\n${prData?.body || ''}`.trim();\n\n      const result = await githubService.mergePullRequest(owner, repo, prNumber, {\n        commit_title: commitTitle,\n        commit_message: commitMessage,\n        merge_method: 'merge' // Use merge commit method\n      });\n\n      console.debug('PR merged successfully:', result);\n      \n      // Refresh the PR info to reflect the merged status\n      setTimeout(async () => {\n        try {\n          const refreshedPRs = await fetchPRsForBranch(branchInfo?.name);\n          if (refreshedPRs && refreshedPRs.length > 0) {\n            setPrInfo(refreshedPRs);\n          }\n        } catch (error) {\n          console.debug('Could not refresh PR status after merge:', error);\n        }\n      }, 2000);\n\n      return true;\n    } catch (error) {\n      console.error('Failed to merge PR:', error);\n      \n      // Provide user-friendly error messages based on common failure reasons\n      let userMessage = 'Failed to merge PR';\n      if (error.status === 403) {\n        userMessage = 'Permission denied: Your Personal Access Token may not have sufficient permissions to merge PRs';\n      } else if (error.status === 404) {\n        userMessage = 'PR not found or repository access denied';\n      } else if (error.status === 405) {\n        userMessage = 'Merge not allowed: Check branch protection rules or PR requirements';\n      } else if (error.status === 409) {\n        userMessage = 'Merge conflict: PR cannot be automatically merged';\n      }\n      \n      // You could show this message to the user in a toast/notification\n      console.warn('User guidance:', userMessage);\n      \n      return false;\n    } finally {\n      setIsMergingPR(false);\n    }\n  };\n\n  const handleApprovePR = async (owner, repo, prNumber) => {\n    if (!githubService.isAuth() || isApprovingPR || !canReviewPR) {\n      return false;\n    }\n\n    setIsApprovingPR(true);\n    setApprovalStatus(null); // Clear previous status\n    setApprovalMessage('');\n    \n    try {\n      // Add debugging info\n      console.log('Attempting to approve PR:', { owner, repo, prNumber, comment: newComment.trim() });\n      \n      // Use the main comment from the top comment form for the review\n      const result = await githubService.approvePullRequest(owner, repo, prNumber, newComment.trim());\n      \n      console.log('PR approval result:', result);\n      \n      // Show success message\n      setApprovalStatus('success');\n      setApprovalMessage('PR approved successfully! This should trigger any pending workflows.');\n      \n      // Clear success message after 5 seconds\n      setTimeout(() => {\n        setApprovalStatus(null);\n        setApprovalMessage('');\n      }, 5000);\n      \n      // Clear the comment after successful approval if it was used for the review\n      if (newComment.trim()) {\n        setNewComment('');\n      }\n      \n      // Refresh the PR info to reflect the new review status\n      setTimeout(async () => {\n        try {\n          const refreshedPRs = await fetchPRsForBranch(branchInfo?.name);\n          if (refreshedPRs && refreshedPRs.length > 0) {\n            setPrInfo(refreshedPRs);\n          }\n        } catch (error) {\n          console.debug('Could not refresh PR status after approval:', error);\n        }\n      }, 2000);\n\n      return true;\n    } catch (error) {\n      console.error('Failed to approve PR:', error);\n      console.log('Error details:', {\n        status: error.status,\n        response: error.response?.data,\n        message: error.message,\n        stack: error.stack\n      });\n      \n      // Provide user-friendly error messages\n      let userMessage = 'Failed to approve PR';\n      if (error.status === 403) {\n        userMessage = 'Permission denied: You may not have permission to review this PR';\n      } else if (error.status === 404) {\n        userMessage = 'PR not found or repository access denied';\n      } else if (error.status === 422) {\n        userMessage = 'Cannot review this PR - it may be from the same user or have other restrictions';\n      } else if (error.message) {\n        userMessage = `Failed to approve PR: ${error.message}`;\n      }\n      \n      // Show error message to user\n      setApprovalStatus('error');\n      setApprovalMessage(userMessage);\n      \n      // Clear error message after 8 seconds\n      setTimeout(() => {\n        setApprovalStatus(null);\n        setApprovalMessage('');\n      }, 8000);\n      \n      console.warn('User guidance:', userMessage);\n      return false;\n    } finally {\n      setIsApprovingPR(false);\n    }\n  };\n\n  const handleRequestChanges = async (owner, repo, prNumber) => {\n    if (!githubService.isAuth() || isRequestingChanges || !canReviewPR) {\n      return false;\n    }\n\n    if (!newComment || !newComment.trim()) {\n      alert('Please enter a comment explaining what changes are needed.');\n      return false;\n    }\n\n    setIsRequestingChanges(true);\n    try {\n      const result = await githubService.requestPullRequestChanges(owner, repo, prNumber, newComment.trim());\n      \n      console.debug('Changes requested successfully:', result);\n      \n      // Clear the comment after successful review\n      setNewComment('');\n      \n      // Refresh the PR info to reflect the new review status\n      setTimeout(async () => {\n        try {\n          const refreshedPRs = await fetchPRsForBranch(branchInfo?.name);\n          if (refreshedPRs && refreshedPRs.length > 0) {\n            setPrInfo(refreshedPRs);\n          }\n        } catch (error) {\n          console.debug('Could not refresh PR status after requesting changes:', error);\n        }\n      }, 2000);\n\n      return true;\n    } catch (error) {\n      console.error('Failed to request changes:', error);\n      \n      // Provide user-friendly error messages\n      let userMessage = 'Failed to request changes';\n      if (error.status === 403) {\n        userMessage = 'Permission denied: You may not have permission to review this PR';\n      } else if (error.status === 404) {\n        userMessage = 'PR not found or repository access denied';\n      } else if (error.status === 422) {\n        userMessage = 'Cannot review this PR - it may be from the same user or have other restrictions';\n      }\n      \n      console.warn('User guidance:', userMessage);\n      return false;\n    } finally {\n      setIsRequestingChanges(false);\n    }\n  };\n\n  const handleMarkReadyForReview = async (owner, repo, prNumber) => {\n    if (!githubService.isAuth() || isMarkingReadyForReview || !canMergePR) {\n      return false;\n    }\n\n    setIsMarkingReadyForReview(true);\n    setApprovalStatus(null); // Clear previous status\n    setApprovalMessage('');\n    \n    try {\n      const result = await githubService.markPullRequestReadyForReview(owner, repo, prNumber);\n      \n      console.debug('PR marked as ready for review successfully:', result);\n      \n      // Show success message\n      setApprovalStatus('success');\n      setApprovalMessage(`PR #${prNumber} is now ready for review!`);\n      \n      // Refresh the PR info to reflect the new draft status\n      setTimeout(async () => {\n        try {\n          const refreshedPRs = await fetchPRsForBranch(branchInfo?.name);\n          if (refreshedPRs && refreshedPRs.length > 0) {\n            setPrInfo(refreshedPRs);\n          }\n        } catch (error) {\n          console.debug('Could not refresh PR status after marking ready for review:', error);\n        }\n      }, 2000);\n\n      return true;\n    } catch (error) {\n      console.error('Failed to mark PR as ready for review:', error);\n      \n      // Provide user-friendly error messages\n      let userMessage = 'Failed to mark PR as ready for review';\n      if (error.status === 403) {\n        userMessage = 'Permission denied: You may not have permission to update this PR';\n      } else if (error.status === 404) {\n        userMessage = 'PR not found or repository access denied';\n      } else if (error.status === 422) {\n        userMessage = 'PR cannot be marked as ready for review - it may already be ready or have other restrictions';\n      } else if (error.message) {\n        userMessage = error.message;\n      }\n      \n      setApprovalStatus('error');\n      setApprovalMessage(userMessage);\n      \n      return false;\n    } finally {\n      setIsMarkingReadyForReview(false);\n    }\n  };\n\n  const checkPermissions = async (owner, repo) => {\n    if (!githubService.isAuth()) {\n      setCanComment(false);\n      setCanTriggerWorkflows(false);\n      setCanApproveWorkflows(false);\n      setCanMergePR(false);\n      setCanReviewPR(false);\n      setCanManagePR(false);\n      return;\n    }\n\n    try {\n      // Check comment permissions\n      const commentPermissions = await githubService.checkCommentPermissions(owner, repo);\n      setCanComment(commentPermissions);\n\n      // Set up GitHub Actions service token\n      githubActionsService.setToken(githubService.token);\n\n      // Check workflow permissions\n      const [triggerPermissions, approvalPermissions] = await Promise.all([\n        githubActionsService.checkWorkflowTriggerPermissions(),\n        githubActionsService.checkWorkflowApprovalPermissions()\n      ]);\n\n      setCanTriggerWorkflows(triggerPermissions);\n      setCanApproveWorkflows(approvalPermissions);\n\n      // Check merge and review permissions for the first PR if available\n      if (prInfo && prInfo.length > 0) {\n        const [mergePermissions, reviewPermissions, writePermissions] = await Promise.all([\n          githubService.checkPullRequestMergePermissions(owner, repo, prInfo[0].number),\n          githubService.checkPullRequestReviewPermissions(owner, repo, prInfo[0].number),\n          githubService.checkRepositoryWritePermissions(owner, repo) // For managing PR draft status\n        ]);\n        setCanMergePR(mergePermissions);\n        setCanReviewPR(reviewPermissions);\n        setCanManagePR(writePermissions); // Repository write access for draft/ready status changes\n      } else {\n        setCanMergePR(false);\n        setCanReviewPR(false);\n        setCanManagePR(false);\n      }\n    } catch (error) {\n      console.debug('Error checking permissions:', error);\n      setCanComment(false);\n      setCanTriggerWorkflows(false);\n      setCanApproveWorkflows(false);\n      setCanMergePR(false);\n      setCanReviewPR(false);\n      setCanManagePR(false);\n    }\n  };\n\n  const setupCommentAutoRefresh = (owner, repo, prNumber) => {\n    // Clear any existing interval\n    if (commentRefreshIntervalRef.current) {\n      clearInterval(commentRefreshIntervalRef.current);\n    }\n\n    // Set up new interval to refresh comments every 5 seconds\n    commentRefreshIntervalRef.current = setInterval(async () => {\n      try {\n        const latestComments = await fetchCommentsForPR(owner, repo, prNumber, 1, false, false);\n        \n        // Check if there are new comments compared to what we have\n        if (latestComments.length > 0 && comments.length > 0) {\n          const latestId = latestComments[0].id;\n          const currentLatestId = comments[0].id;\n          \n          if (latestId !== currentLatestId) {\n            console.debug('New comments detected during auto-refresh');\n            // Don't reset the page, just refresh the current view\n          }\n        }\n      } catch (error) {\n        console.debug('Failed to auto-refresh comments:', error);\n      }\n    }, 5000); // 5 seconds\n  };\n\n  const handleManualRefreshComments = async () => {\n    if (!prInfo || prInfo.length === 0 || isRefreshingComments) return;\n    \n    setIsRefreshingComments(true);\n    try {\n      const owner = repositoryConfig.getOwner();\n      const repo = 'sgex';\n      const pr = prInfo[0];\n      \n      console.debug('Manual refresh of comments requested');\n      await fetchCommentsForPR(owner, repo, pr.number, 1, false, true);\n      \n      // Brief success feedback\n      setTimeout(() => setIsRefreshingComments(false), 1000);\n    } catch (error) {\n      console.error('Failed to manually refresh comments:', error);\n      setIsRefreshingComments(false);\n    }\n  };\n\n  const setupWorkflowAutoRefresh = (branchName) => {\n    // Clear any existing interval\n    if (workflowRefreshIntervalRef.current) {\n      clearInterval(workflowRefreshIntervalRef.current);\n    }\n\n    // Set up new interval to refresh workflow status every 30 seconds\n    workflowRefreshIntervalRef.current = setInterval(async () => {\n      try {\n        const previousStatus = workflowStatus?.status;\n        await fetchWorkflowStatus(branchName);\n        \n        // Log status changes for debugging\n        if (workflowStatus?.status && workflowStatus.status !== previousStatus) {\n          console.debug(`Workflow status changed from ${previousStatus} to ${workflowStatus.status}`);\n        }\n      } catch (error) {\n        console.debug('Failed to auto-refresh workflow status:', error);\n      }\n    }, 30000); // 30 seconds for more dynamic updates\n  };\n\n  const setupIntensiveWorkflowRefresh = (branchName) => {\n    // Clear any existing interval\n    if (workflowRefreshIntervalRef.current) {\n      clearInterval(workflowRefreshIntervalRef.current);\n    }\n\n    let refreshCount = 0;\n    const maxIntensiveRefreshes = 6; // 6 refreshes × 5 seconds = 30 seconds of intensive monitoring\n\n    // Set up intensive refresh for 30 seconds after workflow actions\n    workflowRefreshIntervalRef.current = setInterval(async () => {\n      try {\n        const previousStatus = workflowStatus?.status;\n        await fetchWorkflowStatus(branchName);\n        \n        refreshCount++;\n        \n        // Log status changes for debugging\n        if (workflowStatus?.status && workflowStatus.status !== previousStatus) {\n          console.debug(`Workflow status changed from ${previousStatus} to ${workflowStatus.status}`);\n        }\n        \n        // After intensive monitoring period, switch back to normal refresh rate\n        if (refreshCount >= maxIntensiveRefreshes) {\n          setupWorkflowAutoRefresh(branchName);\n        }\n      } catch (error) {\n        console.debug('Failed to auto-refresh workflow status:', error);\n      }\n    }, 5000); // 5 seconds for intensive monitoring\n  };\n\n  const loadMoreComments = async () => {\n    if (!prInfo || prInfo.length === 0 || commentsLoading) return;\n    \n    const owner = repositoryConfig.getOwner();\n    const repo = 'sgex';\n    const pr = prInfo[0];\n    \n    // If we have more comments already loaded, just show more of them\n    if (displayedCommentsCount < allComments.length) {\n      const newDisplayCount = Math.min(allComments.length, displayedCommentsCount + 5);\n      setDisplayedCommentsCount(newDisplayCount);\n      setComments(allComments.slice(0, newDisplayCount));\n      return;\n    }\n    \n    // If we've shown all loaded comments and there might be more on the server, fetch more\n    if (hasMoreComments) {\n      const nextPage = commentsPage + 1;\n      setCommentsPage(nextPage);\n      await fetchCommentsForPR(owner, repo, pr.number, nextPage, true);\n    }\n  };\n\n  const handleCommentToggle = (commentId) => {\n    const newExpanded = new Set(expandedComments);\n    if (newExpanded.has(commentId)) {\n      newExpanded.delete(commentId);\n    } else {\n      newExpanded.add(commentId);\n    }\n    setExpandedComments(newExpanded);\n  };\n\n  const handleCommentSubmit = async () => {\n    if (!newComment.trim() || !githubService.isAuth() || submittingComment || !canComment) return;\n    \n    try {\n      setSubmittingComment(true);\n      setCommentSubmissionStatus('submitting');\n      const owner = repositoryConfig.getOwner();\n      const repo = 'sgex';\n      \n      // Add detailed logging for debugging\n      console.debug('Submitting comment:', {\n        authenticated: githubService.isAuth(),\n        hasToken: !!githubService.token,\n        commentLength: newComment.trim().length,\n        prInfo: prInfo?.length || 0,\n        canComment\n      });\n      \n      if (prInfo && prInfo.length > 0) {\n        const pr = prInfo[0]; // Use first PR for comment submission\n        console.debug('Submitting to PR:', pr.number);\n        \n        try {\n          const submittedComment = await githubService.createPullRequestComment(owner, repo, pr.number, newComment.trim());\n          console.debug('Comment submitted successfully:', submittedComment);\n          \n          // Set success status\n          setCommentSubmissionStatus('success');\n          \n          // Refresh comments after successful submission - multiple attempts for reliability\n          await fetchCommentsForPR(owner, repo, pr.number, 1, false, true);\n          \n          // Mark the newly added comment for glow effect\n          if (submittedComment && submittedComment.id) {\n            setNewlyAddedCommentId(submittedComment.id);\n            // Remove glow effect after 3 seconds\n            setTimeout(() => setNewlyAddedCommentId(null), 3000);\n          }\n          \n          setNewComment('');\n          setShowMarkdownEditor(false); // Close markdown editor after successful submission\n          \n          // Additional refresh after a short delay to ensure GitHub API consistency\n          setTimeout(async () => {\n            try {\n              await fetchCommentsForPR(owner, repo, pr.number, 1, false, false);\n              console.debug('Secondary comment refresh completed after comment submission');\n            } catch (error) {\n              console.debug('Secondary comment refresh failed:', error);\n            }\n          }, 2000); // 2 second delay\n          \n          // Clear success status after 3 seconds\n          setTimeout(() => setCommentSubmissionStatus(null), 3000);\n        } catch (submitError) {\n          console.error('GitHub API comment submission error:', {\n            error: submitError,\n            message: submitError.message,\n            status: submitError.status,\n            response: submitError.response\n          });\n          \n          // More specific error messages based on the error type\n          let errorMessage = 'Failed to submit comment. ';\n          if (submitError.message.includes('401')) {\n            errorMessage += 'Authentication failed - please check your token.';\n          } else if (submitError.message.includes('403') || submitError.message.includes('Resource not accessible by personal access token')) {\n            errorMessage += 'Your personal access token does not have permission to create comments. Please use a token with \"repo\" or \"public_repo\" scope.';\n            // Disable comment form for this session since we know the token doesn't have permissions\n            setCanComment(false);\n          } else if (submitError.message.includes('404')) {\n            errorMessage += 'Pull request not found.';\n          } else if (submitError.message.includes('422')) {\n            errorMessage += 'Invalid comment format.';\n          } else {\n            errorMessage += 'Please try again.';\n          }\n          \n          setCommentSubmissionStatus({ type: 'error', message: errorMessage });\n          // Clear error status after 7 seconds for longer messages\n          setTimeout(() => setCommentSubmissionStatus(null), 7000);\n        }\n      } else {\n        console.warn('No PR info available for comment submission');\n        setCommentSubmissionStatus({ type: 'error', message: 'No pull request found to comment on.' });\n        setTimeout(() => setCommentSubmissionStatus(null), 5000);\n      }\n    } catch (error) {\n      console.error('Unexpected error during comment submission:', error);\n      setCommentSubmissionStatus({ type: 'error', message: 'Unexpected error occurred. Please try again.' });\n      setTimeout(() => setCommentSubmissionStatus(null), 5000);\n    } finally {\n      setSubmittingComment(false);\n    }\n  };\n\n  const truncateDescription = (text, maxLines = 6) => {\n    if (!text) return '';\n    const lines = text.split('\\n');\n    if (lines.length <= maxLines) return text;\n    return lines.slice(0, maxLines).join('\\n') + '...';\n  };\n\n  const handleDescriptionToggle = () => {\n    setExpandedDescription(!expandedDescription);\n  };\n\n  const convertGitHubNotationToLinks = (content) => {\n    if (!content || typeof content !== 'string') return content || '';\n    \n    // Get current repository context\n    const owner = repositoryConfig.getOwner();\n    const repo = 'sgex';\n    const baseUrl = `https://github.com/${owner}/${repo}`;\n    \n    let processedContent = content;\n    \n    // Convert cross-repository references first (org/repo#123)\n    processedContent = processedContent.replace(\n      /\\b([a-zA-Z0-9_.-]+)\\/([a-zA-Z0-9_.-]+)#(\\d+)\\b/g,\n      (match, org, repository, number) => `[${org}/${repository}#${number}](https://github.com/${org}/${repository}/issues/${number})`\n    );\n    \n    // Convert issue/PR references with action words (Fixes #123, Closes #456, etc.)\n    processedContent = processedContent.replace(\n      /\\b(Fixes?|Closes?|Resolves?)\\s+#(\\d+)\\b/gi,\n      (match, action, number) => `${action} [#${number}](${baseUrl}/issues/${number})`\n    );\n    \n    // Convert standalone issue/PR references (#123)\n    // Avoid converting if already part of a markdown link or cross-repo reference\n    processedContent = processedContent.replace(\n      /#(\\d+)\\b/g,\n      (match, number, offset, string) => {\n        // Don't convert if it's already part of a markdown link\n        const beforeMatch = string.substring(Math.max(0, offset - 20), offset);\n        const afterMatch = string.substring(offset, offset + match.length + 10);\n        \n        // Skip if inside a markdown link\n        if (beforeMatch.includes('[') && !beforeMatch.includes(']')) {\n          return match;\n        }\n        \n        // Skip if it's part of a cross-repo reference or already a link\n        if (beforeMatch.includes('/') || afterMatch.includes('](')) {\n          return match;\n        }\n        \n        return `[#${number}](${baseUrl}/issues/${number})`;\n      }\n    );\n    \n    // Convert user mentions (@username)\n    processedContent = processedContent.replace(\n      /@([a-zA-Z0-9_-]+)/g,\n      (match, username, offset, string) => {\n        // Don't convert if it's already part of a markdown link\n        const beforeMatch = string.substring(Math.max(0, offset - 10), offset);\n        if (beforeMatch.includes('[') && !beforeMatch.includes(']')) {\n          return match; // Skip if inside a markdown link\n        }\n        return `[@${username}](https://github.com/${username})`;\n      }\n    );\n    \n    // Convert commit SHAs (7+ hex characters)\n    processedContent = processedContent.replace(\n      /\\b([a-f0-9]{7,40})\\b/gi,\n      (match, sha) => {\n        // Only convert if it looks like a commit SHA (all lowercase hex)\n        if (/^[a-f0-9]+$/i.test(sha) && sha.length >= 7) {\n          return `[\\`${sha.substring(0, 7)}\\`](${baseUrl}/commit/${sha})`;\n        }\n        return match;\n      }\n    );\n    \n    return processedContent;\n  };\n\n  const processMarkdownContent = (content) => {\n    if (!content || typeof content !== 'string') return content || '';\n    \n    // Convert GitHub notation to markdown links\n    // ReactMarkdown will handle the safe conversion from markdown to HTML\n    return convertGitHubNotationToLinks(content);\n  };\n\n  const convertGitHubNotationToHtml = (content) => {\n    if (!content || typeof content !== 'string') return content || '';\n    \n    // Get current repository context\n    const owner = repositoryConfig.getOwner();\n    const repo = 'sgex';\n    const baseUrl = `https://github.com/${owner}/${repo}`;\n    \n    let processedContent = content;\n    \n    // Convert cross-repository references first (org/repo#123)\n    processedContent = processedContent.replace(\n      /\\b([a-zA-Z0-9_.-]+)\\/([a-zA-Z0-9_.-]+)#(\\d+)\\b/g,\n      (match, org, repository, number) => `<a href=\"https://github.com/${org}/${repository}/issues/${number}\" target=\"_blank\" rel=\"noopener noreferrer\">${org}/${repository}#${number}</a>`\n    );\n    \n    // Convert issue/PR references with action words (Fixes #123, Closes #456, etc.)\n    processedContent = processedContent.replace(\n      /\\b(Fixes?|Closes?|Resolves?)\\s+#(\\d+)\\b/gi,\n      (match, action, number) => `${action} <a href=\"${baseUrl}/issues/${number}\" target=\"_blank\" rel=\"noopener noreferrer\">#${number}</a>`\n    );\n    \n    // Convert standalone issue/PR references (#123)\n    // Avoid converting if already part of an HTML link or cross-repo reference\n    processedContent = processedContent.replace(\n      /#(\\d+)\\b/g,\n      (match, number, offset, string) => {\n        // Don't convert if it's already part of an HTML link\n        const beforeMatch = string.substring(Math.max(0, offset - 20), offset);\n        const afterMatch = string.substring(offset, offset + match.length + 10);\n        \n        // Skip if inside an HTML link\n        if (beforeMatch.includes('<a ') && !beforeMatch.includes('</a>')) {\n          return match;\n        }\n        \n        // Skip if it's part of a cross-repo reference or already a link\n        if (beforeMatch.includes('/') || afterMatch.includes('</a>')) {\n          return match;\n        }\n        \n        return `<a href=\"${baseUrl}/issues/${number}\" target=\"_blank\" rel=\"noopener noreferrer\">#${number}</a>`;\n      }\n    );\n    \n    // Convert user mentions (@username)\n    processedContent = processedContent.replace(\n      /@([a-zA-Z0-9_-]+)/g,\n      (match, username, offset, string) => {\n        // Don't convert if it's already part of an HTML link\n        const beforeMatch = string.substring(Math.max(0, offset - 10), offset);\n        if (beforeMatch.includes('<a ') && !beforeMatch.includes('</a>')) {\n          return match; // Skip if inside an HTML link\n        }\n        return `<a href=\"https://github.com/${username}\" target=\"_blank\" rel=\"noopener noreferrer\">@${username}</a>`;\n      }\n    );\n    \n    // Convert commit SHAs (7+ hex characters)\n    processedContent = processedContent.replace(\n      /\\b([a-f0-9]{7,40})\\b/gi,\n      (match, sha) => {\n        // Only convert if it looks like a commit SHA (all lowercase hex)\n        if (/^[a-f0-9]+$/i.test(sha) && sha.length >= 7) {\n          return `<a href=\"${baseUrl}/commit/${sha}\" target=\"_blank\" rel=\"noopener noreferrer\"><code>${sha.substring(0, 7)}</code></a>`;\n        }\n        return match;\n      }\n    );\n    \n    return processedContent;\n  };\n\n  const sanitizeHtmlContent = (content) => {\n    if (!content || !DOMPurify || typeof content !== 'string') return content || '';\n    \n    // Check if DOMPurify has the sanitize method\n    if (typeof DOMPurify.sanitize !== 'function') {\n      console.warn('DOMPurify.sanitize is not available, returning unsanitized content');\n      return content;\n    }\n    \n    // Configure DOMPurify to allow HTML table elements while maintaining security\n    const sanitizedContent = DOMPurify.sanitize(content, {\n      ALLOWED_TAGS: [\n        // Standard markdown elements\n        'p', 'br', 'strong', 'b', 'em', 'i', 'code', 'pre', 'blockquote',\n        'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ul', 'ol', 'li', 'a', 'img',\n        'hr', 'del', 'ins', 'mark', 'small', 'sub', 'sup',\n        // HTML table elements\n        'table', 'thead', 'tbody', 'tfoot', 'tr', 'th', 'td',\n        // Divs and spans for table styling\n        'div', 'span'\n      ],\n      ALLOWED_ATTR: [\n        'href', 'src', 'alt', 'title', 'class', 'id', 'style',\n        'align', 'colspan', 'rowspan', 'width', 'height',\n        'target', 'rel'\n      ],\n      KEEP_CONTENT: true,\n      ALLOW_DATA_ATTR: false\n    });\n    \n    return sanitizedContent;\n  };\n\n  const truncateComment = (text, maxLength = 200) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const handleBadgeClick = async (pr, event) => {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    \n    if (pr && pr.html_url && !isExpanded) {\n      // If not expanded, expand to show comments instead of immediately opening URL\n      setIsExpanded(true);\n      setIsSticky(true);\n      \n      // Fetch comments for this PR\n      const owner = repositoryConfig.getOwner();\n      const repo = 'sgex';\n      await fetchCommentsForPR(owner, repo, pr.number, 1, false);\n      \n      // Check permissions\n      await checkPermissions(owner, repo);\n      \n      // Check if user is collaborator and auto-add @copilot\n      if (githubService.isAuth() && canComment) {\n        try {\n          const hasWriteAccess = await githubService.checkRepositoryWritePermissions(owner, repo);\n          if (hasWriteAccess && !newComment.includes('@copilot')) {\n            setNewComment('@copilot ');\n          }\n        } catch (error) {\n          console.debug('Could not check collaborator status:', error);\n        }\n      }\n\n      // Check for copilot session activity\n      if (githubService.isAuth()) {\n        try {\n          setIsRefreshingSession(true);\n          const copilotInfo = await fetchCopilotSessionInfo(owner, repo, pr.number);\n          setCopilotSessionInfo(copilotInfo);\n          setLastSessionCheck(new Date());\n          setTimeout(() => setIsRefreshingSession(false), 500); // Brief feedback\n        } catch (error) {\n          console.debug('Could not fetch copilot session info:', error);\n          setIsRefreshingSession(false);\n        }\n      }\n      \n      // Fetch workflow status for the current branch\n      if (branchInfo?.name) {\n        await fetchWorkflowStatus(branchInfo.name);\n        // Set up auto-refresh for workflow status\n        setupWorkflowAutoRefresh(branchInfo.name);\n      }\n\n      // Set up auto-refresh for comments\n      setupCommentAutoRefresh(owner, repo, pr.number);\n    } else if (pr && pr.html_url && isExpanded) {\n      // If already expanded, open the PR URL\n      window.open(pr.html_url, '_blank');\n    }\n  };\n\n  const handleMouseEnter = () => {\n    if (!isSticky && (!prInfo || prInfo.length === 0)) {\n      setIsExpanded(true);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!isSticky && (!prInfo || prInfo.length === 0)) {\n      setIsExpanded(false);\n    }\n  };\n\n  const handleBadgeToggle = async (event) => {\n    // Only allow toggle for branch-only badges (no PRs)\n    if (prInfo && prInfo.length > 0) return;\n    \n    // Prevent event from bubbling up\n    event.stopPropagation();\n    event.preventDefault();\n    \n    if (isSticky) {\n      // If already sticky, collapse and remove sticky state\n      setIsSticky(false);\n      setIsExpanded(false);\n    } else {\n      // Make it sticky and ensure it's expanded\n      setIsSticky(true);\n      setIsExpanded(true);\n      \n      // Fetch workflow status for the current branch\n      if (branchInfo?.name) {\n        await fetchWorkflowStatus(branchInfo.name);\n        // Set up auto-refresh for workflow status\n        setupWorkflowAutoRefresh(branchInfo.name);\n      }\n    }\n  };\n\n  const truncateTitle = (title, maxLength = 30) => {\n    if (title.length <= maxLength) return title;\n    return title.substring(0, maxLength) + '...';\n  };\n\n  // Don't render anything if loading, error, or not a preview branch\n  if (loading || error || !branchInfo) {\n    return null;\n  }\n\n  // Render multiple badges if there are multiple PRs\n  return (\n    <div className=\"preview-badge-container\" ref={expandedRef}>\n      {prInfo && prInfo.length > 0 ? (\n        // Multiple PR badges - each one can be expanded to show comments\n        <>\n          {prInfo.map((pr, index) => (\n            <div \n              key={pr.id}\n              className={`preview-badge clickable ${isExpanded ? 'expanded' : ''} ${isSticky ? 'sticky' : ''}`}\n              onClick={(event) => handleBadgeClick(pr, event)}\n              title={isExpanded ? `Click to view PR: ${pr.title}` : `Click to expand for comments: ${pr.title}`}\n            >\n              <div className=\"badge-content\">\n                <span className=\"badge-label\">PR:</span>\n                <span className=\"badge-branch\">#{pr.number}</span>\n                <span className=\"badge-separator\">|</span>\n                <span className=\"badge-pr-title\">{truncateTitle(pr.title)}</span>\n                <span className=\"badge-expand-icon\">{isExpanded ? '▼' : '▶'}</span>\n              </div>\n            </div>\n          ))}\n          \n          {/* Show expanded panel for PR comments */}\n          {isExpanded && (\n            <div className=\"preview-badge-expanded\">\n              <div className=\"expanded-header\">\n                <div className=\"pr-info\">\n                  <h3>\n                    <a href={prInfo[0].html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      #{prInfo[0].number}: {prInfo[0].title}\n                    </a>\n                  </h3>\n                  <div className=\"pr-meta\">\n                    <span className=\"pr-state\" data-state={prInfo[0].state}>{prInfo[0].state}</span>\n                    <span className=\"pr-author\">\n                      by <a \n                        href={prInfo[0].user.html_url} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className=\"pr-author-link\"\n                      >\n                        {prInfo[0].user.login}\n                      </a>\n                    </span>\n                  </div>\n                </div>\n                <button \n                  className=\"close-button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setIsExpanded(false);\n                    setIsSticky(false);\n                  }}\n                  title=\"Close expanded view\"\n                >\n                  ×\n                </button>\n              </div>\n\n              {/* Status notification for closed/merged PRs */}\n              {prInfo[0].state !== 'open' && (\n                <div className={`pr-status-notification pr-status-${prInfo[0].state}`}>\n                  <div className=\"status-icon\">\n                    {prInfo[0].state === 'closed' && '❌'}\n                    {prInfo[0].state === 'merged' && '🔀'}\n                  </div>\n                  <div className=\"status-message\">\n                    <strong>\n                      {prInfo[0].state === 'closed' && 'This pull request is closed'}\n                      {prInfo[0].state === 'merged' && 'This pull request was merged'}\n                    </strong>\n                    <div className=\"status-details\">\n                      {prInfo[0].state === 'closed' && 'The pull request has been closed without merging.'}\n                      {prInfo[0].state === 'merged' && 'The changes have been successfully merged into the target branch.'}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Comment form for authenticated users - MOVED TO TOP */}\n              {githubService.isAuth() && (\n                <div className=\"comment-form\">\n                  <h4>Add Comment</h4>\n                  {!canComment && (\n                    <div className=\"comment-disabled-notice\">\n                      <strong>💡 Comments disabled:</strong> Your personal access token does not have permission to create comments. \n                      Please use a token with \"repo\" or \"public_repo\" scope to enable commenting.\n                    </div>\n                  )}\n                  {commentSubmissionStatus && (\n                    <div className={`comment-status comment-status-${typeof commentSubmissionStatus === 'string' ? commentSubmissionStatus : commentSubmissionStatus.type}`}>\n                      {typeof commentSubmissionStatus === 'string' ? (\n                        <>\n                          {commentSubmissionStatus === 'submitting' && '⏳ Submitting comment...'}\n                          {commentSubmissionStatus === 'success' && '✅ Comment submitted successfully!'}\n                        </>\n                      ) : (\n                        <>\n                          {commentSubmissionStatus.type === 'error' && `❌ ${commentSubmissionStatus.message}`}\n                        </>\n                      )}\n                    </div>\n                  )}\n                  {!showMarkdownEditor ? (\n                    <div className=\"comment-form-simple\">\n                      <textarea\n                        value={newComment}\n                        onChange={(e) => setNewComment(e.target.value)}\n                        placeholder={canComment ? \"Write a comment... (Click 'Advanced Editor' for markdown preview)\" : \"Comment form disabled - token permissions required\"}\n                        rows={3}\n                        disabled={submittingComment || !canComment}\n                      />\n                      <div className=\"comment-form-actions\">\n                        <button\n                          className=\"advanced-editor-btn\"\n                          onClick={() => setShowMarkdownEditor(true)}\n                          disabled={submittingComment || !canComment}\n                        >\n                          📝 Advanced Editor\n                        </button>\n                        <button\n                          className=\"submit-comment\"\n                          onClick={handleCommentSubmit}\n                          disabled={!newComment.trim() || submittingComment || !canComment}\n                        >\n                          {submittingComment ? 'Submitting...' : 'Comment'}\n                        </button>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"comment-form-advanced\">\n                      <div className=\"markdown-editor-container\">\n                        <Suspense fallback={<div className=\"loading-spinner\">Loading editor...</div>}>\n                          <MDEditor\n                            value={newComment}\n                            onChange={(val) => setNewComment(val || '')}\n                            preview=\"edit\"\n                            height={300}\n                            visibleDragBar={false}\n                            data-color-mode=\"light\"\n                            hideToolbar={submittingComment || !canComment}\n                          />\n                        </Suspense>\n                      </div>\n                      <div className=\"comment-form-actions\">\n                        <button\n                          className=\"btn-secondary\"\n                          onClick={() => setShowMarkdownEditor(false)}\n                          disabled={submittingComment || !canComment}\n                        >\n                          Simple Editor\n                        </button>\n                        <button\n                          className=\"submit-comment\"\n                          onClick={handleCommentSubmit}\n                          disabled={!newComment.trim() || submittingComment || !canComment}\n                        >\n                          {submittingComment ? 'Submitting...' : 'Comment'}\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {prInfo[0].body && (\n                <div className=\"pr-description\">\n                  <h4>Description</h4>\n                  <div className=\"pr-body\">\n                    <div className=\"markdown-content\">\n                      {ReactMarkdown && rehypeRaw ? (\n                        <ReactMarkdown \n                          rehypePlugins={[rehypeRaw]}\n                          components={markdownComponents}\n                        >\n                          {processMarkdownContent(expandedDescription ? prInfo[0].body : truncateDescription(prInfo[0].body))}\n                        </ReactMarkdown>\n                      ) : (\n                        <div \n                          style={{ whiteSpace: 'pre-wrap' }}\n                          dangerouslySetInnerHTML={{\n                            __html: sanitizeHtmlContent(convertGitHubNotationToHtml(expandedDescription ? prInfo[0].body : truncateDescription(prInfo[0].body)))\n                          }}\n                        />\n                      )}\n                    </div>\n                    {prInfo[0].body.split('\\n').length > 6 && (\n                      <button \n                        className=\"description-toggle\"\n                        onClick={handleDescriptionToggle}\n                      >\n                        {expandedDescription ? 'Show less' : 'Show more'}\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* View Toggle Switch */}\n              <div className=\"pr-view-toggle\">\n                <div className=\"toggle-switch\">\n                  <button\n                    className={`toggle-option ${!showWorkflowView ? 'active' : ''}`}\n                    onClick={() => setShowWorkflowView(false)}\n                  >\n                    💬 Discussion\n                  </button>\n                  <button\n                    className={`toggle-option ${showWorkflowView ? 'active' : ''}`}\n                    onClick={() => setShowWorkflowView(true)}\n                  >\n                    ⚙️ Workflow Dashboard\n                  </button>\n                </div>\n              </div>\n\n              {/* Conditional Content Based on Toggle */}\n              {showWorkflowView ? (\n                /* Workflow Dashboard View */\n                branchInfo?.name && (\n                  <div className=\"workflow-status-wrapper\">\n                    <WorkflowDashboard\n                      branchName={branchInfo.name}\n                      githubActionsService={githubActionsService}\n                      isAuthenticated={githubService.isAuth()}\n                      canTriggerWorkflows={canTriggerWorkflows}\n                      canApproveWorkflows={canApproveWorkflows}\n                      onWorkflowAction={handleWorkflowDashboardAction}\n                      // Pass PR actions data\n                      prInfo={prInfo}\n                      canMergePR={canMergePR}\n                      canManagePR={canManagePR}\n                      canReviewPR={canReviewPR}\n                      isMergingPR={isMergingPR}\n                      isApprovingPR={isApprovingPR}\n                      isRequestingChanges={isRequestingChanges}\n                      isMarkingReadyForReview={isMarkingReadyForReview}\n                      approvalStatus={approvalStatus}\n                      approvalMessage={approvalMessage}\n                      newComment={newComment}\n                      onMergePR={handleMergePR}\n                      onApprovePR={handleApprovePR}\n                      onRequestChanges={handleRequestChanges}\n                      onMarkReadyForReview={handleMarkReadyForReview}\n                    />\n                  </div>\n                )\n              ) : (\n                /* Discussion View */\n                <>\n                  {/* GitHub Copilot Session Section */}\n                  {copilotSessionInfo && (\n                    <div className=\"copilot-session-wrapper\">\n                      <h4>🤖 GitHub Copilot Activity</h4>\n                      {copilotSessionInfo.hasActiveCopilot ? (\n                        <div className=\"copilot-session-active\">\n                          <div className=\"copilot-session-info\">\n                            <span className=\"copilot-status\">✅ Active Copilot session detected</span>\n                            {isWatchingSession && (\n                              <div className=\"copilot-watching-wrapper\">\n                                <span className=\"copilot-watching-status\">\n                                  {isRefreshingSession ? (\n                                    <>🔄 Refreshing session... (#{sessionRefreshCount})</>\n                                  ) : (\n                                    <>🔄 Watching for updates (every 10s)</>\n                                  )}\n                                </span>\n                                {lastSessionCheck && (\n                                  <span className=\"copilot-last-check\">\n                                    Last checked: {formatDate(lastSessionCheck)}\n                                  </span>\n                                )}\n                                {sessionRefreshCount > 0 && (\n                                  <span className=\"copilot-refresh-count\">\n                                    Refreshes: {sessionRefreshCount}\n                                  </span>\n                                )}\n                              </div>\n                            )}\n                            <span className=\"copilot-activity\">\n                              Last activity: {formatDate(copilotSessionInfo.latestActivity)}\n                            </span>\n                            <span className=\"copilot-comments-count\">\n                              {copilotSessionInfo.commentsCount} copilot comment(s) found\n                            </span>\n                          </div>\n                          <div className=\"copilot-session-actions\">\n                            <button\n                              className=\"copilot-session-toggle\"\n                              onClick={handleWatchSessionToggle}\n                            >\n                              {isWatchingSession ? '⏹️ Stop Watching' : '👁️ Watch Session'}\n                            </button>\n                            <a \n                              href={copilotSessionInfo.sessionUrl} \n                              target=\"_blank\" \n                              rel=\"noopener noreferrer\"\n                              className=\"copilot-session-link\"\n                            >\n                              🔗 Open Session\n                            </a>\n                            {copilotSessionInfo.commentUrl && (\n                              <a \n                                href={copilotSessionInfo.commentUrl} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"copilot-comment-link\"\n                              >\n                                💬 Latest Comment\n                              </a>\n                            )}\n                          </div>\n                          {showCopilotSession && copilotSessionInfo && (\n                            <div className=\"copilot-session-modal\">\n                              <div className=\"copilot-session-header\">\n                                <strong>🤖 Copilot Session Activity</strong>\n                                <span className=\"copilot-comment-date\">\n                                  {copilotSessionInfo.sessionUrl && (\n                                    <a \n                                      href={copilotSessionInfo.sessionUrl}\n                                      target=\"_blank\"\n                                      rel=\"noopener noreferrer\"\n                                      className=\"session-url-link\"\n                                    >\n                                      🔗 View Full Session\n                                    </a>\n                                  )}\n                                </span>\n                              </div>\n                              <div className=\"copilot-session-content\">\n                                {copilotSessionInfo.copilotResponses && copilotSessionInfo.copilotResponses.length > 0 ? (\n                                  <div className=\"copilot-responses\">\n                                    <div className=\"copilot-responses-header\">\n                                      <strong>Recent Copilot Responses ({copilotSessionInfo.copilotResponses.length})</strong>\n                                    </div>\n                                    {copilotSessionInfo.copilotResponses.slice(0, 3).map((response, index) => (\n                                      <div key={response.id} className=\"copilot-response-item\">\n                                        <div className=\"copilot-response-meta\">\n                                          <img \n                                            src={response.user.avatar_url} \n                                            alt={response.user.login}\n                                            className=\"copilot-response-avatar\"\n                                          />\n                                          <a \n                                            href={response.user.html_url}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            className=\"copilot-response-username\"\n                                          >\n                                            {response.user.login}\n                                          </a>\n                                          <span className=\"copilot-response-date\">\n                                            {formatDate(response.created_at)}\n                                          </span>\n                                          {index === 0 && <span className=\"copilot-latest-badge\">Latest</span>}\n                                        </div>\n                                        <div className=\"copilot-response-body\">\n                                          <div className=\"markdown-content\">\n                                            {ReactMarkdown && rehypeRaw ? (\n                                              <ReactMarkdown \n                                                rehypePlugins={[rehypeRaw]}\n                                                components={markdownComponents}\n                                              >{processMarkdownContent(response.body.length > 300 ? response.body.substring(0, 300) + '...' : response.body)}</ReactMarkdown>\n                                            ) : (\n                                              <div \n                                                style={{ whiteSpace: 'pre-wrap' }}\n                                                dangerouslySetInnerHTML={{\n                                                  __html: sanitizeHtmlContent(convertGitHubNotationToHtml(response.body.length > 300 ? response.body.substring(0, 300) + '...' : response.body))\n                                                }}\n                                              />\n                                            )}\n                                          </div>\n                                          {response.body.length > 300 && (\n                                            <a \n                                              href={`${repositoryConfig.getGitHubUrl()}/pull/${prInfo[0].number}#issuecomment-${response.id}`}\n                                              target=\"_blank\"\n                                              rel=\"noopener noreferrer\"\n                                              className=\"read-full-response\"\n                                            >\n                                              Read full response →\n                                            </a>\n                                          )}\n                                        </div>\n                                      </div>\n                                    ))}\n                                    {copilotSessionInfo.copilotResponses.length > 3 && (\n                                      <div className=\"copilot-more-responses\">\n                                        <a \n                                          href={copilotSessionInfo.sessionUrl}\n                                          target=\"_blank\"\n                                          rel=\"noopener noreferrer\"\n                                          className=\"view-more-responses\"\n                                        >\n                                          View {copilotSessionInfo.copilotResponses.length - 3} more responses in session →\n                                        </a>\n                                      </div>\n                                    )}\n                                  </div>\n                                ) : copilotSessionInfo.latestComment ? (\n                                  <div className=\"copilot-fallback-content\">\n                                    <div className=\"copilot-comment-author\">\n                                      <img \n                                        src={copilotSessionInfo.latestComment.user.avatar_url} \n                                        alt={copilotSessionInfo.latestComment.user.login}\n                                        className=\"copilot-avatar\"\n                                      />\n                                      <a \n                                        href={copilotSessionInfo.latestComment.user.html_url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className=\"copilot-username\"\n                                      >\n                                        {copilotSessionInfo.latestComment.user.login}\n                                      </a>\n                                      <span className=\"copilot-activity-date\">\n                                        {formatDate(copilotSessionInfo.latestComment.created_at)}\n                                      </span>\n                                    </div>\n                                    <div className=\"copilot-comment-body\">\n                                      <div className=\"markdown-content\">\n                                        {ReactMarkdown && rehypeRaw ? (\n                                          <ReactMarkdown \n                                            rehypePlugins={[rehypeRaw]}\n                                            components={markdownComponents}\n                                          >{processMarkdownContent(copilotSessionInfo.latestComment.body)}</ReactMarkdown>\n                                        ) : (\n                                          <div \n                                            style={{ whiteSpace: 'pre-wrap' }}\n                                            dangerouslySetInnerHTML={{\n                                              __html: sanitizeHtmlContent(convertGitHubNotationToHtml(copilotSessionInfo.latestComment.body))\n                                            }}\n                                          />\n                                        )}\n                                      </div>\n                                    </div>\n                                  </div>\n                                ) : (\n                                  <div className=\"no-copilot-activity\">\n                                    <p>No copilot responses found in recent activity.</p>\n                                    <p>Session URL: <a href={copilotSessionInfo.sessionUrl} target=\"_blank\" rel=\"noopener noreferrer\">{copilotSessionInfo.sessionUrl}</a></p>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"copilot-session-inactive\">\n                          <span className=\"copilot-status\">\n                            {isRefreshingSession ? (\n                              <>🔄 Checking for active Copilot session...</>\n                            ) : (\n                              <>⚪ No active Copilot session detected</>\n                            )}\n                          </span>\n                          {lastSessionCheck && (\n                            <span className=\"copilot-last-check\">\n                              Last checked: {formatDate(lastSessionCheck)}\n                            </span>\n                          )}\n                          <span className=\"copilot-hint\">\n                            Start a conversation with @copilot to begin a session\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  )}\n\n                  <div className=\"comments-section\">\n                    <div className=\"comments-header\">\n                      <h4>Recent Comments & Updates ({allComments.length > 0 ? `${displayedCommentsCount}/${allComments.length}` : '0'})</h4>\n                      <div className=\"comments-controls\">\n                        <button\n                          className=\"manual-refresh-btn\"\n                          onClick={handleManualRefreshComments}\n                          disabled={isRefreshingComments}\n                          title=\"Manually refresh comments\"\n                        >\n                          {isRefreshingComments ? '🔄 Refreshing...' : '🔄 Refresh'}\n                        </button>\n                        <label className=\"status-updates-toggle\">\n                          <input \n                            type=\"checkbox\" \n                            checked={showStatusUpdates}\n                            onChange={(e) => {\n                              setShowStatusUpdates(e.target.checked);\n                              // Refresh comments when toggling status updates\n                              if (prInfo && prInfo.length > 0) {\n                                fetchCommentsForPR(repositoryConfig.getOwner(), repositoryConfig.getName(), prInfo[0].number, 1, false);\n                              }\n                            }}\n                          />\n                          <span className=\"checkbox-label\">📋 Show status updates</span>\n                        </label>\n                      </div>\n                    </div>\n                    {commentsLoading ? (\n                      <div className=\"loading\">Loading comments...</div>\n                    ) : comments.length === 0 ? (\n                      <div className=\"no-comments\">No comments yet</div>\n                    ) : (\n                      <>\n                        <div className=\"comments-list\">\n                          {comments.map((comment) => {\n                            const isExpanded = expandedComments.has(comment.id);\n                            const shouldTruncate = comment.body && comment.body.length > 200;\n                            const isNewComment = newlyAddedCommentId === comment.id;\n                            const viewers = getCommentViewers(comment, comments);\n                            \n                            // Debug: Log each comment being displayed\n                            if (comment.user?.login?.toLowerCase().includes('copilot') || \n                                comment.user?.login === 'github-actions[bot]' ||\n                                comment.user?.login === 'copilot[bot]' ||\n                                (comment.user?.type === 'Bot' && comment.user?.login?.toLowerCase().includes('copilot'))) {\n                              console.debug('Displaying copilot comment in main discussion:', {\n                                id: comment.id,\n                                author: comment.user.login,\n                                type: comment.type,\n                                userType: comment.user.type,\n                                created: comment.created_at,\n                                bodyPreview: comment.body?.substring(0, 100) + '...'\n                              });\n                            }\n                            \n                            return (\n                              <div key={comment.id} className={`comment ${comment.type === 'timeline' ? 'comment-timeline' : ''} ${isNewComment ? 'comment-new-glow' : ''}`}>\n                                <div className=\"comment-header\">\n                                  <img \n                                    src={comment.user.avatar_url} \n                                    alt={comment.user.login} \n                                    className=\"comment-avatar\"\n                                  />\n                                  <a \n                                    href={comment.user.html_url} \n                                    target=\"_blank\" \n                                    rel=\"noopener noreferrer\"\n                                    className=\"comment-author\"\n                                  >\n                                    {comment.user.login}\n                                  </a>\n                                  <span className=\"comment-date\">{formatDate(comment.created_at)}</span>\n                                  <span className={`comment-type ${comment.type === 'timeline' ? 'comment-type-timeline' : ''}`}>\n                                    {comment.type === 'timeline' ? 'status' : comment.type}\n                                  </span>\n                                  \n                                  {/* Comment Viewer Badges - only for regular comments */}\n                                  {comment.type !== 'timeline' && viewers.length > 0 && (\n                                    <div className=\"comment-viewers\">\n                                      {viewers.map((viewer, index) => {\n                                        // Ensure viewer is a string before calling toLowerCase\n                                        const safeViewer = typeof viewer === 'string' ? viewer : String(viewer || '');\n                                        const isCopilot = safeViewer && safeViewer.toLowerCase().includes('copilot');\n                                        return (\n                                          <span \n                                            key={index}\n                                            className={`viewer-badge ${isCopilot ? 'viewer-badge-copilot' : 'viewer-badge-user'}`}\n                                            title={`${safeViewer} is looking at this comment`}\n                                          >\n                                            {isCopilot ? '👁️' : '👀'} {safeViewer}\n                                          </span>\n                                        );\n                                      })}\n                                    </div>\n                                  )}\n                                </div>\n                                <div className=\"comment-body\">\n                                  {comment.type === 'timeline' ? (\n                                    // Timeline events are always short, don't truncate\n                                    <div className=\"comment-timeline-body\">\n                                      <div className=\"timeline-content\">\n                                        {comment.body}\n                                      </div>\n                                    </div>\n                                  ) : shouldTruncate && !isExpanded ? (\n                                    <>\n                                      <div className=\"comment-preview\">\n                                        <div className=\"markdown-content\">\n                                          {ReactMarkdown && rehypeRaw ? (\n                                            <ReactMarkdown \n                                              rehypePlugins={[rehypeRaw]}\n                                              components={markdownComponents}\n                                            >{processMarkdownContent(truncateComment(comment.body))}</ReactMarkdown>\n                                          ) : (\n                                            <div \n                                              style={{ whiteSpace: 'pre-wrap' }}\n                                              dangerouslySetInnerHTML={{\n                                                __html: sanitizeHtmlContent(convertGitHubNotationToHtml(truncateComment(comment.body)))\n                                              }}\n                                            />\n                                          )}\n                                        </div>\n                                      </div>\n                                      <button \n                                        className=\"comment-toggle\"\n                                        onClick={() => handleCommentToggle(comment.id)}\n                                      >\n                                        Show more\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <>\n                                      <div className=\"comment-full\">\n                                        <div className=\"markdown-content\">\n                                          {ReactMarkdown && rehypeRaw ? (\n                                            <ReactMarkdown \n                                              rehypePlugins={[rehypeRaw]}\n                                              components={markdownComponents}\n                                            >{processMarkdownContent(comment.body)}</ReactMarkdown>\n                                          ) : (\n                                            <div \n                                              style={{ whiteSpace: 'pre-wrap' }}\n                                              dangerouslySetInnerHTML={{\n                                                __html: sanitizeHtmlContent(convertGitHubNotationToHtml(comment.body))\n                                              }}\n                                            />\n                                          )}\n                                        </div>\n                                      </div>\n                                      {shouldTruncate && (\n                                        <button \n                                          className=\"comment-toggle\"\n                                          onClick={() => handleCommentToggle(comment.id)}\n                                        >\n                                          Show less\n                                        </button>\n                                      )}\n                                    </>\n                                  )}\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </div>\n                        \n                        {/* Load More Comments Button */}\n                        {(allComments.length > displayedCommentsCount || hasMoreComments) && (\n                          <div className=\"comments-load-more\">\n                            <button\n                              className=\"load-more-btn\"\n                              onClick={loadMoreComments}\n                              disabled={commentsLoading}\n                            >\n                              {commentsLoading ? 'Loading...' : \n                                allComments.length > displayedCommentsCount ? \n                                  `Show More Comments (${allComments.length - displayedCommentsCount} more to load)` :\n                                  'Load More Comments...'\n                              }\n                            </button>\n                          </div>\n                        )}\n                      </>\n                    )}\n                  </div>\n                </>\n              )}\n\n              <div className=\"expanded-footer\">\n                <a href={prInfo[0].html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-link\">\n                  View PR on GitHub →\n                </a>\n              </div>\n            </div>\n          )}\n        </>\n      ) : (\n        // Single expandable badge for branch with no PRs\n        <div \n          className={`preview-badge clickable ${isExpanded ? 'expanded' : ''} ${isSticky ? 'sticky' : ''}`}\n          onClick={handleBadgeToggle}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          title={isSticky ? \"Click to collapse\" : isExpanded ? \"Click to keep expanded\" : `🔍 Hover for branch details, click to pin: ${branchInfo.name}`}\n        >\n          <div className=\"badge-content\">\n            <span className=\"badge-label\">Preview:</span>\n            <span className=\"badge-branch\">{branchInfo.name}</span>\n            <span className=\"badge-expand-icon\">{isExpanded ? '▼' : '▶'}</span>\n          </div>\n        </div>\n      )}\n\n      {isExpanded && (!prInfo || prInfo.length === 0) && (\n        <div className=\"preview-badge-expanded\">\n          <div className=\"expanded-header\">\n            <div className=\"pr-info\">\n              <h3>Preview Branch: {branchInfo.name}</h3>\n              <div className=\"pr-meta\">\n                <span className=\"pr-state\" data-state=\"unknown\">No PR found</span>\n                <span className=\"pr-author\">Branch preview</span>\n              </div>\n            </div>\n            <button \n              className=\"close-button\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setIsExpanded(false);\n                setIsSticky(false);\n              }}\n              title=\"Close expanded view\"\n            >\n              ×\n            </button>\n          </div>\n\n          <div className=\"pr-description\">\n            <h4>Branch Information</h4>\n            <div className=\"pr-body\">\n              This is a preview deployment from the <code>{branchInfo.name}</code> branch.\n              <div style={{marginTop: '0.5rem'}}>\n                <strong>Preview URL:</strong> <code>{window.location.origin}{window.location.pathname}</code>\n              </div>\n              {!githubService.isAuth() ? (\n                <div style={{marginTop: '0.5rem', padding: '0.5rem', backgroundColor: '#f0f8ff', border: '1px solid #bee5eb', borderRadius: '4px'}}>\n                  <strong>💡 Tip:</strong> Sign in to GitHub to view pull request details, comments, and contribute to this branch.\n                </div>\n              ) : (\n                <div style={{marginTop: '0.5rem', color: '#28a745'}}>\n                  ✅ Authenticated - You can view full PR details when available.\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Workflow Status Section for branch-only badges */}\n          <div className=\"workflow-status-wrapper\">\n            <WorkflowDashboard\n              branchName={branchInfo.name}\n              githubActionsService={githubActionsService}\n              isAuthenticated={githubService.isAuth()}\n              canTriggerWorkflows={canTriggerWorkflows}\n              canApproveWorkflows={canApproveWorkflows}\n              onWorkflowAction={handleWorkflowDashboardAction}\n            />\n          </div>\n\n          <div className=\"expanded-footer\">\n            <a href={`${repositoryConfig.getGitHubUrl()}/tree/${branchInfo.name}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-link\">\n              View Branch on GitHub →\n            </a>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PreviewBadge;","import React, { useState, useEffect } from 'react';\nimport { usePage } from './PageProvider';\nimport { useLocation } from 'react-router-dom';\nimport githubService from '../../services/githubService';\nimport userAccessService from '../../services/userAccessService';\nimport bookmarkService from '../../services/bookmarkService';\nimport PreviewBadge from '../PreviewBadge';\nimport { navigateToWelcomeWithFocus } from '../../utils/navigationUtils';\n\n/**\n * Consistent header component for all pages\n */\nconst PageHeader = () => {\n  const { \n    pageName, \n    profile, \n    repository, \n    branch, \n    asset,\n    isAuthenticated,\n    navigate \n  } = usePage();\n\n  const location = useLocation();\n  const [showUserDropdown, setShowUserDropdown] = useState(false);\n  const [showBookmarkDropdown, setShowBookmarkDropdown] = useState(false);\n  const [authenticatedUser, setAuthenticatedUser] = useState(null);\n\n  // Always fetch the authenticated user for login button display\n  useEffect(() => {\n    if (isAuthenticated) {\n      const fetchAuthenticatedUser = async () => {\n        try {\n          // Use userAccessService to get the current user (handles both authenticated and demo users)\n          const user = userAccessService.getCurrentUser();\n          if (user) {\n            setAuthenticatedUser(user);\n          } else {\n            // Fallback to githubService for backwards compatibility\n            const githubUser = await githubService.getCurrentUser();\n            setAuthenticatedUser(githubUser);\n          }\n        } catch (error) {\n          console.debug('Could not fetch authenticated user:', error);\n        }\n      };\n      \n      fetchAuthenticatedUser();\n    } else {\n      setAuthenticatedUser(null);\n    }\n  }, [isAuthenticated]);\n\n  const handleLogout = () => {\n    githubService.logout();\n    navigate('/');\n  };\n\n  const handleHomeNavigation = () => {\n    navigateToWelcomeWithFocus(navigate, location);\n  };\n\n  const handleGitHubUser = () => {\n    // Always navigate to the authenticated user's GitHub profile, not the DAK owner's\n    if (authenticatedUser?.html_url) {\n      window.open(authenticatedUser.html_url, '_blank');\n    } else if (authenticatedUser?.login) {\n      window.open(`https://github.com/${authenticatedUser.login}`, '_blank');\n    }\n  };\n\n  const handleBookmarkCurrentPage = () => {\n    const context = {\n      user: authenticatedUser?.login, // Use authenticated user for bookmarks\n      repository,\n      branch,\n      asset\n    };\n    \n    const currentUrl = window.location.pathname;\n    bookmarkService.addBookmark(pageName, currentUrl, context);\n    setShowBookmarkDropdown(false);\n  };\n\n  const handleRemoveBookmark = (bookmarkId) => {\n    bookmarkService.removeBookmark(bookmarkId);\n    // Force re-render by toggling dropdown\n    setShowBookmarkDropdown(false);\n    setTimeout(() => setShowBookmarkDropdown(true), 50);\n  };\n\n  const handleBookmarkNavigation = (bookmark) => {\n    navigate(bookmark.url);\n    setShowBookmarkDropdown(false);\n  };\n\n  const getCurrentPageBookmark = () => {\n    return bookmarkService.getBookmarkByUrl(window.location.pathname);\n  };\n\n  const getBookmarksGrouped = () => {\n    return bookmarkService.getBookmarksGroupedByPage();\n  };\n\n  const currentBookmark = getCurrentPageBookmark();\n  const bookmarksGrouped = getBookmarksGrouped();\n\n  return (\n    <header className=\"page-header\">\n      {/* Left side - Logo and context */}\n      <div className=\"page-header-left\">\n        <button \n          className=\"sgex-logo\" \n          onClick={handleHomeNavigation}\n          onKeyDown={(e) => e.key === 'Enter' || e.key === ' ' ? handleHomeNavigation() : null}\n          style={{ border: 'none', background: 'none', padding: 0, cursor: 'pointer' }}\n        >\n          <h1>SGEX Workbench</h1>\n          <p className=\"subtitle\">WHO SMART Guidelines Exchange</p>\n        </button>\n        \n        {/* Preview badge for non-main branches */}\n        <PreviewBadge />\n      </div>\n\n      {/* Right side - Navigation and user controls */}\n      <div className=\"page-header-right\">\n        {/* User info and controls */}\n        {(isAuthenticated || profile?.isDemo) && authenticatedUser ? (\n          <div className=\"user-controls\">\n            <button \n              className=\"user-info\" \n              onClick={() => setShowUserDropdown(!showUserDropdown)}\n              onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && setShowUserDropdown(!showUserDropdown)}\n              style={{ border: 'none', background: 'none', padding: 0, cursor: 'pointer', display: 'flex', alignItems: 'center' }}\n            >\n              <img src={authenticatedUser.avatar_url} alt=\"User avatar\" className=\"user-avatar\" />\n              <span className=\"user-name\">{authenticatedUser.name || authenticatedUser.login}</span>\n              <span className=\"dropdown-arrow\">▼</span>\n            </button>\n            {showUserDropdown && (\n              <div className=\"user-dropdown\">\n                <button className=\"dropdown-item\" onClick={handleGitHubUser}>\n                  <svg className=\"github-icon\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n                    <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"/>\n                  </svg>\n                  GitHub Profile\n                </button>\n                \n                {/* Add/Remove current page bookmark - moved to same level as bookmarks */}\n                {currentBookmark ? (\n                  <button \n                    className=\"dropdown-item bookmark-action\"\n                    onClick={() => handleRemoveBookmark(currentBookmark.id)}\n                  >\n                    ⭐ Remove Bookmark\n                  </button>\n                ) : (\n                  <button \n                    className=\"dropdown-item bookmark-action\"\n                    onClick={handleBookmarkCurrentPage}\n                  >\n                    ☆ Add Bookmark\n                  </button>\n                )}\n                \n                {/* Bookmarks submenu */}\n                <div className=\"bookmarks-section\">\n                  <button \n                    className=\"dropdown-item bookmarks-header\" \n                    onClick={() => setShowBookmarkDropdown(!showBookmarkDropdown)}\n                    onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && setShowBookmarkDropdown(!showBookmarkDropdown)}\n                  >\n                    📖 Bookmarks\n                    <span className=\"dropdown-arrow\">{showBookmarkDropdown ? '▲' : '▼'}</span>\n                  </button>\n                  \n                  {showBookmarkDropdown && (\n                    <div className=\"bookmarks-dropdown\">\n                      {/* Bookmarks list grouped by page */}\n                      {bookmarksGrouped.length > 0 ? (\n                        <div className=\"bookmarks-list\">\n                          {bookmarksGrouped.map(group => (\n                            <div key={group.pageName} className=\"bookmark-group\">\n                              <div className=\"bookmark-group-header\">{group.pageName}</div>\n                              {group.bookmarks.map(bookmark => (\n                                <div key={bookmark.id} className=\"bookmark-item\">\n                                  <button \n                                    className=\"bookmark-link\"\n                                    onClick={() => handleBookmarkNavigation(bookmark)}\n                                    title={bookmark.url}\n                                  >\n                                    {bookmark.title}\n                                  </button>\n                                  <button \n                                    className=\"bookmark-remove\"\n                                    onClick={() => handleRemoveBookmark(bookmark.id)}\n                                    title=\"Remove bookmark\"\n                                  >\n                                    ×\n                                  </button>\n                                </div>\n                              ))}\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <div className=\"no-bookmarks\">No bookmarks yet</div>\n                      )}\n                    </div>\n                  )}\n                </div>\n                \n                <button className=\"dropdown-item logout-btn\" onClick={handleLogout}>\n                  Logout\n                </button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <button \n            className=\"login-btn\" \n            onClick={handleHomeNavigation}\n            onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && handleHomeNavigation()}\n            aria-label=\"Navigate to login page\"\n          >\n            Login\n          </button>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default PageHeader;","import React, { useState, useEffect } from 'react';\nimport userAccessService from '../../services/userAccessService';\n\n/**\n * Access Badge Component\n * \n * Displays user's access level (read/write) for the current repository\n * Shows in the title bar with dynamic styling based on permissions\n */\nconst AccessBadge = ({ owner, repo, branch = 'main', className = '' }) => {\n  const [badge, setBadge] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const loadBadge = async () => {\n      if (!owner || !repo) {\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        const badgeInfo = await userAccessService.getAccessBadge(owner, repo, branch);\n        \n        if (mounted) {\n          setBadge(badgeInfo);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error loading access badge:', error);\n        if (mounted) {\n          setBadge({\n            text: 'Unknown',\n            icon: '❓',\n            color: 'gray',\n            description: 'Unable to determine access level'\n          });\n          setLoading(false);\n        }\n      }\n    };\n\n    loadBadge();\n\n    // Listen for access changes\n    const unsubscribe = userAccessService.addListener(() => {\n      loadBadge();\n    });\n\n    return () => {\n      mounted = false;\n      unsubscribe();\n    };\n  }, [owner, repo, branch]);\n\n  if (loading) {\n    return (\n      <div className={`access-badge loading ${className}`}>\n        <span className=\"access-badge-icon\">⏳</span>\n        <span className=\"access-badge-text\">Loading...</span>\n      </div>\n    );\n  }\n\n  if (!badge) {\n    return null;\n  }\n\n  return (\n    <div \n      className={`access-badge ${badge.color} ${className}`}\n      onMouseEnter={() => setShowTooltip(true)}\n      onMouseLeave={() => setShowTooltip(false)}\n      title={badge.description}\n    >\n      <span className=\"access-badge-icon\" role=\"img\" aria-label={badge.text}>\n        {badge.icon}\n      </span>\n      <span className=\"access-badge-text\">\n        {badge.text}\n      </span>\n      \n      {showTooltip && (\n        <div className=\"access-badge-tooltip\">\n          <div className=\"tooltip-content\">\n            <strong>{badge.text}</strong>\n            <p>{badge.description}</p>\n            {repo && (\n              <small>Repository: {owner}/{repo}</small>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AccessBadge;","import React, { useState, useEffect } from 'react';\nimport { usePage, PAGE_TYPES } from './PageProvider';\nimport AccessBadge from './AccessBadge';\nimport githubService from '../../services/githubService';\n\n/**\n * Page context component that displays profile/repo/branch information and breadcrumbs\n * Unified navigation component with avatar on left and two-row content on right\n */\nconst PageContext = ({ customBreadcrumbs }) => {\n  const { \n    type, \n    pageName,\n    profile, \n    repository, \n    branch,\n    navigate \n  } = usePage();\n\n  // Branch selector state\n  const [branches, setBranches] = useState([]);\n  const [showBranchDropdown, setShowBranchDropdown] = useState(false);\n  const [branchSearchTerm, setBranchSearchTerm] = useState('');\n  const [loadingBranches, setLoadingBranches] = useState(false);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (showBranchDropdown && !event.target.closest('.page-context-branch-selector')) {\n        setShowBranchDropdown(false);\n        setBranchSearchTerm('');\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showBranchDropdown]);\n\n  // Fetch branches when repository changes\n  useEffect(() => {\n    const fetchBranches = async () => {\n      if (!repository || !(type === PAGE_TYPES.DAK || type === PAGE_TYPES.ASSET)) {\n        setBranches([]);\n        return;\n      }\n\n      try {\n        setLoadingBranches(true);\n        const owner = repository.owner?.login || repository.full_name?.split('/')[0];\n        const branchData = await githubService.getBranches(owner, repository.name);\n        \n        // Sort branches alphabetically as requested\n        const sortedBranches = branchData.sort((a, b) => a.name.localeCompare(b.name));\n        setBranches(sortedBranches);\n      } catch (error) {\n        console.error('Failed to fetch branches for context:', error);\n        setBranches([]);\n      } finally {\n        setLoadingBranches(false);\n      }\n    };\n\n    fetchBranches();\n  }, [repository, type]);\n\n  const handleBranchChange = (newBranch) => {\n    // Update URL with new branch\n    const currentPath = window.location.pathname;\n    const pathParts = currentPath.split('/');\n    \n    // URL structure: /sgex/dashboard/{user}/{repo}/{branch}\n    // After splitting: ['', 'sgex', 'dashboard', '{user}', '{repo}', '{branch}']\n    // So branch is at index 5 when including the empty string at index 0\n    if (pathParts.length >= 5) {\n      if (pathParts.length === 5) {\n        // No branch in URL, append it\n        pathParts.push(newBranch);\n      } else {\n        // Branch exists, replace it\n        pathParts[5] = newBranch;\n      }\n      navigate(pathParts.join('/'));\n    }\n    setShowBranchDropdown(false);\n    setBranchSearchTerm('');\n  };\n\n  // Filter branches based on search term\n  const filteredBranches = branches.filter(b => \n    b.name.toLowerCase().includes(branchSearchTerm.toLowerCase())\n  );\n\n  const handleGitHubRepo = () => {\n    if (repository?.html_url) {\n      window.open(repository.html_url, '_blank');\n    }\n  };\n\n  const handleGitHubUser = () => {\n    if (profile?.html_url) {\n      window.open(profile.html_url, '_blank');\n    } else if (profile?.login) {\n      window.open(`https://github.com/${profile.login}`, '_blank');\n    }\n  };\n\n  // Generate breadcrumbs\n  const getBreadcrumbs = () => {\n    // If custom breadcrumbs are provided, use them\n    if (customBreadcrumbs && customBreadcrumbs.length > 0) {\n      return customBreadcrumbs;\n    }\n\n    // Special handling for documentation-viewer page - don't show default breadcrumbs\n    if (pageName === 'documentation-viewer') {\n      return [];\n    }\n\n    // Generate automatic breadcrumbs based on page type\n    const breadcrumbs = [];\n\n    // Always start with home\n    breadcrumbs.push({\n      label: 'Home',\n      path: '/',\n      onClick: () => navigate('/')\n    });\n\n    // Add user context for user/DAK/asset pages\n    if ((type === PAGE_TYPES.USER || type === PAGE_TYPES.DAK || type === PAGE_TYPES.ASSET) && profile) {\n      breadcrumbs.push({\n        label: 'Select Repository',\n        path: `/dak-selection/${profile.login}`,\n        onClick: () => navigate(`/dak-selection/${profile.login}`, { state: { profile } })\n      });\n    }\n\n    // Add DAK context for DAK/asset pages\n    if ((type === PAGE_TYPES.DAK || type === PAGE_TYPES.ASSET) && repository) {\n      const branchPath = branch && branch !== 'main' ? `/${branch}` : '';\n      const ownerLogin = repository.owner?.login || repository.full_name?.split('/')[0];\n      if (ownerLogin) {\n        breadcrumbs.push({\n          label: 'DAK Components',\n          path: `/dashboard/${ownerLogin}/${repository.name}${branchPath}`,\n          onClick: () => navigate(`/dashboard/${ownerLogin}/${repository.name}${branchPath}`)\n        });\n      }\n    }\n\n    // Add current page context\n    const pageLabels = {\n      'landing': 'Home',\n      'landing-unauthenticated': 'Home',\n      'repositories': 'Select Repository', \n      'dak-selection': 'Select DAK',\n      'dak-action': 'Choose DAK Action',\n      'dashboard': 'DAK Components',\n      'dak-dashboard': 'DAK Components',\n      'actor-editor': 'Actor Definitions',\n      'component-editor': 'Component Editor',\n      'bpmn-viewer': 'Business Process Viewer',\n      'bpmn-editor': 'Business Process Editor',\n      'decision-support-logic': 'Decision Support Logic',\n      'core-data-dictionary-viewer': 'Core Data Dictionary',\n      'testing-viewer': 'Testing',\n      'pages-manager': 'Pages',\n      'documentation': 'Documentation'\n    };\n\n    const currentPageLabel = pageLabels[pageName] || pageName;\n    \n    // Don't add duplicate page labels\n    if (breadcrumbs.length === 0 || breadcrumbs[breadcrumbs.length - 1].label !== currentPageLabel) {\n      breadcrumbs.push({\n        label: currentPageLabel,\n        current: true\n      });\n    }\n\n    return breadcrumbs;\n  };\n\n  const breadcrumbs = getBreadcrumbs();\n\n  // Don't render if no context information to show\n  if (!profile && !repository && breadcrumbs.length <= 1) {\n    return null;\n  }\n\n  return (\n    <div className=\"page-context-container\">\n      <div className=\"page-context-content\">\n        {/* Avatar positioned to the far left */}\n        {profile && (\n          <img src={profile.avatar_url} alt={`${profile.login} avatar`} className=\"page-context-avatar\" />\n        )}\n        \n        <div className=\"page-context-info\">\n          {/* First row: Profile / Repository / Branch */}\n          <div className=\"page-context-row page-context-user-repo\">\n            {profile && (\n              <>\n                <span className=\"page-context-profile\" onClick={handleGitHubUser}>\n                  {profile.login}\n                </span>\n                {repository && <span className=\"page-context-separator\">/</span>}\n              </>\n            )}\n            {repository && (\n              <span className=\"page-context-repo\">\n                {repository.name}\n              </span>\n            )}\n            {branch && (type === PAGE_TYPES.DAK || type === PAGE_TYPES.ASSET) && (\n              <>\n                <span className=\"page-context-separator\">@</span>\n                <div className=\"page-context-branch-selector\">\n                  <button \n                    className=\"page-context-branch-btn\"\n                    onClick={() => setShowBranchDropdown(!showBranchDropdown)}\n                    title=\"Switch branch\"\n                  >\n                    <span className=\"branch-icon\">🌿</span>\n                    {branch}\n                    <span className=\"branch-dropdown-arrow\">{showBranchDropdown ? '▲' : '▼'}</span>\n                  </button>\n                  \n                  {showBranchDropdown && (\n                    <div className=\"branch-dropdown\">\n                      <div className=\"branch-search\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Search branches...\"\n                          value={branchSearchTerm}\n                          onChange={(e) => setBranchSearchTerm(e.target.value)}\n                          className=\"branch-search-input\"\n                          autoFocus={false}\n                        />\n                      </div>\n                      <div className=\"branch-list\">\n                        {loadingBranches ? (\n                          <div className=\"branch-item loading\">Loading branches...</div>\n                        ) : filteredBranches.length > 0 ? (\n                          filteredBranches.map((b) => (\n                            <button\n                              key={b.name}\n                              className={`branch-item ${b.name === branch ? 'current' : ''}`}\n                              onClick={() => handleBranchChange(b.name)}\n                            >\n                              <span className=\"branch-icon\">🌿</span>\n                              {b.name}\n                              {b.name === branch && <span className=\"current-badge\">current</span>}\n                            </button>\n                          ))\n                        ) : (\n                          <div className=\"branch-item no-results\">\n                            {branchSearchTerm ? 'No branches found' : 'No branches available'}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </>\n            )}\n          </div>\n          \n          {/* Second row: Breadcrumbs */}\n          {breadcrumbs.length > 1 && (\n            <nav className=\"page-context-row page-context-breadcrumbs\" aria-label=\"Breadcrumb navigation\">\n              <ol className=\"breadcrumb-list\">\n                {breadcrumbs.map((crumb, index) => (\n                  <li key={index} className=\"breadcrumb-item\">\n                    {!crumb.current ? (\n                      <>\n                        <button \n                          className=\"breadcrumb-link\" \n                          onClick={() => crumb.onClick ? crumb.onClick() : navigate(crumb.path)}\n                          aria-label={`Navigate to ${crumb.label}`}\n                        >\n                          {crumb.label}\n                        </button>\n                        <span className=\"breadcrumb-separator\" aria-hidden=\"true\">›</span>\n                      </>\n                    ) : (\n                      <span className=\"breadcrumb-current\" aria-current=\"page\">\n                        {crumb.label}\n                      </span>\n                    )}\n                  </li>\n                ))}\n              </ol>\n            </nav>\n          )}\n        </div>\n        \n        {/* Actions area for DAK and Asset pages */}\n        {(type === PAGE_TYPES.DAK || type === PAGE_TYPES.ASSET) && repository && (\n          <div className=\"page-context-actions\">\n            {/* Access badge */}\n            <AccessBadge \n              owner={repository.owner?.login || profile?.login}\n              repo={repository.name}\n              branch={branch}\n              className=\"context-access-badge\"\n            />\n            {/* GitHub repository button */}\n            <button className=\"context-btn github-repo-btn\" onClick={handleGitHubRepo} title=\"Open repository on GitHub\">\n              <svg className=\"github-icon\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n                <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"/>\n              </svg>\n              Repository\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PageContext;","import React, { useState } from 'react';\nimport { usePage } from './PageProvider';\nimport ContextualHelpMascot from '../ContextualHelpMascot';\nimport useThemeImage from '../../hooks/useThemeImage';\nimport repositoryConfig from '../../config/repositoryConfig';\n\n/**\n * Error handler component with automatic bug reporting functionality\n */\nconst ErrorHandler = ({ error, onRetry }) => {\n  const pageContext = usePage();\n  const pageName = pageContext.pageName;\n  const [bugReportSent, setBugReportSent] = useState(false);\n\n  // Theme-aware mascot image\n  const mascotImage = useThemeImage('sgex-mascot.png');\n  const [userExplanation, setUserExplanation] = useState('');\n\n  const generateBugReportUrl = () => {\n    const title = encodeURIComponent('User should not have reached this page');\n    const body = encodeURIComponent(`\n**Error Information:**\n- Page: ${pageName}\n- URL: ${window.location.href}\n- Error: ${error}\n- Timestamp: ${new Date().toISOString()}\n- User Agent: ${navigator.userAgent}\n\n**Context:**\n- Browser: ${navigator.userAgent}\n- Viewport: ${window.innerWidth}x${window.innerHeight}\n- Referrer: ${document.referrer || 'Direct access'}\n\n**User Explanation:**\n${userExplanation || 'No additional details provided'}\n\n**Steps to Reproduce:**\n1. Navigate to: ${window.location.href}\n2. [Please add any additional steps]\n\n**Expected Behavior:**\nThe page should load without errors.\n\n**Actual Behavior:**\n${error}\n    `);\n\n    return `${repositoryConfig.getGitHubUrl()}/issues/new?title=${title}&body=${body}&labels=bug,user-error`;\n  };\n\n  const handleSendBugReport = () => {\n    const bugReportUrl = generateBugReportUrl();\n    window.open(bugReportUrl, '_blank');\n    setBugReportSent(true);\n  };\n\n  const handleRetry = () => {\n    if (onRetry) {\n      onRetry();\n    } else {\n      window.location.reload();\n    }\n  };\n\n  const handleGoHome = () => {\n    window.location.href = '/sgex/';\n  };\n\n  // Enhanced error message generation for DAK-specific errors\n  const getErrorDisplayInfo = () => {\n    const lowercaseError = error.toLowerCase();\n    \n    // Extract user/repo from URL or page context\n    const user = pageContext?.user;\n    const repo = pageContext?.repository?.name;\n    \n    if (lowercaseError.includes('not found') || lowercaseError.includes('not accessible')) {\n      if (lowercaseError.includes('user')) {\n        return {\n          title: 'User Not Found',\n          message: `The user ${user ? `'${user}'` : 'in the URL'} could not be found on GitHub.`,\n          suggestions: [\n            'Check the spelling of the username',\n            'Verify the user account exists on GitHub',\n            'Try searching for the user on GitHub.com'\n          ],\n          icon: '👤'\n        };\n      } else if (lowercaseError.includes('repository')) {\n        return {\n          title: 'Repository Not Found',\n          message: `The repository ${user && repo ? `'${user}/${repo}'` : 'in the URL'} could not be accessed.`,\n          suggestions: [\n            'Check the spelling of the repository name',\n            'Verify the repository exists and is public',\n            'If it\\'s a private repository, make sure you have access',\n            'Try visiting the repository directly on GitHub.com'\n          ],\n          icon: '📁'\n        };\n      }\n    }\n    \n    if (lowercaseError.includes('not a valid dak') || lowercaseError.includes('invalid dak')) {\n      return {\n        title: 'Not a DAK Repository',\n        message: `The repository ${user && repo ? `'${user}/${repo}'` : 'in the URL'} doesn't appear to contain WHO SMART Guidelines content.`,\n        suggestions: [\n          'Verify this is a WHO SMART Guidelines Digital Adaptation Kit',\n          'Check if the repository has a sushi-config.yaml file',\n          'Look for smart.who.int.base dependencies in the configuration',\n          'Try browsing other DAK repositories for examples'\n        ],\n        icon: '📋'\n      };\n    }\n    \n    if (lowercaseError.includes('asset') && lowercaseError.includes('not found')) {\n      return {\n        title: 'File Not Found',\n        message: `The requested file could not be found in the repository.`,\n        suggestions: [\n          'Check if the file path is correct',\n          'Verify the file exists in the current branch',\n          'The file may have been moved or deleted',\n          'Try browsing the repository to find the correct path'\n        ],\n        icon: '📄'\n      };\n    }\n    \n    // Default error info\n    return {\n      title: 'Something Went Wrong',\n      message: error,\n      suggestions: [\n        'Try refreshing the page',\n        'Check your internet connection',\n        'The service may be temporarily unavailable'\n      ],\n      icon: '⚠️'\n    };\n  };\n\n  const errorInfo = getErrorDisplayInfo();\n\n  return (\n    <div className=\"error-handler\">\n      <div className=\"error-content\">\n        <div className=\"error-mascot-container\">\n          <ContextualHelpMascot\n            helpContent={\n              <div className=\"error-help-content\">\n                <div className=\"error-mascot-large\">\n                  <img \n                    src={mascotImage} \n                    alt=\"SGEX Helper\" \n                    className=\"large-mascot-icon\"\n                  />\n                  <div className=\"mascot-speech-bubble\">\n                    <div className=\"speech-content\">\n                      I'm sorry! Something went wrong.\n                    </div>\n                    <div className=\"speech-tail\"></div>\n                  </div>\n                </div>\n              </div>\n            }\n            position=\"center\"\n          />\n        </div>\n        \n        <div className=\"error-details\">\n          <h2>{errorInfo.icon} {errorInfo.title}</h2>\n          <p className=\"error-message\">{errorInfo.message}</p>\n          \n          {errorInfo.suggestions && (\n            <div className=\"error-suggestions\">\n              <h3>💡 Suggestions:</h3>\n              <ul>\n                {errorInfo.suggestions.map((suggestion, index) => (\n                  <li key={index}>{suggestion}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n          \n          <div className=\"error-actions\">\n            <button className=\"error-btn primary\" onClick={handleRetry}>\n              🔄 Try Again\n            </button>\n            <button className=\"error-btn secondary\" onClick={handleGoHome}>\n              🏠 Go Home\n            </button>\n          </div>\n          \n          <div className=\"bug-report-section\">\n            <h3>Help us improve SGEX</h3>\n            <p>If this error persists, please let us know what happened:</p>\n            \n            <div className=\"user-explanation\">\n              <label htmlFor=\"user-explanation\">\n                What were you trying to do when this error occurred?\n              </label>\n              <textarea\n                id=\"user-explanation\"\n                value={userExplanation}\n                onChange={(e) => setUserExplanation(e.target.value)}\n                placeholder=\"Please describe what you were doing when the error occurred...\"\n                rows={4}\n              />\n            </div>\n            \n            {!bugReportSent ? (\n              <button className=\"bug-report-btn\" onClick={handleSendBugReport}>\n                📧 Send Bug Report\n              </button>\n            ) : (\n              <div className=\"bug-report-sent\">\n                <span className=\"success-icon\">✅</span>\n                Thank you! A bug report has been opened. We'll investigate this issue.\n              </div>\n            )}\n          </div>\n          \n          <div className=\"error-context\">\n            <details>\n              <summary>Technical Details</summary>\n              <div className=\"technical-details\">\n                <p><strong>Page:</strong> {pageName}</p>\n                <p><strong>URL:</strong> {window.location.href}</p>\n                <p><strong>Error:</strong> {error}</p>\n                <p><strong>Timestamp:</strong> {new Date().toISOString()}</p>\n              </div>\n            </details>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorHandler;","import React from 'react';\nimport { PageProvider, usePage } from './PageProvider';\nimport PageHeader from './PageHeader';\nimport PageContext from './PageContext';\nimport ErrorHandler from './ErrorHandler';\nimport ContextualHelpMascot from '../ContextualHelpMascot';\n\n/**\n * Error boundary wrapper for catching React errors\n */\nclass PageErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error: error.message };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('PageLayout caught an error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"page-layout-error\">\n          <ErrorHandler \n            error={this.state.error}\n            onRetry={() => {\n              this.setState({ hasError: false, error: null });\n              window.location.reload();\n            }}\n          />\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n/**\n * Inner layout component that uses page context\n */\nconst PageLayoutInner = ({ \n  children, \n  showHeader = true, \n  showMascot = true, \n  showBreadcrumbs = true, \n  customBreadcrumbs \n}) => {\n  const { loading, error, pageName } = usePage();\n\n  // Show loading state\n  if (loading) {\n    return (\n      <div className=\"page-layout\">\n        {showHeader && <PageHeader />}\n        <main className=\"page-main\">\n          <div className=\"page-loading\">\n            <div className=\"loading-spinner\"></div>\n            <p>Loading...</p>\n          </div>\n        </main>\n        {showMascot && (\n          <ContextualHelpMascot \n            pageId={`${pageName}-loading`}\n            position=\"bottom-right\"\n          />\n        )}\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <div className=\"page-layout\">\n        {showHeader && <PageHeader />}\n        <main className=\"page-main\">\n          <ErrorHandler \n            error={error}\n            onRetry={() => window.location.reload()}\n          />\n        </main>\n      </div>\n    );\n  }\n\n  // Show normal page content\n  return (\n    <div className=\"page-layout\">\n      {showHeader && <PageHeader />}\n      <PageContext customBreadcrumbs={showBreadcrumbs ? customBreadcrumbs : []} />\n      <main className=\"page-main\">\n        {children}\n        {showMascot && (\n          <ContextualHelpMascot \n            pageId={pageName}\n            position=\"bottom-right\"\n            contextData={{}}\n          />\n        )}\n      </main>\n    </div>\n  );\n};\n\n/**\n * Main page layout component with framework integration\n */\nconst PageLayout = ({ \n  children, \n  pageName, \n  showHeader = true, \n  showMascot = true,\n  showBreadcrumbs = true,\n  customBreadcrumbs\n}) => {\n  return (\n    <PageErrorBoundary>\n      <PageProvider pageName={pageName}>\n        <PageLayoutInner \n          showHeader={showHeader} \n          showMascot={showMascot}\n          showBreadcrumbs={showBreadcrumbs}\n          customBreadcrumbs={customBreadcrumbs}\n        >\n          {children}\n        </PageLayoutInner>\n      </PageProvider>\n    </PageErrorBoundary>\n  );\n};\n\nexport default PageLayout;","import { usePage, PAGE_TYPES } from './PageProvider';\n\n/**\n * Hook for accessing URL parameters in a type-safe way\n */\nexport const usePageParams = () => {\n  const { type, user, profile, repository, branch, asset, params, navigate } = usePage();\n\n  const updateBranch = (newBranch) => {\n    if (type === PAGE_TYPES.DAK || type === PAGE_TYPES.ASSET) {\n      const currentPath = window.location.pathname;\n      const pathParts = currentPath.split('/');\n      \n      // Update branch in URL path\n      if (pathParts.length >= 5) {\n        if (pathParts.length === 5) {\n          // No branch in URL, append it\n          pathParts.push(newBranch);\n        } else {\n          // Branch exists, replace it\n          pathParts[5] = newBranch;\n        }\n        navigate(pathParts.join('/'));\n      }\n    }\n  };\n\n  const navigateToUser = (userLogin) => {\n    navigate(`/${params.page || 'dak-action'}/${userLogin}`);\n  };\n\n  const navigateToDAK = (userLogin, repoName, branchName = 'main') => {\n    navigate(`/${params.page || 'dashboard'}/${userLogin}/${repoName}/${branchName}`);\n  };\n\n  const navigateToAsset = (userLogin, repoName, branchName, assetPath) => {\n    navigate(`/${params.page || 'editor'}/${userLogin}/${repoName}/${branchName}/${assetPath}`);\n  };\n\n  return {\n    type,\n    user,\n    profile,\n    repository,\n    branch,\n    asset,\n    params,\n    updateBranch,\n    navigateToUser,\n    navigateToDAK,\n    navigateToAsset,\n    navigate\n  };\n};\n\n/**\n * Hook specifically for DAK pages (DAK and Asset page types)\n */\nexport const useDAKParams = () => {\n  try {\n    const pageParams = usePageParams();\n    \n    // Only throw error if page is fully loaded and type is not DAK/ASSET\n    // This prevents errors during initial loading or page type determination\n    if (!pageParams.loading && \n        pageParams.type !== PAGE_TYPES.DAK && \n        pageParams.type !== PAGE_TYPES.ASSET) {\n      throw new Error(`useDAKParams can only be used on DAK or Asset pages. Current page type: ${pageParams.type}`);\n    }\n\n    return {\n      user: pageParams.user,\n      profile: pageParams.profile,\n      repository: pageParams.repository,\n      branch: pageParams.branch,\n      asset: pageParams.asset,\n      updateBranch: pageParams.updateBranch,\n      navigate: pageParams.navigate\n    };\n  } catch (error) {\n    // If PageProvider is not ready yet, return empty object\n    if (error.message.includes('usePage must be used within a PageProvider')) {\n      console.log('useDAKParams: PageProvider not ready yet, returning empty data');\n      return {\n        user: null,\n        profile: null,\n        repository: null,\n        branch: null,\n        asset: null,\n        updateBranch: () => {},\n        navigate: () => {}\n      };\n    }\n    throw error;\n  }\n};\n\n/**\n * Hook specifically for User pages\n */\nexport const useUserParams = () => {\n  const pageParams = usePageParams();\n  \n  if (pageParams.type !== PAGE_TYPES.USER) {\n    throw new Error('useUserParams can only be used on User pages');\n  }\n\n  return {\n    user: pageParams.user,\n    profile: pageParams.profile,\n    navigateToDAK: pageParams.navigateToDAK,\n    navigate: pageParams.navigate\n  };\n};","import React from 'react';\n\n/**\n * Container for save buttons with independent states\n * Provides consistent UI for local and GitHub save operations\n */\nconst SaveButtonsContainer = ({\n  // States\n  hasChanges = false,\n  isSavingLocal = false,\n  isSavingGitHub = false,\n  canSaveToGitHub = false,\n  localSaveSuccess = false,\n  githubSaveSuccess = false,\n  savedLocally = false,\n  \n  // Handlers\n  onSaveLocal,\n  onSaveGitHub,\n  \n  // Configuration\n  showLocalButton = true,\n  showGitHubButton = true,\n  buttonSize = 'medium', // 'small', 'medium', 'large'\n  layout = 'horizontal' // 'horizontal', 'vertical'\n}) => {\n  \n  // Determine button states\n  const localButtonDisabled = !hasChanges || isSavingLocal || localSaveSuccess;\n  const githubButtonDisabled = !hasChanges || isSavingGitHub || githubSaveSuccess || !canSaveToGitHub;\n  \n  // Button text based on state\n  const getLocalButtonText = () => {\n    if (localSaveSuccess) return 'Saved Locally ✓';\n    if (isSavingLocal) return 'Saving...';\n    return 'Save Local';\n  };\n  \n  const getGitHubButtonText = () => {\n    if (githubSaveSuccess) return 'Committed ✓';\n    if (isSavingGitHub) return 'Committing...';\n    return 'Save to GitHub';\n  };\n\n  // CSS classes\n  const containerClasses = [\n    'save-buttons-container',\n    `layout-${layout}`,\n    `size-${buttonSize}`\n  ].join(' ');\n\n  const getButtonClasses = (type, disabled, success) => {\n    const classes = ['save-button', `save-button-${type}`];\n    if (disabled) classes.push('disabled');\n    if (success) classes.push('success');\n    return classes.join(' ');\n  };\n\n  return (\n    <div className={containerClasses}>\n      {/* Local Save Button */}\n      {showLocalButton && (\n        <button\n          className={getButtonClasses('local', localButtonDisabled, localSaveSuccess)}\n          onClick={onSaveLocal}\n          disabled={localButtonDisabled}\n          title={\n            !hasChanges ? 'No changes to save' :\n            localSaveSuccess ? 'Changes saved to local storage' :\n            isSavingLocal ? 'Saving to local storage...' :\n            'Save changes to browser local storage'\n          }\n        >\n          <span className=\"button-icon\">💾</span>\n          <span className=\"button-text\">{getLocalButtonText()}</span>\n        </button>\n      )}\n\n      {/* GitHub Save Button */}\n      {showGitHubButton && canSaveToGitHub && (\n        <button\n          className={getButtonClasses('github', githubButtonDisabled, githubSaveSuccess)}\n          onClick={onSaveGitHub}\n          disabled={githubButtonDisabled}\n          title={\n            !hasChanges ? 'No changes to save' :\n            githubSaveSuccess ? 'Changes committed to GitHub' :\n            isSavingGitHub ? 'Committing to GitHub...' :\n            'Commit changes to GitHub repository'\n          }\n        >\n          <span className=\"button-icon\">📤</span>\n          <span className=\"button-text\">{getGitHubButtonText()}</span>\n        </button>\n      )}\n\n      {/* GitHub unavailable indicator */}\n      {showGitHubButton && !canSaveToGitHub && (\n        <div className=\"github-unavailable\">\n          <span className=\"unavailable-icon\">🔒</span>\n          <span className=\"unavailable-text\">GitHub save unavailable</span>\n          <small>Login required for GitHub access</small>\n        </div>\n      )}\n\n      {/* Local storage indicator */}\n      {savedLocally && (\n        <div className=\"local-storage-indicator\">\n          <span className=\"local-icon\">💾</span>\n          <span className=\"local-text\">Local version available</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SaveButtonsContainer;","import React, { useEffect, useRef } from 'react';\n\n/**\n * Dialog for entering commit message when saving to GitHub\n * Provides commit message input with validation and cancel functionality\n */\nconst CommitMessageDialog = ({\n  isOpen = false,\n  commitMessage = '',\n  setCommitMessage,\n  onCommit,\n  onCancel,\n  isSaving = false,\n  fileName = '',\n  suggestedMessage = ''\n}) => {\n  const textareaRef = useRef(null);\n  \n  // Auto-focus and suggest message when dialog opens\n  useEffect(() => {\n    if (isOpen && textareaRef.current) {\n      textareaRef.current.focus();\n      \n      // Set suggested message if none provided\n      if (!commitMessage && !suggestedMessage && fileName) {\n        const defaultMessage = `Update ${fileName}`;\n        setCommitMessage(defaultMessage);\n      } else if (suggestedMessage && !commitMessage) {\n        setCommitMessage(suggestedMessage);\n      }\n    }\n  }, [isOpen, commitMessage, suggestedMessage, fileName, setCommitMessage]);\n\n  // Handle key presses\n  const handleKeyDown = (e) => {\n    if (e.key === 'Escape' && !isSaving) {\n      onCancel();\n    } else if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n      // Ctrl/Cmd + Enter to commit\n      if (commitMessage.trim() && !isSaving) {\n        onCommit(commitMessage.trim());\n      }\n    }\n  };\n\n  // Handle commit button click\n  const handleCommit = () => {\n    if (commitMessage.trim() && !isSaving) {\n      onCommit(commitMessage.trim());\n    }\n  };\n\n  // Handle overlay click to close\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget && !isSaving) {\n      onCancel();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div \n      className=\"commit-dialog-overlay\" \n      onClick={handleOverlayClick}\n      role=\"presentation\"\n    >\n      <div \n        className=\"commit-dialog\" \n        onKeyDown={handleKeyDown}\n        role=\"dialog\"\n        aria-labelledby=\"commit-dialog-title\"\n        aria-modal=\"true\"\n      >\n        <div className=\"commit-dialog-header\">\n          <h3 id=\"commit-dialog-title\">Commit Changes to GitHub</h3>\n          <button \n            className=\"close-button\"\n            onClick={onCancel}\n            disabled={isSaving}\n            aria-label=\"Close dialog\"\n          >\n            ✕\n          </button>\n        </div>\n        \n        <div className=\"commit-dialog-content\">\n          {fileName && (\n            <div className=\"file-info\">\n              <span className=\"file-icon\">📄</span>\n              <span className=\"file-name\">{fileName}</span>\n            </div>\n          )}\n          \n          <div className=\"commit-message-section\">\n            <label htmlFor=\"commit-message\" className=\"commit-message-label\">\n              Commit Message *\n            </label>\n            <textarea\n              id=\"commit-message\"\n              ref={textareaRef}\n              className=\"commit-message-input\"\n              value={commitMessage}\n              onChange={(e) => setCommitMessage(e.target.value)}\n              placeholder=\"Describe the changes you made...\"\n              rows={4}\n              disabled={isSaving}\n              required\n            />\n            <div className=\"commit-message-help\">\n              <small>\n                Describe what changes you made and why. This will be visible in the repository's commit history.\n              </small>\n            </div>\n          </div>\n          \n          <div className=\"commit-guidelines\">\n            <details>\n              <summary>Commit Message Guidelines</summary>\n              <ul>\n                <li>Use clear, descriptive language</li>\n                <li>Start with a verb (Add, Update, Fix, Remove, etc.)</li>\n                <li>Keep the first line under 72 characters</li>\n                <li>Add details in additional lines if needed</li>\n              </ul>\n            </details>\n          </div>\n        </div>\n        \n        <div className=\"commit-dialog-footer\">\n          <div className=\"dialog-actions\">\n            <button \n              className=\"btn btn-secondary\"\n              onClick={onCancel}\n              disabled={isSaving}\n            >\n              Cancel\n            </button>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleCommit}\n              disabled={!commitMessage.trim() || isSaving}\n            >\n              {isSaving ? (\n                <>\n                  <span className=\"spinner\"></span>\n                  Committing...\n                </>\n              ) : (\n                'Commit Changes'\n              )}\n            </button>\n          </div>\n          \n          <div className=\"keyboard-shortcut\">\n            <small>\n              Press <kbd>Ctrl+Enter</kbd> to commit or <kbd>Esc</kbd> to cancel\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommitMessageDialog;","/**\n * Data Access Layer\n * \n * Comprehensive service that integrates user access, staging ground, and GitHub\n * for a unified asset management experience across all user types.\n */\n\nimport userAccessService from './userAccessService';\nimport stagingGroundService from './stagingGroundService';\nimport githubService from './githubService';\nimport logger from '../utils/logger';\n\n/**\n * Save targets for asset operations\n */\nexport const SAVE_TARGETS = {\n  LOCAL: 'local',\n  GITHUB: 'github'\n};\n\n/**\n * Asset operation results\n */\nexport const OPERATION_RESULTS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PERMISSION_DENIED: 'permission_denied'\n};\n\nclass DataAccessLayer {\n  constructor() {\n    this.logger = logger.getLogger('DataAccessLayer');\n    this.pendingOperations = new Map();\n    this.assetCache = new Map();\n  }\n\n  /**\n   * Initialize data access layer\n   */\n  async initialize(repository, branch) {\n    this.logger.info('Initializing data access layer', { \n      repository: repository?.full_name, \n      branch \n    });\n    \n    // Initialize staging ground for the repository\n    stagingGroundService.initialize(repository, branch);\n    \n    // Initialize user access service if not already done\n    await userAccessService.initialize();\n  }\n\n  /**\n   * Get asset content from GitHub or local storage\n   */\n  async getAsset(owner, repo, branch, assetPath) {\n    const cacheKey = `${owner}/${repo}/${branch}/${assetPath}`;\n    \n    try {\n      // Check if user has read access\n      const access = await userAccessService.getRepositoryAccess(owner, repo, branch);\n      if (access === 'none') {\n        throw new Error('No access to this repository');\n      }\n\n      // First, check if there's a local version in staging ground\n      const stagingGround = stagingGroundService.getStagingGround();\n      const localFile = stagingGround.files.find(f => f.path === assetPath);\n      \n      if (localFile) {\n        this.logger.debug('Asset loaded from staging ground', { assetPath });\n        return {\n          content: localFile.content,\n          source: 'local',\n          metadata: localFile.metadata,\n          hasLocalChanges: true\n        };\n      }\n\n      // If no local version, get from GitHub\n      const content = await githubService.getFileContent(owner, repo, assetPath, branch);\n\n      // Cache the content\n      this.assetCache.set(cacheKey, content);\n\n      this.logger.debug('Asset loaded from GitHub', { assetPath, source: 'github' });\n      return {\n        content,\n        source: 'github',\n        hasLocalChanges: false\n      };\n\n    } catch (error) {\n      this.logger.error('Error getting asset', { \n        owner, repo, branch, assetPath, error: error.message \n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Save asset to local storage (staging ground)\n   */\n  async saveAssetLocal(assetPath, content, metadata = {}) {\n    try {\n      const userType = userAccessService.getUserType();\n      \n      // All user types can save to local storage\n      const success = stagingGroundService.updateFile(assetPath, content, {\n        ...metadata,\n        savedBy: userType,\n        saveTarget: SAVE_TARGETS.LOCAL\n      });\n\n      if (success) {\n        this.logger.info('Asset saved to local storage', { assetPath, userType });\n        return {\n          result: OPERATION_RESULTS.SUCCESS,\n          message: 'Changes saved to local staging area',\n          target: SAVE_TARGETS.LOCAL\n        };\n      } else {\n        throw new Error('Failed to save to local storage');\n      }\n\n    } catch (error) {\n      this.logger.error('Error saving asset locally', { assetPath, error: error.message });\n      return {\n        result: OPERATION_RESULTS.ERROR,\n        message: `Failed to save locally: ${error.message}`,\n        target: SAVE_TARGETS.LOCAL\n      };\n    }\n  }\n\n  /**\n   * Save asset to GitHub\n   */\n  async saveAssetGitHub(owner, repo, branch, assetPath, content, commitMessage, metadata = {}) {\n    try {\n      const userType = userAccessService.getUserType();\n      \n      // Check if user can save to GitHub\n      const canSave = await userAccessService.canSaveToGitHub(owner, repo, branch);\n      \n      if (!canSave) {\n        if (userType === 'unauthenticated') {\n          return {\n            result: OPERATION_RESULTS.PERMISSION_DENIED,\n            message: 'Please authenticate to save changes to GitHub.',\n            target: SAVE_TARGETS.GITHUB\n          };\n        } else {\n          return {\n            result: OPERATION_RESULTS.PERMISSION_DENIED,\n            message: 'You do not have write access to this repository.',\n            target: SAVE_TARGETS.GITHUB\n          };\n        }\n      }\n\n      // For authenticated users with write access, save to GitHub\n      const result = await githubService.updateFileContent(\n        owner, \n        repo, \n        assetPath, \n        content, \n        commitMessage, \n        branch\n      );\n\n      if (result.success) {\n        // Remove from staging ground since it's now committed\n        stagingGroundService.removeFile(assetPath);\n        \n        // Clear cache\n        const cacheKey = `${owner}/${repo}/${branch}/${assetPath}`;\n        this.assetCache.delete(cacheKey);\n\n        this.logger.info('Asset saved to GitHub', { \n          owner, repo, branch, assetPath, commit: result.data?.commit?.sha \n        });\n\n        return {\n          result: OPERATION_RESULTS.SUCCESS,\n          message: 'Changes successfully committed to GitHub',\n          target: SAVE_TARGETS.GITHUB,\n          commitSha: result.data?.commit?.sha,\n          commitUrl: result.data?.commit?.html_url\n        };\n      } else {\n        throw new Error(result.error || 'GitHub commit failed');\n      }\n\n    } catch (error) {\n      this.logger.error('Error saving asset to GitHub', { \n        owner, repo, branch, assetPath, error: error.message \n      });\n      \n      return {\n        result: OPERATION_RESULTS.ERROR,\n        message: `Failed to save to GitHub: ${error.message}`,\n        target: SAVE_TARGETS.GITHUB\n      };\n    }\n  }\n\n\n\n  /**\n   * Get save options for current user and asset\n   */\n  async getSaveOptions(owner, repo, branch) {\n    const userType = userAccessService.getUserType();\n    const canSaveGitHub = await userAccessService.canSaveToGitHub(owner, repo, branch);\n    const canSaveLocal = userAccessService.canSaveLocal();\n    const uiBehavior = userAccessService.getUIBehavior();\n\n    return {\n      canSaveLocal,\n      canSaveGitHub,\n      showSaveLocal: uiBehavior.showSaveLocal,\n      showSaveGitHub: uiBehavior.showSaveToGitHub,\n      confirmBeforeSave: uiBehavior.confirmBeforeSave,\n      userType,\n      restrictions: this.getSaveRestrictions(userType, canSaveGitHub)\n    };\n  }\n\n  /**\n   * Get save restrictions and messaging for user type\n   */\n  getSaveRestrictions(userType, canSaveGitHub) {\n    switch (userType) {\n      case 'unauthenticated':\n        return {\n          localMessage: 'Changes will be saved to your browser only',\n          githubMessage: 'Please authenticate to save to GitHub',\n          githubDisabled: true\n        };\n      \n      case 'demo':\n        return {\n          localMessage: 'Changes will be saved to your browser only',\n          githubMessage: 'Demo users cannot save to GitHub',\n          githubDisabled: true\n        };\n      \n      case 'authenticated':\n        if (canSaveGitHub) {\n          return {\n            localMessage: 'Save changes to staging area',\n            githubMessage: 'Commit changes to GitHub repository',\n            githubDisabled: false\n          };\n        } else {\n          return {\n            localMessage: 'Changes will be saved to your browser only',\n            githubMessage: 'You do not have write access to this repository',\n            githubDisabled: true\n          };\n        }\n      \n      default:\n        return {\n          localMessage: 'Local saves only',\n          githubMessage: 'GitHub saves not available',\n          githubDisabled: true\n        };\n    }\n  }\n\n  /**\n   * Get staging ground status\n   */\n  getStagingGroundStatus() {\n    return stagingGroundService.getStatus();\n  }\n\n  /**\n   * Clear staging ground\n   */\n  clearStagingGround() {\n    return stagingGroundService.clearStagingGround();\n  }\n\n  /**\n   * Get changed files in staging ground\n   */\n  getChangedFiles() {\n    const stagingGround = stagingGroundService.getStagingGround();\n    return stagingGround.files;\n  }\n\n  /**\n   * Check if asset has local changes\n   */\n  hasLocalChanges(assetPath) {\n    const stagingGround = stagingGroundService.getStagingGround();\n    return stagingGround.files.some(f => f.path === assetPath);\n  }\n\n  /**\n   * Create new asset (when supported by user type)\n   */\n  async createAsset(owner, repo, branch, assetPath, initialContent = '', metadata = {}) {\n    const uiBehavior = userAccessService.getUIBehavior();\n    \n    if (!uiBehavior.allowCreateNew) {\n      throw new Error('Current user type cannot create new assets');\n    }\n\n    // Save as local first\n    return this.saveAssetLocal(assetPath, initialContent, {\n      ...metadata,\n      isNew: true,\n      createdAt: Date.now()\n    });\n  }\n\n  /**\n   * Batch operations for multiple assets\n   */\n  async batchSaveLocal(assets) {\n    const results = [];\n    \n    for (const asset of assets) {\n      const result = await this.saveAssetLocal(\n        asset.path, \n        asset.content, \n        asset.metadata\n      );\n      results.push({ ...result, path: asset.path });\n    }\n\n    return {\n      success: results.every(r => r.result === OPERATION_RESULTS.SUCCESS),\n      results\n    };\n  }\n\n  /**\n   * Get access information for current context\n   */\n  async getAccessInfo(owner, repo, branch) {\n    const [access, badge, saveOptions] = await Promise.all([\n      userAccessService.getRepositoryAccess(owner, repo, branch),\n      userAccessService.getAccessBadge(owner, repo, branch),\n      this.getSaveOptions(owner, repo, branch)\n    ]);\n\n    return {\n      access,\n      badge,\n      saveOptions,\n      userType: userAccessService.getUserType()\n    };\n  }\n}\n\n// Create singleton instance\nconst dataAccessLayer = new DataAccessLayer();\n\nexport default dataAccessLayer;","import React, { useState, useCallback, useEffect } from 'react';\nimport { PageLayout } from './index';\nimport SaveButtonsContainer from './SaveButtonsContainer';\nimport CommitMessageDialog from './CommitMessageDialog';\nimport dataAccessLayer from '../../services/dataAccessLayer';\n\n/**\n * Enhanced page framework for asset editors\n * Provides consistent save functionality with user access integration\n */\nconst AssetEditorLayout = ({\n  children,\n  pageName,\n  // Asset information\n  file,\n  repository,\n  branch,\n  // Content management\n  content,\n  originalContent,\n  hasChanges = false,\n  // Save callbacks\n  onSave,\n  onContentChange,\n  // Custom save functions (for special cases like BPMN that need XML export)\n  customSaveToGitHub,\n  // UI customization\n  showSaveButtons = true,\n  saveButtonsPosition = 'top', // 'top', 'bottom', 'both'\n  ...pageLayoutProps\n}) => {\n  // Save states\n  const [isSavingLocal, setIsSavingLocal] = useState(false);\n  const [isSavingGitHub, setIsSavingGitHub] = useState(false);\n  const [saveError, setSaveError] = useState(null);\n  const [localSaveSuccess, setLocalSaveSuccess] = useState(false);\n  const [githubSaveSuccess, setGithubSaveSuccess] = useState(false);\n  const [saveOptions, setSaveOptions] = useState(null);\n  \n  // Commit dialog state\n  const [showCommitDialog, setShowCommitDialog] = useState(false);\n  const [commitMessage, setCommitMessage] = useState('');\n\n  // Load save options based on current user and repository\n  useEffect(() => {\n    const loadSaveOptions = async () => {\n      if (repository) {\n        try {\n          const options = await dataAccessLayer.getSaveOptions(\n            repository.owner?.login,\n            repository.name,\n            branch\n          );\n          setSaveOptions(options);\n        } catch (error) {\n          console.error('Error loading save options:', error);\n        }\n      }\n    };\n\n    loadSaveOptions();\n  }, [repository, branch]);\n\n  // Check if user can save to GitHub based on access service\n  const canSaveToGitHub = saveOptions?.canSaveGitHub && saveOptions?.showSaveGitHub;\n\n  // Handle local save\n  const handleSaveLocal = useCallback(async () => {\n    if (!hasChanges || !file?.path) return;\n\n    try {\n      setIsSavingLocal(true);\n      setSaveError(null);\n      setLocalSaveSuccess(false);\n\n      // Use data access layer for local save\n      const result = await dataAccessLayer.saveAssetLocal(file.path, content, {\n        repository: repository?.full_name || `${repository?.owner?.login}/${repository?.name}`,\n        branch: branch || repository?.default_branch || 'main',\n        fileName: file.name,\n        timestamp: new Date().toISOString()\n      });\n      \n      if (result.result === 'success') {\n        setLocalSaveSuccess(true);\n        onSave && onSave(content, 'local');\n        \n        // Auto-hide success message after 3 seconds\n        setTimeout(() => {\n          setLocalSaveSuccess(false);\n        }, 3000);\n      } else {\n        throw new Error(result.message || 'Failed to save to local storage');\n      }\n\n    } catch (error) {\n      console.error('Error saving file locally:', error);\n      setSaveError(`Failed to save locally: ${error.message}`);\n    } finally {\n      setIsSavingLocal(false);\n    }\n  }, [hasChanges, file, content, repository, branch, onSave]);\n\n  // Handle GitHub save - shows commit dialog\n  const handleSaveGitHub = useCallback(() => {\n    if (!hasChanges || !canSaveToGitHub) return;\n    \n    setSaveError(null);\n    setShowCommitDialog(true);\n  }, [hasChanges, canSaveToGitHub]);\n\n  // Handle commit to GitHub with message\n  const handleCommitToGitHub = useCallback(async (message) => {\n    if (!message.trim() || !file?.path) return;\n\n    try {\n      setIsSavingGitHub(true);\n      setSaveError(null);\n      setGithubSaveSuccess(false);\n\n      // Use custom save function if provided (for special cases like BPMN)\n      if (customSaveToGitHub) {\n        const success = await customSaveToGitHub(message.trim());\n        if (success) {\n          setGithubSaveSuccess(true);\n          setShowCommitDialog(false);\n          setCommitMessage('');\n          onSave && onSave(content, 'github');\n          \n          // Auto-hide success message after 3 seconds\n          setTimeout(() => {\n            setGithubSaveSuccess(false);\n          }, 3000);\n        } else {\n          throw new Error('Custom save function failed');\n        }\n        return;\n      }\n\n      // Use data access layer for GitHub save\n      const result = await dataAccessLayer.saveAssetGitHub(\n        repository?.owner?.login,\n        repository?.name,\n        branch,\n        file.path,\n        content,\n        message.trim()\n      );\n\n      if (result.result === 'success') {\n        setGithubSaveSuccess(true);\n        setShowCommitDialog(false);\n        setCommitMessage('');\n        onSave && onSave(content, 'github');\n        \n        // Auto-hide success message after 3 seconds\n        setTimeout(() => {\n          setGithubSaveSuccess(false);\n        }, 3000);\n      } else {\n        // Handle different result types\n        let errorMessage = result.message;\n        if (result.result === 'demo_mode_blocked') {\n          errorMessage = 'Demo users cannot save to GitHub. You can save changes locally instead.';\n        } else if (result.result === 'permission_denied') {\n          errorMessage = 'You do not have permission to save to this repository.';\n        }\n        throw new Error(errorMessage);\n      }\n\n    } catch (error) {\n      console.error('Error saving file to GitHub:', error);\n      setSaveError(`Failed to save to GitHub: ${error.message}`);\n    } finally {\n      setIsSavingGitHub(false);\n    }\n  }, [file, content, repository, branch, onSave, customSaveToGitHub]);\n\n  // Handle commit dialog cancel\n  const handleCancelCommit = useCallback(() => {\n    setShowCommitDialog(false);\n    setCommitMessage('');\n  }, []);\n\n  const saveButtonsProps = {\n    // States\n    hasChanges,\n    isSavingLocal,\n    isSavingGitHub,\n    canSaveToGitHub,\n    localSaveSuccess,\n    githubSaveSuccess,\n    \n    // Handlers\n    onSaveLocal: handleSaveLocal,\n    onSaveGitHub: handleSaveGitHub\n  };\n\n  return (\n    <PageLayout pageName={pageName} {...pageLayoutProps}>\n      <div className=\"asset-editor-layout\">\n        {/* Top save buttons */}\n        {showSaveButtons && (saveButtonsPosition === 'top' || saveButtonsPosition === 'both') && (\n          <div className=\"save-buttons-top\">\n            <SaveButtonsContainer {...saveButtonsProps} />\n          </div>\n        )}\n\n        {/* Error display */}\n        {saveError && (\n          <div className=\"asset-editor-error\">\n            <span className=\"error-icon\">⚠️</span>\n            {saveError}\n            <button \n              className=\"btn-link error-dismiss\"\n              onClick={() => setSaveError(null)}\n            >\n              ✕\n            </button>\n          </div>\n        )}\n\n        {/* Success messages */}\n        {localSaveSuccess && (\n          <div className=\"asset-editor-success\">\n            <span className=\"success-icon\">✅</span>\n            Changes saved locally successfully!\n          </div>\n        )}\n        \n        {githubSaveSuccess && (\n          <div className=\"asset-editor-success\">\n            <span className=\"success-icon\">✅</span>\n            Changes committed to GitHub successfully!\n          </div>\n        )}\n\n        {/* Main content area */}\n        <div className=\"asset-editor-content\">\n          {children}\n        </div>\n\n        {/* Bottom save buttons */}\n        {showSaveButtons && (saveButtonsPosition === 'bottom' || saveButtonsPosition === 'both') && (\n          <div className=\"save-buttons-bottom\">\n            <SaveButtonsContainer {...saveButtonsProps} />\n          </div>\n        )}\n\n        {/* Commit message dialog */}\n        {showCommitDialog && (\n          <CommitMessageDialog\n            isOpen={showCommitDialog}\n            commitMessage={commitMessage}\n            setCommitMessage={setCommitMessage}\n            onCommit={handleCommitToGitHub}\n            onCancel={handleCancelCommit}\n            isSaving={isSavingGitHub}\n            fileName={file?.name}\n          />\n        )}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default AssetEditorLayout;","/**\n * Service for managing feature file changes in browser localStorage\n * This allows users to edit and save feature files locally without requiring GitHub authentication\n */\n\nclass LocalStorageService {\n  constructor() {\n    this.storageKey = 'sgex_feature_files';\n    this.metadataKey = 'sgex_feature_files_metadata';\n  }\n\n  /**\n   * Get all locally stored feature file changes\n   * @returns {Object} Object with file paths as keys and content as values\n   */\n  getAllLocalChanges() {\n    try {\n      const data = localStorage.getItem(this.storageKey);\n      return data ? JSON.parse(data) : {};\n    } catch (error) {\n      console.error('Error reading local changes:', error);\n      return {};\n    }\n  }\n\n  /**\n   * Get locally stored content for a specific file\n   * @param {string} filePath - The file path\n   * @returns {string|null} The stored content or null if not found\n   */\n  getLocalContent(filePath) {\n    const changes = this.getAllLocalChanges();\n    return changes[filePath] || null;\n  }\n\n  /**\n   * Save feature file content to localStorage\n   * @param {string} filePath - The file path\n   * @param {string} content - The file content\n   * @param {Object} metadata - Additional metadata (repository, branch, etc.)\n   */\n  saveLocal(filePath, content, metadata = {}) {\n    try {\n      // Save the content\n      const changes = this.getAllLocalChanges();\n      changes[filePath] = content;\n      localStorage.setItem(this.storageKey, JSON.stringify(changes));\n\n      // Save metadata\n      const allMetadata = this.getAllMetadata();\n      allMetadata[filePath] = {\n        ...metadata,\n        lastModified: new Date().toISOString(),\n        originalPath: filePath\n      };\n      localStorage.setItem(this.metadataKey, JSON.stringify(allMetadata));\n\n      return true;\n    } catch (error) {\n      console.error('Error saving to localStorage:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Remove locally stored content for a file\n   * @param {string} filePath - The file path\n   */\n  removeLocal(filePath) {\n    try {\n      const changes = this.getAllLocalChanges();\n      delete changes[filePath];\n      localStorage.setItem(this.storageKey, JSON.stringify(changes));\n\n      const metadata = this.getAllMetadata();\n      delete metadata[filePath];\n      localStorage.setItem(this.metadataKey, JSON.stringify(metadata));\n\n      return true;\n    } catch (error) {\n      console.error('Error removing from localStorage:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get metadata for all locally stored files\n   * @returns {Object} Metadata object\n   */\n  getAllMetadata() {\n    try {\n      const data = localStorage.getItem(this.metadataKey);\n      return data ? JSON.parse(data) : {};\n    } catch (error) {\n      console.error('Error reading metadata:', error);\n      return {};\n    }\n  }\n\n  /**\n   * Get metadata for a specific file\n   * @param {string} filePath - The file path\n   * @returns {Object|null} The metadata or null if not found\n   */\n  getMetadata(filePath) {\n    const metadata = this.getAllMetadata();\n    return metadata[filePath] || null;\n  }\n\n  /**\n   * Check if there are any local changes\n   * @returns {boolean} True if there are local changes\n   */\n  hasLocalChanges() {\n    const changes = this.getAllLocalChanges();\n    return Object.keys(changes).length > 0;\n  }\n\n  /**\n   * Get the number of locally changed files\n   * @returns {number} Number of files with local changes\n   */\n  getLocalChangesCount() {\n    const changes = this.getAllLocalChanges();\n    return Object.keys(changes).length;\n  }\n\n  /**\n   * Export local changes as a downloadable file\n   * @param {string} format - Export format ('json' or 'zip')\n   * @returns {Blob} The export data as a Blob\n   */\n  exportLocalChanges(format = 'json') {\n    const changes = this.getAllLocalChanges();\n    const metadata = this.getAllMetadata();\n\n    if (format === 'json') {\n      const exportData = {\n        exported: new Date().toISOString(),\n        version: '1.0',\n        changes,\n        metadata\n      };\n      \n      return new Blob(\n        [JSON.stringify(exportData, null, 2)], \n        { type: 'application/json' }\n      );\n    }\n\n    // For future expansion - could support ZIP format with individual files\n    throw new Error(`Export format '${format}' not supported`);\n  }\n\n  /**\n   * Import local changes from exported data\n   * @param {string} jsonData - The exported JSON data\n   * @returns {boolean} True if import was successful\n   */\n  importLocalChanges(jsonData) {\n    try {\n      const importData = JSON.parse(jsonData);\n      \n      if (!importData.changes || !importData.metadata) {\n        throw new Error('Invalid import data format');\n      }\n\n      // Merge with existing data\n      const existingChanges = this.getAllLocalChanges();\n      const existingMetadata = this.getAllMetadata();\n\n      const mergedChanges = { ...existingChanges, ...importData.changes };\n      const mergedMetadata = { ...existingMetadata, ...importData.metadata };\n\n      localStorage.setItem(this.storageKey, JSON.stringify(mergedChanges));\n      localStorage.setItem(this.metadataKey, JSON.stringify(mergedMetadata));\n\n      return true;\n    } catch (error) {\n      console.error('Error importing local changes:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Clear all local changes\n   */\n  clearAllLocalChanges() {\n    localStorage.removeItem(this.storageKey);\n    localStorage.removeItem(this.metadataKey);\n  }\n\n  /**\n   * Get storage usage information\n   * @returns {Object} Storage usage stats\n   */\n  getStorageInfo() {\n    const changes = this.getAllLocalChanges();\n    const metadata = this.getAllMetadata();\n    \n    const changesSize = JSON.stringify(changes).length;\n    const metadataSize = JSON.stringify(metadata).length;\n    const totalSize = changesSize + metadataSize;\n\n    return {\n      fileCount: Object.keys(changes).length,\n      totalSize,\n      changesSize,\n      metadataSize,\n      formattedSize: this.formatBytes(totalSize)\n    };\n  }\n\n  /**\n   * Format bytes into human readable string\n   * @param {number} bytes - Number of bytes\n   * @returns {string} Formatted string\n   */\n  formatBytes(bytes) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n}\n\n// Create and export a singleton instance\nconst localStorageService = new LocalStorageService();\nexport default localStorageService;","/**\n * Tool Definition Framework\n * \n * Provides a simple API for creating new tools in the SGEX Workbench.\n * Handles page setup, user access, data management, and UI integration.\n */\n\nimport React from 'react';\nimport { PageLayout, AssetEditorLayout } from './index';\nimport { usePageParams } from './usePageParams';\nimport userAccessService from '../../services/userAccessService';\nimport dataAccessLayer from '../../services/dataAccessLayer';\n\n/**\n * Tool types supported by the framework\n */\nexport const TOOL_TYPES = {\n  VIEWER: 'viewer',        // Read-only asset viewer\n  EDITOR: 'editor',        // Asset editor with save capabilities\n  DASHBOARD: 'dashboard',  // DAK-level dashboard\n  UTILITY: 'utility'       // General utility tool\n};\n\n/**\n * Base tool definition interface\n */\nexport class ToolDefinition {\n  constructor(config) {\n    this.id = config.id;\n    this.name = config.name;\n    this.title = config.title || config.name;\n    this.description = config.description;\n    this.type = config.type || TOOL_TYPES.UTILITY;\n    this.route = config.route || `/${this.id}`;\n    this.icon = config.icon;\n    this.category = config.category || 'general';\n    \n    // Access requirements\n    this.requiresAuth = config.requiresAuth !== false; // Default to true\n    this.supportsDemo = config.supportsDemo !== false; // Default to true\n    this.requiresDAK = config.requiresDAK || false;\n    \n    // Asset handling\n    this.assetTypes = config.assetTypes || [];\n    this.assetPattern = config.assetPattern;\n    \n    // UI components\n    this.viewerComponent = config.viewerComponent;\n    this.editorComponent = config.editorComponent;\n    this.dashboardComponent = config.dashboardComponent;\n    \n    // Hooks\n    this.onInit = config.onInit;\n    this.onAssetLoad = config.onAssetLoad;\n    this.onAssetSave = config.onAssetSave;\n    this.onError = config.onError;\n  }\n\n  /**\n   * Check if tool supports the given asset type\n   */\n  supportsAsset(assetPath) {\n    if (!this.assetTypes?.length && !this.assetPattern) {\n      return true; // Tool accepts any asset\n    }\n    \n    if (this.assetPattern) {\n      return new RegExp(this.assetPattern).test(assetPath);\n    }\n    \n    return this.assetTypes.some(type => assetPath.includes(type));\n  }\n\n  /**\n   * Check if current user can access this tool\n   */\n  async canAccess() {\n    if (this.requiresAuth && userAccessService.isUnauthenticated()) {\n      return false;\n    }\n    \n    return true;\n  }\n\n  /**\n   * Generate React component for this tool\n   */\n  createComponent() {\n    const toolDef = this;\n    \n    return function ToolComponent(props) {\n      return <ToolWrapper toolDefinition={toolDef} {...props} />;\n    };\n  }\n}\n\n/**\n * Wrapper component that handles framework integration\n */\nconst ToolWrapper = ({ toolDefinition, ...props }) => {\n  const pageParams = usePageParams();\n  const [toolState, setToolState] = React.useState({\n    loading: true,\n    error: null,\n    canAccess: false,\n    assets: [],\n    content: null\n  });\n\n  const initializeTool = React.useCallback(async () => {\n    try {\n      setToolState(prev => ({ ...prev, loading: true, error: null }));\n\n      // Check access\n      const canAccess = await toolDefinition.canAccess();\n      if (!canAccess) {\n        throw new Error(`Access denied: This tool requires ${toolDefinition.requiresAuth ? 'authentication' : 'different user type'}`);\n      }\n\n      // Initialize data access layer if needed\n      if (pageParams.repository) {\n        await dataAccessLayer.initialize(pageParams.repository, pageParams.branch);\n      }\n\n      // Load assets if this is an asset tool\n      let assets = [];\n      let content = null;\n      \n      if (pageParams.asset && (toolDefinition.type === TOOL_TYPES.VIEWER || toolDefinition.type === TOOL_TYPES.EDITOR)) {\n        if (toolDefinition.supportsAsset(pageParams.asset)) {\n          const assetData = await dataAccessLayer.getAsset(\n            pageParams.user,\n            pageParams.repository?.name,\n            pageParams.branch,\n            pageParams.asset\n          );\n          assets = [{ path: pageParams.asset, ...assetData }];\n          content = assetData.content;\n        } else {\n          throw new Error(`This tool does not support asset type: ${pageParams.asset}`);\n        }\n      }\n\n      // Call tool's initialization hook\n      if (toolDefinition.onInit) {\n        await toolDefinition.onInit({\n          pageParams,\n          assets,\n          content\n        });\n      }\n\n      setToolState({\n        loading: false,\n        error: null,\n        canAccess: true,\n        assets,\n        content\n      });\n\n    } catch (error) {\n      console.error(`Error initializing tool ${toolDefinition.id}:`, error);\n      setToolState({\n        loading: false,\n        error: error.message,\n        canAccess: false,\n        assets: [],\n        content: null\n      });\n\n      // Call tool's error hook\n      if (toolDefinition.onError) {\n        toolDefinition.onError(error, { pageParams });\n      }\n    }\n  }, [toolDefinition, pageParams]);\n\n  React.useEffect(() => {\n    initializeTool();\n  }, [initializeTool]);\n\n  const handleAssetSave = async (newContent, saveType) => {\n    if (!pageParams.asset) return;\n\n    try {\n      let result;\n      if (saveType === 'local') {\n        result = await dataAccessLayer.saveAssetLocal(pageParams.asset, newContent);\n      } else if (saveType === 'github') {\n        // This should be called with commit message from UI\n        throw new Error('GitHub save requires commit message - use handleGitHubSave instead');\n      }\n\n      // Call tool's save hook\n      if (toolDefinition.onAssetSave) {\n        await toolDefinition.onAssetSave({\n          asset: pageParams.asset,\n          content: newContent,\n          saveType,\n          result,\n          pageParams\n        });\n      }\n\n      return result;\n    } catch (error) {\n      console.error(`Error saving asset in tool ${toolDefinition.id}:`, error);\n      throw error;\n    }\n  };\n\n  const handleGitHubSave = async (newContent, commitMessage) => {\n    if (!pageParams.asset) return;\n\n    try {\n      const result = await dataAccessLayer.saveAssetGitHub(\n        pageParams.user,\n        pageParams.repository?.name,\n        pageParams.branch,\n        pageParams.asset,\n        newContent,\n        commitMessage\n      );\n\n      // Call tool's save hook\n      if (toolDefinition.onAssetSave) {\n        await toolDefinition.onAssetSave({\n          asset: pageParams.asset,\n          content: newContent,\n          saveType: 'github',\n          result,\n          commitMessage,\n          pageParams\n        });\n      }\n\n      return result;\n    } catch (error) {\n      console.error(`Error saving asset to GitHub in tool ${toolDefinition.id}:`, error);\n      throw error;\n    }\n  };\n\n  // Show loading state\n  if (toolState.loading) {\n    return (\n      <PageLayout pageName={toolDefinition.id}>\n        <div className=\"tool-loading\">\n          <h2>Loading {toolDefinition.title}...</h2>\n          <p>Initializing tool and checking access permissions.</p>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  // Show error state\n  if (toolState.error || !toolState.canAccess) {\n    return (\n      <PageLayout pageName={toolDefinition.id}>\n        <div className=\"tool-error\">\n          <h2>Cannot Access {toolDefinition.title}</h2>\n          <p>{toolState.error || 'Access denied'}</p>\n          <button onClick={() => window.history.back()}>\n            Go Back\n          </button>\n        </div>\n      </PageLayout>\n    );\n  }\n\n  // Render appropriate component based on tool type\n  const renderToolContent = () => {\n    const commonProps = {\n      toolDefinition,\n      pageParams,\n      toolState,\n      onAssetSave: handleAssetSave,\n      onGitHubSave: handleGitHubSave,\n      ...props\n    };\n\n    switch (toolDefinition.type) {\n      case TOOL_TYPES.EDITOR:\n        if (toolDefinition.editorComponent) {\n          const EditorComponent = toolDefinition.editorComponent;\n          \n          if (pageParams.asset && toolState.assets.length > 0) {\n            // Use AssetEditorLayout for asset editors\n            return (\n              <AssetEditorLayout\n                pageName={toolDefinition.id}\n                file={{ name: pageParams.asset, path: pageParams.asset }}\n                repository={pageParams.repository}\n                branch={pageParams.branch}\n                content={toolState.content}\n                originalContent={toolState.assets[0]?.content}\n                hasChanges={false} // Will be managed by the editor component\n                onSave={handleAssetSave}\n                onContentChange={(content) => {\n                  setToolState(prev => ({ ...prev, content }));\n                }}\n              >\n                <EditorComponent {...commonProps} />\n              </AssetEditorLayout>\n            );\n          } else {\n            // General editor without specific asset\n            return (\n              <PageLayout pageName={toolDefinition.id}>\n                <EditorComponent {...commonProps} />\n              </PageLayout>\n            );\n          }\n        }\n        break;\n\n      case TOOL_TYPES.VIEWER:\n        if (toolDefinition.viewerComponent) {\n          const ViewerComponent = toolDefinition.viewerComponent;\n          return (\n            <PageLayout pageName={toolDefinition.id}>\n              <ViewerComponent {...commonProps} />\n            </PageLayout>\n          );\n        }\n        break;\n\n      case TOOL_TYPES.DASHBOARD:\n        if (toolDefinition.dashboardComponent) {\n          const DashboardComponent = toolDefinition.dashboardComponent;\n          return (\n            <PageLayout pageName={toolDefinition.id}>\n              <DashboardComponent {...commonProps} />\n            </PageLayout>\n          );\n        }\n        break;\n\n      case TOOL_TYPES.UTILITY:\n      default:\n        // Use viewer component as fallback, or dashboard component\n        const Component = toolDefinition.viewerComponent || \n                         toolDefinition.editorComponent || \n                         toolDefinition.dashboardComponent;\n        \n        if (Component) {\n          return (\n            <PageLayout pageName={toolDefinition.id}>\n              <Component {...commonProps} />\n            </PageLayout>\n          );\n        }\n        break;\n    }\n\n    // Fallback if no component is provided\n    return (\n      <PageLayout pageName={toolDefinition.id}>\n        <div className=\"tool-fallback\">\n          <h1>{toolDefinition.title}</h1>\n          <p>{toolDefinition.description}</p>\n          <p>No component defined for this tool.</p>\n        </div>\n      </PageLayout>\n    );\n  };\n\n  return renderToolContent();\n};\n\n/**\n * Registry for managing tool definitions\n */\nclass ToolRegistry {\n  constructor() {\n    this.tools = new Map();\n  }\n\n  /**\n   * Register a new tool\n   */\n  register(config) {\n    const tool = new ToolDefinition(config);\n    this.tools.set(tool.id, tool);\n    return tool;\n  }\n\n  /**\n   * Get tool by ID\n   */\n  get(id) {\n    return this.tools.get(id);\n  }\n\n  /**\n   * Get all tools\n   */\n  getAll() {\n    return Array.from(this.tools.values());\n  }\n\n  /**\n   * Get tools by category\n   */\n  getByCategory(category) {\n    return this.getAll().filter(tool => tool.category === category);\n  }\n\n  /**\n   * Get tools that support a specific asset type\n   */\n  getByAssetType(assetPath) {\n    return this.getAll().filter(tool => tool.supportsAsset(assetPath));\n  }\n\n  /**\n   * Get tools accessible by current user\n   */\n  async getAccessibleTools() {\n    const tools = this.getAll();\n    const accessibleTools = [];\n\n    for (const tool of tools) {\n      if (await tool.canAccess()) {\n        accessibleTools.push(tool);\n      }\n    }\n\n    return accessibleTools;\n  }\n}\n\n// Create singleton registry\nconst toolRegistry = new ToolRegistry();\n\n/**\n * Helper function to create a simple tool\n */\nexport const createTool = (config) => {\n  return toolRegistry.register(config);\n};\n\n/**\n * Helper function to create an asset editor tool\n */\nexport const createAssetEditor = (config) => {\n  return createTool({\n    ...config,\n    type: TOOL_TYPES.EDITOR,\n    requiresDAK: true\n  });\n};\n\n/**\n * Helper function to create an asset viewer tool\n */\nexport const createAssetViewer = (config) => {\n  return createTool({\n    ...config,\n    type: TOOL_TYPES.VIEWER,\n    requiresDAK: true,\n    requiresAuth: false // Viewers can be used by unauthenticated users\n  });\n};\n\n/**\n * Helper function to create a dashboard tool\n */\nexport const createDashboard = (config) => {\n  return createTool({\n    ...config,\n    type: TOOL_TYPES.DASHBOARD,\n    requiresDAK: true\n  });\n};\n\nexport default toolRegistry;"],"names":["ALT_TEXT_KEYS","MASCOT_HELPER","MASCOT_ICON","MASCOT_EXAMINING","MASCOT_CELEBRATING","MASCOT_CODING","MASCOT_COMMUNITY","AVATAR_USER","AVATAR_ORGANIZATION","AVATAR_PERSONAL","AVATAR_PROFILE","ICON_SGEX","ICON_BUG_REPORT","ICON_SECURITY","ICON_ACTION","ICON_DAK_COMPONENT","IMAGE_AUTHORING","IMAGE_COLLABORATION","IMAGE_WORKFLOW","IMAGE_PRONUNCIATION","LOGO_SGEX","LOGO_WHO","getAltText","t","key","fallback","interpolation","arguments","length","undefined","translated","error","console","warn","concat","getAvatarAltText","entity","type","name","display_name","login","constructor","this","logger","getLogger","clearAllCache","info","repoCacheCleared","repositoryCacheService","clearAllCaches","debug","success","branchContextService","clearAllBranchContext","clearAllStagingGrounds","clearOtherSGEXData","message","keys","Object","localStorage","filter","startsWith","forEach","removeItem","sessionKeys","sessionStorage","getCacheInfo","repositoryCache","count","branchContext","hasData","repositoryCount","stagingGround","other","localKeys","getItem","parsed","JSON","parse","e","getUncommittedWork","uncommittedWork","includes","data","files","keyParts","replace","split","branch","pop","repository","join","push","fileCount","lastModified","timestamp","Date","_ref","onClose","trackedItems","setTrackedItems","useState","issues","pullRequests","loading","setLoading","setError","activeTab","setActiveTab","syncing","setSyncing","showFilters","setShowFilters","repositoryFilters","setRepositoryFilters","trackedRepositories","setTrackedRepositories","sortBy","setSortBy","sortOrder","setSortOrder","useEffect","loadTrackedItems","async","items","filters","repositories","Promise","all","issueTrackingService","getFilteredTrackedItems","getRepositoryFilters","getTrackedRepositories","err","formatDate","dateString","toLocaleDateString","year","month","day","sortItems","sort","a","b","comparison","number","created_at","updated_at","getStateColor","state","renderIssueItem","issue","_jsxs","className","children","_jsx","href","html_url","target","rel","title","style","backgroundColor","onClick","removeTrackedIssue","issueNumber","handleRemoveIssue","labels","map","label","index","color","id","renderPRItem","pr","removeTrackedPR","prNumber","handleRemovePR","linkedIssues","githubService","isAuth","syncTrackedItems","disabled","_repositoryFilters$re","checked","hidden","onChange","setRepositoryVisibility","handleRepositoryFilterChange","htmlFor","value","sortedItems","UN_LANGUAGES","code","flag","ADDITIONAL_LANGUAGES","englishName","i18n","useTranslation","isOpen","setIsOpen","searchTerm","setSearchTerm","selectedLanguages","setSelectedLanguages","saved","lang","availableLanguages","useMemo","languages","langCode","some","unLang","additionalLang","find","addLang","_objectSpread","searchableLanguages","searchLower","toLowerCase","slice","currentLanguage","language","handleLanguageChange","changeLanguage","placeholder","autoFocus","newSelectedLanguages","setItem","stringify","handleAddLanguage","HELP_STATE_KEY","getSavedHelpState","savedState","parseInt","pageId","helpContent","position","contextData","notificationBadge","user","repo","useParams","showHelp","setShowHelp","helpSticky","setHelpSticky","selectedHelpTopic","setSelectedHelpTopic","isDarkMode","setIsDarkMode","getSavedTheme","cacheClearing","setCacheClearing","cacheCleared","setCacheCleared","showTrackedItems","setShowTrackedItems","trackedItemsCount","setTrackedItemsCount","isAuthenticated","setIsAuthenticated","helpState","setHelpState","mascotImage","useThemeImage","toString","saveHelpState","currentTheme","currentLang","isRTL","document","documentElement","dir","updateAuthAndTrackedCount","authenticated","counts","getTrackedCounts","prevCount","total","interval","setInterval","clearInterval","startBackgroundSync","stopBackgroundSync","dakRepository","enableDAKRepositoryFilter","enableDAKFilter","handleToggleTheme","newTheme","toggleTheme","enhancedHelpTopics","helpContentService","getHelpTopicsForPage","badge","action","handleFlushCache","cacheManagementService","setTimeout","alert","_Fragment","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","handleClick","nextState","src","alt","handleCloseHelp","topic","tutorialId","handleHelpTopicClick","LanguageSelector","HelpModal","helpTopic","handleCloseModal","TrackedItemsViewer","universalTopics","documentation","currentPath","window","location","pathname","docsPath","pathParts","sgexIndex","indexOf","potentialBranch","content","workflows","repoUrl","repositoryConfig","getGitHubUrl","open","bugReport","getFullName","dakFeedback","helpTopics","getUniversalTopics","topics","selectedDak","getHelpTopic","topicId","pageTopics","values","hasHelpTopics","addHelpTopicToPage","getAvailablePages","openDakIssue","issueType","url","owner","openSgexIssue","navigateToWelcomeWithFocus","navigate","patTokenInputRef","isOnWelcomePage","current","focus","dispatchEvent","CustomEvent","focusPATInput","handleNavigationClick","event","path","ctrlKey","metaKey","shouldOpenInNewTab","fullUrl","relativePath","basePath","process","baseUrl","origin","cleanPath","cleanBasePath","endsWith","constructFullUrl","baseImagePath","currentImagePath","setCurrentImagePath","updateImagePath","body","classList","contains","publicUrl","normalizedPath","finalPath","darkImageName","observer","MutationObserver","mutations","mutation","attributeName","observe","attributes","attributeFilter","disconnect","listeners","Set","currentRepository","currentBranch","initialize","notifyListeners","getStorageKey","Error","full_name","getStagingGround","stored","createEmptyStagingGround","_this$currentReposito","now","saveStagingGround","_this$currentReposito2","saveToHistory","updateFile","filePath","metadata","existingFileIndex","findIndex","f","fileObject","removeFile","updateCommitMessage","hasChanges","getChangedFilesCount","clearStagingGround","empty","historyKey","history","getHistory","savedAt","recentHistory","rollbackToSave","save","s","stagingGroundState","_objectWithoutProperties","_excluded","exportStagingGround","_this$currentReposito3","exportedAt","importStagingGround","exportedData","_this$currentReposito4","cleanup","maxAge","keysToRemove","i","addListener","callback","add","delete","contributeFiles","Array","isArray","results","file","result","source","tool","contributedAt","getStatus","_this$currentReposito5","filesCount","tutorials","Map","categories","initializeBuiltInTutorials","registerTutorial","tutorialDefinition","test","validateTutorialDefinition","set","registeredAt","toISOString","getTutorial","get","getTutorialsForPage","tutorial","pages","isTutorialApplicable","priority","getTutorialsByCategory","category","localeCompare","getCategories","processStep","currentStepIndex","userChoice","context","steps","step","isComplete","currentStep","branches","choice","updateContext","assign","targetStep","stepIndex","hasNext","hasPrevious","definition","required","field","branchIndex","requiresAuth","requiresDak","condition","description","next","convertHelpTopicToTutorial","slide","getTutorialStateKey","saveTutorialProgress","progressData","lastAccessed","page","loadTutorialProgress","moduleCache","lazyLoadOctokit","cacheKey","has","Octokit","lazyLoadBpmnModeler","modeler","default","lazyLoadBpmnViewer","viewer","lazyLoadYaml","yamlModule","lazyLoadMDEditor","editor","lazyLoadReactMarkdown","component","lazyLoadAjv","Ajv","lazyLoadAjvFormats","addFormats","lazyLoadDOMPurify","DOMPurify","lazyLoadRehypeRaw","rehypeRaw","processConcurrently","processor","options","concurrency","onProgress","onItemComplete","onItemStart","completed","queue","item","workers","Math","min","fill","shift","worker","ttlMinutes","cache","ttl","_getCacheKey","_isValid","entry","compatible","clear","entries","getStats","size","from","ageMinutes","round","storageKey","expirationHours","generateBrowserFingerprint","canvas","createElement","ctx","getContext","textBaseline","font","fillText","fingerprint","navigator","userAgent","screen","width","height","colorDepth","getTimezoneOffset","toDataURL","hash","charCodeAt","abs","xorCipher","text","String","fromCharCode","validateTokenFormat","token","isValid","reason","cleanToken","trim","match","maskToken","substring","repeat","storeToken","validation","tokenMask","encryptionKey","encryptedToken","storageData","btoa","created","expires","retrieveToken","storedData","clearToken","currentFingerprint","atob","decryptedToken","hasValidToken","getTokenInfo","timeRemaining","max","isExpired","migrateLegacyToken","legacyToken","octokit","permissions","tokenType","createOctokitInstance","auth","authenticate","startTime","tokenProvided","secureTokenStorage","duration","securelyStored","performance","authenticateWithOctokit","octokitInstance","initializeFromStoredToken","tokenData","hasStoredToken","getStoredTokenInfo","checkTokenPermissions","apiCall","response","request","apiResponse","status","rateLimitStart","rateLimit","rest","resources","core","hasCore","rateLimitError","username","apiError","checkRepositoryWritePermissions","getCurrentUser","repos","getCollaboratorPermissionLevel","hasWriteAccess","permission","supportedLevels","_error$response","_error$response2","statusText","headers","userGuidance","checkRepositoryPermissions","checkCommentPermissions","per_page","listForRepo","users","getAuthenticated","getUserOrganizations","orgs","listForAuthenticatedUser","getOrganization","orgLogin","org","getUser","getByUsername","getPublicRepositories","hasMorePages","listForUser","listForOrg","getWHOOrganization","whoData","avatar_url","can_create_repositories","can_create_private_repositories","plan","private_repos","isWHO","checkRateLimit","limit","rate","remaining","reset","used","search","shouldSkipApiCalls","getRepositories","getSmartGuidelinesRepositories","checkSmartGuidelinesCompatibility","retryCount","cachedResult","repositoryCompatibilityCache","cached","skipped","rateLimitCheckError","getContent","isCompatible","decodeURIComponent","escape","delay","resolve","log","publicOctokit","requiresAuthentication","publicApiError","errorInfo","errorType","_categorizeError","retryable","_isRetryableError","skipCompatibilityCheck","smart_guidelines_compatible","smartGuidelinesRepos","getSmartGuidelinesRepositoriesProgressive","onRepositoryFound","onError","currentRepo","progress","scanningErrors","rateLimited","networkErrors","permissionDenied","otherErrors","totalErrors","totalScanned","random","compatibilityResult","smartRepo","validResults","rateLimitedCount","networkErrorCount","hasRetryableErrors","started","getRepository","getBranches","listBranches","createBranch","branchName","fromBranch","refData","git","getRef","ref","createRef","sha","object","getBranch","getWorkflows","actions","listRepoWorkflows","workflow","filename","triggers","getWorkflowRuns","params","workflow_id","listWorkflowRunsForRepo","getWorkflowRunsForWorkflow","listWorkflowRuns","triggerWorkflow","inputs","createWorkflowDispatch","rerunWorkflow","run_id","reRunWorkflow","getWorkflowRunLogs","downloadWorkflowRunLogs","approveWorkflowRun","getCommitDiff","base","head","compareCommits","getCommit","getReleases","listReleases","getLatestRelease","getBpmnFilesRecursive","allFiles","getBpmnFiles","allBpmnFiles","possiblePaths","uniqueFiles","self","getFileContent","timeoutMs","timeoutPromise","_","reject","apiPromise","race","responseTime","encoding","hasContent","Buffer","decodeError","_error$stack","stack","createCommit","latestCommitSha","commitData","commit_sha","baseTreeSha","tree","blobs","blobData","createBlob","mode","treeData","createTree","base_tree","newCommitData","parents","updateRef","author","committer","getRecentCommits","listCommits","commit","email","date","stats","getOpenPullRequestsCount","pulls","list","linkHeader","link","lastPageMatch","getPullRequestForBranch","prs","getPullRequestsForBranch","getPullRequestComments","pullNumber","listReviewComments","pull_number","getPullRequestIssueComments","listComments","issue_number","createPullRequestComment","createComment","getPullRequestTimeline","listEventsForTimeline","mergePullRequest","mergeOptions","commit_title","commit_message","merge_method","merge","checkPullRequestMergePermissions","draft","getOpenIssuesCount","getRepositoryStats","recentCommits","openPRsCount","openIssuesCount","allSettled","openPullRequestsCount","errors","getDirectoryContents","currentFile","createOrUpdateFileContents","unescape","encodeURIComponent","getCommits","since","until","getIssues","milestone","getRepositoryIssues","getForks","listForks","fork","clone_url","pushed_at","stargazers_count","forks_count","open_issues_count","default_branch","private","parent","getPullRequests","direction","locked","closed_at","merged_at","diff_url","patch_url","mergeable","mergeable_state","comments","review_comments","commits","additions","deletions","changed_files","createIssue","assignees","bodyLength","create","getIssue","getPullRequest","searchIssues","query","issuesAndPullRequests","q","order","total_count","incomplete_results","repository_url","searchPullRequests","logout","require","getRepositoryForks","forkCount","checkPullRequestReviewPermissions","createPullRequestReview","createReview","review","submitted_at","approvePullRequest","requestPullRequestChanges","dismissPullRequestReview","reviewId","messageLength","dismissReview","review_id","markPullRequestReadyForReview","update","pullRequest","repositoryFiltersKey","syncInterval","syncIntervalMs","_getStorageKey","_getStoredData","_getRepositoryFilters","_saveRepositoryFilters","_saveStoredData","_getCurrentUsername","getTrackedItems","userItems","_initializeDefaultFilters","filtersUpdated","cleanupNonDAKRepositories","cleaned","validIssues","_isAllowedRepository","validPRs","userFilters","addTrackedIssue","issueData","trackedIssue","trackedAt","_findRelatedPRs","addTrackedPR","prData","existingPR","trackedPR","originalLength","repositoryFullName","_discoverUserActivity","existingItems","newIssues","newPRs","createdIssuesQuery","createdIssuesResult","commentedIssuesQuery","commentedIssuesResult","createdPRsQuery","createdPRsResult","commentedPRsQuery","commentedPRsResult","allFoundIssues","uniqueIssues","_deduplicateItems","allFoundPRs","uniquePRs","existing","discoveredBy","seen","searchQuery","prText","issueRefs","updated","currentIssue","currentPR","newItems","catch","clearTrackedItems","clearAllData","CACHE_KEY_PREFIX","CACHE_EXPIRY_HOURS","cacheExpiryHours","getCacheKey","suffix","baseCacheKey","isStale","getCachedRepositories","_parsed$repositories","cachedData","age","setCachedRepositories","cacheData","clearCache","exists","stale","ageHours","getBookmarks","saveBookmarks","bookmarks","generateBookmarkTitle","pageName","asset","repoName","addBookmark","existingIndex","lastUpdated","bookmark","createdAt","removeBookmark","bookmarkId","filteredBookmarks","isBookmarked","getBookmarkByUrl","getBookmarksGroupedByPage","grouped","clearBookmarks","exportBookmarks","importBookmarks","jsonString","importedBookmarks","mergedBookmarks","imported","_config","_initialized","_initialize","envOwner","envRepo","fullName","getOwner","getName","getApiUrl","getSource","getConfig","setConfig","html2canvas","templates","templateCache","fetchIssueTemplates","_fetchTemplatesFromDirectory","fetchedAt","_getDefaultTemplates","yamlFiles","fileContent","template","_parseIssueTemplate","yamlContent","load","templateType","_getTemplateType","getDefaultTemplates","validations","getTemplates","forceRefresh","generateIssueBody","formData","includeConsole","consoleOutput","screenshotBlob","_field$attributes","truncatedOutput","_truncateConsoleOutput","_generateContextualInfo","maxLength","truncated","fullContext","environment","viewport","innerWidth","innerHeight","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","sgexContext","_extractSGEXContext","_detectCurrentPage","authentication","_isUserAuthenticated","authMode","_getAuthenticationMode","dak","compliance","isEditing","profile","hasQuestionnaires","features","selectedReferencesCount","pathSegments","Boolean","githubToken","hostname","takeScreenshot","mediaDevices","_takeScreenshotWithScreenCapture","_takeScreenshotWithHtml2Canvas","stream","getDisplayMedia","video","mediaSource","srcObject","play","onloadedmetadata","videoWidth","videoHeight","drawImage","getTracks","track","stop","toBlob","onerror","module","ensureHtml2Canvas","scrollX","scrollY","captureConsoleOutput","logs","originalMethods","method","_len","args","_key","apply","arg","toUpperCase","getLogs","submitIssue","trackingError","generateIssueUrl","URLSearchParams","consoleField","contextInfo","maxBodyLength","truncatedBody","onSave","onCancel","canvasRef","useRef","isDrawing","setIsDrawing","currentTool","setCurrentTool","drawColor","setDrawColor","lineWidth","setLineWidth","image","setImage","cropStart","setCropStart","cropEnd","setCropEnd","isCropping","setIsCropping","originalImageData","setOriginalImageData","img","Image","onload","getImageData","URL","createObjectURL","revokeObjectURL","getMousePos","useCallback","rect","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","handleMouseDown","pos","beginPath","moveTo","globalAlpha","globalCompositeOperation","strokeStyle","lineCap","lineJoin","handleMouseMove","clearRect","startX","startY","setLineDash","strokeRect","lineTo","stroke","handleMouseUp","applyCrop","imageData","putImageData","resetImage","onMouseDown","onMouseMove","onMouseUp","handleSave","blob","setTemplates","selectedTemplate","setSelectedTemplate","setFormData","setIncludeConsole","includeScreenshot","setIncludeScreenshot","submitting","setSubmitting","submitted","setSubmitted","submitResult","setSubmitResult","consoleCapture","setConsoleCapture","setScreenshotBlob","screenshotPreview","setScreenshotPreview","takingScreenshot","setTakingScreenshot","showContextPreview","setShowContextPreview","showScreenshotEditor","setShowScreenshotEditor","originalScreenshotBlob","setOriginalScreenshotBlob","loadTemplates","capture","bugReportService","bugTemplate","fetchedTemplates","handleFormChange","fieldId","prev","handleTakeScreenshot","screenshot","previewUrl","urlOpened","fallbackUrl","manual","_submitResult$issue","_submitResult$issue2","_submitResult$issue3","onSubmit","preventDefault","currentConsoleOutput","currentScreenshot","_result$error","newWindow","closed","openError","handleTemplateChange","handleEditScreenshot","handleRemoveScreenshot","dangerouslySetInnerHTML","__html","rows","option","_formData$fieldId","currentValues","newValues","v","renderFormField","generateFallbackUrl","ScreenshotEditor","editedBlob","newPreviewUrl","handleScreenshotEditorCancel","setTutorial","setCurrentStepIndex","tutorialState","setTutorialState","isLoading","setIsLoading","showChoices","setShowChoices","tutorialDef","tutorialService","savedProgress","handleOverlayClick","currentTarget","handleStepNavigation","nextIndex","stepResult","role","renderCurrentStep","hasBranches","handleUserChoice","showMenu","setShowMenu","currentSlide","setCurrentSlide","showBugReportForm","setShowBugReportForm","showEnhancedTutorial","setShowEnhancedTutorial","currentTutorialId","setCurrentTutorialId","convertedTutorial","createContextualUrl","_contextData$selected","urlParams","currentUrl","helpModalInstance","_window$helpModalInst","_window$helpModalInst2","showFallbackInstructions","call","_window$helpModalInst3","_window$helpModalInst4","close","_window$helpModalInst5","_window$helpModalInst6","sgex_dak_repository","_window$helpModalInst7","_window$helpModalInst8","_window$helpModalInst9","_window$helpModalInst0","_window$helpModalInst1","_window$helpModalInst10","existingFallback","querySelector","remove","fallbackOverlay","cssText","fallbackModal","innerHTML","appendChild","addEventListener","handlePrevSlide","handleNextSlide","renderSlideshow","slides","currentSlideData","processedContent","getHelpContent","EnhancedTutorialModal","BugReportForm","handleMenuToggle","handleDocumentation","handleBugReport","handleDAKFeedback","_window$helpModalInst11","handleEmailSupport","topicTitle","subject","getRepositoryKey","_repository$owner","_repository$full_name","getSelectedBranch","getBranchContext","setSelectedBranch","setBranchContext","clearRepositoryBranch","getDefaultBranchName","availableBranches","hasBranchContext","getBranchDisplayInfo","selectedBranch","isDefault","displayText","validateDAKRepository","repositoryExists","checkRepositoryExists","sushiConfigContent","fetchSushiConfig","config","dependencies","branchesToTry","branchError","validateDemoDAKRepository","validNamePattern","whoProfile","getSubscriptions","subscriptions","unshift","isPermanent","addedAt","saveSubscriptions","addSubscription","p","newSubscription","removeSubscription","profileIndex","splice","isSubscribed","getSubscription","ensureCurrentUserSubscribed","userProfile","autoAddVisitedProfile","visitedProfile","isDemo","getSubscriptionsSorted","nameA","nameB","getSubscriptionsForSelection","displayName","isRemovable","updateSubscription","updatedProfile","clearSubscriptions","exportSubscriptions","importSubscriptions","importedSubscriptions","finalSubscriptions","mergedSubscriptions","PAGE_TYPES","PageContext","createContext","usePage","useContext","determinePageType","PageProvider","useLocation","useNavigate","pageState","setPageState","urlContext","getRoutingContext","_location$state","_location$state2","_location$state3","_repository","effectiveUser","effectiveRepo","isNotFound","charAt","dakValidationService","isInvalidDAK","effectiveAsset","handleSubscriptions","currentUser","profileSubscriptionService","loadPageData","checkAuthState","currentAuthState","Provider","USER_TYPES","ACCESS_LEVELS","userType","detectUserType","hasUser","getUserType","isUnauthenticated","getRepositoryAccess","access","hasReadAccess","checkGitHubReadAccess","checkGitHubWriteAccess","hasRepositoryWriteAccess","canSaveToGitHub","canSaveLocal","getUIBehavior","behavior","showEditFeatures","showSaveToGitHub","showSaveLocal","confirmBeforeSave","allowCreateNew","showAccessBadges","getAccessBadge","badges","icon","clearPermissionsCache","accessState","uiBehavior","handleAuthChange","baseURL","workflowFileName","setToken","getHeaders","getWorkflowId","fetch","ok","json","w","getLatestWorkflowRun","isMainBranch","workflowName","runsResponse","runsData","workflow_runs","latestRun","conclusion","getAllWorkflowsForBranch","relevantWorkflows","_latestRun","parsedStatus","parseWorkflowStatus","lastRunId","workflowUrl","runId","displayStatus","badgeClass","getWorkflowStatusForBranches","statusMap","workflowRun","triggerResponse","errorText","workflowId","getActionsURL","getWorkflowURL","checkWorkflowTriggerPermissions","checkWorkflowApprovalPermissions","rerunFailedWorkflow","timeAgo","targetDate","isNaN","getTime","diffMs","diffSeconds","floor","diffMinutes","diffHours","diffDays","diffWeeks","diffMonths","diffYears","formatTimestamp","absolute","relative","full","hour","minute","format","second","timeZoneName","githubActionsService","canTriggerWorkflows","canApproveWorkflows","onWorkflowAction","prInfo","canMergePR","canManagePR","canReviewPR","isMergingPR","isApprovingPR","isRequestingChanges","isMarkingReadyForReview","approvalStatus","approvalMessage","newComment","onMergePR","onApprovePR","onRequestChanges","onMarkReadyForReview","setWorkflows","refreshing","setRefreshing","actionStates","setActionStates","refreshIntervalRef","lastRefresh","setLastRefresh","fetchWorkflows","isRefresh","workflowData","lastRun","setupAutoRefresh","initializeWorkflows","getWorkflowDescription","handleManualRefresh","actionState","persistent","newState","handleTriggerWorkflow","refreshCount","maxRefreshes","approvedWorkflowMonitor","handleApproveWorkflow","handleRerunWorkflow","fontSize","opacity","marginTop","fontFamily","MDEditor","lazy","PreviewBadge","branchInfo","setBranchInfo","setPrInfo","isExpanded","setIsExpanded","isSticky","setIsSticky","setComments","commentsLoading","setCommentsLoading","setNewComment","submittingComment","setSubmittingComment","commentSubmissionStatus","setCommentSubmissionStatus","expandedComments","setExpandedComments","expandedDescription","setExpandedDescription","showMarkdownEditor","setShowMarkdownEditor","workflowStatus","setWorkflowStatus","workflowLoading","setWorkflowLoading","showWorkflowView","setShowWorkflowView","newlyAddedCommentId","setNewlyAddedCommentId","copilotSessionInfo","setCopilotSessionInfo","showCopilotSession","setShowCopilotSession","isWatchingSession","setIsWatchingSession","watchSessionInterval","setWatchSessionInterval","isRefreshingSession","setIsRefreshingSession","lastSessionCheck","setLastSessionCheck","sessionRefreshCount","setSessionRefreshCount","isRefreshingComments","setIsRefreshingComments","ReactMarkdown","setReactMarkdown","setDOMPurify","setRehypeRaw","markdown","domPurify","rehypeRawPlugin","loadMarkdownComponents","canComment","setCanComment","setCanTriggerWorkflows","setCanApproveWorkflows","setCanMergePR","setCanManagePR","setIsMergingPR","setCanReviewPR","setIsApprovingPR","setIsRequestingChanges","setIsMarkingReadyForReview","setApprovalStatus","setApprovalMessage","commentsPage","setCommentsPage","allComments","setAllComments","hasMoreComments","setHasMoreComments","displayedCommentsCount","setDisplayedCommentsCount","showStatusUpdates","setShowStatusUpdates","expandedRef","commentRefreshIntervalRef","workflowRefreshIntervalRef","markdownComponents","props","getCurrentBranch","safeName","fetchPRsForBranch","prError","detectBranchAndPR","handleClickOutside","removeEventListener","REACT_APP_GITHUB_REF_NAME","safeBranchName","fetchCommentsForPR","append","showLoading","perPage","reviewComments","issueComments","timelineEvents","newComments","comment","refreshType","reviewCommentsCount","issueCommentsCount","totalComments","commentDetails","c","_c$user","_c$body","bodyPreview","copilotComments","_c$user2","_c$user3","_c$user3$login","_c$user4","_c$user5","_c$user6","_c$user7","_c$user7$login","_c$body2","_c$user8","_c$body3","allUsernames","_c$user9","relevantTimelineEvents","actor","safeUser","formatTimelineEvent","existingIds","uniqueNewComments","uniqueNewEvents","allNewItems","updatedAllComments","newDisplayCount","allItems","initialDisplayCount","_event$label","_event$label2","_event$event","reviewState","handleWorkflowDashboardAction","actionData","performSessionRefresh","sessionInfo","fetchCopilotSessionInfo","fetchWorkflowStatus","copilotCommentsInfo","sortedCopilotComments","agentSessionUrl","latestSessionDate","sessionComment","sessionUrlPattern","allCommentsSorted","matches","matchAll","commentId","urls","m","sessionUrl","commentDate","latestCopilotComment","copilotResponses","hasActiveCopilot","latestActivity","commentUrl","commentsCount","latestComment","setupWorkflowAutoRefresh","previousStatus","handleCommentToggle","newExpanded","handleCommentSubmit","hasToken","commentLength","submittedComment","submitError","errorMessage","truncateDescription","maxLines","lines","processMarkdownContent","offset","string","beforeMatch","afterMatch","convertGitHubNotationToLinks","convertGitHubNotationToHtml","sanitizeHtmlContent","sanitize","ALLOWED_TAGS","ALLOWED_ATTR","KEEP_CONTENT","ALLOW_DATA_ATTR","truncateComment","handleBadgeClick","stopPropagation","commentPermissions","triggerPermissions","approvalPermissions","mergePermissions","reviewPermissions","writePermissions","checkPermissions","copilotInfo","setupCommentAutoRefresh","latestComments","truncateTitle","Suspense","val","preview","visibleDragBar","hideToolbar","rehypePlugins","components","whiteSpace","handleDescriptionToggle","WorkflowDashboard","commitTitle","commitMessage","refreshedPRs","userMessage","handleWatchSessionToggle","_comment$user","_comment$user$login","_comment$user2","_comment$user3","_comment$user4","_comment$user5","_comment$user5$login","shouldTruncate","isNewComment","viewers","getCommentViewers","mentionMatches","mention","laterComments","laterComment","commentWords","word","_comment$body","safeViewer","isCopilot","nextPage","padding","border","borderRadius","PageHeader","showUserDropdown","setShowUserDropdown","showBookmarkDropdown","setShowBookmarkDropdown","authenticatedUser","setAuthenticatedUser","userAccessService","githubUser","fetchAuthenticatedUser","handleHomeNavigation","handleRemoveBookmark","bookmarkService","currentBookmark","bookmarksGrouped","onKeyDown","background","cursor","display","alignItems","handleGitHubUser","viewBox","d","handleBookmarkCurrentPage","group","handleBookmarkNavigation","handleLogout","setBadge","showTooltip","setShowTooltip","mounted","loadBadge","badgeInfo","unsubscribe","_repository$owner3","customBreadcrumbs","setBranches","showBranchDropdown","setShowBranchDropdown","branchSearchTerm","setBranchSearchTerm","loadingBranches","setLoadingBranches","closest","sortedBranches","fetchBranches","filteredBranches","breadcrumbs","getBreadcrumbs","_repository$owner2","_repository$full_name2","branchPath","ownerLogin","currentPageLabel","newBranch","handleBranchChange","crumb","AccessBadge","handleGitHubRepo","onRetry","pageContext","bugReportSent","setBugReportSent","userExplanation","setUserExplanation","getErrorDisplayInfo","_pageContext$reposito","lowercaseError","suggestions","ContextualHelpMascot","suggestion","handleRetry","reload","handleGoHome","handleSendBugReport","bugReportUrl","generateBugReportUrl","referrer","PageErrorBoundary","React","super","hasError","getDerivedStateFromError","componentDidCatch","render","ErrorHandler","setState","PageLayoutInner","showHeader","showMascot","showBreadcrumbs","_ref2","usePageParams","updateBranch","navigateToUser","userLogin","navigateToDAK","navigateToAsset","assetPath","useDAKParams","pageParams","isSavingLocal","isSavingGitHub","localSaveSuccess","githubSaveSuccess","savedLocally","onSaveLocal","onSaveGitHub","showLocalButton","showGitHubButton","buttonSize","layout","localButtonDisabled","githubButtonDisabled","containerClasses","getButtonClasses","classes","setCommitMessage","onCommit","isSaving","fileName","suggestedMessage","textareaRef","defaultMessage","handleCommit","SAVE_TARGETS","OPERATION_RESULTS","pendingOperations","assetCache","stagingGroundService","getAsset","localFile","hasLocalChanges","saveAssetLocal","savedBy","saveTarget","saveAssetGitHub","updateFileContent","_result$data","_result$data$commit","_result$data2","_result$data2$commit","_result$data3","_result$data3$commit","commitSha","commitUrl","getSaveOptions","canSaveGitHub","showSaveGitHub","restrictions","getSaveRestrictions","localMessage","githubMessage","githubDisabled","getStagingGroundStatus","getChangedFiles","createAsset","initialContent","isNew","batchSaveLocal","assets","every","r","getAccessInfo","saveOptions","originalContent","onContentChange","customSaveToGitHub","showSaveButtons","saveButtonsPosition","pageLayoutProps","setIsSavingLocal","setIsSavingGitHub","saveError","setSaveError","setLocalSaveSuccess","setGithubSaveSuccess","setSaveOptions","showCommitDialog","setShowCommitDialog","dataAccessLayer","loadSaveOptions","handleSaveLocal","handleSaveGitHub","handleCommitToGitHub","handleCancelCommit","saveButtonsProps","PageLayout","SaveButtonsContainer","CommitMessageDialog","metadataKey","getAllLocalChanges","getLocalContent","saveLocal","changes","allMetadata","getAllMetadata","originalPath","removeLocal","getMetadata","getLocalChangesCount","exportLocalChanges","exportData","exported","version","Blob","importLocalChanges","jsonData","importData","existingChanges","existingMetadata","mergedChanges","mergedMetadata","clearAllLocalChanges","getStorageInfo","changesSize","metadataSize","totalSize","formattedSize","formatBytes","bytes","parseFloat","pow","toFixed","TOOL_TYPES","ToolDefinition","route","supportsDemo","requiresDAK","assetTypes","assetPattern","viewerComponent","editorComponent","dashboardComponent","onInit","onAssetLoad","onAssetSave","supportsAsset","_this$assetTypes","RegExp","canAccess","createComponent","toolDef","ToolWrapper","toolDefinition","toolState","setToolState","initializeTool","_pageParams$repositor","assetData","handleAssetSave","newContent","saveType","handleGitHubSave","_pageParams$repositor2","back","renderToolContent","commonProps","onGitHubSave","EditorComponent","_toolState$assets$","AssetEditorLayout","ViewerComponent","DashboardComponent","Component","tools","register","getAll","getByCategory","getByAssetType","getAccessibleTools","accessibleTools"],"sourceRoot":""}