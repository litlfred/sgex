{"version":3,"file":"static/js/483.4295eeba.chunk.js","mappings":"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","sources":["../node_modules/ajv-formats/src/formats.ts","../node_modules/ajv-formats/src/index.ts","../node_modules/ajv-formats/src/limit.ts"],"sourcesContent":["import type {Format, FormatDefinition} from \"ajv\"\nimport type {FormatValidator, FormatCompare} from \"ajv/dist/types\"\n\nexport type FormatMode = \"fast\" | \"full\"\n\nexport type FormatName =\n  | \"date\"\n  | \"time\"\n  | \"date-time\"\n  | \"iso-time\"\n  | \"iso-date-time\"\n  | \"duration\"\n  | \"uri\"\n  | \"uri-reference\"\n  | \"uri-template\"\n  | \"url\"\n  | \"email\"\n  | \"hostname\"\n  | \"ipv4\"\n  | \"ipv6\"\n  | \"regex\"\n  | \"uuid\"\n  | \"json-pointer\"\n  | \"json-pointer-uri-fragment\"\n  | \"relative-json-pointer\"\n  | \"byte\"\n  | \"int32\"\n  | \"int64\"\n  | \"float\"\n  | \"double\"\n  | \"password\"\n  | \"binary\"\n\nexport type DefinedFormats = {\n  [key in FormatName]: Format\n}\n\nfunction fmtDef(\n  validate: RegExp | FormatValidator<string>,\n  compare: FormatCompare<string>\n): FormatDefinition<string> {\n  return {validate, compare}\n}\n\nexport const fullFormats: DefinedFormats = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: fmtDef(date, compareDate),\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: fmtDef(getTime(true), compareTime),\n  \"date-time\": fmtDef(getDateTime(true), compareDateTime),\n  \"iso-time\": fmtDef(getTime(), compareIsoTime),\n  \"iso-date-time\": fmtDef(getDateTime(), compareIsoDateTime),\n  // duration: https://tools.ietf.org/html/rfc3339#appendix-A\n  duration: /^P(?!$)((\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?|(\\d+W)?)$/,\n  uri,\n  \"uri-reference\":\n    /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  \"uri-template\":\n    /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  url: /^(?:https?|ftp):\\/\\/(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)(?:\\.(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  email:\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname:\n    /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$/,\n  ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i,\n  regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  \"json-pointer\": /^(?:\\/(?:[^~/]|~0|~1)*)*$/,\n  \"json-pointer-uri-fragment\": /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  \"relative-json-pointer\": /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n  // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types\n  // byte: https://github.com/miguelmota/is-base64\n  byte,\n  // signed 32 bit integer\n  int32: {type: \"number\", validate: validateInt32},\n  // signed 64 bit integer\n  int64: {type: \"number\", validate: validateInt64},\n  // C-type float\n  float: {type: \"number\", validate: validateNumber},\n  // C-type double\n  double: {type: \"number\", validate: validateNumber},\n  // hint to the UI to hide input strings\n  password: true,\n  // unchecked string payload\n  binary: true,\n}\n\nexport const fastFormats: DefinedFormats = {\n  ...fullFormats,\n  date: fmtDef(/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/, compareDate),\n  time: fmtDef(\n    /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n    compareTime\n  ),\n  \"date-time\": fmtDef(\n    /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n    compareDateTime\n  ),\n  \"iso-time\": fmtDef(\n    /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n    compareIsoTime\n  ),\n  \"iso-date-time\": fmtDef(\n    /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n    compareIsoDateTime\n  ),\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  \"uri-reference\": /^(?:(?:[a-z][a-z0-9+\\-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'wilful violation')\n  email:\n    /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n}\n\nexport const formatNames = Object.keys(fullFormats) as FormatName[]\n\nfunction isLeapYear(year: number): boolean {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)\n}\n\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nfunction date(str: string): boolean {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  const matches: string[] | null = DATE.exec(str)\n  if (!matches) return false\n  const year: number = +matches[1]\n  const month: number = +matches[2]\n  const day: number = +matches[3]\n  return (\n    month >= 1 &&\n    month <= 12 &&\n    day >= 1 &&\n    day <= (month === 2 && isLeapYear(year) ? 29 : DAYS[month])\n  )\n}\n\nfunction compareDate(d1: string, d2: string): number | undefined {\n  if (!(d1 && d2)) return undefined\n  if (d1 > d2) return 1\n  if (d1 < d2) return -1\n  return 0\n}\n\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d(?:\\.\\d+)?)(z|([+-])(\\d\\d)(?::?(\\d\\d))?)?$/i\n\nfunction getTime(strictTimeZone?: boolean): (str: string) => boolean {\n  return function time(str: string): boolean {\n    const matches: string[] | null = TIME.exec(str)\n    if (!matches) return false\n    const hr: number = +matches[1]\n    const min: number = +matches[2]\n    const sec: number = +matches[3]\n    const tz: string | undefined = matches[4]\n    const tzSign: number = matches[5] === \"-\" ? -1 : 1\n    const tzH: number = +(matches[6] || 0)\n    const tzM: number = +(matches[7] || 0)\n    if (tzH > 23 || tzM > 59 || (strictTimeZone && !tz)) return false\n    if (hr <= 23 && min <= 59 && sec < 60) return true\n    // leap second\n    const utcMin = min - tzM * tzSign\n    const utcHr = hr - tzH * tzSign - (utcMin < 0 ? 1 : 0)\n    return (utcHr === 23 || utcHr === -1) && (utcMin === 59 || utcMin === -1) && sec < 61\n  }\n}\n\nfunction compareTime(s1: string, s2: string): number | undefined {\n  if (!(s1 && s2)) return undefined\n  const t1 = new Date(\"2020-01-01T\" + s1).valueOf()\n  const t2 = new Date(\"2020-01-01T\" + s2).valueOf()\n  if (!(t1 && t2)) return undefined\n  return t1 - t2\n}\n\nfunction compareIsoTime(t1: string, t2: string): number | undefined {\n  if (!(t1 && t2)) return undefined\n  const a1 = TIME.exec(t1)\n  const a2 = TIME.exec(t2)\n  if (!(a1 && a2)) return undefined\n  t1 = a1[1] + a1[2] + a1[3]\n  t2 = a2[1] + a2[2] + a2[3]\n  if (t1 > t2) return 1\n  if (t1 < t2) return -1\n  return 0\n}\n\nconst DATE_TIME_SEPARATOR = /t|\\s/i\nfunction getDateTime(strictTimeZone?: boolean): (str: string) => boolean {\n  const time = getTime(strictTimeZone)\n\n  return function date_time(str: string): boolean {\n    // http://tools.ietf.org/html/rfc3339#section-5.6\n    const dateTime: string[] = str.split(DATE_TIME_SEPARATOR)\n    return dateTime.length === 2 && date(dateTime[0]) && time(dateTime[1])\n  }\n}\n\nfunction compareDateTime(dt1: string, dt2: string): number | undefined {\n  if (!(dt1 && dt2)) return undefined\n  const d1 = new Date(dt1).valueOf()\n  const d2 = new Date(dt2).valueOf()\n  if (!(d1 && d2)) return undefined\n  return d1 - d2\n}\n\nfunction compareIsoDateTime(dt1: string, dt2: string): number | undefined {\n  if (!(dt1 && dt2)) return undefined\n  const [d1, t1] = dt1.split(DATE_TIME_SEPARATOR)\n  const [d2, t2] = dt2.split(DATE_TIME_SEPARATOR)\n  const res = compareDate(d1, d2)\n  if (res === undefined) return undefined\n  return res || compareTime(t1, t2)\n}\n\nconst NOT_URI_FRAGMENT = /\\/|:/\nconst URI =\n  /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i\n\nfunction uri(str: string): boolean {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str)\n}\n\nconst BYTE = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm\n\nfunction byte(str: string): boolean {\n  BYTE.lastIndex = 0\n  return BYTE.test(str)\n}\n\nconst MIN_INT32 = -(2 ** 31)\nconst MAX_INT32 = 2 ** 31 - 1\n\nfunction validateInt32(value: number): boolean {\n  return Number.isInteger(value) && value <= MAX_INT32 && value >= MIN_INT32\n}\n\nfunction validateInt64(value: number): boolean {\n  // JSON and javascript max Int is 2**53, so any int that passes isInteger is valid for Int64\n  return Number.isInteger(value)\n}\n\nfunction validateNumber(): boolean {\n  return true\n}\n\nconst Z_ANCHOR = /[^\\\\]\\\\Z/\nfunction regex(str: string): boolean {\n  if (Z_ANCHOR.test(str)) return false\n  try {\n    new RegExp(str)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n","import {\n  DefinedFormats,\n  FormatMode,\n  FormatName,\n  formatNames,\n  fastFormats,\n  fullFormats,\n} from \"./formats\"\nimport formatLimit from \"./limit\"\nimport type Ajv from \"ajv\"\nimport type {Plugin, Format} from \"ajv\"\nimport {_, Name} from \"ajv/dist/compile/codegen\"\n\nexport {FormatMode, FormatName} from \"./formats\"\nexport {LimitFormatError} from \"./limit\"\nexport interface FormatOptions {\n  mode?: FormatMode\n  formats?: FormatName[]\n  keywords?: boolean\n}\n\nexport type FormatsPluginOptions = FormatName[] | FormatOptions\n\nexport interface FormatsPlugin extends Plugin<FormatsPluginOptions> {\n  get: (format: FormatName, mode?: FormatMode) => Format\n}\n\nconst fullName = new Name(\"fullFormats\")\nconst fastName = new Name(\"fastFormats\")\n\nconst formatsPlugin: FormatsPlugin = (\n  ajv: Ajv,\n  opts: FormatsPluginOptions = {keywords: true}\n): Ajv => {\n  if (Array.isArray(opts)) {\n    addFormats(ajv, opts, fullFormats, fullName)\n    return ajv\n  }\n  const [formats, exportName] =\n    opts.mode === \"fast\" ? [fastFormats, fastName] : [fullFormats, fullName]\n  const list = opts.formats || formatNames\n  addFormats(ajv, list, formats, exportName)\n  if (opts.keywords) formatLimit(ajv)\n  return ajv\n}\n\nformatsPlugin.get = (name: FormatName, mode: FormatMode = \"full\"): Format => {\n  const formats = mode === \"fast\" ? fastFormats : fullFormats\n  const f = formats[name]\n  if (!f) throw new Error(`Unknown format \"${name}\"`)\n  return f\n}\n\nfunction addFormats(ajv: Ajv, list: FormatName[], fs: DefinedFormats, exportName: Name): void {\n  ajv.opts.code.formats ??= _`require(\"ajv-formats/dist/formats\").${exportName}`\n  for (const f of list) ajv.addFormat(f, fs[f])\n}\n\nmodule.exports = exports = formatsPlugin\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default formatsPlugin\n","import type Ajv from \"ajv\"\nimport type {\n  Plugin,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  Code,\n  Name,\n  ErrorObject,\n} from \"ajv\"\nimport type {AddedFormat} from \"ajv/dist/types\"\nimport type {Rule} from \"ajv/dist/compile/rules\"\nimport {KeywordCxt} from \"ajv\"\nimport {_, str, or, getProperty, operators} from \"ajv/dist/compile/codegen\"\n\ntype Kwd = \"formatMaximum\" | \"formatMinimum\" | \"formatExclusiveMaximum\" | \"formatExclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst ops = operators\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  formatMaximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  formatMinimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  formatExclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  formatExclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitFormatError = ErrorObject<Kwd, {limit: string; comparison: Comparison}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`should be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nexport const formatLimitDefinition: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {gen, data, schemaCode, keyword, it} = cxt\n    const {opts, self} = it\n    if (!opts.validateFormats) return\n\n    const fCxt = new KeywordCxt(it, (self.RULES.all.format as Rule).definition, \"format\")\n    if (fCxt.$data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fmt = gen.const(\"fmt\", _`${fmts}[${fCxt.schemaCode}]`)\n      cxt.fail$data(\n        or(\n          _`typeof ${fmt} != \"object\"`,\n          _`${fmt} instanceof RegExp`,\n          _`typeof ${fmt}.compare != \"function\"`,\n          compareCode(fmt)\n        )\n      )\n    }\n\n    function validateFormat(): void {\n      const format = fCxt.schema as string\n      const fmtDef: AddedFormat | undefined = self.formats[format]\n      if (!fmtDef || fmtDef === true) return\n      if (\n        typeof fmtDef != \"object\" ||\n        fmtDef instanceof RegExp ||\n        typeof fmtDef.compare != \"function\"\n      ) {\n        throw new Error(`\"${keyword}\": format \"${format}\" does not define \"compare\" function`)\n      }\n      const fmt = gen.scopeValue(\"formats\", {\n        key: format,\n        ref: fmtDef,\n        code: opts.code.formats ? _`${opts.code.formats}${getProperty(format)}` : undefined,\n      })\n\n      cxt.fail$data(compareCode(fmt))\n    }\n\n    function compareCode(fmt: Name): Code {\n      return _`${fmt}.compare(${data}, ${schemaCode}) ${KWDs[keyword as Kwd].fail} 0`\n    }\n  },\n  dependencies: [\"format\"],\n}\n\nconst formatLimitPlugin: Plugin<undefined> = (ajv: Ajv): Ajv => {\n  ajv.addKeyword(formatLimitDefinition)\n  return ajv\n}\n\nexport default formatLimitPlugin\n"],"names":["fmtDef","validate","compare","exports","date","compareDate","time","getTime","compareTime","getDateTime","compareDateTime","compareIsoTime","compareIsoDateTime","duration","uri","str","NOT_URI_FRAGMENT","test","URI","url","email","hostname","ipv4","ipv6","regex","Z_ANCHOR","RegExp","e","uuid","byte","BYTE","lastIndex","int32","type","value","Number","isInteger","MAX_INT32","MIN_INT32","int64","float","validateNumber","double","password","binary","_objectSpread","fullFormats","Object","keys","DATE","DAYS","matches","exec","year","month","day","isLeapYear","d1","d2","TIME","strictTimeZone","hr","min","sec","tz","tzSign","tzH","tzM","utcMin","utcHr","s1","s2","t1","Date","valueOf","t2","a1","a2","DATE_TIME_SEPARATOR","dateTime","split","length","dt1","dt2","res","undefined","formats_1","require","limit_1","codegen_1","fullName","Name","fastName","formatsPlugin","ajv","opts","arguments","keywords","Array","isArray","addFormats","formats","exportName","mode","fastFormats","formatNames","default","list","fs","_a","_b","code","_","_templateObject","_taggedTemplateLiteral","f","addFormat","get","name","Error","concat","module","defineProperty","ajv_1","ops","operators","KWDs","formatMaximum","okStr","ok","LTE","fail","GT","formatMinimum","GTE","LT","formatExclusiveMaximum","formatExclusiveMinimum","error","message","_ref","keyword","schemaCode","params","_ref2","_templateObject2","schemaType","$data","cxt","gen","data","it","self","validateFormats","fCxt","KeywordCxt","RULES","all","format","definition","compareCode","fmt","_templateObject8","fmts","scopeValue","ref","const","_templateObject3","fail$data","or","_templateObject4","_templateObject5","_templateObject6","validate$DataFormat","schema","key","_templateObject7","getProperty","validateFormat","dependencies","addKeyword","formatLimitDefinition"],"sourceRoot":""}