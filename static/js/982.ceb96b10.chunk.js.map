{"version":3,"file":"static/js/982.ceb96b10.chunk.js","mappings":"oNAMA,MAqEA,EArEiBA,KACf,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAyDjB,OAvDAC,EAAAA,EAAAA,WAAU,KA6BR,IA5BuBC,MACrB,MAAMC,GAAaC,EAAAA,EAAAA,IAAYL,EAASM,UAExC,GAAIF,GAAcA,EAAWG,QAAS,CACpC,MAAM,UAAEC,EAAS,KAAEC,EAAI,KAAEC,EAAI,OAAEC,EAAM,UAAEC,GAAcR,EAErDS,QAAQC,IAAI,mDAAoD,CAC9DN,YAAWC,OAAMC,OAAMC,SAAQC,cAIjC,IAAIG,EAAU,IAAAC,OAAOR,EAAS,KAAAQ,OAAIP,EAAI,KAAAO,OAAIN,GAU1C,OATIC,IACFI,GAAU,IAAAC,OAAQL,GACdC,EAAUK,OAAS,IACrBF,GAAU,IAAAC,OAAQJ,EAAUM,KAAK,QAIrCL,QAAQC,IAAI,6CAA8CC,GAC1DjB,EAASiB,EAAY,CAAEI,SAAS,KACzB,CACT,CAEA,OAAO,GAIJhB,GAAkB,CAErB,GAA0B,gBAAtBH,EAASM,SAGX,OAFAO,QAAQC,IAAI,4EACZhB,EAAS,IAAK,CAAEqB,SAAS,IAK3B,MAAMC,EAAkBC,EAAAA,EAAcC,SAGhCC,EAAgC,aAAAP,OACrBhB,EAASM,SADHc,EACW,kEACA,6EAElCP,QAAQC,IAAI,0EAEZhB,EAAS,IAAK,CACZqB,SAAS,EACTK,MAAO,CAAED,mBAEb,GACC,CAACzB,EAAUE,EAASM,YAIrBmB,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,SAAS,YAAWC,UAC9BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,oBACJH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,qC","sources":["components/NotFound.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { PageLayout } from './framework';\nimport githubService from '../services/githubService';\nimport { parseDAKUrl } from '../services/routingContextService';\n\nconst NotFound = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const tryParseDAKUrl = () => {\n      const dakUrlInfo = parseDAKUrl(location.pathname);\n      \n      if (dakUrlInfo && dakUrlInfo.isValid) {\n        const { component, user, repo, branch, assetPath } = dakUrlInfo;\n        \n        console.log('NotFound: Attempting to parse potential DAK URL:', {\n          component, user, repo, branch, assetPath\n        });\n        \n        // Try to navigate to the parsed route\n        let targetPath = `/${component}/${user}/${repo}`;\n        if (branch) {\n          targetPath += `/${branch}`;\n          if (assetPath.length > 0) {\n            targetPath += `/${assetPath.join('/')}`;\n          }\n        }\n        \n        console.log('NotFound: Redirecting to parsed DAK route:', targetPath);\n        navigate(targetPath, { replace: true });\n        return true; // Successfully parsed and redirected\n      }\n      \n      return false; // Could not parse as DAK URL\n    };\n\n    // First try to parse as a DAK URL\n    if (!tryParseDAKUrl()) {\n      // Special case: index.html should silently redirect to welcome page\n      if (location.pathname === '/index.html') {\n        console.log('NotFound: index.html accessed, silently redirecting to welcome page');\n        navigate('/', { replace: true });\n        return;\n      }\n      \n      // Fall back to original behavior if URL doesn't match DAK patterns\n      const isAuthenticated = githubService.isAuth();\n      \n      // Create appropriate warning message\n      const warningMessage = isAuthenticated\n        ? `The page \"${location.pathname}\" could not be found. You've been redirected to the home page.`\n        : `The page \"${location.pathname}\" could not be found. Please sign in or try the demo mode to get started.`;\n\n      console.log('NotFound: Could not parse as DAK URL, redirecting to home with warning');\n      // Redirect to landing page with warning message\n      navigate('/', {\n        replace: true,\n        state: { warningMessage }\n      });\n    }\n  }, [navigate, location.pathname]);\n\n  // Show temporary message while redirecting\n  return (\n    <PageLayout pageName=\"not-found\">\n      <div className=\"not-found-page\">\n        <h1>Page Not Found</h1>\n        <p>Redirecting to home page...</p>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default NotFound;"],"names":["NotFound","navigate","useNavigate","location","useLocation","useEffect","tryParseDAKUrl","dakUrlInfo","parseDAKUrl","pathname","isValid","component","user","repo","branch","assetPath","console","log","targetPath","concat","length","join","replace","isAuthenticated","githubService","isAuth","warningMessage","state","_jsx","PageLayout","pageName","children","_jsxs","className"],"sourceRoot":""}